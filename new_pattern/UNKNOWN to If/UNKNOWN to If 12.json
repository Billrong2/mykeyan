{"UNKNOWN to If":[{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["baubles.api.BaublesApi.getBaubles(player).getStackInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((stack == null) || (!((stack.getItem()) instanceof makeo.gadomancy.common.items.baubles.ItemFamiliar))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5976/buggy-version/src.main.java.makeo.gadomancy.client.util.FamiliarHandlerClient.java", "BodyUseAPI": [], "Fixed commit": "c051aa4b2e4451c8400d2671c1c363582fce77e9", "Url": "https://api.github.com/repos/makeoo/Gadomancy", "Date": "2015-11-03T16:58:49Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sr.getStreamScope().getDestinationEntityId()) == null) { sr.getStreamScope().setDestinationEntityId(sr.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5415/buggy-version/server.src.main.java.org.eurekastreams.server.persistence.mappers.db.FindOrInsertSharedResourceByUniqueKeyDbMapper.java", "BodyUseAPI": ["sr.getStreamScope().setDestinationEntityId(sr.getId())", "org.eurekastreams.server.domain.stream.SharedResource.getStreamScope()", "org.eurekastreams.server.domain.stream.SharedResource.getId()"], "Fixed commit": "436fae0080e0dce3aa68f09b4839eec5775ed6a4", "Url": "https://api.github.com/repos/lmco/eurekastreams", "Date": "2011-04-06T12:40:19Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (userVSDataMap.containsKey(\"representative\")) ((org.votingsystem.model.GroupVS) (userVS)).setRepresentative(org.votingsystem.model.UserVS.parse(((java.util.Map) (userVSDataMap.get(\"representative\")))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5443/buggy-version/VotingSystemLibrary.src.main.java.org.votingsystem.model.UserVS.java", "BodyUseAPI": ["java.util.Map.get(java.lang.String)", "org.votingsystem.model.UserVS.setRepresentative(org.votingsystem.model.UserVS)", "org.votingsystem.model.UserVS.parse(java.lang.Object)"], "Fixed commit": "f4f7019456505bfa551fe900ef24825dc57d974e", "Url": "https://api.github.com/repos/votingsystem/votingsystem", "Date": "2014-10-21T21:17:34Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (statusInfo.equals(\"content-is-empty\")) { throw new AlchemyAPIException(((\"statusInfo: \" + statusInfo) + \". Your text is empty.\")); }else if (statusInfo.equals(\"daily-transaction-limit-exceeded\")) { throw new AlchemyAPIException(((\"statusInfo: \" + statusInfo) + \". Used up the free 1000 daily transactions\")); }else { throw new AlchemyAPIException(\"Unknown status info returned by AlchemyAPI.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8592/buggy-version/src.AlchemyAPIHandler.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "667f464ce4cb0ce4b44237c099be13cd3a5f5a20", "Url": "https://api.github.com/repos/SangChanKim/instagram-capitalone", "Date": "2015-10-28T17:39:16Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nozz.scripts.PlayersOnlineScripts.showNumbers) nozz.gui.GuiPlayersOnline.showNumbersBox.setSelected(true); else nozz.gui.GuiPlayersOnline.showNumbersBox.setSelected(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6207/buggy-version/src.nozz.gui.GuiPlayersOnline.java", "BodyUseAPI": [], "Fixed commit": "ea6a6963d2ecf79452d0e0cb98b099e32e81b298", "Url": "https://api.github.com/repos/N0zz/OTAdmin", "Date": "2014-05-13T17:22:20Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((k.action) == \"jump\") { justJumped = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7096/buggy-version/src.HivoltsGame.java", "BodyUseAPI": [], "Fixed commit": "61195c03d9348029c40285487e89c279a003bb70", "Url": "https://api.github.com/repos/cdrebin/Hivolts", "Date": "2015-10-08T18:27:44Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (justJumped == false) { int x = ((int) (((java.lang.Math.random()) * 9) + 1)); int y = ((int) (((java.lang.Math.random()) * 9) + 1)); mho.setXCoord(x); mho.setYCoord(y); justJumped = true; }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7096/buggy-version/src.HivoltsGame.java", "BodyUseAPI": [], "Fixed commit": "61195c03d9348029c40285487e89c279a003bb70", "Url": "https://api.github.com/repos/cdrebin/Hivolts", "Date": "2015-10-08T18:27:44Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (form.isModified()) { if (!(form.adPic.isEmpty())) { java.lang.String picture = com.zhanghui.appface.common.UpLoads.upload(form.adPic, UploadType.PIC); adManage.setPicture(picture); } if (!(form.adIcon.isEmpty())) { java.lang.String banner = com.zhanghui.appface.common.UpLoads.upload(form.adIcon, UploadType.ICON); adManage.setBanner(banner); } }else { if (!(form.adPic.isEmpty())) { java.lang.String picture = com.zhanghui.appface.common.UpLoads.upload(form.adPic, UploadType.PIC); adManage.setPicture(picture); }else { adManage.setPicture(\"\ufffd\ufffd\"); } if (!(form.adIcon.isEmpty())) { java.lang.String banner = com.zhanghui.appface.common.UpLoads.upload(form.adIcon, UploadType.ICON); adManage.setBanner(banner); }else { adManage.setBanner(\"\ufffd\ufffd\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/494/buggy-version/src.com.zhanghui.appface.mvc.AdManageController.java", "BodyUseAPI": ["com.zhanghui.appface.common.UpLoads.upload(org.springframework.web.multipart.MultipartFile,UploadType.ICON)", "com.zhanghui.appface.common.UpLoads.upload(org.springframework.web.multipart.MultipartFile,UploadType.ICON)", "org.springframework.web.multipart.MultipartFile.isEmpty()", "org.springframework.web.multipart.MultipartFile.isEmpty()", "org.springframework.web.multipart.MultipartFile.isEmpty()", "com.zhanghui.appface.common.UpLoads.upload(org.springframework.web.multipart.MultipartFile,UploadType.PIC)", "com.zhanghui.appface.common.UpLoads.upload(org.springframework.web.multipart.MultipartFile,UploadType.PIC)", "org.springframework.web.multipart.MultipartFile.isEmpty()"], "Fixed commit": "0eab33174dba387159e659919ee8cb8c1d5d9629", "Url": "https://api.github.com/repos/tuziilm/appface", "Date": "2015-05-21T07:57:31Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (quirksMode == (org.sql2o.QuirksMode.DB2)) { colName = metadata.getColumnName(colIdx); }else { colName = metadata.getColumnLabel(colIdx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3635/buggy-version/src.main.java.org.sql2o.data.TableFactory.java", "BodyUseAPI": [], "Fixed commit": "3e25583f4828c28999b5a1e20571f82bb928fd49", "Url": "https://api.github.com/repos/aaberg/sql2o", "Date": "2013-02-20T13:27:03Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.connection.getSql2o().quirksMode) == (QuirksMode.DB2)) { colName = meta.getColumnName(colIdx); }else { colName = meta.getColumnLabel(colIdx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3635/buggy-version/src.main.java.org.sql2o.Query.java", "BodyUseAPI": [], "Fixed commit": "3e25583f4828c28999b5a1e20571f82bb928fd49", "Url": "https://api.github.com/repos/aaberg/sql2o", "Date": "2013-02-20T13:27:03Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (updates.isEmpty()) return files;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6328/buggy-version/api.src.main.java.com.vinumeris.updatefx.Updater.java", "BodyUseAPI": [], "Fixed commit": "f8505948c776f0e7bd40a9af6a5711bf02e912be", "Url": "https://api.github.com/repos/vinumeris/updatefx", "Date": "2014-09-12T13:29:58Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Node.closestPrecedingFinger(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((p.getId()) == (guid)) { p = closestPrecedingFinger(p.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3630/buggy-version/new_prototype.Node.java", "BodyUseAPI": ["Node.closestPrecedingFinger(p.getId())", "FingeredNode.getId()"], "Fixed commit": "dabe8ba4072d9f0c0bbee4e727a932a5f0b5663d", "Url": "https://api.github.com/repos/Box-Of-Hats/Group13_-_Decentralised_DNS", "Date": "2016-04-28T10:37:25Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hex.drf.Job.isRunning(self())) { model = doScoring(model, fr, ktrees, tid, tstats, true, (!(hasValidation())), build_tree_one_node); assert (!(importance)) || ((_treeMeasuresOnOOB.npredictors()) == (_treeMeasuresOnSOOB[0].npredictors())) : \"Missing some tree votes in variable importance voting?!\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2068/buggy-version/src.main.java.hex.drf.DRF.java", "BodyUseAPI": [], "Fixed commit": "a71ee4cdc96f1b93664d15992f03580079911c5e", "Url": "https://api.github.com/repos/0xdata/h2o", "Date": "2014-07-24T19:20:34Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hex.gbm.Job.isRunning(self())) { model = doScoring(model, fr, ktrees, tid, tstats, true, false, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2068/buggy-version/src.main.java.hex.gbm.GBM.java", "BodyUseAPI": [], "Fixed commit": "a71ee4cdc96f1b93664d15992f03580079911c5e", "Url": "https://api.github.com/repos/0xdata/h2o", "Date": "2014-07-24T19:20:34Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"false\".equals(createProjectProperty)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3691/buggy-version/org.mwc.debrief.core.src.org.mwc.debrief.core.DebriefPlugin.java", "BodyUseAPI": [], "Fixed commit": "cc9673b34e10a3ccfdcb27c0f6e2e8cee1f713fa", "Url": "https://api.github.com/repos/pecko/debrief", "Date": "2014-10-27T15:21:16Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, org.gridkit.data.extractors.common.CompositeExtractorSet.ValueLink>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (sink != null) { new org.gridkit.data.extractors.common.CompositeExtractorSet.LinkRef(sink, context).push(source); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1906/buggy-version/src.main.java.org.gridkit.data.extractors.common.CompositeExtractorSet.java", "BodyUseAPI": ["org.gridkit.data.extractors.common.CompositeExtractorSet.LinkRef.push(java.lang.Object)"], "Fixed commit": "9dc60905593c4d0faf57248eaae750b14e783b74", "Url": "https://api.github.com/repos/gridkit/binary-extractors", "Date": "2013-12-20T14:53:53Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((model.getEditCurrencyType()) == \"JPY\") { balance = accountManager.util.CurrencyConverter.usdToJpy(balance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4480/buggy-version/src.accountManager.view.AccountView.java", "BodyUseAPI": [], "Fixed commit": "1de9c5b2716ded1cc5f8715a50a0543418153015", "Url": "https://api.github.com/repos/martip23/accountManager", "Date": "2017-11-26T22:31:23Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((model.getEditCurrencyType()) == \"EUR\") { balance = accountManager.util.CurrencyConverter.usdToEur(balance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4480/buggy-version/src.accountManager.view.AccountView.java", "BodyUseAPI": [], "Fixed commit": "1de9c5b2716ded1cc5f8715a50a0543418153015", "Url": "https://api.github.com/repos/martip23/accountManager", "Date": "2017-11-26T22:31:23Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((com.rpsg.lazyFont.LazyFont) (style.font)).isDirty()) { com.rpsg.lazyFont.LabelStyle style2 = new com.rpsg.lazyFont.LabelStyle(style); style2.font = new com.rpsg.lazyFont.LazyFont(((com.rpsg.lazyFont.LazyFont) (style.font))); ((com.rpsg.lazyFont.LazyFont) (style.font)).disposes.add(((com.rpsg.lazyFont.LazyFont) (style2.font))); setStyle(style2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1077/buggy-version/LazyLabel.java", "BodyUseAPI": [], "Fixed commit": "544c926c8b2dbaa7550933a09c8c8854d7726d20", "Url": "https://api.github.com/repos/dingjibang/GDX-lazy-font", "Date": "2015-04-23T01:49:37Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (turn.getPlayer().isHasToCallUno()) { turn.getPlayer().addCardsToHand(this.state.popFromStack(2)); }else if ((this.state.getDrawCounter()) == 0) { turn.getPlayer().addCardsToHand(this.state.popFromStack(1)); }else { turn.getPlayer().addCardsToHand(this.state.popFromStack(this.state.getDrawCounter())); this.state.setDrawCounter(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1093/buggy-version/app.src.main.java.com.gamble.unopp.logic.GameLogic.java", "BodyUseAPI": ["com.gamble.unopp.model.game.Turn.getPlayer()", "turn.getPlayer().addCardsToHand(this.state.popFromStack(this.state.getDrawCounter()))", "turn.getPlayer().addCardsToHand(this.state.popFromStack(1))", "com.gamble.unopp.model.game.Turn.getPlayer()", "turn.getPlayer().addCardsToHand(this.state.popFromStack(2))", "com.gamble.unopp.model.game.Turn.getPlayer()"], "Fixed commit": "93a3bf6ee1ac95dcb7b6c010a7e3ef80505e14b9", "Url": "https://api.github.com/repos/hawk23/unopp", "Date": "2015-05-25T10:06:33Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((line.indexOf(\"//\")) == 0) { continue; }else { line = line.substring(0, line.indexOf(\"//\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6922/buggy-version/src.Main.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "ea0158339d48c03ccbfcd4a3172f58407870b5c1", "Url": "https://api.github.com/repos/UWM-VEX/AutoFramework", "Date": "2016-11-19T20:07:50Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (SolrServerState.ALIVE.equals(wrapper.getState())) { logger.info(\"Marking Solr {} dead. Ping responded {} ...\", wrapper.getServer(), response.getStatus()); wrapper.setState(SolrServerState.DEAD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8705/buggy-version/src.main.java.org.apache.solr.extensions.client.ck.PingAwareSolrServerAliveChecker.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String,wrapper.getServer(),response.getStatus())", "org.apache.solr.extensions.client.SolrServerWrapper.getServer()", "org.apache.solr.extensions.client.SolrServerWrapper.setState(SolrServerState.DEAD)"], "Fixed commit": "ee74bcd51cce3a3807db4098c59361e0dfaae0ce", "Url": "https://api.github.com/repos/shopping24/solr-extensions-client", "Date": "2014-03-26T08:48:27Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toCharArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((chars[i]) == 'o') || ((chars[i]) == 'O')) { sb.append(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5788/buggy-version/src.main.java.ItemGrouping.java", "BodyUseAPI": [], "Fixed commit": "9efd58b555a56ecfb6812b0047333e8e7dd5ad39", "Url": "https://api.github.com/repos/dzygmundfelt/HurtLocker", "Date": "2017-05-31T19:45:20Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.uni.kevintruong.flextime.managers.DatabaseManager.getInstance(com.uni.kevintruong.flextime.activities.MainActivity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((db.getGeoLocations().size()) != 0) { com.uni.kevintruong.flextime.managers.GeofenceManager.getInstance(this, db.mapGeolocationsToGeofences(db.getGeoLocations())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5109/buggy-version/app.src.main.java.com.uni.kevintruong.flextime.activities.MainActivity.java", "BodyUseAPI": ["com.uni.kevintruong.flextime.managers.DatabaseManager.mapGeolocationsToGeofences(db.getGeoLocations())", "com.uni.kevintruong.flextime.managers.DatabaseManager.getGeoLocations()", "com.uni.kevintruong.flextime.managers.GeofenceManager.getInstance(com.uni.kevintruong.flextime.activities.MainActivity,db.mapGeolocationsToGeofences(db.getGeoLocations()))"], "Fixed commit": "1748bbdb6b229141a7adc2cdd16cf4988a6e4768", "Url": "https://api.github.com/repos/kwanGithub/FlexTime", "Date": "2015-11-28T13:14:12Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (properties != null) managerId = properties.getProperty(ConfigurationConstants.XMPP_JID_KEY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/934/buggy-version/src.main.java.org.fogbowcloud.manager.core.plugins.prioritization.TwoFoldPrioritizationPlugin.java", "BodyUseAPI": [], "Fixed commit": "a8b96e2de05e48e712be7b552daa5ffc0a1b8161", "Url": "https://api.github.com/repos/eduardolfalcao/fogbow-manager", "Date": "2017-08-15T21:48:26Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (properties != null) managerId = properties.getProperty(ConfigurationConstants.XMPP_JID_KEY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/934/buggy-version/src.main.java.org.fogbowcloud.manager.core.plugins.benchmarking.VanillaBenchmarkingPlugin.java", "BodyUseAPI": [], "Fixed commit": "a8b96e2de05e48e712be7b552daa5ffc0a1b8161", "Url": "https://api.github.com/repos/eduardolfalcao/fogbow-manager", "Date": "2017-08-15T21:48:26Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (properties != null) managerId = properties.getProperty(ConfigurationConstants.XMPP_JID_KEY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/934/buggy-version/src.main.java.org.fogbowcloud.manager.core.plugins.memberpicker.RoundRobinMemberPickerPlugin.java", "BodyUseAPI": [], "Fixed commit": "a8b96e2de05e48e712be7b552daa5ffc0a1b8161", "Url": "https://api.github.com/repos/eduardolfalcao/fogbow-manager", "Date": "2017-08-15T21:48:26Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(Main.mainFrame,java.lang.String,java.lang.String,int,<nulltype>,<nulltype>,((logicDot.proportion) + \"\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (amountStr != null) amountStr = amountStr.trim();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/751/buggy-version/src.main.java.design.main.ContextMenus.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "e9eaaac624162c4619fda44ec4a6b0ac6a14c559", "Url": "https://api.github.com/repos/danionita/e3tools", "Date": "2016-07-28T05:23:40Z"},
{"Line": "=>772", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((na[0].startsWith(\"1\")) == false) && ((na[0].length()) == 10)) { this.addActionError(\"You can not buy more than 1,000,000,000.\"); isSuccess = -1; return ERROR; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8753/buggy-version/versat.src.com.action.FundAction.java", "BodyUseAPI": [], "Fixed commit": "2cb4f0b419a20fad7f90bacd308e69f8de3cd024", "Url": "https://api.github.com/repos/keweiw/versat", "Date": "2013-02-01T00:07:53Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name.matches(\"[a-zA-Z]*\")) == false) { this.addActionError(\"The name should be all letters!\"); isSuccess = -1; return ERROR; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8753/buggy-version/versat.src.com.action.FundAction.java", "BodyUseAPI": [], "Fixed commit": "2cb4f0b419a20fad7f90bacd308e69f8de3cd024", "Url": "https://api.github.com/repos/keweiw/versat", "Date": "2013-02-01T00:07:53Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.ibuildthecloud.gdapi.context.ApiContext.getContext().getPolicy()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (policy == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3633/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.dao.impl.AuthDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "89f09d325b920e30380cc8690c6d1e174625424d", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-04-07T01:32:49Z"},
{"Line": "=>696", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["miniDB.storage.SelectData.getTargetAttributes()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (targetAttributes.get(0).getAttributeName().equals(\"*\")) { resultTable = t; resultTable.setTableName(\"result\"); return resultTable; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/23/buggy-version/src.miniDB.storage.Storage.java", "BodyUseAPI": [], "Fixed commit": "13cb26806ed56976601c1cedd7893e5ce786d9a6", "Url": "https://api.github.com/repos/a4027971/miniDB", "Date": "2016-04-16T08:25:14Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((fetchRunnable) != null) && ((fetchRunnable.getId()) == id)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7698/buggy-version/fetch.src.main.java.com.tonyodev.fetch.FetchService.java", "BodyUseAPI": [], "Fixed commit": "4816a764179e02c3d08d7b3e33d726ce1035c941", "Url": "https://api.github.com/repos/EslamElMeniawy/Fetch", "Date": "2017-03-02T21:33:47Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(v.isNaN())) { result += v; processed = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/335/buggy-version/ppinot-model.src.main.java.es.us.isa.ppinot.evaluation.Aggregator.java", "BodyUseAPI": [], "Fixed commit": "9fc1db1168e75607a4661c944740c9b2b3a41069", "Url": "https://api.github.com/repos/isa-group/ppinot", "Date": "2016-06-24T15:44:39Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (foundPathVariable && (currentCharacter == ':')) { foundRegularExpression = true; }else if (foundPathVariable && (foundRegularExpression || (currentCharacter == ' '))) { continue; }else if ((i == (path.length())) && (currentCharacter != '/')) { continue; }else { newPath.append(currentCharacter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8721/buggy-version/src.main.java.me.bayes.vertx.vest.util.UriPathUtil.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)"], "Fixed commit": "fa4c068b9bd18875667f6b43ac992862eeee787c", "Url": "https://api.github.com/repos/kevinbayes/vest", "Date": "2013-11-17T13:22:26Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entry.getValue().getType().equals(\"LOST\")) { personalLost.add(entry.getValue()); allItem.add(entry.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8851/buggy-version/App.app.src.main.java.plus1s.app.controllers.SearchActivity.java", "BodyUseAPI": ["java.util.ArrayList<plus1s.app.model.Item>.add(entry.getValue())", "java.util.ArrayList<plus1s.app.model.Item>.add(entry.getValue())", "java.util.Map.Entry<java.lang.String, plus1s.app.model.Item>.getValue()", "java.util.Map.Entry<java.lang.String, plus1s.app.model.Item>.getValue()"], "Fixed commit": "44969697929c0a504d4caa958d2a06a2fe3bd643", "Url": "https://api.github.com/repos/IvoryCandy/Plus1s", "Date": "2017-07-10T02:45:29Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.imcode.imcms.mapping.jpa.doc.FileDocFileRepository.findByDocIdAndVersionNo(docIdentity.getId(),docIdentity.getVersionNo())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fileDocFile.size()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/264/buggy-version/src.main.java.com.imcode.imcms.mapping.jpa.doc.DocRepository.java", "BodyUseAPI": [], "Fixed commit": "59fde40baf65d846d747c2118ca27e2ad9c70b33", "Url": "https://api.github.com/repos/imCodePartnerAB/imcms", "Date": "2015-10-07T13:19:32Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["doc.select(\"div.ismUnit.ismSize2of5.ismLastUnit\").select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (averageScore.isEmpty()) { playerScore = 0; }else { playerScore = java.lang.Integer.parseInt(averageScore.text().replaceAll(\"\\\\D+\", \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8048/buggy-version/src.com.FFLive.Player.java", "BodyUseAPI": ["java.lang.Integer.parseInt(averageScore.text().replaceAll(\"\\\\D+\", \"\"))", "org.jsoup.select.Elements.text()", "averageScore.text().replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "21cc5ac5ab5e2c5ca907b4a0abf65d6005ba9014", "Url": "https://api.github.com/repos/Reaperftw/FFLive", "Date": "2014-09-21T08:40:38Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((split[2]) == null) { split[2] = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7634/buggy-version/Simulator.java", "BodyUseAPI": [], "Fixed commit": "bdbf0f6fa83eb51a14f1998d95d407d86a211790", "Url": "https://api.github.com/repos/U-FFFD/timer", "Date": "2017-03-02T00:34:29Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((split.length) == 2) { theTimer.sendEvent(inputEvent, split[1]); }else { theTimer.sendEvent(inputEvent, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7634/buggy-version/Simulator.java", "BodyUseAPI": ["ChronoTimer.sendEvent(Event,java.lang.String)"], "Fixed commit": "bdbf0f6fa83eb51a14f1998d95d407d86a211790", "Url": "https://api.github.com/repos/U-FFFD/timer", "Date": "2017-03-02T00:34:29Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Simulator.strToEvent(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (e == (Event.EXIT)) { java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7634/buggy-version/Simulator.java", "BodyUseAPI": [], "Fixed commit": "bdbf0f6fa83eb51a14f1998d95d407d86a211790", "Url": "https://api.github.com/repos/U-FFFD/timer", "Date": "2017-03-02T00:34:29Z"},
{"Line": "=>818", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!usedAsRoleName) { c2vEdge.getEnder().removeIcmId(icmId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2344/buggy-version/src.main.java.net.stigmod.service.WorkspaceService.java", "BodyUseAPI": [], "Fixed commit": "8b4ef035a0b28e7a4a0f3ac2c1fc52962cf8a1f5", "Url": "https://api.github.com/repos/Stigmergic-Modeling/Stigmergic-Modeling", "Date": "2016-04-11T23:12:51Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((killer.getItemInHand()) != null) { if (killer.getItemInHand().getItemMeta().getDisplayName().equals(((org.bukkit.ChatColor.GOLD) + \"RageKnife\"))) { event.setDamage(25); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5235/buggy-version/src.org.kwstudios.play.ragemode.events.EventListener.java", "BodyUseAPI": ["killer.getItemInHand().getItemMeta().getDisplayName()", "org.bukkit.entity.Player.getItemInHand()", "killer.getItemInHand().getItemMeta()", "killer.getItemInHand().getItemMeta().getDisplayName().equals(((org.bukkit.ChatColor.GOLD) + \"RageKnife\"))"], "Fixed commit": "f73b59cc932354b7c2a5a14a2c503347d3899589", "Url": "https://api.github.com/repos/KWStudios/RageMode", "Date": "2015-08-07T12:20:40Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["connector01917.Connector.getInstance().doQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rs.first()) { int id = rs.getInt(1); produktbatch.setPbId(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7736/buggy-version/src.daoimpl01917.MYSQLProduktbatchDAO.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(int)"], "Fixed commit": "cd41e6af9dfda9baa1884347b1c316e8107b64d2", "Url": "https://api.github.com/repos/s153086/Database_24", "Date": "2016-04-27T15:46:26Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((intentTaskTitle) != null) { statuses = intentTaskObject.getStatuses(); }else { statuses = new java.util.ArrayList<com.alexkaz.simplytaskmanager.uicomp.TaskStatus>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7399/buggy-version/java.com.alexkaz.simplytaskmanager.AddNewTaskActivity.java", "BodyUseAPI": [], "Fixed commit": "dc55f6c30bac678165663c0df86cfe3e63dfcbc2", "Url": "https://api.github.com/repos/AlexKazmirchuk/SimplyTaskManager", "Date": "2016-09-09T09:42:37Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((amountOfDone) + (amountOfInProcess)) + (amountOfNotCompleted)) == 0) { notCompletedAngle = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7399/buggy-version/java.com.alexkaz.simplytaskmanager.uicomp.PieChartView.java", "BodyUseAPI": [], "Fixed commit": "dc55f6c30bac678165663c0df86cfe3e63dfcbc2", "Url": "https://api.github.com/repos/AlexKazmirchuk/SimplyTaskManager", "Date": "2016-09-09T09:42:37Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jsonElement.getAsJsonObject().get(\"image\").isJsonObject()) { serverBase = apply(((org.jclouds.openstack.nova.v2_0.config.NovaParserModule.ServerAdapter.ServerInternal) (context.deserialize(jsonElement, org.jclouds.openstack.nova.v2_0.config.NovaParserModule.ServerAdapter.ServerInternal.class)))); }else { serverBase = apply(((org.jclouds.openstack.nova.v2_0.config.NovaParserModule.ServerAdapter.ServerInternalWithoutImage) (context.deserialize(jsonElement, org.jclouds.openstack.nova.v2_0.config.NovaParserModule.ServerAdapter.ServerInternalWithoutImage.class)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2715/buggy-version/apis.openstack-nova.src.main.java.org.jclouds.openstack.nova.v2_0.config.NovaParserModule.java", "BodyUseAPI": ["com.google.gson.JsonDeserializationContext.deserialize(com.google.gson.JsonElement,java.lang.Class)", "com.google.gson.JsonDeserializationContext.deserialize(com.google.gson.JsonElement,java.lang.Class)", "org.jclouds.openstack.nova.v2_0.config.NovaParserModule.ServerAdapter.apply(((org.jclouds.openstack.nova.v2_0.config.NovaParserModule.ServerAdapter.ServerInternalWithoutImage) (context.deserialize(jsonElement, org.jclouds.openstack.nova.v2_0.config.NovaParserModule.ServerAdapter.ServerInternalWithoutImage.class))))", "org.jclouds.openstack.nova.v2_0.config.NovaParserModule.ServerAdapter.apply(((org.jclouds.openstack.nova.v2_0.config.NovaParserModule.ServerAdapter.ServerInternal) (context.deserialize(jsonElement, org.jclouds.openstack.nova.v2_0.config.NovaParserModule.ServerAdapter.ServerInternal.class))))"], "Fixed commit": "b317b076542d19046c00dc04ad0f9a8066288b0e", "Url": "https://api.github.com/repos/rackspace/jclouds", "Date": "2014-06-19T20:19:18Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) != 1) { java.lang.System.out.println(sk.upjs.winston.gridsearch.Main.getHelp()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1218/buggy-version/src.main.java.sk.upjs.winston.gridsearch.Main.java", "BodyUseAPI": [], "Fixed commit": "be5d3c2379ed52dc67fb666db43d98623c93b384", "Url": "https://api.github.com/repos/sbocko/WinstonGridSearch", "Date": "2014-07-21T09:49:31Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s1.getNumBoardings()) == 0) { s1.setInitialWaitTimeSeconds(timedelta); s1.incrementWeight((timedelta * (options.waitAtBeginningFactor))); }else { s1.incrementWeight(timedelta); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5914/buggy-version/src.main.java.org.opentripplanner.routing.edgetype.StreetEdge.java", "BodyUseAPI": ["org.opentripplanner.routing.edgetype.StateEditor.setInitialWaitTimeSeconds(long)", "org.opentripplanner.routing.edgetype.StateEditor.incrementWeight(long)", "org.opentripplanner.routing.edgetype.StateEditor.incrementWeight((timedelta * (options.waitAtBeginningFactor)))"], "Fixed commit": "38afa2b476bfa2bd90a8c29f832b74ae0f70f73a", "Url": "https://api.github.com/repos/camsys/OpenTripPlanner", "Date": "2017-02-09T18:29:40Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JList.getSelectedValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (clients.contains(selection)) { clientList.setSelectedValue(selection, true); }else { clientList.setSelectedIndex(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8165/buggy-version/src.dms.assignment.pkg1.Client.java", "BodyUseAPI": ["javax.swing.JList.setSelectedValue(java.lang.String,boolean)"], "Fixed commit": "448dfb1f0d87208ad781d5d3d039fbaa46f78e61", "Url": "https://api.github.com/repos/KaranjitGahunia/DMSAssignment1", "Date": "2017-03-30T02:42:48Z"},
{"Line": "=>1126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedStack.getSeds().isEmpty()) { cfa.vo.iris.gui.NarrowOptionPane.showMessageDialog(null, \"Stack is empty. Please add SEDs to the stack first.\", \"Empty Stack\", NarrowOptionPane.ERROR_MESSAGE); throw new cfa.vo.sedlib.common.SedNoDataException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7347/buggy-version/sed-builder.src.main.java.cfa.vo.sed.science.stacker.SedStackerFrame.java", "BodyUseAPI": [], "Fixed commit": "f8f5b590b39b5e9d62376f9d7a0f4a72d06574e5", "Url": "https://api.github.com/repos/ChandraCXC/iris", "Date": "2015-02-18T16:25:31Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(etagMatcher.hitEnd())) { etags.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7429/buggy-version/servlets.src.main.java.com.meltmedia.cadmium.servlets.BasicFileServlet.java", "BodyUseAPI": [], "Fixed commit": "61ab6f5b31a11775a47a6937f1eb731d3e1d4af7", "Url": "https://api.github.com/repos/meltmedia/cadmium", "Date": "2014-09-11T21:50:59Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (badgeItem.isHidden()) { badgeItem.hide(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4533/buggy-version/bottom-navigation-bar.src.main.java.com.ashokvarma.bottomnavigation.BottomNavigationHelper.java", "BodyUseAPI": ["com.ashokvarma.bottomnavigation.BadgeItem.hide()"], "Fixed commit": "5a214848de3b5d0ff50633157d0ab8312731a83c", "Url": "https://api.github.com/repos/Ashok-Varma/BottomNavigation", "Date": "2016-05-31T06:02:28Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(file.exists())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1878/buggy-version/HubBasics-Spigot.src.main.java.net.notfab.hubbasics.managers.SimpleConfigManager.java", "BodyUseAPI": [], "Fixed commit": "9034fc48f51f0ebd89ad6cd4bf8aeddb6cd7f8d9", "Url": "https://api.github.com/repos/Fabricio20/HubBasics", "Date": "2016-08-10T21:55:01Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((quantity * 50) * type) > (status.freeMemory)) { status.freeMemory = 0; }else { status.freeMemory -= (quantity * 50) * type; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6142/buggy-version/src.homeworks.tablet.TabletController.java", "BodyUseAPI": [], "Fixed commit": "2fbbc0668e5a779835e6274d09b8c7acc64cbbf8", "Url": "https://api.github.com/repos/DmitryPutintsev/BSU-testing", "Date": "2014-04-15T10:30:21Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (src.startsWith(\"api/bennu-portal/configuration/logo\")) { realPath = ((\"data:\" + (org.fenixedu.bennu.portal.domain.PortalConfiguration.getInstance().getLogoType())) + \";base64,\") + (java.util.Base64.getEncoder().encodeToString(org.fenixedu.bennu.portal.domain.PortalConfiguration.getInstance().getLogo())); }else { realPath = servletContext.getResource(src).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1085/buggy-version/src.main.java.org.fenixedu.academic.servlet.ProcessCandidacyPrintAllDocumentsFilter.java", "BodyUseAPI": ["javax.servlet.ServletContext.getResource(java.lang.String)", "servletContext.getResource(src).toString()"], "Fixed commit": "58c9601e2d406ed94bb6cf7fdb2b5c00458ebe54", "Url": "https://api.github.com/repos/FenixEdu/fenixedu-academic", "Date": "2015-08-28T17:20:44Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.winjune.wifiindoor.version.ApkVersionManager.isApkUpdatePending()) { com.winjune.wifiindoor.version.ApkVersionManager.doNewVersionUpdate(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8461/buggy-version/GDSConHand.src.com.winjune.wifiindoor.activity.StartupActivity.java", "BodyUseAPI": [], "Fixed commit": "9d2d0c9ff5db21cdd3e4e442dfa8431df8f3b1fc", "Url": "https://api.github.com/repos/winjunetech/GDSConHandAndroid", "Date": "2014-03-08T05:59:35Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((usr.getName().isEmpty()) || (usr.getPass().isEmpty())) { return edu.hm.management.bib.MediaServiceResult.BADREQUEST; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4857/buggy-version/src.main.java.edu.hm.management.user.AuthenticationImpl.java", "BodyUseAPI": [], "Fixed commit": "ac6bfd9353ba5ed0f82e5805c15f74b8e9f36b93", "Url": "https://api.github.com/repos/abcshmedu/a4-auth-server-innovativeteamname2", "Date": "2017-05-28T14:21:14Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 17) { onError(this, com.example.ben.babywontyoucomemyway.MEDIA_ERROR_UNKNOWN, com.example.ben.babywontyoucomemyway.MEDIA_ERROR_IO); }else { onError(this, com.example.ben.babywontyoucomemyway.MEDIA_ERROR_UNKNOWN, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7936/buggy-version/app.src.main.java.com.example.ben.babywontyoucomemyway.SoundPlayer.java", "BodyUseAPI": [], "Fixed commit": "2b4ac9f9dd6589a5838aeca9def316d8008bf5b3", "Url": "https://api.github.com/repos/BGR360/BabyWontYouComeMyWay", "Date": "2015-10-08T17:41:52Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parent == null) { index = project.workspace.projects.indexOf(vincaElement); }else { index = vincaElement.parent.containerList.indexOf(vincaElement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/434/buggy-version/app.src.main.java.com.example.a21corp.vinca.vincaviews.ContainerView.java", "BodyUseAPI": [], "Fixed commit": "09b8aee28c9b51038fe4c4949205ed8997382063", "Url": "https://api.github.com/repos/21CORP/VINCA", "Date": "2017-01-14T14:38:56Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<?, ?>.getValue()", "java.util.Map<?, ?>.get(tempEntry.getKey())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!((tempActualValue instanceof java.util.Map) && (tempReferenceValue instanceof java.util.Map))) { try { tempConvertedReferenceValue = (tempActualValue != null) ? valueConverter.convertValue(tempActualValue.getClass(), tempReferenceValue, UnresolvableVariableHandling.RESOLVE_TO_NULL_VALUE) : tempReferenceValue; } catch (de.gebit.integrity.utils.ParameterUtil.UnresolvableVariableException exc) { exc.printStackTrace(); } catch (de.gebit.integrity.operations.UnexecutableException exc) { exc.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1128/buggy-version/de.gebit.integrity.runner.src.de.gebit.integrity.runner.comparator.DefaultResultComparator.java", "BodyUseAPI": ["de.gebit.integrity.parameter.conversion.ValueConverter.convertValue(java.lang.Class<? extends java.lang.Object>,java.lang.Object,UnresolvableVariableHandling.RESOLVE_TO_NULL_VALUE)", "java.lang.Object.getClass()"], "Fixed commit": "0ee5d0cdbf96b8eda88f3c93bc58e1448268c6d7", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2013-08-09T11:36:55Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index < 0) { index = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/441/buggy-version/src.ar.edu.itba.imageprocess.Image.java", "BodyUseAPI": [], "Fixed commit": "734397269bc4fb9963211a1bdda5acf341fdb660", "Url": "https://api.github.com/repos/FredGithub/ImageProcess", "Date": "2013-09-18T23:35:07Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cpu.isPresent()) { simulizer.simulation.data.representation.Word rem = simulizer.simulation.cpu.components.ALU.encodeU(((simulizer.simulation.cpu.components.ALU.decodeS(firstValue)) % (simulizer.simulation.cpu.components.ALU.decodeS(secondValue)))); cpu.get().setHi(rem); cpu.get().setLo(quotient); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/868/buggy-version/src.main.java.simulizer.simulation.cpu.components.ALU.java", "BodyUseAPI": ["java.util.Optional<simulizer.simulation.cpu.components.CPU>.get()", "cpu.get().setLo(simulizer.simulation.data.representation.Word)", "cpu.get().setHi(simulizer.simulation.data.representation.Word)", "java.util.Optional<simulizer.simulation.cpu.components.CPU>.get()"], "Fixed commit": "ea5f0c90c3beaee6be6fd18d8004a9d2c548ab72", "Url": "https://api.github.com/repos/Simulizer/Simulizer", "Date": "2016-11-05T10:07:30Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cpu.isPresent()) { simulizer.simulation.data.representation.Word remu = simulizer.simulation.cpu.components.ALU.encodeU(((simulizer.simulation.cpu.components.ALU.decodeU(firstValue)) % (simulizer.simulation.cpu.components.ALU.decodeU(secondValue)))); cpu.get().setHi(remu); cpu.get().setLo(quotientu); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/868/buggy-version/src.main.java.simulizer.simulation.cpu.components.ALU.java", "BodyUseAPI": ["java.util.Optional<simulizer.simulation.cpu.components.CPU>.get()", "cpu.get().setLo(simulizer.simulation.data.representation.Word)", "java.util.Optional<simulizer.simulation.cpu.components.CPU>.get()", "cpu.get().setHi(simulizer.simulation.data.representation.Word)"], "Fixed commit": "ea5f0c90c3beaee6be6fd18d8004a9d2c548ab72", "Url": "https://api.github.com/repos/Simulizer/Simulizer", "Date": "2016-11-05T10:07:30Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["restx.AbstractRequest.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (forwardedHost.isPresent()) { return com.google.common.collect.Iterables.getFirst(com.google.common.base.Splitter.on(\",\").trimResults().split(forwardedHost.get()), getHeader(\"Host\").or(\"\")); }else { return getHeader(\"Host\").or(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6483/buggy-version/restx-core.src.main.java.restx.AbstractRequest.java", "BodyUseAPI": ["com.google.common.base.Splitter.on(\",\").trimResults().split(forwardedHost.get())", "com.google.common.collect.Iterables.getFirst(com.google.common.base.Splitter.on(\",\").trimResults().split(forwardedHost.get()),getHeader(\"Host\").or(\"\"))", "com.google.common.base.Optional<java.lang.String>.get()"], "Fixed commit": "847771d659a0423ea19c159cb9f2ab26b0faa83e", "Url": "https://api.github.com/repos/restx/restx", "Date": "2014-04-05T09:20:14Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((open) && ((playersIn.get(i).amountToCall) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/546/buggy-version/HandOfPoker.java", "BodyUseAPI": [], "Fixed commit": "b76dbf7c47536d5f19c04766c664760032427a65", "Url": "https://api.github.com/repos/COMP30050DHK/PokerBot", "Date": "2017-04-30T20:18:54Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((c.getLstKeyword()) != null) && (!(c.getLstKeyword().isEmpty()))) { keywordSvc.updateID(c.getLstKeyword()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7635/buggy-version/Projects.com.boroborome.ma.logic.src.com.boroborome.ma.logic.impl.MAInformationSvcImpl.java", "BodyUseAPI": ["com.boroborme.ma.model.MAInformationCondition.getLstKeyword()", "com.boroborme.ma.model.svc.IMAKeywordSvc.updateID(c.getLstKeyword())"], "Fixed commit": "a103d6138aff5eb13bb3bc86413f3b5c8bb1536d", "Url": "https://api.github.com/repos/boroborome/MemoryAssitant", "Date": "2014-04-12T16:55:42Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeString.isEmpty()) { timeString = \"00:00\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1399/buggy-version/src.main.java.com.workfront.internship.event_management.common.DateParser.java", "BodyUseAPI": [], "Fixed commit": "cb744c4863c3dd2277e840eadce2dbc41ab3d4d4", "Url": "https://api.github.com/repos/WFTinternship/EventManagement", "Date": "2016-09-21T14:45:56Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((artemisChecker.checkLoadoutStillValid()) && (!(loadout.getUpgrades().hasArtemis()))) { loadout.getUpgrades().setArtemis(((anEvent.getStateChange()) == (java.awt.event.ItemEvent.SELECTED))); }else if (loadout.getUpgrades().hasArtemis()) { loadout.getUpgrades().setArtemis(((anEvent.getStateChange()) == (java.awt.event.ItemEvent.SELECTED))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8813/buggy-version/src.lisong_mechlab.view.LoadoutInfoPanel.java", "BodyUseAPI": ["lisong_mechlab.model.loadout.Loadout.getUpgrades()", "loadout.getUpgrades().setArtemis(boolean)", "loadout.getUpgrades().setArtemis(boolean)", "loadout.getUpgrades().hasArtemis()", "lisong_mechlab.model.loadout.Loadout.getUpgrades()", "lisong_mechlab.model.loadout.Loadout.getUpgrades()"], "Fixed commit": "bc557c96145a103df80f7599044c98ea1cf43595", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2013-09-12T14:18:19Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(atElement())) { throw bomb((((\"Unable to parse element <\" + (e.getName())) + \"> for class \") + (aClass.getSimpleName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/9208/buggy-version/config.config-server.src.com.thoughtworks.go.config.parser.GoConfigClassLoader.java", "BodyUseAPI": [], "Fixed commit": "67bb03e8810efb20168b780d28364f5ab0cf1234", "Url": "https://api.github.com/repos/xli/gocd", "Date": "2016-02-04T02:25:31Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5803/buggy-version/src.main.java.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "7408065de41bb14d0af0832db1bcc15e0a35d451", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAnswer) != (NO_ANSWER)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5130/buggy-version/src.com.jjm.android.quiz.fragment.MultipleChoiceFragment.java", "BodyUseAPI": [], "Fixed commit": "972db08e0512d5700b15cfc178797007a7f058b0", "Url": "https://api.github.com/repos/jjmason/android-quiz", "Date": "2012-12-06T20:57:23Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((processedText.length()) > 0) { processedText = processedText.subSequence(0, ((processedText.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3571/buggy-version/app.src.main.java.com.luorrak.ouroboros.api.CommentParser.java", "BodyUseAPI": ["java.lang.CharSequence.subSequence(int,int)", "java.lang.CharSequence.length()"], "Fixed commit": "0ed2cb61df2ec5d9e063f1a368988d8a7815e6d7", "Url": "https://api.github.com/repos/Luorrak/Ouroboros", "Date": "2016-02-02T09:25:26Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < 0) { channelIndex = 0; }else { channelIndex = i; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2352/buggy-version/src.org.jflicks.ui.view.fe.GridGuidePanel.java", "BodyUseAPI": [], "Fixed commit": "51927b4c9e0bd69806da0b74616dd9c4a2cfe7f4", "Url": "https://api.github.com/repos/djb61230/jflicks", "Date": "2012-04-12T01:50:14Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mcp.mobius.waila.api.IWailaDataAccessor.getTileEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tileEntity.isActive) { currenttip.add(((\"Progress: \" + ((int) ((((theflogat.technomancy.common.tiles.base.TileProcessorBase.maxTime) - (tileEntity.progress)) * 100.0F) / (theflogat.technomancy.common.tiles.base.TileProcessorBase.maxTime)))) + \"%\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7893/buggy-version/src.main.java.theflogat.technomancy.lib.compat.waila.ProcessorHUDHandler.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "23c2a96bc669ab38d7ff477ef1be8fe8cde4d0a9", "Url": "https://api.github.com/repos/Mordenkainen/Technomancy", "Date": "2015-02-24T05:17:32Z"},
{"Line": "=>1706", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hexValue == null) || (hexValue.isEmpty())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4719/buggy-version/Renderer.src.armyc2.c2sd.renderer.utilities.SymbolUtilities.java", "BodyUseAPI": [], "Fixed commit": "d125fc9eb702427b4e933318adc4422728fcda70", "Url": "https://api.github.com/repos/missioncommand/mil-sym-android", "Date": "2015-05-27T14:55:45Z"},
{"Line": "=>737", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (textColor == null) textColor = mSymbol.getLineColor();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4719/buggy-version/Renderer.src.sec.web.render.MultiPointHandler.java", "BodyUseAPI": [], "Fixed commit": "d125fc9eb702427b4e933318adc4422728fcda70", "Url": "https://api.github.com/repos/missioncommand/mil-sym-android", "Date": "2015-05-27T14:55:45Z"},
{"Line": "=>1320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (textColor == null) textColor = mSymbol.getLineColor();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4719/buggy-version/Renderer.src.sec.web.render.MultiPointHandler.java", "BodyUseAPI": [], "Fixed commit": "d125fc9eb702427b4e933318adc4422728fcda70", "Url": "https://api.github.com/repos/missioncommand/mil-sym-android", "Date": "2015-05-27T14:55:45Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((world.getBlockState(pos).getBlock()) == (net.minecraft.init.Blocks.FARMLAND)) { world.setBlockState(pos, joshie.harvest.crops.CropHelper.WET_SOIL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4317/buggy-version/src.main.java.joshie.harvest.crops.block.BlockHFCrops.java", "BodyUseAPI": ["net.minecraft.world.World.setBlockState(net.minecraft.util.math.BlockPos,joshie.harvest.crops.CropHelper.WET_SOIL)"], "Fixed commit": "631e847e4e9314d5b7098c01eaaa6ab5b46fab4a", "Url": "https://api.github.com/repos/PenguinSquad/Harvest-Festival", "Date": "2016-09-18T02:00:04Z"},
{"Line": "=>1701", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((source) == null) ackOpennet(next); else if (origTag.shouldStop()) { origTag.finishedWaitingForOpennet(next); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8882/buggy-version/src.freenet.node.RequestSender.java", "BodyUseAPI": [], "Fixed commit": "a1d163977a91ef005bfcbde5b5436d5dfb6e1414", "Url": "https://api.github.com/repos/Thynix/fred-staging", "Date": "2011-08-16T18:26:03Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ghstudios.android.data.classes.Item.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((type == null) || (type.equals(\"\"))) { type = \"Item\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5093/buggy-version/app.src.main.java.com.ghstudios.android.ui.list.UniversalSearchFragment.java", "BodyUseAPI": [], "Fixed commit": "d54f33d8e6abb226c45f57879aa7a44f0208768b", "Url": "https://api.github.com/repos/gatheringhallstudios/MHGenDatabase", "Date": "2016-07-30T21:59:51Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sta.entity.interfaces.StorageInterface.getTerm(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (term1 == null) { return this.terms.getAvailableDocuments(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5329/buggy-version/src.sta.Indexer.java", "BodyUseAPI": [], "Fixed commit": "20ac3c29dc52586eea5e32eebfac197cf9a64dc7", "Url": "https://api.github.com/repos/MartinM-B/SearchEngine", "Date": "2014-11-06T13:21:37Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nativeInit(src, faces.length, faces)) { result = nativeGetPreviewSize(mPreviewSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7252/buggy-version/src.com.android.gallery3d.filtershow.tools.TruePortraitNativeEngine.java", "BodyUseAPI": [], "Fixed commit": "5e8fbec6930971ea19637870c22cb15554f3b332", "Url": "https://api.github.com/repos/Oreo-onyx/packages_apps_Gallery2", "Date": "2017-08-28T20:53:58Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result) { mSketchBm = android.graphics.BitmapFactory.decodeResource(context.getResources(), R.raw.sketch_bm); }else { mSketchBm = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7252/buggy-version/src.com.android.gallery3d.filtershow.tools.TruePortraitNativeEngine.java", "BodyUseAPI": [], "Fixed commit": "5e8fbec6930971ea19637870c22cb15554f3b332", "Url": "https://api.github.com/repos/Oreo-onyx/packages_apps_Gallery2", "Date": "2017-08-28T20:53:58Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 21) { this.selectedIcon = new com.mikepenz.materialdrawer.holder.ImageHolder(iicon); }else { this.withIconTintingEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5851/buggy-version/library.src.main.java.com.mikepenz.materialdrawer.model.BaseDrawerItem.java", "BodyUseAPI": [], "Fixed commit": "45d4daab45af67ae2cfa500025a945b17e42e76c", "Url": "https://api.github.com/repos/mychaelgo/MaterialDrawer", "Date": "2015-09-01T19:16:22Z"},
{"Line": "=>543", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rPkt.getData()[3]) == 3) { byte[] errorMsg = new byte[rPkt.getLength()]; java.lang.System.arraycopy(rPkt.getData(), 4, errorMsg, 0, ((rPkt.getLength()) - 5)); if (verbose) java.lang.System.out.println(\"Error code 3, disk full\"); java.lang.System.out.println(errorMsg); quit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7388/buggy-version/Server.java", "BodyUseAPI": ["java.net.DatagramPacket.getData()", "java.lang.System.arraycopy(byte[],int,byte[],int,int)", "java.net.DatagramPacket.getLength()", "java.net.DatagramPacket.getLength()"], "Fixed commit": "31ba84264277c257138c5a0bd85864eda028ec7c", "Url": "https://api.github.com/repos/ShadowTaze/RTCSProject", "Date": "2017-05-28T03:04:36Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.getFileName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (null != fileNamePath) { final java.lang.String fileName = fileNamePath.toString(); if (((fileName.startsWith(mavenArtifactId)) && (fileName.endsWith(com.github.sbugat.rundeckmonitor.VersionChecker.JAR_EXTENSION))) && ((null == currentJar) || ((currentJar.compareTo(fileName)) < 0))) { currentJar = fileName; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1543/buggy-version/src.main.java.com.github.sbugat.rundeckmonitor.VersionChecker.java", "BodyUseAPI": ["java.nio.file.Path.toString()"], "Fixed commit": "d56d84c7bd6793d479dce8184bebfc794a164231", "Url": "https://api.github.com/repos/Sylvain-Bugat/RundeckMonitor", "Date": "2015-10-17T14:03:27Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.getFileName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (null != fileNamePath) { final java.lang.String fileName = fileNamePath.toString(); if (fileName.startsWith(mavenArtifactId)) { if (((fileName.endsWith(com.github.sbugat.rundeckmonitor.VersionChecker.JAR_EXTENSION)) && (null != currentJar)) && ((currentJar.compareTo(fileName)) > 0)) { com.github.sbugat.rundeckmonitor.VersionChecker.deleteJar(path); }else if (fileName.endsWith(((com.github.sbugat.rundeckmonitor.VersionChecker.JAR_EXTENSION) + (com.github.sbugat.rundeckmonitor.VersionChecker.TMP_EXTENSION)))) { com.github.sbugat.rundeckmonitor.VersionChecker.deleteJar(path); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1543/buggy-version/src.main.java.com.github.sbugat.rundeckmonitor.VersionChecker.java", "BodyUseAPI": ["java.nio.file.Path.toString()"], "Fixed commit": "d56d84c7bd6793d479dce8184bebfc794a164231", "Url": "https://api.github.com/repos/Sylvain-Bugat/RundeckMonitor", "Date": "2015-10-17T14:03:27Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (minLongitude == 180.0) { if (maxLongitude == 180.0) { return new org.apache.lucene.search.MatchNoDocsQuery(); }else if (maxLongitude < minLongitude) { minLongitude = -180.0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2579/buggy-version/lucene.sandbox.src.java.org.apache.lucene.document.LatLonPoint.java", "BodyUseAPI": [], "Fixed commit": "6d537d2bad64a27927aa7c67c600dee97f79aa2b", "Url": "https://api.github.com/repos/apache/lucene-solr", "Date": "2016-04-07T04:09:56Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (minLatitude == 90.0) { return new org.apache.lucene.search.MatchNoDocsQuery(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2579/buggy-version/lucene.sandbox.src.java.org.apache.lucene.document.LatLonPoint.java", "BodyUseAPI": [], "Fixed commit": "6d537d2bad64a27927aa7c67c600dee97f79aa2b", "Url": "https://api.github.com/repos/apache/lucene-solr", "Date": "2016-04-07T04:09:56Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.lang.System.getProperty(\"java.version\").startsWith(\"1.8\"))) t.stop(new org.aksw.iguana.utils.TimeOutException());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1624/buggy-version/org.aksw.iguana.src.main.java.org.aksw.iguana.benchmark.processor.WarmupProcessor.java", "BodyUseAPI": [], "Fixed commit": "18209fb879ad4d23e1d2fdf18575b7d460f617ab", "Url": "https://api.github.com/repos/dice-group/IGUANA", "Date": "2016-04-14T10:24:47Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((((this.pageIndex) - 1) * (this.pageSize)) >= totalEntries) { throw new javax.ws.rs.NotFoundException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3636/buggy-version/src.main.java.uk.gov.register.presentation.resource.Pagination.java", "BodyUseAPI": [], "Fixed commit": "8c556f42020d26f1865c207b167a48848c781f55", "Url": "https://api.github.com/repos/openregister/presentation", "Date": "2015-09-28T13:00:26Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(input.getText())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (val > 0) { int index = lastFocus.getIndex(); cargo.Item selected = ((cargo.Item) (lastFocus.getItemAtIndex(index))); docked.buy(ship, selected, val); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/102/buggy-version/src.gdi.TradeWindow.java", "BodyUseAPI": ["celestial.Ship.Station.buy(celestial.Ship.Ship,cargo.Item,int)"], "Fixed commit": "580a7bc928acf98ea55826c2907802f6f9138024", "Url": "https://api.github.com/repos/masternerdguy/High-Albedo", "Date": "2013-03-29T02:14:17Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(input.getText())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (val > 0) { int index = lastFocus.getIndex(); cargo.Item selected = ((cargo.Item) (lastFocus.getItemAtIndex(index))); docked.sell(ship, selected, val); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/102/buggy-version/src.gdi.TradeWindow.java", "BodyUseAPI": ["celestial.Ship.Station.sell(celestial.Ship.Ship,cargo.Item,int)"], "Fixed commit": "580a7bc928acf98ea55826c2907802f6f9138024", "Url": "https://api.github.com/repos/masternerdguy/High-Albedo", "Date": "2013-03-29T02:14:17Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.initialComponents) != null) { java.util.ArrayList list = new java.util.ArrayList<com.edulectronics.tinycircuit.Models.Components.Component>(); list.addAll(java.util.Arrays.asList(this.initialComponents)); return list; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4915/buggy-version/app.src.main.java.com.edulectronics.tinycircuit.Models.Scenarios.DesignScenario.java", "BodyUseAPI": [], "Fixed commit": "54bf2f69cf6733271ad91246e5032ed4965b9ef9", "Url": "https://api.github.com/repos/wzwietering/IntroductieProject", "Date": "2016-12-17T17:34:43Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jsonObj.containsKey(\"items\")) { items = jsonObj.get(\"items\"); }else if (jsonObj.containsKey(\"properties\")) { items = jsonObj.get(\"properties\"); }else { throw new java.lang.RuntimeException(\"Uknown Array Type:\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5032/buggy-version/src.main.java.com.siby.generators.JsonFromSchemaGenerator.java", "BodyUseAPI": ["java.util.Map.get(java.lang.String)", "java.util.Map.containsKey(java.lang.String)", "java.util.Map.get(java.lang.String)"], "Fixed commit": "9b659b301225c8045a4fcb864a28f71e7a10127b", "Url": "https://api.github.com/repos/sibyg/generators", "Date": "2016-11-08T14:25:04Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (value.containsKey(\"type\")) { return processSchemaJsonObjectForType(value); }else if (value.containsKey(\"$ref\")) { return processSchemaJsonObjectForRef(value); }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5032/buggy-version/src.main.java.com.siby.generators.JsonFromSchemaGenerator.java", "BodyUseAPI": ["java.util.Map.containsKey(java.lang.String)", "com.siby.generators.JsonFromSchemaGenerator.processSchemaJsonObjectForRef(java.util.Map)", "com.siby.generators.JsonFromSchemaGenerator.processSchemaJsonObjectForType(java.util.Map)"], "Fixed commit": "9b659b301225c8045a4fcb864a28f71e7a10127b", "Url": "https://api.github.com/repos/sibyg/generators", "Date": "2016-11-08T14:25:04Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (encoding == null) { encoding = java.nio.charset.StandardCharsets.UTF_8.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5671/buggy-version/service-map.src.main.java.fi.nls.oskari.wms.GetGtWMSCapabilities.java", "BodyUseAPI": [], "Fixed commit": "0e7e1f08abb06c07e454ee0d0a8b3c11c83061e5", "Url": "https://api.github.com/repos/oskariorg/oskari-server", "Date": "2016-03-15T09:54:29Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sourceforge.pmd.ast.ASTVariableInitializer.getFirstChildOfType(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (givenClassToFactory != null) givenClassToFactory.dump(((stack.peek()) + \">\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7605/buggy-version/ruleset.src.main.java.jp.skypencil.pmd.slf4j.DontPassOtherClassToLoggerFactory.java", "BodyUseAPI": ["net.sourceforge.pmd.ast.ASTClassOrInterfaceType.dump(java.lang.String)"], "Fixed commit": "c3d42fb1efdc738425ea4345da058d13d222bbfb", "Url": "https://api.github.com/repos/eller86/ruleset-for-SLF4J", "Date": "2012-03-18T02:43:48Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (activity != null) { final android.app.ProgressDialog dialog = android.app.ProgressDialog.show(activity, null, null, true, false); dialog.getWindow().setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT)); dialog.setContentView(R.layout.progress_bar); dialog.getWindow().clearFlags(WindowManager.LayoutParams.FLAG_DIM_BEHIND); return dialog; }else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/611/buggy-version/app.src.main.java.saadandaakash.uofmscheduler.Utitilies.Utility.java", "BodyUseAPI": ["android.app.ProgressDialog.show(android.app.Activity,<nulltype>,<nulltype>,boolean,boolean)"], "Fixed commit": "4f84d6bb4425a01b7268c32a9e0100ff842029e7", "Url": "https://api.github.com/repos/sadman98/UofM-Scheduler", "Date": "2017-12-29T20:02:48Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["spim.process.interestpointregistration.optimizationtypes.GlobalOptimizationType.getChannelProcessForChannel(java.util.List<spim.process.interestpointregistration.ChannelProcess>,vd.getViewSetup().getChannel())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (c == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5355/buggy-version/src.main.java.spim.process.interestpointregistration.optimizationtypes.GlobalOptimizationType.java", "BodyUseAPI": [], "Fixed commit": "8dd2c955c2112ac0d8ce14757f06d5a5346b497a", "Url": "https://api.github.com/repos/fiji/SPIM_Registration", "Date": "2015-04-08T12:05:43Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tag.attr(\"name\").isEmpty()) tagName = \"http-equiv\"; else tagName = \"name\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8631/buggy-version/src.Parser.java", "BodyUseAPI": [], "Fixed commit": "52730e304c55211b5394a643187a3c7adabf32eb", "Url": "https://api.github.com/repos/SolanoH/SearchEngine", "Date": "2017-03-12T09:51:40Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((predictions) != null) { return predictions.getSnippetAlerts(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3416/buggy-version/src.boston.Bus.Map.data.MultipleStopLocations.java", "BodyUseAPI": [], "Fixed commit": "69ce5e6ceccd4d4ac0b565f03e7f3542258f1962", "Url": "https://api.github.com/repos/bostonbusmap/bostonbusmap", "Date": "2012-06-12T16:36:27Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((predictions) != null) { return predictions.getSnippetTitle(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3416/buggy-version/src.boston.Bus.Map.data.MultipleStopLocations.java", "BodyUseAPI": [], "Fixed commit": "69ce5e6ceccd4d4ac0b565f03e7f3542258f1962", "Url": "https://api.github.com/repos/bostonbusmap/bostonbusmap", "Date": "2012-06-12T16:36:27Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isBeta()) == false) { if ((predictions) != null) { return predictions.getSnippetPredictions(); }else { return null; } }else { java.lang.StringBuilder ret = new java.lang.StringBuilder(); ret.append(\"<font color='red' size='1'>Commuter rail predictions are experimental</font>\"); if ((predictions) != null) { java.lang.String predictionsString = predictions.getSnippetPredictions(); if (predictionsString != null) { ret.append(\"<br />\").append(predictionsString); } } return ret.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3416/buggy-version/src.boston.Bus.Map.data.MultipleStopLocations.java", "BodyUseAPI": [], "Fixed commit": "69ce5e6ceccd4d4ac0b565f03e7f3542258f1962", "Url": "https://api.github.com/repos/bostonbusmap/bostonbusmap", "Date": "2012-06-12T16:36:27Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((expense.getEnterprise()) == null) { if ((enterprise.getAllRelatedEnterprises().size()) > 1) { expense.setEnterprise(expenseInDB.getEnterprise()); }else { expense.setEnterprise(enterprise); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5736/buggy-version/src.main.java.org.iabako.server.serviceimpl.business.ExpenseServiceImpl.java", "BodyUseAPI": ["org.iabako.server.serviceimpl.business.Expense.setEnterprise(expenseInDB.getEnterprise())", "org.iabako.server.serviceimpl.business.Expense.setEnterprise(org.iabako.shared.entity.user.Enterprise)"], "Fixed commit": "167715982655d79cd3ba360cb03f5a58f1366ffb", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2016-07-12T06:55:39Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (container != null) { compiledPackages = container.getKieBase().getKiePackages(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3911/buggy-version/service.src.main.java.eu.europa.ec.fisheries.uvms.rules.service.bean.FactRuleEvaluator.java", "BodyUseAPI": ["org.kie.api.runtime.KieContainer.getKieBase()", "container.getKieBase().getKiePackages()"], "Fixed commit": "9ef430ea3e8597c0fbcbd5c7055b5e63525090e9", "Url": "https://api.github.com/repos/UnionVMS/UVMS-RulesModule-APP", "Date": "2017-10-10T14:41:07Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((queryParams.containsKey(\"qid\")) && ((queryParams.containsKey(\"var\")) || (queryParams.containsKey(\"facet\")))) { submitInteraction(response, queryParams, configDetails); }else { defaultInteraction(response, queryParams, configDetails); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8327/buggy-version/slap.src.main.java.com.ntechinternational.slap.SlapRestImpl.java", "BodyUseAPI": ["com.ntechinternational.slap.SlapRestImpl.defaultInteraction(com.ntechinternational.slap.SlapResponse,javax.ws.rs.core.MultivaluedMap<java.lang.String, java.lang.String>,com.ntechinternational.slap.ConfigurationMap)", "com.ntechinternational.slap.SlapRestImpl.submitInteraction(com.ntechinternational.slap.SlapResponse,javax.ws.rs.core.MultivaluedMap<java.lang.String, java.lang.String>,com.ntechinternational.slap.ConfigurationMap)"], "Fixed commit": "0a6f60814dddca7d15ea973b84b9c428d8893361", "Url": "https://api.github.com/repos/NTechInternational/slap", "Date": "2014-10-29T01:55:28Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rowType) == null) { java.lang.StringBuilder errMsg = new java.lang.StringBuilder(); for (final org.apache.calcite.rel.RelNode aInput : inputs) { if ((errMsg.length()) > 0) { errMsg.append(\",\"); } errMsg.append(aInput.getRowType()); } throw new java.lang.IllegalArgumentException(((\"Cannot compute compatible row type \" + \"for arguments to set op: \") + errMsg)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4224/buggy-version/core.src.main.java.org.apache.calcite.rel.core.SetOp.java", "BodyUseAPI": [], "Fixed commit": "c7060adced6f9f26aa7dd01751f79937ecc5a53d", "Url": "https://api.github.com/repos/jbalint/calcite", "Date": "2016-12-01T20:07:21Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.vtst.eclipse.easyxtext.validation.ConfigurableValidationMessageAcceptor.Cache.get(state.currentObject.eResource())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (configuration == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7885/buggy-version/src.eclipse.net.vtst.eclipse.easyxtext.src.net.vtst.eclipse.easyxtext.validation.ConfigurableValidationMessageAcceptor.java", "BodyUseAPI": [], "Fixed commit": "f35e98fb203f3c09180e5303fa9500e1b4b7a207", "Url": "https://api.github.com/repos/vtst/ow", "Date": "2013-02-17T13:53:41Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.xtext.validation.AbstractDeclarativeValidator.StateAccess.getState()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((state.currentObject) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7885/buggy-version/src.eclipse.net.vtst.eclipse.easyxtext.src.net.vtst.eclipse.easyxtext.validation.ConfigurableValidationMessageAcceptor.java", "BodyUseAPI": [], "Fixed commit": "f35e98fb203f3c09180e5303fa9500e1b4b7a207", "Url": "https://api.github.com/repos/vtst/ow", "Date": "2013-02-17T13:53:41Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context instanceof android.app.Activity) { decorView = ((android.app.Activity) (context)).getWindow().getDecorView(); }else if (context instanceof android.view.ContextThemeWrapper) { android.content.Context baseContext = ((android.view.ContextThemeWrapper) (context)).getBaseContext(); if (baseContext instanceof android.app.Activity) { decorView = ((android.app.Activity) (baseContext)).getWindow().getDecorView(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3756/buggy-version/HintCase.src.main.java.com.joanfuentes.hintcase.utils.DimenUtils.java", "BodyUseAPI": [], "Fixed commit": "1b9507e1e070b0a0decf70fe16e27af0b40530d9", "Url": "https://api.github.com/repos/oneroman/hintcase", "Date": "2016-11-03T18:30:38Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (decorView != null) { size.x = decorView.getWidth(); size.y = decorView.getHeight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3756/buggy-version/HintCase.src.main.java.com.joanfuentes.hintcase.utils.DimenUtils.java", "BodyUseAPI": ["android.view.View.getHeight()", "android.view.View.getWidth()"], "Fixed commit": "1b9507e1e070b0a0decf70fe16e27af0b40530d9", "Url": "https://api.github.com/repos/oneroman/hintcase", "Date": "2016-11-03T18:30:38Z"},
{"Line": "=>619", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.context.CarbonContext.getThreadLocalCarbonContext().getTenantId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(this.groupDAO.isDeviceMappedToGroup(groupId, device.getId(), tenantId))) { this.groupDAO.addDevice(groupId, device.getId(), tenantId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1526/buggy-version/components.device-mgt.org.wso2.carbon.device.mgt.core.src.main.java.org.wso2.carbon.device.mgt.core.service.GroupManagementProviderServiceImpl.java", "BodyUseAPI": ["org.wso2.carbon.device.mgt.common.Device.getId()", "org.wso2.carbon.device.mgt.core.group.mgt.dao.GroupDAO.addDevice(int,device.getId(),int)"], "Fixed commit": "664b3d4d43ddb6360e9da26f0a04904aede63120", "Url": "https://api.github.com/repos/charithag/carbon-device-mgt", "Date": "2016-10-06T15:02:09Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((username.length()) == 0) || (username.equals(null))) return \"501 Syntax error in parameters or arguments.\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5732/buggy-version/StatePatternFTP.src.com.jpknox.server.authentication.LoginService.java", "BodyUseAPI": [], "Fixed commit": "6a4398fc6bf2916665a9c7dfa29d054a69d4768e", "Url": "https://api.github.com/repos/jpknox/RandomProgramming", "Date": "2017-10-18T19:46:19Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.andes.subscription.SubscriptionStore.removeLocalSubscription(org.wso2.andes.kernel.LocalSubscription)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == removedSubscription) { subscriptionStore.removeSubscriptionDirectly(mockSubscription); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/451/buggy-version/modules.andes-core.broker.src.main.java.org.wso2.andes.kernel.AndesSubscriptionManager.java", "BodyUseAPI": [], "Fixed commit": "e8c813188243f1739b0bc1429a54014097050f3b", "Url": "https://api.github.com/repos/wso2/andes", "Date": "2015-08-18T13:26:02Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node instanceof com.redhat.ceylon.compiler.typechecker.tree.Tree.SpecifierStatement) { com.redhat.ceylon.compiler.typechecker.tree.Tree.SpecifierStatement specNode = ((com.redhat.ceylon.compiler.typechecker.tree.Tree.SpecifierStatement) (node)); d = specNode.getRefined(); }else if (node instanceof com.redhat.ceylon.compiler.typechecker.tree.Tree.BaseMemberExpression) { d = ((com.redhat.ceylon.compiler.typechecker.tree.Tree.BaseMemberExpression) (node)).getDeclaration(); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5584/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.code.correct.AddAnnotionProposal.java", "BodyUseAPI": [], "Fixed commit": "43ff722de83720b80fb582adbe51120b83ef4159", "Url": "https://api.github.com/repos/ceylon/ceylon-ide-eclipse", "Date": "2014-11-18T18:50:51Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sub instanceof java.util.LinkedHashMap<?, ?>)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6563/buggy-version/src.org.avuna.httpd.plugins.base.PatchFCGI.java", "BodyUseAPI": [], "Fixed commit": "75a24e1f731856bcc8c7cdc244068f9a6afd3223", "Url": "https://api.github.com/repos/Protryon/AvunaHTTPD-Java", "Date": "2015-03-30T03:50:45Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sub instanceof java.util.LinkedHashMap<?, ?>)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6563/buggy-version/src.org.avuna.httpd.plugins.base.PatchFCGI.java", "BodyUseAPI": [], "Fixed commit": "75a24e1f731856bcc8c7cdc244068f9a6afd3223", "Url": "https://api.github.com/repos/Protryon/AvunaHTTPD-Java", "Date": "2015-03-30T03:50:45Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getAD_Table_ID()) == 0) createMandatoryColumns();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8546/buggy-version/base.org.spinsuite.model.MSPSTable.java", "BodyUseAPI": [], "Fixed commit": "2cf8093ea546d8ee3a488ff03075e187a85c6bbf", "Url": "https://api.github.com/repos/adempiere/spin-suite-server", "Date": "2014-10-30T01:52:34Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (inputStream != null) { myServer.removeFromServer(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1746/buggy-version/NetworkGame.src.ClientConnection.java", "BodyUseAPI": [], "Fixed commit": "8bc821c948e1e0ca739b7150ecd1dcdbe51df845", "Url": "https://api.github.com/repos/IgorFIE/MySpecialOne", "Date": "2016-06-20T19:27:50Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((givenLocation) == null) { android.widget.Toast.makeText(this, \"There was an error. Please try again.\", Toast.LENGTH_LONG).show(); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8718/buggy-version/BarHopper.src.com.khaotixinc.barhopper.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "314405907a41c91f8b6d8af621e525fce2a416e6", "Url": "https://api.github.com/repos/jamesdavis86/BarHopper", "Date": "2013-05-30T19:13:52Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (o1 instanceof mathnstuff.symbolic.ExConstant) { if (o2 instanceof mathnstuff.symbolic.ExConstant) { return o1.toString().compareTo(o2.toString()); }else { return -1; } }else if (o2 instanceof mathnstuff.symbolic.ExConstant) { return 1; }else { return o1.toString().compareTo(o2.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1079/buggy-version/src.mathnstuff.symbolic.ExMult.java", "BodyUseAPI": ["o1.toString().compareTo(o2.toString())", "o1.toString().compareTo(o2.toString())", "mathnstuff.symbolic.Expression.toString()", "mathnstuff.symbolic.Expression.toString()"], "Fixed commit": "788d8ba62cc7129a4ece65b6a637125611b94cf4", "Url": "https://api.github.com/repos/Erhannis/MathNStuff", "Date": "2016-02-27T07:52:49Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (o1 instanceof mathnstuff.symbolic.ExConstant) { if (o2 instanceof mathnstuff.symbolic.ExConstant) { return o1.toString().compareTo(o2.toString()); }else { return -1; } }else if (o2 instanceof mathnstuff.symbolic.ExConstant) { return 1; }else { return o1.toString().compareTo(o2.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1079/buggy-version/src.mathnstuff.symbolic.ExAdd.java", "BodyUseAPI": ["mathnstuff.symbolic.Expression.toString()", "mathnstuff.symbolic.Expression.toString()", "o1.toString().compareTo(o2.toString())", "o1.toString().compareTo(o2.toString())"], "Fixed commit": "788d8ba62cc7129a4ece65b6a637125611b94cf4", "Url": "https://api.github.com/repos/Erhannis/MathNStuff", "Date": "2016-02-27T07:52:49Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index < 0) { index += size; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1791/buggy-version/Core.src.ca.uqac.lif.cep.tmf.QueueSource.java", "BodyUseAPI": [], "Fixed commit": "0fa9df294051b1566e350c68835d2b155cdff8ac", "Url": "https://api.github.com/repos/liflab/beepbeep-3", "Date": "2017-09-18T20:05:16Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_inputCount) < 0) { m_inputCount += m_interval; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1791/buggy-version/Core.src.ca.uqac.lif.cep.tmf.CountDecimate.java", "BodyUseAPI": [], "Fixed commit": "0fa9df294051b1566e350c68835d2b155cdff8ac", "Url": "https://api.github.com/repos/liflab/beepbeep-3", "Date": "2017-09-18T20:05:16Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.geobert.radis.db.AccountTable.fetchAccount(android.content.Context,long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (c.moveToFirst()) { fr.geobert.radis.db.AccountTable.initProjectionDate(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/500/buggy-version/src.fr.geobert.radis.db.AccountTable.java", "BodyUseAPI": ["fr.geobert.radis.db.AccountTable.initProjectionDate(android.database.Cursor)"], "Fixed commit": "ff01c98436596f4d52d56520499f4ef90f867c0f", "Url": "https://api.github.com/repos/Geobert/radis", "Date": "2013-09-20T09:29:00Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (block instanceof net.minecraftforge.fluids.IFluidBlock) { net.minecraftforge.fluids.IFluidBlock fblock = ((net.minecraftforge.fluids.IFluidBlock) (block)); if ((fblock.getFluid()) != null) { SchematicRegistry.INSTANCE.registerSchematicBlock(block, meta, buildcraft.api.blueprints.SchematicFluid.class, new net.minecraftforge.fluids.FluidStack(fblock.getFluid(), 1000)); } }else { SchematicRegistry.INSTANCE.registerSchematicBlock(block, meta, buildcraft.api.blueprints.SchematicBlock.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3551/buggy-version/common.buildcraft.builders.HeuristicBlockDetection.java", "BodyUseAPI": ["SchematicRegistry.INSTANCE.registerSchematicBlock(net.minecraft.block.Block,int,java.lang.Class)", "SchematicRegistry.INSTANCE.registerSchematicBlock(net.minecraft.block.Block,int,java.lang.Class,net.minecraftforge.fluids.FluidStack)"], "Fixed commit": "cc7d3397f52fc4e6a7d82ceca5096c2510460cb8", "Url": "https://api.github.com/repos/hea3ven/BuildCraft", "Date": "2014-12-11T15:48:21Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mVelocityTracker) != null) { mVelocityTracker.addMovement(ev); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/529/buggy-version/swiperefresh.src.main.java.me.guhy.swiperefresh.SwipeRefreshPlus.java", "BodyUseAPI": [], "Fixed commit": "63206c9d11f354ad1ff7d30b840b36807928f3d1", "Url": "https://api.github.com/repos/guhongya/SwipeRefreshPlus", "Date": "2017-08-31T15:09:34Z"},
{"Line": "=>574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((markerSnackbar) != null) markerSnackbar.dismiss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2747/buggy-version/app.src.main.java.com.marker.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "563396fc0bae550f4e0d9a416aafb087079153e6", "Url": "https://api.github.com/repos/UTN-FRBA-Mobile/Marker", "Date": "2017-11-13T01:11:01Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myLocation) != null) { loc = ((edu.clemson.cs.r2jt.data.Location) (myLocation.clone())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6752/buggy-version/src.main.java.edu.clemson.cs.r2jt.absyn.ConfirmStmt.java", "BodyUseAPI": [], "Fixed commit": "8a6868ebfef924f9e33edafeb14648b292236f9d", "Url": "https://api.github.com/repos/ClemsonRSRG/RESOLVE", "Date": "2015-02-21T15:13:59Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ymax == (ymin)) ymax++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2453/buggy-version/rtcharts-swing.src.main.java.org.thingml.rtcharts.swing.GraphPanel.java", "BodyUseAPI": [], "Fixed commit": "3d0a173720432939a5e64fe96422089ccd6b90c8", "Url": "https://api.github.com/repos/SINTEF-9012/rtcharts", "Date": "2014-08-15T10:50:36Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ymin == (ymax)) ymin--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2453/buggy-version/rtcharts-swing.src.main.java.org.thingml.rtcharts.swing.GraphPanel.java", "BodyUseAPI": [], "Fixed commit": "3d0a173720432939a5e64fe96422089ccd6b90c8", "Url": "https://api.github.com/repos/SINTEF-9012/rtcharts", "Date": "2014-08-15T10:50:36Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { mContent = savedInstanceState.getParcelable(hu.rgai.yako.view.fragments.EmailDisplayerFragment.MSG_CONTENT); }else { mContent = ((hu.rgai.yako.view.fragments.FullSimpleMessage) (mMessage.getFullMessage())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7762/buggy-version/src.hu.rgai.yako.view.fragments.EmailDisplayerFragment.java", "BodyUseAPI": ["android.os.Bundle.getParcelable(java.lang.String)"], "Fixed commit": "c46655498f4a2ce8f8bb1559e217fe18ebf23c9c", "Url": "https://api.github.com/repos/k-kojak/yako", "Date": "2014-11-25T10:41:43Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_mapRequestors) != null) for (java.lang.String key : _mapRequestors.keySet()) { resultMap.put(key, _mapRequestors.get(key)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/9119/buggy-version/asimba-saml2-utility.src.main.java.com.alfaariss.oa.util.saml2.SAML2RequestorsLDAP.java", "BodyUseAPI": [], "Fixed commit": "2a93d3474aeb588bb8dbad6a26c54f6f67c80e33", "Url": "https://api.github.com/repos/GluuFederation/gluu-Asimba", "Date": "2016-02-24T20:20:25Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alfaariss.oa.util.saml2.SAML2Requestors.readRequestors(com.alfaariss.oa.api.configuration.IConfigurationManager,org.w3c.dom.Element)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (mapRequestors != null) for (java.lang.String key : mapRequestors.keySet()) { resultMap.put(key, mapRequestors.get(key)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/9119/buggy-version/asimba-saml2-utility.src.main.java.com.alfaariss.oa.util.saml2.SAML2RequestorsLDAP.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.alfaariss.oa.util.saml2.SAML2Requestor>.put(java.lang.String,mapRequestors.get(key))", "java.util.Map<java.lang.String, com.alfaariss.oa.util.saml2.SAML2Requestor>.keySet()", "java.util.Map<java.lang.String, com.alfaariss.oa.util.saml2.SAML2Requestor>.get(java.lang.String)"], "Fixed commit": "2a93d3474aeb588bb8dbad6a26c54f6f67c80e33", "Url": "https://api.github.com/repos/GluuFederation/gluu-Asimba", "Date": "2016-02-24T20:20:25Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (invisible) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7841/buggy-version/Action.Game.Sprite.Player.java", "BodyUseAPI": [], "Fixed commit": "da327f71a15c1e43e4520102b4901a3627116558", "Url": "https://api.github.com/repos/FumihikoKouno/Game", "Date": "2013-07-19T13:38:02Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (removeConfig()) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6699/buggy-version/src.main.java.com.github.aiderpmsi.pims.treebrowser.TreeBrowserFactory.java", "BodyUseAPI": [], "Fixed commit": "2b846c3980b984379f992c0d2a02bf65ccbf6022", "Url": "https://api.github.com/repos/aiderpmsi/pims", "Date": "2014-05-31T09:14:15Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(world.isRemote)) player.openGui(CraftPlusPlus.instance, 0, world, 0, 0, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6415/buggy-version/src.main.java.io.github.anon10w1z.craftPP.items.ItemCraftingPad.java", "BodyUseAPI": ["net.minecraft.entity.player.EntityPlayer.openGui(CraftPlusPlus.instance,int,net.minecraft.world.World,int,int,int)"], "Fixed commit": "0f5830bc41f3b1fbbcdc965a46a5c36e5364ba3f", "Url": "https://api.github.com/repos/Anon10W1z/CraftPlusPlus", "Date": "2015-07-24T20:34:39Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSecondaryNetworkInterface()) != null) { components.add(getSecondaryNetworkInterface()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8276/buggy-version/src.main.java.dk.cs.aau.sw705e15.model.Computer.java", "BodyUseAPI": [], "Fixed commit": "c687a95843f4a457b93c80eb343306ba88cee275", "Url": "https://api.github.com/repos/feupeu/SW705E15-code", "Date": "2015-11-13T10:18:36Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bridgedb.ws.WSUrlService.getMappingSetInfos(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (mappingSetInfos.isEmpty()) { sb.append(\"\\n<h1> No mapping found between \"); org.bridgedb.ws.MappingSetTableMaker.addDataSourceLink(sb, scrCode); sb.append(\" and \"); org.bridgedb.ws.MappingSetTableMaker.addDataSourceLink(sb, targetCode); sb.append(\"</h1>\"); }else { sb.append(\"\\n<p>Warning summary lines are just a sum of the mappings from all mapping files.\"); sb.append(\"So if various sources include the same mapping it will be counted multiple times. </p>\"); org.bridgedb.ws.MappingSetTableMaker.addTable(sb, mappingSetInfos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3799/buggy-version/org.bridgedb.ops.ws.service.src.org.bridgedb.ws.WSUrlService.java", "BodyUseAPI": ["org.bridgedb.ws.MappingSetTableMaker.addTable(java.lang.StringBuilder,java.util.List<org.bridgedb.statistics.MappingSetInfo>)"], "Fixed commit": "0edbbb23c83c90384374ff80bdd2f9ebbb8c56d6", "Url": "https://api.github.com/repos/openphacts/BridgeDb", "Date": "2012-12-03T18:18:06Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.clemson.resolve.plugin.psi.impl.ResReference.processUsesRequests(file, processor, state, myElement)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5103/buggy-version/src.java.edu.clemson.resolve.plugin.psi.impl.ResTypeReference.java", "BodyUseAPI": [], "Fixed commit": "7905ffb7f8a42c8f2425011a27851ecde5351a04", "Url": "https://api.github.com/repos/ClemsonRSRG/jetbrains-plugin-resolve", "Date": "2015-10-09T23:43:29Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getIdentifier()) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5103/buggy-version/src.java.edu.clemson.resolve.plugin.psi.impl.ResTypeReferenceExpressionImpl.java", "BodyUseAPI": [], "Fixed commit": "7905ffb7f8a42c8f2425011a27851ecde5351a04", "Url": "https://api.github.com/repos/ClemsonRSRG/jetbrains-plugin-resolve", "Date": "2015-10-09T23:43:29Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (drawerLayout.isDrawerOpen(navigationView)) drawerLayout.closeDrawer(navigationView); else super.onBackPressed();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6369/buggy-version/app.src.main.java.in.xinyue.xinyue.ui.MainActivity.java", "BodyUseAPI": ["android.support.v4.widget.DrawerLayout.closeDrawer(android.support.design.widget.NavigationView)"], "Fixed commit": "42260d7fd03f12a9a050a017313fd6e32f95a761", "Url": "https://api.github.com/repos/happybit/Xinyue", "Date": "2015-08-30T14:15:48Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (j < (sumTransaction.size())) { sumTransaction.put(key, ((sumTransaction.get(key)) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1414/buggy-version/src.metode.Frekuensi.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Integer>.put(java.lang.String,int)", "java.util.HashMap<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Fixed commit": "dbdcc1052946f3190cf6dc2c9885015b8998f162", "Url": "https://api.github.com/repos/supandiajah/identifikasi_pola_kompetensi", "Date": "2017-12-26T16:48:17Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.server.computation.db.AnalysisReportDao.tryToBookReportAnalysis(org.sonar.core.persistence.DbSession,org.sonar.core.computation.db.AnalysisReportDto)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (report != null) { analyzeReport(report); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1276/buggy-version/server.sonar-server.src.main.java.org.sonar.server.computation.ComputationService.java", "BodyUseAPI": ["org.sonar.server.computation.ComputationService.analyzeReport(org.sonar.core.computation.db.AnalysisReportDto)"], "Fixed commit": "e3fb9dc1510b71db198acc8b162a908a0fd78cf4", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2014-10-07T07:40:40Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (null != payload) { log.error(\"Payload Length : {}\", this.payload.length); log.error(\"Payload : {}\", net.FriendsUnited.Util.Tool.fromByteBufferToHexString(this.payload)); }else { log.error(\"Payload : null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4918/buggy-version/src.net.FriendsUnited.FriendPacket.java", "BodyUseAPI": [], "Fixed commit": "41b3ef9185a883b14635acb578ba1f0c7e9809b3", "Url": "https://api.github.com/repos/JustAnother1/Friends-United", "Date": "2014-04-18T22:53:28Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rapla.entities.storage.internal.ReferenceHandler.getId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (id == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3816/buggy-version/src.main.java.org.rapla.entities.storage.internal.ReferenceHandler.java", "BodyUseAPI": [], "Fixed commit": "bd7dd40bd96a6cab1c280f294636cde6f6062bdc", "Url": "https://api.github.com/repos/rapla/rapla", "Date": "2016-01-19T13:11:57Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key.equals(PREFERENCES.KEYS.ANZ.SCREENSHOT_ENABLED)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1324/buggy-version/app.src.main.java.nz.pbomb.xposed.anzmods.ANZPrefFragment.java", "BodyUseAPI": [], "Fixed commit": "c9f0913d6d99d7451149299ca0ac7754a33a3d42", "Url": "https://api.github.com/repos/pbombnz/SuperKiwi", "Date": "2016-01-28T02:18:52Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.xml.soap.SOAPHeader.extractHeaderElements(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((itCtmg == null) || (!(itCtmg.hasNext()))) { return \"\"; }else { it = itCtmg; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6539/buggy-version/oscm-apiversioning-soapmgmt.javasrc.org.oscm.apiversioning.soapmgmt.parser.SoapRequestParser.java", "BodyUseAPI": [], "Fixed commit": "9a3d18ee837a7f0bf03b6f41b287634550e58a4f", "Url": "https://api.github.com/repos/servicecatalog/development", "Date": "2016-05-02T11:15:48Z"},
{"Line": "=>549", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cwctravel.plugins.shelvesetreview.util.TFSUtil.getTFSConnection().getBaseURI().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(baseUri.endsWith(\"/\"))) { baseUri += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4889/buggy-version/src.com.cwctravel.plugins.shelvesetreview.util.ShelvesetUtil.java", "BodyUseAPI": [], "Fixed commit": "9d45187ab8ce3fd15a60cef671598699e6c8f956", "Url": "https://api.github.com/repos/vimil/com.cwctravel.plugins.shelvesetnavigator", "Date": "2016-07-19T14:41:13Z"},
{"Line": "=>879", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.ledpixelart.console.PIXELConsole.twitterMode) { message = com.ledpixelart.console.PIXELConsole.twitterResult; }else { message = scrollingText; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5427/buggy-version/src.com.ledpixelart.console.PIXELConsole.java", "BodyUseAPI": [], "Fixed commit": "101ad262680cdb3ac197d1b64e52e2b8ae9f37c8", "Url": "https://api.github.com/repos/alinke/pixel-weather-console", "Date": "2014-10-12T16:58:11Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (candidates.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/748/buggy-version/src.org.aiwolf.sample.player.SampleSeer.java", "BodyUseAPI": [], "Fixed commit": "872197fe3a9f758a7d70c5e796f7bc3d777fd041", "Url": "https://api.github.com/repos/aiwolf/AIWolfClient", "Date": "2016-12-26T18:50:34Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (files == null) { mListener.onError(mContext.getString(R.string.activity_explorer_error)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7034/buggy-version/app.src.main.java.net.nitroshare.android.ui.explorer.DirectoryAdapter.java", "BodyUseAPI": [], "Fixed commit": "e99c507d2e78c8321822dbafa5d9293b33e513ab", "Url": "https://api.github.com/repos/nitroshare/nitroshare-android", "Date": "2017-10-18T19:03:16Z"},
{"Line": "=>677", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((anchor.equals(isHavingType)) && (!(ismap))) { addNewMessage(anchor, false, false, false, isSearchResult, datumList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8272/buggy-version/app.src.main.java.org.fossasia.susi.ai.activities.MainActivity.java", "BodyUseAPI": ["2.addNewMessage(java.lang.String,boolean,boolean,boolean,boolean,java.util.List<org.fossasia.susi.ai.rest.model.Datum>)"], "Fixed commit": "1da36ff9ee99a80a6f444e41d99d2fae0005c6f8", "Url": "https://api.github.com/repos/samsruti/susi_android", "Date": "2016-12-11T15:10:32Z"},
{"Line": "=>669", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["response.body().getAnswers().get(0).getActions().get(1).getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"anchor\".equals(isHavingType)) { counter = responseActionSize; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8272/buggy-version/app.src.main.java.org.fossasia.susi.ai.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1da36ff9ee99a80a6f444e41d99d2fae0005c6f8", "Url": "https://api.github.com/repos/samsruti/susi_android", "Date": "2016-12-11T15:10:32Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((essaywriter.WritingCenter.myEssay.get(((essaywriter.WritingCenter.myEssay.size()) - 1)).contains(\".\")) || (essaywriter.WritingCenter.myEssay.get(((essaywriter.WritingCenter.myEssay.size()) - 1)).contains(\".\\n\\t\"))) { if ((output.length()) > 0) { output = (java.lang.Character.toUpperCase(output.charAt(0))) + (output.substring(1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8724/buggy-version/EssayWriter.src.essaywriter.WritingCenter.java", "BodyUseAPI": [], "Fixed commit": "28ba3a9236c05ad9e426662121471cc382ce18d3", "Url": "https://api.github.com/repos/atmarsh/APCSQuarterProject", "Date": "2015-05-05T18:05:01Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i + 1) < (essaywriter.WritingCenter.myEssay.size())) { if (((!(essaywriter.WritingCenter.myEssay.get((i + 1)).contains(\",\"))) && (!(essaywriter.WritingCenter.myEssay.get((i + 1)).contains(\".\")))) && (!(essaywriter.WritingCenter.myEssay.get((i + 1)).contains(\".\\n\\t\")))) { essay += \" \"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8724/buggy-version/EssayWriter.src.essaywriter.WritingCenter.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.get(int)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "28ba3a9236c05ad9e426662121471cc382ce18d3", "Url": "https://api.github.com/repos/atmarsh/APCSQuarterProject", "Date": "2015-05-05T18:05:01Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sushi.configure.Options.I()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((options.getTargetMethod()) != null) { targetMethodSignatures.add(targetMethodSignature); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7795/buggy-version/master.src.main.java.sushi.execution.evosuite.Evosuite.java", "BodyUseAPI": [], "Fixed commit": "318d0c65f5f0538c81578167658dea38fa6404d6", "Url": "https://api.github.com/repos/pietrobraione/sushi", "Date": "2017-10-27T11:26:42Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.kazuki43zoo.domain.model.calendar.SeasonalHoliday.getTargetDate()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((targetDate.getDayOfWeek()) == (org.joda.time.DateTimeConstants.SUNDAY)) { targetDate = targetDate.plusDays(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3667/buggy-version/src.main.java.com.github.kazuki43zoo.domain.service.calendar.CalendarSharedServiceImpl.java", "BodyUseAPI": ["org.joda.time.LocalDate.plusDays(int)"], "Fixed commit": "174360c6fc7ffa20ef4ea3af64d887fbb2004bb0", "Url": "https://api.github.com/repos/kazuki43zoo/demo-application", "Date": "2016-04-03T15:21:28Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fs.xml.soap.reflection.field.NodeFieldReference.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.fs.xml.soap.reflection.ReferenceUtility.isNotNull(nodeValue)) { org.fs.xml.soap.reflection.type.NodeTypeReference parsed = org.fs.xml.soap.reflection.ReferenceUtility.toTypeReference(node); if (isWritePossible(parsed)) { write(writer, parsed); }else { throw new java.lang.NullPointerException(((((\"impossible type node @{ \" + (node.name())) + \"\\t\") + (classNode.getName())) + \" }\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/389/buggy-version/src.main.java.org.fs.xml.soap.reader.node.TypeNodeXMLParser.java", "BodyUseAPI": [], "Fixed commit": "a1b9cdb77fcc042fc74365360eae7fba98cd2ba4", "Url": "https://api.github.com/repos/droideveloper/SoapAndroid", "Date": "2016-07-10T14:03:35Z"},
{"Line": "=>925", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (brick instanceof org.catrobat.catroid.content.bricks.LoopEndBrick) { ((org.catrobat.catroid.content.bricks.LoopEndBrick) (brick)).getViewWithAlphaAndContext(context, 255); }else { brick.getViewWithAlpha(255); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4714/buggy-version/catroid.src.org.catrobat.catroid.ui.adapter.BrickAdapter.java", "BodyUseAPI": ["org.catrobat.catroid.content.bricks.Brick.getViewWithAlpha(int)"], "Fixed commit": "0327f27cec5c39f3833cdddd99c6065afaec74f4", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2013-03-01T01:55:09Z"},
{"Line": "=>944", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (brick instanceof org.catrobat.catroid.content.bricks.LoopEndBrick) { ((org.catrobat.catroid.content.bricks.LoopEndBrick) (brick)).getViewWithAlphaAndContext(context, 255); }else { brick.getViewWithAlpha(255); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4714/buggy-version/catroid.src.org.catrobat.catroid.ui.adapter.BrickAdapter.java", "BodyUseAPI": ["org.catrobat.catroid.content.bricks.Brick.getViewWithAlpha(int)"], "Fixed commit": "0327f27cec5c39f3833cdddd99c6065afaec74f4", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2013-03-01T01:55:09Z"},
{"Line": "=>931", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (brick instanceof org.catrobat.catroid.content.bricks.LoopEndBrick) { ((org.catrobat.catroid.content.bricks.LoopEndBrick) (brick)).getViewWithAlphaAndContext(context, 50); }else { brick.getViewWithAlpha(50); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4714/buggy-version/catroid.src.org.catrobat.catroid.ui.adapter.BrickAdapter.java", "BodyUseAPI": ["org.catrobat.catroid.content.bricks.Brick.getViewWithAlpha(int)"], "Fixed commit": "0327f27cec5c39f3833cdddd99c6065afaec74f4", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2013-03-01T01:55:09Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) return hashdb.storage.protocol.external.RemoteServerInfo.masterRemoteServerInfo;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7952/buggy-version/src.hashdb.storage.protocol.external.RemoteServerInfo.java", "BodyUseAPI": [], "Fixed commit": "b865a3f05359d6bc49793d5248edb91d3f03e6e4", "Url": "https://api.github.com/repos/vivitas/hashdb", "Date": "2015-01-12T00:19:25Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hibernate.query.Query<spring.models.MenuItem>.list()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((itemList.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3583/buggy-version/RestaurantOrderingSystem.src.main.java.utils.DBManager.java", "BodyUseAPI": [], "Fixed commit": "a0edee59bc312ccb5cd7717a0fc30d911fac07e3", "Url": "https://api.github.com/repos/chandlerbaggett/RestaurantOrderingSystem", "Date": "2017-05-02T02:56:18Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((((timeRangeTyp) != null) && (timeRangeTyp.equals(model.steps.TimeRangeStepModel.AUTUMNBREAK_TIME_RANGE))) || (timeRangeTyp.equals(model.steps.TimeRangeStepModel.WINTERBREAK_TIME_RANGE))) || (timeRangeTyp.equals(model.steps.TimeRangeStepModel.SUMMERBREAK_TIME_RANGE))) || (timeRangeTyp.equals(model.steps.TimeRangeStepModel.EASTERBREAK_TIME_RANGE))) || (timeRangeTyp.equals(model.steps.TimeRangeStepModel.MISC_TIME_RANGE))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/784/buggy-version/src.model.steps.TimeRangeStepModel.java", "BodyUseAPI": [], "Fixed commit": "2d83f2639713166fbf36ee9f7d1eeed459aca10b", "Url": "https://api.github.com/repos/dameiers/SI2012", "Date": "2012-09-11T09:57:02Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (r != null) { isExact = r.isExact(); de.azapps.mirakel.helper.Log.d(de.azapps.mirakel.helper.TaskDialogHelpers.TAG, (\"exact: \" + isExact)); if ((r.getDerivedFrom()) != null) { r = de.azapps.mirakel.model.recurring.Recurring.get(r.getDerivedFrom()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2898/buggy-version/src.de.azapps.mirakel.helper.TaskDialogHelpers.java", "BodyUseAPI": ["de.azapps.mirakel.model.recurring.Recurring.get(r.getDerivedFrom())", "de.azapps.mirakel.model.recurring.Recurring.isExact()", "de.azapps.mirakel.model.recurring.Recurring.getDerivedFrom()", "de.azapps.mirakel.model.recurring.Recurring.getDerivedFrom()"], "Fixed commit": "cb3a3a74b48928c7180bb779b5f658adc9bdb82f", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2013-12-08T21:09:00Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((providerParameters.getTokenRequirements().getActAs()) != null) { receivedToken = providerParameters.getTokenRequirements().getActAs(); if (receivedToken.getState().equals(STATE.VALID)) { principal = receivedToken.getPrincipal(); } }else if ((providerParameters.getTokenRequirements().getValidateTarget()) != null) { receivedToken = providerParameters.getTokenRequirements().getValidateTarget(); if (receivedToken.getState().equals(STATE.VALID)) { principal = receivedToken.getPrincipal(); } }else { principal = providerParameters.getPrincipal(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4715/buggy-version/services.sts.sts-core.src.main.java.org.apache.cxf.sts.token.provider.DefaultSubjectProvider.java", "BodyUseAPI": ["providerParameters.getTokenRequirements().getValidateTarget()", "providerParameters.getTokenRequirements().getValidateTarget()", "providerParameters.getTokenRequirements().getActAs()", "org.apache.cxf.sts.token.provider.TokenProviderParameters.getTokenRequirements()", "org.apache.cxf.sts.token.provider.TokenProviderParameters.getTokenRequirements()", "org.apache.cxf.sts.token.provider.TokenProviderParameters.getPrincipal()", "org.apache.cxf.sts.token.provider.TokenProviderParameters.getTokenRequirements()"], "Fixed commit": "21472024a8fe2fcd94d58d4be4dcd792ea1fe1ee", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2014-09-18T11:07:44Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<cz.muni.fi.publishsubscribe.countingtree.Subscription, cz.muni.fi.publishsubscribe.countingtree.Predicate>.get(cz.muni.fi.publishsubscribe.countingtree.Subscription)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (predicate.getSubscriptions().isEmpty()) { matcher.removePredicate(predicate); predicates.remove(predicate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3405/buggy-version/counting-tree.src.main.java.cz.muni.fi.publishsubscribe.countingtree.CountingTree.java", "BodyUseAPI": ["cz.muni.fi.publishsubscribe.countingtree.FilterMatcher.removePredicate(cz.muni.fi.publishsubscribe.countingtree.Predicate)", "java.util.Map<cz.muni.fi.publishsubscribe.countingtree.Predicate, cz.muni.fi.publishsubscribe.countingtree.Predicate>.remove(cz.muni.fi.publishsubscribe.countingtree.Predicate)"], "Fixed commit": "47916ef396d1aa620404518fd93dcddd0615dd52", "Url": "https://api.github.com/repos/ngmon/ngmon-pub-sub", "Date": "2013-04-07T17:38:13Z"},
{"Line": "=>525", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTree.DropLocation.getPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (oldDrop != null) { java.awt.Rectangle oldBounds = getPathBounds(tree, oldDrop); tree.repaint(0, oldBounds.y, tree.getWidth(), oldBounds.height); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5098/buggy-version/substance.src.main.java.org.pushingpixels.substance.internal.ui.SubstanceTreeUI.java", "BodyUseAPI": ["org.pushingpixels.substance.internal.ui.SubstanceTreeUI.1.getPathBounds(javax.swing.JTree,javax.swing.tree.TreePath)"], "Fixed commit": "637b6262d737db7dfd2dfef7873b17775d0e7397", "Url": "https://api.github.com/repos/vtsaplin/insubstantial", "Date": "2014-04-19T13:07:16Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<mockit.internal.injection.InjectionPoint.InjectionPoint, java.lang.Object>.get(mockit.internal.injection.InjectionPoint.InjectionPoint)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dependency == null) { dependency = findMatchingObject(instantiatedDependencies, null, injectionPoint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7990/buggy-version/main.src.mockit.internal.injection.InjectionState.java", "BodyUseAPI": [], "Fixed commit": "3c7515966ac5ec51e3027ce4c31708d8973fc612", "Url": "https://api.github.com/repos/Vampire/jmockit1", "Date": "2016-06-20T13:26:24Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.xml.bind.JAXBElement<? extends org.ieee.odm.schema.LoadflowGenDataXmlType>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((xmlGen.getDesiredVoltage()) != null) gen.setDesiredVoltMag(com.interpss.common.datatype.UnitHelper.vConversion(xmlGen.getDesiredVoltage().getValue(), aclfBus.getBaseVoltage(), org.interpss.mapper.odm.ODMUnitHelper.ToVoltageUnit.f(xmlGen.getDesiredVoltage().getUnit()), UnitType.PU));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3172/buggy-version/ipss.plugin.core.src.org.interpss.mapper.odm.impl.aclf.AclfBusDataHelper.java", "BodyUseAPI": ["com.interpss.core.aclf.AclfGen.setDesiredVoltMag(com.interpss.common.datatype.UnitHelper.vConversion(xmlGen.getDesiredVoltage().getValue(), aclfBus.getBaseVoltage(), org.interpss.mapper.odm.ODMUnitHelper.ToVoltageUnit.f(xmlGen.getDesiredVoltage().getUnit()), UnitType.PU))", "xmlGen.getDesiredVoltage().getValue()", "org.ieee.odm.schema.LoadflowGenDataXmlType.getDesiredVoltage()", "com.interpss.common.datatype.UnitHelper.vConversion(xmlGen.getDesiredVoltage().getValue(),aclfBus.getBaseVoltage(),org.interpss.mapper.odm.ODMUnitHelper.ToVoltageUnit.f(xmlGen.getDesiredVoltage().getUnit()),UnitType.PU)", "org.interpss.mapper.odm.ODMUnitHelper.ToVoltageUnit.f(xmlGen.getDesiredVoltage().getUnit())", "xmlGen.getDesiredVoltage().getUnit()", "org.ieee.odm.schema.LoadflowGenDataXmlType.getDesiredVoltage()"], "Fixed commit": "0da34abe8556eff20bc9f31cf0ecafc29287615b", "Url": "https://api.github.com/repos/InterPSS-Project/ipss-plugin", "Date": "2013-12-30T13:43:20Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inputQuestionFile.getText().length()) > 0) { displayQuestionnairePanel.saveQuestionnaire(new java.io.File(inputQuestionFile.getText())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7651/buggy-version/src.views.ConfigurationBuilder.ConfigBuilderPanel.java", "BodyUseAPI": ["javax.swing.JTextField.getText()", "views.Questionnaire.DisplayQuestionnairePanel.saveQuestionnaire(java.io.File)"], "Fixed commit": "b4587bb0ac3e4b2ab70e6a8c135bd31782fc9c4d", "Url": "https://api.github.com/repos/wjonker85/AAT", "Date": "2014-04-04T12:34:44Z"},
{"Line": "=>1297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inputQuestionFile.getText().length()) > 0) { java.io.File qFile = new java.io.File((((workingDir) + (java.io.File.separator)) + (inputQuestionFile.getText()))); displayQuestionnairePanel.saveQuestionnaire(qFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7651/buggy-version/src.views.ConfigurationBuilder.ConfigBuilderPanel.java", "BodyUseAPI": ["javax.swing.JTextField.getText()"], "Fixed commit": "b4587bb0ac3e4b2ab70e6a8c135bd31782fc9c4d", "Url": "https://api.github.com/repos/wjonker85/AAT", "Date": "2014-04-04T12:34:44Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isCatchTimerRunning) == false) { stopEatable(); isCatchTimerRunning = true; }else { catchTimer.cancel(); catchTimer.purge(); stopEatable(); isCatchTimerRunning = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6920/buggy-version/app.src.main.java.de.berufsschule_freising.pacasus.model.game.Engine.java", "BodyUseAPI": [], "Fixed commit": "90b1660fdf80926149c0a1af4bb505d9cb85cd12", "Url": "https://api.github.com/repos/GabschCorp/pacasus", "Date": "2016-03-02T07:52:48Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bluenova.fairytailcraft.Util.Util.getPlayerConfig(sent).getMageType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ev.magicType.equals(magic)) { if ((ev.minLevel) > (bluenova.fairytailcraft.Util.Util.getPlayerConfig(sent).getLevel())) { sent.sendMessage(((((((org.bukkit.ChatColor.YELLOW) + \"- \") + (ev.name)) + \" (Level \") + (ev.minLevel)) + \")\")); }else { sent.sendMessage(((((((org.bukkit.ChatColor.GRAY) + \"- \") + (ev.name)) + \" (Level \") + (ev.minLevel)) + \")\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/9254/buggy-version/src.main.java.bluenova.fairytailcraft.CommandListener.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(((((((org.bukkit.ChatColor.YELLOW) + \"- \") + (ev.name)) + \" (Level \") + (ev.minLevel)) + \")\"))", "org.bukkit.entity.Player.sendMessage(((((((org.bukkit.ChatColor.GRAY) + \"- \") + (ev.name)) + \" (Level \") + (ev.minLevel)) + \")\"))"], "Fixed commit": "2eea773c81a3eb2de17d7fa3fa2508c9ab81a5be", "Url": "https://api.github.com/repos/bluenova/FairyTailCraft", "Date": "2012-03-12T16:33:56Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (sampleCount == 1) this.execTime.add(execTime);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8538/buggy-version/hadoop-common-project.hadoop-common.src.main.java.org.apache.hadoop.ipc.RAPLExecTime.java", "BodyUseAPI": [], "Fixed commit": "7d82f6f6ca43d9ed1be089b89e9be0742665d4f8", "Url": "https://api.github.com/repos/sandy197/Phadoop-2.2.0-src", "Date": "2014-06-30T16:39:06Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((className) == null) || (org.codehaus.groovy.grails.web.errors.GrailsWrappedRuntimeException.UNKNOWN.equals(className))) { className = codeAware.getFileName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1353/buggy-version/grails-web.src.main.groovy.org.codehaus.groovy.grails.web.errors.GrailsWrappedRuntimeException.java", "BodyUseAPI": [], "Fixed commit": "d763666584992dbf45c7eeddbc9b325a4f4c8e38", "Url": "https://api.github.com/repos/grails/grails-core", "Date": "2012-04-27T08:28:24Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputObjects.isEmpty()) return java.util.Collections.EMPTY_LIST;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4333/buggy-version/src.main.java.com.milaboratory.core.clustering.Clustering.java", "BodyUseAPI": [], "Fixed commit": "b2239a5cca48e594d408ede370e82e8aaeba9db2", "Url": "https://api.github.com/repos/milaboratory/milib", "Date": "2014-07-22T12:05:53Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((defaultTypeArguments[i]) == null) || (defaultTypeArguments[i].equals(TypeFactory.TYPE_OF_OBJECT))) { hasUnresolvedTypes = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2944/buggy-version/core.src.main.java.ma.glasnost.orika.metadata.TypeUtil.java", "BodyUseAPI": [], "Fixed commit": "a331d3136cd228924c1d7082c090063c25f57e3e", "Url": "https://api.github.com/repos/brabenetz/orika", "Date": "2015-08-08T19:22:55Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((blogEntry.getState().equals(Status.LIVE)) && ((blogEntry.getVisibleSince()) == 0)) || (!(blogEntry.getState().equals(Status.LIVE)))) { setScheduledFor(scheduledFor, lng, blogEntry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5630/buggy-version/src.main.java.de.caluga.jblog.admin.EntryController.java", "BodyUseAPI": ["de.caluga.jblog.admin.EntryController.setScheduledFor(java.lang.String,java.lang.String,de.caluga.jblog.admin.BlogEntry)"], "Fixed commit": "fee13e909e93d0191f3e0c20b11ed64f80e1c9dd", "Url": "https://api.github.com/repos/sboesebeck/jblog", "Date": "2017-06-06T20:49:51Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getPathInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (pathInfo != null) pathInfo = servletRequest.getPathInfo().replace(\"uri\", \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6316/buggy-version/src.main.java.org.mitre.dsmiley.httpproxy.URITemplateProxyServlet.java", "BodyUseAPI": [], "Fixed commit": "64eca71daec9a5ddaa8c1d9a027117970ab8c151", "Url": "https://api.github.com/repos/relvaner/HTTP-Proxy-Servlet", "Date": "2017-11-24T20:54:58Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.sslProperties) == null) profileRegistry.addStartChannelListener(com.tresys.jalop.jnl.impl.ContextImpl.URI, profile.init(com.tresys.jalop.jnl.impl.ContextImpl.URI, this.sslProperties), null); else profileRegistry.addStartChannelListener(TLSProfile.URI, this.sslListener, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4266/buggy-version/jnl_lib.src.main.java.com.tresys.jalop.jnl.impl.ContextImpl.java", "BodyUseAPI": [], "Fixed commit": "6ca0eed821481cd2835b09f898af39212aa52fc1", "Url": "https://api.github.com/repos/jalop-tresys/jjnl", "Date": "2014-09-19T00:44:45Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (0 == ((int) (totalPay))) { isShow = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8967/buggy-version/src.com.xgf.winecome.utils.CartManager.java", "BodyUseAPI": [], "Fixed commit": "80349bdc8f93c7850fdcc216cd7d5d52efdb5457", "Url": "https://api.github.com/repos/xiguofeng/WineCome", "Date": "2015-08-17T03:22:57Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isShow) { com.xgf.winecome.ui.activity.HomeActivity.showOrhHideMainPayBar(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8967/buggy-version/src.com.xgf.winecome.ui.activity.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "80349bdc8f93c7850fdcc216cd7d5d52efdb5457", "Url": "https://api.github.com/repos/xiguofeng/WineCome", "Date": "2015-08-17T03:22:57Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((bundle.getHeaders(\"Fragment-Host\")) == null) || (!(\"Fragment bundles can not be started.\".equals(e.getMessage())))) { logger.error(\"Error installing Bundle\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/157/buggy-version/extensions.src.org.pentaho.platform.osgi.OSGIBoot.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String,java.lang.Exception)"], "Fixed commit": "a706992891a1446f3cb7d7428095f306e0ad6391", "Url": "https://api.github.com/repos/kurtwalker/pentaho-platform", "Date": "2014-01-16T17:12:21Z"},
{"Line": "=>634", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.maven.model.Plugin.getConfiguration()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (config == null) { return javaVersion; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7521/buggy-version/src.main.java.com.google.appengine.gcloudapp.AbstractGcloudMojo.java", "BodyUseAPI": [], "Fixed commit": "c1db6296ae308f99b2b17372adb1707d76f54f7c", "Url": "https://api.github.com/repos/GoogleCloudPlatform/gcloud-maven-plugin", "Date": "2016-02-09T02:05:47Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (e != null) { e.printStackTrace(java.lang.System.err); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1670/buggy-version/src.main.java.tcg_auto.utils.HCIUtils.java", "BodyUseAPI": ["java.lang.Exception.printStackTrace(java.io.PrintStream)"], "Fixed commit": "ae60b47d8e157ebbe8947d8c284924d926ce0924", "Url": "https://api.github.com/repos/sabdfettah/tcg_auto", "Date": "2017-04-23T20:49:37Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stopNext) { stopNext = false; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/370/buggy-version/src.main.java.io.github.data4all.service.UploadService.java", "BodyUseAPI": [], "Fixed commit": "9735c235db4803732acfc666bda6094803079457", "Url": "https://api.github.com/repos/Data4All/Data4All", "Date": "2015-02-19T13:40:00Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.getSamples(key)) != null) sampleStreams.add(c.getSamples(key));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7370/buggy-version/src.edu.kit.cloudSimStorage.cdmi.CdmiRootContainer.java", "BodyUseAPI": ["edu.kit.cloudSimStorage.monitoring.TraceableResource.getSamples(java.lang.String)", "java.util.List<edu.kit.cloudSimStorage.monitoring.TupleSequence<java.lang.Double>>.add(c.getSamples(key))"], "Fixed commit": "5ca8798e2741d2915190d38d66effd0828168751", "Url": "https://api.github.com/repos/toebbel/StorageCloudSim", "Date": "2014-10-27T16:56:37Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.getSamples(key)) != null) sampleStreams.add(c.getSamples(key));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7370/buggy-version/src.edu.kit.cloudSimStorage.cdmi.CdmiRootContainer.java", "BodyUseAPI": ["java.util.List<edu.kit.cloudSimStorage.monitoring.TupleSequence<java.lang.Double>>.add(c.getSamples(key))", "edu.kit.cloudSimStorage.monitoring.TraceableResource.getSamples(java.lang.String)"], "Fixed commit": "5ca8798e2741d2915190d38d66effd0828168751", "Url": "https://api.github.com/repos/toebbel/StorageCloudSim", "Date": "2014-10-27T16:56:37Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.app.TaskStackBuilder.create(com.google.sample.castcompanionlibrary.notification.VideoCastNotificationService)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((stackBuilder.getIntentCount()) > 1) { stackBuilder.editIntentAt(1).putExtra(\"media\", mediaWrapper); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3353/buggy-version/src.com.google.sample.castcompanionlibrary.notification.VideoCastNotificationService.java", "BodyUseAPI": ["stackBuilder.editIntentAt(1).putExtra(java.lang.String,android.os.Bundle)", "android.support.v4.app.TaskStackBuilder.editIntentAt(int)"], "Fixed commit": "d703c5a5ce4fccde3a230d956a0884d1cfeec190", "Url": "https://api.github.com/repos/fandor/CastCompanionLibrary-android", "Date": "2014-03-08T23:29:58Z"},
{"Line": "=>1674", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isConnected())) { removeRemoteControlClient(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3353/buggy-version/src.com.google.sample.castcompanionlibrary.cast.VideoCastManager.java", "BodyUseAPI": [], "Fixed commit": "d703c5a5ce4fccde3a230d956a0884d1cfeec190", "Url": "https://api.github.com/repos/fandor/CastCompanionLibrary-android", "Date": "2014-03-08T23:29:58Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<soot.jimple.apkpler.plugin.icc.ICCLink>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null != links) { for (soot.jimple.apkpler.plugin.icc.ICCLink l : links) { soot.jimple.apkpler.plugin.icc.instrumentation.ICCRedirectionCreator.v(pkgName).redirectToDestination(l); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2006/buggy-version/plugins.eclipse-projects.Apkpler-Plugin-InterComponentCommunication.src.soot.jimple.apkpler.plugin.icc.InterComponentCommunicationPlugin.java", "BodyUseAPI": [], "Fixed commit": "db54f74df6204be9f8c29028eec7823e3eecd232", "Url": "https://api.github.com/repos/lilicoding/Apkpler", "Date": "2015-03-25T11:40:06Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isStatic(field)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/138/buggy-version/random-beans.src.main.java.io.github.benas.randombeans.PopulatorImpl.java", "BodyUseAPI": [], "Fixed commit": "64624f68fc1cd567fd0c7adcb9c4d6050da953e3", "Url": "https://api.github.com/repos/benas/random-beans", "Date": "2016-01-27T12:37:35Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mode) != 1) { if (afterpay < 0) { android.widget.Toast.makeText(this, \"Money not enough\", Toast.LENGTH_SHORT).show(); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3173/buggy-version/app.src.main.java.com.max.incomestatement.EditTransaction.java", "BodyUseAPI": [], "Fixed commit": "27a01d73bf682072156dadc3b4623f9575cdc6dd", "Url": "https://api.github.com/repos/max003003003/IncomeStateMent", "Date": "2017-03-03T12:20:26Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gwt.user.client.Cookies.getCookie(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(org.ednovo.gooru.shared.util.StringUtil.isEmpty(scrollVal))) && (org.ednovo.gooru.client.gin.AppClientFactory.getCurrentPlaceToken().equalsIgnoreCase(PlaceTokens.SEARCH_COLLECTION))) { com.google.gwt.user.client.Window.scrollTo(0, java.lang.Integer.parseInt(scrollVal)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1901/buggy-version/src.main.java.org.ednovo.gooru.client.gin.BasePopupViewWithHandlers.java", "BodyUseAPI": ["com.google.gwt.user.client.Window.scrollTo(int,int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "af4fd5036501278d1d26c2b3907a1a7aa12cdcbc", "Url": "https://api.github.com/repos/mitraj/Gooru-Web", "Date": "2015-04-15T07:11:49Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.ednovo.gooru.client.gin.AppClientFactory.getCurrentPlaceToken().equalsIgnoreCase(PlaceTokens.SEARCH_COLLECTION)) { com.google.gwt.user.client.Cookies.setCookie(\"getScrollTop\", ((com.google.gwt.user.client.Window.getScrollTop()) + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1901/buggy-version/src.main.java.org.ednovo.gooru.client.uc.CollectionImageUc.java", "BodyUseAPI": [], "Fixed commit": "af4fd5036501278d1d26c2b3907a1a7aa12cdcbc", "Url": "https://api.github.com/repos/mitraj/Gooru-Web", "Date": "2015-04-15T07:11:49Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (ladder != null) { int size = ladder.size(); for (int i = 0; i < size; i++) { java.lang.String word = ladder.remove(0); if (ladder.contains(word)) { java.lang.System.out.println(\"BAD!!! CONTAINS DUPLICATES!\"); } java.lang.System.out.println(word); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8849/buggy-version/src.assignment3.Main.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.contains(java.lang.String)", "java.util.ArrayList<java.lang.String>.remove(int)", "java.util.ArrayList<java.lang.String>.size()"], "Fixed commit": "c0e99259dee66699212085c7d9d10d56dfec1f07", "Url": "https://api.github.com/repos/rebeccamho/Project3", "Date": "2016-09-27T20:42:48Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (first) { ladder.add(0, start); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8849/buggy-version/src.assignment3.Main.java", "BodyUseAPI": [], "Fixed commit": "c0e99259dee66699212085c7d9d10d56dfec1f07", "Url": "https://api.github.com/repos/rebeccamho/Project3", "Date": "2016-09-27T20:42:48Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (mergeInto != null) { result.putAll(mergeInto); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/281/buggy-version/src.main.java.io.citrine.jpif.obj.merge.MergeStrategy.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.putAll(java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "a742d4907114f11a91b8ec86bde09368a6d9aa86", "Url": "https://api.github.com/repos/CitrineInformatics/jpif", "Date": "2017-08-02T17:05:51Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (mergeFrom != null) { result.putAll(mergeFrom); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/281/buggy-version/src.main.java.io.citrine.jpif.obj.merge.MergeStrategy.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.putAll(java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "a742d4907114f11a91b8ec86bde09368a6d9aa86", "Url": "https://api.github.com/repos/CitrineInformatics/jpif", "Date": "2017-08-02T17:05:51Z"},
{"Line": "=>983", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSetMetaData.getScale(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (scale == 0) { column.setScale(precision); }else { column.setScale(scale); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4026/buggy-version/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.odata.RDBMSDataHandler.java", "BodyUseAPI": ["org.wso2.carbon.dataservices.core.odata.DataColumn.setScale(int)"], "Fixed commit": "2bdb9ef44b8d8e7e9d8db1fbde43ff90466b0c59", "Url": "https://api.github.com/repos/madhawa-gunasekara/carbon-data", "Date": "2015-10-08T11:14:43Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tasks.get(row).isDone()) && ((col == 2) || (col == 1))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3114/buggy-version/optitask.ui.TaskInventoryDialog.java", "BodyUseAPI": [], "Fixed commit": "428956e840327ba158a9f8c81404f2cb0d88e0d5", "Url": "https://api.github.com/repos/jeromerodrigo/OptiTask", "Date": "2012-10-11T09:55:14Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m1 == m2) { y = y2 - y1; d = d2 - d1; m = 0; }else { y = y2 - y1; d = d2 - d1; m = (12 - m1) + m2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7083/buggy-version/app.src.main.java.com.example.mstavskiy.p002dayoflife.YearsMonthsDaysCounter.java", "BodyUseAPI": [], "Fixed commit": "703a04ac74c31d74f59e23620765907961e2c4b6", "Url": "https://api.github.com/repos/stavskiy/P002DayOfLife", "Date": "2015-02-01T18:49:50Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAlwaysShowBubble) { setProgress(mProgress); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8023/buggy-version/bubbleseekbar.src.main.java.com.xw.repo.BubbleSeekBar.java", "BodyUseAPI": [], "Fixed commit": "63c4e02a7c20b6ad2870ab61f59de6360297e82b", "Url": "https://api.github.com/repos/woxingPATHo/BubbleSeekBar", "Date": "2017-05-03T08:52:44Z"},
{"Line": "=>556", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isSeekBySection) && (!(triggerSeekBySection))) { triggerSeekBySection = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8023/buggy-version/bubbleseekbar.src.main.java.com.xw.repo.BubbleSeekBar.java", "BodyUseAPI": [], "Fixed commit": "63c4e02a7c20b6ad2870ab61f59de6360297e82b", "Url": "https://api.github.com/repos/woxingPATHo/BubbleSeekBar", "Date": "2017-05-03T08:52:44Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.example.pma_tim10.chatapp.model.Message>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (message.isLocationSet()) holder.addMessageListenerLocation(message.getLongitude(), message.getLatitude());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2135/buggy-version/app.src.main.java.com.example.pma_tim10.chatapp.adapters.MessagesArrayAdapter.java", "BodyUseAPI": ["com.example.pma_tim10.chatapp.model.Message.getLongitude()", "com.example.pma_tim10.chatapp.adapters.MessagesArrayAdapter.MessageViewHolder.addMessageListenerLocation(message.getLongitude(),message.getLatitude())", "com.example.pma_tim10.chatapp.model.Message.getLatitude()"], "Fixed commit": "d073379ec23c333813ca6963675eece7339a6fd6", "Url": "https://api.github.com/repos/PMA2017/Tim10", "Date": "2017-06-15T12:45:17Z"},
{"Line": "=>730", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.apache.maven.artifact.Artifact>.get((((artifact.getGroupId()) + \":\") + (artifact.getArtifactId())))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((existing == null) || ((pluginVersion.compareTo(existingVersion)) > 0)) checklist.put((((artifact.getGroupId()) + \":\") + (artifact.getArtifactId())), artifact);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5861/buggy-version/src.main.java.org.grails.maven.plugin.AbstractGrailsMojo.java", "BodyUseAPI": [], "Fixed commit": "0ae51fba5495dd9a7cf3e4c51ccc1f1eeda680c5", "Url": "https://api.github.com/repos/bluegrails/grails-maven", "Date": "2013-02-11T21:55:59Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((utils_eng) != null) { utils_eng.reload(); }else { try { checkLangFiles(); } catch (java.net.URISyntaxException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1227/buggy-version/src.main.java.net.visualillusionsent.utils.LocaleHelper.java", "BodyUseAPI": [], "Fixed commit": "bea2e1aade99808c6a5ed2a9efdcdee572837eef", "Url": "https://api.github.com/repos/Visual-Illusions/viutils", "Date": "2013-05-30T16:54:55Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(assertion.getUserInfo().getRoleCoded().getCodeSystemName())) { oResponse = createResponseWithDENY(oResponse); return oResponse; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8469/buggy-version/Product.Production.Services.PolicyEngineCore.src.main.java.gov.hhs.fha.nhinc.policyengine.adapter.orchestrator.util.policyEngineUtil.java", "BodyUseAPI": [], "Fixed commit": "9e835eb195ba572cb1ed399185ed39860065fe38", "Url": "https://api.github.com/repos/msweaver/CONNECT", "Date": "2013-04-09T23:14:43Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((assertion.getUserInfo().getOrg()) != null) { if (org.apache.commons.lang.StringUtils.isBlank(assertion.getUserInfo().getOrg().getName())) { oResponse = createResponseWithDENY(oResponse); return oResponse; } if (org.apache.commons.lang.StringUtils.isBlank(assertion.getUserInfo().getOrg().getHomeCommunityId())) { oResponse = createResponseWithDENY(oResponse); return oResponse; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8469/buggy-version/Product.Production.Services.PolicyEngineCore.src.main.java.gov.hhs.fha.nhinc.policyengine.adapter.orchestrator.util.policyEngineUtil.java", "BodyUseAPI": ["assertion.getUserInfo().getOrg().getName()", "assertion.getUserInfo().getOrg()", "org.apache.commons.lang.StringUtils.isBlank(assertion.getUserInfo().getOrg().getName())", "assertion.getUserInfo().getOrg()", "gov.hhs.fha.nhinc.common.nhinccommon.AssertionType.getUserInfo()", "org.apache.commons.lang.StringUtils.isBlank(assertion.getUserInfo().getOrg().getHomeCommunityId())", "assertion.getUserInfo().getOrg().getHomeCommunityId()", "gov.hhs.fha.nhinc.common.nhinccommon.AssertionType.getUserInfo()"], "Fixed commit": "9e835eb195ba572cb1ed399185ed39860065fe38", "Url": "https://api.github.com/repos/msweaver/CONNECT", "Date": "2013-04-09T23:14:43Z"},
{"Line": "=>610", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTabLayout) != null) mTabLayout.setupWithViewPager(pager);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/276/buggy-version/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3bcd5e6ef9db1c13c98e9a2bd9f36677b9c3bb2b", "Url": "https://api.github.com/repos/Nxt3/Slide", "Date": "2016-03-06T00:55:36Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player.isRiding()) && ((player.ridingEntity) instanceof com.bioxx.tfc.Entities.Mobs.EntityHorseTFC)) { com.bioxx.tfc.Entities.Mobs.EntityHorseTFC horse = ((com.bioxx.tfc.Entities.Mobs.EntityHorseTFC) (player.ridingEntity)); return new com.bioxx.tfc.Containers.ContainerHorseInventoryTFC(player.inventory, horse.getHorseChest(), horse); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/781/buggy-version/src.Common.com.bioxx.tfc.Handlers.GuiHandler.java", "BodyUseAPI": [], "Fixed commit": "9e20f40afa2a34a3bc2dc49ff64583dbe396887f", "Url": "https://api.github.com/repos/CHeuberger/TFCraft", "Date": "2015-03-09T03:40:06Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player.isRiding()) && ((player.ridingEntity) instanceof com.bioxx.tfc.Entities.Mobs.EntityHorseTFC)) { com.bioxx.tfc.Entities.Mobs.EntityHorseTFC horse = ((com.bioxx.tfc.Entities.Mobs.EntityHorseTFC) (player.ridingEntity)); horse.updateChestSaddle(); return new com.bioxx.tfc.Handlers.Client.GuiScreenHorseInventoryTFC(player.inventory, horse.getHorseChest(), horse); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/781/buggy-version/src.Common.com.bioxx.tfc.Handlers.Client.GuiHandler.java", "BodyUseAPI": [], "Fixed commit": "9e20f40afa2a34a3bc2dc49ff64583dbe396887f", "Url": "https://api.github.com/repos/CHeuberger/TFCraft", "Date": "2015-03-09T03:40:06Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((accessor) != null) { return accessor.getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1101/buggy-version/src.main.java.org.rev317.min.api.wrappers.NpcDef.java", "BodyUseAPI": [], "Fixed commit": "d7a9e63aebf051a54a9dd44cdf33f5c107021c73", "Url": "https://api.github.com/repos/Parabot/Parabot-317-API-Minified", "Date": "2016-10-04T23:12:58Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.eclipse.kura.linux.status.CloudConnectionStatusServiceImpl.currentNotificationType) == (CloudConnectionStatusURL.TYPE_LOG)) { return new org.eclipse.kura.linux.status.runnables.LogStatusRunnable(status); }else if ((org.eclipse.kura.linux.status.CloudConnectionStatusServiceImpl.currentNotificationType) == (CloudConnectionStatusURL.TYPE_NONE)) { return new java.lang.Runnable() { @java.lang.Override public void run() { } }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8816/buggy-version/kura.org.eclipse.kura.linux.status.src.main.java.org.eclipse.kura.linux.status.CloudConnectionStatusServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "4800955d3e45fe1dd7137c553d0ee544c0199e1b", "Url": "https://api.github.com/repos/pierantoniomerlino/kura", "Date": "2015-10-05T08:52:16Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((indicator.getDenominator()) != null) { result = calculateDwQueryValue(indicator.getDenominator(), area, from, to); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1565/buggy-version/src.main.java.org.motechproject.carereporting.indicator.DailyValueCalculator.java", "BodyUseAPI": ["org.motechproject.carereporting.indicator.DailyValueCalculator.calculateDwQueryValue(indicator.getDenominator(),org.motechproject.carereporting.domain.AreaEntity,java.util.Date,java.util.Date)", "org.motechproject.carereporting.domain.IndicatorEntity.getDenominator()"], "Fixed commit": "cffb13ce5f8853e74b31031f12da9f17180443b3", "Url": "https://api.github.com/repos/motech/ananya-care-reports", "Date": "2013-08-20T14:15:49Z"},
{"Line": "=>809", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ev.getAction()) == (android.view.MotionEvent.ACTION_UP)) { if ((enableHorizontalScroll) && (isHorizontalScroll)) { if (com.reginald.swiperefresh.CustomSwipeRefreshLayout.DEBUG) android.util.Log.d(com.reginald.swiperefresh.CustomSwipeRefreshLayout.TAG, \"onInterceptTouchEvent(): finish horizontal scroll\"); isHorizontalScroll = false; mPrevY = ev.getY(); return false; }else if ((curY - (mDownEvent.getY())) < (mTouchSlop)) { mPrevY = ev.getY(); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2151/buggy-version/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java", "BodyUseAPI": ["android.view.MotionEvent.getY()", "android.view.MotionEvent.getY()"], "Fixed commit": "30d0eb6bd700f38ef53472b0c4ae2da0b4d66106", "Url": "https://api.github.com/repos/xyxyLiu/SwipeRefreshLayout", "Date": "2015-08-21T14:02:30Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.TimeUnit.convert(int,java.util.concurrent.TimeUnit)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (convertedTtl > (currentElement.getTimeToIdle())) { currentElement.setTimeToIdle(convertedTtl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6862/buggy-version/repose-aggregator.components.datastores.ehcache.src.main.java.com.rackspace.papi.components.datastore.impl.ehcache.EHCacheDatastore.java", "BodyUseAPI": ["net.sf.ehcache.Element.setTimeToIdle(int)"], "Fixed commit": "f9bfb3560cada9f6e8bdfe75de77285e6968a605", "Url": "https://api.github.com/repos/malconis/repose", "Date": "2014-03-05T19:54:22Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > 8) { useICE = args[8].equals(\"1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3537/buggy-version/nexlt.athena2nexlt.AthenaExportMt.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "ac93316819d6ecaeb58a56298edfec4c1ba70911", "Url": "https://api.github.com/repos/venyz/NeXLT", "Date": "2014-04-15T11:50:01Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (outputForSolr) { java.lang.System.out.println(\"Outputting data for Solr.\"); }else { java.lang.System.out.println(\"Outputting data for post-editing analysis.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3537/buggy-version/nexlt.athena2nexlt.AthenaExportMt.java", "BodyUseAPI": [], "Fixed commit": "ac93316819d6ecaeb58a56298edfec4c1ba70911", "Url": "https://api.github.com/repos/venyz/NeXLT", "Date": "2014-04-15T11:50:01Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useICE) { java.lang.System.out.println(\"Including ICE matches in output.\"); }else { java.lang.System.out.println(\"NOT including ICE matches in output.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3537/buggy-version/nexlt.athena2nexlt.AthenaExportMt.java", "BodyUseAPI": [], "Fixed commit": "ac93316819d6ecaeb58a56298edfec4c1ba70911", "Url": "https://api.github.com/repos/venyz/NeXLT", "Date": "2014-04-15T11:50:01Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tradeIn[0].startsWith(\"\\\"\")) tradeIn[0] = tradeIn[0].substring(1, tradeIn[0].length());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5986/buggy-version/OTCAnalyser.src.uk.ac.cam.cstibhotel.otcanalyser.networklayer.ParseZIP.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "6f1174a5dbcd8afa524d235113abc18a07ea6848", "Url": "https://api.github.com/repos/CSTIB-Hotel/OTCAnalyser", "Date": "2015-02-17T01:30:15Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tradeIn[0].endsWith(\"\\\"\")) tradeIn[0] = tradeIn[0].substring(0, ((tradeIn[0].length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5986/buggy-version/OTCAnalyser.src.uk.ac.cam.cstibhotel.otcanalyser.networklayer.ParseZIP.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "6f1174a5dbcd8afa524d235113abc18a07ea6848", "Url": "https://api.github.com/repos/CSTIB-Hotel/OTCAnalyser", "Date": "2015-02-17T01:30:15Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i.imageUrl.equals(\"null\")) i.imageUrl = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4202/buggy-version/app.src.main.java.org.actionpath.issues.Issue.java", "BodyUseAPI": [], "Fixed commit": "1e7e8a1643bd9e0879ac02ef6e155edfc6707dd3", "Url": "https://api.github.com/repos/mitmedialab/Action-Path-Client", "Date": "2015-08-03T20:36:23Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (imageUrl)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4202/buggy-version/app.src.main.java.org.actionpath.issues.Issue.java", "BodyUseAPI": [], "Fixed commit": "1e7e8a1643bd9e0879ac02ef6e155edfc6707dd3", "Url": "https://api.github.com/repos/mitmedialab/Action-Path-Client", "Date": "2015-08-03T20:36:23Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connectionFactoryReader) != null) { try { parseConfigurations(factoryConfigurations, connectionFactoryReader); } finally { connectionFactoryReader.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/756/buggy-version/extension.binding.fabric3-binding-jms.src.main.java.org.fabric3.binding.jms.runtime.connection.ConfigurationBuilder.java", "BodyUseAPI": [], "Fixed commit": "18d69fbf963f7cd61ed12c67c953d3c9840beac4", "Url": "https://api.github.com/repos/Fabric3/fabric3-core", "Date": "2015-02-02T15:07:20Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((database instanceof liquibase.datatype.core.HsqlDatabase) && (value.matches(\"TIMESTAMP\\'\\\\d+\\\\-\\\\d+\\\\-\\\\d+ \\\\d+:\\\\d+:\\\\d+(?:\\\\.\\\\d+)?\\'\"))) { dateTimeFormat = new java.text.SimpleDateFormat(\"yyyy-MM-dd HH:mm:s.S\"); value = value.replaceFirst(\".*?'\", \"\").replaceFirst(\"',.*\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/225/buggy-version/liquibase-core.src.main.java.liquibase.datatype.core.DateTimeType.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)", "java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "8148b5bca5f6905c6b1bfa4617ffd4a7b202cca1", "Url": "https://api.github.com/repos/dbmanul/dbmanul", "Date": "2017-05-24T09:32:43Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mList.getWidth()) > 0) && ((mList.getHeight()) > 0)) { onSizeChanged(mList.getWidth(), mList.getHeight(), 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5649/buggy-version/core.java.android.widget.FastScroller.java", "BodyUseAPI": ["android.widget.AbsListView.getWidth()", "android.widget.AbsListView.getHeight()", "android.widget.FastScroller.onSizeChanged(mList.getWidth(),mList.getHeight(),int,int)"], "Fixed commit": "9e55641f8549ffee40ff183a50a47391df5768c4", "Url": "https://api.github.com/repos/Evervolv/android_frameworks_base", "Date": "2011-04-03T06:05:13Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.DataInputStream.readInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sub_size > 0) { byte sub_sub_type = din.readByte(); ret.add(this.readArrayList(sub_sub_type, sub_size)); }else ret.add(((java.lang.Object) (new java.util.ArrayList<java.lang.Object>())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8622/buggy-version/src.sockit.InboundMessage.java", "BodyUseAPI": ["sockit.InboundMessage.readArrayList(byte,int)", "java.util.ArrayList<java.lang.Object>.add(java.util.ArrayList<?>)"], "Fixed commit": "90324b824e01432d8f7d0694681a280e84899f20", "Url": "https://api.github.com/repos/humm/sockit", "Date": "2013-10-28T14:56:34Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((args != null) && ((args.length) != 0)) { msg = java.lang.String.format(java.util.Locale.US, info, args); }else { msg = info; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4758/buggy-version/muslog.src.main.java.com.tonybright.utils.MusLog.java", "BodyUseAPI": ["java.lang.String.format(java.util.Locale,java.lang.String,java.lang.Object[])"], "Fixed commit": "8ca384436277dfe0d0b96e41130244ad1d1a5d27", "Url": "https://api.github.com/repos/tonybright/MusLog", "Date": "2017-09-06T08:39:09Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((segDate1 == null) || (segDate2 == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3360/buggy-version/integration.spark.src.main.java.org.carbondata.spark.merger.CarbonDataMergerUtil.java", "BodyUseAPI": [], "Fixed commit": "f277acf69800faae1a5d8823ec4adb31f7b03403", "Url": "https://api.github.com/repos/ravipesala/carbondata-1", "Date": "2016-06-10T20:17:19Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (controlProperty.contains(\".\")) throw new to.etc.webapp.ProgrammerErrorException(((\"You cannot bind a Control property dotted path, see \" + (to.etc.domui.util.DomUtil.DOCROOT)) + \"x/GYA-/\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6387/buggy-version/to.etc.domui.src.main.java.to.etc.domui.component.binding.ComponentPropertyBinding.java", "BodyUseAPI": [], "Fixed commit": "1c9c51f9c7bc2a6f0152b75465fb90c71a671a83", "Url": "https://api.github.com/repos/fjalvingh/domui", "Date": "2017-03-24T14:43:23Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wesbunton.projects.mycertificates.Activity_ViewCertChainDetails.PlaceholderFragment.parseSubjectName(java.security.cert.X509Certificate,BCStyle.O,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (byOrg != null) { if (byOrg.contains(\",\")) { byOrg = byOrg.substring(0, byOrg.indexOf(',')); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5544/buggy-version/app.src.main.java.com.wesbunton.projects.mycertificates.Activity_ViewCertChainDetails.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(char)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "46740257cb9ee762197add02aa7c6c7f7ab3df98", "Url": "https://api.github.com/repos/WesBunton/MyCertificates", "Date": "2017-01-01T06:39:19Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wesbunton.projects.mycertificates.Activity_ViewCertChainDetails.PlaceholderFragment.parseSubjectName(java.security.cert.X509Certificate,BCStyle.CN,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (toCommon != null) { if (toCommon.contains(\",\")) { toCommon = toCommon.substring(0, toCommon.indexOf(',')); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5544/buggy-version/app.src.main.java.com.wesbunton.projects.mycertificates.Activity_ViewCertChainDetails.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(char)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "46740257cb9ee762197add02aa7c6c7f7ab3df98", "Url": "https://api.github.com/repos/WesBunton/MyCertificates", "Date": "2017-01-01T06:39:19Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wesbunton.projects.mycertificates.Activity_ViewCertChainDetails.PlaceholderFragment.parseSubjectName(java.security.cert.X509Certificate,BCStyle.O,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (toOrg != null) { if (toOrg.contains(\",\")) { toOrg = toOrg.substring(0, toOrg.indexOf(',')); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5544/buggy-version/app.src.main.java.com.wesbunton.projects.mycertificates.Activity_ViewCertChainDetails.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.indexOf(char)", "java.lang.String.substring(int,int)"], "Fixed commit": "46740257cb9ee762197add02aa7c6c7f7ab3df98", "Url": "https://api.github.com/repos/WesBunton/MyCertificates", "Date": "2017-01-01T06:39:19Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wesbunton.projects.mycertificates.Activity_ViewCertChainDetails.PlaceholderFragment.parseSubjectName(java.security.cert.X509Certificate,BCStyle.OU,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (byOrgUnit != null) { if (byOrgUnit.contains(\",\")) { byOrgUnit.substring(0, byOrgUnit.indexOf(',')); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5544/buggy-version/app.src.main.java.com.wesbunton.projects.mycertificates.Activity_ViewCertChainDetails.java", "BodyUseAPI": ["java.lang.String.indexOf(char)", "java.lang.String.substring(int,int)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "46740257cb9ee762197add02aa7c6c7f7ab3df98", "Url": "https://api.github.com/repos/WesBunton/MyCertificates", "Date": "2017-01-01T06:39:19Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wesbunton.projects.mycertificates.Activity_ViewCertChainDetails.PlaceholderFragment.parseSubjectName(java.security.cert.X509Certificate,BCStyle.CN,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (byCommon != null) { if (byCommon.contains(\",\")) { byCommon.substring(0, byCommon.indexOf(',')); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5544/buggy-version/app.src.main.java.com.wesbunton.projects.mycertificates.Activity_ViewCertChainDetails.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.contains(java.lang.String)", "java.lang.String.indexOf(char)"], "Fixed commit": "46740257cb9ee762197add02aa7c6c7f7ab3df98", "Url": "https://api.github.com/repos/WesBunton/MyCertificates", "Date": "2017-01-01T06:39:19Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wesbunton.projects.mycertificates.Activity_ViewCertChainDetails.PlaceholderFragment.parseSubjectName(java.security.cert.X509Certificate,BCStyle.OU,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (toOrgUnit != null) { if (toOrgUnit.contains(\",\")) { toOrgUnit = toOrgUnit.substring(0, toOrgUnit.indexOf(',')); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5544/buggy-version/app.src.main.java.com.wesbunton.projects.mycertificates.Activity_ViewCertChainDetails.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(char)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "46740257cb9ee762197add02aa7c6c7f7ab3df98", "Url": "https://api.github.com/repos/WesBunton/MyCertificates", "Date": "2017-01-01T06:39:19Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (validID != 0) { statement = db.DatabaseCommands.conn.prepareStatement((\"select password from users where AgentID = \" + ID)); rs = statement.executeQuery(); while (rs.next()) { actPass = rs.getString(1); } if (actPass.equals(password)) { return true; }else { return false; } }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5996/buggy-version/Code.src.db.DatabaseCommands.java", "BodyUseAPI": [], "Fixed commit": "af03527fb11e87f48187b80782e99b01b487da3d", "Url": "https://api.github.com/repos/tim57282/CITS4401-Project", "Date": "2014-04-27T14:23:02Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.length()) < 1) { sb.append(\"/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4991/buggy-version/api.src.main.java.org.commonjava.vertx.vabr.util.AnnotationUtils.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "8d1995e1fe4992724ddaed7c0f1ff9f1dcf2ff90", "Url": "https://api.github.com/repos/jdcasey/vabr", "Date": "2014-01-28T21:55:14Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Set<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (segmentsForInstance == null) { segmentsForInstance = new java.util.HashSet<java.lang.String>(); instanceToSegmentSetMap.put(replica, segmentsForInstance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6433/buggy-version/pinot-transport.src.main.java.com.linkedin.pinot.routing.builder.KafkaLowLevelConsumerRoutingTableBuilder.java", "BodyUseAPI": [], "Fixed commit": "8d6abe6e5bb7edf51348148c5f1d41efc1e70c83", "Url": "https://api.github.com/repos/linkedin/pinot", "Date": "2016-06-17T04:58:41Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (instancePruner.isInactive(instance)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6433/buggy-version/pinot-transport.src.main.java.com.linkedin.pinot.routing.builder.KafkaLowLevelConsumerRoutingTableBuilder.java", "BodyUseAPI": [], "Fixed commit": "8d6abe6e5bb7edf51348148c5f1d41efc1e70c83", "Url": "https://api.github.com/repos/linkedin/pinot", "Date": "2016-06-17T04:58:41Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getArguments()) != null) item = ((com.example.shady.myapplication.data.MedicInformation) (getArguments().getSerializable(\"Med\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2857/buggy-version/app.src.main.java.com.example.shady.myapplication.fragment.Add_Medication_Fragment.java", "BodyUseAPI": [], "Fixed commit": "ccec45dcf45f693da036320045af6615f1330655", "Url": "https://api.github.com/repos/ShiryAbdo/MyApplication", "Date": "2017-04-22T15:52:02Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start < 0) start = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8691/buggy-version/android.UbiSolar.UbiSolar.src.main.java.com.sintef_energy.ubisolar.fragments.graphs.UsageGraphLineFragment.java", "BodyUseAPI": [], "Fixed commit": "2fa2a42a817126a024be69b4ec597e00efd94e6c", "Url": "https://api.github.com/repos/haavardlian/UbiSolar", "Date": "2014-03-10T16:49:47Z"},
{"Line": "=>705", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lv.semti.morphology.analyzer.Analyzer.paradigmByID(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (p == null) return generateInflections(lemma);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6990/buggy-version/src.main.java.lv.semti.morphology.analyzer.Analyzer.java", "BodyUseAPI": [], "Fixed commit": "4d6ef3fc4a73d265b650b0df418a28d6848ad8df", "Url": "https://api.github.com/repos/PeterisP/morphology", "Date": "2016-01-06T20:09:46Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (schedulerLoginFetchUrl.startsWith(\"https\")) { org.apache.http.impl.client.CloseableHttpClient httpClient = org.apache.http.impl.client.HttpClients.custom().setSSLHostnameVerifier(new org.apache.http.conn.ssl.NoopHostnameVerifier()).setSSLContext(new org.apache.http.ssl.SSLContextBuilder().loadTrustMaterial(null, new org.apache.http.ssl.TrustStrategy() { public boolean isTrusted(java.security.cert.X509Certificate[] arg0, java.lang.String arg1) throws java.security.cert.CertificateException { return true; } }).build()).build(); org.springframework.http.client.HttpComponentsClientHttpRequestFactory requestFactory = new org.springframework.http.client.HttpComponentsClientHttpRequestFactory(); requestFactory.setHttpClient(httpClient); restTemplate.setRequestFactory(requestFactory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5318/buggy-version/scheduling-api-graphql.scheduling-api-graphql-services.src.main.java.org.ow2.proactive.scheduling.api.graphql.service.AuthenticationService.java", "BodyUseAPI": [], "Fixed commit": "176f4367c53dc65c3818dbe7d3359c32b15c0641", "Url": "https://api.github.com/repos/laurianed/scheduling-api", "Date": "2017-05-05T14:23:08Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edge.equals(incomingEdge)) { return incomingStates.add(state); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4893/buggy-version/src.edu.utexas.cgrex.automaton.CGAutoState.java", "BodyUseAPI": [], "Fixed commit": "101ae1521eea073c50c6db4d0f497ed5cf43e195", "Url": "https://api.github.com/repos/fredfeng/CallsiteResolver", "Date": "2014-04-15T03:28:04Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((incomingEdge) != null) inv.add(incomingEdge);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4893/buggy-version/src.edu.utexas.cgrex.automaton.CGAutoState.java", "BodyUseAPI": [], "Fixed commit": "101ae1521eea073c50c6db4d0f497ed5cf43e195", "Url": "https://api.github.com/repos/fredfeng/CallsiteResolver", "Date": "2014-04-15T03:28:04Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((incomingEdge) != null) inv.add(incomingEdge);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4893/buggy-version/src.edu.utexas.cgrex.automaton.CGAutoState.java", "BodyUseAPI": [], "Fixed commit": "101ae1521eea073c50c6db4d0f497ed5cf43e195", "Url": "https://api.github.com/repos/fredfeng/CallsiteResolver", "Date": "2014-04-15T03:28:04Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((incomingEdge) != null) in.add(incomingEdge);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4893/buggy-version/src.edu.utexas.cgrex.automaton.CGAutoState.java", "BodyUseAPI": [], "Fixed commit": "101ae1521eea073c50c6db4d0f497ed5cf43e195", "Url": "https://api.github.com/repos/fredfeng/CallsiteResolver", "Date": "2014-04-15T03:28:04Z"},
{"Line": "=>511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, de.bund.bfr.knime.gis.views.canvas.element.Edge<de.bund.bfr.knime.gis.views.canvas.element.GraphNode>>.get(edge.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (newEdge == null) { newEdge = new de.bund.bfr.knime.gis.views.canvas.element.Edge<de.bund.bfr.knime.gis.views.canvas.element.GraphNode>(edge.getId(), new java.util.LinkedHashMap<java.lang.String, java.lang.Object>(edge.getProperties()), from, to); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/9051/buggy-version/de.bund.bfr.knime.gis.views.canvas.src.de.bund.bfr.knime.gis.views.canvas.GraphCanvas.java", "BodyUseAPI": [], "Fixed commit": "6d93bddb6e9be6f386b2b68ada0c202a66f6d6b4", "Url": "https://api.github.com/repos/thoens/BfROpenLab", "Date": "2014-03-31T13:05:43Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTimerWindow) != null) { mTimerWindow.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4686/buggy-version/app.src.main.java.com.csc413.group9.parkIt.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "679040bd09790baef0b5790e1c2d7f9e39f75441", "Url": "https://api.github.com/repos/sukhai/ParkIt", "Date": "2015-04-30T05:53:11Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.furnaceItemStacks[0].stackSize) <= 0) { this.furnaceItemStacks[0] = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6880/buggy-version/MorpheussTech-Core.Common.Morphesuss93.MorpheussTechCore.blocks.AlloyFurnace.TileEntityAlloyFurnace.java", "BodyUseAPI": [], "Fixed commit": "ae9f2e664d3130bbcb42257c857fa572c136dae3", "Url": "https://api.github.com/repos/Morpheuss93/MorpheussTech", "Date": "2014-08-13T22:27:01Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.grajcar.fmt.FmtKey.specifier()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (specifierString.isEmpty()) return this;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8645/buggy-version/src.de.grajcar.fmt.misc.FmtCharSequenceAppender.java", "BodyUseAPI": [], "Fixed commit": "62bc4ef5d74d981befae38bda59fe2674fb472bc", "Url": "https://api.github.com/repos/Maaartinus/fmt", "Date": "2015-06-05T11:44:14Z"},
{"Line": "=>747", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nameTemplate.matches(\"^\\\".+\\\"$\")) { nameTemplate = nameTemplate.substring(1, ((nameTemplate.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1421/buggy-version/src.main.java.net.praqma.hudson.scm.CCUCMScm.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "ba332f90748be33916c0e9761b9259f776bab846", "Url": "https://api.github.com/repos/Praqma/ClearCaseUCMPlugin", "Date": "2011-10-31T11:25:32Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bytes == 1) return \"1byte\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4383/buggy-version/util.src.main.java.srez.util.format.SizeUtil.java", "BodyUseAPI": [], "Fixed commit": "cf2eb97645a3265b208fca20ab7b6921edc07c84", "Url": "https://api.github.com/repos/xxsrez/temp", "Date": "2016-02-06T09:39:38Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bytes < 0) return \"-\" + (srez.util.format.SizeUtil.bytesToString((-bytes)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4383/buggy-version/util.src.main.java.srez.util.format.SizeUtil.java", "BodyUseAPI": ["srez.util.format.SizeUtil.bytesToString(long)"], "Fixed commit": "cf2eb97645a3265b208fca20ab7b6921edc07c84", "Url": "https://api.github.com/repos/xxsrez/temp", "Date": "2016-02-06T09:39:38Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.teleportr.Ride.getFrom()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (place != null) from.setText(place.getName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7853/buggy-version/src.de.fahrgemeinschaft.MainFragment.java", "BodyUseAPI": ["android.widget.Button.setText(place.getName())", "org.teleportr.Place.getName()"], "Fixed commit": "e01342711712a5a1d45107751d201bb96add6580", "Url": "https://api.github.com/repos/fahrgemeinschaft/android-app", "Date": "2013-07-21T13:09:37Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (place != null) to.setText(place.getName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7853/buggy-version/src.de.fahrgemeinschaft.MainFragment.java", "BodyUseAPI": ["org.teleportr.Place.getName()", "android.widget.Button.setText(place.getName())"], "Fixed commit": "e01342711712a5a1d45107751d201bb96add6580", "Url": "https://api.github.com/repos/fahrgemeinschaft/android-app", "Date": "2013-07-21T13:09:37Z"},
{"Line": "=>928", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (checkDescription != null) { if ((checkDescription.equals(\"\")) && ((start == null) && (end == null))) { throw new parser.InvalidParametersException(input); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5766/buggy-version/GetStuffDone.src.parser.Parser.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "206d64de0a2ab4ee45eb4aba3409de4c93dbc413", "Url": "https://api.github.com/repos/cs2103aug2015-w11-1j/main", "Date": "2015-11-02T16:24:47Z"},
{"Line": "=>1336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rect != null) { sec.web.render.Rectangle2D rect2d = new sec.web.render.Rectangle2D.Double(rect.x, rect.y, rect.width, rect.height); clsClipPolygon2.ClipPolygon(tgl, rect2d); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/643/buggy-version/Renderer.src.main.java.sec.web.render.MultiPointHandler.java", "BodyUseAPI": [], "Fixed commit": "55ea541e72675e698de9d5c259a90cfdfe4f9353", "Url": "https://api.github.com/repos/spyhunter99/mil-sym-android", "Date": "2015-08-19T22:08:26Z"},
{"Line": "=>731", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rect != null) { sec.web.render.Rectangle2D rect2d = new sec.web.render.Rectangle2D.Double(rect.x, rect.y, rect.width, rect.height); clsClipPolygon2.ClipPolygon(tgl, rect2d); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/643/buggy-version/Renderer.src.main.java.sec.web.render.MultiPointHandler.java", "BodyUseAPI": [], "Fixed commit": "55ea541e72675e698de9d5c259a90cfdfe4f9353", "Url": "https://api.github.com/repos/spyhunter99/mil-sym-android", "Date": "2015-08-19T22:08:26Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userCommand.length()) > 0) { splitPosition = userCommand.length(); }else { throw new java.lang.Exception(\"Empty User Command\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6655/buggy-version/src.Parser.CommandParser.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "3f307d1c6ef41a3a8c0eb69790f0f979d5904a81", "Url": "https://api.github.com/repos/cs2103jan2016-t09-2j/main", "Date": "2016-03-06T08:25:14Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentValue == (astar.info.Grid.NodeType.START)) { _startCoord = null; }else if (currentValue == (astar.info.Grid.NodeType.END)) { _endCoord = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4273/buggy-version/src.astar.info.Grid.java", "BodyUseAPI": [], "Fixed commit": "d820416cd3e57d2277ccca9c6bc16c1333aba29b", "Url": "https://api.github.com/repos/jonr22/astar", "Date": "2012-12-01T02:44:22Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getCurrentRoom()) == (game.diskotekets_d\u00f8r)) { b = game.getNpcs().get(game.diskotekets_d\u00f8r).isQuest(); }else if ((player.getCurrentRoom()) == (game.sidney_lee)) { b = game.getNpcs().get(game.sidney_lee).isQuest(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7365/buggy-version/src.Business.BusinessFacade.java", "BodyUseAPI": ["Business.Game.getNpcs()", "Business.Game.getNpcs()", "game.getNpcs().get(game.sidney_lee)", "game.getNpcs().get(game.sidney_lee).isQuest()", "Business.Player.getCurrentRoom()", "game.getNpcs().get(game.diskotekets_d\u00f8r).isQuest()", "game.getNpcs().get(game.diskotekets_d\u00f8r)"], "Fixed commit": "b8543fdcda1af24b568e2e49d469dd78c6a9717d", "Url": "https://api.github.com/repos/Fraektsvin/Guldgruppen_02", "Date": "2017-12-07T07:40:03Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (minuts == 0) { nf.cancleNotification(); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1956/buggy-version/mobile.src.main.java.pl.dom133.dzwonek.NotificationTask.java", "BodyUseAPI": [], "Fixed commit": "c0c6c24e537771f988a392aab7660e7125bb6c09", "Url": "https://api.github.com/repos/dom133/Dzwonek", "Date": "2016-05-13T21:14:22Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (logic.command.Command.history.isEmpty()) { return null; }else { return logic.command.Command.history.pop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4053/buggy-version/src.logic.command.Command.java", "BodyUseAPI": ["java.util.Stack<logic.command.Command>.pop()"], "Fixed commit": "36eaab1060889688f8612b5f5ecbf453877df2b5", "Url": "https://api.github.com/repos/cs2103aug2015-w14-3j/main", "Date": "2015-10-28T05:44:20Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(p.getName().equals(\"\ufffdfHerobrine\"))) { playerNames.add(p.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8270/buggy-version/src.main.java.com.alecgorge.minecraft.jsonapi.stringifier.BukkitStringifier.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(p.getName())", "org.bukkit.entity.Player.getName()"], "Fixed commit": "8749f5387bdc9f31b4ea29a8ea176f36c3a90964", "Url": "https://api.github.com/repos/alecgorge/jsonapi", "Date": "2013-12-19T22:02:00Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(inventory.isEmpty())) { inventory.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4413/buggy-version/app.src.main.java.com.granthutchison.stifdev_tap.Model.Scenario.java", "BodyUseAPI": ["java.util.Set<com.granthutchison.stifdev_tap.Model.Item>.clear()"], "Fixed commit": "250cfec39f7710f6076b5c2f1c3f3c516910ed90", "Url": "https://api.github.com/repos/Stif-UK/StifDev_TAP", "Date": "2016-06-23T21:46:30Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck.getLine(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(line.isEmpty())) { final int start = getLineStart(line); if (indentLevel.isGreaterThan(start)) { logChildError(lineNum, start, indentLevel); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4469/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.indentation.AbstractExpressionHandler.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.checks.indentation.AbstractExpressionHandler.getLineStart(java.lang.String)"], "Fixed commit": "036adce66680f63dd074e100ab484c4f59beebb1", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2015-12-17T21:59:15Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name == null) { throw new com.sushil.order.bo.exception.BOException(\"Name cannot be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2657/buggy-version/src.com.sushil.order.bo.OrderBOImpl.java", "BodyUseAPI": [], "Fixed commit": "a302dc6d658d8f6cd557e786be6527305357d024", "Url": "https://api.github.com/repos/sushilborhade/orderprocessingservice", "Date": "2016-07-27T11:50:47Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (PASSWORD_PROTECTED) { p.sendMessage(\"<verify>\"); }else { p.verify(); p.sendMessage(\"<verified>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4215/buggy-version/ncServer.java", "BodyUseAPI": [], "Fixed commit": "949e8d240b69d3fc5ed99f772b632ac6a19b320a", "Url": "https://api.github.com/repos/oleeskild/nocase", "Date": "2015-03-18T00:30:22Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (username == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4704/buggy-version/src.main.java.com.archivesmc.archblock.importers.WatchBlockImporter.java", "BodyUseAPI": [], "Fixed commit": "535c623f0839a6c6dca8538ae2bc3eadd1e8d790", "Url": "https://api.github.com/repos/TheArchives/ArchBlock", "Date": "2015-03-08T00:15:40Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { shareIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_DOCUMENT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4326/buggy-version/app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": [], "Fixed commit": "2abc836b7e3e7b27e2d47ac5d057bc824d2879aa", "Url": "https://api.github.com/repos/bl1b/Super-Duo", "Date": "2015-08-21T09:45:12Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Optional<pl.aptewicz.ftthchecker.service.AccessPoint>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (accessPoint.getDescription().contains(\"/\")) { accessSiteLike = (((accessPoint.getNode().getName().toString()) + \"_\") + (accessPoint.getDescription().substring(0, accessPoint.getDescription().indexOf(\"/\")))) + \"%\"; }else { accessSiteLike = (((accessPoint.getNode().getName().toString()) + \"_\") + (accessPoint.getDescription().substring(0, accessPoint.getDescription().indexOf(\"_\")))) + \"%\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6157/buggy-version/src.main.java.pl.aptewicz.ftthchecker.service.PathServiceImpl.java", "BodyUseAPI": ["pl.aptewicz.ftthchecker.service.AccessPoint.getDescription()", "accessPoint.getDescription().substring(int,accessPoint.getDescription().indexOf(\"_\"))", "pl.aptewicz.ftthchecker.service.AccessPoint.getDescription()", "pl.aptewicz.ftthchecker.service.AccessPoint.getNode()", "accessPoint.getNode().getName().toString()", "accessPoint.getDescription().indexOf(java.lang.String)", "pl.aptewicz.ftthchecker.service.AccessPoint.getNode()", "accessPoint.getNode().getName().toString()", "accessPoint.getDescription().indexOf(java.lang.String)", "accessPoint.getDescription().substring(int,accessPoint.getDescription().indexOf(\"/\"))", "pl.aptewicz.ftthchecker.service.AccessPoint.getDescription()", "accessPoint.getNode().getName()", "accessPoint.getNode().getName()", "pl.aptewicz.ftthchecker.service.AccessPoint.getDescription()"], "Fixed commit": "b2001f02a808350b88920cc7fdb8a4e28e79130e", "Url": "https://api.github.com/repos/arteki65/PracaInzRest", "Date": "2017-01-07T14:39:20Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.service.ArticleRepository.findOne(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (article == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1142/buggy-version/src.main.java.com.example.service.ArticleService.java", "BodyUseAPI": [], "Fixed commit": "70c89b6cfaa77707e7234b6a03f6e1fc4f6d5a7c", "Url": "https://api.github.com/repos/QProgS/web9", "Date": "2016-10-16T13:03:38Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.io.File.separator.equals(\"\\\\\")) { if (path.endsWith(\".\")) { path = path.substring(0, ((path.length()) - 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/994/buggy-version/src.de.uni.hannover.studip.sync.models.RenameMap.java", "BodyUseAPI": [], "Fixed commit": "672b948a78ef6c6b0374e35c033ad8af0a63627c", "Url": "https://api.github.com/repos/silvercyberbird/Stud.IP-FileSync", "Date": "2015-10-20T09:53:42Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(engine.GlobalData.serverTick())) { if ((getOwner()) == (GlobalData.client.getPlayer())) { entity.mobs.PlayerMob player = GlobalData.client.getPlayer(); if ((((player.canAttack()) && (player.constantAttack)) && (engine.control.Control.getControl(\"mouse1\").isDown())) && (!(GlobalData.formManager.isMouseOver()))) player.submitInputEvent(new engine.control.InputEvent(0, true), GlobalData.cameraX, GlobalData.cameraY); else player.constantAttack = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/126/buggy-version/src.entity.projectile.boomerangProjectile.BoomerangProjectile.java", "BodyUseAPI": [], "Fixed commit": "f0c67148f77746e61c037ca951512bd048c6ae7e", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-07-22T23:42:44Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (steps != (stepList)) { stepList.clear(); stepList.addAll(steps); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2053/buggy-version/app.src.main.java.org.stepic.droid.ui.fragments.StepsFragment.java", "BodyUseAPI": ["java.util.List<org.stepic.droid.model.Step>.addAll(java.util.List<org.stepic.droid.model.Step>)"], "Fixed commit": "40ba211e376ccf727cea343bfa07c0f67a6f57cc", "Url": "https://api.github.com/repos/StepicOrg/stepik-android", "Date": "2016-09-06T19:47:11Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.m_logger.isLoggable(java.util.logging.Level.INFO)) this.m_logger.info(\"No Unitymedia Firmware detected.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/522/buggy-version/modules.fritzbox.src.de.janrufmonitor.fritzbox.firmware.FirmwareManager.java", "BodyUseAPI": ["java.util.logging.Logger.info(java.lang.String)"], "Fixed commit": "a616e20e498fd786307ea6f1a949b28bc232dce8", "Url": "https://api.github.com/repos/tbrandt77/janrufmonitor", "Date": "2013-04-18T07:49:22Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dummy[pos[1]][pos[0]]) != (Ship.SHOT)) { dummy[pos[1]][pos[0]] = 'M'; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1338/buggy-version/src.battleshipsv4.Game.java", "BodyUseAPI": [], "Fixed commit": "e88dc642bcc180af95acec136ec7bb3b91f684a5", "Url": "https://api.github.com/repos/gerarparra0/BattleShips", "Date": "2014-04-03T03:24:13Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(buttonRevealed[indexClicked])) lastIndexClicked = indexClicked;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8534/buggy-version/app.src.main.java.uk.co.icappsoc.memorygame.MemoryGameActivity.java", "BodyUseAPI": [], "Fixed commit": "00a25a4b31b2c7e083c0fb58052ffebc5f43be71", "Url": "https://api.github.com/repos/ICAppSoc/Memory-Game-Android", "Date": "2015-01-14T01:47:31Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bladecoder.engineeditor.utils.ElementUtils.cloneElement(com.bladecoder.engineeditor.ui.ActionList)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newElement instanceof com.bladecoder.engine.actions.AbstractIfAction) insertEndAction((pos + 2), getOrCreateControlActionId(((com.bladecoder.engine.actions.AbstractControlAction) (newElement))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2132/buggy-version/adventure-editor.src.main.java.com.bladecoder.engineeditor.ui.ActionList.java", "BodyUseAPI": [], "Fixed commit": "1f6f0042ea2e656efffeae9aeb30829b596c30ff", "Url": "https://api.github.com/repos/bladecoder/bladecoder-adventure-engine", "Date": "2015-12-18T03:52:45Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.datatransfer.Clipboard.getContents(<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((transferable.getTransferData(java.awt.datatransfer.DataFlavor.stringFlavor)) != null) { clip = transferable.getTransferData(java.awt.datatransfer.DataFlavor.stringFlavor).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8566/buggy-version/src.main.java.org.jboss.aesh.mterm.action.menu.MenuPasteAction.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.awt.datatransfer.Transferable.getTransferData(java.awt.datatransfer.DataFlavor)"], "Fixed commit": "cb164bf253652d380f2bf1d0b7f8b98ad8cc9bfb", "Url": "https://api.github.com/repos/aeshell/mterm", "Date": "2014-11-16T12:53:11Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e.getComponent().isEnabled()) towerStats.setUpgrade(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6465/buggy-version/src.ui.side.TowerUpgradePanel.java", "BodyUseAPI": [], "Fixed commit": "954b34538570302df1d09bdc3d8803fdaf548285", "Url": "https://api.github.com/repos/jchilln92/cs32final", "Date": "2011-05-06T01:07:59Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (name.contains(\"/\")) name = me.urielsalis.urielsalads.IntelSearch.splitSlash(name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2774/buggy-version/src.main.java.me.urielsalis.urielsalads.IntelSearch.java", "BodyUseAPI": ["me.urielsalis.urielsalads.IntelSearch.splitSlash(java.lang.String)"], "Fixed commit": "14bc5320c918ffa7daa45de4d6eb46fbf21ac625", "Url": "https://api.github.com/repos/urielsalis/UrielsalisBot", "Date": "2016-09-06T00:02:58Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (0 == (this.compareTo(point))) { result = java.lang.Double.NEGATIVE_INFINITY; }else if ((x) == (point.x)) { result = java.lang.Double.POSITIVE_INFINITY; }else if ((y) == (point.y)) { result = 0.0; }else { result = ((double) ((point.y) - (y))) / ((double) ((point.x) - (x))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8139/buggy-version/collinear.src.main.java.Point.java", "BodyUseAPI": [], "Fixed commit": "4a0239866deb39ceb1e8b9cb52865de2c46baae9", "Url": "https://api.github.com/repos/alevochkin/coursera-algorithmsI", "Date": "2015-08-10T21:05:28Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result > 0) { return 1; }else if (result < 0) { return -1; }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8139/buggy-version/collinear.src.main.java.Point.java", "BodyUseAPI": [], "Fixed commit": "4a0239866deb39ceb1e8b9cb52865de2c46baae9", "Url": "https://api.github.com/repos/alevochkin/coursera-algorithmsI", "Date": "2015-08-10T21:05:28Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (delayUntil <= (java.lang.System.currentTimeMillis())) { values.put(\"cents\", (currentProjectedCents + cents)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7140/buggy-version/src.com.notriddle.budget.EnvelopesOpenHelper.java", "BodyUseAPI": [], "Fixed commit": "4d207e4ffd563eb2be4d4a01de20928ac0edf5b2", "Url": "https://api.github.com/repos/notriddle/budget-envelopes", "Date": "2013-12-23T18:13:34Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((de.hdm.itprojekt.noteit.client.ShowNote.currentNote.getPermissionID()) == 0) && ((de.hdm.itprojekt.noteit.client.ShowNote.currentNotebook.getPermissionID()) > 0)) { de.hdm.itprojekt.noteit.client.ShowNote.currentNote.setPermissionID(de.hdm.itprojekt.noteit.client.ShowNote.currentNotebook.getPermissionID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3766/buggy-version/noteit.src.de.hdm.itprojekt.noteit.client.ShowNote.java", "BodyUseAPI": ["de.hdm.itprojekt.noteit.shared.bo.Notebook.getPermissionID()", "de.hdm.itprojekt.noteit.shared.bo.Note.setPermissionID(de.hdm.itprojekt.noteit.client.ShowNote.currentNotebook.getPermissionID())"], "Fixed commit": "bc1b1f77edc8bc90f7a134dcf9f79fc5cd606867", "Url": "https://api.github.com/repos/ChristianUlrichRoth/itprojektws1617-noteit", "Date": "2017-01-23T17:51:28Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getZkClient().exists(com.yahoo.pulsar.broker.PulsarService.DYNAMIC_LOAD_MANAGER_ZPATH, false)) != null) { config.setLoadManagerName(new java.lang.String(getZkClient().getData(com.yahoo.pulsar.broker.PulsarService.DYNAMIC_LOAD_MANAGER_ZPATH, false, null))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6315/buggy-version/pulsar-broker.src.main.java.com.yahoo.pulsar.broker.PulsarService.java", "BodyUseAPI": ["com.yahoo.pulsar.broker.ZooKeeper.getData(java.lang.String,boolean,<nulltype>)", "com.yahoo.pulsar.broker.ServiceConfiguration.setLoadManagerName(java.lang.String)"], "Fixed commit": "41297807b9ce2ec5aec73369c6f4c7765be98114", "Url": "https://api.github.com/repos/bobbeyreese/pulsar", "Date": "2017-03-21T18:20:07Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((token.getObject().getInterests()) != null) { result.addAll(token.getObject().getInterests().keySet()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1895/buggy-version/grid.src.main.java.step.grid.GridReportBuilder.java", "BodyUseAPI": ["token.getObject()", "token.getObject().getInterests().keySet()", "token.getObject().getInterests()", "java.util.Set<java.lang.String>.addAll(token.getObject().getInterests().keySet())"], "Fixed commit": "f206cc31cac564027b447782df448f481319f63d", "Url": "https://api.github.com/repos/exense/step", "Date": "2017-04-20T19:52:03Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(session.shouldNotify(io.github.droidkaigi.confsched.util.AlarmUtil.REMIND_DURATION_MINUTES_FOR_START))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2884/buggy-version/app.src.main.java.io.github.droidkaigi.confsched.util.AlarmUtil.java", "BodyUseAPI": [], "Fixed commit": "31444a291f6d8c0349656663b4cd6a945e33d579", "Url": "https://api.github.com/repos/konifar/droidkaigi2016", "Date": "2016-02-16T10:20:59Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.ichi2.anki.AnkiDroidApp.getSdkVersion()) >= 7) && ((com.ichi2.anki.AnkiDroidApp.getSdkVersion()) <= 10)) { com.ichi2.themes.Themes.applyTheme(this, Themes.THEME_ANDROID_DARK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6021/buggy-version/src.com.ichi2.anki.DeckOptions.java", "BodyUseAPI": [], "Fixed commit": "aba25737bdf870ec82085de31a43c92143d98115", "Url": "https://api.github.com/repos/nicolas-raoul/Anki-Android", "Date": "2012-07-19T23:58:35Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (log.isDetailed()) { logDetailed(\"Automatically generated Avro schema.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2900/buggy-version/src.org.openbi.kettle.plugins.avrooutput.AvroOutput.java", "BodyUseAPI": [], "Fixed commit": "dfe9b5ecabce9b2a0dd9457ae86e0103db8762e9", "Url": "https://api.github.com/repos/cdeptula/AvroOutputPlugin", "Date": "2014-10-31T12:43:38Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (log.isDetailed()) { logDetailed(\"Writing schema file.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2900/buggy-version/src.org.openbi.kettle.plugins.avrooutput.AvroOutput.java", "BodyUseAPI": [], "Fixed commit": "dfe9b5ecabce9b2a0dd9457ae86e0103db8762e9", "Url": "https://api.github.com/repos/cdeptula/AvroOutputPlugin", "Date": "2014-10-31T12:43:38Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (itemsToRemove == 0) { for (int i = 0; i < (inv.getSizeInventory()); i++) { if (((inv.getStackInSlot(i)) != null) && ((inv.getStackInSlot(i).stackSize) != 0)) { net.minecraft.item.ItemStack putBack = inv.getStackInSlot(i).copy(); putBack.stackSize = 1; player.inventory.addItemStackToInventory(putBack); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8402/buggy-version/src.keepcalm.mods.bukkit.forgeHandler.BukkitCraftingHandler.java", "BodyUseAPI": [], "Fixed commit": "542324b4b19aeb447728f051541d8f05299302d5", "Url": "https://api.github.com/repos/keepcalm/BukkitForge", "Date": "2013-02-11T00:17:49Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.ceil(float)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (level > 16) level = 16;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/939/buggy-version/src.main.java.com.vanhal.progressiveautomation.gui.client.GUICrafter.java", "BodyUseAPI": [], "Fixed commit": "7e70701f51651fb29aa3d3d4e7fde7a0b1b6332a", "Url": "https://api.github.com/repos/Vanhal/ProgressiveAutomation", "Date": "2015-01-29T11:18:53Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (level < 0) level = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/939/buggy-version/src.main.java.com.vanhal.progressiveautomation.gui.client.GUICrafter.java", "BodyUseAPI": [], "Fixed commit": "7e70701f51651fb29aa3d3d4e7fde7a0b1b6332a", "Url": "https://api.github.com/repos/Vanhal/ProgressiveAutomation", "Date": "2015-01-29T11:18:53Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sources.getSources().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (simpleSource1.getMessage().hasAnnotation(\"TTL\")) { ttl1 = simpleSource1.getMessage().annotation(\"TTL\").get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2258/buggy-version/compilers.javascript.src.main.java.org.thingml.compilers.javascript.cepHelper.JSGenerateSourceDeclaration.java", "BodyUseAPI": ["simpleSource1.getMessage().annotation(\"TTL\").get(int)", "org.thingml.compilers.javascript.cepHelper.SimpleSource.getMessage()", "simpleSource1.getMessage().annotation(java.lang.String)"], "Fixed commit": "53d8461611a5112d92a936e3de07edfea37c9928", "Url": "https://api.github.com/repos/TelluIoT/ThingML", "Date": "2015-10-03T17:13:31Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sources.getSources().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (simpleSource2.getMessage().hasAnnotation(\"TTL\")) { ttl2 = simpleSource2.getMessage().annotation(\"TTL\").get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2258/buggy-version/compilers.javascript.src.main.java.org.thingml.compilers.javascript.cepHelper.JSGenerateSourceDeclaration.java", "BodyUseAPI": ["simpleSource2.getMessage().annotation(\"TTL\").get(int)", "simpleSource2.getMessage().annotation(java.lang.String)", "org.thingml.compilers.javascript.cepHelper.SimpleSource.getMessage()"], "Fixed commit": "53d8461611a5112d92a936e3de07edfea37c9928", "Url": "https://api.github.com/repos/TelluIoT/ThingML", "Date": "2015-10-03T17:13:31Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (negative) { output.append('-'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4337/buggy-version/src.strings.StringToInt.java", "BodyUseAPI": [], "Fixed commit": "f84b4337ffaa33b75175af06e8c6c7451d752274", "Url": "https://api.github.com/repos/lawjc/EPI_Husti", "Date": "2017-07-13T02:59:24Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BudgetType.BUDGET_MONTH.toString().equals(budgetStatement.getBudgetType())) { reportMonth = reportYear + \"00\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4776/buggy-version/src.main.java.com.brxt.webapp.controller.BudgetStatementFormController.java", "BodyUseAPI": [], "Fixed commit": "3d6f4ecb3f2133d60e724a3a14b90e98fcc1cb50", "Url": "https://api.github.com/repos/yegaofei/brxt", "Date": "2014-06-02T03:51:46Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (batchSize > 0) batches = ((int) (nodeCount)) / batchSize;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8869/buggy-version/src.main.java.apoc.algo.algorithms.BetweennessCentrality.java", "BodyUseAPI": [], "Fixed commit": "d7ae33a2999e5e76170180d047e85754492065fa", "Url": "https://api.github.com/repos/atuljangra/neo4j-apoc-procedures", "Date": "2016-09-03T16:32:24Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((slot == (SLOT_FUEL)) && ((net.minecraft.tileentity.TileEntityFurnace.getItemBurnTime(stack)) > 0)) && ((com.vanhal.progressiveautomation.ref.ToolHelper.getType(stack.getItem())) == (-1))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3056/buggy-version/src.main.java.com.vanhal.progressiveautomation.entities.BaseTileEntity.java", "BodyUseAPI": [], "Fixed commit": "9a6b1295f67f44957f8180abf58c8b4d3a4461fc", "Url": "https://api.github.com/repos/Vanhal/ProgressiveAutomation", "Date": "2015-02-06T08:44:37Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((soapMessage.getAttachments()) == null) { soapMessage.setAttachments(new java.util.ArrayList<org.apache.cxf.message.Attachment>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8800/buggy-version/rt.ws.security.src.main.java.org.apache.cxf.ws.security.wss4j.AttachmentCallbackHandler.java", "BodyUseAPI": ["org.apache.cxf.binding.soap.SoapMessage.setAttachments(java.util.ArrayList<org.apache.cxf.message.Attachment>)"], "Fixed commit": "5f8685e5e0976afdd5b4f52a4f84b36b49b2dcb5", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2016-01-05T16:32:46Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (anna_inject) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1536/buggy-version/annaPlugin.src.main.java.com.meetyou.anna.plugin.AnnaClassVisitor.java", "BodyUseAPI": [], "Fixed commit": "13c1691f22255d9d1ca1b08f23a68e473dea4227", "Url": "https://api.github.com/repos/HomHomLin/Anna", "Date": "2017-06-23T06:41:46Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (anna_inject) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1536/buggy-version/annaPlugin.src.main.java.com.meetyou.anna.plugin.AnnaClassVisitor.java", "BodyUseAPI": [], "Fixed commit": "13c1691f22255d9d1ca1b08f23a68e473dea4227", "Url": "https://api.github.com/repos/HomHomLin/Anna", "Date": "2017-06-23T06:41:46Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (step == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2685/buggy-version/asta4d-web.src.main.java.com.astamuse.asta4d.web.form.flow.classical.MultiStepFormFlowHandler.java", "BodyUseAPI": [], "Fixed commit": "700ada7a7a104de61ae35e89ba837f3b05f60f36", "Url": "https://api.github.com/repos/astamuse/asta4d", "Date": "2014-09-12T08:13:39Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sonarQubeVersion.isGreaterThanOrEqual(JacocoConfiguration.SQ_6_2))) { extensions.add(org.sonar.plugins.jacoco.JaCoCoItSensor.class, org.sonar.plugins.jacoco.JaCoCoOverallSensor.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8104/buggy-version/java-jacoco.src.main.java.org.sonar.plugins.jacoco.JaCoCoExtensions.java", "BodyUseAPI": [], "Fixed commit": "f80e3eb7ad690443d09eb666aacc385e723e2814", "Url": "https://api.github.com/repos/SonarSource/sonar-java", "Date": "2016-12-14T16:53:38Z"},
{"Line": "=>2910", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((current) != null) { current.setLightweightMode(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/221/buggy-version/CodenameOne.src.com.codename1.ui.Container.java", "BodyUseAPI": [], "Fixed commit": "f1cf3a23eaad5bcd394275f609a1607497ef738e", "Url": "https://api.github.com/repos/diamonddevgroup/CodenameOne", "Date": "2017-08-21T22:23:42Z"},
{"Line": "=>2913", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((next) != null) { next.setLightweightMode(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/221/buggy-version/CodenameOne.src.com.codename1.ui.Container.java", "BodyUseAPI": [], "Fixed commit": "f1cf3a23eaad5bcd394275f609a1607497ef738e", "Url": "https://api.github.com/repos/diamonddevgroup/CodenameOne", "Date": "2017-08-21T22:23:42Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.ws.rs.core.MultivaluedMap<java.lang.String, java.lang.String>.remove(CloudSearchQueryParam.RETURN_FIELDS)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (list != null) { java.lang.String[] returnFields = list.toArray(new java.lang.String[list.size()]); myQueryParams.add(CloudSearchQueryParam.RETURN_FIELDS, org.apache.commons.lang.StringUtils.join(returnFields, \",\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/260/buggy-version/src.main.java.com.homeaway.aws.thunderhead.client.CloudSearchReadClient.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.toArray(java.lang.String[])"], "Fixed commit": "8b76b423474e1ee928e1beef10eae308000b0e97", "Url": "https://api.github.com/repos/homeaway/thunderhead", "Date": "2013-04-11T16:00:37Z"},
{"Line": "=>914", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["checkers.inference2.transform.TransformChecker.getAnnotatedReference(com.sun.tools.javac.tree.JCTree.JCNewArray)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(ref.getRawAnnotations().contains(checker.CLEAR))) { processVariableTree(newArray); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6909/buggy-version/inference-framework.checker-framework.checkers.src.checkers.inference2.transform.TransformVisitor.java", "BodyUseAPI": [], "Fixed commit": "227f69139cfb1c2b4f2fcaadaa41ee1521c44b89", "Url": "https://api.github.com/repos/proganalysis/type-inference", "Date": "2015-10-15T00:14:00Z"},
{"Line": "=>712", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["checker.getAnnotatedReferences().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ref == null) ref = checker.getAnnotatedReference(exp);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6909/buggy-version/inference-framework.checker-framework.checkers.src.checkers.inference2.transform.TransformVisitor.java", "BodyUseAPI": [], "Fixed commit": "227f69139cfb1c2b4f2fcaadaa41ee1521c44b89", "Url": "https://api.github.com/repos/proganalysis/type-inference", "Date": "2015-10-15T00:14:00Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(setupCredentials())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6159/buggy-version/src.fi.bitrite.android.ws.activity.WSBaseActivity.java", "BodyUseAPI": [], "Fixed commit": "494244cd4a726924d71cd9bb7aebe147a6c98a8f", "Url": "https://api.github.com/repos/warmshowers/wsandroid", "Date": "2015-06-02T23:33:14Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (allowableValue.equalsIgnoreCase(org.apache.nifi.serialization.SchemaRegistryRecordSetWriter.CONFLUENT_ENCODED_SCHEMA.getValue())) { return new org.apache.nifi.schema.access.ConfluentSchemaRegistryWriter(); }else if (allowableValue.equalsIgnoreCase(org.apache.nifi.serialization.SchemaRegistryRecordSetWriter.NO_SCHEMA.getValue())) { return new org.apache.nifi.schema.access.NopSchemaAccessWriter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/9193/buggy-version/nifi-nar-bundles.nifi-standard-services.nifi-record-serialization-services-bundle.nifi-record-serialization-services.src.main.java.org.apache.nifi.serialization.SchemaRegistryRecordSetWriter.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(org.apache.nifi.serialization.SchemaRegistryRecordSetWriter.NO_SCHEMA.getValue())"], "Fixed commit": "e066b9b8fc3161f876f829afd29a057ea3b6a2ae", "Url": "https://api.github.com/repos/markap14/nifi", "Date": "2017-07-06T15:00:40Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (username == \"\") { username = \"anon\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4840/buggy-version/launcher.src.main.java.net.luxvacuos.voxel.launcher.core.Updater.java", "BodyUseAPI": [], "Fixed commit": "15c536c41a1d5847f095bc04025d3af5bfd02d1c", "Url": "https://api.github.com/repos/Lux-Vacuos/Voxel", "Date": "2016-11-14T02:34:23Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (username == null) { username = \"anon\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4840/buggy-version/launcher.src.main.java.net.luxvacuos.voxel.launcher.core.Updater.java", "BodyUseAPI": [], "Fixed commit": "15c536c41a1d5847f095bc04025d3af5bfd02d1c", "Url": "https://api.github.com/repos/Lux-Vacuos/Voxel", "Date": "2016-11-14T02:34:23Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (min > max) { min = 0; max = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3090/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "467d88594d85c44da88dde98b27966221010aeee", "Url": "https://api.github.com/repos/burkeg/HTADnD", "Date": "2015-03-08T13:26:35Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((player.getTeam()) != null) this.nameColor = player.getTeam().getColor();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8430/buggy-version/src.main.java.fr.veridiangames.client.main.screens.PlayerListScreen.java", "BodyUseAPI": [], "Fixed commit": "bc07b624933eaec0d81c1c2812cc5e9b9378a0e6", "Url": "https://api.github.com/repos/ubercube/ubercube", "Date": "2017-08-19T00:56:31Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((servicesInfo == null) || (servicesInfo.equals(\"\"))) || (!(servicesInfo.contains(serviceKeyString)))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/624/buggy-version/src.main.java.com.cloulu.services.ClouluBackendServices.java", "BodyUseAPI": [], "Fixed commit": "ddb0bdb74d052126e6cfab20ad2dd42fdf574a08", "Url": "https://api.github.com/repos/cloulu/cloulu-java-services-object", "Date": "2013-10-25T05:51:34Z"},
{"Line": "=>1185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optInt(Article.ARTICLE_TYPE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((org.b3log.symphony.model.Article.ARTICLE_TYPE_C_THOUGHT) != articleType) { content = org.b3log.symphony.util.Markdowns.toHTML(content); content = org.b3log.symphony.util.Markdowns.clean(content, ((org.b3log.latke.Latkes.getServePath()) + (article.optString(Article.ARTICLE_PERMALINK)))); }else { final org.jsoup.nodes.Document.OutputSettings outputSettings = new org.jsoup.nodes.Document.OutputSettings(); outputSettings.prettyPrint(false); content = org.jsoup.Jsoup.clean(content, ((org.b3log.latke.Latkes.getServePath()) + (article.optString(Article.ARTICLE_PERMALINK))), org.jsoup.safety.Whitelist.relaxed().addAttributes(\":all\", \"id\", \"target\", \"class\").addTags(\"span\", \"hr\").addAttributes(\"iframe\", \"src\", \"width\", \"height\").addAttributes(\"audio\", \"controls\", \"src\"), outputSettings); content = content.replace(\"\\n\", \"\\\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4790/buggy-version/src.main.java.org.b3log.symphony.service.ArticleQueryService.java", "BodyUseAPI": [], "Fixed commit": "c83e1a7ff1f93811480f58b932ebfc491d3fe211", "Url": "https://api.github.com/repos/b3log/symphony", "Date": "2015-09-18T07:02:31Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.nistica.panels.OrderDialog.tipText.getText().equals(\"\"))) com.nistica.panels.OrderDialog.tip = java.lang.Double.parseDouble(com.nistica.panels.OrderDialog.tipText.getText()); else com.nistica.panels.OrderDialog.tip = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8780/buggy-version/src.com.nistica.panels.OrderDialog.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "javax.swing.JTextField.getText()"], "Fixed commit": "fd18477d809f531cb6bdcd6a63d56e46b9e6bc3d", "Url": "https://api.github.com/repos/mattschueler/nisticaTK", "Date": "2014-08-20T17:24:08Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.Computer.getNode()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (node == null) { throw new org.jenkinsci.lib.envinject.EnvInjectException(\"Node is removed, but the computer has not gone yet\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2831/buggy-version/src.main.java.org.jenkinsci.plugins.envinject.EnvInjectComputerListener.java", "BodyUseAPI": [], "Fixed commit": "3e19b6e5d525dcb005bebd5cdcf908b8fcdcda68", "Url": "https://api.github.com/repos/arcivanov/envinject-plugin", "Date": "2015-08-16T09:28:15Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((useKrPreference) != null) { useKrPreference.setOnPreferenceChangeListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5654/buggy-version/wwwjdic.src.org.nick.wwwjdic.WwwjdicPreferences.java", "BodyUseAPI": [], "Fixed commit": "0e9e1ccb4262340f36fc3e27dfcb7ef1ad3790fe", "Url": "https://api.github.com/repos/nelenkov/wwwjdic", "Date": "2017-01-13T01:31:23Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (provider == null) return org.springframework.http.ResponseEntity.status(HttpStatus.NOT_FOUND).body(((\"Provider \" + providerName) + \" not found or can not instantiated...\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2801/buggy-version/src.main.java.de.fewi.ptwa.controller.StationController.java", "BodyUseAPI": [], "Fixed commit": "41e38c27c64b67ae06fd72ea9be37151d5e14e44", "Url": "https://api.github.com/repos/fewi/public-transport-web-api", "Date": "2016-02-22T20:34:50Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.schildbach.pte.NetworkProvider.queryDepartures(java.lang.String,java.util.Date,int,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((efaData.findStationDepartures(from)) == null) { for (de.schildbach.pte.dto.StationDepartures stationDeparture : efaData.stationDepartures) { data += \",\" + (convertDeparturesFHEM(stationDeparture)); data = data.substring(0, data.lastIndexOf(']')); } data = (data.substring(1)) + \"]\"; }else data = convertDeparturesFHEM(efaData.findStationDepartures(from));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2801/buggy-version/src.main.java.de.fewi.ptwa.controller.DepartureController.java", "BodyUseAPI": ["de.fewi.ptwa.controller.DepartureController.convertDeparturesFHEM(efaData.findStationDepartures(from))", "de.schildbach.pte.dto.QueryDeparturesResult.findStationDepartures(java.lang.String)"], "Fixed commit": "41e38c27c64b67ae06fd72ea9be37151d5e14e44", "Url": "https://api.github.com/repos/fewi/public-transport-web-api", "Date": "2016-02-22T20:34:50Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isGuide)) { btnStart.setVisibility(View.GONE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2277/buggy-version/lm_banner_library.src.main.java.com.allure.lbanners.LMBanners.java", "BodyUseAPI": [], "Fixed commit": "4fb660b92e2d352e361efe27f1511642363d4c40", "Url": "https://api.github.com/repos/Allure0/LMBanners", "Date": "2016-12-22T08:26:30Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((org.glassfish.jersey.server.mvc.Viewable) (entity)).getModel()) instanceof ru.yandex.autoschool.splinter.view.freemarker.ViewData) { ru.yandex.autoschool.splinter.view.freemarker.ViewData model = ((ru.yandex.autoschool.splinter.view.freemarker.ViewData) (((org.glassfish.jersey.server.mvc.Viewable) (entity)).getModel())); model.set(\"authUser\", user); java.lang.String templateName = ((org.glassfish.jersey.server.mvc.Viewable) (entity)).getTemplateName(); context.setEntity(new org.glassfish.jersey.server.mvc.Viewable(templateName, model.getData())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3066/buggy-version/src.main.java.ru.yandex.autoschool.splinter.interceptions.UserDataInterceptor.java", "BodyUseAPI": ["java.lang.Object.getTemplateName()", "java.lang.Object.getModel()"], "Fixed commit": "1564d91423e4f114af23c1f7bb6ee9d67b4f963a", "Url": "https://api.github.com/repos/pacahon/splinter", "Date": "2015-01-25T11:40:32Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteQueryBuilder.query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],<nulltype>,<nulltype>,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cursor.isNull(1)) unloadedItems.add(cursor.getInt(0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3577/buggy-version/src.com.digitallizard.bbcnewsreader.data.DatabaseHandler.java", "BodyUseAPI": ["android.database.Cursor.getInt(int)", "java.util.ArrayList<java.lang.Integer>.add(cursor.getInt(0))"], "Fixed commit": "9dcf98b9abd44a109507b8446f5aa069f96f25bb", "Url": "https://api.github.com/repos/oscarkey/BBC-News-Reader", "Date": "2011-05-07T17:44:46Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (col == null) table[index][(i++)] = null; else table[index][(i++)] = col.toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3017/buggy-version/Sql4Ddriver.src.main.java.com.yahoo.sql4d.sql4ddriver.PrettyPrint.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "cf91327e4e6f09359872d4f4736e5c32c5568c82", "Url": "https://api.github.com/repos/yt526/Sql4D", "Date": "2016-07-07T07:06:34Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((out) == null) { out = org.apache.hyracks.control.nc.io.HDFSFileHandle.fs.append(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4743/buggy-version/hyracks-fullstack.hyracks.hyracks-control.hyracks-control-nc.src.main.java.org.apache.hyracks.control.nc.io.HDFSFileHandle.java", "BodyUseAPI": [], "Fixed commit": "83b47b2cb162c73928a5e5b6764419b083983c0a", "Url": "https://api.github.com/repos/parshimers/incubator-asterixdb", "Date": "2016-06-07T23:40:07Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (endIdx < 0) { throw new java.lang.IllegalArgumentException(\"MRN is not a valid entity MRN!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5657/buggy-version/src.main.java.net.maritimecloud.identityregistry.utils.MrnUtil.java", "BodyUseAPI": [], "Fixed commit": "2b689099635ba580295e0c4639d489fe53318a53", "Url": "https://api.github.com/repos/MaritimeConnectivityPlatform/IdentityRegistry", "Date": "2017-06-27T07:57:18Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stock == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2254/buggy-version/app.src.main.java.com.fantasystock.fantasystock.Adapters.WatchlistAdapter.java", "BodyUseAPI": [], "Fixed commit": "94dbea6534ece79f5e387400fa3c0e053af7efb0", "Url": "https://api.github.com/repos/ted7726/FantasyStock", "Date": "2016-04-06T04:41:06Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((record.getFieldValue(QueryParameters.FIELD_TIMESTAMP)) != null) { try { java.lang.String date = record.getFieldValue(QueryParameters.FIELD_TIMESTAMP).replaceAll(\"(\\\\.\\\\d+)?Z\", \"+0000\"); feedItem.setPubDate(esg.search.feed.web.RssViewBuilder.df.parse(date)); } catch (java.text.ParseException e) { esg.search.feed.web.RssViewBuilder.LOG.warn(e.getMessage()); esg.search.feed.web.RssViewBuilder.LOG.warn((\"Record timestamp=\" + (record.getFieldValue(QueryParameters.FIELD_TIMESTAMP)))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/484/buggy-version/src.java.main.esg.search.feed.web.RssViewBuilder.java", "BodyUseAPI": ["record.getFieldValue(QueryParameters.FIELD_TIMESTAMP).replaceAll(java.lang.String,java.lang.String)", "org.apache.commons.logging.Log.warn((\"Record timestamp=\" + (record.getFieldValue(QueryParameters.FIELD_TIMESTAMP))))", "esg.search.core.Record.getFieldValue(QueryParameters.FIELD_TIMESTAMP)", "esg.search.core.Record.getFieldValue(QueryParameters.FIELD_TIMESTAMP)"], "Fixed commit": "14821669bc88258596deeda4584196c66f2b3970", "Url": "https://api.github.com/repos/ESGF/esg-search", "Date": "2013-05-14T20:21:51Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sites.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3178/buggy-version/src.main.java.ekip.ca.crawlingsimulator.queue.RoundRobinSiteLevelStrategy.java", "BodyUseAPI": [], "Fixed commit": "7159bae58aec98d4343f38c5bceacdc0d7098c6f", "Url": "https://api.github.com/repos/Querela/Praktikum-Computational-Advertising", "Date": "2014-12-13T15:17:52Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ekip.ca.crawlingsimulator.queue.SiteLevelStrategy.getNext()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (site != null) { ekip.ca.crawlingsimulator.queue.Page page = site.getStrategy().getNext(); if (page != null) { return page.getWebPage(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3178/buggy-version/src.main.java.ekip.ca.crawlingsimulator.queue.GeneralCrawlingQueue.java", "BodyUseAPI": ["ekip.ca.crawlingsimulator.queue.Site.getStrategy()", "site.getStrategy().getNext()"], "Fixed commit": "7159bae58aec98d4343f38c5bceacdc0d7098c6f", "Url": "https://api.github.com/repos/Querela/Praktikum-Computational-Advertising", "Date": "2014-12-13T15:17:52Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.qii.weiciyuan.support.utils.GlobalContext.getInstance().isEnablePic()) commander.downloadAvatar(holder.repost_avatar, repost_msg.getUser().getProfile_image_url(), position, listView, isFling); else holder.repost_avatar.setVisibility(View.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2586/buggy-version/src.org.qii.weiciyuan.ui.adapter.CommentListAdapter.java", "BodyUseAPI": [], "Fixed commit": "c716160ac538f304afe206b089b52061d2c253f0", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-25T02:02:49Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends java.lang.Object>.getSimpleName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (targetName.contains(\"$Proxy\")) { targetName = java.lang.reflect.Proxy.getInvocationHandler(target).getClass().getSimpleName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7586/buggy-version/JazminServer.src.jazmin.server.web.mvc.ProxyController.java", "BodyUseAPI": [], "Fixed commit": "62dc25d81ba752425c96299ed7ed1e53495b6488", "Url": "https://api.github.com/repos/guooscar/JazminServer", "Date": "2017-05-31T08:27:10Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCounterFragment) == null) { mCounterFragment = new com.qklabs.counter.fragment.CounterFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8088/buggy-version/qkcount.src.main.java.com.qklabs.counter.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d41293c2ad7fe2ad18df74154244d49830a20b56", "Url": "https://api.github.com/repos/moezbhatti/qk-count", "Date": "2016-03-16T01:07:45Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jFrame.isVisible()) { jLockWindow.show(net.nikr.eve.jeveasset.i18n.GuiShared.get().updating(), new net.nikr.eve.jeveasset.gui.shared.components.JLockWindow.LockWorker() { @java.lang.Override public void task() { jMainTab.updateCache(); } @java.lang.Override public void gui() { } }); }else { jMainTab.updateCache(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/911/buggy-version/src.main.java.net.nikr.eve.jeveasset.gui.frame.MainWindow.java", "BodyUseAPI": [], "Fixed commit": "8080202baa6f0dd728086918d7f2d00243cac2ba", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-12-02T10:37:37Z"},
{"Line": "=>1650", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alwaysallthetime.adnlibutils.manager.MessageManager.1.getUnsentMessages(java.lang.String)", "com.alwaysallthetime.adnlib.data.Message.getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (unsentMessages.containsKey(messageId)) { unsentMessages.put(messageId, messagePlus); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2706/buggy-version/src.main.java.com.alwaysallthetime.adnlibutils.manager.MessageManager.java", "BodyUseAPI": ["java.util.LinkedHashMap<java.lang.String, com.alwaysallthetime.adnlibutils.model.MessagePlus>.put(java.lang.String,com.alwaysallthetime.adnlibutils.model.MessagePlus)"], "Fixed commit": "6e16f3461b8b0f50026829712731ea030134478e", "Url": "https://api.github.com/repos/rrbrambley/ADNLib-utils", "Date": "2014-01-16T18:09:42Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["response.body().getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((list.size()) > 0) textView.setText(list.get(0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/9097/buggy-version/app.src.main.java.com.example.ilnaz.predictapp.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "83918ec1643d67c888e876c409832cbe001ae23f", "Url": "https://api.github.com/repos/IlnazMan/YandexPredictApp", "Date": "2016-05-12T19:59:00Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.permissionUtils) != null) { return this.permissionUtils.hasUserAuthority(permission); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1481/buggy-version/commons-app.src.main.java.cz.cuni.mff.xrg.odcs.commons.app.pipeline.transfer.ImportService.java", "BodyUseAPI": [], "Fixed commit": "be01aac320808c66c4e891cdbb6c22bd5b1628c3", "Url": "https://api.github.com/repos/UnifiedViews/Core", "Date": "2015-05-18T11:53:09Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (chok.sso.filter.AuthFilter.log.isInfoEnabled()) chok.sso.filter.AuthFilter.log.info((\"[\u5f53\u524d\u8bbf\u95ee\u5730\u5740] = \" + relativeURI));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6314/buggy-version/src.chok.sso.filter.AuthFilter.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String)"], "Fixed commit": "bae022bc5d99b9de4acbd32a58154cd06e2f8e87", "Url": "https://api.github.com/repos/RicoFung/sys", "Date": "2017-09-08T08:21:26Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (chok.cas.client.filter.CasAccessFilter.log.isInfoEnabled()) chok.cas.client.filter.CasAccessFilter.log.info((\"[\u5f53\u524d\u8bbf\u95ee\u5730\u5740] = \" + relativeURI));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6314/buggy-version/src.chok.cas.client.filter.CasAccessFilter.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String)"], "Fixed commit": "bae022bc5d99b9de4acbd32a58154cd06e2f8e87", "Url": "https://api.github.com/repos/RicoFung/sys", "Date": "2017-09-08T08:21:26Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["node.getLookup().lookup(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dataObject == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/834/buggy-version/src.com.junichi11.netbeans.changelf.ui.actions.ToggleEnableChangeLFAction.java", "BodyUseAPI": [], "Fixed commit": "0469d242ed9ba9941b4ddd6b2f7d485fa5cc6238", "Url": "https://api.github.com/repos/junichi11/netbeans-change-lf", "Date": "2013-05-19T22:51:05Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(artist.isDirectory())) { android.util.Log.e(com.smithdtyler.prettygoodmusicplayer.AlbumList.TAG, (\"Invalid artist directory provided: \" + artistPath)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3528/buggy-version/src.com.smithdtyler.prettygoodmusicplayer.AlbumList.java", "BodyUseAPI": [], "Fixed commit": "5947e4ffc4a0746a5e0a0a34f4c9973d6af5a9f7", "Url": "https://api.github.com/repos/smithdtyler/prettygoodmusicplayer", "Date": "2014-11-05T21:29:15Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (count > 1) { return methodName(com.google.api.codegen.util.Name.upperCamel(method.getSimpleName(), (\"Test\" + (java.lang.Integer.toString(count))))); }else { return methodName(com.google.api.codegen.util.Name.upperCamel(method.getSimpleName(), \"Test\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6218/buggy-version/src.main.java.com.google.api.codegen.transformer.SurfaceNamer.java", "BodyUseAPI": ["java.lang.Integer.toString(java.lang.Integer)", "com.google.api.codegen.transformer.SurfaceNamer.methodName(com.google.api.codegen.util.Name.upperCamel(method.getSimpleName(), (\"Test\" + (java.lang.Integer.toString(count)))))", "com.google.api.codegen.util.Name.upperCamel(method.getSimpleName(),java.lang.String)"], "Fixed commit": "8338c1c1ffa328411dc67dc7e3d49d43c205446e", "Url": "https://api.github.com/repos/shinfan/toolkit", "Date": "2016-08-17T18:59:18Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type.isRepeated()) && (!(type.isMap()))) { return methodName(com.google.api.codegen.util.Name.from(\"get\").join(name).join(\"list\")); }else { return methodName(com.google.api.codegen.util.Name.from(\"get\").join(name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6218/buggy-version/src.main.java.com.google.api.codegen.transformer.SurfaceNamer.java", "BodyUseAPI": [], "Fixed commit": "8338c1c1ffa328411dc67dc7e3d49d43c205446e", "Url": "https://api.github.com/repos/shinfan/toolkit", "Date": "2016-08-17T18:59:18Z"},
{"Line": "=>2648", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCause()) instanceof java.security.cert.CertificateException) { throw new com.fsck.k9.mail.CertificateValidationException(e.getMessage(), e); }else { throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7326/buggy-version/src.com.fsck.k9.mail.store.ImapStore.java", "BodyUseAPI": ["javax.net.ssl.SSLException.getMessage()"], "Fixed commit": "e2acd8c6c43f9f1bfd27da1439e9a87c7964597e", "Url": "https://api.github.com/repos/imaeses/k-9", "Date": "2015-02-01T11:55:25Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.MouseEvent.getSource()", "org.trypticon.hex.HexViewer.getPositionForPoint(java.awt.Point)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isValidPosition(viewer, pos)) { viewer.getSelectionModel().setCursor(pos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2651/buggy-version/viewer.src.main.java.org.trypticon.hex.plaf.BasicMouseAdapter.java", "BodyUseAPI": ["viewer.getSelectionModel().setCursor(long)", "org.trypticon.hex.HexViewer.getSelectionModel()"], "Fixed commit": "2584c187ce2a6d41a0e33523dcbf40eda3b725ff", "Url": "https://api.github.com/repos/trejkaz/hex-components", "Date": "2014-06-23T04:19:47Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.MouseEvent.getSource()", "org.trypticon.hex.HexViewer.getPositionForPoint(java.awt.Point)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isValidPosition(viewer, pos)) { viewer.getSelectionModel().setCursorAndExtendSelection(pos); viewer.scrollPosToVisible(pos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2651/buggy-version/viewer.src.main.java.org.trypticon.hex.plaf.BasicMouseAdapter.java", "BodyUseAPI": ["org.trypticon.hex.HexViewer.getSelectionModel()", "viewer.getSelectionModel().setCursorAndExtendSelection(long)", "org.trypticon.hex.HexViewer.scrollPosToVisible(long)"], "Fixed commit": "2584c187ce2a6d41a0e33523dcbf40eda3b725ff", "Url": "https://api.github.com/repos/trejkaz/hex-components", "Date": "2014-06-23T04:19:47Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.trypticon.hex.HexViewerSelectionModel.getCursor()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((cursor >= 0) && ((binary) != null)) && (cursor < (binary.length()))) { scrollPosToVisible(selectionModel.getCursor()); repaint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2651/buggy-version/viewer.src.main.java.org.trypticon.hex.HexViewer.java", "BodyUseAPI": [], "Fixed commit": "2584c187ce2a6d41a0e33523dcbf40eda3b725ff", "Url": "https://api.github.com/repos/trejkaz/hex-components", "Date": "2014-06-23T04:19:47Z"},
{"Line": "=>1076", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.jstakun.gms.android.config.ConfigurationManager.getInstance().getLocation()) != null) { mapButtons.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2044/buggy-version/GMSClient3.src.com.jstakun.gms.android.ui.GMSClient2OSMMainActivity.java", "BodyUseAPI": [], "Fixed commit": "a47f9f1e65af037f5e54ee4b4f88e9ea9de052aa", "Url": "https://api.github.com/repos/jstakun/gms-world-client", "Date": "2016-09-29T07:36:04Z"},
{"Line": "=>1138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.jstakun.gms.android.config.ConfigurationManager.getInstance().getLocation()) != null) { mapButtons.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2044/buggy-version/GMSClient3.src.com.jstakun.gms.android.ui.GMSClient2MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a47f9f1e65af037f5e54ee4b4f88e9ea9de052aa", "Url": "https://api.github.com/repos/jstakun/gms-world-client", "Date": "2016-09-29T07:36:04Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fileUrl.startsWith(\"http\"))) fileUrl = \"http:\" + fileUrl;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8630/buggy-version/src.main.java.hjeisa.waifubot.web.ConnectionHandler.java", "BodyUseAPI": [], "Fixed commit": "a6113ab7c4d2ef1b82301014a2b48a2cd0ea3326", "Url": "https://api.github.com/repos/isakvik/waifubot", "Date": "2017-11-17T00:37:53Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((Gdx.graphics.getWidth()) / (Gdx.graphics.getHeight())) < (16.0F / 9)) { camera.zoom = (WORLD_WIDTH) / (Gdx.graphics.getWidth()); }else { camera.zoom = (WORLD_HEIGHT) / (Gdx.graphics.getHeight()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4363/buggy-version/core.src.com.tutorial.game.maps.Map.java", "BodyUseAPI": [], "Fixed commit": "7d1650154330209b232707634b4bf0ffdf37a53b", "Url": "https://api.github.com/repos/lar-ryan-nick/FightingGame", "Date": "2017-12-22T03:37:54Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageList.size()) > 0) { builder.deleteCharAt(((builder.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/769/buggy-version/src.com.nju.model.Content.java", "BodyUseAPI": [], "Fixed commit": "04e8afbab655eaa49a45608e79c215393c539f78", "Url": "https://api.github.com/repos/CunDeveloper/SchoolFriend", "Date": "2016-01-04T00:18:45Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(maleButton.isChecked())) maleButton.toggle();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1863/buggy-version/app.src.main.java.com.malytic.altituden.fragments.FormFragment.java", "BodyUseAPI": ["android.widget.RadioButton.toggle()"], "Fixed commit": "70d65f19926d470e09fe9988b69f358b47e765db", "Url": "https://api.github.com/repos/malytic/altituden", "Date": "2016-02-26T10:23:44Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fromType.equals(getType(java.lang.Void.class)))) { pop(v, fromType); org.jetbrains.jet.codegen.StackValue.putUnitInstance(v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7612/buggy-version/compiler.backend.src.org.jetbrains.jet.codegen.StackValue.java", "BodyUseAPI": ["org.jetbrains.jet.codegen.StackValue.pop(org.jetbrains.asm4.commons.InstructionAdapter,org.jetbrains.asm4.Type)"], "Fixed commit": "00da5fe1fbdf2eb94b391f4a1e6f9c17d92d1b84", "Url": "https://api.github.com/repos/JetBrains/kotlin", "Date": "2013-12-10T17:07:05Z"},
{"Line": "=>922", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((image.getName().lastIndexOf(\".\")) != (-1)) { suffix = image.getName().substring(((image.getName().lastIndexOf(\".\")) + 1)); }else { suffix = \"png\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8434/buggy-version/modules.common.src.main.java.org.shaolin.bmdp.utils.ImageUtil.java", "BodyUseAPI": ["java.io.File.getName()", "java.lang.String.substring(int)", "java.lang.String.lastIndexOf(java.lang.String)", "java.io.File.getName()"], "Fixed commit": "7cad5a0482bbc20dde558e8de4e8fa2e9c333d06", "Url": "https://api.github.com/repos/shaolinwu/uimaster", "Date": "2016-09-10T13:35:56Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.timesLaunched) > 1) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5656/buggy-version/src.io.github.podshot.Podlauncher.gui.MainGUI.java", "BodyUseAPI": [], "Fixed commit": "b3faea16bfa354d80024e6b92048d4b4857d00c6", "Url": "https://api.github.com/repos/Podshot/PodLauncher", "Date": "2014-09-07T14:29:42Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (novels != null) { for (int i = 0; i < (novels.size()); i++) { novels.get(i).setLastViewDate(collectNovels.get(i).getLastViewDate()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3973/buggy-version/app.src.main.java.com.novel.reader.api.NovelAPI.java", "BodyUseAPI": ["java.util.ArrayList<com.novel.reader.entity.Novel>.size()", "novels.get(i).setLastViewDate(collectNovels.get(i).getLastViewDate())", "java.util.ArrayList<com.novel.reader.entity.Novel>.get(int)"], "Fixed commit": "eaf155cca171ccaccd72c736bceecb21a43a8b38", "Url": "https://api.github.com/repos/StevenKo/NovelReaderAndroidStudio", "Date": "2014-09-21T03:22:18Z"},
{"Line": "=>883", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.liferay.portal.service.impl.GroupLocalServiceImpl._log.isWarnEnabled()) { com.liferay.portal.service.impl.GroupLocalServiceImpl._log.warn((\"No resources found for group \" + (group.getGroupId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7304/buggy-version/portal-impl.src.com.liferay.portal.service.impl.GroupLocalServiceImpl.java", "BodyUseAPI": ["com.liferay.portal.kernel.log.Log.warn((\"No resources found for group \" + (group.getGroupId())))"], "Fixed commit": "69c85091e65772242647f49de569d30446c49760", "Url": "https://api.github.com/repos/ivicac/liferay-portal", "Date": "2016-04-28T15:00:06Z"},
{"Line": "=>697", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((int) (decodedChar)) != 13) { build.append(java.lang.Character.toString(decodedChar)); }else { build.append(\"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5959/buggy-version/HuffmanCompression.java", "BodyUseAPI": [], "Fixed commit": "f1a37c4f277b2355df094c811372df94feec31ab", "Url": "https://api.github.com/repos/egaebel/HuffmanEncodingCompression--Java", "Date": "2014-09-23T02:12:26Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (quantity > 0) { java.lang.String exp = pe.org.incn.support.Helpers.concat(\"%-\", quantity.toString(), \"s\"); return java.lang.String.format(exp, text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1194/buggy-version/src.pe.org.incn.support.Helpers.java", "BodyUseAPI": ["pe.org.incn.support.Helpers.concat(java.lang.String,java.lang.String,java.lang.String)", "java.lang.Integer.toString()"], "Fixed commit": "699609fcd4578ebe6a00b6ebca15b124126eeeef", "Url": "https://api.github.com/repos/eneav/epson-printer", "Date": "2017-08-03T18:19:34Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"\".equals(lang))) { int first = lang.indexOf('_'); java.lang.String langWithoutCountry = (first == (-1)) ? lang : lang.substring(0, first); overlayMessages((\"_\" + langWithoutCountry)); if (first > 0) { overlayMessages((\"_\" + lang)); } Gdx.app.log(\"I18N\", ((((\"Loaded all messages (\" + (messages.size())) + \" total); lang is '\") + lang) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/951/buggy-version/engine.core.src.main.java.es.eucm.ead.engine.I18N.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "es.eucm.ead.engine.I18N.overlayMessages(java.lang.String)", "java.lang.String.indexOf(char)", "Gdx.app.log(java.lang.String,java.lang.String)"], "Fixed commit": "a8682c56f87d8d957b19aaf0b2b4170e6b37fed5", "Url": "https://api.github.com/repos/imartinezortiz/ead", "Date": "2014-01-30T11:59:06Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((eventid) == 0) { eventid = java.lang.Integer.parseInt(getIntent().getExtras().get(\"eventid\").toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/258/buggy-version/app.src.main.java.be.defrere.wallr.activity.EventDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "ff9fc2bf474a29b6f5fc39f0df8276432b8007a2", "Url": "https://api.github.com/repos/df-jonas/jonas.de.frere-WallrApp", "Date": "2017-12-31T11:53:13Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.getPlugin().getGameManager().getGame(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((game.getTeam(name)) != null) { sender.sendMessage(io.github.yannici.bedwars.ChatWriter.pluginMessage(((org.bukkit.ChatColor.RED) + (io.github.yannici.bedwars.Main._l(\"errors.teamnameinuse\"))))); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1820/buggy-version/src.io.github.yannici.bedwars.Commands.AddTeamCommand.java", "BodyUseAPI": [], "Fixed commit": "e7660e0769de70a468d086973aaa954e3b0db332", "Url": "https://api.github.com/repos/BedwarsRel/BedwarsRel", "Date": "2015-04-15T22:57:09Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tileEntity.direction) != null) org.lwjgl.opengl.GL11.glTranslatef(tileEntity.direction.offsetX, 3, tileEntity.direction.offsetZ);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7829/buggy-version/src.main.java.calemi.fusionwarfare.renderer.RenderMissileSilo.java", "BodyUseAPI": ["org.lwjgl.opengl.GL11.glTranslatef(tileEntity.direction.offsetX,int,tileEntity.direction.offsetZ)"], "Fixed commit": "d9995b72e1b49160fce13d1e8c8467cca85a8476", "Url": "https://api.github.com/repos/TeamMonumental/FusionWarfare", "Date": "2015-07-16T00:14:48Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAssembled) { if (((worldObj.canBlockSeeTheSky(((xCoord) + (direction.offsetX)), yCoord, ((zCoord) + (direction.offsetZ)))) && (isBlockPowered)) && (calemi.fusionwarfare.util.EnergyUtil.canSubtractEnergy(this, energyCost))) { for (net.minecraft.item.ItemStack stack : slots) { if (stack != null) { return true; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7829/buggy-version/src.main.java.calemi.fusionwarfare.tileentity.machine.TileEntityMissileSiloCore.java", "BodyUseAPI": [], "Fixed commit": "d9995b72e1b49160fce13d1e8c8467cca85a8476", "Url": "https://api.github.com/repos/TeamMonumental/FusionWarfare", "Date": "2015-07-16T00:14:48Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((item.getType()) == (org.bukkit.Material.SKULL_ITEM)) && (section.contains(\"owner\"))) { org.bukkit.inventory.meta.SkullMeta sm = ((org.bukkit.inventory.meta.SkullMeta) (item.getItemMeta())); if (sm.setOwner(section.getString(\"owner\"))) { item.setItemMeta(sm); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2663/buggy-version/src.main.java.com.github.ucchyocean.ct.config.ClassData.java", "BodyUseAPI": ["org.bukkit.inventory.meta.SkullMeta.setOwner(section.getString(\"owner\"))", "org.bukkit.inventory.ItemStack.getItemMeta()", "org.bukkit.configuration.ConfigurationSection.getString(java.lang.String)", "org.bukkit.inventory.ItemStack.setItemMeta(org.bukkit.inventory.meta.SkullMeta)"], "Fixed commit": "530de41c9c73d511a9a16b69e1e0fce5941d7a93", "Url": "https://api.github.com/repos/ucchyocean/ColorTeaming", "Date": "2014-03-10T03:41:14Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getType()) == (org.bukkit.Material.SKULL_ITEM)) { org.bukkit.inventory.meta.SkullMeta sm = ((org.bukkit.inventory.meta.SkullMeta) (item.getItemMeta())); if (sm.hasOwner()) { message.add(((indent + \"owner: \") + (sm.getOwner()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2663/buggy-version/src.main.java.com.github.ucchyocean.ct.config.ClassData.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.getItemMeta()"], "Fixed commit": "530de41c9c73d511a9a16b69e1e0fce5941d7a93", "Url": "https://api.github.com/repos/ucchyocean/ColorTeaming", "Date": "2014-03-10T03:41:14Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (idx > 0) { output.add(line.substring(0, idx)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7639/buggy-version/src.main.java.com.camelspotting.screwturn.converter.mediawiki.CodeBlockFilter.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "64f4e25f0952adca73736224de91e2d7b4904d2e", "Url": "https://api.github.com/repos/matsandreassen/screwturn2mediawiki", "Date": "2016-02-24T12:15:36Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((identity.isPreAuthenticated()) && (isNewUser())) { return \"edit\"; }else if (identity.isLoggedIn()) { if (((userRedirect) != null) && (userRedirect.isRedirect())) { return \"redirect\"; } return \"home\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2986/buggy-version/zanata-war.src.main.java.org.zanata.security.AuthenticationManager.java", "BodyUseAPI": ["org.zanata.security.ZanataIdentity.isLoggedIn()"], "Fixed commit": "e250f3b04b099c5ffa0b369d0b9e029e199f3749", "Url": "https://api.github.com/repos/zanata/zanata", "Date": "2012-12-18T05:17:41Z"},
{"Line": "=>1730", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.druid.sql.visitor.SQLEvalVisitorUtils.castToInteger(java.lang.Object)", "com.alibaba.druid.sql.visitor.SQLEvalVisitorUtils.castToInteger(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((inta == null) || (intb == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/345/buggy-version/src.main.java.com.alibaba.druid.sql.visitor.SQLEvalVisitorUtils.java", "BodyUseAPI": [], "Fixed commit": "d4a24c56e5f1806829c667595bcd7af31e66767e", "Url": "https://api.github.com/repos/mosoft521/druid", "Date": "2014-06-19T06:21:13Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (viewHolder instanceof com.mcxtzhang.commonadapter.rv.ViewHolder) { com.mcxtzhang.commonadapter.rv.ViewHolder holder = ((com.mcxtzhang.commonadapter.rv.ViewHolder) (viewHolder)); if (dX > 0) { holder.setAlpha(R.id.iv_love, xFraction); }else if (dX < 0) { holder.setAlpha(R.id.iv_del, (-xFraction)); }else { holder.setAlpha(R.id.iv_love, 0); holder.setAlpha(R.id.iv_del, 0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6545/buggy-version/app.src.main.java.com.mcxtzhang.flowlayoutmanager.tantan.TanTanCallback.java", "BodyUseAPI": [], "Fixed commit": "16ccf13da504858b22b4e3eb86ae7c4dd9f7cb8e", "Url": "https://api.github.com/repos/mcxtzhang/ZLayoutManager", "Date": "2017-02-05T14:55:25Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.hasOption(\"commit\")) { SIMULATE = false; COMMIT = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/833/buggy-version/src.com.automic.specifics.ProcessSpecificCLI.java", "BodyUseAPI": [], "Fixed commit": "8d4fe2f78b328fa3a2337ac33305aa1cf0eaa0a1", "Url": "https://api.github.com/repos/brendanSapience/UC4-Automic-AE-CLI-Delete-Objects", "Date": "2015-10-26T03:35:57Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.getQueryResultTableSelectionModel().getMinSelectionIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newSelectionIndex == (-1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3130/buggy-version/src.main.java.richtercloud.reflection.form.builder.jpa.panels.QueryPanel.java", "BodyUseAPI": [], "Fixed commit": "fb54911936a1a309caade9b9adaaeaaf5c985479", "Url": "https://api.github.com/repos/document-scanner/reflection-form-builder-jpa", "Date": "2016-12-21T21:30:23Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (r <= rightEnd) for (int i = r; i <= rightEnd; i++) { ret.add(list.get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7523/buggy-version/src.main.java.me.jmhfkb.MergeSortWorker.java", "BodyUseAPI": [], "Fixed commit": "7ea5b7ceebf75fc9a85637f8b0bef2adf4d88b08", "Url": "https://api.github.com/repos/jmhertlein/CS342Project", "Date": "2013-11-29T01:53:39Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.gef.mvc.fx.parts.FocusFeedbackPart.getFeedbackGeometry()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(feedbackGeometry instanceof org.eclipse.gef.geometry.planar.ICurve)) { if (selected.contains(anchorage)) { org.eclipse.gef.geometry.planar.Rectangle feedbackBounds = feedbackGeometry.getBounds(); visual.resizeGeometry(((feedbackBounds.getWidth()) + ((SelectionFeedbackPart.DEFAULT_STROKE_WIDTH) * 2)), ((feedbackBounds.getHeight()) + ((SelectionFeedbackPart.DEFAULT_STROKE_WIDTH) * 2))); visual.relocateGeometry(((feedbackBounds.getX()) - (SelectionFeedbackPart.DEFAULT_STROKE_WIDTH)), ((feedbackBounds.getY()) - (SelectionFeedbackPart.DEFAULT_STROKE_WIDTH))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/560/buggy-version/org.eclipse.gef.mvc.fx.src.org.eclipse.gef.mvc.fx.parts.FocusFeedbackPart.java", "BodyUseAPI": ["org.eclipse.gef.geometry.planar.IGeometry.getBounds()"], "Fixed commit": "8c284f63c4c04bb52c3ec87996571dcfb494c6dc", "Url": "https://api.github.com/repos/eclipse/gef", "Date": "2017-02-27T13:03:35Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fab) != null) { fab.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2450/buggy-version/app.src.main.java.io.pumpkinz.pumpkinreader.NewsDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "e8c30c2496853ae65b530375efe551011889c194", "Url": "https://api.github.com/repos/pumpkinz/pumpkin-reader", "Date": "2015-10-16T01:34:59Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (byteArray == null) { return com.palantir.atlasdb.keyvalue.cassandra.ThriftObjectSizeUtils.getNullSize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/976/buggy-version/atlasdb-cassandra.src.main.java.com.palantir.atlasdb.keyvalue.cassandra.ThriftObjectSizeUtils.java", "BodyUseAPI": [], "Fixed commit": "9cfbb967d1faf3b089cc0bd9207fa09fd20b0923", "Url": "https://api.github.com/repos/palantir/atlasdb", "Date": "2017-11-09T12:04:12Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (columnOrSuperColumn == null) { return com.palantir.atlasdb.keyvalue.cassandra.ThriftObjectSizeUtils.getNullSize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/976/buggy-version/atlasdb-cassandra.src.main.java.com.palantir.atlasdb.keyvalue.cassandra.ThriftObjectSizeUtils.java", "BodyUseAPI": [], "Fixed commit": "9cfbb967d1faf3b089cc0bd9207fa09fd20b0923", "Url": "https://api.github.com/repos/palantir/atlasdb", "Date": "2017-11-09T12:04:12Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((signedBy) != null) { return signedBy.getName(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7134/buggy-version/code.src.com.NorthernSec.NorthernMail.Objects.Mail.DecryptedMail.java", "BodyUseAPI": [], "Fixed commit": "fc31f5818cc3cb2758150461fa0345a9ea9e5b18", "Url": "https://api.github.com/repos/NorthernSec/NorthernMail-client", "Date": "2015-06-08T19:44:51Z"},
{"Line": "=>810", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wrapper.getSelector()) != null) { wrapper.setArea(wrapper.getArea().move(0, ((partialScrollTops[i]) * scale))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5795/buggy-version/pitalium.src.main.java.com.htmlhifive.pitalium.core.selenium.PtlWebDriver.java", "BodyUseAPI": ["com.htmlhifive.pitalium.core.model.ScreenAreaWrapper.setArea(wrapper.getArea().move(0, ((partialScrollTops[i]) * scale)))", "wrapper.getArea().move(int,double)", "com.htmlhifive.pitalium.core.model.ScreenAreaWrapper.getArea()"], "Fixed commit": "35bd884639e2e9e7d68f89f2c17d5d87d9925d50", "Url": "https://api.github.com/repos/huynm3/hifive-pitalium", "Date": "2017-07-10T08:06:15Z"},
{"Line": "=>912", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wrapper.getSelector()) != null) { wrapper.setArea(wrapper.getArea().move(0, (scrollTop * scale))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5795/buggy-version/pitalium.src.main.java.com.htmlhifive.pitalium.core.selenium.PtlWebDriver.java", "BodyUseAPI": ["wrapper.getArea().move(int,double)", "com.htmlhifive.pitalium.core.model.ScreenAreaWrapper.getArea()", "com.htmlhifive.pitalium.core.model.ScreenAreaWrapper.setArea(wrapper.getArea().move(0, (scrollTop * scale)))"], "Fixed commit": "35bd884639e2e9e7d68f89f2c17d5d87d9925d50", "Url": "https://api.github.com/repos/huynm3/hifive-pitalium", "Date": "2017-07-10T08:06:15Z"},
{"Line": "=>1410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wrapper.getSelector()) != null) { wrapper.setArea(wrapper.getArea().move(deltaX, deltaY)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5795/buggy-version/pitalium.src.main.java.com.htmlhifive.pitalium.core.selenium.PtlWebDriver.java", "BodyUseAPI": ["wrapper.getArea().move(double,double)", "com.htmlhifive.pitalium.core.model.ScreenAreaWrapper.setArea(wrapper.getArea().move(deltaX, deltaY))", "com.htmlhifive.pitalium.core.model.ScreenAreaWrapper.getArea()"], "Fixed commit": "35bd884639e2e9e7d68f89f2c17d5d87d9925d50", "Url": "https://api.github.com/repos/huynm3/hifive-pitalium", "Date": "2017-07-10T08:06:15Z"},
{"Line": "=>627", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isWKIEnabled) wki.uninitPage();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2107/buggy-version/src.com.wanikani.androidnotifier.LocalIMEKeyboard.java", "BodyUseAPI": [], "Fixed commit": "f9ae367e8bb9102af939deb48bec4831005b489c", "Url": "https://api.github.com/repos/WaniKani/Android-Notification", "Date": "2013-10-22T03:02:17Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getSession(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((session.getAttribute(\"eid\")) == null) { response.sendRedirect(\"filexweb/Login.jsp\"); }else { session.setAttribute(\"eid\", null); response.sendRedirect(\"filexweb/Login.jsp\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2268/buggy-version/ProjectFileX-war.src.java.org.sampath.filex.web.actions.SignOut.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.setAttribute(java.lang.String,<nulltype>)"], "Fixed commit": "e450e0ee5d7fdeacbee87484e6623cdbfbead7f4", "Url": "https://api.github.com/repos/praveenthrilanka/teamXcalibur", "Date": "2017-03-19T16:21:06Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((filters.size()) > 1) { filter2 = filters.get(1); lPart2 = filter2.getLeftFilter(); rPart2 = filter2.getRightFilter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/146/buggy-version/src.kickassdb.Table.java", "BodyUseAPI": ["java.util.ArrayList<kickassdb.QueryFilter>.get(int)"], "Fixed commit": "52d5221f32f67754b4f59e4e6941627bc5c0ede8", "Url": "https://api.github.com/repos/ocampos16/KickAssDB", "Date": "2014-06-06T03:54:15Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(bean.getId()))) dao.setUid(bean.getId()); else dao.setScreen_name(bean.getScreen_name());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8715/buggy-version/src.org.qii.weiciyuan.ui.userinfo.MyInfoFragment.java", "BodyUseAPI": ["org.qii.weiciyuan.bean.UserBean.getId()", "org.qii.weiciyuan.dao.show.ShowUserDao.setScreen_name(bean.getScreen_name())", "org.qii.weiciyuan.bean.UserBean.getScreen_name()", "org.qii.weiciyuan.dao.show.ShowUserDao.setUid(bean.getId())"], "Fixed commit": "da638fbb9665c8c15dffc20e41102011620aa123", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-09T08:28:31Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((value) != null) && (!(value.equals(node.value)))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7414/buggy-version/src.com.zachtaylor.jnodalxml.XMLNode.java", "BodyUseAPI": [], "Fixed commit": "ea1cf5f6f0e2010229bdd7e56ddbad4b6462ac67", "Url": "https://api.github.com/repos/zachtaylor/JNodalXML", "Date": "2013-01-30T02:08:04Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((value) == null) && ((node.value) != null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7414/buggy-version/src.com.zachtaylor.jnodalxml.XMLNode.java", "BodyUseAPI": [], "Fixed commit": "ea1cf5f6f0e2010229bdd7e56ddbad4b6462ac67", "Url": "https://api.github.com/repos/zachtaylor/JNodalXML", "Date": "2013-01-30T02:08:04Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((children) == null) && ((node.children) != null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7414/buggy-version/src.com.zachtaylor.jnodalxml.XMLNode.java", "BodyUseAPI": [], "Fixed commit": "ea1cf5f6f0e2010229bdd7e56ddbad4b6462ac67", "Url": "https://api.github.com/repos/zachtaylor/JNodalXML", "Date": "2013-01-30T02:08:04Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((checkoutPayment.getAdditionalData()) == null) { com.magestore.app.pos.model.checkout.PosCheckoutPayment.AdditionalData paymentAdditionParam = checkoutPayment.createAdditionalData(); checkoutPayment.setAdditionalData(paymentAdditionParam); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5963/buggy-version/LibMagestore.src.main.java.com.magestore.app.pos.service.checkout.POSCheckoutService.java", "BodyUseAPI": ["com.magestore.app.lib.model.checkout.CheckoutPayment.setAdditionalData(PosCheckoutPayment.AdditionalData)", "com.magestore.app.lib.model.checkout.CheckoutPayment.createAdditionalData()"], "Fixed commit": "d2fe32cae2db73b88e1f8e1bb92cfdf02d071706", "Url": "https://api.github.com/repos/miketrueplus/MagestorePOSAndroid", "Date": "2017-03-09T09:21:27Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.relation.dashStructure.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((numSegments & 1) == 1) { numSegments++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/287/buggy-version/src.ded.ui.RelationController.java", "BodyUseAPI": [], "Fixed commit": "e902edce3af554cfaed39c6a9f3cdaf8ff12b649", "Url": "https://api.github.com/repos/smcpeak/ded", "Date": "2015-06-30T18:16:20Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (distance < 4000) fareInRs = 0.01 * 300; else fareInRs = 0.01 * (300 + (((distance / 1000) - 4) * 31));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2536/buggy-version/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.mixedTraffic.patnaIndia.ptFare.PtFareEventHandler.java", "BodyUseAPI": [], "Fixed commit": "f2c51e9fc71d2634b1a0f71fff85a8737eafe8a1", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2016-07-06T15:10:52Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((jsAPITicket) == null) || (jsAPITicket.expired())) { java.lang.String url = com.riversoft.weixin.mp.base.WxEndpoint.get(\"url.jsapi.ticket.get\"); java.lang.String response = wxClient.get(url); this.jsAPITicket = com.riversoft.weixin.mp.jsapi.JsAPIs.APITicket.fromJson(response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6550/buggy-version/weixin-mp.src.main.java.com.riversoft.weixin.mp.jsapi.JsAPIs.java", "BodyUseAPI": [], "Fixed commit": "11d37e5753eaec9fd57949a124e7595de0d6b843", "Url": "https://api.github.com/repos/borball/weixin-sdk", "Date": "2016-02-20T03:06:26Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((jsAPITicket) == null) || (jsAPITicket.expired())) { java.lang.String url = com.riversoft.weixin.qy.base.WxEndpoint.get(\"url.jsapi.ticket.get\"); java.lang.String response = wxClient.get(url); this.jsAPITicket = com.riversoft.weixin.qy.jsapi.JsAPIs.APITicket.fromJson(response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6550/buggy-version/weixin-qydev.src.main.java.com.riversoft.weixin.qy.jsapi.JsAPIs.java", "BodyUseAPI": [], "Fixed commit": "11d37e5753eaec9fd57949a124e7595de0d6b843", "Url": "https://api.github.com/repos/borball/weixin-sdk", "Date": "2016-02-20T03:06:26Z"},
{"Line": "=>533", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != auth) { get = get.addHeader(\"Authorization\", auth); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8836/buggy-version/core.src.main.java.com.twosigma.beaker.core.rest.PluginServiceLocatorRest.java", "BodyUseAPI": ["org.apache.http.client.fluent.Request.addHeader(java.lang.String,java.lang.String)"], "Fixed commit": "fbfbbbda169f740cf053c0bf19e65533f00bd2aa", "Url": "https://api.github.com/repos/twosigma/beakerx", "Date": "2015-06-02T21:41:02Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["allElements.get(1).text()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((HCorners.indexOf(' ')) != (-1)) { additionalStats.setHC(java.lang.Integer.valueOf(HCorners.substring(0, HCorners.indexOf(' ')))); additionalStats.setAC(java.lang.Integer.valueOf(ACorners.substring(0, ACorners.indexOf(' ')))); }else { additionalStats.setHC(java.lang.Integer.valueOf(HCorners)); additionalStats.setAC(java.lang.Integer.valueOf(ACorners)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1316/buggy-version/src.main.java.com.ANNBets.parser.SiteParser.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(char)", "com.ANNBets.parser.AdditionalStats.setHC(java.lang.Integer)", "com.ANNBets.parser.AdditionalStats.setHC(java.lang.Integer)", "java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "5090f25281132ab6b9afeb95f85f54af97419482", "Url": "https://api.github.com/repos/Ganibalje/ANNBets", "Date": "2017-02-14T12:47:14Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((columnDetails.isRequired()) && (\"TEXT\".equalsIgnoreCase(columnDetails.getColumnTypeMapping().getSqlColumnTypeName()))) columnDefinition.append(\" NOT NULL\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/18/buggy-version/CPOrm.src.main.java.za.co.cporm.model.generate.TableGenerator.java", "BodyUseAPI": [], "Fixed commit": "15b227dd0fd94cfc41f10ca2edf706a5d54224ca", "Url": "https://api.github.com/repos/Wackymax/CPOrm", "Date": "2016-06-08T19:49:32Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((reqUpdate.getAttachments().size()) > (oldReq.getAttachments().size())) { java.util.ArrayList<edu.wpi.cs.wpisuitetng.modules.requirementmanager.models.Attachment> attachments = reqUpdate.getAttachments(); edu.wpi.cs.wpisuitetng.modules.requirementmanager.models.Attachment lastAttachment = attachments.get(((attachments.size()) - 1)); lastAttachment.setUser(currentUser); reqUpdate.getEvents().add(lastAttachment); }else { edu.wpi.cs.wpisuitetng.modules.requirementmanager.models.changeset.RequirementChangeset changeset = new edu.wpi.cs.wpisuitetng.modules.requirementmanager.models.changeset.RequirementChangeset(currentUser); edu.wpi.cs.wpisuitetng.modules.requirementmanager.entitymanagers.ChangesetCallback callback = new edu.wpi.cs.wpisuitetng.modules.requirementmanager.entitymanagers.ChangesetCallback(changeset); updateMapper.map(reqUpdate, oldReq, callback); if (changeset.getChanges().containsKey(\"iteration\")) { int oldId = ((java.lang.Integer) (changeset.getChanges().get(\"iteration\").getOldValue())); int newId = ((java.lang.Integer) (changeset.getChanges().get(\"iteration\").getNewValue())); java.lang.String oldName = ((edu.wpi.cs.wpisuitetng.modules.requirementmanager.models.Iteration) (db.retrieve(edu.wpi.cs.wpisuitetng.modules.requirementmanager.models.Iteration.class, \"id\", oldId, s.getProject()).get(0))).getName(); java.lang.String newName = ((edu.wpi.cs.wpisuitetng.modules.requirementmanager.models.Iteration) (db.retrieve(edu.wpi.cs.wpisuitetng.modules.requirementmanager.models.Iteration.class, \"id\", newId, s.getProject()).get(0))).getName(); if (oldName.equals(\"\")) oldName = \"Backlog\"; if (newName.equals(\"\")) newName = \"Backlog\"; changeset.getChanges().remove(\"iteration\"); changeset.getChanges().put(\"iteration\", new edu.wpi.cs.wpisuitetng.modules.requirementmanager.models.changeset.FieldChange<java.lang.String>(oldName, newName)); } reqUpdate.getEvents().add(changeset); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8572/buggy-version/RequirementManager.src.edu.wpi.cs.wpisuitetng.modules.requirementmanager.entitymanagers.RequirementManager.java", "BodyUseAPI": ["edu.wpi.cs.wpisuitetng.modules.requirementmanager.models.Requirement.getAttachments()", "edu.wpi.cs.wpisuitetng.modules.requirementmanager.models.Requirement.getEvents()", "reqUpdate.getEvents().add(edu.wpi.cs.wpisuitetng.modules.requirementmanager.models.Attachment)", "reqUpdate.getEvents().add(edu.wpi.cs.wpisuitetng.modules.requirementmanager.models.changeset.RequirementChangeset)", "edu.wpi.cs.wpisuitetng.modules.requirementmanager.entitymanagers.ModelMapper.map(edu.wpi.cs.wpisuitetng.modules.requirementmanager.models.Requirement,edu.wpi.cs.wpisuitetng.modules.requirementmanager.models.Requirement,edu.wpi.cs.wpisuitetng.modules.requirementmanager.entitymanagers.ChangesetCallback)", "edu.wpi.cs.wpisuitetng.modules.requirementmanager.models.Requirement.getEvents()"], "Fixed commit": "9c154cc425ae891462bddd31830ce5be0de661e8", "Url": "https://api.github.com/repos/gsisko/wpi-suite-tng", "Date": "2013-04-21T20:18:22Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (seq == (TWO)) { if ((((cell_arr[r][c].equals(player)) && (cell_arr[r][(c + (ONE))].equals(player))) && (cell_arr[r][(c + (TWO))].equals(EMPTY))) && (cell_arr[r][(c + (Three))].equals(EMPTY))) { if ((r < (Five)) && (cell_arr[(r + (ONE))][(c + (TWO))].equals(EMPTY))) { return NotFind; } return c + (TWO); } if ((((cell_arr[r][c].equals(player)) && (cell_arr[r][(c + (ONE))].equals(EMPTY))) && (cell_arr[r][(c + (TWO))].equals(player))) && (cell_arr[r][(c + (Three))].equals(EMPTY))) { if ((r < (Five)) && (cell_arr[(r + (ONE))][(c + (ONE))].equals(EMPTY))) { return NotFind; } return c + (ONE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6931/buggy-version/Game_4_in_a_row.app.src.main.java.com.example.administrator.game_4_in_a_row.AiMove.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "7e6989d33d89a3dfe7c02748984dd99323ba995f", "Url": "https://api.github.com/repos/idanbe/Four-in-a-row", "Date": "2016-02-19T08:33:27Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((unbinder) != null) { unbinder.unbind(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/4890/buggy-version/app.src.main.java.ru.kazantsev.template.fragments.BaseFragment.java", "BodyUseAPI": [], "Fixed commit": "42cf93d5817fbe3f1ada395a52ef7aaca8032c82", "Url": "https://api.github.com/repos/Rufim/AndroidTemplate", "Date": "2016-07-17T20:01:26Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((get(attr)) == value) getApformComponent().setProperty(attr, value.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6811/buggy-version/runtime.core.src.main.java.fr.imag.adele.apam.impl.ComponentImpl.java", "BodyUseAPI": ["java.lang.Object.toString()", "fr.imag.adele.apam.apform.ApformComponent.setProperty(java.lang.String,java.lang.String)"], "Fixed commit": "c5dae00191a0ba7746b530c5fdba6ab821bd490d", "Url": "https://api.github.com/repos/AdeleResearchGroup/ApAM", "Date": "2013-01-30T14:27:28Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.newdawn.slick.GameContainer.getInput()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (input.isKeyDown(Input.KEY_UP)) { accely = (accely) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6139/buggy-version/src.landerGame.Spaceship.java", "BodyUseAPI": [], "Fixed commit": "a183271a8d61a60133bb759b6db1925eea7dc93c", "Url": "https://api.github.com/repos/NikolineOlsen/slick2d-eclipse-seed", "Date": "2015-05-08T13:15:04Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.newdawn.slick.GameContainer.getInput()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (input.isKeyDown(Input.KEY_UP)) { accely = (accely) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6139/buggy-version/src.landerGame.Spaceship.java", "BodyUseAPI": [], "Fixed commit": "a183271a8d61a60133bb759b6db1925eea7dc93c", "Url": "https://api.github.com/repos/NikolineOlsen/slick2d-eclipse-seed", "Date": "2015-05-08T13:15:04Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.newdawn.slick.GameContainer.getInput()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (input.isKeyDown(Input.KEY_UP)) { accely = (accely) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6139/buggy-version/src.landerGame.Spaceship.java", "BodyUseAPI": [], "Fixed commit": "a183271a8d61a60133bb759b6db1925eea7dc93c", "Url": "https://api.github.com/repos/NikolineOlsen/slick2d-eclipse-seed", "Date": "2015-05-08T13:15:04Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((quantity) != 0) { displayMessage(\"You're going to love this coffee!\"); }else { displayMessage(\"You can't order 0 cups of coffee!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5117/buggy-version/JustJava.app.src.main.java.com.taialexanderjones.justjava.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6c83b3c4badb9ed1f3334d1563b2c7970f27ced2", "Url": "https://api.github.com/repos/taiJones00/Android", "Date": "2017-12-26T04:05:10Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!exists) { target.addScore(score); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6406/buggy-version/tagcloud.service.src.main.java.org.openinfinity.tagcloud.domain.service.ScoreServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "29b267477466bdb3961f45cfdc17bed5d29c5281", "Url": "https://api.github.com/repos/open-infinity/solutions", "Date": "2013-07-17T16:16:39Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (blockATs == null) { return new nxt.at.AT_Block(0, 0, null, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1423/buggy-version/src.java.nxt.at.AT_Controller.java", "BodyUseAPI": [], "Fixed commit": "b711046296b79d93ea9da5a10d1882c0e50b2744", "Url": "https://api.github.com/repos/DennisFantoni/burstcoin", "Date": "2014-12-01T08:56:56Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_millisUntilFinished) < 200) { beginRepeatingAlarm(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3906/buggy-version/src.com.alexlabs.trackmovement.CountDownTimerService.java", "BodyUseAPI": [], "Fixed commit": "5a27270d6f4b160f0e25a95b0975aa285dc45640", "Url": "https://api.github.com/repos/SMTwinLabs/sm_labs", "Date": "2015-09-15T17:18:30Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((BuildConfig.DEBUG) && (activity == null)) throw new java.lang.AssertionError();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6137/buggy-version/itsmine.app.src.main.java.org.yuzhiqiang.itsmine.QRcodeScan.java", "BodyUseAPI": [], "Fixed commit": "b70043ce8876f12993bf54f51f9ddfcdd6e0bee3", "Url": "https://api.github.com/repos/yuzhiqiangorg/it-is-mine", "Date": "2014-08-04T18:38:03Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (fragment != null) fragment.startActivityForResult(intent, org.yuzhiqiang.itsmine.QRcodeScan.READ_CODE); else activity.startActivityForResult(intent, org.yuzhiqiang.itsmine.QRcodeScan.READ_CODE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6137/buggy-version/itsmine.app.src.main.java.org.yuzhiqiang.itsmine.QRcodeScan.java", "BodyUseAPI": ["android.app.Fragment.startActivityForResult(android.content.Intent,int)"], "Fixed commit": "b70043ce8876f12993bf54f51f9ddfcdd6e0bee3", "Url": "https://api.github.com/repos/yuzhiqiangorg/it-is-mine", "Date": "2014-08-04T18:38:03Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (runtime == null) { this.relationshipCountConfiguration = com.graphaware.module.relcount.RelationshipCountConfigurationImpl.defaultConfiguration().with(weighingStrategy); }else { runtime.waitUntilStarted(); try (org.neo4j.graphdb.Transaction tx = database.beginTx()) { com.graphaware.runtime.metadata.TxDrivenModuleMetadata moduleMetadata = new com.graphaware.runtime.metadata.ProductionSingleNodeMetadataRepository(database, com.graphaware.runtime.config.FluentRuntimeConfiguration.defaultConfiguration(), com.graphaware.runtime.config.RuntimeConfiguration.TX_MODULES_PROPERTY_PREFIX).getModuleMetadata(id); if ((moduleMetadata == null) || ((moduleMetadata.getConfig()) == null)) { this.relationshipCountConfiguration = com.graphaware.module.relcount.RelationshipCountConfigurationImpl.defaultConfiguration().with(weighingStrategy); }else { this.relationshipCountConfiguration = ((com.graphaware.module.relcount.RelationshipCountConfiguration) (moduleMetadata.getConfig())); } tx.success(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3784/buggy-version/src.main.java.com.graphaware.module.relcount.count.LegacyNaiveRelationshipCounter.java", "BodyUseAPI": [], "Fixed commit": "39b15ce79822d7a9e0f25125a905fa15b5ec1c56", "Url": "https://api.github.com/repos/graphaware/neo4j-relcount", "Date": "2014-08-07T14:04:45Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.collinsrichard.easywarp.managers.WarpManager.getAvailable(sender).contains(warpName))) { sender.sendMessage(((org.bukkit.ChatColor.RED) + \"Error: You don't have permission to go to this warp.\")); sender.sendMessage(((org.bukkit.ChatColor.RED) + \"Help: To list available warps, use /warps\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8852/buggy-version/src.main.java.com.collinsrichard.easywarp.commands.WarpCommand.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage(((org.bukkit.ChatColor.RED) + \"Error: You don't have permission to go to this warp.\"))", "org.bukkit.command.CommandSender.sendMessage(((org.bukkit.ChatColor.RED) + \"Help: To list available warps, use /warps\"))"], "Fixed commit": "5382794a5801e1ec809b6243edac1b8636260cd5", "Url": "https://api.github.com/repos/NerdsWBNerds/Easy-Warp", "Date": "2014-07-01T18:21:41Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inAstralPlane()) { return \"Level Infinity Astral Spirit\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5086/buggy-version/kol_base.src.main.java.com.github.kolandroid.kol.model.models.StatsModel.java", "BodyUseAPI": [], "Fixed commit": "a88e70da6ea80f8cf7c2cd005b06d37c6c3b4211", "Url": "https://api.github.com/repos/Kasekopf/kolandroid", "Date": "2015-09-30T21:46:51Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (drawable == null) { return android.graphics.Color.BLACK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/791/buggy-version/src.com.zst.xposed.halo.floatingwindow.hooks.ActionBarColorHook.java", "BodyUseAPI": [], "Fixed commit": "bf84858b66da4a6b11e1636556fa4805477ef7c1", "Url": "https://api.github.com/repos/zst123/XHaloFloatingWindow", "Date": "2014-07-24T16:00:30Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args != null) && ((args[1].length()) > 1)) { return \"Invalid: Character to be replaced length greater than 1\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/812/buggy-version/src.main.java.com.brightnlight.java.ReplaceCharactersFromString.java", "BodyUseAPI": [], "Fixed commit": "27e0a139014bce0ad1148bc3bf8cf0e20d10587e", "Url": "https://api.github.com/repos/smohamedfarouk/JavaTasks", "Date": "2016-02-27T01:57:41Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cardList.size()) == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/686/buggy-version/src.dao.impl.VIPDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "b17de4a989f0d589b3e638d9fc9722807500350c", "Url": "https://api.github.com/repos/sunshinezxf/HealthClub", "Date": "2014-03-08T03:34:29Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (hasObjectId) { topLevelMap.put(getObjectId(), contents); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/2248/buggy-version/src.main.java.com.cloudmine.api.SimpleCMObject.java", "BodyUseAPI": [], "Fixed commit": "91399fe69f81efb236bff79243ebcdfd699100df", "Url": "https://api.github.com/repos/cloudmine/cloudmine-javasdk", "Date": "2013-02-12T22:13:30Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!haveContent) { content.setError(getString(R.string.content_cant_be_empty)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/965/buggy-version/src.org.qii.weiciyuan.ui.send.WriteWeiboActivity.java", "BodyUseAPI": [], "Fixed commit": "a25469d07fd9135479e271a5ac5feb60edc5806b", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-11-27T13:29:42Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != rs) { rs.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/1091/buggy-version/src.main.java.github.hfdiao.sqlclient.SQLClient.java", "BodyUseAPI": ["java.sql.ResultSet.close()"], "Fixed commit": "fcf1ccd158a5015837c594d570aec935e6531efd", "Url": "https://api.github.com/repos/hfdiao/sqlclient", "Date": "2013-07-14T08:35:48Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((errorMessage) == null) || (errorMessage.equals(\"\"))) { errorMessage = \"Error causes during read incoming data!\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3493/buggy-version/MemoryAnalyzer.src.analyzer.ReaderThread.java", "BodyUseAPI": [], "Fixed commit": "762fcbe194a20e70789efea7f3c525f2affb270d", "Url": "https://api.github.com/repos/dimagerasimov/MemoryAnalyzer", "Date": "2016-12-04T22:01:44Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (retBinfElement == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3493/buggy-version/MemoryAnalyzer.src.analyzer.BinAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "762fcbe194a20e70789efea7f3c525f2affb270d", "Url": "https://api.github.com/repos/dimagerasimov/MemoryAnalyzer", "Date": "2016-12-04T22:01:44Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.hpe.adm.octane.ideplugins.services.filtering.Entity.COMMENT) == (com.hpe.adm.octane.ideplugins.services.filtering.Entity.getEntityType(entityModel))) { entityModel = ((com.hpe.adm.nga.sdk.model.EntityModel) (com.hpe.adm.octane.ideplugins.services.util.Util.getContainerItemForCommentModel(entityModel).getValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3218/buggy-version/octane-eclipse-plugin.src.com.hpe.octane.ideplugins.eclipse.ui.util.OpenDetailTabEntityMouseListener.java", "BodyUseAPI": ["com.hpe.adm.octane.ideplugins.services.util.Util.getContainerItemForCommentModel(com.hpe.adm.nga.sdk.model.EntityModel)", "com.hpe.adm.octane.ideplugins.services.util.Util.getContainerItemForCommentModel(entityModel).getValue()"], "Fixed commit": "616c268629ba562938846193f04db86dfbd6db03", "Url": "https://api.github.com/repos/MicroFocus/octane-eclipse-plugin", "Date": "2017-09-18T12:50:44Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newItem) { todolist.christine.anderson.todolist.models.ToDoItemCollection.GetInstance(getActivity().getApplication()).addToDoItem(item); }else { todolist.christine.anderson.todolist.models.ToDoItemCollection.GetInstance(getActivity().getApplication()).updateToDoItem(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6271/buggy-version/ToDoList.app.src.main.java.todolist.christine.anderson.todolist.fragments.ToDoItemFragment.java", "BodyUseAPI": [], "Fixed commit": "42abf9f0a410a0b3cc945f2e8feb19830328a02a", "Url": "https://api.github.com/repos/ander384/ToDoList", "Date": "2017-11-30T07:48:26Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((evt.player) != (net.minecraft.client.Minecraft.getMinecraft().thePlayer)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/6317/buggy-version/java.net.gtn.dimensionalpocket.client.tickhandler.ClientPlayerTickEventHandler.java", "BodyUseAPI": [], "Fixed commit": "011dbc95e6745739d78907853a798eeaa1fc9490", "Url": "https://api.github.com/repos/NPException/Dimensional-Pockets", "Date": "2015-01-30T00:20:05Z"},
{"Line": "=>1450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((targetType == (RGB)) && (((source.pixels[0]) >> 24) == 0)) { source.filter(processing.core.OPAQUE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/640/buggy-version/core.src.processing.core.PGraphicsJava2D.java", "BodyUseAPI": ["processing.core.PImage.filter(processing.core.OPAQUE)"], "Fixed commit": "1a22696118f3754ea98df6feb2db44e3a5a2b1ff", "Url": "https://api.github.com/repos/processing/processing", "Date": "2013-10-28T23:10:57Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.Keyle.MyPet.listeners.MyPetPlayer.getMyPet()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((myPet.getLocation().getWorld()) != (event.getTo().getWorld())) || ((myPet.getLocation().distance(event.getTo())) > 10)) { myPet.removePet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3588/buggy-version/src.main.java.de.Keyle.MyPet.listeners.MyPetPlayerListener.java", "BodyUseAPI": ["de.Keyle.MyPet.entity.types.MyPet.removePet()"], "Fixed commit": "df3f534de7d14ffad5d6777f79f6add469114052", "Url": "https://api.github.com/repos/xXKeyleXx/MyPet", "Date": "2013-05-29T08:06:53Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cqOffset != 0) { long currentLogicOffset = (mappedFile.getWrotePosition()) + (mappedFile.getFileFromOffset()); if (cqOffset < currentLogicOffset) { org.apache.rocketmq.store.ConsumeQueue.log.warn(\"build consume queue idempotent, expectLogicOffset: {} currentLogicOffset: {} Topic: {} QID: {} Diff: {}\", expectLogicOffset, currentLogicOffset, this.topic, this.queueId, (expectLogicOffset - currentLogicOffset)); return true; } if (expectLogicOffset != currentLogicOffset) { org.apache.rocketmq.store.ConsumeQueue.LOG_ERROR.warn(\"[BUG]logic queue order maybe wrong, expectLogicOffset: {} currentLogicOffset: {} Topic: {} QID: {} Diff: {}\", expectLogicOffset, currentLogicOffset, this.topic, this.queueId, (expectLogicOffset - currentLogicOffset)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3053/buggy-version/store.src.main.java.org.apache.rocketmq.store.ConsumeQueue.java", "BodyUseAPI": [], "Fixed commit": "bba94e4f6beba2c5964b491d59468bcc526ea470", "Url": "https://api.github.com/repos/fuyou001/incubator-rocketmq", "Date": "2017-08-14T08:48:02Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fetchDataQuery) != null) { fetchDataQuery.keepSynced(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5854/buggy-version/app.src.main.java.com.kirilov.ivan.myfinance.AnalyzeActivity.java", "BodyUseAPI": [], "Fixed commit": "56fefae21bbdf970c1d6cf7a99d610fec4f32838", "Url": "https://api.github.com/repos/junek92/myFinance", "Date": "2016-07-18T09:01:54Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fetchDataQuery) != null) { fetchDataQuery.keepSynced(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/5854/buggy-version/app.src.main.java.com.kirilov.ivan.myfinance.AnalyzeActivity.java", "BodyUseAPI": [], "Fixed commit": "56fefae21bbdf970c1d6cf7a99d610fec4f32838", "Url": "https://api.github.com/repos/junek92/myFinance", "Date": "2016-07-18T09:01:54Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (capturingDiff) { differences.add(new com.waes.assignment.service.dto.DiffDetailDTO(diffStartingOffset, diffLength)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/8926/buggy-version/src.main.java.com.waes.assignment.service.impl.DiffServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "a38512fe1101de95d5eef80c40e9f9ab9c040f36", "Url": "https://api.github.com/repos/tomaskroth/waes_assignment", "Date": "2017-11-14T11:20:25Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isEditingLesson) != (e.isEditingLesson)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7086/buggy-version/src.main.java.seedu.address.logic.commands.EditCommand.java", "BodyUseAPI": [], "Fixed commit": "dea0d88dfa98ed0b6fcdf69103a78aa7cd871b1a", "Url": "https://api.github.com/repos/CS2103AUG2017-W13-B4/main", "Date": "2017-11-01T11:05:02Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isDelete) != (((seedu.address.logic.commands.RemarkCommand) (other)).isDelete)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7086/buggy-version/src.main.java.seedu.address.logic.commands.RemarkCommand.java", "BodyUseAPI": [], "Fixed commit": "dea0d88dfa98ed0b6fcdf69103a78aa7cd871b1a", "Url": "https://api.github.com/repos/CS2103AUG2017-W13-B4/main", "Date": "2017-11-01T11:05:02Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDelete) { return (other == (this)) || ((other instanceof seedu.address.logic.commands.RemarkCommand) && (index.equals(((seedu.address.logic.commands.RemarkCommand) (other)).index))); }else { return (other == (this)) || (((other instanceof seedu.address.logic.commands.RemarkCommand) && (remarkContent.equals(((seedu.address.logic.commands.RemarkCommand) (other)).remarkContent))) && (index.equals(((seedu.address.logic.commands.RemarkCommand) (other)).index))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/7086/buggy-version/src.main.java.seedu.address.logic.commands.RemarkCommand.java", "BodyUseAPI": [], "Fixed commit": "dea0d88dfa98ed0b6fcdf69103a78aa7cd871b1a", "Url": "https://api.github.com/repos/CS2103AUG2017-W13-B4/main", "Date": "2017-11-01T11:05:02Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player.getLevel()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V64/3899/buggy-version/src.gfx.forms.presets.MinimapForm.java", "BodyUseAPI": [], "Fixed commit": "abe75b0cb76a01d762f891e41f4475f7c8728425", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-02-23T15:23:03Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((name) == null) || (ho == null)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1713/buggy-version/src.main.java.regalowl.hyperconomy.hyperobject.BasicObject.java", "BodyUseAPI": [], "Fixed commit": "c4bcf69ca26235117f6af4dda45d8172603bc3d7", "Url": "https://api.github.com/repos/RegalOwl/HyperConomy", "Date": "2014-07-10T02:24:43Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.apache.jena.fuseki.Fuseki.GSP_DIRECT_NAMING)) org.apache.jena.fuseki.servlets.ServletOps.errorNotFound(((((\"Not found: dataset='\" + (printName(desc.getName()))) + \"' trailing='\") + (printName(trailing))) + \"'\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6890/buggy-version/jena-fuseki2.jena-fuseki-core.src.main.java.org.apache.jena.fuseki.servlets.SPARQL_UberServlet.java", "BodyUseAPI": [], "Fixed commit": "7122aa6243452eecd92bc4538fa5fbfd43da97e5", "Url": "https://api.github.com/repos/apache/jena", "Date": "2015-09-08T18:31:26Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, com.orientechnologies.orient.core.fetch.OFetchPlan.OFetchPlanLevel>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (iFieldPath.equals(fpLevelKey)) return fpLevelValue.level; else if (fpLevelKey.startsWith(iFieldPath)) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/980/buggy-version/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchPlan.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "71a30feea1130d045aa21c93fc2ab2aeea17a1aa", "Url": "https://api.github.com/repos/matanshukry/orientdb", "Date": "2015-03-09T17:38:32Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((guiScreens[0]) != null) guiScreens[0].screen.getNifty().exit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3105/buggy-version/CorpseSlasher.src.GUI.UserInterfaceManager.java", "BodyUseAPI": ["guiScreens[0].screen.getNifty().exit()", "guiScreens[0].screen.getNifty()"], "Fixed commit": "17f226f4049241c9414e26181a3b01713a4438a9", "Url": "https://api.github.com/repos/njTaljaard/Laminin_CorpseSlasher", "Date": "2014-10-13T09:40:16Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((guiScreens[2]) != null) guiScreens[2].screen.getNifty().exit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3105/buggy-version/CorpseSlasher.src.GUI.UserInterfaceManager.java", "BodyUseAPI": ["guiScreens[2].screen.getNifty().exit()", "guiScreens[2].screen.getNifty()"], "Fixed commit": "17f226f4049241c9414e26181a3b01713a4438a9", "Url": "https://api.github.com/repos/njTaljaard/Laminin_CorpseSlasher", "Date": "2014-10-13T09:40:16Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((guiScreens[1]) != null) guiScreens[1].screen.getNifty().exit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3105/buggy-version/CorpseSlasher.src.GUI.UserInterfaceManager.java", "BodyUseAPI": ["guiScreens[1].screen.getNifty()", "guiScreens[1].screen.getNifty().exit()"], "Fixed commit": "17f226f4049241c9414e26181a3b01713a4438a9", "Url": "https://api.github.com/repos/njTaljaard/Laminin_CorpseSlasher", "Date": "2014-10-13T09:40:16Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (recipeActivity.getIngredientRowAdapter().isEmpty()) { de.anycook.einkaufszettel.tasks.LoadRecipeIngredientsTask loadRecipeIngredientsTask = new de.anycook.einkaufszettel.tasks.LoadRecipeIngredientsTask(recipeActivity.getIngredientRowAdapter(), view, recipeActivity); loadRecipeIngredientsTask.execute(recipe.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4642/buggy-version/app.src.main.java.de.anycook.einkaufszettel.activities.fragments.recipe.RecipeIngredientListFragment.java", "BodyUseAPI": ["de.anycook.einkaufszettel.activities.RecipeActivity.getIngredientRowAdapter()"], "Fixed commit": "72a94290e79ebf561691ae314460550004169ead", "Url": "https://api.github.com/repos/anycook/anycook-einkaufszettel-android", "Date": "2016-06-12T19:18:21Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((contents.length) < 2) { throw new exception.StreamParserException(parser.StreamParser.ERROR_INCOMPLETE_INPUT); }else if (!(checkSort(contents[parser.StreamParser.PARAM_POS_SORTTYPE], order))) { throw new exception.StreamParserException(parser.StreamParser.ERROR_INVALID_SORT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/120/buggy-version/src.parser.StreamParser.java", "BodyUseAPI": ["parser.StreamParser.checkSort(java.lang.String,java.lang.String)"], "Fixed commit": "2eb991498a0375cab3dcc6625485291a33d4545c", "Url": "https://api.github.com/repos/cs2103aug2014-f10-1j/main", "Date": "2014-11-06T13:58:16Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((memberID) == null) { return view; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/914/buggy-version/src.com.treshna.hornet.MemberMembershipFragment.java", "BodyUseAPI": [], "Fixed commit": "1e2e9cc783211d64afed119a78576b7e50f97ec9", "Url": "https://api.github.com/repos/Tbone38/MyHornet", "Date": "2014-03-10T20:28:37Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getPathInfo()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(com.vmware.bdd.utils.CommonUtil.validataPathInfo(pathInfo))) { throw com.vmware.bdd.exception.BddException.INVALID_PARAMETER(\"requested path info\", pathInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5745/buggy-version/server.serengeti.src.main.java.com.vmware.bdd.rest.RestResource.java", "BodyUseAPI": ["com.vmware.bdd.exception.BddException.INVALID_PARAMETER(java.lang.String,java.lang.String)"], "Fixed commit": "be3d886ec46df4c03f6a27db5ca4d593f2669fc7", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2013-12-03T04:04:47Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (editor instanceof com.google.gwt.event.logical.shared.HasValueChangeHandlers) { ((com.google.gwt.event.logical.shared.HasValueChangeHandlers) (editor)).addValueChangeHandler(new com.google.gwt.event.logical.shared.ValueChangeHandler() { @java.lang.Override public void onValueChange(final com.google.gwt.event.logical.shared.ValueChangeEvent event) { validator.validate(edu.mayo.mprc.swift.configuration.client.view.PropertyList.getEditorValue(((edu.mayo.mprc.swift.configuration.client.view.Widget) (event.getSource())))); } }); }else if (editor instanceof edu.mayo.mprc.swift.configuration.client.view.HasClickHandlers) { ((edu.mayo.mprc.swift.configuration.client.view.HasClickHandlers) (editor)).addClickHandler(new edu.mayo.mprc.swift.configuration.client.view.ClickHandler() { @java.lang.Override public void onClick(final edu.mayo.mprc.swift.configuration.client.view.ClickEvent event) { validator.validate(edu.mayo.mprc.swift.configuration.client.view.PropertyList.getEditorValue(((edu.mayo.mprc.swift.configuration.client.view.Widget) (event.getSource())))); } }); }else { throw new java.lang.RuntimeException((\"Unsupported type of editor: \" + (editor.getClass().getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1422/buggy-version/swift.config-ui.src.main.java.edu.mayo.mprc.swift.configuration.client.view.GwtUiBuilder.java", "BodyUseAPI": ["edu.mayo.mprc.swift.configuration.client.view.Widget.getClass()", "editor.getClass().getName()"], "Fixed commit": "7a95cda252b578f5a5ed5fc4fc5c308b5b729412", "Url": "https://api.github.com/repos/romanzenka/swift", "Date": "2014-01-23T22:29:07Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((seed.length) != 8) { throw new java.lang.IllegalArgumentException(\"DirectSplittableRandomAdapter requires an 8-byte seed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3491/buggy-version/src.main.java.betterrandom.prng.adapter.DirectSplittableRandomAdapter.java", "BodyUseAPI": [], "Fixed commit": "0009d93c33eb923d04b47eb170c14299184d64fe", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2017-09-05T08:42:56Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.util.StringUtil.split(java.lang.String,CharPool.SLASH)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"language\".equals(pathArray[0])) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3092/buggy-version/portal-impl.src.com.liferay.portal.webserver.WebServerServlet.java", "BodyUseAPI": [], "Fixed commit": "2da1319ebb7950c86488a24e86dd52a4638ce41c", "Url": "https://api.github.com/repos/achaparro/liferay-portal", "Date": "2011-08-23T10:13:51Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.andfchat.core.data.ChatroomManager.getChatroom(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (log != null) { log.addMessage(msg, characterManager.findCharacter(sessionData.getCharacterName()), new java.util.Date()); }else { roboguice.util.Ln.e((\"Can't find log for private message recipient \" + recipient)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7701/buggy-version/src.com.andfchat.core.connection.FlistWebSocketConnection.java", "BodyUseAPI": ["com.andfchat.core.data.Chatroom.addMessage(java.lang.String,characterManager.findCharacter(sessionData.getCharacterName()),java.util.Date)"], "Fixed commit": "490b256eb5a5fc50346894d3c91e1ce7f347c641", "Url": "https://api.github.com/repos/AndFChat/AndFChat", "Date": "2014-05-12T08:57:50Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((tmpProfile.getGroupList().size()) > 0) { loadGroup(tmpProfile.getCurrentGroup()); setSomethingHappened(true); doWork(); setSomethingHappened(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3153/buggy-version/app.src.main.java.ferocioushammerheads.grouploop.AccountTools.java", "BodyUseAPI": ["ferocioushammerheads.grouploop.UserProfile.getCurrentGroup()", "ferocioushammerheads.grouploop.AccountTools.5.loadGroup(tmpProfile.getCurrentGroup())"], "Fixed commit": "e951102d93b0349430593488cfeac87ba33b97f4", "Url": "https://api.github.com/repos/jongreene/group-loop", "Date": "2017-12-01T06:14:56Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((ferocioushammerheads.grouploop.MainActivity.userProfile) != null) && ((ferocioushammerheads.grouploop.MainActivity.userProfile.getCurrentGroup()) != null)) { findViewById(R.id.chipItemsButtons).setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3153/buggy-version/app.src.main.java.ferocioushammerheads.grouploop.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e951102d93b0349430593488cfeac87ba33b97f4", "Url": "https://api.github.com/repos/jongreene/group-loop", "Date": "2017-12-01T06:14:56Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.andes.kernel.DeliverableAndesMetadata.ChannelInformation.getLatestMessageStatus()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((null != messageStatus) && (messageStatus.equals(ChannelMessageStatus.RECOVERED))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2127/buggy-version/modules.andes-core.broker.src.main.java.org.wso2.andes.kernel.DeliverableAndesMetadata.java", "BodyUseAPI": [], "Fixed commit": "9dd5e85b39a0e149302dc8d6ecb93f64feb9c4e7", "Url": "https://api.github.com/repos/sdkottegoda/andes", "Date": "2017-03-28T06:34:33Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fields.get(i).getText().equals(\"\")) { ret[i] = ret.length; }else { int c = java.lang.Integer.parseInt(fields.get(i).getText()); if ((1 <= c) && (c <= ((ret.length) - 1))) { ret[i] = java.lang.Integer.parseInt(fields.get(i).getText()); }else { ret[i] = ret.length; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7496/buggy-version/alternativevoting.VisualBallot.java", "BodyUseAPI": ["javax.swing.JTextField.getText()", "javax.swing.JTextField.getText()", "java.lang.Integer.parseInt(java.lang.String)", "java.util.ArrayList<javax.swing.JTextField>.get(int)", "java.util.ArrayList<javax.swing.JTextField>.get(int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "7123f1eadde43d998f9142df4d7cca83a428c3d6", "Url": "https://api.github.com/repos/vinayksk/alternativevoting", "Date": "2017-05-08T17:20:05Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(port.equals(OFPort.ALL))) { spbs = new java.util.HashSet<net.floodlightcontroller.statistics.SwitchPortBandwidth>(java.util.Collections.singleton(statisticsService.getBandwidthConsumption(dpid, port))); }else { spbs = new java.util.HashSet<net.floodlightcontroller.statistics.SwitchPortBandwidth>(); for (org.projectfloodlight.openflow.protocol.OFPortDesc pd : switchService.getSwitch(dpid).getPorts()) { net.floodlightcontroller.statistics.SwitchPortBandwidth spb = statisticsService.getBandwidthConsumption(dpid, pd.getPortNo()); if (spb != null) { spbs.add(spb); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8876/buggy-version/src.main.java.net.floodlightcontroller.statistics.web.BandwidthResource.java", "BodyUseAPI": ["java.util.Collections.singleton(statisticsService.getBandwidthConsumption(dpid, port))", "net.floodlightcontroller.statistics.IStatisticsService.getBandwidthConsumption(org.projectfloodlight.openflow.types.DatapathId,org.projectfloodlight.openflow.types.OFPort)"], "Fixed commit": "29c271d5197c40a81d77623bba5b909fa95b0c67", "Url": "https://api.github.com/repos/PHAmorimRezende/floodlight", "Date": "2016-06-18T21:45:22Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((logDataParts.length) > 7) { comment = logDataParts[7]; }else { comment = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4250/buggy-version/app.src.main.java.de.uhrenbastler.watchcheck.tools.DataImporter.java", "BodyUseAPI": [], "Fixed commit": "7e451e31067c4215bf988e9bf5c597749607efc5", "Url": "https://api.github.com/repos/clorenz/WatchCheck2", "Date": "2015-02-13T13:20:48Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activePlayer) != null) activePlayer.move(keyCode, this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/894/buggy-version/src.GamePanel.java", "BodyUseAPI": [], "Fixed commit": "0001ff0059742964fb51b21abad4652fa1ef50c4", "Url": "https://api.github.com/repos/vgmoose/zelda-overworld", "Date": "2014-03-20T11:11:51Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user) != null) { setDataLine(user); setDataPie(user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2234/buggy-version/mobile.src.main.java.com.standapp.fragment.GraphingCardFragment.java", "BodyUseAPI": [], "Fixed commit": "325f4ffab76a13cd5f263e76a051c7b495cda5a2", "Url": "https://api.github.com/repos/iwd-awesome/standapp-android", "Date": "2015-02-13T07:18:32Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (user == null) { throw new cdiofinal.shared.DALException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8929/buggy-version/src.cdiofinal.server.LoginRPCServlet.java", "BodyUseAPI": [], "Fixed commit": "d9cb09da922b5d34825aa6c67d5a8266583317eb", "Url": "https://api.github.com/repos/Frontlinjen/CDIO2-final", "Date": "2016-06-16T12:16:59Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((itemTabAdpater) != null) { itemTabAdpater.onScrolledStateChange(state); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6158/buggy-version/src.main.java.com.sen.lib.view.HorizontalItemTab.java", "BodyUseAPI": [], "Fixed commit": "8c2a6383d53b27be422343b8972b0d4a17f9a930", "Url": "https://api.github.com/repos/hle999/Senlib", "Date": "2015-06-02T09:33:14Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mediaPlayerManager.isPlaying())) { onMediaCompletion(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5378/buggy-version/app.src.main.java.jp.co.efusion.aninstantreply.PlayActivity.java", "BodyUseAPI": [], "Fixed commit": "323d9cc36bcacd4af61025e8126b8129b4f8fac0", "Url": "https://api.github.com/repos/cuongptit93/InstantRep", "Date": "2016-10-17T01:54:33Z"},
{"Line": "=>673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isHavingType.equals(\"anchor\")) && (!(ismap))) { addNewMessage(anchorValue, false, false, isPieChart, isSearchResult, datumList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1513/buggy-version/app.src.main.java.org.fossasia.susi.ai.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b715c2debca08c1b9bc134a6f8f1d9acc60c639b", "Url": "https://api.github.com/repos/samsruti/susi_android", "Date": "2016-12-11T07:38:50Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mCurrentMarker.getPosition().equals(destination)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4513/buggy-version/app.src.main.java.dat255.refugeemap.GMapFragment.java", "BodyUseAPI": [], "Fixed commit": "e9f7e60b5993dab77dc4cbc0ece09d89747bb4db", "Url": "https://api.github.com/repos/drualsk/RefugeeMap", "Date": "2016-10-20T21:37:10Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLastPartArgument) { parts.add(new com.trollsahead.qcumberless.model.Step.CucumberStepPart(this, com.trollsahead.qcumberless.model.Step.CucumberStepPart.PartType.TEXT, \" \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6070/buggy-version/src.java.com.trollsahead.qcumberless.model.Step.java", "BodyUseAPI": [], "Fixed commit": "673b401a5c87de9c9139b61b3ba5ec256a1c6d5c", "Url": "https://api.github.com/repos/black-knight/Q-Cumberless-Testing", "Date": "2012-06-14T13:25:46Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (name.equals(\"DriveToNextYellowTote\")) moveYX(0, output); else if ((name.equals(\"DriveToAutonomousZone\")) || (name.equals(\"DriveBackALittle\"))) moveYX(output, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/49/buggy-version/org.usfirst.frc.team2212.robot.subsystems.DriveTrain.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "831f619ec68a83e4d042a234efb7f9003ad48708", "Url": "https://api.github.com/repos/dvir42/FRC2015", "Date": "2015-01-11T20:25:02Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ongespeeldeKaarten.size()) == 0) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7438/buggy-version/src.nl.han.ica.ap.boerenbridge.speler.computer.algoritme.montecarlo.KaartBepaler.java", "BodyUseAPI": [], "Fixed commit": "963251b5632a0b4bbd94193d2cd6d1ec8abc0f70", "Url": "https://api.github.com/repos/JorisBloemen/boerenbridge-game", "Date": "2016-06-06T11:10:23Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.openapi.roots.ModuleRootManager.getInstance(module).getFileIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(moduleFileIndex.isInSourceContent(file))) || (moduleFileIndex.isInTestSourceContent(file))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2278/buggy-version/jangaroo-idea-9.ext-xml-idea-plugin.src.main.java.net.jangaroo.ide.idea.exml.ExmlCompiler.java", "BodyUseAPI": [], "Fixed commit": "a06050a4ae43d060e2d0d719f56005d54e3d038f", "Url": "https://api.github.com/repos/CoreMedia/jangaroo-tools", "Date": "2011-05-16T06:42:29Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (line.isEmpty()) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2623/buggy-version/src.main.java.io.harborl.simple.web.HttpRequest.java", "BodyUseAPI": [], "Fixed commit": "9d6d1ed093297d5af1ad2bc4aa89a8438eadbdc4", "Url": "https://api.github.com/repos/harborl/SimpleWeb", "Date": "2016-12-14T04:39:42Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (profilGestion.existe()) { plusMoins.ajouteScore(score); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2123/buggy-version/src.plusMoins.java", "BodyUseAPI": [], "Fixed commit": "51e4cbc7b9c432957f4773b216b8abc27f6c7ca7", "Url": "https://api.github.com/repos/TGLuis/Challenge-1", "Date": "2016-01-17T16:06:03Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((property.isCollectionProperty()) == false) { java.lang.Object deserializedTargetInstance = targetDao.retrieve(propertyValueFromDocument); setValueOnObject(object, property, deserializedTargetInstance); }else { setCollectionPropertyOnObject(object, property, targetDao, ((java.lang.String) (propertyValueFromDocument))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/579/buggy-version/src.main.java.net.dankito.jpa.couchbaselite.Dao.java", "BodyUseAPI": ["net.dankito.jpa.couchbaselite.Dao.setValueOnObject(java.lang.Object,net.dankito.jpa.annotationreader.config.PropertyConfig,java.lang.Object)", "net.dankito.jpa.couchbaselite.Dao.setCollectionPropertyOnObject(java.lang.Object,net.dankito.jpa.annotationreader.config.PropertyConfig,net.dankito.jpa.couchbaselite.Dao,java.lang.Object)"], "Fixed commit": "fcf0e4f54d2c79850839e7c839834c578ab7aa30", "Url": "https://api.github.com/repos/dankito/couchbase-lite-jpa", "Date": "2016-09-03T14:46:39Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (etcdAddress == null) { etcdAddress = java.lang.System.getProperty(org.github.etcd.service.impl.ClusterManagerImpl.DEFAULT_ETCD_CLIENT, \"http://localhost:2379/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6562/buggy-version/src.main.java.org.github.etcd.service.impl.ClusterManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "e9c0db0e1fa983a5c0e0dbd02d1822b21dd2992d", "Url": "https://api.github.com/repos/nikfoundas/etcd-viewer", "Date": "2016-07-06T22:01:54Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.ServerSocket.accept()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(client.getInetAddress().getHostAddress().equals(server.getInetAddress().getHostAddress()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4647/buggy-version/ChatRoom.src.chatroom.net.listener.MessageListener.java", "BodyUseAPI": [], "Fixed commit": "f05ba0a869ae4e6c626f990a864c05406359eec3", "Url": "https://api.github.com/repos/llmhyy/ChatRoom", "Date": "2013-12-07T14:19:29Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tp.hasNextInt()) { signs.push(sign2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7101/buggy-version/group12.382266293.coding.basic.stack.expr.InfixExpr.java", "BodyUseAPI": [], "Fixed commit": "2c3e85f200785a981ec1dadfc38e711ceedca302", "Url": "https://api.github.com/repos/kingkeivn/coding2017", "Date": "2017-04-15T04:03:30Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (differential > 0) differential = ((int) (differential * reprodRate));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/410/buggy-version/src.ecology.EcoTile.java", "BodyUseAPI": [], "Fixed commit": "4c03b6e1e267fe6b1647dfd0effd6d85c2e6a0d8", "Url": "https://api.github.com/repos/rynkwn/SimpleLiving", "Date": "2017-09-02T00:49:35Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (getShowCodes())) { sb.append(\"&sc\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8772/buggy-version/src.main.java.fi.thl.pivot.web.CubeRequest.java", "BodyUseAPI": [], "Fixed commit": "325735b017d806f41bc3225311f94e5ea7cafa50", "Url": "https://api.github.com/repos/THLfi/tiku", "Date": "2016-11-29T18:24:10Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { mCurrentIndex = savedInstanceState.getInt(com.bignerdranch.android.geoquiz.QuizActivity.KEY_INDEX, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7390/buggy-version/src.com.bignerdranch.android.geoquiz.QuizActivity.java", "BodyUseAPI": ["android.os.Bundle.getInt(java.lang.String,int)"], "Fixed commit": "4c460cbc40260ea0821f6a363488de9fae881060", "Url": "https://api.github.com/repos/alfredosotoz/GeoQuiz", "Date": "2014-03-31T04:24:16Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((config.getGsonHelperPackage()) != null) { java.nio.file.Path enumDest = com.google.code.proto.gcless.MemlessGenerator.packageToPath(output.getAbsolutePath(), config.getGsonHelperPackage()); java.nio.file.Files.write(new java.io.File(enumDest.toFile(), \"GsonHelper.java\").toPath(), enumHelper.toString().getBytes(\"UTF-8\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4372/buggy-version/src.main.java.com.google.code.proto.gcless.MemlessGenerator.java", "BodyUseAPI": ["com.google.code.proto.gcless.MemlessGenerator.packageToPath(java.lang.String,config.getGsonHelperPackage())", "com.google.code.proto.gcless.GeneratorConfiguration.getGsonHelperPackage()"], "Fixed commit": "5a5d5e09ea8061078157a6b4d31dd48f7d026f3d", "Url": "https://api.github.com/repos/itsff/protobuf-gcless", "Date": "2013-01-18T21:28:45Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.execStmt) instanceof kalang.compiler.BlockStmt) { visit(node.execStmt); }else { c(\"{\"); visit(node.execStmt); c(\"}\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3920/buggy-version/src.main.java.kalang.compiler.Ast2Java.java", "BodyUseAPI": ["kalang.compiler.Ast2Java.visit(node.execStmt)", "kalang.compiler.Ast2Java.visit(node.execStmt)"], "Fixed commit": "cdb3a4b98b40b33d8c7a41e9b7a0fcb5d258d5ad", "Url": "https://api.github.com/repos/kasonyang/kalang", "Date": "2016-03-04T08:43:54Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.finallyStmt) != null) { c(\"finally \"); if ((node.finallyStmt) instanceof kalang.compiler.BlockStmt) { visit(node.finallyStmt); }else { c(\"{\"); visit(node.finallyStmt); c(\"}\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3920/buggy-version/src.main.java.kalang.compiler.Ast2Java.java", "BodyUseAPI": ["kalang.compiler.Ast2Java.visit(node.finallyStmt)", "kalang.compiler.Ast2Java.visit(node.finallyStmt)"], "Fixed commit": "cdb3a4b98b40b33d8c7a41e9b7a0fcb5d258d5ad", "Url": "https://api.github.com/repos/kasonyang/kalang", "Date": "2016-03-04T08:43:54Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.processes) == null) { this.processes = processes; }else { this.processes.clear(); this.processes.addAll(processes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8501/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Batch.java", "BodyUseAPI": [], "Fixed commit": "603284a9c5f8b8673f864f61035c9ca0bc8292b8", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.batches) == null) { this.batches = batches; }else { this.batches.clear(); this.batches.addAll(batches); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8501/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Process.java", "BodyUseAPI": [], "Fixed commit": "603284a9c5f8b8673f864f61035c9ca0bc8292b8", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["droidninja.filepicker.utils.ImageCaptureManager.dispatchTakePictureIntent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (intent != null) startActivityForResult(intent, ImageCaptureManager.REQUEST_TAKE_PHOTO); else android.widget.Toast.makeText(getActivity(), \"No Application exists for camera!\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8258/buggy-version/filepicker.src.main.java.droidninja.filepicker.fragments.PhotoPickerFragment.java", "BodyUseAPI": ["droidninja.filepicker.fragments.PhotoPickerFragment.2.startActivityForResult(android.content.Intent,ImageCaptureManager.REQUEST_TAKE_PHOTO)"], "Fixed commit": "d665780b6a493929f6eba484302e8f267afa5c10", "Url": "https://api.github.com/repos/DroidNinja/Android-FilePicker", "Date": "2016-08-10T10:23:06Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (characterString.equals(GncXmlHelper.KEY_NOTES)) { mIsNote = true; }else if (characterString.equals(GncXmlHelper.KEY_DEFAULT_TRANSFER_ACCOUNT)) { mInDefaultTransferAccount = true; }else if (characterString.equals(GncXmlHelper.KEY_EXPORTED)) { mInExported = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5566/buggy-version/app.src.org.gnucash.android.importer.GncXmlHandler.java", "BodyUseAPI": ["java.lang.String.equals(GncXmlHelper.KEY_DEFAULT_TRANSFER_ACCOUNT)", "java.lang.String.equals(GncXmlHelper.KEY_EXPORTED)"], "Fixed commit": "b6dcf5d082dbcb6f70a2b4037af7af1bb507297f", "Url": "https://api.github.com/repos/codinguser/gnucash-android", "Date": "2014-09-06T02:57:48Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (ruleKey != null) { org.sonar.api.issue.Issue issue = issuable.newIssueBuilder().ruleKey(ruleKey).line(checkMessage.getLine()).message(checkMessage.formatDefaultMessage()).build(); issuable.addIssue(issue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/576/buggy-version/sonar-java-plugin.src.main.java.org.sonar.plugins.java.bridges.ChecksBridge.java", "BodyUseAPI": ["issuable.newIssueBuilder().ruleKey(org.sonar.api.rule.RuleKey)", "issuable.newIssueBuilder().ruleKey(ruleKey).line(checkMessage.getLine()).message(checkMessage.formatDefaultMessage())", "issuable.newIssueBuilder().ruleKey(ruleKey).line(checkMessage.getLine())", "issuable.newIssueBuilder().ruleKey(ruleKey).line(checkMessage.getLine()).message(checkMessage.formatDefaultMessage()).build()"], "Fixed commit": "0e7bea6f1a0951023c975c7be355f4df5505a8b3", "Url": "https://api.github.com/repos/SonarSource/sonar-java", "Date": "2014-12-08T15:17:43Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sub.slot.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parts[j].charAt(0)) == 'L') tmp = i + 10; else tmp = i;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5559/buggy-version/VITacademics.src.main.java.com.collegecode.objects.TimeTableFiles.TimeTable.java", "BodyUseAPI": [], "Fixed commit": "cc0c5eeff7cf123120cc4f77eb2039f98332ad56", "Url": "https://api.github.com/repos/sreeram-boyapati/VITacademics-for-Android", "Date": "2014-04-28T09:47:12Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (handler != null) { handler.onCall(call); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8001/buggy-version/lib.src.main.java.com.futureagent.lib.network.HttpManager.java", "BodyUseAPI": ["com.futureagent.lib.network.handler.IGsonHttpResonsedHandler.onCall(retrofit2.Call<okhttp3.ResponseBody>)"], "Fixed commit": "87d8bc42d5b83990426428ad7eee838c6810d071", "Url": "https://api.github.com/repos/yuhai0011/FutureAgentFramework", "Date": "2017-12-22T09:49:35Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (handler != null) { handler.onCall(call); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8001/buggy-version/lib.src.main.java.com.futureagent.lib.network.HttpManager.java", "BodyUseAPI": ["com.futureagent.lib.network.handler.IGsonHttpResonsedHandler.onCall(retrofit2.Call<okhttp3.ResponseBody>)"], "Fixed commit": "87d8bc42d5b83990426428ad7eee838c6810d071", "Url": "https://api.github.com/repos/yuhai0011/FutureAgentFramework", "Date": "2017-12-22T09:49:35Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (handler != null) { handler.onCall(call); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8001/buggy-version/lib.src.main.java.com.futureagent.lib.network.HttpManager.java", "BodyUseAPI": ["com.futureagent.lib.network.handler.IGsonHttpResonsedHandler.onCall(retrofit2.Call<okhttp3.ResponseBody>)"], "Fixed commit": "87d8bc42d5b83990426428ad7eee838c6810d071", "Url": "https://api.github.com/repos/yuhai0011/FutureAgentFramework", "Date": "2017-12-22T09:49:35Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.nfc.tech.Ndef.get(android.nfc.Tag)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ndefObject == null) { finishWithErrorToast(\"nfc.read.msg.malformed\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6764/buggy-version/app.src.org.commcare.android.nfc.NfcReadActivity.java", "BodyUseAPI": [], "Fixed commit": "aae872bbe5644b3d158b6054972e5f029707a50f", "Url": "https://api.github.com/repos/dimagi/commcare-android", "Date": "2017-10-12T22:19:13Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gamepad2.right_stick_y) < 0) { armLiftPosition = (armLiftPosition) * (-1); }else if ((gamepad2.right_stick_y) > 0) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/454/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.TeleopDrive.java", "BodyUseAPI": [], "Fixed commit": "67d2f5b0ff4d6fe0889273da4f1ea5c0c4d1d531", "Url": "https://api.github.com/repos/pmohabansi/6225-SynergyNovi", "Date": "2017-12-07T02:00:24Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((null != file) && (!(file.isEmpty()))) { com.yicheng.util.QiniuUtil.uploadImage(cloth.getImagePath().substring(QiniuUtil.QINIU_BASE_URL.length(), cloth.getImagePath().length()), file.getBytes()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4761/buggy-version/yicheng.src.com.yicheng.controller.ProofingController.java", "BodyUseAPI": ["com.yicheng.util.QiniuUtil.uploadImage(cloth.getImagePath().substring(QiniuUtil.QINIU_BASE_URL.length(), cloth.getImagePath().length()),file.getBytes())", "org.springframework.web.multipart.MultipartFile.getBytes()"], "Fixed commit": "72ec51966a90d11d060e102fce020dbbc9f1aad1", "Url": "https://api.github.com/repos/jcw1993/yicheng", "Date": "2015-11-08T12:06:41Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((null != file) && (!(file.isEmpty()))) { java.lang.String originalFileName = file.getOriginalFilename(); java.util.UUID uuid = java.util.UUID.randomUUID(); java.lang.String saveName = (uuid.toString()) + (com.yicheng.util.Utils.getFileExtensionWithDot(originalFileName)); cloth = new com.yicheng.pojo.Cloth(type, name, client, remark, ((com.yicheng.util.QiniuUtil.QINIU_BASE_URL) + (java.lang.String.format(QiniuUtil.QINIU_PIC_KEY_FORMAT, saveName))), new java.util.Date()); }else { cloth = new com.yicheng.pojo.Cloth(type, name, client, remark, null, new java.util.Date()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4761/buggy-version/yicheng.src.com.yicheng.controller.ProofingController.java", "BodyUseAPI": ["org.springframework.web.multipart.MultipartFile.getOriginalFilename()"], "Fixed commit": "72ec51966a90d11d060e102fce020dbbc9f1aad1", "Url": "https://api.github.com/repos/jcw1993/yicheng", "Date": "2015-11-08T12:06:41Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) { android.util.Log.d(\"TodoActivity.onCreate\", \"Info: Application State change detected, current is: onCreate!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8070/buggy-version/app.src.main.java.com.example.todo.TodoActivity.java", "BodyUseAPI": [], "Fixed commit": "cfebf3e18cdc1726a6071177f575d2cf96e06f1e", "Url": "https://api.github.com/repos/LBU-Levi/Lab1", "Date": "2017-11-22T20:00:09Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lists_server == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7906/buggy-version/src.de.azapps.mirakel.sync.SyncAdapter.java", "BodyUseAPI": [], "Fixed commit": "e6e71d35982cf1a9ae13106477b04320ff434d2f", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2013-05-20T18:22:21Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["register.dao.UserInfoDAO.getSidByWebsiteid(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (sid != null) { imageList = userInfoDao.getUserImages(sid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7692/buggy-version/src.controller.customer.WebsiteController.java", "BodyUseAPI": ["register.dao.UserInfoDAO.getUserImages(java.lang.Integer)"], "Fixed commit": "06a0ecd10fb7c5e41f051f76fa9f4ed0e9e42ada", "Url": "https://api.github.com/repos/STUKA-TEAM/ZhongheWeiHelperR2", "Date": "2014-07-02T15:22:02Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(v instanceof android.widget.AdapterView<?>)) { v.setOnClickListener(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2572/buggy-version/src.z.hol.loadingstate.LoadingStateLayout.java", "BodyUseAPI": ["android.view.View.setOnClickListener(<nulltype>)"], "Fixed commit": "094a80c35cc8b27dfd4c1f1e1f4824e14d5839c9", "Url": "https://api.github.com/repos/holmeszyx/LoadingStateLayout", "Date": "2014-08-01T08:24:41Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mIsNoDataViewInInit) && (!(isInEditMode()))) { throw new java.lang.IllegalArgumentException((\"Data view is \" + (getDataView()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2572/buggy-version/src.z.hol.loadingstate.view.SimpleAdapterViewWithLoadingState.java", "BodyUseAPI": [], "Fixed commit": "094a80c35cc8b27dfd4c1f1e1f4824e14d5839c9", "Url": "https://api.github.com/repos/holmeszyx/LoadingStateLayout", "Date": "2014-08-01T08:24:41Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(tilesetRootDir.getName().endsWith(\".tif\"))) && (!(tilesetRootDir.getName().endsWith(\".ptif\")))) { tilesetRootDir = new java.io.File(((tilesetRootDir.getAbsolutePath()) + \".tif\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6466/buggy-version/src.main.java.at.ait.dme.magicktiler.ptif.PTIFConverter.java", "BodyUseAPI": ["at.ait.dme.magicktiler.ptif.PTIFConverter.getAbsolutePath()"], "Fixed commit": "ef508c83d990bb70c7be4102f90e8cc44104edcf", "Url": "https://api.github.com/repos/magicktiler/magicktiler", "Date": "2011-09-23T19:04:20Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((findById(id)) == null) { throw new com.nanuvem.lom.api.MetadataException((\"Unknown id for Entity: \" + id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5807/buggy-version/src.main.java.com.nanuvem.lom.kernel.dao.MemoryEntityDao.java", "BodyUseAPI": [], "Fixed commit": "50f155d2d40c3ff19a159cf9998aebb992772d26", "Url": "https://api.github.com/repos/rodrigovilar/LOM-MemoryDAO", "Date": "2014-11-24T14:11:38Z"},
{"Line": "=>1688", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.length()) == 4) { if ((s.equals(\"12pm\")) || (s.equals(\"12PM\"))) { time = \"1200\"; }else { java.lang.String strDigit = s.substring(0, 2); int value = java.lang.Integer.parseInt(strDigit); value = value + 12; time = (\"\" + value) + \"00\"; } }else if ((s.length()) > 4) { java.lang.String charFirst = s.substring(0, 1); if (charFirst.equals(\"1\")) { java.lang.String firstPart = s.substring(0, 2); java.lang.String secondPart = s.substring(((s.length()) - 4), ((s.length()) - 2)); int value = java.lang.Integer.parseInt(firstPart); value = value + 12; time = (\"\" + value) + secondPart; }else { java.lang.String partFirst = s.substring(0, 1); java.lang.String partSecond = s.substring(((s.length()) - 4), ((s.length()) - 2)); int value = java.lang.Integer.parseInt(partFirst); value = value + 12; time = (\"\" + value) + partSecond; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6518/buggy-version/src.taskbuddy.parser.Parser.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.equals(java.lang.String)", "java.lang.String.length()", "java.lang.String.length()", "java.lang.String.length()", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "6b652bcb86b9533aa92b71e07a8caef3d3511f87", "Url": "https://api.github.com/repos/cs2103aug2014-f11-3j/main", "Date": "2014-10-30T15:44:32Z"},
{"Line": "=>1658", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.equals(\"12am\")) || (s.equals(\"12AM\"))) { time = \"0000\"; }else { time = (s.substring(0, 2)) + \"00\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6518/buggy-version/src.taskbuddy.parser.Parser.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "6b652bcb86b9533aa92b71e07a8caef3d3511f87", "Url": "https://api.github.com/repos/cs2103aug2014-f11-3j/main", "Date": "2014-10-30T15:44:32Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (pair != null) { request.addQuerystringParameter(pair.getKey(), pair.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4676/buggy-version/src.br.com.developer.redu.http.ScribeHttpClient.java", "BodyUseAPI": ["org.scribe.model.OAuthRequest.addQuerystringParameter(java.lang.String,java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()"], "Fixed commit": "fdd77b149c8bdf09447f28b8eae5183a0ab43369", "Url": "https://api.github.com/repos/redu/redu-android", "Date": "2013-02-03T14:04:41Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.getName().contains(\".\"))) { format = \".ttl\"; file = new java.io.File(((file.toString()) + format)); java.lang.System.out.println(file); }else { format = file.getName().substring(file.getName().lastIndexOf(\".\"), file.getName().length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4512/buggy-version/limes-core.src.main.java.org.aksw.limes.core.gui.controller.ResultController.java", "BodyUseAPI": ["java.lang.String.length()", "java.io.File.getName()", "java.io.File.getName()", "java.io.File.toString()", "java.lang.String.lastIndexOf(java.lang.String)", "java.io.File.getName()", "java.lang.String.substring(int,int)"], "Fixed commit": "c1bdebc31b6b3f39aed1f61811291513aa09438c", "Url": "https://api.github.com/repos/dice-group/LIMES", "Date": "2017-04-26T13:09:30Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.matches(\"[a-zA-Z0-9._-]+\\\\.(jpg|png|gif|svg)$\")) { images.add(((contextPath + staticDir) + file)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6041/buggy-version/src.main.java.com.willoem.springblog.controllers.MediaController.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "1f32edb0c4a488d4f6fbc1478e94a34fa7c2ee49", "Url": "https://api.github.com/repos/willOEM/spring-blog", "Date": "2013-11-09T03:19:35Z"},
{"Line": "=>503", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getCurrentRoom().getMonster()) == null) return null; else return core_engine.RenderEngine.renderBattleView(player, ((core_engine.Monster) (player.getCurrentRoom().getMonster())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4338/buggy-version/17_G12.src.core_engine.ZuulGame.java", "BodyUseAPI": ["core_engine.Player.getCurrentRoom()", "core_engine.RenderEngine.renderBattleView(core_engine.Player,((core_engine.Monster) (player.getCurrentRoom().getMonster())))", "player.getCurrentRoom().getMonster()"], "Fixed commit": "80a9b97101ddb5094a18e779c8fc235cdf75eafd", "Url": "https://api.github.com/repos/StephanieNigth/17G12SemesterProject", "Date": "2017-11-30T11:40:35Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (putKey == null) { if (!(map.containsKey(key))) { return null; }else { putKey = key; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5710/buggy-version/src.main.java.freemarker.template.SimpleHash.java", "BodyUseAPI": [], "Fixed commit": "9b40206e2a22cd3100cf6fc797d8f465188b9317", "Url": "https://api.github.com/repos/freemarker/freemarker", "Date": "2014-02-21T21:44:44Z"},
{"Line": "=>719", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tessoft.nearhere.taxi.TaxiController.selectUser(post.getUser())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((com.dy.common.Util.getDouble(writer.getAppVersion())) > 1.34) { sqlSession.insert(\"com.tessoft.nearhere.taxi.insertPostReadHistory\", hash); sendPushMessage(writer, \"inquiryUser\", ((user.getUserName()) + \"\ub2d8\uc774 \uace0\uac1d\ub2d8\uc758 \ud569\uc2b9\ub0b4\uc5ed\uc744 \uc870\ud68c\ud588\uc2b5\ub2c8\ub2e4.\"), user.getUserID(), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5458/buggy-version/randomMsgServer.src.main.java.com.tessoft.nearhere.taxi.TaxiController.java", "BodyUseAPI": ["com.tessoft.nearhere.taxi.TaxiController.sendPushMessage(com.nearhere.domain.User,java.lang.String,((user.getUserName()) + \"\ub2d8\uc774 \uace0\uac1d\ub2d8\uc758 \ud569\uc2b9\ub0b4\uc5ed\uc744 \uc870\ud68c\ud588\uc2b5\ub2c8\ub2e4.\"),user.getUserID(),boolean)"], "Fixed commit": "86843ae980b429b6362b7abb6394f638f7b52fec", "Url": "https://api.github.com/repos/kim2509/publicChatServer", "Date": "2015-03-27T14:02:22Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((required) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4515/buggy-version/admin.broadleaf-open-admin-platform.src.main.java.org.broadleafcommerce.openadmin.dto.BasicFieldMetadata.java", "BodyUseAPI": [], "Fixed commit": "816561156067146ee3a3079e969818ec130ff75d", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2014-09-29T06:48:53Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.curator.framework.CuratorFrameworkFactory.newClient(oldKafkaSpoutOffsetQuery.getZkServers(),int,int,org.apache.curator.retry.RetryOneTime)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((curatorFramework.checkExists().forPath(zkPath)) == null) { java.lang.System.out.printf(\"--zk-node '%s' is not exists.%n\", zkPath); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4346/buggy-version/external.storm-kafka-monitor.src.main.java.org.apache.storm.kafka.monitor.KafkaOffsetLagUtil.java", "BodyUseAPI": ["java.io.PrintStream.printf(java.lang.String,java.lang.String)"], "Fixed commit": "e61e7738328913ec429742cd2b3cb22a39eb263f", "Url": "https://api.github.com/repos/vesense/storm", "Date": "2016-08-31T15:11:28Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((zkNode == null) || ((zkNode.length()) <= 1)) { org.apache.storm.kafka.monitor.KafkaOffsetLagUtil.printUsageAndExit(options, ((((org.apache.storm.kafka.monitor.KafkaOffsetLagUtil.OPTION_ZK_COMMITTED_NODE_LONG) + \" '\") + zkNode) + \"' is invalid.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4346/buggy-version/external.storm-kafka-monitor.src.main.java.org.apache.storm.kafka.monitor.KafkaOffsetLagUtil.java", "BodyUseAPI": ["org.apache.storm.kafka.monitor.KafkaOffsetLagUtil.printUsageAndExit(org.apache.commons.cli.Options,java.lang.String)"], "Fixed commit": "e61e7738328913ec429742cd2b3cb22a39eb263f", "Url": "https://api.github.com/repos/vesense/storm", "Date": "2016-08-31T15:11:28Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((pathPrediction.radiusOfCurve.longValue()) >= 32767) || ((pathPrediction.radiusOfCurve.longValue()) < (-32767))) { pp.radiusOfCurve = java.math.BigDecimal.ZERO.setScale(1); }else { pp.radiusOfCurve = java.math.BigDecimal.valueOf(pathPrediction.radiusOfCurve.longValue(), 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2932/buggy-version/jpo-ode-plugins.src.main.java.us.dot.its.jpo.ode.plugin.j2735.oss.OssPathPrediction.java", "BodyUseAPI": ["pathPrediction.radiusOfCurve.longValue()", "java.math.BigDecimal.valueOf(pathPrediction.radiusOfCurve.longValue(),int)"], "Fixed commit": "81fddb2d8bffc1616b7ac54ae36ceff1d5700ccf", "Url": "https://api.github.com/repos/mvs5465/jpo-ode", "Date": "2016-12-30T17:57:08Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((pathPrediction.confidence.longValue()) < 0) || ((pathPrediction.confidence.longValue()) > 200)) { throw new java.lang.IllegalArgumentException(\"Confidence value out of bounds [0..200]\"); }else { pp.confidence = java.math.BigDecimal.valueOf(((pathPrediction.confidence.longValue()) * 5), 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2932/buggy-version/jpo-ode-plugins.src.main.java.us.dot.its.jpo.ode.plugin.j2735.oss.OssPathPrediction.java", "BodyUseAPI": ["java.math.BigDecimal.valueOf(((pathPrediction.confidence.longValue()) * 5),int)", "pathPrediction.confidence.longValue()"], "Fixed commit": "81fddb2d8bffc1616b7ac54ae36ceff1d5700ccf", "Url": "https://api.github.com/repos/mvs5465/jpo-ode", "Date": "2016-12-30T17:57:08Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) != null) { timer.cancel(); timer.purge(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8441/buggy-version/components.event-receiver.event-input-adapters.org.wso2.carbon.event.input.adapter.email.src.main.java.org.wso2.carbon.event.input.adapter.email.EmailEventAdapter.java", "BodyUseAPI": [], "Fixed commit": "f447ed197ab6ddaec60575379e58a7f23c0d98f5", "Url": "https://api.github.com/repos/keizer619/carbon-analytics-common", "Date": "2015-05-19T13:17:34Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nekofar.milad.binamcast.event.DownloadCastEvent.getCast()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (cast.getPath().equals(\"\")) { mRealm.beginTransaction(); cast.setPath(filePath); mRealm.commitTransaction(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7009/buggy-version/app.src.main.java.com.nekofar.milad.binamcast.activity.MainActivity.java", "BodyUseAPI": ["com.nekofar.milad.binamcast.model.Cast.setPath(java.lang.String)"], "Fixed commit": "e37a317cc103fe09d5431cb2f1c91bcf7c3a6cb6", "Url": "https://api.github.com/repos/nekofar/binamcast", "Date": "2014-12-20T18:40:51Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.nanoTime()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((data.length()) >= (java.lang.String.valueOf(time).length())) { chunk = data.substring(0, ((data.length()) - (java.lang.String.valueOf(time).length()))); }else { chunk = data; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6919/buggy-version/src.main.java.org.streaming.perfomance.PerfDataStream.java", "BodyUseAPI": ["java.lang.String.valueOf(long)", "java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.length()"], "Fixed commit": "08eaf486d9b76dec223ee42aa89630f7c3d44b2b", "Url": "https://api.github.com/repos/syodage/streaming-spring", "Date": "2016-04-04T03:19:06Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.equals(\"Artwork\")) { artworks.add(new Artwork(title, description, null, null, java.lang.Integer.parseInt(yearOfCreation), java.lang.Integer.parseInt(reservePrice), java.lang.Integer.parseInt(noOfBids), java.lang.Integer.parseInt(width), java.lang.Integer.parseInt(height))); }else { artworks.add(new Sculpture(title, description, null, null, java.lang.Integer.parseInt(yearOfCreation), java.lang.Integer.parseInt(reservePrice), java.lang.Integer.parseInt(noOfBids), java.lang.Integer.parseInt(width), java.lang.Integer.parseInt(height), java.lang.Integer.parseInt(depth), material)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8811/buggy-version/ArtworkManagement.java", "BodyUseAPI": [], "Fixed commit": "7be4215e37249aa309cb3afc3f39ac69c979233c", "Url": "https://api.github.com/repos/SwanseaA3/artatawe", "Date": "2017-12-07T22:52:32Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.equals(\"Sculpture\")) { material = data[10]; depth = data[11]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8811/buggy-version/ArtworkManagement.java", "BodyUseAPI": [], "Fixed commit": "7be4215e37249aa309cb3afc3f39ac69c979233c", "Url": "https://api.github.com/repos/SwanseaA3/artatawe", "Date": "2017-12-07T22:52:32Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pendingTaskSnapshot.isEmpty()) { pendingTaskLister.completed(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5820/buggy-version/yar-guice.src.main.java.org.javabits.yar.guice.AbstractExecutionStrategy.java", "BodyUseAPI": [], "Fixed commit": "97fbc4925de8ff692ca9d5b54371c87211b78d19", "Url": "https://api.github.com/repos/javabits/yar", "Date": "2013-10-24T15:58:46Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(file.exists())) { try { file.getParentFile().mkdirs(); file.createNewFile(); } catch (java.lang.Exception exception) { exception.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1441/buggy-version/DietTracker.src.me.ci.ResourceLoader.java", "BodyUseAPI": [], "Fixed commit": "6338a9a0dde04f88529f5f1c6add52a417363860", "Url": "https://api.github.com/repos/TheDudeFromCI/DietTracker", "Date": "2015-01-06T08:13:59Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dbObject.containsField(org.atlasapi.persistence.media.entity.PriorityTranslator.ITEM_PRIORITY_KEY)) { score = com.metabroadcast.common.persistence.translator.TranslatorUtils.toDouble(dbObject, org.atlasapi.persistence.media.entity.PriorityTranslator.ITEM_PRIORITY_KEY); }else { if (dbObject.containsField(org.atlasapi.persistence.media.entity.PriorityTranslator.SCORE_KEY)) { score = com.metabroadcast.common.persistence.translator.TranslatorUtils.toDouble(dbObject, org.atlasapi.persistence.media.entity.PriorityTranslator.SCORE_KEY); } if (dbObject.containsField(org.atlasapi.persistence.media.entity.PriorityTranslator.REASONS_KEY)) { priorityScoreReasons = com.metabroadcast.common.persistence.translator.TranslatorUtils.toList(dbObject, org.atlasapi.persistence.media.entity.PriorityTranslator.REASONS_KEY); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5790/buggy-version/src.main.java.org.atlasapi.persistence.media.entity.PriorityTranslator.java", "BodyUseAPI": ["com.mongodb.DBObject.containsField(java.lang.String)", "com.metabroadcast.common.persistence.translator.TranslatorUtils.toDouble(com.mongodb.DBObject,java.lang.String)", "com.metabroadcast.common.persistence.translator.TranslatorUtils.toDouble(com.mongodb.DBObject,java.lang.String)", "com.mongodb.DBObject.containsField(java.lang.String)", "com.metabroadcast.common.persistence.translator.TranslatorUtils.toList(com.mongodb.DBObject,java.lang.String)"], "Fixed commit": "40c83de31731b071cc94eac592a207ca309e8033", "Url": "https://api.github.com/repos/atlasapi/atlas-persistence", "Date": "2015-08-26T09:11:17Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((updateController) != null) updateController.destroy();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4865/buggy-version/dristhi-app.src.main.java.org.ei.drishti.view.activity.SecuredWebActivity.java", "BodyUseAPI": [], "Fixed commit": "397534e2a4a9a0ef66b7dfc95c6340063d34961a", "Url": "https://api.github.com/repos/modilabs/drishti-app", "Date": "2012-11-27T05:32:29Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.tx.OTransactionOptimistic.getInvolvedIndexes()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (involvedIndexes != null) { for (java.lang.String indexName : involvedIndexes) { final com.orientechnologies.orient.core.index.OIndex<?> index = database.getMetadata().getIndexManager().getIndexInternal(indexName); indexes.put(indexName, index); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2346/buggy-version/core.src.main.java.com.orientechnologies.orient.core.tx.OTransactionOptimistic.java", "BodyUseAPI": [], "Fixed commit": "cfda02860039b6a4694857ea7aae6f471c2548e8", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2013-09-20T05:49:43Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { episodeTextScrollview.setNestedScrollingEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3976/buggy-version/app.src.main.java.de.aaronoe.cinematic.model.TvShow.EpisodeAdapter.java", "BodyUseAPI": [], "Fixed commit": "572f6717216815612d57b2c73d4c2d5a4189d400", "Url": "https://api.github.com/repos/aaronoe/Cinematic", "Date": "2017-07-19T18:28:07Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.fau.cs.mad.fablab.rest.server.core.openerp.ProductClient.searchForProductsById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (product == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7012/buggy-version/src.main.java.de.fau.cs.mad.fablab.rest.server.core.openerp.OpenErpClient.java", "BodyUseAPI": [], "Fixed commit": "27e8fd0f88cb301f563b7d0b9576af8af8d94f85", "Url": "https://api.github.com/repos/FAU-Inf2/fablab-server", "Date": "2015-08-03T19:42:21Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((modificationType.equals(\"FR2P_LT\")) || (modificationType.equals(\"FR2P_LT_withCharge\"))) || (modificationType.equals(\"FR2P_NC\"))) { reservationCharges[4] = (compute.currency()) + \" 0.00\"; }else { reservationCharges[4] = step3.balancePayable_withPrepay().getText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3496/buggy-version/src.bookingEngine.Page3_payInfo.java", "BodyUseAPI": [], "Fixed commit": "6cf2fda968f67816424574b72b2d85a8774ba1b1", "Url": "https://api.github.com/repos/jasonogayon/DWH", "Date": "2015-09-16T04:33:20Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.checkIfSubspaceHasMyID(subInfo.getNodesOfSubspace()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6784/buggy-version/src.edu.umass.cs.contextservice.database.HyperspaceMySQLDB.java", "BodyUseAPI": [], "Fixed commit": "be247167a527cd9e2a1db51fcd6a7a1ff3e6a8e5", "Url": "https://api.github.com/repos/ayadavumass/CNS", "Date": "2016-03-07T05:02:00Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getParcelableArrayList(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (artistTracks != null) { renderList(artistTracks); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7299/buggy-version/app.src.main.java.com.example.dragoonart.spotifystreamer.ArtistTracksActivityFragment.java", "BodyUseAPI": ["com.example.dragoonart.spotifystreamer.ArtistTracksActivityFragment.renderList(java.util.ArrayList<com.example.dragoonart.spotifystreamer.beans.ArtistTrack>)"], "Fixed commit": "ba6645592f72e43309029592ffc8c374b9e12810", "Url": "https://api.github.com/repos/DragooNArT/Spotify_Streamer", "Date": "2015-08-23T17:23:53Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.web.client.RestTemplate.exchange(propertyReader.getBeneficiaryListRequestUrl(),HttpMethod.POST,org.springframework.http.HttpEntity,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((response.getBody().getRecords()) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8425/buggy-version/mcts-beneficiary-sync.src.main.java.org.motechproject.mcts.integration.service.MCTSHttpClientService.java", "BodyUseAPI": [], "Fixed commit": "1b643d01e76cad44263b34ad4f4e2a2d7d86aba5", "Url": "https://api.github.com/repos/motech/mcts-integration", "Date": "2014-07-15T10:42:27Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((map == null) || (map.isEmpty())) { return text; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3801/buggy-version/src.main.java.org.costa.DefaultStrategy.java", "BodyUseAPI": [], "Fixed commit": "7b2bb902878256821313f0de3d98e5c9113163da", "Url": "https://api.github.com/repos/w1z4rd/replace-placeholders", "Date": "2015-09-25T15:32:49Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((text == null) || (text.isEmpty())) { return text; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3801/buggy-version/src.main.java.org.costa.DefaultStrategy.java", "BodyUseAPI": [], "Fixed commit": "7b2bb902878256821313f0de3d98e5c9113163da", "Url": "https://api.github.com/repos/w1z4rd/replace-placeholders", "Date": "2015-09-25T15:32:49Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (input.equals(\"-1\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/9223/buggy-version/src.com.company.Main.java", "BodyUseAPI": [], "Fixed commit": "0334aa3a494e25ce6c9ac6b59251edceadae6d6e", "Url": "https://api.github.com/repos/olexandryermilov/ClientCalculator", "Date": "2017-11-25T16:40:10Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ednovo.gooru.client.uc.BrowserAgent.isDevice()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (device) { navgationTocContainer.getElement().removeAttribute(\"style\"); new org.ednovo.gooru.client.mvp.play.collection.preview.home.ResourceCurosal(nextButton, previousButton, navgationTocContainer, (resourcesSize + 2), 100, carouselContainer); }else { if (resourcesSize > 7) { navgationTocContainer.getElement().removeAttribute(\"style\"); new org.ednovo.gooru.client.mvp.play.collection.preview.home.ResourceCurosal(nextButton, previousButton, navgationTocContainer, (resourcesSize + 2), 100, carouselContainer); }else { nextButton.getElement().getStyle().setVisibility(Visibility.HIDDEN); previousButton.getElement().getStyle().setVisibility(Visibility.HIDDEN); navgationTocContainer.getElement().setAttribute(\"style\", ((\"width:\" + ((resourcesSize + 2) * 100)) + \"px !important;\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2865/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.play.collection.toc.CollectionPlayerTocView.java", "BodyUseAPI": [], "Fixed commit": "dccf1e8602f808dd5b1e4c06ce1498219aea87c2", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-01-22T04:41:00Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (preferences.getBoolean(Preferences.PREF_SILENT_MODE, Preferences.DEFAULT_SILENT_MODE)) { if ((android.support.v4.content.ContextCompat.checkSelfPermission(this, android.Manifest.permission.MODIFY_AUDIO_SETTINGS)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { if (!(android.support.v4.app.ActivityCompat.shouldShowRequestPermissionRationale(this, android.Manifest.permission.MODIFY_AUDIO_SETTINGS))) { android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ android.Manifest.permission.MODIFY_AUDIO_SETTINGS }, eu.gyurasz.bible.gui.EAppCompatActivity.REQUEST_PERM_FOR_AUDIO_MANAGER); } }else { hasPermForAudioManagement = true; audioSilent(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6234/buggy-version/szentiras.src.main.java.eu.gyurasz.bible.gui.EAppCompatActivity.java", "BodyUseAPI": [], "Fixed commit": "f7b00573c4ab3a0e750997d249a027e65b96e7cf", "Url": "https://api.github.com/repos/Sektorka/Bible", "Date": "2017-09-25T14:44:10Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.matsim.contrib.dvrp.passenger.PassengerEngine.createRequest(org.matsim.contrib.dvrp.passenger.MobsimPassengerAgent,org.matsim.api.core.v01.Id<org.matsim.api.core.v01.network.Link>,org.matsim.api.core.v01.Id<org.matsim.api.core.v01.network.Link>,double,double)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(request.isRejected())) { advanceRequestStorage.storeAdvanceRequest(request); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/9250/buggy-version/contribs.dvrp.src.main.java.org.matsim.contrib.dvrp.passenger.PassengerEngine.java", "BodyUseAPI": ["org.matsim.contrib.dvrp.passenger.AdvanceRequestStorage.storeAdvanceRequest(org.matsim.contrib.dvrp.passenger.PassengerRequest)"], "Fixed commit": "e07fc6866de83c87ad340ed4f650fb540db2ea62", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2015-12-18T22:06:51Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["playground.jbischoff.taxibus.algorithm.passenger.TaxibusPassengerEngine.createRequest(org.matsim.core.mobsim.framework.MobsimPassengerAgent,org.matsim.api.core.v01.Id<org.matsim.api.core.v01.network.Link>,org.matsim.api.core.v01.Id<org.matsim.api.core.v01.network.Link>,double,double)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(request.isRejected())) { advanceRequestStorage.storeAdvanceRequest(request); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/9250/buggy-version/playgrounds.jbischoff.src.main.java.playground.jbischoff.taxibus.algorithm.passenger.TaxibusPassengerEngine.java", "BodyUseAPI": ["playground.jbischoff.taxibus.algorithm.passenger.TaxibusPassengerEngine.storeAdvanceRequest(org.matsim.contrib.dvrp.passenger.PassengerRequest)"], "Fixed commit": "e07fc6866de83c87ad340ed4f650fb540db2ea62", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2015-12-18T22:06:51Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.robopupu.api.mvp.PluginCompatActivity.getState().isStarted()) { final android.support.v4.app.FragmentTransaction transaction = manager.beginTransaction(); transaction.remove(fragment); transaction.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5632/buggy-version/robopupu-api.src.main.java.com.robopupu.api.mvp.PluginCompatActivity.java", "BodyUseAPI": [], "Fixed commit": "0f829e536186bda44f95453efd1ed5deeafb978d", "Url": "https://api.github.com/repos/Fuusio/Robopupu", "Date": "2016-05-11T17:25:14Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cz.cvut.kbss.jopa.spring.transaction.JopaTransactionManager.LOG.isTraceEnabled()) { cz.cvut.kbss.jopa.spring.transaction.JopaTransactionManager.LOG.trace(\"Closing transactional EntityManager.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7500/buggy-version/src.main.java.cz.cvut.kbss.jopa.spring.transaction.JopaTransactionManager.java", "BodyUseAPI": ["org.slf4j.Logger.trace(java.lang.String)"], "Fixed commit": "90e9b01f52d3db62131b1e389ca5f3be248dfc83", "Url": "https://api.github.com/repos/ledsoft/jopa-spring-transaction", "Date": "2017-07-05T13:40:34Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (current_time > 37300) { java.lang.System.out.println(\"test\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2856/buggy-version/src.main.java.org.datavyu.controllers.ExportDatabaseFileC.java", "BodyUseAPI": [], "Fixed commit": "625e7cca4b34064df08490401279aa3dc4a6a272", "Url": "https://api.github.com/repos/databrary/datavyu", "Date": "2015-11-04T04:40:15Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((expStack.size()) > 0) && (opsStack.isEmpty())) { throw new com.jayway.jsonpath.InvalidPathException((\"Expected logical operator (&&, ||) to follow expression \" + (expStack.peek().toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2545/buggy-version/json-path.src.main.java.com.jayway.jsonpath.internal.filter.FilterCompiler.java", "BodyUseAPI": ["expStack.peek().toString()", "java.util.Stack<com.jayway.jsonpath.internal.filter.ExpressionNode>.peek()"], "Fixed commit": "70730a77354bef51f722da75211f042858dc1afa", "Url": "https://api.github.com/repos/zline/JsonPath", "Date": "2015-12-11T18:28:30Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (m_viewModel.getCurrentTab().equals(StringUtility.TAB_GUIDANCE)) { m_viewModel.notifyGuidanceChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3121/buggy-version/src.com.athena.asm.HomeActivity.java", "BodyUseAPI": ["com.athena.asm.viewmodel.HomeViewModel.notifyGuidanceChanged()"], "Fixed commit": "bb8a992f2d169307e28b9259dc992b55a94563fc", "Url": "https://api.github.com/repos/yfli/aSM-clone", "Date": "2012-11-16T09:18:32Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nd4j.linalg.api.ndarray.INDArray.linearView()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (condition.apply(linear.getFloat(i))) { linear.putScalar(i, function.apply(linear.getFloat(i)).floatValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/593/buggy-version/nd4j-api.src.main.java.org.nd4j.linalg.indexing.BooleanIndexing.java", "BodyUseAPI": ["org.nd4j.linalg.api.ndarray.INDArray.getFloat(int)", "org.nd4j.linalg.api.ndarray.INDArray.putScalar(int,function.apply(linear.getFloat(i)).floatValue())", "com.google.common.base.Function<java.lang.Number, java.lang.Number>.apply(linear.getFloat(i))", "function.apply(linear.getFloat(i)).floatValue()"], "Fixed commit": "19a2ad19fd11cc46ce447b709ec0dcb557bcedb9", "Url": "https://api.github.com/repos/SkymindIO/nd4j", "Date": "2014-10-13T19:19:31Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(graph.dependsOn(id, _current))) { graph.addDependency(id, _current); }else { com.threerings.ClydeLog.log.info(\"Didn't add dependency: already dependended.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4364/buggy-version/core.src.main.java.com.threerings.config.tools.ConfigFlattener.java", "BodyUseAPI": ["com.samskivert.util.DependencyGraph<com.threerings.config.util.ConfigId>.addDependency(com.threerings.config.util.ConfigId,com.threerings.config.util.ConfigId)"], "Fixed commit": "557c7a8bf545734f0941bd785da8a2fb3a5fef9b", "Url": "https://api.github.com/repos/threerings/clyde", "Date": "2015-02-11T00:59:55Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (equals(edge)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/254/buggy-version/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java", "BodyUseAPI": [], "Fixed commit": "81742d1982ee7bc59009be17341fa4e99d208e41", "Url": "https://api.github.com/repos/jmbe/combine-taglib", "Date": "2013-11-25T14:57:46Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((middleChar) == 'T') return 'A';", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8716/buggy-version/src.coPhylog.BitHolder.java", "BodyUseAPI": [], "Fixed commit": "333335d5ff7569c724756c8c3689ad4414422026", "Url": "https://api.github.com/repos/afodor/metagenomicsTools", "Date": "2013-07-05T15:43:19Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((middleChar) == 'A') return 'T';", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8716/buggy-version/src.coPhylog.BitHolder.java", "BodyUseAPI": [], "Fixed commit": "333335d5ff7569c724756c8c3689ad4414422026", "Url": "https://api.github.com/repos/afodor/metagenomicsTools", "Date": "2013-07-05T15:43:19Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((middleChar) == 'G') return 'C';", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8716/buggy-version/src.coPhylog.BitHolder.java", "BodyUseAPI": [], "Fixed commit": "333335d5ff7569c724756c8c3689ad4414422026", "Url": "https://api.github.com/repos/afodor/metagenomicsTools", "Date": "2013-07-05T15:43:19Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(reverseTranscribe)) { if (middleVal == 0) middleChar = 'A'; else if (middleVal == (coPhylog.BitHolder.MIDDLE_CHAR_C_MASK)) middleChar = 'C'; else if (middleVal == (coPhylog.BitHolder.MIDDLE_CHAR_G_MASK)) middleChar = 'G'; else if (middleVal == (coPhylog.BitHolder.MIDDLE_CHAR_T_MASK)) middleChar = 'T'; else throw new java.lang.Exception(\"Logic error\"); }else { if (middleVal == 0) middleChar = 'T'; else if (middleVal == (coPhylog.BitHolder.MIDDLE_CHAR_C_MASK)) middleChar = 'G'; else if (middleVal == (coPhylog.BitHolder.MIDDLE_CHAR_G_MASK)) middleChar = 'C'; else if (middleVal == (coPhylog.BitHolder.MIDDLE_CHAR_T_MASK)) middleChar = 'A'; else throw new java.lang.Exception(\"Logic error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8716/buggy-version/src.coPhylog.BitHolder.java", "BodyUseAPI": [], "Fixed commit": "333335d5ff7569c724756c8c3689ad4414422026", "Url": "https://api.github.com/repos/afodor/metagenomicsTools", "Date": "2013-07-05T15:43:19Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(reverseTranscribe)) return middleChar;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8716/buggy-version/src.coPhylog.BitHolder.java", "BodyUseAPI": [], "Fixed commit": "333335d5ff7569c724756c8c3689ad4414422026", "Url": "https://api.github.com/repos/afodor/metagenomicsTools", "Date": "2013-07-05T15:43:19Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((middleChar) == 'C') return 'G';", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8716/buggy-version/src.coPhylog.BitHolder.java", "BodyUseAPI": [], "Fixed commit": "333335d5ff7569c724756c8c3689ad4414422026", "Url": "https://api.github.com/repos/afodor/metagenomicsTools", "Date": "2013-07-05T15:43:19Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oculusPrime.commport.ArduinoPower.settings.getBoolean(ManualSettings.debugenabled)) { oculusPrime.commport.Util.debug(\"debugenabled, skipping graceful shutodwn\"); oculusPrime.commport.PowerLogger.append(\"debugenabled, skipping graceful shutodwn\", this); }else application.powerdown();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6505/buggy-version/WEB-INF.src.oculusPrime.commport.ArduinoPower.java", "BodyUseAPI": [], "Fixed commit": "ce061171b04dc5b5c67c6cf773bf7a034e8b46be", "Url": "https://api.github.com/repos/xaxxontech/oculusPrime", "Date": "2016-04-26T23:26:40Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (e != (oculusPrime.commport.ArduinoPower.ERROR_NO_BATTERY_CONNECTED)) sendCommand(oculusPrime.commport.ArduinoPower.CLEARALLWARNINGERRORS);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6505/buggy-version/WEB-INF.src.oculusPrime.commport.ArduinoPower.java", "BodyUseAPI": [], "Fixed commit": "ce061171b04dc5b5c67c6cf773bf7a034e8b46be", "Url": "https://api.github.com/repos/xaxxontech/oculusPrime", "Date": "2016-04-26T23:26:40Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getProperty().getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (path != null) { info.magnolia.ui.api.location.Location location = new com.neatresults.mgnltweaks.ui.contentapp.browser.RerootBrowserLocation(\"neatconfiguration\", \"helperBrowser\", path, false); adminEventBus.fireEvent(new info.magnolia.ui.api.location.LocationChangedEvent(location)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1230/buggy-version/neat-tweaks-developers.src.main.java.com.neatresults.mgnltweaks.app.status.ConfigStatusViewImpl.java", "BodyUseAPI": [], "Fixed commit": "a40c41848c0b7e73e61a4f461242f976f217e829", "Url": "https://api.github.com/repos/rah003/neat-tweaks", "Date": "2015-10-30T17:00:48Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((javax.swing.JOptionPane.showOptionDialog(null, ((\"Are you sure you want to delete \\\"\" + (task.getName())) + \"\\\"\"), \"Confirm task deletion\", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.WARNING_MESSAGE, null, null, null)) == (javax.swing.JOptionPane.YES_OPTION)) { control.ControllerInterface.deleteTask(task); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/9159/buggy-version/todo_53V3N.[TO_FIX]TaskRow.java", "BodyUseAPI": ["control.ControllerInterface.deleteTask(model.Task)"], "Fixed commit": "e26d88aa299b7b4950be498f0a5472aedb5f9505", "Url": "https://api.github.com/repos/kankoli/to-do-manager", "Date": "2013-03-11T15:26:51Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((jsonObject != null) && (jsonObject.has(\"results\"))) { p = jsonObject.getJSONArray(\"results\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3548/buggy-version/opensrp-connector.src.main.java.org.opensrp.connector.openmrs.service.PatientService.java", "BodyUseAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Fixed commit": "ff24c518b6c34e28597848b80b319a3d23e50c4e", "Url": "https://api.github.com/repos/I-TECH/opensrp-server", "Date": "2017-05-31T14:19:18Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(specialWord.endsWith(\">\"))) { search = search + \"\\\\b\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1416/buggy-version/wiki-helper.src.main.java.net.javacogito.FormatHelper.java", "BodyUseAPI": [], "Fixed commit": "fcec018abd8326542be6bf1997bcdd34a1535264", "Url": "https://api.github.com/repos/oleksiy-sayankin/javacogito", "Date": "2015-04-03T09:27:22Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.funebunny.xpdroid.business.historial.service.ServicioHistorialBusiness.restar(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (AppConstants.CERO.equalsIgnoreCase(total)) { servicioHistorialDAO.eliminarHistorial(historial.getId()); }else { historial.setTotal(total); servicioHistorialDAO.actualizarHistorial(historial); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/738/buggy-version/app.src.main.java.com.funebunny.xpdroid.business.historial.service.ServicioHistorialBusiness.java", "BodyUseAPI": ["com.funebunny.xpdroid.business.historial.model.Historial.setTotal(java.lang.String)"], "Fixed commit": "01cbe5201abc45a2f0204c384774d95c30ede8e4", "Url": "https://api.github.com/repos/funEBunny/XPDroid", "Date": "2015-09-12T16:30:14Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (android.os.Build.VERSION_CODES.HONEYCOMB)) { this.invalidateOptionsMenu(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5511/buggy-version/android.common.lib.src.bbct.android.common.activity.BaseballCardList.java", "BodyUseAPI": [], "Fixed commit": "cdab0589458218fb9468369594bc1bb4c90696af", "Url": "https://api.github.com/repos/codeguru42/bbct", "Date": "2014-03-26T21:36:40Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.chocosolver.solver.search.loop.lns.neighbors.ExplainingObjective.getEventStore()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((es.getEventType(i)) == (org.chocosolver.solver.variables.events.IntEventType.INSTANTIATE)) { old = es.getThirdValue(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/188/buggy-version/src.main.java.org.chocosolver.solver.search.loop.lns.neighbors.ExplainingObjective.java", "BodyUseAPI": ["org.chocosolver.solver.explanations.store.IEventStore.getThirdValue(int)"], "Fixed commit": "8b00db7e30e91be4d9b92d5747c901e5f340c567", "Url": "https://api.github.com/repos/chocoteam/choco-solver", "Date": "2016-03-11T10:34:20Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.length()) > 0) { pkg.add(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5865/buggy-version/se.softhouse.garden.orchid.commons.src.main.java.se.softhouse.garden.orchid.commons.text.storage.provider.OrchidMessageResource.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "a4ce1e6e26e3f5e2cc2651b718c9680cfe6eeb82", "Url": "https://api.github.com/repos/Softhouse/orchid", "Date": "2011-10-16T23:49:51Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (values != null) { uniqueValues.addAll(values); sort(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3943/buggy-version/plugins.net.refractions.udig.style.sld.src.net.refractions.udig.style.sld.editor.raster.UniqueValuesDialog.java", "BodyUseAPI": ["java.util.List<java.lang.Number>.addAll(java.util.Set<java.lang.Double>)"], "Fixed commit": "8089c7b5424eff9832ef9bec5a47994b30128c3a", "Url": "https://api.github.com/repos/egouge/udig-platform", "Date": "2013-06-11T16:20:04Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["EventBusType.SharedFileInfo.getData()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((inputStream.available()) < (item0.getSize())) { item.setRecvSize(inputStream.available()); }else { item.setRecvSize(0); file.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4180/buggy-version/app.src.main.java.com.huhu.fileshare.ShareApplication.java", "BodyUseAPI": ["java.io.FileInputStream.available()", "com.huhu.fileshare.model.DownloadItem.setRecvSize(int)"], "Fixed commit": "4ce803e704cf45dd5798eeb4f9f62771a6ad3b23", "Url": "https://api.github.com/repos/caichuangye/FileShare", "Date": "2017-03-04T09:44:31Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldName.equals(\"this$0\")) { return oldName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3904/buggy-version/compiler.backend.src.org.jetbrains.jet.codegen.inline.LambdaTransformer.java", "BodyUseAPI": [], "Fixed commit": "e7f0600e64eff5859715497d291c63dbb491c462", "Url": "https://api.github.com/repos/JetBrains/kotlin", "Date": "2014-03-09T07:19:15Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.transport) != null) this.transport.disconnect();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6322/buggy-version/src.io.socket.IOConnection.java", "BodyUseAPI": [], "Fixed commit": "d127a295a09cacf46759ae182cd8e80c38980d15", "Url": "https://api.github.com/repos/Grantoo/socket.io-java-client", "Date": "2014-10-08T22:56:59Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkBlack()) { getPilot().turnLeft(); while (!(checkColor())) { } driveOnRightSide(); }else { getPilot().travel(2); if (checkBlue()) { return; }else { driveOnRightSide(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5351/buggy-version/legoMS3_vs2.src.robotComponents.LabyrinthFollower.java", "BodyUseAPI": [], "Fixed commit": "d1b895f522f25318d316bce6e7af9b025ea95153", "Url": "https://api.github.com/repos/tungnx94/LegoMS", "Date": "2017-12-18T11:36:59Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.util.ArrayList<edu.orangecoastcollege.cs273.dkim127.occparking.ParkingSpace>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((row == null) || (row.isEmpty())) { row = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4496/buggy-version/app.src.main.java.edu.orangecoastcollege.cs273.dkim127.occparking.DBHelper.java", "BodyUseAPI": [], "Fixed commit": "b425c4955ff731381e708cc6e97d05605da2a46f", "Url": "https://api.github.com/repos/dkim127occ/OCCParking", "Date": "2016-12-02T00:16:53Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index < (number.length())) { char c1 = number.charAt(index); if (c1 == c) { index++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7654/buggy-version/core.src.main.java.co.cask.wrangler.steps.transformation.MaskNumber.java", "BodyUseAPI": ["java.lang.String.charAt(int)"], "Fixed commit": "ba903672abbc23be15e1af381c3059c4d841f4c4", "Url": "https://api.github.com/repos/data-integrations/wrangler", "Date": "2017-05-03T07:12:25Z"},
{"Line": "=>737", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type.isNothing()) { node.addError((message + \": operand has type `Nothing`\")); return null; }else { com.redhat.ceylon.model.typechecker.model.Type supertype = type.getSupertype(td); if (supertype == null) { node.addError((message + (com.redhat.ceylon.compiler.typechecker.analyzer.AnalyzerUtil.message(type, ((\" is not a subtype of '\" + (td.getName())) + \"'\"), node.getUnit())))); }else if ((!unary) && (!(supertype.getVarianceOverrides().isEmpty()))) { node.addError((message + (com.redhat.ceylon.compiler.typechecker.analyzer.AnalyzerUtil.message(type, ((\" does not have a principal instantiation for '\" + (td.getName())) + \"'\"), node.getUnit())))); } return supertype; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3612/buggy-version/typechecker.src.com.redhat.ceylon.compiler.typechecker.analyzer.AnalyzerUtil.java", "BodyUseAPI": ["com.redhat.ceylon.model.typechecker.model.Type.getSupertype(com.redhat.ceylon.model.typechecker.model.TypeDeclaration)", "com.redhat.ceylon.compiler.typechecker.tree.Node.addError((message + (com.redhat.ceylon.compiler.typechecker.analyzer.AnalyzerUtil.message(type, ((\" does not have a principal instantiation for '\" + (td.getName())) + \"'\"), node.getUnit()))))", "com.redhat.ceylon.compiler.typechecker.analyzer.AnalyzerUtil.message(com.redhat.ceylon.model.typechecker.model.Type,((\" is not a subtype of '\" + (td.getName())) + \"'\"),node.getUnit())", "com.redhat.ceylon.compiler.typechecker.analyzer.AnalyzerUtil.message(com.redhat.ceylon.model.typechecker.model.Type,((\" does not have a principal instantiation for '\" + (td.getName())) + \"'\"),node.getUnit())", "com.redhat.ceylon.compiler.typechecker.tree.Node.addError((message + (com.redhat.ceylon.compiler.typechecker.analyzer.AnalyzerUtil.message(type, ((\" is not a subtype of '\" + (td.getName())) + \"'\"), node.getUnit()))))"], "Fixed commit": "412d2e2fd2287620ec3a4437582079a2405798b8", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2016-12-09T15:20:12Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.command.Message.getOriginalDestination()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (origDest != null) { org.apache.activemq.util.ByteSequence origDestBytes = marshaller.marshal(origDest); origDestBytes.compact(); coreMessage.putBytesProperty(org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.AMQ_MSG_ORIG_DESTINATION, origDestBytes.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7179/buggy-version/artemis-protocols.artemis-openwire-protocol.src.main.java.org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.java", "BodyUseAPI": ["org.apache.activemq.wireformat.WireFormat.marshal(org.apache.activemq.command.ActiveMQDestination)"], "Fixed commit": "1ee4df90831373c4b7b208a27aa577b32c034cc1", "Url": "https://api.github.com/repos/clebertsuconic/activemq-artemis", "Date": "2016-02-18T12:52:32Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (colonPos >= 0) { minWordCount = java.lang.Integer.parseInt(dict.substring((colonPos + 1))); dict = dict.substring(0, colonPos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8381/buggy-version/src.main.java.cc.twittertools.scripts.Main.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.substring(int,int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "470791ced95424f6b33834aff181009d7a4feeac", "Url": "https://api.github.com/repos/budgefeeney/twitter-tools", "Date": "2013-10-11T15:28:49Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (literal.positive) { op = doc.createElement(de.ovgu.featureide.fm.core.io.xml.VAR); xmlNode.appendChild(op); op.appendChild(doc.createTextNode(node.toString())); }else { op = doc.createElement(de.ovgu.featureide.fm.core.io.xml.NOT); xmlNode.appendChild(op); literal = literal.clone(); literal.positive = true; createPropositionalConstraints(doc, op, literal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7452/buggy-version/plugins.de.ovgu.featureide.fm.core.src.de.ovgu.featureide.fm.core.io.xml.XmlFeatureModelWriter.java", "BodyUseAPI": ["org.prop4j.Literal.clone()"], "Fixed commit": "fd80d73693c40836e30d9f3e60c9d771b16b9e29", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2015-07-06T10:16:39Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((view.purchaseOrder.AddPO) (list.get(1).getContent())).hasPO())) { view.Message msg = new view.Message(gui, view.Message.ERROR, \"No suppliers yet!\"); }else { cl.show(this, \"add\"); updateSupplierBox(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8688/buggy-version/src.view.purchaseOrder.TabPO.java", "BodyUseAPI": [], "Fixed commit": "a6e3330135209da70c1967650f19a98c8f3e9e20", "Url": "https://api.github.com/repos/JNM-2T17/SystemScape_CODE", "Date": "2015-04-26T15:18:58Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasPO()) { cmbSupplier.setSelectedIndex(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8688/buggy-version/src.view.purchaseOrder.AddPO.java", "BodyUseAPI": [], "Fixed commit": "a6e3330135209da70c1967650f19a98c8f3e9e20", "Url": "https://api.github.com/repos/JNM-2T17/SystemScape_CODE", "Date": "2015-04-26T15:18:58Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((result != null) && ((result.getResult()) != null)) { org.opendaylight.netconf.sal.connect.netconf.sal.KeepaliveSalFacade.LOG.debug(\"{}: Keepalive RPC successful with response: {}\", id, result.getResult()); scheduleKeepalive(); }else { org.opendaylight.netconf.sal.connect.netconf.sal.KeepaliveSalFacade.LOG.warn(\"{} Keepalive RPC returned null with response: {}. Reconnecting netconf session\", id, result); reconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5061/buggy-version/opendaylight.netconf.sal-netconf-connector.src.main.java.org.opendaylight.netconf.sal.connect.netconf.sal.KeepaliveSalFacade.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,org.opendaylight.netconf.sal.connect.util.RemoteDeviceId,org.opendaylight.controller.md.sal.dom.api.DOMRpcResult)", "org.opendaylight.controller.md.sal.dom.api.DOMRpcResult.getResult()", "org.slf4j.Logger.debug(java.lang.String,org.opendaylight.netconf.sal.connect.util.RemoteDeviceId,result.getResult())"], "Fixed commit": "923be0a296dc02c7babe7ce465f39ef895bd7f24", "Url": "https://api.github.com/repos/opendaylight/netconf", "Date": "2015-12-10T17:00:10Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cs2103.CommandParser.getTimeString(java.util.Map<java.lang.String, java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (timeString == null) { commandExecutor.addTask(title, description, location, null, null); }else { java.lang.String[] time = cs2103.CommandParser.getTime(timeString); commandExecutor.addTask(title, description, location, time[0], time[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8407/buggy-version/CEO.src.cs2103.CommandLineUI.java", "BodyUseAPI": ["cs2103.CommandParser.getTime(java.lang.String)"], "Fixed commit": "553978de332c41d3f629080adfd918b46c3c123f", "Url": "https://api.github.com/repos/cs2103aug2014-f11-2j/main", "Date": "2014-09-28T11:51:42Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mQueue.size()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7295/buggy-version/app.src.main.java.com.marverenic.music.player.QueuedExoPlayer.java", "BodyUseAPI": [], "Fixed commit": "d9e2251d5a6c27b0189ed5211e628b05579e13bd", "Url": "https://api.github.com/repos/marverenic/Jockey", "Date": "2017-01-09T04:00:44Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((graphFragment) != null) { graphFragment.resumeReceivingData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6145/buggy-version/app.src.main.java.com.example.first.kaganmoshe.brainy.CustomActivity.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "e7102b3bedaf39dc410c809526b83d5d624e93ff", "Url": "https://api.github.com/repos/moshekagan/Brainy", "Date": "2015-08-12T18:17:43Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((feedback) != null) { feedback.stopTimerAndRecievingData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6145/buggy-version/app.src.main.java.com.example.first.kaganmoshe.brainy.CustomActivity.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "e7102b3bedaf39dc410c809526b83d5d624e93ff", "Url": "https://api.github.com/repos/moshekagan/Brainy", "Date": "2015-08-12T18:17:43Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((graphFragment) != null) { graphFragment.stopReceivingData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6145/buggy-version/app.src.main.java.com.example.first.kaganmoshe.brainy.CustomActivity.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "e7102b3bedaf39dc410c809526b83d5d624e93ff", "Url": "https://api.github.com/repos/moshekagan/Brainy", "Date": "2015-08-12T18:17:43Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((feedback) != null) { feedback.resumeRecievingData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6145/buggy-version/app.src.main.java.com.example.first.kaganmoshe.brainy.CustomActivity.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "e7102b3bedaf39dc410c809526b83d5d624e93ff", "Url": "https://api.github.com/repos/moshekagan/Brainy", "Date": "2015-08-12T18:17:43Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((A != null) && (net.lilifei.dataStructure.Heap.isMaxHeap(A, heapSize))) { return A[0]; }else { throw new java.lang.Exception(\"Not Max Heap\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1392/buggy-version/Java.src.net.lilifei.dataStructure.Heap.java", "BodyUseAPI": [], "Fixed commit": "ead94ea3c1da51e4783e98b2911f379ded05587c", "Url": "https://api.github.com/repos/lupuswere/CLRS-practices", "Date": "2015-05-10T08:26:09Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((A != null) && (net.lilifei.dataStructure.Heap.isMaxHeap(A, heapSize))) { return A[0]; }else { throw new java.lang.Exception(\"Not Max Heap\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1392/buggy-version/Java.src.net.lilifei.dataStructure.Heap.java", "BodyUseAPI": [], "Fixed commit": "ead94ea3c1da51e4783e98b2911f379ded05587c", "Url": "https://api.github.com/repos/lupuswere/CLRS-practices", "Date": "2015-05-10T08:26:09Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((n + i) < 0) { i++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/974/buggy-version/src.com.SSUJ.world.World.java", "BodyUseAPI": [], "Fixed commit": "23b2a00fab78bbef15ac85e957eb2dc201916fdf", "Url": "https://api.github.com/repos/ShawnClake/374Animals", "Date": "2016-11-15T02:56:40Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((n + i) > ((this.x) - 1)) { i--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/974/buggy-version/src.com.SSUJ.world.World.java", "BodyUseAPI": [], "Fixed commit": "23b2a00fab78bbef15ac85e957eb2dc201916fdf", "Url": "https://api.github.com/repos/ShawnClake/374Animals", "Date": "2016-11-15T02:56:40Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m + j) < 0) { j++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/974/buggy-version/src.com.SSUJ.world.World.java", "BodyUseAPI": [], "Fixed commit": "23b2a00fab78bbef15ac85e957eb2dc201916fdf", "Url": "https://api.github.com/repos/ShawnClake/374Animals", "Date": "2016-11-15T02:56:40Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m + j) > ((this.y) - 1)) { j--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/974/buggy-version/src.com.SSUJ.world.World.java", "BodyUseAPI": [], "Fixed commit": "23b2a00fab78bbef15ac85e957eb2dc201916fdf", "Url": "https://api.github.com/repos/ShawnClake/374Animals", "Date": "2016-11-15T02:56:40Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((strs.length) > 1) { msg = strs[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2026/buggy-version/app.src.main.java.ciandt.timetrackinutils.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "694e8434ed6dbfbba8115c796a48538a56e119cc", "Url": "https://api.github.com/repos/paulocn/timetrackinutils", "Date": "2015-10-16T20:33:53Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["podaciNaPostaji.get(postaja).get(java.util.Date)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((pod.getStatus()) < (1 << (OperStatus.SATNI_ERR1.ordinal()))) { status = -1; vrijednost = pod.getVrijednost(); }else { status = 0; vrijednost = -999.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4092/buggy-version/SKZ-ejb.src.java.dhz.skz.diseminacija.dem.DEMTransformation.java", "BodyUseAPI": ["dhz.skz.aqdb.entity.Podatak.getVrijednost()"], "Fixed commit": "117f957ccc9aa4cff956e2a9af53bc6eef4d12eb", "Url": "https://api.github.com/repos/kluksa/SKZ", "Date": "2015-06-10T15:05:16Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getStatus()) < (1 << (OperStatus.SATNI_ERR1.ordinal()))) { stmt.setDouble(4, p.getVrijednost()); stmt.setInt(5, 0); }else { stmt.setDouble(4, (-999.0)); stmt.setInt(5, p.getStatus()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4092/buggy-version/SKZ-ejb.src.java.dhz.skz.diseminacija.ekonerg.EkonergDiseminator.java", "BodyUseAPI": ["dhz.skz.aqdb.entity.Podatak.getVrijednost()", "java.sql.PreparedStatement.setDouble(int,p.getVrijednost())", "dhz.skz.aqdb.entity.Podatak.getStatus()", "java.sql.PreparedStatement.setInt(int,p.getStatus())"], "Fixed commit": "117f957ccc9aa4cff956e2a9af53bc6eef4d12eb", "Url": "https://api.github.com/repos/kluksa/SKZ", "Date": "2015-06-10T15:05:16Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7190/buggy-version/omni-cx2x.src.cx2x.xcodeml.xelement.Xscope.java", "BodyUseAPI": [], "Fixed commit": "91647bc44fb0adc0a94265c5bffa5b065c86366a", "Url": "https://api.github.com/repos/claw-project/claw-compiler", "Date": "2016-02-02T18:06:49Z"},
{"Line": "=>1194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCustomHttpHeaders) != null) { headerMap.putAll(mCustomHttpHeaders); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2792/buggy-version/WordPressEditor.src.main.java.org.wordpress.android.editor.EditorFragment.java", "BodyUseAPI": [], "Fixed commit": "d3e97b0a9760ff30ce55d16acef8acee71753635", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Editor-Android", "Date": "2016-05-04T19:37:22Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((endPosition) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1952/buggy-version/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java", "BodyUseAPI": [], "Fixed commit": "1d3304c9f649fd2ba7df801877e1f437622ae59e", "Url": "https://api.github.com/repos/ggevay/flink", "Date": "2016-01-17T20:39:57Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(list.get(i).sortContent))) { java.lang.Character curChar = java.lang.Character.toLowerCase(list.get(i).sortContent.charAt(0)); if (!(lastCharcter.equals(curChar))) { map.put(curChar, i); } lastCharcter = curChar; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3325/buggy-version/leanchat.src.main.java.com.avoscloud.chat.adapter.ContactsAdapter.java", "BodyUseAPI": ["list.get(i).sortContent.charAt(int)", "java.util.List<com.avoscloud.chat.model.ContactItem>.get(int)", "java.lang.Character.toLowerCase(list.get(i).sortContent.charAt(0))", "java.util.Map<java.lang.Character, java.lang.Integer>.put(java.lang.Character,int)"], "Fixed commit": "a80b62bacb075d273b780d07b4ca642164588681", "Url": "https://api.github.com/repos/daweibayu/leanchat-android", "Date": "2016-09-14T08:28:58Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(memberItem.sortContent))) { alpha.setText(java.lang.String.valueOf(java.lang.Character.toUpperCase(memberItem.sortContent.charAt(0)))); }else { alpha.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3325/buggy-version/leanchat.src.main.java.com.avoscloud.chat.viewholder.ContactItemHolder.java", "BodyUseAPI": ["java.lang.String.valueOf(char)", "memberItem.sortContent.charAt(int)", "java.lang.Character.toUpperCase(memberItem.sortContent.charAt(0))", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "a80b62bacb075d273b780d07b4ca642164588681", "Url": "https://api.github.com/repos/daweibayu/leanchat-android", "Date": "2016-09-14T08:28:58Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTime) != null) { if (currentMiliSeconds > ((mTime) + (com.javier.itg.utils.Constants.MILISECONDS_PER_HOUR))) { new com.javier.itg.presenter.CoinPresenterImpl.CallClient().execute(url, type); }else { new com.javier.itg.presenter.CoinPresenterImpl.CallFile().execute(); } }else { new com.javier.itg.presenter.CoinPresenterImpl.CallFile().execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8740/buggy-version/src.main.java.com.javier.itg.presenter.CoinPresenterImpl.java", "BodyUseAPI": [], "Fixed commit": "608cd3541d43aeaf179abe37a30cdc97224aa30d", "Url": "https://api.github.com/repos/CabezasGonzalezJavier/itg", "Date": "2015-11-12T18:53:49Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, com.zupcat.model.config.PropertyMeta>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (java.util.Objects.equals(initialValue, propertyMeta.get())) { result.put(propertyMeta.getPropertyName(), initialValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8101/buggy-version/src.main.java.com.zupcat.model.DatastoreEntity.java", "BodyUseAPI": ["com.zupcat.model.DataObject.put(propertyMeta.getPropertyName(),java.lang.Object)", "com.zupcat.model.config.PropertyMeta.getPropertyName()"], "Fixed commit": "905b0b2f7d7d971fde73f7b72a4f525dc5a1785e", "Url": "https://api.github.com/repos/ZupCat/simple-datastore", "Date": "2014-10-31T19:01:46Z"},
{"Line": "=>745", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (corrupted || (oldVersion != null)) { newLine = new java.lang.StringBuilder(org.apache.commons.lang.StringUtils.join(newCharacter, \":\")); newLine = newLine.append(\":\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/813/buggy-version/src.main.java.com.gmail.nossr50.database.FlatfileDatabaseManager.java", "BodyUseAPI": [], "Fixed commit": "0aa67727f54ef079d925f2d9c7977aff935fa1bd", "Url": "https://api.github.com/repos/zreed/mcMMO", "Date": "2014-07-12T11:58:36Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.googlesource.gerrit.plugins.cookbook.karma.ChangeInfo>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nChanges == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8851/buggy-version/src.main.java.com.googlesource.gerrit.plugins.cookbook.karma.Changes.java", "BodyUseAPI": [], "Fixed commit": "3f2fd267bcf47c7455689ae0e4e2c3d35fe8bf39", "Url": "https://api.github.com/repos/akilman-zz/appd-hackathon-2016", "Date": "2016-06-24T19:01:23Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((world.getChunkProvider()) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2511/buggy-version/src.main.java.ValkyrienWarfareBase.PhysicsManagement.DimensionPhysObjectManager.java", "BodyUseAPI": [], "Fixed commit": "901c2b8a0a4f764a6a4927d6228abd64667622a5", "Url": "https://api.github.com/repos/ValkyrienWarfare/Valkyrien-Warfare-Revamped", "Date": "2017-03-09T22:58:51Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((launch.getLaunchConfiguration()) != null) && ((launch.getLaunchConfiguration().getType()) != null)) && ((launch.getLaunchConfiguration().getType().getIdentifier()) != null)) { if ((launch.getLaunchConfiguration().getType().getIdentifier().equals(ILaunchTypes.ATTACH)) && (!(launch.isTerminated()))) { org.eclipse.tcf.te.runtime.model.interfaces.IModelNode[] contexts = org.eclipse.tcf.te.launch.core.persistence.launchcontext.LaunchContextsPersistenceDelegate.getLaunchContexts(launch.getLaunchConfiguration()); if (((contexts != null) && ((contexts.length) == 1)) && (contexts[0].equals(context))) { isLaunched = true; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1410/buggy-version/target_explorer.plugins.org.eclipse.tcf.te.tcf.launch.ui.src.org.eclipse.tcf.te.tcf.launch.ui.internal.services.DebugService.java", "BodyUseAPI": ["org.eclipse.debug.core.ILaunch.isTerminated()", "launch.getLaunchConfiguration().getType().getIdentifier().equals(ILaunchTypes.ATTACH)", "launch.getLaunchConfiguration().getType().getIdentifier()", "org.eclipse.debug.core.ILaunch.getLaunchConfiguration()", "org.eclipse.debug.core.ILaunch.getLaunchConfiguration()", "launch.getLaunchConfiguration().getType()", "org.eclipse.tcf.te.launch.core.persistence.launchcontext.LaunchContextsPersistenceDelegate.getLaunchContexts(launch.getLaunchConfiguration())"], "Fixed commit": "80cb45a366088b3ce835296613314f487c1e210f", "Url": "https://api.github.com/repos/eclipse/tcf", "Date": "2015-04-08T11:01:00Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (launch == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1410/buggy-version/target_explorer.plugins.org.eclipse.tcf.te.tcf.launch.ui.src.org.eclipse.tcf.te.tcf.launch.ui.internal.services.DebugService.java", "BodyUseAPI": [], "Fixed commit": "80cb45a366088b3ce835296613314f487c1e210f", "Url": "https://api.github.com/repos/eclipse/tcf", "Date": "2015-04-08T11:01:00Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nfcAdapter) != null) { nfcAdapter.enableForegroundDispatch(getActivity(), nfcPendingIntent, null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7026/buggy-version/client.src.main.java.org.croudtrip.fragments.join.JoinDrivingFragment.java", "BodyUseAPI": [], "Fixed commit": "114f0d70d5e3a8dea99bbb96970cefd5f508d7e5", "Url": "https://api.github.com/repos/AMOS-2015/amos-ss15-proj2", "Date": "2015-06-13T14:28:56Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p.getWeapon().getName().equals(itemToObtain.getName())) || (p.getArmor().getName().equals(itemToObtain.getName()))) { amount++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4044/buggy-version/src.Quest.ItemQuest.java", "BodyUseAPI": [], "Fixed commit": "040d7a55185f36f2ddd5b27d9ab11349eaea126e", "Url": "https://api.github.com/repos/Krill/red-elephant", "Date": "2013-02-26T22:54:11Z"},
{"Line": "=>1494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((st.id) == null) { note = new org.gedcom4j.parser.Note(); notes.add(note); }else { if (org.gedcom4j.parser.GedcomParserHelper.referencesAnotherNode(st)) { warnings.add(((((\"NOTE line has both an XREF_ID (\" + (st.id)) + \") and SUBMITTER_TEXT (\") + (st.value)) + \") value between @ signs - treating SUBMITTER_TEXT as string, not a cross-reference\")); } note = getNote(st.id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/918/buggy-version/src.main.java.org.gedcom4j.parser.GedcomParser.java", "BodyUseAPI": ["org.gedcom4j.parser.GedcomParser.getNote(st.id)", "java.util.List<java.lang.String>.add(((((\"NOTE line has both an XREF_ID (\" + (st.id)) + \") and SUBMITTER_TEXT (\") + (st.value)) + \") value between @ signs - treating SUBMITTER_TEXT as string, not a cross-reference\"))", "org.gedcom4j.parser.GedcomParserHelper.referencesAnotherNode(org.gedcom4j.parser.StringTree)"], "Fixed commit": "00a3738d19c3bbae9f8832c7790e22b6f2856ba6", "Url": "https://api.github.com/repos/frizbog/gedcom4j", "Date": "2016-05-18T01:58:03Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((jlm.core.model.Game.getInstance()) != null) && ((jlm.core.model.Game.getInstance().getCurrentLesson()) != null)) { jlm.core.model.Game.getInstance().getCurrentLesson().resetAboutLoaded(); jlm.core.model.lesson.Lecture lect = jlm.core.model.Game.getInstance().getCurrentLesson().getCurrentExercise(); if (lect instanceof jlm.core.model.lesson.Exercise) ((jlm.core.model.lesson.Exercise) (lect)).getCurrentWorld().get(0).resetAbout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4154/buggy-version/src.jlm.core.model.FileUtils.java", "BodyUseAPI": [], "Fixed commit": "b3d8e9b189135fc88135bf36bf0c3670d8fbb1f8", "Url": "https://api.github.com/repos/g-humbert/JLM", "Date": "2013-05-11T13:46:44Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((findByLogin(entity.getLogin())) == entity) { throw new java.lang.IllegalStateException(\"User login already exist.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2839/buggy-version/app.src.main.java.cz.muni.fi.pa165.fast.dao.impl.UserDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "f74cbfc198f6d1e0725b171000b9260698b9635c", "Url": "https://api.github.com/repos/jsenko/PA165", "Date": "2013-01-22T01:45:07Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.wpi.first.wpilibj.networktables.NetworkTable.getNumberArray(java.lang.String,double[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cX.length) < 2) { return gearAngleOffset = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/525/buggy-version/src.org.usfirst.frc.team294.robot.subsystems.Vision.java", "BodyUseAPI": [], "Fixed commit": "3f591758f272e1a0d0fed738f9cf486358e51a77", "Url": "https://api.github.com/repos/team294/FRC2017-Preliminary", "Date": "2017-01-24T04:19:30Z"},
{"Line": "=>855", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tb.getRowCount()) == 0) saveParentyInfo();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5041/buggy-version/riscoss-webapp.src.main.java.eu.riscoss.client.entities.EntityPropertyPage.java", "BodyUseAPI": [], "Fixed commit": "f39380c51754c648a4c720430a610cb9cf24ca90", "Url": "https://api.github.com/repos/RISCOSS/riscoss-corporate", "Date": "2015-10-23T07:56:51Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (count > 1) { return methodName(com.google.api.codegen.util.Name.upperCamel(method.getSimpleName(), (\"Test\" + (java.lang.Integer.toString(count))))); }else { return methodName(com.google.api.codegen.util.Name.upperCamel(method.getSimpleName(), \"Test\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8317/buggy-version/src.main.java.com.google.api.codegen.transformer.SurfaceNamer.java", "BodyUseAPI": ["com.google.api.codegen.transformer.SurfaceNamer.methodName(com.google.api.codegen.util.Name.upperCamel(method.getSimpleName(), (\"Test\" + (java.lang.Integer.toString(count)))))", "com.google.api.codegen.util.Name.upperCamel(method.getSimpleName(),java.lang.String)", "java.lang.Integer.toString(java.lang.Integer)"], "Fixed commit": "7dd87f7f4ded3647a4e80b7e97aa1df4174cfe0b", "Url": "https://api.github.com/repos/shinfan/toolkit", "Date": "2016-08-17T18:59:18Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type.isRepeated()) && (!(type.isMap()))) { return methodName(com.google.api.codegen.util.Name.from(\"get\").join(name).join(\"list\")); }else { return methodName(com.google.api.codegen.util.Name.from(\"get\").join(name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8317/buggy-version/src.main.java.com.google.api.codegen.transformer.SurfaceNamer.java", "BodyUseAPI": [], "Fixed commit": "7dd87f7f4ded3647a4e80b7e97aa1df4174cfe0b", "Url": "https://api.github.com/repos/shinfan/toolkit", "Date": "2016-08-17T18:59:18Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Looper.myLooper()) == null) { android.os.Looper.prepare(); closeLooper = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8582/buggy-version/src.org.mixare.data.convert.Elevation.java", "BodyUseAPI": [], "Fixed commit": "b4eff8b9452af4c46a6350edf59727407ad8d47d", "Url": "https://api.github.com/repos/pokerazor/mixare", "Date": "2015-12-29T13:23:36Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (closeLooper) { android.os.Looper.myLooper().quit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8582/buggy-version/src.org.mixare.data.convert.Elevation.java", "BodyUseAPI": [], "Fixed commit": "b4eff8b9452af4c46a6350edf59727407ad8d47d", "Url": "https://api.github.com/repos/pokerazor/mixare", "Date": "2015-12-29T13:23:36Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.exist(Const.FILE_DOWNLOADED))) { file.createFile(Const.FILE_DOWNLOADED, new java.util.ArrayList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/760/buggy-version/src.main.java.com.itbackyard.Controller.Downloader.java", "BodyUseAPI": ["com.itbackyard.Controller.Downloader.createFile(Const.FILE_DOWNLOADED,java.util.ArrayList)"], "Fixed commit": "51521df1cedbf7bde4762f3ddceab2928a9ddbfe", "Url": "https://api.github.com/repos/maythamfahmi/wet-extractor", "Date": "2017-08-14T14:22:37Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stackLevel) > 4) { ((com.joeracosta.library.activity.FragmentStackActivity) (getActivity())).addFragmentToStack(com.joeracosta.samplefragmentapp.map.MapFragment.newInstance(), R.id.fragment_container, null, null); }else { ((com.joeracosta.library.activity.FragmentStackActivity) (getActivity())).addFragmentToStack(com.joeracosta.samplefragmentapp.simple.PurpleFragment.newInstance(((stackLevel) + 1)), R.id.fragment_container, null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5914/buggy-version/samplestackapp.src.main.java.com.joeracosta.samplefragmentapp.simple.PurpleFragment.java", "BodyUseAPI": ["((com.joeracosta.library.activity.FragmentStackActivity) (getActivity())).addFragmentToStack(com.joeracosta.samplefragmentapp.simple.PurpleFragment,R.id.fragment_container,<nulltype>,<nulltype>)", "com.joeracosta.samplefragmentapp.simple.PurpleFragment.newInstance(int)"], "Fixed commit": "bf19567c2c7a6738a7c48e0149848d39ebe49fcd", "Url": "https://api.github.com/repos/JayyyR/SimpleFragments", "Date": "2017-09-09T20:58:14Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.server.MinecraftServer.getServer().getConfigurationManager()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (manager == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/989/buggy-version/src.main.java.chylex.hee.proxy.NotificationCommonProxy.java", "BodyUseAPI": [], "Fixed commit": "e47da64795c3ddfe6f6e87d6a3dd51c7448b4841", "Url": "https://api.github.com/repos/chylex/Hardcore-Ender-Expansion", "Date": "2015-09-11T16:10:16Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.get(java.lang.Object)", "java.lang.reflect.Field.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((org.apache.camel.util.ObjectHelper.isNotEmpty(datafield.defaultValue())) && (org.apache.camel.util.ObjectHelper.isEmpty(value))) { value = datafield.defaultValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5131/buggy-version/components.camel-bindy.src.main.java.org.apache.camel.dataformat.bindy.BindyFixedLengthFactory.java", "BodyUseAPI": ["org.apache.camel.dataformat.bindy.annotation.DataField.defaultValue()"], "Fixed commit": "c0d70f609e0028314064d8ad9becbfd4bcd00dfc", "Url": "https://api.github.com/repos/tdiesler/camel", "Date": "2017-05-24T10:02:29Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (y < 0) { y = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2949/buggy-version/app.src.main.java.au.com.codeka.advbatterygraph.BatteryGraphWidgetProvider.java", "BodyUseAPI": [], "Fixed commit": "3eea99b0f4feb146c17e0083b77ac005dfaf6eb4", "Url": "https://api.github.com/repos/codeka/advbatterygraph", "Date": "2014-10-19T01:38:26Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (y >= height) { y = height - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2949/buggy-version/app.src.main.java.au.com.codeka.advbatterygraph.BatteryGraphWidgetProvider.java", "BodyUseAPI": [], "Fixed commit": "3eea99b0f4feb146c17e0083b77ac005dfaf6eb4", "Url": "https://api.github.com/repos/codeka/advbatterygraph", "Date": "2014-10-19T01:38:26Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((board[pMan_prevY][((this.xPos) - 1)].getDisplay()) == '-') { board[pMan_prevY][((this.xPos) - 1)].setDisplay(' '); }else { board[pMan_prevY][((this.xPos) + 1)].setDisplay(' '); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4389/buggy-version/Ghost.Ghost3.java", "BodyUseAPI": ["board[pMan_prevY][((this.xPos) - 1)].setDisplay(char)", "board[pMan_prevY][((this.xPos) + 1)].setDisplay(char)"], "Fixed commit": "71c0e430bf9e9e76fcfc2e93fa818ee4db35ba9f", "Url": "https://api.github.com/repos/harry688tan96/Pacman-Harry", "Date": "2016-09-07T14:21:13Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.drew.metadata.exif.ExifSubIFDDirectory.getDate(ExifSubIFDDirectory.TAG_DATETIME_ORIGINAL)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (date != null) { datas.put(\"date\", formatter.format(date)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4773/buggy-version/src.com.jps.pics.tagger.Application.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.text.SimpleDateFormat.format(java.util.Date)"], "Fixed commit": "b49c9d5e4238a493a9e22bc78527f3b7112f7ddc", "Url": "https://api.github.com/repos/johanpoirier/pics-tagger", "Date": "2012-06-19T08:01:34Z"},
{"Line": "=>712", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(vertices[i].z)) vertices[i].z = 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4981/buggy-version/ummisco.gama.opengl.src.ummisco.gama.opengl.jts.JTSDrawer.java", "BodyUseAPI": [], "Fixed commit": "962a7c49e4e9ee1745eca65eb340e2e508523202", "Url": "https://api.github.com/repos/gama-platform/gama", "Date": "2015-12-04T16:35:32Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.getCharacterController().getCharacter().getPosition().x) - (this.getCharacterController().getCharacter().getDeahLimit())) > 600) { this.getCharBody().applyForceToCenter(new com.badlogic.gdx.math.Vector2((-((this.getCharBody().getLinearVelocity().x) * (this.getCharBody().getMass()))), 0), true); }else if ((this.getCharBody().getLinearVelocity().x) > speedM) { this.getCharBody().applyForceToCenter(new com.badlogic.gdx.math.Vector2((-((this.getCharBody().getLinearVelocity().x) * (this.getCharBody().getMass()))), 0), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7826/buggy-version/dat255_group3.src.com.dat255_group3.controller.WorldController.java", "BodyUseAPI": [], "Fixed commit": "29a08e253e930fcddfbc8e0a6820a4c9b8a114e6", "Url": "https://api.github.com/repos/emmawestman/dat255group3", "Date": "2013-10-23T06:48:41Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mProgressListener) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2557/buggy-version/davinci.src.main.java.cn.hadcn.davinci.image.base.ByteRequest.java", "BodyUseAPI": [], "Fixed commit": "21d91b2bc91e0789250ee5ddfd580e8392213f51", "Url": "https://api.github.com/repos/CPPAlien/DaVinci", "Date": "2016-07-07T08:04:18Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getAPIlevel()) >= 18) { handler.getLooper().quitSafely(); }else { handler.getLooper().quit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3992/buggy-version/src.de.echsecutable.memory.AudioThread.java", "BodyUseAPI": [], "Fixed commit": "73ebc396020da3b0fdf0b5ff87c3934edd83c95d", "Url": "https://api.github.com/repos/Echsecutor/Memory.echse", "Date": "2015-04-21T11:49:52Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (loc != null) { if ((items.get(i)) instanceof edu.gatech.cs2340.wheresmystuff.model.LostItem) { edu.gatech.cs2340.wheresmystuff.controllers.Marker marker = map.addMarker(new edu.gatech.cs2340.wheresmystuff.controllers.MarkerOptions().position(new edu.gatech.cs2340.wheresmystuff.controllers.LatLng(loc.get(0).getLatitude(), loc.get(0).getLongitude())).title((\"Lost Item: \" + itemName)).snippet(((itemDetails + \"\\n\") + address))); }else { edu.gatech.cs2340.wheresmystuff.controllers.Marker marker = map.addMarker(new edu.gatech.cs2340.wheresmystuff.controllers.MarkerOptions().position(new edu.gatech.cs2340.wheresmystuff.controllers.LatLng(loc.get(0).getLatitude(), loc.get(0).getLongitude())).title((\"Found Item: \" + itemName)).snippet(((itemDetails + \"\\n\") + address))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5908/buggy-version/app.src.main.java.edu.gatech.cs2340.wheresmystuff.controllers.MapActivity.java", "BodyUseAPI": ["new edu.gatech.cs2340.wheresmystuff.controllers.MarkerOptions().position(new edu.gatech.cs2340.wheresmystuff.controllers.LatLng(loc.get(0).getLatitude(), loc.get(0).getLongitude())).title(java.lang.String)", "loc.get(0).getLatitude()", "java.util.List<android.location.Address>.get(int)", "new edu.gatech.cs2340.wheresmystuff.controllers.MarkerOptions().position(new edu.gatech.cs2340.wheresmystuff.controllers.LatLng(loc.get(0).getLatitude(), loc.get(0).getLongitude())).title(java.lang.String)", "new edu.gatech.cs2340.wheresmystuff.controllers.MarkerOptions().position(new edu.gatech.cs2340.wheresmystuff.controllers.LatLng(loc.get(0).getLatitude(), loc.get(0).getLongitude())).title((\"Found Item: \" + itemName)).snippet(java.lang.String)", "new edu.gatech.cs2340.wheresmystuff.controllers.MarkerOptions().position(new edu.gatech.cs2340.wheresmystuff.controllers.LatLng(loc.get(0).getLatitude(), loc.get(0).getLongitude())).title((\"Lost Item: \" + itemName)).snippet(java.lang.String)", "edu.gatech.cs2340.wheresmystuff.controllers.MarkerOptions.position(edu.gatech.cs2340.wheresmystuff.controllers.LatLng)", "loc.get(0).getLongitude()", "edu.gatech.cs2340.wheresmystuff.controllers.GoogleMap.addMarker(new edu.gatech.cs2340.wheresmystuff.controllers.MarkerOptions().position(new edu.gatech.cs2340.wheresmystuff.controllers.LatLng(loc.get(0).getLatitude(), loc.get(0).getLongitude())).title((\"Lost Item: \" + itemName)).snippet(((itemDetails + \"\\n\") + address)))", "java.util.List<android.location.Address>.get(int)", "loc.get(0).getLongitude()", "edu.gatech.cs2340.wheresmystuff.controllers.GoogleMap.addMarker(new edu.gatech.cs2340.wheresmystuff.controllers.MarkerOptions().position(new edu.gatech.cs2340.wheresmystuff.controllers.LatLng(loc.get(0).getLatitude(), loc.get(0).getLongitude())).title((\"Found Item: \" + itemName)).snippet(((itemDetails + \"\\n\") + address)))", "java.util.List<android.location.Address>.get(int)", "edu.gatech.cs2340.wheresmystuff.controllers.MarkerOptions.position(edu.gatech.cs2340.wheresmystuff.controllers.LatLng)", "loc.get(0).getLatitude()", "java.util.List<android.location.Address>.get(int)"], "Fixed commit": "3dcafe57b5d28c5f9972e3c5312806105d6cfc3a", "Url": "https://api.github.com/repos/zedmands/WheresMyStuff", "Date": "2017-07-13T21:46:42Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((profileImage) != null) { profileImage.setImageURI(null); profileImage.setImageURI(selectedImgUri); isNewImage = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6933/buggy-version/StoryAround.app.src.main.java.me.ddfw.storyaround.fragments.ProfileFragment.java", "BodyUseAPI": [], "Fixed commit": "04d4ce84d122093c30909a8c3273ae527747d190", "Url": "https://api.github.com/repos/joyDeng/StoryAround", "Date": "2017-03-08T21:44:31Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (srcFileRelPath.startsWith(\"/\")) { srcFile = new java.io.File(srcFileRelPath); }else { srcFile = new java.io.File((((sourcePath) + \"/\") + srcFileRelPath)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2110/buggy-version/import_layer.src.main.java.org.isatools.isatab.export.DataFilesDispatcher.java", "BodyUseAPI": [], "Fixed commit": "9bfa37a31ad0a8593069f6837932e793f255798d", "Url": "https://api.github.com/repos/ISA-tools/ISAvalidator-ISAconverter-BIImanager", "Date": "2011-03-24T16:34:34Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (src == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2547/buggy-version/app.src.main.java.com.neo.neoandroidlib.NeoImageUtil.java", "BodyUseAPI": [], "Fixed commit": "99b289fe3cba50a7b2e83849aa4f531fec2a6fbc", "Url": "https://api.github.com/repos/neoguojing/neoapp", "Date": "2017-01-25T10:40:28Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (products.isEmpty()) { java.lang.System.out.println(\"Error! No correct data in assortment\"); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7607/buggy-version/Lab01.src.com.example.Painter.java", "BodyUseAPI": [], "Fixed commit": "33bcbb85fcd3e66d59b86b15be2ef6dddd735f69", "Url": "https://api.github.com/repos/DariaBaeva/Java", "Date": "2015-10-16T19:28:08Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.zib.gndms.taskflows.interslicetransfer.client.model.InterSliceTransferOrder.getDestinationSpecifier()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (null == (specifier.getUriMap())) throw new de.zib.gndms.logic.model.gorfx.taskflow.UnsatisfiableOrderException(\"No UriMap given in destination specifier\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5922/buggy-version/taskflows.interSliceTransfer.server.src.de.zib.gndms.taskflows.interslicetransfer.server.logic.InterSliceTransferTaskAction.java", "BodyUseAPI": [], "Fixed commit": "5fe38082619837b4134e13805a85badf95dbd6c2", "Url": "https://api.github.com/repos/zibhub/GNDMS", "Date": "2012-08-22T13:32:33Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["zipEntered.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((zipcodeText.length()) != 0) { ZIP = java.lang.Integer.parseInt(zipEntered.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8385/buggy-version/FindersKeepers.app.src.main.java.cse403.finderskeepers.UserSettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "4841f43de9ae4de547d73432b6149383ca6be0be", "Url": "https://api.github.com/repos/CSE403FindersKeepers/finders-keepers", "Date": "2016-11-10T20:44:20Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["zipEntered.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((zipcodeText.length()) != 0) requestJSON.put(\"zipcode\", ZIP);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8385/buggy-version/FindersKeepers.app.src.main.java.cse403.finderskeepers.UserSettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "4841f43de9ae4de547d73432b6149383ca6be0be", "Url": "https://api.github.com/repos/CSE403FindersKeepers/finders-keepers", "Date": "2016-11-10T20:44:20Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.source.info.getName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result == null) return Default;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/343/buggy-version/src.org.catchyou.api.models.ChatUser.java", "BodyUseAPI": [], "Fixed commit": "ffae0daed92d316e5747e1276cda3c1cc17fab29", "Url": "https://api.github.com/repos/XuPeiYao/CatchYouApi", "Date": "2015-10-18T04:15:17Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.target.info.getName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result == null) return Default;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/343/buggy-version/src.org.catchyou.api.models.ChatUser.java", "BodyUseAPI": [], "Fixed commit": "ffae0daed92d316e5747e1276cda3c1cc17fab29", "Url": "https://api.github.com/repos/XuPeiYao/CatchYouApi", "Date": "2015-10-18T04:15:17Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name_format) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/343/buggy-version/src.org.catchyou.api.models.FbUserInfo.java", "BodyUseAPI": [], "Fixed commit": "ffae0daed92d316e5747e1276cda3c1cc17fab29", "Url": "https://api.github.com/repos/XuPeiYao/CatchYouApi", "Date": "2015-10-18T04:15:17Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(setContains(obj))) { orderedSet.add(obj); return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4771/buggy-version/OrderedSetImpl.java", "BodyUseAPI": ["java.util.List<T>.add(T)"], "Fixed commit": "3ae45862d3e694b914a0835490e3dd5e55a77553", "Url": "https://api.github.com/repos/klaus94/Queue", "Date": "2015-06-09T18:50:04Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) { throw new java.lang.NullPointerException(\"Object should not be null!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4771/buggy-version/OrderedSetImpl.java", "BodyUseAPI": [], "Fixed commit": "3ae45862d3e694b914a0835490e3dd5e55a77553", "Url": "https://api.github.com/repos/klaus94/Queue", "Date": "2015-06-09T18:50:04Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) { throw new java.lang.NullPointerException(\"Object should not be null!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4771/buggy-version/OrderedSetImpl.java", "BodyUseAPI": [], "Fixed commit": "3ae45862d3e694b914a0835490e3dd5e55a77553", "Url": "https://api.github.com/repos/klaus94/Queue", "Date": "2015-06-09T18:50:04Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) { throw new java.lang.NullPointerException(\"Object should not be null!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4771/buggy-version/OrderedSetImpl.java", "BodyUseAPI": [], "Fixed commit": "3ae45862d3e694b914a0835490e3dd5e55a77553", "Url": "https://api.github.com/repos/klaus94/Queue", "Date": "2015-06-09T18:50:04Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(setContains(obj))) { orderedSet.add(i, obj); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4771/buggy-version/OrderedSetImpl.java", "BodyUseAPI": ["java.util.List<T>.add(int,T)"], "Fixed commit": "3ae45862d3e694b914a0835490e3dd5e55a77553", "Url": "https://api.github.com/repos/klaus94/Queue", "Date": "2015-06-09T18:50:04Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i >= (orderedSet.size())) { throw new java.lang.IndexOutOfBoundsException(\"index was too big\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4771/buggy-version/OrderedSetImpl.java", "BodyUseAPI": [], "Fixed commit": "3ae45862d3e694b914a0835490e3dd5e55a77553", "Url": "https://api.github.com/repos/klaus94/Queue", "Date": "2015-06-09T18:50:04Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(setContains(obj))) { T oldElem = orderedSet.get(i); orderedSet.set(i, obj); return oldElem; }else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4771/buggy-version/OrderedSetImpl.java", "BodyUseAPI": ["java.util.List<T>.set(int,T)"], "Fixed commit": "3ae45862d3e694b914a0835490e3dd5e55a77553", "Url": "https://api.github.com/repos/klaus94/Queue", "Date": "2015-06-09T18:50:04Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (potentialEnd) { potentialEndCmdIndex = cmdIndex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4911/buggy-version/src.main.java.io.bdrc.lucene.bo.TibWordTokenizer.java", "BodyUseAPI": [], "Fixed commit": "1f93975239a7dd28ccf681b521461096fa346bbc", "Url": "https://api.github.com/repos/BuddhistDigitalResourceCenter/lucene-bo", "Date": "2017-05-10T14:59:35Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getDb()", "org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((storageDbHelper.getHistory(newsID)) == null) { org.json.JSONObject newsDetail = api.getNews(newsSketch.getString(\"news_ID\")); float score = get_score(wordScoreMap, newsDetail.getJSONArray(\"Keywords\")); array.add(new com.java.a35.newsapp.RecommendAPI.newsAndScore(newsSketch, score)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3362/buggy-version/NewsApp.app.src.main.java.com.java.a35.newsapp.RecommendAPI.java", "BodyUseAPI": [], "Fixed commit": "5e7ba29e2aad3dc509333ac73ecfaee9b0a4e426", "Url": "https://api.github.com/repos/twd2/newsapp", "Date": "2017-09-08T01:02:55Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (username == null) { throw new java.lang.Exception(\"You must be registered to leave a review.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7784/buggy-version/src.main.java.com.theironyard.controlllers.MoseyController.java", "BodyUseAPI": [], "Fixed commit": "f177d4798242ee2706281858e3749205ab986f26", "Url": "https://api.github.com/repos/winstonwaters/Mosey", "Date": "2016-07-27T20:43:47Z"},
{"Line": "=>535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (image != null) { image = image.getFlippedCopy(true, false); images.put(img.key, new java.lang.ref.SoftReference<com.zarkonnen.catengine.Image>(image)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6119/buggy-version/src.com.zarkonnen.catengine.SlickEngine.java", "BodyUseAPI": ["com.zarkonnen.catengine.Image.getFlippedCopy(boolean,boolean)"], "Fixed commit": "f3eb42ac4726072305bbe2880bededa1bc7fb12b", "Url": "https://api.github.com/repos/Zarkonnen/CatSlick", "Date": "2014-07-08T14:14:45Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (params.containsKey(termName)) terms.addObject().put(\"name\", termName).put(\"value\", params.get(termName));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5196/buggy-version/src.main.java.ru.rest.Client.java", "BodyUseAPI": ["terms.addObject().put(java.lang.String,java.lang.String)", "terms.addObject().put(\"name\", termName).put(java.lang.String,params.get(termName))", "ru.rest.utils.ParamsMap.get(java.lang.String)"], "Fixed commit": "a0c9bdbc262f92d99770c668f2ab3bc25f8bb6b8", "Url": "https://api.github.com/repos/28MikeV82/GetOrSendPDF", "Date": "2016-01-19T11:37:41Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(commandesAAnnuller.isEmpty())) { controleur.commande.Commande commande = commandesAAnnuller.pop(); commandesARetablir.push(commande); commande.annuler(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5940/buggy-version/src.main.java.controleur.commande.Historique.java", "BodyUseAPI": ["java.util.Deque<controleur.commande.Commande>.pop()"], "Fixed commit": "610b644ab5ee482dad7492c1e906ff7037e55ed5", "Url": "https://api.github.com/repos/Hexabinome/devoo", "Date": "2015-11-29T17:45:06Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (controleurDonnees.getHist().estVideCommandesARetablir()) { controleurDonnees.notifyAllRetablirObserveurs(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5940/buggy-version/src.main.java.controleur.commande.CommandeAjouterLivraison.java", "BodyUseAPI": ["controleur.ControleurDonnees.notifyAllRetablirObserveurs(boolean)"], "Fixed commit": "610b644ab5ee482dad7492c1e906ff7037e55ed5", "Url": "https://api.github.com/repos/Hexabinome/devoo", "Date": "2015-11-29T17:45:06Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (controleurDonnees.getHist().estVideCommandesAAnnuler()) controleurDonnees.notifyAllAnnulerObserveurs(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5940/buggy-version/src.main.java.controleur.commande.CommandeAjouterLivraison.java", "BodyUseAPI": ["controleur.ControleurDonnees.notifyAllAnnulerObserveurs(boolean)"], "Fixed commit": "610b644ab5ee482dad7492c1e906ff7037e55ed5", "Url": "https://api.github.com/repos/Hexabinome/devoo", "Date": "2015-11-29T17:45:06Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((v == (btnBack)) || (v == (btnBackTransparent))) { if ((fragment.BaseServiceFragment.status) == 3) { }else if ((fragment.BaseServiceFragment.status) == 4) { if (((NOCAttachmentPage._companyDocuments) == null) || ((NOCAttachmentPage._companyDocuments.size()) == 0)) { fragment.BaseServiceFragment.status = 3; btnNOC3.setBackground(getActivity().getResources().getDrawable(R.drawable.noc_selector)); btnNOC3.setSelected(false); btnNOC3.setTextColor(getActivity().getResources().getColor(R.color.white)); btnNOC3.setGravity(Gravity.CENTER); btnNOC3.setText(\"3\"); btnNext.setText(\"Next\"); tvTitle.setText(\"New Noc\"); btnNOC4.setBackground(getActivity().getResources().getDrawable(R.drawable.noc_selector)); btnNOC4.setSelected(false); btnNOC4.setTextColor(getActivity().getResources().getColor(R.color.white)); btnNOC4.setGravity(Gravity.CENTER); btnNOC4.setText(\"4\"); } } super.onClick(v); }else { super.onClick(v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/129/buggy-version/DubaiSouth.src.fragmentActivity.NOCScreen.NocMainFragment.java", "BodyUseAPI": ["fragment.BaseServiceFragment.onClick(android.view.View)", "fragment.BaseServiceFragment.onClick(android.view.View)"], "Fixed commit": "865c2dbd780a035d86ba639bdad433a3fe8c4f8b", "Url": "https://api.github.com/repos/Cloud-Concept/dwc-DubaiSouth-Android", "Date": "2015-10-14T06:04:53Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((v == (btnBack)) || (v == (btnBackTransparent))) { if ((fragment.BaseServiceFragment.status) == 3) { }else if ((fragment.BaseServiceFragment.status) == 4) { if (((CompanyNOCAttachmentPage._companyDocuments) == null) || ((CompanyNOCAttachmentPage._companyDocuments.size()) == 0)) { fragment.BaseServiceFragment.status = 3; btnNOC4.setBackground(getActivity().getResources().getDrawable(R.drawable.noc_selector)); btnNOC4.setSelected(false); btnNOC4.setTextColor(getActivity().getResources().getColor(R.color.white)); btnNOC4.setGravity(Gravity.CENTER); btnNOC4.setText(\"4\"); btnNext.setText(\"Next\"); tvTitle.setText(\"Company NOC\"); fragmentActivity.CompanyNOC.CompanyNocMainFragment.insertedServiceId = null; fragmentActivity.CompanyNOC.CompanyNocMainFragment.insertedCaseId = null; btnNOC3.setBackground(getActivity().getResources().getDrawable(R.drawable.noc_selector)); btnNOC3.setSelected(false); btnNOC3.setTextColor(getActivity().getResources().getColor(R.color.white)); btnNOC3.setGravity(Gravity.CENTER); btnNOC3.setText(\"3\"); } } super.onClick(v); }else { super.onClick(v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/129/buggy-version/DubaiSouth.src.fragmentActivity.CompanyNOC.CompanyNocMainFragment.java", "BodyUseAPI": ["fragment.BaseServiceFragment.onClick(android.view.View)", "fragment.BaseServiceFragment.onClick(android.view.View)"], "Fixed commit": "865c2dbd780a035d86ba639bdad433a3fe8c4f8b", "Url": "https://api.github.com/repos/Cloud-Concept/dwc-DubaiSouth-Android", "Date": "2015-10-14T06:04:53Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.myapp.handbook.HttpConnectionUtil.isOnline(this.getActivity().getApplicationContext())) == true) { new com.myapp.handbook.TeacherNoteFragment.FetchTeacherAssignmentAsyncTask().execute(); SetupView(); }else { android.widget.Toast.makeText(getActivity().getApplicationContext(), \"No Internet connection!\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3594/buggy-version/mobile.Android.app.src.main.java.com.myapp.handbook.TeacherNoteFragment.java", "BodyUseAPI": [], "Fixed commit": "6046d51576e9f90bab80f2c14e401d30e213effd", "Url": "https://api.github.com/repos/ashutoshpurohit/SCHPARERP", "Date": "2017-07-11T05:46:28Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getResources().getBoolean(R.bool.landscape_only)) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8445/buggy-version/app.src.main.java.com.example.android.popularmovies2.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "69f900b01feb1b27729fa93947cfb73efff8b1b5", "Url": "https://api.github.com/repos/amadhuri/PopularMovies2", "Date": "2015-12-12T10:04:36Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSweepAngle) == 0) { currentSweepAngle = 0.1F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4503/buggy-version/app.bluecar.src.main.java.com.blue.car.custom.SpeedMainView.java", "BodyUseAPI": [], "Fixed commit": "eb290fe5888a45b2a12fd42fe73dc22d35df36e5", "Url": "https://api.github.com/repos/jacksunjian/android", "Date": "2017-03-28T12:12:29Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cpw.mods.fml.common.FMLCommonHandler.instance().getEffectiveSide()) == (cpw.mods.fml.relauncher.Side.CLIENT)) { cpw.mods.fml.common.registry.LanguageRegistry.instance().addStringLocalization(((\"entity.\" + var1) + \".name\"), cpw.mods.fml.common.registry.LanguageRegistry.instance().getStringLocalization(((\"entity.GalacticraftCore.\" + var1) + \".name\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2604/buggy-version/common.micdoodle8.mods.galacticraft.core.util.GCCoreUtil.java", "BodyUseAPI": [], "Fixed commit": "693769269bd19c99fcca463efb91a2cf27242f10", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2013-07-08T03:41:02Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cpw.mods.fml.common.FMLCommonHandler.instance().getEffectiveSide()) == (cpw.mods.fml.relauncher.Side.CLIENT)) { cpw.mods.fml.common.registry.LanguageRegistry.instance().addStringLocalization(((\"entity.\" + var1) + \".name\"), cpw.mods.fml.common.registry.LanguageRegistry.instance().getStringLocalization(((\"entity.GalacticraftCore.\" + var1) + \".name\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2604/buggy-version/common.micdoodle8.mods.galacticraft.core.util.GCCoreUtil.java", "BodyUseAPI": [], "Fixed commit": "693769269bd19c99fcca463efb91a2cf27242f10", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2013-07-08T03:41:02Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getRoute().iterator().next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(getPDPModel().getParcelState(cur).isPickedUp())) { com.github.rinde.logistics.pdptw.mas.Truck.LOGGER.trace(\"{} claim:{}\", this, cur); if (communicator.getParcels().contains(cur)) { communicator.claim(cur); }else { com.github.rinde.logistics.pdptw.mas.Truck.LOGGER.warn(\"Attempt to visit parcel that is not assigned to me.\"); final java.util.List<com.github.rinde.rinsim.core.model.pdp.Parcel> currentRoute = new java.util.ArrayList(getRoute()); currentRoute.removeAll(java.util.Collections.singleton(cur)); setRoute(currentRoute); com.github.rinde.logistics.pdptw.mas.Truck.LOGGER.warn(\"Removed parcel from route:{}.\", cur); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1619/buggy-version/src.main.java.com.github.rinde.logistics.pdptw.mas.Truck.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,com.github.rinde.rinsim.core.model.pdp.Parcel)", "communicator.getParcels().contains(com.github.rinde.rinsim.core.model.pdp.Parcel)", "com.github.rinde.logistics.pdptw.mas.comm.Communicator.claim(com.github.rinde.rinsim.core.model.pdp.Parcel)", "java.util.List<com.github.rinde.rinsim.core.model.pdp.Parcel>.removeAll(java.util.Set)", "java.util.Collections.singleton(com.github.rinde.rinsim.core.model.pdp.Parcel)", "org.slf4j.Logger.trace(java.lang.String,com.github.rinde.logistics.pdptw.mas.Truck,com.github.rinde.rinsim.core.model.pdp.Parcel)"], "Fixed commit": "17439097663977fcab3989f778e513a62f552380", "Url": "https://api.github.com/repos/VincentVanGestel/RinLog", "Date": "2016-09-29T16:02:39Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rhs.actual.clazz) == (void.class)) { throw createError(new java.lang.IllegalArgumentException(\"Right-hand side cannot be a [void] type for assignment.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8973/buggy-version/modules.lang-painless.src.main.java.org.elasticsearch.painless.node.EAssignment.java", "BodyUseAPI": [], "Fixed commit": "320ad1065796979d25cab759367203337970b90e", "Url": "https://api.github.com/repos/elastic/elasticsearch", "Date": "2017-11-28T21:44:52Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.elasticsearch.painless.node.AExpression>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((expression.actual.clazz) == (void.class)) { throw createError(new java.lang.IllegalArgumentException(((\"Argument(s) cannot be of [void] type when calling method [\" + (name)) + \"].\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8973/buggy-version/modules.lang-painless.src.main.java.org.elasticsearch.painless.node.PSubDefCall.java", "BodyUseAPI": [], "Fixed commit": "320ad1065796979d25cab759367203337970b90e", "Url": "https://api.github.com/repos/elastic/elasticsearch", "Date": "2017-11-28T21:44:52Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.lff.p2.p3d.P3DHeading.head) >= 0) { org.lff.p2.p3d.P3DHeading.head = (org.lff.p2.p3d.P3DHeading.head) % 360; }else { org.lff.p2.p3d.P3DHeading.head = java.lang.Math.abs(org.lff.p2.p3d.P3DHeading.head); org.lff.p2.p3d.P3DHeading.head = 360 - (org.lff.p2.p3d.P3DHeading.head); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1729/buggy-version/src.org.lff.p2.p3d.P3DHeading.java", "BodyUseAPI": [], "Fixed commit": "84c3adcb5f306c4b79f78cc38693087ce71903c7", "Url": "https://api.github.com/repos/lff0305/PiCodes", "Date": "2015-11-12T13:51:55Z"},
{"Line": "=>2343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (intent != null) { mImportPath = intent.getStringExtra(\"importPath\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4151/buggy-version/src.com.ichi2.anki.DeckPicker.java", "BodyUseAPI": ["android.content.Intent.getStringExtra(java.lang.String)"], "Fixed commit": "1a6047e21ec167228b103f68fb77e8097871380b", "Url": "https://api.github.com/repos/ospalh/Anki-Android", "Date": "2012-09-13T08:10:19Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(store.isConnected())) { store.connect(account.getHost(), account.getPort(), account.getUsername(), account.getPassword()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8597/buggy-version/src.main.java.org.kore.kolab.notes.imap.RemoteTags.java", "BodyUseAPI": ["korex.mail.Store.connect(account.getHost(),account.getPort(),account.getUsername(),account.getPassword())"], "Fixed commit": "ab6516783c6371172a033468161b1f9ae78675f7", "Url": "https://api.github.com/repos/konradrenner/kolabnotes-java", "Date": "2015-11-16T18:45:05Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { textView.setText(R.string.card_skill_default_text); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/45/buggy-version/app.src.main.java.com.thoughtworks.lhli.lovelive_rock.adapter.MediumCardListAdapter.java", "BodyUseAPI": [], "Fixed commit": "b43e36cae9af7eb3d1af45d344ed15f4a4af6281", "Url": "https://api.github.com/repos/Kevin170113664/lovelive_rock", "Date": "2015-12-12T03:58:42Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (destinationParent != null) { destinationParent.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3492/buggy-version/src.net.sf.memoranda.util.LOCReader.java", "BodyUseAPI": [], "Fixed commit": "3f493dced279e574b1d278d0ab70d2fbd5ff3907", "Url": "https://api.github.com/repos/cst316/spring16project-Fortran", "Date": "2016-03-20T01:39:57Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bytes == (-1)) return \"-1byte\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4948/buggy-version/util.src.main.java.srez.util.format.SizeUtil.java", "BodyUseAPI": [], "Fixed commit": "85cdeb27f8dec3c44229010166074128b8ac84b1", "Url": "https://api.github.com/repos/xxsrez/temp", "Date": "2016-02-06T09:44:16Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getRowCount()) > 0) ((javax.swing.JComponent) (this.getColumnModel().getColumn(0).getHeaderRenderer())).setEnabled(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7355/buggy-version/DeliveryPerformance.src.com.sff.report_performance.ReportParameterTable.java", "BodyUseAPI": [], "Fixed commit": "ee1653482d7e7a7cace08d093d3d042c35ae56b6", "Url": "https://api.github.com/repos/steinsholt/SelectionGUI", "Date": "2013-11-26T14:30:57Z"},
{"Line": "=>498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (it.polimi.dima.watchdog.utilities.MyPrefFiles.existsPreference(it.polimi.dima.watchdog.utilities.MyPrefFiles.COMMAND_SESSION, (other + (it.polimi.dima.watchdog.utilities.MyPrefFiles.IV_FOR_M4)), ctx)) { it.polimi.dima.watchdog.utilities.MyPrefFiles.deleteMyPreference(it.polimi.dima.watchdog.utilities.MyPrefFiles.COMMAND_SESSION, (other + (it.polimi.dima.watchdog.utilities.MyPrefFiles.IV_FOR_M4)), ctx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5838/buggy-version/src.it.polimi.dima.watchdog.utilities.MyPrefFiles.java", "BodyUseAPI": ["it.polimi.dima.watchdog.utilities.MyPrefFiles.deleteMyPreference(java.lang.String,java.lang.String,android.content.Context)"], "Fixed commit": "17bbeb5bd60fad1b3a1fe16157bf92d6b3245b4d", "Url": "https://api.github.com/repos/ClaudioRizzo/WatchDog", "Date": "2014-06-05T20:07:10Z"},
{"Line": "=>501", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (it.polimi.dima.watchdog.utilities.MyPrefFiles.existsPreference(it.polimi.dima.watchdog.utilities.MyPrefFiles.COMMAND_SESSION, (other + (it.polimi.dima.watchdog.utilities.MyPrefFiles.KEY_FOR_M4)), ctx)) { it.polimi.dima.watchdog.utilities.MyPrefFiles.deleteMyPreference(it.polimi.dima.watchdog.utilities.MyPrefFiles.COMMAND_SESSION, (other + (it.polimi.dima.watchdog.utilities.MyPrefFiles.KEY_FOR_M4)), ctx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5838/buggy-version/src.it.polimi.dima.watchdog.utilities.MyPrefFiles.java", "BodyUseAPI": ["it.polimi.dima.watchdog.utilities.MyPrefFiles.deleteMyPreference(java.lang.String,java.lang.String,android.content.Context)"], "Fixed commit": "17bbeb5bd60fad1b3a1fe16157bf92d6b3245b4d", "Url": "https://api.github.com/repos/ClaudioRizzo/WatchDog", "Date": "2014-06-05T20:07:10Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (task.isCancelled()) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6022/buggy-version/araqne-logstorage.src.main.java.org.araqne.logstorage.dump.engine.LocalImportWorker.java", "BodyUseAPI": [], "Fixed commit": "b70978a26957a7d328b7aa2ba781da3a77cae18f", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-07-17T05:57:36Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((config.getKeys(\"mechanics.head-drops.drop-rates\")) != null) for (java.lang.String key : config.getKeys(\"mechanics.head-drops.drop-rates\")) headDropsCustomDropRate.put(key, config.getDouble((\"mechanics.head-drops.drop-rates.\" + key)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4008/buggy-version/src.main.java.com.sk89q.craftbook.util.config.YAMLConfiguration.java", "BodyUseAPI": ["com.sk89q.util.yaml.YAMLProcessor.getDouble(java.lang.String)", "com.sk89q.util.yaml.YAMLProcessor.getKeys(java.lang.String)", "com.sk89q.craftbook.util.config.YAMLConfiguration.put(java.lang.String,config.getDouble((\"mechanics.head-drops.drop-rates.\" + key)))"], "Fixed commit": "a71a0acf608f16ec68212a2bdaa7cf4040654aec", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-06-25T23:16:43Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((config.getKeys(\"mechanics.head-drops.custom-mob-skins\")) != null) for (java.lang.String key : config.getKeys(\"mechanics.head-drops.custom-mob-skins\")) headDropsCustomSkins.put(key, config.getString((\"mechanics.head-drops.custom-mob-skins.\" + key)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4008/buggy-version/src.main.java.com.sk89q.craftbook.util.config.YAMLConfiguration.java", "BodyUseAPI": ["com.sk89q.util.yaml.YAMLProcessor.getKeys(java.lang.String)", "com.sk89q.util.yaml.YAMLProcessor.getString(java.lang.String)", "com.sk89q.craftbook.util.config.YAMLConfiguration.put(java.lang.String,config.getString((\"mechanics.head-drops.custom-mob-skins.\" + key)))"], "Fixed commit": "a71a0acf608f16ec68212a2bdaa7cf4040654aec", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-06-25T23:16:43Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mTextures[0]) != 0) { android.opengl.GLES20.glDeleteTextures(1, mTextures, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5454/buggy-version/dConnectDevicePlugin.dConnectDeviceTheta.app.src.main.java.org.deviceconnect.android.deviceplugin.theta.core.SphericalViewRenderer.java", "BodyUseAPI": ["android.opengl.GLES20.glDeleteTextures(int,int[],int)"], "Fixed commit": "f680ae6022276c4c8442e04a0805311c306708f7", "Url": "https://api.github.com/repos/TakayukiHoshi1984/DeviceConnect-Android", "Date": "2015-12-10T12:20:23Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type.equals(\"Temp\")) { type = \"temperature\"; }else if (type.equals(\"Light\")) { type = \"light\"; }else if (type.equals(\"Humidity\")) { type = \"humidity\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4915/buggy-version/src.clientgroup22.ClientGroup22.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "33e6de655e43d29dbd6bd402eb1fd1bb343e2944", "Url": "https://api.github.com/repos/MatthewWood/ClientGroup22", "Date": "2013-04-11T15:39:47Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((type.equals(\"light\")) || (type.equals(\"temperature\"))) || (type.equals(\"humidity\"))) { reading.put(\"type\", type); reading.put(\"value\", value); reading.put(\"time\", time); readings.put(reading); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4915/buggy-version/src.clientgroup22.ClientGroup22.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,java.lang.String)"], "Fixed commit": "33e6de655e43d29dbd6bd402eb1fd1bb343e2944", "Url": "https://api.github.com/repos/MatthewWood/ClientGroup22", "Date": "2013-04-11T15:39:47Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.util.PsiTreeUtil.getChildOfType(com.intellij.psi.PsiFile,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (yamlDocument != null) { return fr.adrienbrault.idea.symfony2plugin.util.yaml.YamlKeyFinder.find(yamlDocument, keyName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2882/buggy-version/src.fr.adrienbrault.idea.symfony2plugin.util.yaml.YamlHelper.java", "BodyUseAPI": ["fr.adrienbrault.idea.symfony2plugin.util.yaml.YamlKeyFinder.find(org.jetbrains.yaml.psi.YAMLDocument,java.lang.String)"], "Fixed commit": "13d0b5829d45c532c53bdcbd02686637ab52f301", "Url": "https://api.github.com/repos/Haehnchen/idea-php-symfony2-plugin", "Date": "2014-06-22T09:28:44Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JFileChooser.getSelectedFile()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (file.exists()) { java.lang.String filePath = file.getAbsolutePath(); if (fixExtension && (!(filePath.endsWith((\".\" + extension))))) { file = new java.io.File(((filePath + \".\") + extension)); } return file; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7410/buggy-version/OpenLaTeXStudio.EditorModule.src.latexstudio.editor.files.FileChooserService.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()"], "Fixed commit": "cc1f4cd9969cb1098878e1cf5a8aeda2c3d094c5", "Url": "https://api.github.com/repos/sebbrudzinski/Open-LaTeX-Studio", "Date": "2015-07-08T20:26:07Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((footer) == null) { footer = new cn.zgn.library.xrecyclerView.LoadMoreFooter(getContext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2896/buggy-version/library.src.main.java.cn.zgn.library.XRecyclerView.java", "BodyUseAPI": [], "Fixed commit": "b2bfdfbead4a32c4219c4c1d97465f64d7fc4191", "Url": "https://api.github.com/repos/zhangguoning/XRecyclerView", "Date": "2017-06-18T14:22:59Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((value != null) && (value.isTextual())) return value.textValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4764/buggy-version/cascading-nested-json.src.main.java.cascading.nested.json.JSONCoercibleType.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.JsonNode.textValue()"], "Fixed commit": "ff1aa6e574152df88e9f8d8ea86aac79944935e1", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2017-12-01T03:49:30Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mitzi.IPosition.getPossibleMoves()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (moves.isEmpty()) { (mitzi.BoardAnalyzer.eval_counter_seldepth)++; if (position.isCheckPosition()) { return new mitzi.AnalysisResult(((mitzi.MateScores.NEG_INF) * side_sign), false, false, 0, 0, Flag.EXACT); }else { return new mitzi.AnalysisResult(0, true, false, 0, 0, Flag.EXACT); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5579/buggy-version/src.mitzi.BoardAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "7b8a63e907ad8010079e134e1a06091ac7885afb", "Url": "https://api.github.com/repos/lew/mitzi", "Date": "2013-11-17T17:56:47Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(p.getAllowed().contains(this))) { p.addAllowed(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7878/buggy-version/app.src.main.java.models.Player.java", "BodyUseAPI": ["models.Player.addAllowed(models.Player)"], "Fixed commit": "41aae22c5e1054136aaaa098cbd25b9045176350", "Url": "https://api.github.com/repos/Linuslb/dare-party", "Date": "2016-07-15T09:16:19Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mod.name.equals(\"app\")) { mod.path = \"\"; sClass = \"services.\" + (service.replace(\" \", \"\").trim()); }else { java.lang.String gwtpath = play.modules.gwt2.GWT2Plugin.modulesDir(); mod.path = (gwtpath + \"/\") + module; sClass = (((gwtpath + \".\") + (mod.name)) + \".services.\") + (service.replace(\" \", \"\").trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5072/buggy-version/src.play.modules.gwt2.GWT2Plugin.java", "BodyUseAPI": [], "Fixed commit": "d6d0b5d56b151e0f2d399ec0affc464000b28a4d", "Url": "https://api.github.com/repos/vbuzzano/play-gwt2", "Date": "2011-09-19T13:56:43Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((progressMaterialDialog) != null) { if (progressMaterialDialog.isShowing()) { progressMaterialDialog.dismiss(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8603/buggy-version/CZBaseDevTool.src.main.java.com.xinyi.czbasedevtool.base.manager.ui_about.dialog.MaterialDialogFactory.java", "BodyUseAPI": [], "Fixed commit": "97d5d562f12d7d81e71a2dc155673c11ccf5f049", "Url": "https://api.github.com/repos/XinYiWorld/CZBaseDevLibary", "Date": "2017-06-07T01:33:24Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.mlh.services.SystemStateService.getDisplayMetadata()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (md != null) { md.setColors(ls); ssService.setDisplayMetadata(md); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7609/buggy-version/src.main.java.io.mlh.controllers.AlexaController.java", "BodyUseAPI": ["io.mlh.services.SystemStateService.setDisplayMetadata(io.mlh.objects.Metadata)", "io.mlh.objects.Metadata.setColors(java.util.List<java.lang.String>)"], "Fixed commit": "44436f1312cdd0f689b43af01c77b0866bd50e08", "Url": "https://api.github.com/repos/crownz/HackSheffieldFront", "Date": "2016-10-16T03:32:09Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.pellet) != null) && (this.pellet.getConf().isSourcePellet())) { this.pellet.execute(tupleIterator, emitter, pelletStateManager); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2915/buggy-version/floe-core.src.main.java.edu.usc.pgroup.floe.flake.PelletExecutor.java", "BodyUseAPI": ["edu.usc.pgroup.floe.app.pellets.IteratorPellet.execute(edu.usc.pgroup.floe.app.pellets.TupleItertaor,edu.usc.pgroup.floe.flake.messaging.MessageEmitter,edu.usc.pgroup.floe.flake.statemanager.StateManager)"], "Fixed commit": "31a0a75471c7ad99662de46eabc3a84f86d81a65", "Url": "https://api.github.com/repos/usc-cloud/floe2", "Date": "2015-04-17T21:42:39Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.pellet) != null) && (this.pellet.getConf().isSourcePellet())) { pollerItems.poll(0); }else { pollerItems.poll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2915/buggy-version/floe-core.src.main.java.edu.usc.pgroup.floe.flake.PelletExecutor.java", "BodyUseAPI": [], "Fixed commit": "31a0a75471c7ad99662de46eabc3a84f86d81a65", "Url": "https://api.github.com/repos/usc-cloud/floe2", "Date": "2015-04-17T21:42:39Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ssd.project.mickeycj.todosapp.EditItemActivity.getItemTitleFromEditText()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(itemTitle.equals(title))) { ssd.project.mickeycj.todosapp.model.Repository.removeItemFromCurrentItemListInCurrentTodo(todoIndex, itemTitle); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8242/buggy-version/app.src.main.java.ssd.project.mickeycj.todosapp.EditItemActivity.java", "BodyUseAPI": ["ssd.project.mickeycj.todosapp.model.Repository.removeItemFromCurrentItemListInCurrentTodo(int,java.lang.String)"], "Fixed commit": "fdf1e5bdc63e6535e56c4d136238ac226b69e220", "Url": "https://api.github.com/repos/mickeycj/todos-app-android", "Date": "2017-06-06T10:58:44Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Integer.parseInt(noOfEndPointsString)) < 1) { errorLabel.setText(\"Invalid number provided for no. of end points.\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6997/buggy-version/src.com.qburst.plugin.android.retrofit.forms.Form1.java", "BodyUseAPI": [], "Fixed commit": "7ec8d5874e06341b090c5abdb88822ec3a41ece5", "Url": "https://api.github.com/repos/sakkeerhussain/QAssist", "Date": "2017-03-16T10:38:47Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((preStatement) != null) { s = new com.tr.rp.ast.statements.Composition(preStatement, init, w); }else { s = new com.tr.rp.ast.statements.Composition(init, w); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3087/buggy-version/src.main.java.com.tr.rp.ast.statements.ForStatement.java", "BodyUseAPI": [], "Fixed commit": "b6529fb40fbba1abf4a40345c505b6676d3dca61", "Url": "https://api.github.com/repos/tjitze/RankPL", "Date": "2017-09-16T22:31:41Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOnComboListener) != null) { mView.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { long thisClickTime = java.lang.System.currentTimeMillis(); if ((thisClickTime - (lastClickTime)) <= (mMaxInterval)) { (mComboCount)++; }else { mComboCount = 0; } lastClickTime = thisClickTime; mOnComboListener.onCombo(v, mComboCount); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3250/buggy-version/combolistener.src.main.java.com.gjiazhe.combolistener.ComboListenerBuilder.java", "BodyUseAPI": [], "Fixed commit": "90886260a544ed12556ac62a31da94d2ea6c9cdc", "Url": "https://api.github.com/repos/gjiazhe/ComboListener", "Date": "2016-04-14T06:32:32Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (depend.isProcessed(CodeEntity.Process.TEMPLATE)) content += codemate.builder.MakefileWriter.append(content, ((\" \" + (depend.getName())) + \".t.o\")); else content += codemate.builder.MakefileWriter.append(content, ((\" \" + (depend.getName())) + \".o\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3885/buggy-version/src.codemate.builder.MakefileWriter.java", "BodyUseAPI": ["codemate.builder.MakefileWriter.append(java.lang.String,((\" \" + (depend.getName())) + \".o\"))", "codemate.builder.MakefileWriter.append(java.lang.String,((\" \" + (depend.getName())) + \".t.o\"))", "codemate.builder.CodeEntity.getName()", "codemate.builder.CodeEntity.getName()"], "Fixed commit": "c44181e4364d72ac3662ae3c65f0bd143c783900", "Url": "https://api.github.com/repos/dongli/CodeMate", "Date": "2013-07-25T06:16:29Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (internalDepend.isProcessed(CodeEntity.Process.TEMPLATE)) tmp = (internalDepend.getName()) + \".t.o\"; else tmp = (internalDepend.getName()) + \".o\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3885/buggy-version/src.codemate.builder.MakefileWriter.java", "BodyUseAPI": ["codemate.builder.CodeEntity.getName()", "codemate.builder.CodeEntity.getName()"], "Fixed commit": "c44181e4364d72ac3662ae3c65f0bd143c783900", "Url": "https://api.github.com/repos/dongli/CodeMate", "Date": "2013-07-25T06:16:29Z"},
{"Line": "=>925", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchView) != null) { outState.putBoolean(com.owncloud.android.ui.activity.FileDisplayActivity.KEY_IS_SEARCH_OPEN, (!(mSearchView.isIconified()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7127/buggy-version/src.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "3ea35ff6831909f8c89ed914b75be49a2fda1e09", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-23T10:00:13Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (linkedBrokerDeserialized.isAccountLinkDelayedError()) { linkedBroker.setError(linkedBrokerDeserialized.getError()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5172/buggy-version/tradeit-android-sdk.src.main.java.it.trade.android.sdk.model.TradeItLinkedBrokerCache.java", "BodyUseAPI": ["it.trade.android.sdk.model.TradeItLinkedBrokerParcelable.getError()", "it.trade.android.sdk.model.TradeItLinkedBrokerParcelable.setError(linkedBrokerDeserialized.getError())"], "Fixed commit": "b1175e10cfe133da91a7290b57f4fdc4ba6ed570", "Url": "https://api.github.com/repos/tradingticket/AndroidSDK", "Date": "2017-08-30T15:12:47Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jwkSet == null) { jwkSet = org.apache.cxf.rs.security.jose.jwk.JwkUtils.loadJwkSet(props, m.getExchange().getBus(), cb, reader); if (key != null) { m.getExchange().put(key, jwkSet); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1618/buggy-version/rt.rs.security.jose.src.main.java.org.apache.cxf.rs.security.jose.jwk.JwkUtils.java", "BodyUseAPI": [], "Fixed commit": "28346081d37417f7ad8994569c5c14d4cc99b647", "Url": "https://api.github.com/repos/escabe/cxf", "Date": "2014-12-18T17:17:33Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, java.util.Map<java.lang.Integer, org.yeastrc.xlink.dto.AnnotationTypeDTO>>.get(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (all_Psm_Filterable_PerSearchId != null) { psmAnnotationTypeDTO = all_Psm_Filterable_PerSearchId.get(cutoffsAppliedOnImportDTO.getAnnotationTypeId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6855/buggy-version/src.org.yeastrc.xlink.www.objects.SearchDTODetailsDisplayWrapper.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, org.yeastrc.xlink.dto.AnnotationTypeDTO>.get(cutoffsAppliedOnImportDTO.getAnnotationTypeId())"], "Fixed commit": "fc0f25d1b1a4d2b3cfa131446dd520cea27da87b", "Url": "https://api.github.com/repos/yeastrc/proxl-web-app", "Date": "2016-07-28T23:19:28Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, java.util.Map<java.lang.Integer, org.yeastrc.xlink.dto.AnnotationTypeDTO>>.get(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (all_Peptide_Filterable_PerSearchId != null) { peptideAnnotationTypeDTO = all_Peptide_Filterable_PerSearchId.get(cutoffsAppliedOnImportDTO.getAnnotationTypeId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6855/buggy-version/src.org.yeastrc.xlink.www.objects.SearchDTODetailsDisplayWrapper.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, org.yeastrc.xlink.dto.AnnotationTypeDTO>.get(cutoffsAppliedOnImportDTO.getAnnotationTypeId())"], "Fixed commit": "fc0f25d1b1a4d2b3cfa131446dd520cea27da87b", "Url": "https://api.github.com/repos/yeastrc/proxl-web-app", "Date": "2016-07-28T23:19:28Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((workOrder1.getWorkOrderID()) == (workOrder2.getWorkOrderID())) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7850/buggy-version/src.main.java.com.ss.workOrder.service.WorkOrderServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "1d3af9b5f1f0bc4e68f50a550a0095e9d7409c8d", "Url": "https://api.github.com/repos/sumedhasilla/ssWorkOrder", "Date": "2015-07-29T04:54:06Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.apiman.gateway.engine.policies.config.basicauth.LDAPIdentitySource.getUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (url.startsWith(\"ldaps\")) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8949/buggy-version/gateway.engine.policies.src.main.java.io.apiman.gateway.engine.policies.auth.LDAPIdentityValidator.java", "BodyUseAPI": [], "Fixed commit": "8509e7bf8f457ae5e68d3b8a2fb5722499385272", "Url": "https://api.github.com/repos/apiman/apiman", "Date": "2015-05-05T14:57:41Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p == null) { java.lang.System.out.println(((\"NULL \" + name) + \" was waht it should've bene\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4287/buggy-version/FFR.src.com.example.fantasyfootballrankings.ClassFiles.LittleStorage.Draft.java", "BodyUseAPI": [], "Fixed commit": "1b6af15046e3f09ea72897a5c55356612ca92b1d", "Url": "https://api.github.com/repos/jbailey2010/FFR", "Date": "2013-09-21T07:17:35Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.rightCodeFragment) == null) { cloneClass.getGhostFragments().get(codeFragmentId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/9247/buggy-version/src.main.java.jp.ac.osaka_u.ist.sdl.scanalyzer.ui.model.CloneClassListViewModel.java", "BodyUseAPI": [], "Fixed commit": "952f1ec9c321f31aa8ee31a86e4eea0aeb82cb97", "Url": "https://api.github.com/repos/k-hotta/SCAnalyzer", "Date": "2014-12-04T18:05:22Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.leftCodeFragment) == null) { cloneClass.getGhostFragments().get(codeFragmentId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/9247/buggy-version/src.main.java.jp.ac.osaka_u.ist.sdl.scanalyzer.ui.model.CloneClassListViewModel.java", "BodyUseAPI": [], "Fixed commit": "952f1ec9c321f31aa8ee31a86e4eea0aeb82cb97", "Url": "https://api.github.com/repos/k-hotta/SCAnalyzer", "Date": "2014-12-04T18:05:22Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (line == null) { --blankTime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1965/buggy-version/src.com.sap.sea.Node.java", "BodyUseAPI": [], "Fixed commit": "49312ec4d0fcfc6735547eda600687e98a204490", "Url": "https://api.github.com/repos/templefox/Sea", "Date": "2015-02-11T09:29:57Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (line == null) { --blankTime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1965/buggy-version/src.com.sap.sea.Node.java", "BodyUseAPI": [], "Fixed commit": "49312ec4d0fcfc6735547eda600687e98a204490", "Url": "https://api.github.com/repos/templefox/Sea", "Date": "2015-02-11T09:29:57Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (time > (timeLimit)) addXMaps((time - (timeLimit)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6710/buggy-version/source.Storage.java", "BodyUseAPI": ["source.Storage.addXMaps(int)"], "Fixed commit": "34b6bb82fd8fa42017e47cd875f66aca9cd49e4c", "Url": "https://api.github.com/repos/N33t/WallE", "Date": "2016-05-06T16:27:59Z"},
{"Line": "=>556", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (canSense(loc)) { return gameWorld.getOre(loc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/526/buggy-version/src.main.battlecode.world.RobotControllerImpl.java", "BodyUseAPI": ["battlecode.world.RobotControllerImpl.getOre(battlecode.common.MapLocation)"], "Fixed commit": "2de827e4618003dd7656582736c911d4a4f19cf2", "Url": "https://api.github.com/repos/battlecode/battlecode-server-2017", "Date": "2015-01-06T06:52:55Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (step > 30) { step = 30; }else if (step > 1) { step = step - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3233/buggy-version/render-app.src.main.java.org.janelia.alignment.util.LabelImageProcessorCache.java", "BodyUseAPI": [], "Fixed commit": "2c93041f565371bec657e1539ea47f4d73000b98", "Url": "https://api.github.com/repos/saalfeldlab/render", "Date": "2016-01-20T21:34:12Z"},
{"Line": "=>759", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (exchange.hasOut()) { body = exchange.getOut().getBody(); }else { body = exchange.getIn().getBody(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1406/buggy-version/camel-core.src.main.java.org.apache.camel.processor.CamelInternalProcessor.java", "BodyUseAPI": ["org.apache.camel.Exchange.getOut()", "org.apache.camel.Exchange.getIn()", "exchange.getIn().getBody()", "exchange.getOut().getBody()"], "Fixed commit": "0368fcb1c37606875b425d86ebf138d7557f50a9", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-12-18T04:23:36Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (audioState.equals(com.thrivepregnancy.ui.DiaryEntryActivity.AudioState.RECORDING)) { findViewById(R.id.diary_date).setEnabled(false); findViewById(R.id.diary_notes).setEnabled(false); findViewById(R.id.diary_delete).setEnabled(false); findViewById(R.id.diary_create).setEnabled(false); findViewById(R.id.diary_create_text).setEnabled(false); }else { findViewById(R.id.diary_date).setEnabled(true); findViewById(R.id.diary_notes).setEnabled(true); findViewById(R.id.diary_delete).setEnabled(true); findViewById(R.id.diary_create).setEnabled(true); findViewById(R.id.diary_create_text).setEnabled(true); if (audioState.equals(com.thrivepregnancy.ui.DiaryEntryActivity.AudioState.FINISHED)) { android.util.Log.d(MainActivity.DEBUG_TAG, \"Creating new AudioPlayer\"); if ((audioPlayer) == null) { audioPlayer = new com.thrivepregnancy.ui.AudioPlayer(this, areaFinished, m_audioFileName); } }else if (audioState.equals(com.thrivepregnancy.ui.DiaryEntryActivity.AudioState.NONE)) { m_audioFileName = null; android.util.Log.d(MainActivity.DEBUG_TAG, \"Setting audio file NULL\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8868/buggy-version/src.com.thrivepregnancy.ui.DiaryEntryActivity.java", "BodyUseAPI": ["com.thrivepregnancy.ui.DiaryEntryActivity.AudioState.equals(com.thrivepregnancy.ui.DiaryEntryActivity.AudioState)", "com.thrivepregnancy.ui.DiaryEntryActivity.AudioState.equals(com.thrivepregnancy.ui.DiaryEntryActivity.AudioState)"], "Fixed commit": "4cf7c73077b7540c067cb8bd44b2c960d76638d4", "Url": "https://api.github.com/repos/past5/thrive-pregnancy", "Date": "2014-07-21T21:26:01Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(cacheDirectory.exists())) { cacheDirectory.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1148/buggy-version/src.main.java.com.molina.cvmfs.repository.fetcher.Cache.java", "BodyUseAPI": [], "Fixed commit": "093f94d2711efe5d8a4b427e8196a5ba85e2e8f2", "Url": "https://api.github.com/repos/Moliholy/cvmfs-java", "Date": "2015-09-22T08:29:17Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.secupwn.aimsicd.data.model.Import.getRejCause()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (j != null) { i.setRejCause(((j.intValue()) + 3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6270/buggy-version/AIMSICD.src.main.java.com.secupwn.aimsicd.utils.RealmHelper.java", "BodyUseAPI": ["com.secupwn.aimsicd.data.model.Import.setRejCause(int)", "java.lang.Integer.intValue()"], "Fixed commit": "762f5e51c69e0f3f956ccd4afc2cdca5340b30c2", "Url": "https://api.github.com/repos/CellularPrivacy/Android-IMSI-Catcher-Detector", "Date": "2016-07-03T14:57:26Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.secupwn.aimsicd.data.model.Import.getRejCause()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (j != null) { i.setRejCause(((j.intValue()) + 3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6270/buggy-version/AIMSICD.src.main.java.com.secupwn.aimsicd.utils.RealmHelper.java", "BodyUseAPI": ["java.lang.Integer.intValue()", "com.secupwn.aimsicd.data.model.Import.setRejCause(int)"], "Fixed commit": "762f5e51c69e0f3f956ccd4afc2cdca5340b30c2", "Url": "https://api.github.com/repos/CellularPrivacy/Android-IMSI-Catcher-Detector", "Date": "2016-07-03T14:57:26Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) <= (android.os.Build.VERSION_CODES.FROYO)) { inflater.inflate(R.menu.singleplayer_play_old, menu); }else { inflater.inflate(R.menu.singleplayer_play, menu); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7212/buggy-version/Sudowars.src.org.sudowars.Controller.Local.Activity.SingleplayerPlay.java", "BodyUseAPI": [], "Fixed commit": "8807aec08c4baba347c35a788c2a7e391303ee8d", "Url": "https://api.github.com/repos/sudowars/sudowars", "Date": "2012-10-21T11:51:36Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) <= (android.os.Build.VERSION_CODES.FROYO)) { inflater.inflate(R.menu.main_menu_old, menu); }else { inflater.inflate(R.menu.main_menu, menu); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7212/buggy-version/Sudowars.src.org.sudowars.Controller.Local.Activity.MainMenu.java", "BodyUseAPI": [], "Fixed commit": "8807aec08c4baba347c35a788c2a7e391303ee8d", "Url": "https://api.github.com/repos/sudowars/sudowars", "Date": "2012-10-21T11:51:36Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) <= (android.os.Build.VERSION_CODES.FROYO)) { inflater.inflate(R.menu.multiplayer_menu_old, menu); }else { inflater.inflate(R.menu.multiplayer_menu, menu); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7212/buggy-version/Sudowars.src.org.sudowars.Controller.Local.Activity.MultiplayerMenu.java", "BodyUseAPI": [], "Fixed commit": "8807aec08c4baba347c35a788c2a7e391303ee8d", "Url": "https://api.github.com/repos/sudowars/sudowars", "Date": "2012-10-21T11:51:36Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) <= (android.os.Build.VERSION_CODES.FROYO)) { inflater.inflate(R.menu.multiplayer_play_old, menu); }else { inflater.inflate(R.menu.multiplayer_play, menu); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7212/buggy-version/Sudowars.src.org.sudowars.Controller.Local.Activity.MultiplayerPlay.java", "BodyUseAPI": [], "Fixed commit": "8807aec08c4baba347c35a788c2a7e391303ee8d", "Url": "https://api.github.com/repos/sudowars/sudowars", "Date": "2012-10-21T11:51:36Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (item != null) { insertIntoCustomFieldIfNotExists(item); insertIntoCustomFieldProjectIfNotExists(item, parentProjectId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1152/buggy-version/src.main.java.mantisbtsync.core.services.JdbcIssuesService.java", "BodyUseAPI": ["mantisbtsync.core.services.JdbcIssuesService.insertIntoCustomFieldIfNotExists(biz.futureware.mantis.rpc.soap.client.ObjectRef)", "mantisbtsync.core.services.JdbcIssuesService.insertIntoCustomFieldProjectIfNotExists(biz.futureware.mantis.rpc.soap.client.ObjectRef,java.math.BigInteger)"], "Fixed commit": "a7bd947be72726f6d4b03dc604e92fd0a584d8e0", "Url": "https://api.github.com/repos/jrrdev/mantisbt-sync-core", "Date": "2016-04-02T13:23:26Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (item != null) { final java.lang.Boolean exists = jdbcTemplate.queryForObject(mantisbtsync.core.services.JdbcIssuesService.SQL_CHECK_PROJECT, java.lang.Boolean.class, item.getId(), item.getName()); if (!(java.lang.Boolean.TRUE.equals(exists))) { jdbcTemplate.update(mantisbtsync.core.services.JdbcIssuesService.SQL_MERGE_PROJECT_TABLE, item.getId(), item.getName(), item.getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1152/buggy-version/src.main.java.mantisbtsync.core.services.JdbcIssuesService.java", "BodyUseAPI": ["org.springframework.jdbc.core.JdbcTemplate.queryForObject(java.lang.String,java.lang.Class,item.getId(),item.getName())", "biz.futureware.mantis.rpc.soap.client.ObjectRef.getId()", "biz.futureware.mantis.rpc.soap.client.ObjectRef.getName()", "biz.futureware.mantis.rpc.soap.client.ObjectRef.getName()", "biz.futureware.mantis.rpc.soap.client.ObjectRef.getId()", "biz.futureware.mantis.rpc.soap.client.ObjectRef.getName()", "org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String,item.getId(),item.getName(),item.getName())"], "Fixed commit": "a7bd947be72726f6d4b03dc604e92fd0a584d8e0", "Url": "https://api.github.com/repos/jrrdev/mantisbt-sync-core", "Date": "2016-04-02T13:23:26Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (item != null) { insertIntoUserIfNotExists(item); insertIntoUserProjectIfNotExists(item, parentProjectId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1152/buggy-version/src.main.java.mantisbtsync.core.services.JdbcIssuesService.java", "BodyUseAPI": ["mantisbtsync.core.services.JdbcIssuesService.insertIntoUserProjectIfNotExists(biz.futureware.mantis.rpc.soap.client.AccountData,java.math.BigInteger)", "mantisbtsync.core.services.JdbcIssuesService.insertIntoUserIfNotExists(biz.futureware.mantis.rpc.soap.client.AccountData)"], "Fixed commit": "a7bd947be72726f6d4b03dc604e92fd0a584d8e0", "Url": "https://api.github.com/repos/jrrdev/mantisbt-sync-core", "Date": "2016-04-02T13:23:26Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(study.getCitation())) { node.setProperty(Study.CITATION, study.getCitation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5231/buggy-version/eol-globi-data-tool.src.main.java.org.eol.globi.tool.ReportGenerator.java", "BodyUseAPI": ["org.neo4j.graphdb.Node.setProperty(Study.CITATION,study.getCitation())", "org.eol.globi.domain.Study.getCitation()"], "Fixed commit": "b24dd4be567af08dbdba95510fd89218f68a4585", "Url": "https://api.github.com/repos/jhpoelen/eol-globi-data", "Date": "2015-05-01T04:40:40Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.text.TextUtils.isEmpty(caAlias)) || (android.text.TextUtils.isEmpty(caPath))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/350/buggy-version/Aria.src.main.java.com.arialyy.aria.util.SSLContextUtil.java", "BodyUseAPI": [], "Fixed commit": "8de93e93d6180871d61a4f7dc9d7c9faf487046d", "Url": "https://api.github.com/repos/AriaLyy/Aria", "Date": "2017-01-12T03:21:08Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.right) == null) { return 0 - (IntExpr(p.left)); }else { return (IntExpr(p.left)) - (IntExpr(p.right)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/968/buggy-version/src.at.jku.ssw.cmm.interpreter.Interpreter.java", "BodyUseAPI": ["at.jku.ssw.cmm.interpreter.Interpreter.IntExpr(p.left)", "at.jku.ssw.cmm.interpreter.Interpreter.IntExpr(p.right)", "at.jku.ssw.cmm.interpreter.Interpreter.IntExpr(p.left)"], "Fixed commit": "41721e55f054ef2165ce13591d24a0ecadc72e6e", "Url": "https://api.github.com/repos/Projekt-CMM/CMM", "Date": "2014-09-09T12:54:27Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.right) == null) { return 0 - (FloatExpr(p.left)); }else { return (FloatExpr(p.left)) - (FloatExpr(p.right)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/968/buggy-version/src.at.jku.ssw.cmm.interpreter.Interpreter.java", "BodyUseAPI": ["at.jku.ssw.cmm.interpreter.Interpreter.FloatExpr(p.right)", "at.jku.ssw.cmm.interpreter.Interpreter.FloatExpr(p.left)", "at.jku.ssw.cmm.interpreter.Interpreter.FloatExpr(p.left)"], "Fixed commit": "41721e55f054ef2165ce13591d24a0ecadc72e6e", "Url": "https://api.github.com/repos/Projekt-CMM/CMM", "Date": "2014-09-09T12:54:27Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (thread.isAlive()) thread.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3772/buggy-version/src.com.spaghettic0der.zehntausend.AI.AI.java", "BodyUseAPI": ["java.lang.Thread.stop()"], "Fixed commit": "e97578d7abf4cd1a8e0fdc91223e8419fc61217a", "Url": "https://api.github.com/repos/max-wittig/Zehntausend", "Date": "2016-08-22T17:30:19Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((strings.length) == 4) { d = ((strings[3].length()) > 0) ? java.lang.Double.parseDouble(strings[3]) : null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4305/buggy-version/src.main.java.sinlin.string_facade.CycleString.java", "BodyUseAPI": [], "Fixed commit": "191721517fa6e1638eb8ddf41ada07bfbb715ddf", "Url": "https://api.github.com/repos/step-artur87/sinlin", "Date": "2015-12-29T14:21:32Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(cur instanceof com.orientechnologies.orient.core.record.impl.ODocument)) cur = sourceRecord;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1414/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.record.ORecordLazySet.java", "BodyUseAPI": [], "Fixed commit": "a624a7d96126d0acedc0736c5ab46680f5fbbed0", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-05-19T12:32:39Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sourceRecord) != null) cur = sourceRecord.getOwner();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1414/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.record.ORecordLazySet.java", "BodyUseAPI": [], "Fixed commit": "a624a7d96126d0acedc0736c5ab46680f5fbbed0", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-05-19T12:32:39Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (java.lang.reflect.Modifier.isStatic(field.getModifiers())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1267/buggy-version/src.main.java.de.serviceflow.nutshell.cl.intern.NioObjectIOHelper.java", "BodyUseAPI": [], "Fixed commit": "aeacbc2466f883fe0e9261ef7a44329cd8a35210", "Url": "https://api.github.com/repos/olir/nutshell-communicate", "Date": "2015-02-25T01:17:13Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.matt.forgehax.util.math.MC.getRenderViewEntity()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (view == null) return new com.matt.forgehax.util.math.VectorUtils.ScreenPos(0, 0, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4556/buggy-version/src.main.java.com.matt.forgehax.util.math.VectorUtils.java", "BodyUseAPI": [], "Fixed commit": "fb693c566809c762e92b9f72dc7475507ffb7844", "Url": "https://api.github.com/repos/fr1kin/ForgeHax", "Date": "2017-06-28T00:39:17Z"},
{"Line": "=>1451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Long, com.android.launcher3.CellLayout>.get(long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((progress > 0) && ((cc.getVisibility()) != (VISIBLE))) && (!(isSmall()))) { cc.setVisibility(com.android.launcher3.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1890/buggy-version/src.com.android.launcher3.Workspace.java", "BodyUseAPI": ["com.android.launcher3.CellLayout.setVisibility(com.android.launcher3.VISIBLE)"], "Fixed commit": "2456b9738803b5f4314b6747dd7eea116d03eb3d", "Url": "https://api.github.com/repos/CM11MOD/android_packages_apps_Launcher3", "Date": "2013-10-14T23:43:10Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((outputIngredient) == null) && ((output) == null)) { java.lang.StringBuilder inputs = new java.lang.StringBuilder(); for (java.lang.String ingredient : ingredients) { if ((inputs.length()) != 0) inputs.append(\", \"); inputs.append(ingredient); } throw new java.lang.IllegalStateException((\"No output defined for recipe with inputs \" + (inputs.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1173/buggy-version/src.main.java.com.hea3ven.tools.commonutils.item.crafting.RecipeBuilder.java", "BodyUseAPI": [], "Fixed commit": "fae0dc7c917e455cd14d8ec70aded0faddc6cb28", "Url": "https://api.github.com/repos/hea3ven/CommonUtils", "Date": "2016-05-04T10:59:34Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p.x) < width) { if ((((pointActiviteX + ((int) ((dureeActiviteSelected) * ((width - caseJourWidth) / 15)))) > (a.getPoint().x)) && ((p.y) > (a.getPoint().y))) && ((p.y) < ((a.getPoint().y) + activiteHeight))) { pointActiviteX = 0; pointActiviteY = 0; } if (((((p.x) > (a.getPoint().x)) && ((p.x) < ((a.getPoint().x) + ((int) ((a.getDuree()) * ((width - caseJourWidth) / 15)))))) && ((p.y) > (a.getPoint().y))) && ((p.y) < ((a.getPoint().y) + activiteHeight))) { pointActiviteX = 0; pointActiviteY = 0; } }else { pointActiviteX = 0; pointActiviteY = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5450/buggy-version/PlanIFTicateur.src.planifticateur.domain.MouseAdapter.java", "BodyUseAPI": [], "Fixed commit": "00c547f47a96735aa55c58b331d6484c28353bd7", "Url": "https://api.github.com/repos/GLO2004-H15/planIFTicateur", "Date": "2015-04-03T18:30:25Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["SV.instance.snitchList.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((n.getRawCullTime()) != null) n.setRawCullTime(com.github.scuwr.snitchvisualizer.classobjects.Snitch.changeToDate(672.0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4962/buggy-version/src.main.java.com.github.scuwr.snitchvisualizer.handlers.SVPlayerHandler.java", "BodyUseAPI": ["com.github.scuwr.snitchvisualizer.classobjects.Snitch.setRawCullTime(com.github.scuwr.snitchvisualizer.classobjects.Snitch.changeToDate(672.0))"], "Fixed commit": "f59be8ae0fc4a17c0b22d884fcf9ec8e5703465a", "Url": "https://api.github.com/repos/MrLittleKitty/Snitch-Visualizer", "Date": "2016-03-07T04:59:27Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((e.getCause()) != null) && ((e.getCause().toString()) != null)) { errorMessage = e.getCause().toString(); }else { errorMessage = e.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2473/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.infrastructure.notification.service.EmailNotificationService.java", "BodyUseAPI": ["e.getCause().toString()", "org.apache.commons.mail.EmailException.getCause()", "org.apache.commons.mail.EmailException.toString()"], "Fixed commit": "9a834a974846555dca40271fda84da961f32a577", "Url": "https://api.github.com/repos/FINEMUGANDA/MIFOSX", "Date": "2015-11-18T16:01:29Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((email.isEmpty()) || (password.isEmpty())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7604/buggy-version/app.src.main.java.com.annguyen.android.parti.login.LoginPresenterImpl.java", "BodyUseAPI": [], "Fixed commit": "938cadc0242bb914b685af7dad8cc6ae8195d243", "Url": "https://api.github.com/repos/ntban15/parti", "Date": "2017-06-22T14:32:34Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(fieldModel.getName().toLowerCase().equals(\"table_name\"))) && (!(fieldModel.getName().toLowerCase().equals(\"id\")))) fields.add(fieldModel);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4458/buggy-version/Lite.src.com.mrz.lite.util.ProcessorHelper.java", "BodyUseAPI": ["java.util.List<com.mrz.lite.models.FieldModel>.add(com.mrz.lite.models.FieldModel)"], "Fixed commit": "89b015264c7794d560e4abb3f00b99791e2cafe0", "Url": "https://api.github.com/repos/marouanMrz/Lite", "Date": "2015-01-14T20:21:32Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bearing < 0) { bearing = 360.0F + bearing; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/9115/buggy-version/app.src.main.java.com.timur.gps2.GPSModeActivity.java", "BodyUseAPI": [], "Fixed commit": "40123d31c3dc662d7f7b48d91170e4d2b70dc8c3", "Url": "https://api.github.com/repos/glbr15/GPS", "Date": "2017-06-09T14:50:30Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.location.Location.bearingTo(android.location.Location)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (heading < 0) { heading = 360.0F + heading; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/9115/buggy-version/app.src.main.java.com.timur.gps2.GPSModeActivity.java", "BodyUseAPI": [], "Fixed commit": "40123d31c3dc662d7f7b48d91170e4d2b70dc8c3", "Url": "https://api.github.com/repos/glbr15/GPS", "Date": "2017-06-09T14:50:30Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (attr != null) { this.list = attr.getPlayers(); this.attr = attr; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1234/buggy-version/src.de.thm.ateam.memory.game.Game.java", "BodyUseAPI": [], "Fixed commit": "cc424dacfb1f25badb7340b22cfb0164a04aa49f", "Url": "https://api.github.com/repos/Crunch09/memory", "Date": "2012-07-30T09:43:47Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((month) == 0) { month = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2264/buggy-version/app.src.main.java.com.frysoft.notifry.utils.Date.java", "BodyUseAPI": [], "Fixed commit": "f74519b8ec484ec46c4a9274d5ff5fd0ff56f0fb", "Url": "https://api.github.com/repos/pichlerAT/androidapp", "Date": "2016-08-14T13:25:11Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((month) == 0) { month = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2264/buggy-version/app.src.main.java.com.frysoft.notifry.utils.Date.java", "BodyUseAPI": [], "Fixed commit": "f74519b8ec484ec46c4a9274d5ff5fd0ff56f0fb", "Url": "https://api.github.com/repos/pichlerAT/androidapp", "Date": "2016-08-14T13:25:11Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((policyScheduleparams.getScheduleFrequency()) == null) { errorMsg.append(\"required parameter schedule_frequency is missing\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1522/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.utils.FilePolicyServiceUtils.java", "BodyUseAPI": [], "Fixed commit": "d428441a01aab83e4745959674019a61b58b4749", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-02-28T10:37:46Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newParentTagId == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3415/buggy-version/src.main.java.com.civilizer.web.view.TagListBean.java", "BodyUseAPI": [], "Fixed commit": "d0e55df58d955543ad34b353ad8740af89186e1a", "Url": "https://api.github.com/repos/suewonjp/civilizer", "Date": "2015-09-20T05:08:24Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newChildTagId == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3415/buggy-version/src.main.java.com.civilizer.web.view.TagListBean.java", "BodyUseAPI": [], "Fixed commit": "d0e55df58d955543ad34b353ad8740af89186e1a", "Url": "https://api.github.com/repos/suewonjp/civilizer", "Date": "2015-09-20T05:08:24Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((strings.length) > 2) { siteError.operation = strings[3]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3156/buggy-version/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.SiteError.java", "BodyUseAPI": [], "Fixed commit": "b4913b96fb8d14a6fffebbb763e0e4a026be09ef", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-01-29T15:21:50Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentEnemy.health) <= 0) { currentEnemy.isKilled = true; }else { currentEnemy.isKilled = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5347/buggy-version/src.EnemyMove.java", "BodyUseAPI": [], "Fixed commit": "f5776dca477d957ac314ae0c58f7ffea534d56e2", "Url": "https://api.github.com/repos/Team-Ocean-Park/Java-Game", "Date": "2015-11-11T16:30:02Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((enemyMap[i]) != null) { if (enemyMap[i].isEnemyFinished) { user.player.health -= 0.2; }else if (enemyMap[i].isKilled) { user.player.money += moneyEarnedOfDead; enemyMap[i] = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5347/buggy-version/src.Screen.java", "BodyUseAPI": [], "Fixed commit": "f5776dca477d957ac314ae0c58f7ffea534d56e2", "Url": "https://api.github.com/repos/Team-Ocean-Park/Java-Game", "Date": "2015-11-11T16:30:02Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(storageDirFile.exists())) storageDirFile.mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/821/buggy-version/portal.src.main.java.edu.isi.wings.portal.servlets.HandleUpload.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "ea982c7acd456a20b532ac9f95de4fd523cf13b9", "Url": "https://api.github.com/repos/KnowledgeCaptureAndDiscovery/wings", "Date": "2016-12-01T09:15:29Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.getConfig().getConfigurationSection(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (section != null) for (final java.lang.String name : section.getKeys(false)) switches.put(name, section.getString(name));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6796/buggy-version/src.edgruberman.bukkit.doorman.Main.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,section.getString(name))", "org.bukkit.configuration.ConfigurationSection.getString(java.lang.String)", "org.bukkit.configuration.ConfigurationSection.getKeys(boolean)"], "Fixed commit": "adcdd1cafb51516f5435efca9fdd9f18d4f76ffa", "Url": "https://api.github.com/repos/EdGruberman/Doorman", "Date": "2012-11-30T05:44:53Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((evalStack.size()) == 1) { disjunctions.add(evalStack.pop()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7836/buggy-version/src.mjchao.mazenav.logic.StatementCNF.java", "BodyUseAPI": ["java.util.ArrayList<mjchao.mazenav.logic.StatementCNF.Disjunction>.add(mjchao.mazenav.logic.StatementCNF.Disjunction)", "java.util.Stack<mjchao.mazenav.logic.StatementCNF.Disjunction>.pop()"], "Fixed commit": "1053c9e07dbb8f87d95faa11437c2d207e66f888", "Url": "https://api.github.com/repos/mjchao/Logic-Based-AI", "Date": "2016-04-21T21:14:26Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (listType instanceof java.lang.Class) { if (!(io.appium.java_client.pagefactory.Widget.class.isAssignableFrom(((java.lang.Class) (listType))))) { return null; } widgetType = java.lang.Class.class.cast(listType); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/388/buggy-version/src.main.java.io.appium.java_client.pagefactory.AppiumFieldDecorator.java", "BodyUseAPI": ["java.lang.Class.cast(java.lang.reflect.Type)"], "Fixed commit": "1b55084b12875c258cea6e26e70bdc5e7834cf1e", "Url": "https://api.github.com/repos/TikhomirovSergey/java-client", "Date": "2016-05-01T14:48:54Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.example.andro.moviedb.Movies.MovieResults>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((s.getRelease_date()) != null) { holder.contentTextView.setText(((((s.getTitle()) + \" (\") + (s.getRelease_date().substring(0, 4))) + \")\")); }else { holder.contentTextView.setText(s.getTitle()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2351/buggy-version/app.src.main.java.com.example.andro.moviedb.Movies.MoviesAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(((((s.getTitle()) + \" (\") + (s.getRelease_date().substring(0, 4))) + \")\"))", "android.widget.TextView.setText(s.getTitle())", "com.example.andro.moviedb.Movies.MovieResults.getTitle()", "com.example.andro.moviedb.Movies.MovieResults.getRelease_date()", "s.getRelease_date().substring(int,int)", "com.example.andro.moviedb.Movies.MovieResults.getTitle()"], "Fixed commit": "9f883fa1ecbf620ffc56a389121b4e75dcbb5ad0", "Url": "https://api.github.com/repos/1AboveAll/MovieDB-App", "Date": "2017-07-27T13:12:43Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_maxResults == 0) { _maxResults = 128 * 1024; if (su.litvak.justdlna.dlna.ContentDirectoryService.LOG.isDebugEnabled()) { su.litvak.justdlna.dlna.ContentDirectoryService.LOG.debug(\"adjusted max results {} -> {}\", maxResults, _maxResults); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3149/buggy-version/src.main.java.su.litvak.justdlna.dlna.ContentDirectoryService.java", "BodyUseAPI": [], "Fixed commit": "26d8b45457e4e3f540cfc4d56864af6702ba2046", "Url": "https://api.github.com/repos/vitalidze/justdlna", "Date": "2014-01-13T05:11:12Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((_anno == null) && (_doc == null)) && (_appinfo == null)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6716/buggy-version/jaxb-impl.src.main.java.at.ac.tuwien.infosys.jaxb.XmlSchemaEnhancer.java", "BodyUseAPI": [], "Fixed commit": "fd8f7d61569f89df68e22572a377d55f264f450a", "Url": "https://api.github.com/repos/pellcorp/jaxb-facets", "Date": "2013-07-05T03:09:04Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataKitAPI) != null) { org.md2k.utilities.Report.Log.d(org.md2k.moodsurfing.ActivityMoodSurfingExercises.TAG, (\"onDestroy()... isConnected=\" + (dataKitAPI.isConnected()))); if (dataKitAPI.isConnected()) dataKitAPI.disconnect(); dataKitAPI.close(); dataKitAPI = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5316/buggy-version/moodsurfing.src.main.java.org.md2k.moodsurfing.ActivityMoodSurfingExercises.java", "BodyUseAPI": [], "Fixed commit": "bf4eb6f83386a06840d63a0eda4b01c53c599b15", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-MoodSurfing", "Date": "2016-01-27T20:40:57Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bContinue) { nl.sijmen.webwinkel.ui.UserInterface.clearConsole(); java.lang.System.out.println(\"Fijn dat u verder winkelt!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3142/buggy-version/Webwinkel.src.nl.sijmen.webwinkel.ui.UserInterface.java", "BodyUseAPI": [], "Fixed commit": "112f8eb98127e84e09eb743a8fa2bfa26c0ae5b3", "Url": "https://api.github.com/repos/sdebruijn/Training", "Date": "2016-03-22T15:24:34Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(messageForm.getTitle().equals(\"\"))) message.setTitle(org.jsoup.Jsoup.parse(messageForm.getTitle()).text()); else message.setTitle(\"Kein Titel\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5527/buggy-version/Skeleton.src.main.java.org.eseTeam2.controller.service.MessageService.java", "BodyUseAPI": ["org.eseTeam2.model.Message.setTitle(org.jsoup.Jsoup.parse(messageForm.getTitle()).text())", "org.jsoup.Jsoup.parse(messageForm.getTitle()).text()", "org.eseTeam2.controller.pojos.MessageForm.getTitle()", "org.jsoup.Jsoup.parse(messageForm.getTitle())"], "Fixed commit": "4dd975fc68cde6cee6297651ec3ff3c6de242333", "Url": "https://api.github.com/repos/ese-unibe-ch/ese2014-team2", "Date": "2014-12-09T21:17:40Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ako.service.UserService.findByUserName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (userDetails.hasMfaActive()) { tokenHelper.checkAuthority(authToken, userDetails); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7572/buggy-version/src.main.java.com.ako.security.TokenAuthenticationFilter.java", "BodyUseAPI": ["com.ako.security.TokenHelper.checkAuthority(java.lang.String,com.ako.data.User)"], "Fixed commit": "62ea3c4b84d7a5352429b7075691a7aa954f25d3", "Url": "https://api.github.com/repos/prashant-rathod/ako", "Date": "2017-11-22T04:10:53Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cp == '\\r') continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/9103/buggy-version/src.banjo.expr.token.TokenScanner.java", "BodyUseAPI": [], "Fixed commit": "8c8eaeee0349164840254f69e285a92766d9e63a", "Url": "https://api.github.com/repos/dobesv/banjo-lang", "Date": "2015-06-09T23:55:06Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getResponse().getSystemAdministrators()) != null) { org.eurekastreams.web.client.ui.Session.getInstance().getEventBus().removeObserver(org.eurekastreams.web.client.events.data.GotSystemSettingsResponseEvent.class, this); generateForm(event.getResponse()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/9004/buggy-version/web.src.main.java.org.eurekastreams.web.client.ui.pages.settings.SystemSettingsPanelComposite.java", "BodyUseAPI": ["org.eurekastreams.web.client.events.data.GotSystemSettingsResponseEvent.getResponse()", "org.eurekastreams.web.client.ui.pages.settings.SystemSettingsPanelComposite.4.generateForm(event.getResponse())"], "Fixed commit": "cc0dbd34d4d639009484170f112657378989460d", "Url": "https://api.github.com/repos/lmco/eurekastreams", "Date": "2011-05-24T17:41:47Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(vsr.has(\"width\"))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1306/buggy-version/src.main.java.de.berlios.vch.parser.arte.VideoPageParser.java", "BodyUseAPI": [], "Fixed commit": "a511ae38e8c5eca58c789ae0f3d20504667e427f", "Url": "https://api.github.com/repos/hampelratte/vch-parser-arte", "Date": "2015-08-04T09:36:30Z"},
{"Line": "=>497", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requestHeaders.hasConnectionClose()) && ((method) != (libcore.net.http.HttpEngine.CONNECT))) { reusable = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8518/buggy-version/luni.src.main.java.libcore.net.http.HttpEngine.java", "BodyUseAPI": [], "Fixed commit": "3c636203845b858c6fa7c7db83f922b0f008f35a", "Url": "https://api.github.com/repos/TaintDroid/android_platform_libcore", "Date": "2012-10-05T04:33:32Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.aim.anotheryetbashclient.SettingsHelper.getTimestamp(getActivity())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (timeInMs == 0) { date.setVisibility(View.GONE); }else { date.setText(getString(R.string.last_update, dateFormat.format(calendar.getTime()))); date.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6938/buggy-version/AnotherYetBashClient.src.main.java.ru.aim.anotheryetbashclient.fragments.OfflineFragment.java", "BodyUseAPI": [], "Fixed commit": "573d960aca10208c179917c3c14d8f98f16f2f10", "Url": "https://api.github.com/repos/pavelshackih/another-yet-bash-client", "Date": "2014-10-22T21:02:02Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["varviewer.shared.Variant.getAnnotation(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (arupStr == null) { arupStr = \"0 total\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4716/buggy-version/src.varviewer.shared.varFilters.MaxFreqFilter.java", "BodyUseAPI": [], "Fixed commit": "9a43c6cf5644ed2412e7f1153384d85a6ae78ba7", "Url": "https://api.github.com/repos/brendanofallon/VarViewer", "Date": "2013-02-13T22:41:45Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (processNext == (-1)) { processNext = (stack.size()) / 2; }else if (done == workUnits) { processNext += 1; }else { processNext -= 1; if (processNext < 1) processNext = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7014/buggy-version/src.aeminium.gpu.backends.gpu.GPURecursive.java", "BodyUseAPI": [], "Fixed commit": "9f3b6fa77a505e32de864554ae8eede6aa541d24", "Url": "https://api.github.com/repos/AEminium/AeminiumGPU", "Date": "2015-01-12T20:17:32Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!purchased) { publiRemovePurchased = es.claucookie.recarga.logic.InAppBillingLogic.getInstance().checkPurchasedItem(this, NetworkConsts.REMOVE_PUB_INAPP_CODE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4843/buggy-version/RecargaTussam.src.main.java.es.claucookie.recarga.activities.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "c60a42a576dba476d15e3262d4914fabc3d7a448", "Url": "https://api.github.com/repos/claucookie/recarga-tussam-android", "Date": "2015-02-25T20:21:53Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ut.dph.service.transactionInManager.getActivityStatusTotals(java.util.List<java.lang.Integer>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((activityStatusTotals.size()) != 0) { mav.addObject(\"totalCompleted\", activityStatusTotals.get(0)); mav.addObject(\"totalEnrolled\", activityStatusTotals.get(1)); }else { mav.addObject(\"totalCompleted\", 0); mav.addObject(\"totalEnrolled\", 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8034/buggy-version/src.main.java.com.ut.dph.controller.adminProcessingActivity.java", "BodyUseAPI": ["org.springframework.web.servlet.ModelAndView.addObject(java.lang.String,java.lang.Integer)", "org.springframework.web.servlet.ModelAndView.addObject(java.lang.String,java.lang.Integer)", "java.util.List<java.lang.Integer>.get(int)", "java.util.List<java.lang.Integer>.get(int)"], "Fixed commit": "68513aea2e2665ef2f566db8c60aa64babbf48a7", "Url": "https://api.github.com/repos/thenhkid/universalTranslator", "Date": "2015-01-08T05:10:04Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((cursor != null) && (!(cursor.isClosed()))) { cursor.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/303/buggy-version/library.src.de.ecotastic.android.camerautil.lib.CameraIntentHelper.java", "BodyUseAPI": ["android.database.Cursor.close()"], "Fixed commit": "9a18092fd64f0844f740bfe5bee0e6ae2799ca6c", "Url": "https://api.github.com/repos/ralfgehrer/AndroidCameraUtil", "Date": "2015-06-10T14:41:44Z"},
{"Line": "=>724", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mcupdater.settings.SettingsManager.getInstance().getSettings()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(settings.getJvmOpts().isEmpty())) { args.addAll(java.util.Arrays.asList(settings.getJvmOpts().split(\" \"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6538/buggy-version/src.main.java.org.mcupdater.gui.MainForm.java", "BodyUseAPI": ["java.util.List<java.lang.String>.addAll(java.util.List)", "java.util.Arrays.asList(settings.getJvmOpts().split(\" \"))", "org.mcupdater.settings.Settings.getJvmOpts()", "settings.getJvmOpts().split(java.lang.String)"], "Fixed commit": "8ecbccb5aa4c171cc5d767260ac0b61ce08e9c8a", "Url": "https://api.github.com/repos/MCUpdater/GUI-Swing", "Date": "2017-01-04T14:13:43Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((time - 60) % 100) == 0) { time += 40; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/237/buggy-version/src.main.java.com.rippmn.halloween.domain.TrickOrTreatReportingEvent.java", "BodyUseAPI": [], "Fixed commit": "e76b9c5885411691cace40ac5ff1560e76b5e015", "Url": "https://api.github.com/repos/rippmn/halloweenTreatCountWeb", "Date": "2014-11-03T13:25:11Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gr8pefish.ironbackpacks.config.ConfigHandler.renamingUpgradeRequired) gui = (gr8pefish.ironbackpacks.items.upgrades.UpgradeMethods.hasRenamingUpgrade(upgrades)) ? gr8pefish.ironbackpacks.client.gui.inventory.GUIBackpackAlternate.GUI.values()[((gr8pefish.ironbackpacks.items.upgrades.UpgradeMethods.getAltGuiUpgradesApplied(upgrades)) + 3)] : gr8pefish.ironbackpacks.client.gui.inventory.GUIBackpackAlternate.GUI.values()[gr8pefish.ironbackpacks.items.upgrades.UpgradeMethods.getAltGuiUpgradesApplied(upgrades)]; else { gr8pefish.ironbackpacks.util.Logger.info((\"Alt gui upgrades \" + (gr8pefish.ironbackpacks.items.upgrades.UpgradeMethods.getAltGuiUpgradesApplied(upgrades)))); gui = gr8pefish.ironbackpacks.client.gui.inventory.GUIBackpackAlternate.GUI.values()[((gr8pefish.ironbackpacks.items.upgrades.UpgradeMethods.getAltGuiUpgradesApplied(upgrades)) + 4)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3927/buggy-version/src.main.java.gr8pefish.ironbackpacks.client.gui.inventory.GUIBackpackAlternate.java", "BodyUseAPI": [], "Fixed commit": "6373642fc2a723e1e84919525e73d61b6ec438ed", "Url": "https://api.github.com/repos/gr8pefish/IronBackpacks", "Date": "2016-01-24T03:51:23Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsSender) { mVoiceIv.setImageResource(mSendDrawable); }else { mVoiceIv.setImageResource(mReceiveDrawable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/276/buggy-version/Android.imui.src.main.java.cn.jiguang.imui.messages.VoiceViewHolder.java", "BodyUseAPI": [], "Fixed commit": "1e7bc2cf32aa2bf3adf1c4ed6b4e7df7cd6f7f03", "Url": "https://api.github.com/repos/avalond/aurora-imui", "Date": "2017-05-09T07:11:56Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getLong(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((broadcastId != (mRowId)) && (broadcastId > 0)) { rowChanged(broadcastId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5077/buggy-version/src.uk.co.spookypeanut.wake_me_at.Alarm.java", "BodyUseAPI": ["uk.co.spookypeanut.wake_me_at.Alarm.5.rowChanged(long)"], "Fixed commit": "d393de7cc8ad9bb452ba48d1a53aad9cbe313ef9", "Url": "https://api.github.com/repos/spookypeanut/Wake-Me-At", "Date": "2011-05-27T22:54:23Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((VC._JoinOnly) == false) { if (First == true) First = false; else Str.append(\"\\n , \"); if ((PrintViewColumn(Str, VC, TI)) == true) hasAggregates = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8779/buggy-version/src.tilda.generation.postgres9.Sql.java", "BodyUseAPI": ["tilda.generation.postgres9.Sql.PrintViewColumn(java.lang.StringBuilder,tilda.parsing.parts.ViewColumn,tilda.generation.helpers.TableRankTracker)"], "Fixed commit": "debb699ea830b683348a095d1492717bd994eeb1", "Url": "https://api.github.com/repos/CapsicoHealth/Tilda", "Date": "2017-01-07T22:57:07Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraft.client.Minecraft.getMinecraft().objectMouseOver) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/9249/buggy-version/src.main.java.cam72cam.immersiverailroading.proxy.ClientProxy.java", "BodyUseAPI": [], "Fixed commit": "0d1b555536ae6fe61935926b35c6cbbbf652fd00", "Url": "https://api.github.com/repos/cam72cam/ImmersiveRailroading", "Date": "2017-09-25T04:27:19Z"},
{"Line": "=>1324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.server.wm.WindowState.isFullscreen(displayInfo.appWidth,displayInfo.appHeight)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mHasClipRect) && fullscreen) { clipRect.intersect(mClipRect); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1539/buggy-version/services.core.java.com.android.server.wm.WindowStateAnimator.java", "BodyUseAPI": [], "Fixed commit": "f7e00dbd08038d52c1158eea61e253ff8155569b", "Url": "https://api.github.com/repos/NuclearAndroidProject1/frameworks_base", "Date": "2015-07-31T18:45:08Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((comms.SmartWriter.debugMode.compareTo(debugMode)) <= 0) edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putBoolean(name, value);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/263/buggy-version/src.comms.SmartWriter.java", "BodyUseAPI": [], "Fixed commit": "87ce8d5ef0f210b4b716ff72ba7c58eb0d0930ce", "Url": "https://api.github.com/repos/2202Programming/LogN", "Date": "2016-07-10T18:38:34Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((comms.SmartWriter.debugMode.compareTo(debugMode)) <= 0) edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putNumber(name, value);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/263/buggy-version/src.comms.SmartWriter.java", "BodyUseAPI": [], "Fixed commit": "87ce8d5ef0f210b4b716ff72ba7c58eb0d0930ce", "Url": "https://api.github.com/repos/2202Programming/LogN", "Date": "2016-07-10T18:38:34Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((comms.SmartWriter.debugMode.compareTo(debugMode)) <= 0) edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putString(name, value);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/263/buggy-version/src.comms.SmartWriter.java", "BodyUseAPI": [], "Fixed commit": "87ce8d5ef0f210b4b716ff72ba7c58eb0d0930ce", "Url": "https://api.github.com/repos/2202Programming/LogN", "Date": "2016-07-10T18:38:34Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.enabled) this.setMotor(setValue); else this.setMotor(0.0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/263/buggy-version/src.motors.IMotor.java", "BodyUseAPI": [], "Fixed commit": "87ce8d5ef0f210b4b716ff72ba7c58eb0d0930ce", "Url": "https://api.github.com/repos/2202Programming/LogN", "Date": "2016-07-10T18:38:34Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.enabled) this.setMotor(setValue); else this.setMotor(0.0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/263/buggy-version/src.motors.IMotor.java", "BodyUseAPI": [], "Fixed commit": "87ce8d5ef0f210b4b716ff72ba7c58eb0d0930ce", "Url": "https://api.github.com/repos/2202Programming/LogN", "Date": "2016-07-10T18:38:34Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tempList.size()) == 1) { tempKeyValueMap.put(tempDescriptor.getName(), tempList.get(0)); }else { tempKeyValueMap.put(tempDescriptor.getName(), tempList.toArray()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3020/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.parameter.conversion.conversions.java.other.ObjectToMap.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.get(int)", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object)", "java.util.List<java.lang.Object>.toArray()", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object[])"], "Fixed commit": "5d1aa5b410a7b33c38163cdc13daba449f73a060", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2016-11-09T13:09:52Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((Realm.sc.getObject(((p.getX()) + 1), p.getY())) == null)) { if (Realm.world.getTile(((p.getX()) + 1), p.getY()).checkCollision(3)) solid = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/225/buggy-version/src.com.github.desmaster.Devio.util.gamemath.Collision.java", "BodyUseAPI": ["Realm.world.getTile(((p.getX()) + 1), p.getY()).checkCollision(int)", "com.github.desmaster.Devio.util.Position.getX()", "Realm.world.getTile(((p.getX()) + 1),p.getY())", "com.github.desmaster.Devio.util.Position.getY()"], "Fixed commit": "fdec77607225f3e0eede4469c166179cc0901990", "Url": "https://api.github.com/repos/Desmaster/Devio", "Date": "2012-11-12T20:48:39Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((Realm.world.getTile(((p.getX()) - 1), p.getY())) == null)) { if (Realm.world.getTile(((p.getX()) - 1), p.getY()).checkCollision(1)) solid = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/225/buggy-version/src.com.github.desmaster.Devio.util.gamemath.Collision.java", "BodyUseAPI": ["Realm.world.getTile(((p.getX()) - 1), p.getY()).checkCollision(int)", "Realm.world.getTile(((p.getX()) - 1),p.getY())", "com.github.desmaster.Devio.util.Position.getX()", "com.github.desmaster.Devio.util.Position.getY()"], "Fixed commit": "fdec77607225f3e0eede4469c166179cc0901990", "Url": "https://api.github.com/repos/Desmaster/Devio", "Date": "2012-11-12T20:48:39Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((Realm.sc.getObject(p.getX(), p.getY())) == null)) { if (Realm.world.getTile(p.getX(), p.getY()).checkCollision(1)) solid = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/225/buggy-version/src.com.github.desmaster.Devio.util.gamemath.Collision.java", "BodyUseAPI": ["Realm.world.getTile(p.getX(),p.getY())", "Realm.world.getTile(p.getX(), p.getY()).checkCollision(int)", "com.github.desmaster.Devio.util.Position.getX()", "com.github.desmaster.Devio.util.Position.getY()"], "Fixed commit": "fdec77607225f3e0eede4469c166179cc0901990", "Url": "https://api.github.com/repos/Desmaster/Devio", "Date": "2012-11-12T20:48:39Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((Realm.world.getTile(p.getX(), p.getY())) == null)) { if (Realm.world.getTile(p.getX(), p.getY()).checkCollision(3)) solid = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/225/buggy-version/src.com.github.desmaster.Devio.util.gamemath.Collision.java", "BodyUseAPI": ["Realm.world.getTile(p.getX(), p.getY()).checkCollision(int)", "Realm.world.getTile(p.getX(),p.getY())", "com.github.desmaster.Devio.util.Position.getX()", "com.github.desmaster.Devio.util.Position.getY()"], "Fixed commit": "fdec77607225f3e0eede4469c166179cc0901990", "Url": "https://api.github.com/repos/Desmaster/Devio", "Date": "2012-11-12T20:48:39Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Bot.playCount) > threshold) { input = enemyScore.mostLikely(); }else { input = getUnbiasedInput(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2609/buggy-version/src.Bot.java", "BodyUseAPI": [], "Fixed commit": "81bec431950d5f5b2ff45f70ff1e5918e8d99c4a", "Url": "https://api.github.com/repos/grufelous/OEGame", "Date": "2017-10-08T09:18:23Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mcjty.deepresonance.grid.tank.DRTankMultiBlock.getTank(elec332.core.util.BlockLoc)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (tank != null) tank.sendPacket(3, new elec332.core.util.NBTHelper().addToTag(filled, \"render\").toNBT());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3084/buggy-version/src.main.java.mcjty.deepresonance.grid.tank.DRTankMultiBlock.java", "BodyUseAPI": ["mcjty.deepresonance.blocks.tank.TileTank.sendPacket(int,new elec332.core.util.NBTHelper().addToTag(filled, \"render\").toNBT())"], "Fixed commit": "be9ae4d17889631c831e7142c2ac75e704e5f88f", "Url": "https://api.github.com/repos/McJtyMods/DeepResonance", "Date": "2015-09-15T12:42:17Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((basket.getList().size()) == 0) { final android.app.AlertDialog.Builder dialog_not = new android.app.AlertDialog.Builder(this); dialog_not.setTitle(\"Warning!!!\"); dialog_not.setMessage(\"Plese insert product to basket\"); dialog_not.setPositiveButton(\"OK\", new android.content.DialogInterface.OnClickListener() { @java.lang.Override public void onClick(android.content.DialogInterface arg0, int arg1) { } }).show(); }else if (cashh >= (basket.getTotalPrice())) { final android.app.AlertDialog.Builder dialog_change = new android.app.AlertDialog.Builder(this); dialog_change.setTitle(\"Change\"); dialog_change.setMessage((((((\"Total price = \" + (basket.getTotalPrice())) + \"\\nCash = \") + (cash.getText().toString())) + \"\\nChange = \") + change)); dialog_change.setPositiveButton(\"OK\", new android.content.DialogInterface.OnClickListener() { @java.lang.Override public void onClick(android.content.DialogInterface arg0, int arg1) { android.text.format.Time now = new android.text.format.Time(); now.setToNow(); com.salerecord.pos.DailyRecord dr = new com.salerecord.pos.DailyRecord(com.rtt_ku.pos.Tab_Sale_Activity.this, now); com.rtt_ku.pos.Tab_Sale_Activity.sCT.confirmSale(basket, dr); com.rtt_ku.pos.Tab_Sale_Activity.sCT.setDB(myDb); com.rtt_ku.pos.Tab_Sale_Activity.sCT.updateInventory(); productList = com.rtt_ku.pos.Tab_Sale_Activity.sCT.getProductList(); adapter.notifyDataSetChanged(); basket = com.rtt_ku.pos.Tab_Sale_Activity.sCT.newBasket(); saleAdapter.notifyDataSetChanged(); total_text.setText(\"0.0\"); cash.setText(\"\"); } }).show(); }else { final android.app.AlertDialog.Builder dialog_not = new android.app.AlertDialog.Builder(this); dialog_not.setTitle(\"Warning!!!\"); dialog_not.setMessage(\"Not enough money\"); dialog_not.setPositiveButton(\"OK\", new android.content.DialogInterface.OnClickListener() { @java.lang.Override public void onClick(android.content.DialogInterface arg0, int arg1) { } }).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/796/buggy-version/Pos.src.com.rtt_ku.pos.Tab_Sale_Activity.java", "BodyUseAPI": ["AlertDialog.Builder.setMessage((((((\"Total price = \" + (basket.getTotalPrice())) + \"\\nCash = \") + (cash.getText().toString())) + \"\\nChange = \") + change))", "Sale.Basket.getTotalPrice()", "AlertDialog.Builder.setPositiveButton(java.lang.String,android.content.DialogInterface.OnClickListener)", "Sale.Basket.getTotalPrice()", "dialog_change.setPositiveButton(\"OK\", new android.content.DialogInterface.OnClickListener() {\n    @java.lang.Override\n    public void onClick(android.content.DialogInterface arg0, int arg1) {\n        android.text.format.Time now = new android.text.format.Time();\n        now.setToNow();\n        com.salerecord.pos.DailyRecord dr = new com.salerecord.pos.DailyRecord(com.rtt_ku.pos.Tab_Sale_Activity.this, now);\n        com.rtt_ku.pos.Tab_Sale_Activity.sCT.confirmSale(basket, dr);\n        com.rtt_ku.pos.Tab_Sale_Activity.sCT.setDB(myDb);\n        com.rtt_ku.pos.Tab_Sale_Activity.sCT.updateInventory();\n        productList = com.rtt_ku.pos.Tab_Sale_Activity.sCT.getProductList();\n        adapter.notifyDataSetChanged();\n        basket = com.rtt_ku.pos.Tab_Sale_Activity.sCT.newBasket();\n        saleAdapter.notifyDataSetChanged();\n        total_text.setText(\"0.0\");\n        cash.setText(\"\");\n    }\n}).show()", "com.rtt_store.pos.StoreController.confirmSale(Sale.Basket,com.salerecord.pos.DailyRecord)"], "Fixed commit": "fa8c633e1ed777942f5facf5570c1d5d0155387a", "Url": "https://api.github.com/repos/Termchai/Pos_by_RTT_KU", "Date": "2013-11-26T14:16:35Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (q.isComplete()) { main.addGold(q.getGoldReward()); speaker.setCurrentFriendship(((speaker.getCurrentFriendship()) + (q.getFriendshipReward()))); if (!(q.getItemReward().isEmpty())) { for (Inventory.Item item : q.getItemReward()) { main.getInventory().add(item); } } speaker.setCurrentTask(((speaker.getTaskNumber()) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6272/buggy-version/core.src.DialogEngine.Dialog.java", "BodyUseAPI": ["Quests.Quest.getGoldReward()", "Quests.Quest.getItemReward()", "Main.NPC.setCurrentFriendship(((speaker.getCurrentFriendship()) + (q.getFriendshipReward())))", "Main.MainChar.addGold(q.getGoldReward())", "Quests.Quest.getFriendshipReward()", "q.getItemReward().isEmpty()", "Quests.Quest.getItemReward()"], "Fixed commit": "2a8b23c43bebc1a83a26a39ac1a9e3ae5ec74219", "Url": "https://api.github.com/repos/Nishi790/Ponies", "Date": "2017-01-21T15:02:26Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (childKey == null) { com.android.pigknight.UI currentUI = mChildUIMap.get(mCurChildKey); if (currentUI != null) currentUI.dispatchRelease(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6491/buggy-version/Library.src.com.android.pigknight.UI.java", "BodyUseAPI": [], "Fixed commit": "dba5b2f713a37b264a0709294e43bc4a54220b9e", "Url": "https://api.github.com/repos/pigknight/AndroidApp-UI-Arch", "Date": "2015-03-26T08:42:34Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yeegol.DIYWear.entity.Model.getInstance().getModels()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (list != null) { mBrandModel = list.get(0); mHandler.sendMessage(mHandler.obtainMessage(2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5529/buggy-version/src.com.yeegol.DIYWear.MainActivity.java", "BodyUseAPI": ["java.util.List<com.yeegol.DIYWear.entity.Model.BrandModel>.get(int)"], "Fixed commit": "90cbc380c30aa4f43e32deac88cb081648dd6dd6", "Url": "https://api.github.com/repos/liuweicode/DIYWear", "Date": "2014-03-16T03:33:04Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((intent.resolveActivity(getPackageManager())) != null) { startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2616/buggy-version/app.src.main.java.com.casii.droid.inventoryapp.DetailActivity.java", "BodyUseAPI": ["com.casii.droid.inventoryapp.DetailActivity.startActivity(android.content.Intent)"], "Fixed commit": "eb4bb8551fe7f84af737f26590e30f47b10cf4ee", "Url": "https://api.github.com/repos/SCasandra/InventoryApp", "Date": "2017-07-16T17:35:50Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cws.core.Job.getVM()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (busyVMs.remove(vm)) freeVMs.add(vm);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/61/buggy-version/src.cws.core.WorkflowEngine.java", "BodyUseAPI": ["java.util.Set<cws.core.VM>.add(cws.core.VM)"], "Fixed commit": "0b8052e02739b3117f2478e38ba99113970d46c6", "Url": "https://api.github.com/repos/malawski/cloudworkflowsimulator", "Date": "2012-04-10T13:32:32Z"},
{"Line": "=>631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_projectMetatData.getTargetRuntime()) != null) { java.lang.String label = _projectMetatData.getTargetRuntime().getProperty(\"switchyard.label\"); isIntegration = label.contains(\"Integration\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8256/buggy-version/eclipse.plugins.org.switchyard.tools.ui.src.org.switchyard.tools.ui.operations.CreateSwitchYardProjectOperation.java", "BodyUseAPI": ["org.eclipse.wst.common.project.facet.core.runtime.IRuntimeComponent.getProperty(java.lang.String)", "org.switchyard.tools.ui.operations.CreateSwitchYardProjectOperation.NewSwitchYardProjectMetaData.getTargetRuntime()"], "Fixed commit": "72d87c208f0e8df2b70ba4e108893ba9c88374f4", "Url": "https://api.github.com/repos/jboss-switchyard/tools", "Date": "2015-11-12T17:44:28Z"},
{"Line": "=>854", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_projectMetatData.getTargetRuntime()) != null) { java.lang.String label = _projectMetatData.getTargetRuntime().getProperty(\"switchyard.label\"); isIntegration = label.contains(\"Integration\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8256/buggy-version/eclipse.plugins.org.switchyard.tools.ui.src.org.switchyard.tools.ui.operations.CreateSwitchYardProjectOperation.java", "BodyUseAPI": ["org.eclipse.wst.common.project.facet.core.runtime.IRuntimeComponent.getProperty(java.lang.String)", "org.switchyard.tools.ui.operations.CreateSwitchYardProjectOperation.NewSwitchYardProjectMetaData.getTargetRuntime()"], "Fixed commit": "72d87c208f0e8df2b70ba4e108893ba9c88374f4", "Url": "https://api.github.com/repos/jboss-switchyard/tools", "Date": "2015-11-12T17:44:28Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTargetRuntime()) != null) { java.lang.String label = getTargetRuntime().getProperty(\"switchyard.label\"); isIntegration = label.contains(\"Integration\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8256/buggy-version/eclipse.plugins.org.switchyard.tools.ui.src.org.switchyard.tools.ui.wizards.ProjectConfigurationWizardPage.java", "BodyUseAPI": [], "Fixed commit": "72d87c208f0e8df2b70ba4e108893ba9c88374f4", "Url": "https://api.github.com/repos/jboss-switchyard/tools", "Date": "2015-11-12T17:44:28Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTargetRuntime()) != null) { java.lang.String label = getTargetRuntime().getProperty(\"switchyard.label\"); isIntegration = label.contains(\"Integration\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8256/buggy-version/eclipse.plugins.org.switchyard.tools.ui.src.org.switchyard.tools.ui.wizards.ProjectConfigurationWizardPage.java", "BodyUseAPI": [], "Fixed commit": "72d87c208f0e8df2b70ba4e108893ba9c88374f4", "Url": "https://api.github.com/repos/jboss-switchyard/tools", "Date": "2015-11-12T17:44:28Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_settingsGroup.getSelectedTargetRuntime()) != null) { java.lang.String label = _settingsGroup.getSelectedTargetRuntime().getProperty(\"switchyard.label\"); isIntegration = label.contains(\"Integration\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8256/buggy-version/eclipse.plugins.org.switchyard.tools.ui.src.org.switchyard.tools.ui.properties.SwitchYardSettingsPropertyPage.java", "BodyUseAPI": ["org.switchyard.tools.ui.common.SwitchYardSettingsGroup.getSelectedTargetRuntime()", "_settingsGroup.getSelectedTargetRuntime().getProperty(java.lang.String)"], "Fixed commit": "72d87c208f0e8df2b70ba4e108893ba9c88374f4", "Url": "https://api.github.com/repos/jboss-switchyard/tools", "Date": "2015-11-12T17:44:28Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_settingsGroup.getSelectedTargetRuntime()) != null) { java.lang.String label = _settingsGroup.getSelectedTargetRuntime().getProperty(\"switchyard.label\"); isIntegration = label.contains(\"Integration\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8256/buggy-version/eclipse.plugins.org.switchyard.tools.ui.src.org.switchyard.tools.ui.properties.SwitchYardSettingsPropertyPage.java", "BodyUseAPI": ["org.switchyard.tools.ui.common.SwitchYardSettingsGroup.getSelectedTargetRuntime()", "_settingsGroup.getSelectedTargetRuntime().getProperty(java.lang.String)"], "Fixed commit": "72d87c208f0e8df2b70ba4e108893ba9c88374f4", "Url": "https://api.github.com/repos/jboss-switchyard/tools", "Date": "2015-11-12T17:44:28Z"},
{"Line": "=>1495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.db.document.ODatabaseDocument.getMetadata()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((metadata.getImmutableSchemaSnapshot()) != null) metadata.clearThreadLocalSchemaSnapshot();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1548/buggy-version/core.src.main.java.com.orientechnologies.orient.core.record.impl.ODocument.java", "BodyUseAPI": ["com.orientechnologies.orient.core.metadata.OMetadataInternal.clearThreadLocalSchemaSnapshot()"], "Fixed commit": "5cf81e31b0748ecb9cda582077ed6d8eb9c4c212", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-01-20T12:50:50Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((order.getStatus()) == (OrderStatus.NOTPAID.getCode())) { return \"0.00\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5081/buggy-version/ts-cancel-service.src.main.java.cancel.service.CancelServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "026738aee2a856b9520707daf4c8567b8f006afe", "Url": "https://api.github.com/repos/microcosmx/workspace_microservices", "Date": "2017-07-14T09:37:29Z"},
{"Line": "=>1074", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tms.tds.Tag.encodeTags(java.lang.String[],org.tms.tds.ContextImpl,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((queryTags == null) || (queryTags.isEmpty())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1473/buggy-version/src.src.org.tms.tds.CellImpl.java", "BodyUseAPI": [], "Fixed commit": "95ea883c07205cc9aa825bb2955277c87ce2b28a", "Url": "https://api.github.com/repos/cdswindell/tms", "Date": "2015-10-23T19:40:57Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tms.tds.Tag.encodeTags(java.lang.String[],org.tms.tds.ContextImpl,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((queryTags == null) || (queryTags.isEmpty())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1473/buggy-version/src.src.org.tms.tds.TableCellsElementImpl.java", "BodyUseAPI": [], "Fixed commit": "95ea883c07205cc9aa825bb2955277c87ce2b28a", "Url": "https://api.github.com/repos/cdswindell/tms", "Date": "2015-10-23T19:40:57Z"},
{"Line": "=>694", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mEmptyId) != 0) { mEmpty.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8619/buggy-version/UltimateRecyclerView.ultimaterecyclerview.src.main.java.com.marshalchen.ultimaterecyclerview.UltimateRecyclerView.java", "BodyUseAPI": [], "Fixed commit": "b699f90bd16907ff125b0d3fec1f922664ae57d6", "Url": "https://api.github.com/repos/HKMOpen/UltimateRecyclerView", "Date": "2015-07-19T06:31:06Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.smoothbuild.lang.builtin.java.javac.JavacFunction.Worker.toJavaFiles(org.smoothbuild.lang.type.SArray<org.smoothbuild.lang.type.SFile>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.google.common.collect.Iterables.isEmpty(inputSourceFiles)) { pluginApi.report(new org.smoothbuild.lang.builtin.java.javac.err.NoJavaSourceFilesFoundWarning()); return pluginApi.arrayBuilder(org.smoothbuild.lang.builtin.java.javac.FILE_ARRAY).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5330/buggy-version/src.java.org.smoothbuild.lang.builtin.java.javac.JavacFunction.java", "BodyUseAPI": [], "Fixed commit": "1ba15b8f2a38169bb681c2fcda912f68dd49a1e3", "Url": "https://api.github.com/repos/mikosik/smooth-build", "Date": "2013-12-09T14:08:38Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((x >= 0) && (y >= 0)) && (x < (Utilities.Constants.height))) && (y < (Utilities.Constants.width))) { imageMatrix[x][y] = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5082/buggy-version/src.models.Sketch.java", "BodyUseAPI": [], "Fixed commit": "fe1c5de7c874ccd37ee0c5187fa4193ee2935d7f", "Url": "https://api.github.com/repos/anamika25/SketchReco_Crossword", "Date": "2016-11-30T21:59:02Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputArea.getText().trim().isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1109/buggy-version/il.org.spartan.intellij-spartanizer.src.main.il.org.spartan.Leonidas.plugin.GUI.PlaygroundController.Playground.java", "BodyUseAPI": [], "Fixed commit": "41b5a924ef0b957fd62f50456d672b328545d997", "Url": "https://api.github.com/repos/SpartanRefactoring/Main", "Date": "2017-06-01T15:43:48Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["databaseRecord.getTransaction().isActive()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!txWasActive) graph.getRawGraph().begin();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6877/buggy-version/graphdb.src.main.java.com.orientechnologies.orient.graph.sql.OGraphCommandExecutorSQLFactory.java", "BodyUseAPI": [], "Fixed commit": "d528c59584b8165ba6c3530ff7e7bc7fffc83409", "Url": "https://api.github.com/repos/lucab74/orientdb", "Date": "2014-01-21T19:15:15Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edge == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/538/buggy-version/inmemory.src.main.java.org.vertexium.inmemory.InMemoryGraph.java", "BodyUseAPI": [], "Fixed commit": "25e7609b7f174cdeaeec3db6748de0624de1707b", "Url": "https://api.github.com/repos/visallo/vertexium", "Date": "2015-09-25T23:07:59Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((address) instanceof java.net.InetSocketAddress) { if (\"0.0.0.0\".equals(((java.net.InetSocketAddress) (address)).getAddress().getHostAddress())) { acceptor.unbind(acceptor.getLocalAddresses()); } }else { acceptor.unbind(address); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2903/buggy-version/components.camel-mina2.src.main.java.org.apache.camel.component.mina2.Mina2Consumer.java", "BodyUseAPI": [], "Fixed commit": "4e4cc18929ae1e35515667d368be687d31930a93", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-12-22T00:49:14Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bufferedReader) != null) { bufferedReader.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4240/buggy-version/src.log.LogReaderManager.java", "BodyUseAPI": [], "Fixed commit": "6a2d69a65cbd13deb4fd59b608545d10773ea4fb", "Url": "https://api.github.com/repos/EddiePi/tracing-server-2.0", "Date": "2017-08-07T20:18:22Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((ackerNum) > 0) && (tuple.getMessageId().isAnchored())) { tuple_start_times.put(tuple, java.lang.System.currentTimeMillis()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3185/buggy-version/jstorm-core.src.main.java.com.alibaba.jstorm.task.execute.BoltExecutors.java", "BodyUseAPI": ["com.alibaba.jstorm.utils.RotatingMap<backtype.storm.tuple.Tuple, java.lang.Long>.put(backtype.storm.tuple.Tuple,long)"], "Fixed commit": "b128f5afd4e12dfd23833427757e1cc307843dc5", "Url": "https://api.github.com/repos/cocofree/jstorm", "Date": "2016-05-13T01:56:40Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yjp.mediaplatform.service.UserService.saveChangePwdInfo(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(com.yjp.mediaplatform.utils.CommonUtils.isStringNullOrEmpty(error))) { redirectAttr.addFlashAttribute(\"error\", error); return \"redirect:/forget_password\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/177/buggy-version/src.main.java.com.yjp.mediaplatform.controller.ForgetPasswordController.java", "BodyUseAPI": ["org.springframework.web.servlet.mvc.support.RedirectAttributes.addFlashAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "1cd0764541430923a92155596cc275636357b821", "Url": "https://api.github.com/repos/yjp19871013/mediaplatform", "Date": "2017-12-18T05:12:57Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(methods.containsKey(amountOfParams))) { synchronized(this) { if (!(methods.containsKey(amountOfParams))) { java.lang.String fullName = ((java.lang.String) (be.nabu.libs.evaluator.impl.MethodOperation.getParts().get(0).getContent())); methods.put(amountOfParams, findMethod(fullName, amountOfParams)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3598/buggy-version/src.main.java.be.nabu.libs.evaluator.impl.MethodOperation.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.lang.reflect.Method>.containsKey(int)", "java.util.Map<java.lang.Integer, java.lang.reflect.Method>.put(int,java.lang.reflect.Method)", "be.nabu.libs.evaluator.impl.MethodOperation<T>.findMethod(java.lang.String,int)"], "Fixed commit": "e70f68630893808208464a4bbf1a0a15b33afe68", "Url": "https://api.github.com/repos/nablex/evaluator-api", "Date": "2015-09-02T06:48:03Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dir.exists())) { dir.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/231/buggy-version/src.main.java.controller.mainpage.ClassButtonsController.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "6a69fa88ea46b0685f1504ad3ec214c065aaaff2", "Url": "https://api.github.com/repos/goscott/309Grader", "Date": "2015-02-14T18:19:25Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mProfiles.getList().elementAt(id).getStartByButton()) mStartButton.setChecked(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8590/buggy-version/app.src.main.java.pt.vigie.view.StartFragment.java", "BodyUseAPI": [], "Fixed commit": "b08a17926652bc9781b8d55e2b0e2ed4856f66d9", "Url": "https://api.github.com/repos/PauloFer1/VigieGo", "Date": "2016-11-16T00:55:02Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((_tmpdatas) == null) && ((_model) != null)) && ((_model.getSize()) > 0)) { onInitRenderNow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5766/buggy-version/zul.src.org.zkoss.zul.Selectbox.java", "BodyUseAPI": [], "Fixed commit": "5ead06b35a666bb143e03175d2d413b04c82ac1c", "Url": "https://api.github.com/repos/VincentJian/zk", "Date": "2013-07-31T09:55:45Z"},
{"Line": "=>887", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (stringValue == null) setLinkedType(null); else setLinkedType(com.orientechnologies.orient.core.metadata.schema.OType.valueOf(stringValue));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/913/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.schema.OPropertyImpl.java", "BodyUseAPI": ["com.orientechnologies.orient.core.metadata.schema.OType.valueOf(java.lang.String)", "com.orientechnologies.orient.core.metadata.schema.OPropertyImpl.setLinkedType(com.orientechnologies.orient.core.metadata.schema.OType.valueOf(stringValue))"], "Fixed commit": "ff547b5e2f7c0b123c62ecb5240b5e359411fc06", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-06-10T13:55:17Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"null\".equalsIgnoreCase(value)) prop.set(attribute, null); else prop.set(attribute, value);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/913/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.OCommandExecutorSQLAlterProperty.java", "BodyUseAPI": ["com.orientechnologies.orient.core.metadata.schema.OPropertyImpl.set(com.orientechnologies.orient.core.metadata.schema.OProperty.ATTRIBUTES,java.lang.String)"], "Fixed commit": "ff547b5e2f7c0b123c62ecb5240b5e359411fc06", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-06-10T13:55:17Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iTargetClass == null) return iValue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/913/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.schema.OType.java", "BodyUseAPI": [], "Fixed commit": "ff547b5e2f7c0b123c62ecb5240b5e359411fc06", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-06-10T13:55:17Z"},
{"Line": "=>2214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (generateLogo) { generateLogo(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4657/buggy-version/appserver.extras.payara-micro.payara-micro-core.src.main.java.fish.payara.micro.impl.PayaraMicroImpl.java", "BodyUseAPI": [], "Fixed commit": "44ff727e0011f4cccd49f3e6ab01a99c6b4f30f7", "Url": "https://api.github.com/repos/Pandrex247/Payara", "Date": "2017-01-20T11:22:29Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((java.lang.Integer.parseInt(parts[1])) == 9) && ((java.lang.Integer.parseInt(parts[2])) >= 2)) { getServer().getPluginManager().registerEvents(new me.gnat008.perworldinventory.PlayerSpawnLocationListener(this), this); }else if ((java.lang.Integer.parseInt(parts[1])) == 10) { getServer().getPluginManager().registerEvents(new me.gnat008.perworldinventory.PlayerSpawnLocationListener(this), this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5031/buggy-version/src.main.java.me.gnat008.perworldinventory.PerWorldInventory.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "047c94e6bd715bb493661ea57dab7ab1bd527366", "Url": "https://api.github.com/repos/Gnat008/PerWorldInventory", "Date": "2016-06-09T15:01:38Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.focus) != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4226/buggy-version/src.gfx.forms.presets.containerForm.TravelContainerForm.java", "BodyUseAPI": [], "Fixed commit": "cbf19422828e83744afd0c3d6471464630f48a74", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2017-03-10T11:29:59Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.RadioGroup.getCheckedRadioButtonId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (optionSelected != (-1)) { android.view.View radioSelected = pollRadioGroup.findViewById(optionSelected); int radioIndex = pollRadioGroup.indexOfChild(radioSelected); activity.onVoteClick(((java.lang.String) (thisView.getTag())), radioIndex, view); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1659/buggy-version/app.src.main.java.hk.ust.cse.hunkim.questionroom.QuestionListAdapter.java", "BodyUseAPI": ["android.widget.RadioGroup.findViewById(int)"], "Fixed commit": "2c6662495a3933290725e5be6d9fb58ad883d44d", "Url": "https://api.github.com/repos/Hanyoma/questionsAndroid", "Date": "2015-11-23T17:03:06Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((stacks) != 0) && (round.isWallsActive())) { stacks = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5262/buggy-version/EclipseProject.src.se.chalmers.tda367.group7.achtung.model.powerups.RemoveWallsPowerUp.java", "BodyUseAPI": [], "Fixed commit": "ab5bb2c3100c2d582dd1e774a440bd4f01d0e26f", "Url": "https://api.github.com/repos/helmertz/achtung-die-klonen", "Date": "2013-05-17T08:28:16Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (unit().isLoaded()) { unit().unload(unit()); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2923/buggy-version/src.atlantis.units.AtlantisUnitOrders.java", "BodyUseAPI": [], "Fixed commit": "68dddd8d44c5b1465d02839210f230029c320b8f", "Url": "https://api.github.com/repos/Ravaelles/Atlantis", "Date": "2017-02-11T20:33:06Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.math.BigInteger.toString(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((result.length()) < 40) { java.lang.String zeroes = \"0000000000000000000000000000000000000000\"; result = (zeroes.substring(0, ((zeroes.length()) - (result.length())))) + result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3582/buggy-version/api.src.main.java.com.ichi2.anki.api.Utils.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "6b30365bec5121de4ee12b84a67e196ff802ba29", "Url": "https://api.github.com/repos/marcardar/Anki-Android", "Date": "2016-03-10T19:58:51Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (getProperty(Constants.FS_S3A_CONNECTION_MAXIMUM))) { sc.hadoopConfiguration().set(Constants.FS_S3A_CONNECTION_MAXIMUM, getProperty(Constants.FS_S3A_CONNECTION_MAXIMUM)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3039/buggy-version/src.main.java.org.apache.zeppelin.interpreter.SnappyDataSqlZeppelinInterpreter.java", "BodyUseAPI": [], "Fixed commit": "888f64b5c2ecfb4343b4d0aaf8c837b8f29fa181", "Url": "https://api.github.com/repos/SnappyDataInc/zeppelin-interpreter", "Date": "2016-10-13T12:00:40Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (session.isConnected()) { org.androidpn.server.xmpp.net.XmppIoHandler.log.debug(\"the session is still connect...do nothing.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8703/buggy-version/androidpn-server-bin-tomcat.src.org.androidpn.server.xmpp.net.XmppIoHandler.java", "BodyUseAPI": [], "Fixed commit": "a959cd04d287faf817682b5af720ed99c8395e86", "Url": "https://api.github.com/repos/msdx/androidpn", "Date": "2014-04-11T09:25:34Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (ultimateRecyclerView)) { ultimateRecyclerView.reenableLoadmore(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8156/buggy-version/bone.src.main.java.com.idogfooding.bone.ui.recycler.RecyclerViewFragment.java", "BodyUseAPI": [], "Fixed commit": "0072b39fb9cff2d7209e685883a2bbff7f1c8218", "Url": "https://api.github.com/repos/zhangchaoxu/bone-android", "Date": "2016-09-05T00:49:44Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (ultimateRecyclerView)) { ultimateRecyclerView.disableLoadmore(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8156/buggy-version/bone.src.main.java.com.idogfooding.bone.ui.recycler.RecyclerViewFragment.java", "BodyUseAPI": [], "Fixed commit": "0072b39fb9cff2d7209e685883a2bbff7f1c8218", "Url": "https://api.github.com/repos/zhangchaoxu/bone-android", "Date": "2016-09-05T00:49:44Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) == 1) { be.uantwerpen.SS.client.view.Main.debug = args[0].equals(\"-d\"); }else { be.uantwerpen.SS.client.view.Main.debug = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7562/buggy-version/src.be.uantwerpen.SS.client.view.Main.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "f610a0dbd1ec24df7537ecfcf8f220cadc987271", "Url": "https://api.github.com/repos/kevinheyvaert/S-Software-BikeShop", "Date": "2014-11-09T15:29:46Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (remainingToFind == 0) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7667/buggy-version/src.main.java.org.terasology.workstation.process.inventory.InventoryInputComponent.java", "BodyUseAPI": [], "Fixed commit": "2c9946efbf3933c03dae09099631948ed12bd95f", "Url": "https://api.github.com/repos/Nanoware/Workstation", "Date": "2014-12-08T05:29:54Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mod < 0) { mod += master.length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6389/buggy-version/src.main.java.net.sllmdilab.t5xrefmanager.util.TimeShift.java", "BodyUseAPI": [], "Fixed commit": "661673ad21b395edb4a1ae94784e67d0b25d2dbf", "Url": "https://api.github.com/repos/sll-mdilab/t5-pid-xref-manager", "Date": "2016-03-17T13:25:58Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (distanceFromIntervalStart < 0) { distanceFromIntervalStart += master.length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6389/buggy-version/src.main.java.net.sllmdilab.t5xrefmanager.util.TimeShift.java", "BodyUseAPI": [], "Fixed commit": "661673ad21b395edb4a1ae94784e67d0b25d2dbf", "Url": "https://api.github.com/repos/sll-mdilab/t5-pid-xref-manager", "Date": "2016-03-17T13:25:58Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s.length()) == 0) { java.lang.System.out.println(\"Ignoring zero-length argument\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7178/buggy-version/src.Wiki2xhtmlArgsParser.java", "BodyUseAPI": [], "Fixed commit": "21831edf798d4ba0dc9300399f9f8e77b28f4151", "Url": "https://api.github.com/repos/Granjow/wiki2xhtml", "Date": "2017-09-17T15:31:56Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canStopFallDamage) { me.soringaming.moon.korra.com.AirJump.instances.put(e, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7147/buggy-version/src.me.soringaming.moon.korra.com.AirJump.java", "BodyUseAPI": [], "Fixed commit": "6655db37815a482c67ad3b23a5f7ee5925d8ac4a", "Url": "https://api.github.com/repos/Soringaming/AirJump", "Date": "2016-06-16T21:31:19Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deg == null) { return com.googlecode.blaisemath.graph.GraphUtils.EMPTY_GRAPH; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6456/buggy-version/src.main.java.com.googlecode.blaisemath.graph.mod.generators.DegreeDistributionGenerator.java", "BodyUseAPI": [], "Fixed commit": "3a406bab22a8b68b5ab89f306d0554e50bb1d58d", "Url": "https://api.github.com/repos/triathematician/blaisemath", "Date": "2016-01-21T12:47:03Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(R.id.next_gen_ime_bottom_background)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (backgroundImgView != null) { com.squareup.picasso.Picasso.with(getActivity()).load(com.wb.nextgen.NextGenApplication.getMovieMetaData().getStyle().getBackgroundImageURL(NextGenStyle.NextGenAppearanceType.InMovie)).fit().into(backgroundImgView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1754/buggy-version/src.com.wb.nextgen.fragment.NextGenPlayerBottomFragment.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(getActivity()).load(com.wb.nextgen.NextGenApplication.getMovieMetaData().getStyle().getBackgroundImageURL(NextGenStyle.NextGenAppearanceType.InMovie)).fit().into(android.widget.ImageView)"], "Fixed commit": "0efcb2ec4a263fbedc540cc1b281371cb8f8a4de", "Url": "https://api.github.com/repos/warnerbros/cpe-manifest-android-experience", "Date": "2016-08-04T17:23:41Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.wb.nextgen.util.utils.StringHelper.isEmpty(getBackgroundImgUri()))) com.squareup.picasso.Picasso.with(this).load(getBackgroundImgUri()).fit().into(backgroundImageView);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1754/buggy-version/src.com.wb.nextgen.activity.AbstractNextGenActivity.java", "BodyUseAPI": [], "Fixed commit": "0efcb2ec4a263fbedc540cc1b281371cb8f8a4de", "Url": "https://api.github.com/repos/warnerbros/cpe-manifest-android-experience", "Date": "2016-08-04T17:23:41Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((type.getVisibility()) == (spoon.reflect.declaration.ModifierKind.PUBLIC)) { this.imports.add(type.getReference()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8279/buggy-version/src.main.java.spoon.support.compiler.jdt.JDTImportBuilder.java", "BodyUseAPI": ["spoon.reflect.declaration.CtType.getReference()", "java.util.Set<spoon.reflect.reference.CtReference>.add(type.getReference())"], "Fixed commit": "68fe8b618e049419ebd46b85862ae68d01d9e15a", "Url": "https://api.github.com/repos/surli/spoon", "Date": "2017-10-11T12:15:14Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.cpcgifts.utils.TextTools.escapeHtml(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((link.length()) > 0) { userToUpdate.addProfile(service, link); }else { userToUpdate.removeProfile(service); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6197/buggy-version/src.fr.cpcgifts.EditUserServlet.java", "BodyUseAPI": ["fr.cpcgifts.model.CpcUser.addProfile(java.lang.String,java.lang.String)"], "Fixed commit": "bf6baebceae50f07f4ded2996e7676a4dc76bf36", "Url": "https://api.github.com/repos/bastien09/cpcgifts", "Date": "2014-11-23T10:04:01Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hearingLossOutOfRange) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6711/buggy-version/app.src.main.java.com.skradacz.audiometer.ExaminationActivity.java", "BodyUseAPI": [], "Fixed commit": "b9273c3d7c559941a158afac744e51bc8f511f65", "Url": "https://api.github.com/repos/mkusm/audiometer", "Date": "2016-03-25T14:04:19Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JComboBox.getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (ppp != null) { project.getPhotoSeries().addAll(ppp.getPhotoSeries()); for (de.quadrillenschule.azocamsyncd.astromode.PhotoSerie ps : project.getPhotoSeries()) { ps.setProject(project); } profileNamejTextField.setText(ppp.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6730/buggy-version/AZoCamSyncDesktop.src.de.quadrillenschule.azocamsyncd.astromode.gui.PhotoProjectJPanel.java", "BodyUseAPI": ["project.getPhotoSeries().addAll(ppp.getPhotoSeries())", "de.quadrillenschule.azocamsyncd.astromode.PhotoProjectProfile.getPhotoSeries()", "de.quadrillenschule.azocamsyncd.astromode.PhotoProjectProfile.toString()", "javax.swing.JTextField.setText(ppp.toString())"], "Fixed commit": "6ac135a489058677b8b9793a417fddf5b9fee923", "Url": "https://api.github.com/repos/andizottmann/AZoCamSync", "Date": "2015-03-05T11:42:12Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((adql.query.SelectAllColumns) (item)).getAdqlTable()) != null) columns.addAll(((adql.query.SelectAllColumns) (item)).getAdqlTable().getDBColumns()); else columns.addAll(from.getDBColumns());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1674/buggy-version/src.adql.query.ADQLQuery.java", "BodyUseAPI": ["((adql.query.SelectAllColumns) (item)).getAdqlTable().getDBColumns()", "adql.query.SelectItem.getAdqlTable()", "java.util.ArrayList<adql.db.DBColumn>.addAll(((adql.query.SelectAllColumns) (item)).getAdqlTable().getDBColumns())"], "Fixed commit": "7f5f199266a012fdb29a13736a6cc1f95b65ef7d", "Url": "https://api.github.com/repos/gmantele/taplib", "Date": "2014-09-25T13:37:55Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["parser.Expr.getValue(<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (ret == null) { throw new parser.DatabaseException(\"Syntax error.\"); }else if (((tp.isVARCHAR()) || (tp.isDECIMAL())) || (tp.isTIMESTAMP())) { return tp.clone().setValue(ret.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6581/buggy-version/src.parser.InsertVisitor.java", "BodyUseAPI": ["parser.Type.toString()", "tp.clone().setValue(ret.toString())"], "Fixed commit": "8eafe493cafe7e5f2f026fa917dfe109d91b056b", "Url": "https://api.github.com/repos/Izecson/LightDatabase", "Date": "2017-06-03T08:21:13Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (towerToBuild != null) towerRangeRenderer.setAttackRange(towerToBuild.getAttackRange()); else towerRangeRenderer.setAttackRange(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7467/buggy-version/gamedev-td-core.src.gamedev.screen.GameUserInterface.java", "BodyUseAPI": ["gamedev.screen.render.TowerRangeRenderer.setAttackRange(towerToBuild.getAttackRange())", "gamedev.entity.Tower.getAttackRange()"], "Fixed commit": "088805859bb2403f5d2c6435a122935f80853805", "Url": "https://api.github.com/repos/marvinbables/libgdx-tower-defense", "Date": "2014-12-14T18:10:16Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (towerType != null) ghostTower = gamedev.td.SpriteManager.getInstance().getTower(towerType); else ghostTower.setColor(Config.clearer);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7467/buggy-version/gamedev-td-core.src.gamedev.screen.GameUserInterface.java", "BodyUseAPI": ["gamedev.td.SpriteManager.getInstance().getTower(gamedev.entity.TowerFactory.TowerType)"], "Fixed commit": "088805859bb2403f5d2c6435a122935f80853805", "Url": "https://api.github.com/repos/marvinbables/libgdx-tower-defense", "Date": "2014-12-14T18:10:16Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.list) == null) && ((other.list) == null)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7687/buggy-version/workspace.at.jku.weiner.cpreprocess.src.at.jku.weiner.cpreprocess.utils.macros.DefinitionFunctionMacro.java", "BodyUseAPI": [], "Fixed commit": "b37647a30d13b0b178e6f789077974ccd71c828b", "Url": "https://api.github.com/repos/timeraider4u/kefax", "Date": "2015-11-24T17:14:16Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value != null) { if (value instanceof java.lang.Long) { modifiedValue = new java.util.Date(((java.lang.Long) (value))); }else { modifiedValue = javax.xml.bind.DatatypeConverter.parseDateTime(value.toString()).getTime(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/581/buggy-version/olastic-core.src.main.java.com.hevelian.olastic.core.edm.PropertyCreator.java", "BodyUseAPI": ["javax.xml.bind.DatatypeConverter.parseDateTime(java.lang.String)", "javax.xml.bind.DatatypeConverter.parseDateTime(value.toString()).getTime()", "java.lang.Object.toString()"], "Fixed commit": "c06c23ed67c34a2f164d0bab95acbc3849439a63", "Url": "https://api.github.com/repos/RuslanDidyk/hevelian-olastic", "Date": "2017-03-29T14:26:52Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRefreshView) != null) refreshView.onRefreshComplete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2629/buggy-version/src.info.bottiger.podcast.service.PodcastDownloadManager.java", "BodyUseAPI": [], "Fixed commit": "1eab151710a56fc9be1e184d9c018373b7e7773a", "Url": "https://api.github.com/repos/bottiger/SoundWaves", "Date": "2013-01-17T08:22:58Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getWorld().getBlockState(pos.offset(facing))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((state1.getBlock()) instanceof se.gory_moon.horsepower.blocks.BlockHPBase) { java.lang.System.out.println(\"instance\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4741/buggy-version/src.main.java.se.gory_moon.horsepower.tileentity.TileEntityFiller.java", "BodyUseAPI": [], "Fixed commit": "93e4fee8b89aaa0c60157ce4cb7443bf81af3e3a", "Url": "https://api.github.com/repos/GoryMoon/HorsePower", "Date": "2017-07-13T23:45:13Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player.capabilities.isCreativeMode) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/279/buggy-version/src.hunternif.mc.rings.item.PoweredRing.java", "BodyUseAPI": [], "Fixed commit": "2d5bce7551831a6d90e70ef6568d9009b4c3c5fb", "Url": "https://api.github.com/repos/Hunternif/Rings-of-Power", "Date": "2013-09-29T15:22:20Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getGameField(((int) ((gf.getX()) - (1.5 * width))), ((gf.getY()) - height))) != null) gf.addNeighbor(getGameField(((int) ((gf.getX()) - (1.5 * width))), ((gf.getY()) - height)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/890/buggy-version/Chaos-Schach.src.game.Board.java", "BodyUseAPI": ["game.GameField.addNeighbor(game.GameField)", "game.GameField.getX()", "game.GameField.getY()", "game.Board.getGameField(((int) ((gf.getX()) - (1.5 * width))),((gf.getY()) - height))"], "Fixed commit": "b25695b28ed5fd8f44f348d2355f0a81be5d82cc", "Url": "https://api.github.com/repos/knechtROBrecht/Chaos-Schach", "Date": "2013-11-18T16:25:58Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getGameField(((int) ((gf.getX()) + (1.5 * width))), ((gf.getY()) - height))) != null) gf.addNeighbor(getGameField(((int) ((gf.getX()) + (1.5 * width))), ((gf.getY()) - height)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/890/buggy-version/Chaos-Schach.src.game.Board.java", "BodyUseAPI": ["game.GameField.getX()", "game.Board.getGameField(((int) ((gf.getX()) + (1.5 * width))),((gf.getY()) - height))", "game.GameField.addNeighbor(game.GameField)", "game.GameField.getY()"], "Fixed commit": "b25695b28ed5fd8f44f348d2355f0a81be5d82cc", "Url": "https://api.github.com/repos/knechtROBrecht/Chaos-Schach", "Date": "2013-11-18T16:25:58Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getGameField(gf.getX(), ((gf.getY()) - (2 * height)))) != null) gf.addNeighbor(getGameField(gf.getX(), ((gf.getY()) - (2 * height))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/890/buggy-version/Chaos-Schach.src.game.Board.java", "BodyUseAPI": ["game.GameField.addNeighbor(game.GameField)", "game.GameField.getX()", "game.Board.getGameField(gf.getX(),((gf.getY()) - (2 * height)))", "game.GameField.getY()"], "Fixed commit": "b25695b28ed5fd8f44f348d2355f0a81be5d82cc", "Url": "https://api.github.com/repos/knechtROBrecht/Chaos-Schach", "Date": "2013-11-18T16:25:58Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getGameField(((int) ((gf.getX()) - (1.5 * width))), ((gf.getY()) + height))) != null) gf.addNeighbor(getGameField(((int) ((gf.getX()) - (1.5 * width))), ((gf.getY()) + height)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/890/buggy-version/Chaos-Schach.src.game.Board.java", "BodyUseAPI": ["game.Board.getGameField(((int) ((gf.getX()) - (1.5 * width))),((gf.getY()) + height))", "game.GameField.addNeighbor(game.GameField)", "game.GameField.getX()", "game.GameField.getY()"], "Fixed commit": "b25695b28ed5fd8f44f348d2355f0a81be5d82cc", "Url": "https://api.github.com/repos/knechtROBrecht/Chaos-Schach", "Date": "2013-11-18T16:25:58Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getGameField(gf.getX(), ((gf.getY()) + (2 * height)))) != null) gf.addNeighbor(getGameField(gf.getX(), ((gf.getY()) + (2 * height))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/890/buggy-version/Chaos-Schach.src.game.Board.java", "BodyUseAPI": ["game.GameField.addNeighbor(game.GameField)", "game.Board.getGameField(gf.getX(),((gf.getY()) + (2 * height)))", "game.GameField.getX()", "game.GameField.getY()"], "Fixed commit": "b25695b28ed5fd8f44f348d2355f0a81be5d82cc", "Url": "https://api.github.com/repos/knechtROBrecht/Chaos-Schach", "Date": "2013-11-18T16:25:58Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getGameField(((int) ((gf.getX()) + (1.5 * width))), ((gf.getY()) + height))) != null) gf.addNeighbor(getGameField(((int) ((gf.getX()) + (1.5 * width))), ((gf.getY()) + height)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/890/buggy-version/Chaos-Schach.src.game.Board.java", "BodyUseAPI": ["game.GameField.getY()", "game.GameField.getX()", "game.Board.getGameField(((int) ((gf.getX()) + (1.5 * width))),((gf.getY()) + height))", "game.GameField.addNeighbor(game.GameField)"], "Fixed commit": "b25695b28ed5fd8f44f348d2355f0a81be5d82cc", "Url": "https://api.github.com/repos/knechtROBrecht/Chaos-Schach", "Date": "2013-11-18T16:25:58Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (theJSON.has(\"extraHeaders\")) { external.JSON.JSONObject theExtraHeaders = theJSON.getJSONObject(\"extraHeaders\"); for (java.lang.String key : external.JSON.JSONObject.getNames(theExtraHeaders)) { extraHeaders.put(key, theExtraHeaders.get(key).toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3835/buggy-version/src.main.java.org.ggp.base.apps.tiltyard.TiltyardRequestFarm.java", "BodyUseAPI": [], "Fixed commit": "154581405da9962d546489d6e46cf49caea56c8b", "Url": "https://api.github.com/repos/gsj601/ggp-hardware", "Date": "2015-05-11T03:06:15Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ringBuffer) != null) return ringBuffer.get(a);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7248/buggy-version/src.com.jdon.async.disruptor.ValueEventProcessor.java", "BodyUseAPI": [], "Fixed commit": "7d053a778e0f0f0b6c9dd5ddc8fd5fff1aafb30d", "Url": "https://api.github.com/repos/banq/jdonframework", "Date": "2012-09-21T10:23:57Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ringBuffer) != null) return ringBuffer.get(a);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7248/buggy-version/src.com.jdon.async.disruptor.ValueEventProcessor.java", "BodyUseAPI": [], "Fixed commit": "7d053a778e0f0f0b6c9dd5ddc8fd5fff1aafb30d", "Url": "https://api.github.com/repos/banq/jdonframework", "Date": "2012-09-21T10:23:57Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDarkThemeUnlocked) { theme = android.preference.PreferenceManager.getDefaultSharedPreferences(this).getInt(\"pref_theme\", R.style.AppTheme_Light); }else { theme = R.style.AppTheme_Light; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1196/buggy-version/app.src.main.java.com.move4mobile.apps.bite.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8fde41020f2b37b8ad0f35898726ca31a87c30d8", "Url": "https://api.github.com/repos/mschilling/bite-android", "Date": "2016-09-30T14:02:35Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasTweet(tweet)) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6634/buggy-version/lonelyTwitter.src.ca.ualberta.cs.lonelytwitter.TwitterListModel.java", "BodyUseAPI": [], "Fixed commit": "309ffd128d15666cbee7eb3e482b1a58905c00b6", "Url": "https://api.github.com/repos/kenjyoung/lonelyTwitter", "Date": "2015-01-28T02:53:34Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["httpServletRequest.getRequestURL().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((path.lastIndexOf(\".\")) == (-1)) { contains = false; }else { contains = WebConstant.staticResource.contains(path.substring(path.lastIndexOf(\".\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8892/buggy-version/profile-common.src.main.java.com.doctor.profile.request.filter.AccessFilter.java", "BodyUseAPI": ["java.lang.String.substring(int)", "WebConstant.staticResource.contains(java.lang.String)", "java.lang.String.lastIndexOf(java.lang.String)"], "Fixed commit": "a0dfde2f122d76bbcbbeac01d6abc35b0c0f288f", "Url": "https://api.github.com/repos/sdcuike/profile-2015", "Date": "2015-10-12T07:51:58Z"},
{"Line": "=>1664", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Vector<com.bioxx.jmapgen.Lake>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((c.getElevation()) < (lake.lowestCenter.getElevation())) attrib.setLakeElev(c.getElevation());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6341/buggy-version/src.API.com.bioxx.jmapgen.IslandMap.java", "BodyUseAPI": ["com.bioxx.jmapgen.Center.getElevation()", "com.bioxx.jmapgen.LakeAttribute.setLakeElev(c.getElevation())"], "Fixed commit": "67ce857ab9dd4704bdb73413c44a0fcc8d7791ba", "Url": "https://api.github.com/repos/Deadrik/TFC2", "Date": "2017-05-02T04:09:02Z"},
{"Line": "=>577", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (c.hasAttribute(Attribute.Lake)) { com.bioxx.jmapgen.LakeAttribute attrib = ((com.bioxx.jmapgen.LakeAttribute) (c.getAttribute(Attribute.Lake))); attrib.setLakeElev(minElevation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6341/buggy-version/src.API.com.bioxx.jmapgen.IslandMap.java", "BodyUseAPI": ["com.bioxx.jmapgen.Center.getAttribute(Attribute.Lake)"], "Fixed commit": "67ce857ab9dd4704bdb73413c44a0fcc8d7791ba", "Url": "https://api.github.com/repos/Deadrik/TFC2", "Date": "2017-05-02T04:09:02Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javapaint.CreateInput.getNotches()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (notches > 0) { if ((colorIndex) != 4) { colorIndex += 1; }else { colorIndex = 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4776/buggy-version/src.javapaint.Create.java", "BodyUseAPI": [], "Fixed commit": "abbd638d0739b651f0bb50d719d02ef73407012b", "Url": "https://api.github.com/repos/CarolynOldAccount/tst", "Date": "2017-02-01T20:03:42Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scheduleInfo.getReoccurrence()) == 1) return msg;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/70/buggy-version/vipr-portal.StorageAPI.src.java.com.emc.sa.api.ScheduledEventService.java", "BodyUseAPI": [], "Fixed commit": "a56ac97264cdf8132379e234de6fd708d61a0331", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-09-27T13:59:18Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tempWord.equals(\"\"))) { finalWords.add(tempWord); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3452/buggy-version/src.org.amr.arabic.ArabicUtilities.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "2b2d6fba22c5c6e8d20ec572184280353914a1cd", "Url": "https://api.github.com/repos/kamranzafar/Better-Arabic-Reshaper", "Date": "2011-08-25T18:18:18Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.dcm4chee.arc.procedure.impl.MWLItem>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mwlSize > 1) ctx.setEventActionCode(AuditMessages.EventActionCode.Update); else ctx.setEventActionCode(AuditMessages.EventActionCode.Delete);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/746/buggy-version/dcm4chee-arc-procedure.src.main.java.org.dcm4chee.arc.procedure.impl.ProcedureServiceEJB.java", "BodyUseAPI": [], "Fixed commit": "6a450af9e3814bbe14b288f6b1e7675d017c6f6c", "Url": "https://api.github.com/repos/dcm4che/dcm4chee-arc-light", "Date": "2016-08-25T15:31:01Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cmd.hasOption(\"th\")) { threshold = java.lang.Double.valueOf(cmd.getOptionValue(\"th\")); }else { threshold = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1139/buggy-version/src.main.java.com.org.shark.graphtoolkits.applications.MergeGroups.java", "BodyUseAPI": ["org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String)", "java.lang.Double.valueOf(cmd.getOptionValue(\"th\"))"], "Fixed commit": "bc5aeaa9191071fbca4c270d223f74840667bc3f", "Url": "https://api.github.com/repos/shaoyx/GraphToolkits", "Date": "2015-10-10T11:44:26Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.getAsJsonPrimitive(playoutCore.pccp.FILTER_ID_KEY)) != null) { filterId = args.getAsJsonPrimitive(playoutCore.pccp.FILTER_ID_KEY).getAsInt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3378/buggy-version/src.playoutCore.pccp.PccpCommand.java", "BodyUseAPI": ["args.getAsJsonPrimitive(playoutCore.pccp.FILTER_ID_KEY).getAsInt()", "com.google.gson.JsonObject.getAsJsonPrimitive(playoutCore.pccp.FILTER_ID_KEY)"], "Fixed commit": "3bc8496adde44efe0ed8fbeddfd8162068837398", "Url": "https://api.github.com/repos/MagmaPlayout/mp-core", "Date": "2017-05-13T19:38:28Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bot.getBitcheese().dumpImage(byte[],java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (savedImage != null) { msg.getUser().getPendingImages().add(savedImage); bot.putOutbound(ru.bit1.pointim.bot.pojo.Message.makeTextResponce(msg, ((\"Image saved to \" + savedImage) + \"\\nWill be used in the next post automatically.\\nTo check pending images type command: images \"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7914/buggy-version/src.main.java.ru.bit1.pointim.bot.worker.InboundHandler.java", "BodyUseAPI": ["ru.bit1.pointim.bot.PointImBot.putOutbound(ru.bit1.pointim.bot.pojo.Message.makeTextResponce(msg, ((\"Image saved to \" + savedImage) + \"\\nWill be used in the next post automatically.\\nTo check pending images type command: images \")))", "ru.bit1.pointim.bot.pojo.Message.makeTextResponce(ru.bit1.pointim.bot.pojo.Message,java.lang.String)", "msg.getUser().getPendingImages().add(java.lang.String)"], "Fixed commit": "1f6f38424a884c7eec31ae04dc3dad0ed436ddd9", "Url": "https://api.github.com/repos/deemess/pointim_bot", "Date": "2015-11-25T05:17:50Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.tajo.master.exec.ScanNode.getTableDesc()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((table.getStats().getNumRows()) == 0) { estimatedRowNum = org.apache.tajo.TajoConstants.UNKNOWN_ROW_NUMBER; }else { estimatedRowNum = table.getStats().getNumRows(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4329/buggy-version/tajo-core.src.main.java.org.apache.tajo.master.exec.QueryExecutor.java", "BodyUseAPI": ["org.apache.tajo.master.exec.TableDesc.getStats()", "table.getStats().getNumRows()"], "Fixed commit": "279953eca8894acc665c7f8e466297dec2af45b0", "Url": "https://api.github.com/repos/hyunsik/tajo", "Date": "2015-09-24T15:28:38Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Bukkit.getPlayer(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (player == null) { return; }else if (!(player.isOnline())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2034/buggy-version/src.main.java.org.kwstudios.play.kwbungeelobby.listener.KWChannelMessageListener.java", "BodyUseAPI": ["org.bukkit.entity.Player.isOnline()"], "Fixed commit": "dae57ab5e84ca711621e1fb95bbe88a4227a645b", "Url": "https://api.github.com/repos/KWStudios/KWBungeeLobby", "Date": "2016-02-08T14:20:41Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.kwstudios.play.kwbungeelobby.signs.SignData.getQueuedPartyRequests().containsKey(event.getPlayer())) { org.kwstudios.play.kwbungeelobby.signs.SignData.getQueuedPartyRequests().remove(event.getPlayer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2034/buggy-version/src.main.java.org.kwstudios.play.kwbungeelobby.loader.EventListener.java", "BodyUseAPI": ["org.kwstudios.play.kwbungeelobby.signs.SignData.getQueuedPartyRequests().remove(event.getPlayer())", "org.bukkit.event.player.PlayerQuitEvent.getPlayer()"], "Fixed commit": "dae57ab5e84ca711621e1fb95bbe88a4227a645b", "Url": "https://api.github.com/repos/KWStudios/KWBungeeLobby", "Date": "2016-02-08T14:20:41Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.command.parser.DateParser.parseDate(java.lang.String)", "main.command.parser.DateParser.parseTime(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((d != null) || (t != null)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3647/buggy-version/TaskManagerProject.src.main.command.parser.DateParser.java", "BodyUseAPI": [], "Fixed commit": "1874acc199a85aa6ccd8eba3810e058bf267c692", "Url": "https://api.github.com/repos/cs2103aug2014-w11-1j/main", "Date": "2014-10-22T03:12:08Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.zzzmode.appopsx.ui.core.TextUtils.isEmpty(info.appName)) { info.appName = info.packageName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5363/buggy-version/app.src.main.java.com.zzzmode.appopsx.ui.core.Helper.java", "BodyUseAPI": [], "Fixed commit": "a971d1c184459da0d29d83c97d9f51a6e06939e1", "Url": "https://api.github.com/repos/8enet/AppOpsX", "Date": "2017-08-26T08:56:24Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((playlists.getPlist()) == null) { playlists.setPlist(new java.util.ArrayList<si.matjazcerkvenik.openmp3player.player.Playlist>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/395/buggy-version/src.si.matjazcerkvenik.openmp3player.io.PlaylistFactory.java", "BodyUseAPI": ["si.matjazcerkvenik.openmp3player.player.Playlists.setPlist(java.util.ArrayList<si.matjazcerkvenik.openmp3player.player.Playlist>)"], "Fixed commit": "e78b8b03276ee50e2b2e60d43b559533b238ed2d", "Url": "https://api.github.com/repos/matjaz99/OpenMp3Player", "Date": "2014-12-12T20:42:32Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(currentUser.getFriends_count()))) { java.lang.String number = ((bean.getUsers().size()) + \"/\") + (currentUser.getFriends_count()); menu.findItem(R.id.statusesbyidtimelinefragment_status_number).setTitle(number); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5290/buggy-version/src.org.qii.weiciyuan.ui.userinfo.FriendsListFragment.java", "BodyUseAPI": ["org.qii.weiciyuan.ui.userinfo.FriendsListFragment.getFriends_count()"], "Fixed commit": "e4b10f2d00e2a76a057b4dd31815807496512b1b", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-08-20T11:20:31Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(currentUser.getFollowers_count()))) { java.lang.String number = ((bean.getUsers().size()) + \"/\") + (currentUser.getFollowers_count()); menu.findItem(R.id.statusesbyidtimelinefragment_status_number).setTitle(number); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5290/buggy-version/src.org.qii.weiciyuan.ui.userinfo.FanListFragment.java", "BodyUseAPI": ["org.qii.weiciyuan.ui.userinfo.FanListFragment.getFollowers_count()"], "Fixed commit": "e4b10f2d00e2a76a057b4dd31815807496512b1b", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-08-20T11:20:31Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(message.equals(\"\"))) { try { yambaClient.postStatus(message); return co.edu.udea.compumovil.grupo11.yamba2.thread.YambaPostAsyncTask.OK_RESULT; } catch (java.lang.Exception e) { android.util.Log.e(co.edu.udea.compumovil.grupo11.yamba2.thread.YambaPostAsyncTask.TAG, \"A exception was thrown while posting process\", e); return co.edu.udea.compumovil.grupo11.yamba2.thread.YambaPostAsyncTask.FAIL_RESULT; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5484/buggy-version/ClassProject.CompuMovilYambaGrupo11.src.co.edu.udea.compumovil.grupo11.yamba2.thread.YambaPostAsyncTask.java", "BodyUseAPI": ["com.marakana.android.yamba.clientlib.YambaClient.postStatus(java.lang.String)"], "Fixed commit": "e65cb4c28d9e52448f19f8caac8ed772a0266a1d", "Url": "https://api.github.com/repos/npadierna/ComputacionMovil", "Date": "2014-05-16T22:45:19Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isLogout) { if (!(userDAO.findById(tokenSessionEntity.getUserId()).ownsPersona(personaId))) { throw new javax.ws.rs.NotAuthorizedException(\"Persona not owned by user\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5063/buggy-version/src.main.java.com.soapboxrace.core.bo.TokenSessionBO.java", "BodyUseAPI": [], "Fixed commit": "440bea2d56b7bb9712eb1fb4a2776192252e18db", "Url": "https://api.github.com/repos/SoapboxRaceWorld/soapbox-race-core", "Date": "2017-06-30T12:27:05Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fact.io.zfits.ZFitsStream.readDataFromBytes(byte[][],fact.io.zfits.ZFitsTable,java.nio.ByteOrder)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (item.containsKey(\"Data\")) { short[] data = ((short[]) (item.get(\"Data\"))); item.put(\"raw:data\", data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5/buggy-version/src.main.java.fact.io.zfits.ZFitsStream.java", "BodyUseAPI": ["stream.Data.put(java.lang.String,short[])", "stream.Data.get(java.lang.String)"], "Fixed commit": "d0d1af8e167661d7d6e3582a6c1a2ac2b7f66422", "Url": "https://api.github.com/repos/fact-project/fact-tools", "Date": "2016-07-27T17:50:11Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((logMaxAge) <= 0) { throw new org.sakuli.exceptions.SakuliInitException(org.sakuli.datamodel.properties.SakuliProperties.MAX_AGE_GREATER_ZERO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8238/buggy-version/src.core.src.main.java.org.sakuli.datamodel.properties.SakuliProperties.java", "BodyUseAPI": [], "Fixed commit": "f857134239080b85c63c43f0c686259eaf2f5dc0", "Url": "https://api.github.com/repos/ConSol/sakuli", "Date": "2016-02-19T15:40:10Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((life) > 0) gameEngine.playSound(SoundEffects.LaserShoot);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7488/buggy-version/app.src.main.java.com.starproductions.starmotion.starmotion.GameObjects.PlayerShip.java", "BodyUseAPI": [], "Fixed commit": "824908ab1aaebbe2ce73c020ffe48e7253297f46", "Url": "https://api.github.com/repos/NiklasWoiton/Starmotion", "Date": "2017-09-21T19:21:48Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAttribute) return javax.xml.XMLConstants.DEFAULT_NS_PREFIX; else prefixSuggestion = javax.xml.XMLConstants.DEFAULT_NS_PREFIX;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/297/buggy-version/project.processor.io.src.main.java.org.genxdm.processor.output.ContentHandlerOnXmlStreamWriter.java", "BodyUseAPI": [], "Fixed commit": "11f25c7bea42d7870b082b48fe9a47b635cc6164", "Url": "https://api.github.com/repos/TIBCOSoftware/genxdm", "Date": "2016-02-24T21:23:50Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ocpsoft.prettytime.nlp.PrettyTimeParser.parse(java.lang.String)", "org.ocpsoft.prettytime.nlp.PrettyTimeParser.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((((dateOneBy.size()) == 0) && ((dateTwoBy.size()) != 0)) && (checkForDateTime == true)) { java.lang.System.out.println(\"TEST test\"); setEndTime(checkAndSetDefaultEndTime(dateTwoBy.get(0), date)); taskName = (confirmTaskName + \" \") + (contentToAnalyse); setTaskName(taskName); }else if ((((dateOneBy.size()) != 0) && ((dateTwoBy.size()) != 0)) && (checkForDateTime == false)) { setEndTime(checkAndSetDefaultEndTime(dateOneBy.get(0), date)); taskName = (confirmTaskName + \" \") + tempTaskName; setTaskName(taskName); }else { taskName = userTask; setTaskName(taskName); setTaskType(TASK_TYPE.FLOATING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8430/buggy-version/DODO.src.Parser.AddParser.java", "BodyUseAPI": ["java.util.List<java.util.Date>.get(int)", "Parser.AddParser.checkAndSetDefaultEndTime(java.util.Date,java.util.Date)", "java.util.List<java.util.Date>.get(int)", "java.util.List<java.util.Date>.size()", "Parser.AddParser.setEndTime(java.util.Date)", "Parser.AddParser.checkAndSetDefaultEndTime(java.util.Date,java.util.Date)", "Parser.AddParser.setEndTime(java.util.Date)", "java.util.List<java.util.Date>.size()"], "Fixed commit": "30a2beb5690d23c543eeb3be0bea10561a2a4786", "Url": "https://api.github.com/repos/cs2103jan2016-W14-2J/main", "Date": "2016-04-02T03:06:24Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.event.entity.living.LivingHurtEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (entity.equals(event.getSource().getSourceOfDamage())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1177/buggy-version/mfarm.src.main.java.com.mordrum.mfarm.common.GeneListener.java", "BodyUseAPI": [], "Fixed commit": "c5c94621d7e23c2c970b6e64900964dc9481bf4b", "Url": "https://api.github.com/repos/Mordrum/chocolate", "Date": "2017-01-26T00:15:42Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.teotigraphix.caustk.gs.model.IGrooveStationModel.getMachine(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((machine.getSequencer().getMode()) == (com.teotigraphix.caustk.gs.machine.part.MachineSequencer.StepKeyboardMode.Step)) { com.teotigraphix.caustk.core.CtkDebug.log((\"XXX:\" + sixteenthStep)); if ((machine.getSequencer().getLocalMeasure()) == (position - 1)) stepKeyboard.setCurrentIndex(sixteenthStep); else stepKeyboard.setCurrentIndex((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5640/buggy-version/CausticGDX.src.main.java.com.teotigraphix.caustk.gs.view.sequencer.StepSequencerMediator.java", "BodyUseAPI": ["machine.getSequencer().getLocalMeasure()", "com.teotigraphix.caustk.gs.machine.GrooveMachine.getSequencer()"], "Fixed commit": "6016b09bfd46b4de37c9f92ddad4a5d829f58d35", "Url": "https://api.github.com/repos/teotigraphix/CausticSDK", "Date": "2013-09-21T13:38:25Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inventory.size()) != 0) { for (com.cazallau.adventure.Model.Item item : inventory) { inventario = (inventario + (item.getName())) + \"\\n\"; } }else { inventario = \"Inventario vacio\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4174/buggy-version/Adventure.Adventure.app.src.main.java.com.cazallau.adventure.Model.Inventory.java", "BodyUseAPI": [], "Fixed commit": "afd9f2ec85e48e8c22f247adc16ca8c12449a0f3", "Url": "https://api.github.com/repos/cazallau/Android-AdventuresGame", "Date": "2017-01-13T11:10:18Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((headerFile) == null) { result = java.util.Collections.emptySet(); }else { result = java.util.Collections.singleton(headerFile.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3573/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck.java", "BodyUseAPI": [], "Fixed commit": "4cff2eb7149113cd7549e9c4db97a189bbd1f3f3", "Url": "https://api.github.com/repos/xpdavid/checkstyle", "Date": "2017-01-28T18:47:16Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((curSwing) == (swings.length)) { if (!(repeatable)) { swings[0].setPrevSwing(swings[((curSwing) - 1)]); curSwing = 0; swings[curSwing].beginSwing(); }else { if (!(swings[1].beginSwing())) { swings[0].setPrevSwing(swings[((curSwing) - 1)]); curSwing = 0; swings[curSwing].beginSwing(); }else { swings[1].setPrevSwing(swings[((curSwing) - 1)]); curSwing = 1; } } }else if (!(swings[curSwing].beginSwing())) { swings[0].setPrevSwing(swings[((curSwing) - 1)]); curSwing = 0; swings[curSwing].beginSwing(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/65/buggy-version/dungeon-game-core.src.com.dungeon.game.item.equipable.weapon.swing.SwingSet.java", "BodyUseAPI": ["swings[curSwing].beginSwing()", "swings[curSwing].beginSwing()", "swings[curSwing].beginSwing()", "swings[0].setPrevSwing(swings[((curSwing) - 1)])", "swings[0].setPrevSwing(swings[((curSwing) - 1)])", "swings[1].setPrevSwing(swings[((curSwing) - 1)])", "swings[0].setPrevSwing(swings[((curSwing) - 1)])", "swings[1].beginSwing()", "swings[curSwing].beginSwing()"], "Fixed commit": "83ee714ec59c54c8129d5a45af1a0a6c61205333", "Url": "https://api.github.com/repos/nxbt/dungeon-game", "Date": "2016-07-09T20:15:25Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageUri) != null) { bitmap = getScaledBitmap(org.apache.cordova.camera.FileHelper.stripFileProtocol(imageUri.toString())); }else { this.failPicture(\"Unable to retrieve path to picture!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4636/buggy-version/src.android.CameraLauncher.java", "BodyUseAPI": [], "Fixed commit": "62df24e539e413cbfba085b3726c86944028d0ec", "Url": "https://api.github.com/repos/nixplay/cordova-plugin-camera", "Date": "2015-08-27T06:42:54Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (callbackContext == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4636/buggy-version/src.android.CameraLauncher.java", "BodyUseAPI": [], "Fixed commit": "62df24e539e413cbfba085b3726c86944028d0ec", "Url": "https://api.github.com/repos/nixplay/cordova-plugin-camera", "Date": "2015-08-27T06:42:54Z"},
{"Line": "=>637", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nonemptyBottom & nonemptyTop) & nonemptyShoe) { edu.hmc.cs.personalstylist.Clothing top = topScroll.getCenterItem(topLayout); edu.hmc.cs.personalstylist.Clothing bottom = bottomScroll.getCenterItem(bottomLayout); edu.hmc.cs.personalstylist.Clothing shoe = shoeScroll.getCenterItem(shoeLayout); edu.hmc.cs.personalstylist.Choose choose = new edu.hmc.cs.personalstylist.Choose(wardrobe); if (choose.judgeOutfit(top, bottom, shoe)) { checkX.setImageResource(R.drawable.checkmark_48); }else { checkX.setImageResource(R.drawable.facepalm_50); } }else { checkX.setImageResource(R.drawable.ic_action_help); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2480/buggy-version/app.src.main.java.edu.hmc.cs.personalstylist.viewOutfit.java", "BodyUseAPI": [], "Fixed commit": "ab3ac24cb155b59ee65bfb5f61ede7bfa9146ecd", "Url": "https://api.github.com/repos/slgsoccer/Fab-Fashion", "Date": "2014-12-05T05:15:41Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.util.PsiTreeUtil.prevVisibleLeaf(com.intellij.psi.PsiElement)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (\"(\".equals(prevVisibleLeaf.getText())) { return com.intellij.psi.util.PsiTreeUtil.prevVisibleLeaf(prevVisibleLeaf); }else { return prevVisibleLeaf.getParent().getFirstChild(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6982/buggy-version/src.main.java.org.ballerinalang.plugins.idea.editor.BallerinaParameterInfoHandler.java", "BodyUseAPI": ["com.intellij.psi.util.PsiTreeUtil.prevVisibleLeaf(com.intellij.psi.PsiElement)", "prevVisibleLeaf.getParent().getFirstChild()", "com.intellij.psi.PsiElement.getParent()"], "Fixed commit": "9452db16c2ed6f7235596bd672236a9f6a535a5c", "Url": "https://api.github.com/repos/ballerina-attic/plugin-intellij", "Date": "2017-09-08T14:30:00Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((finalBoss) == null) { plotText += (\"find the legendary \" + (finalLoot.toString())) + \". \"; }else { plotText += (\"defeat the evil \" + (finalBoss.toString())) + \" and restore peace in the galaxy. \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8455/buggy-version/se.chalmers.plotgen.PlotLine.PlotTextGenerator.java", "BodyUseAPI": [], "Fixed commit": "d80fdd4addf055ba107c6630dacdc4c121adb366", "Url": "https://api.github.com/repos/ravertass/KandidatRoguelike", "Date": "2014-05-20T07:49:34Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nodeList.get((i + 1)).getAction()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((nextAction.getActionType()) == (Action.ActionType.VISIT)) { plotText += (((mainCharacter.toString()) + \" first sets out for the \") + (nextAction.getObjectScene())) + \" star system.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8455/buggy-version/se.chalmers.plotgen.PlotLine.PlotTextGenerator.java", "BodyUseAPI": ["se.chalmers.plotgen.PlotData.Action.getObjectScene()"], "Fixed commit": "d80fdd4addf055ba107c6630dacdc4c121adb366", "Url": "https://api.github.com/repos/ravertass/KandidatRoguelike", "Date": "2014-05-20T07:49:34Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nodeList.get((i + 2)).getAction()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((nextNextAction.getObjectActor()) == (mainCharacter)) { speaker2 = nextNextAction.getSubjectActor(); }else { speaker2 = nextNextAction.getObjectActor(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8455/buggy-version/se.chalmers.plotgen.PlotLine.PlotTextGenerator.java", "BodyUseAPI": ["se.chalmers.plotgen.PlotData.Action.getObjectActor()", "se.chalmers.plotgen.PlotData.Action.getSubjectActor()"], "Fixed commit": "d80fdd4addf055ba107c6630dacdc4c121adb366", "Url": "https://api.github.com/repos/ravertass/KandidatRoguelike", "Date": "2014-05-20T07:49:34Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nodeList.get(i).getAction().getObjectProp().getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (location != null) { scene = location.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8455/buggy-version/se.chalmers.plotgen.PlotLine.PlotTextGenerator.java", "BodyUseAPI": ["se.chalmers.plotgen.PlotData.Scene.toString()"], "Fixed commit": "d80fdd4addf055ba107c6630dacdc4c121adb366", "Url": "https://api.github.com/repos/ravertass/KandidatRoguelike", "Date": "2014-05-20T07:49:34Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.elwan.todo.common.ConfigManager.getInstance().getInt(AppConstant.Keys.DB_TYPE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dbType == (AppConstant.DBType.MYSQL)) return new org.springframework.jdbc.datasource.DataSourceTransactionManager(dataSource()); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1149/buggy-version/src.main.java.com.elwan.todo.common.AppConfig.java", "BodyUseAPI": [], "Fixed commit": "a3a1dc21d733735bc89aaae3de0ba678de73fdb0", "Url": "https://api.github.com/repos/MostafaElwan/todo-demo", "Date": "2017-09-14T22:08:23Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (p != null) { vowelPlacement.add(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/9216/buggy-version/src.analysis.PhoneticEnvironment.java", "BodyUseAPI": ["java.util.Set<analysis.POSITION>.add(analysis.POSITION)"], "Fixed commit": "cd5b4f15f16c212bdeb9c4a094668acf3611de8f", "Url": "https://api.github.com/repos/pstakoff/rule-prediction", "Date": "2015-12-22T01:26:15Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.lang.model.util.Elements.getTypeElement(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (typeElt == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3745/buggy-version/src.main.java.io.vertx.docgen.Helper.java", "BodyUseAPI": [], "Fixed commit": "ede51d099a85a020180aa46e4ec174b3326abee2", "Url": "https://api.github.com/repos/InfoSec812/vertx-docgen", "Date": "2015-05-22T15:49:20Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((username) != null) { current_user = edu.calstatela.cpham24.eloteroman.DisplayActivities.utilities.JNetworkUtils.parseLoginUserJSON(json); }else { current_user = edu.calstatela.cpham24.eloteroman.DisplayActivities.utilities.JNetworkUtils.parseUserJSON(json); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2254/buggy-version/app.src.main.java.edu.calstatela.cpham24.eloteroman.DisplayActivities.DisplayProfileActivity.java", "BodyUseAPI": [], "Fixed commit": "79d29fb80cc5e9a6882cf278796daf07a9531e5a", "Url": "https://api.github.com/repos/cpham24/EloteroMan", "Date": "2017-08-09T04:00:37Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((username) != null) { url = edu.calstatela.cpham24.eloteroman.DisplayActivities.utilities.JNetworkUtils.buildUrlGetOneUserWithUsername(username); }else { url = edu.calstatela.cpham24.eloteroman.DisplayActivities.utilities.JNetworkUtils.buildUrlGetOneUser(user_id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2254/buggy-version/app.src.main.java.edu.calstatela.cpham24.eloteroman.DisplayActivities.DisplayProfileActivity.java", "BodyUseAPI": [], "Fixed commit": "79d29fb80cc5e9a6882cf278796daf07a9531e5a", "Url": "https://api.github.com/repos/cpham24/EloteroMan", "Date": "2017-08-09T04:00:37Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (map.containsKey(srcName)) { return map.get(srcName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3939/buggy-version/src.main.java.com.salesforce.dataloader.mapping.Mapper.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "d90179719db9beaebd00fb23069b525e52706f0b", "Url": "https://api.github.com/repos/federecio/dataloader", "Date": "2013-04-09T18:10:26Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(com.google.common.base.Strings.isNullOrEmpty(joinersSource))) { java.lang.String[] joinerUids = joinersSource.split(\";\"); for (java.lang.String joinerUid : joinerUids) { joiners.add(userRepository.findOne(java.lang.Long.valueOf(joinerUid))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5939/buggy-version/src.main.java.com.green.rider.server.controller.GreenRiderController.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "40d4d9947b325935b57830f1bf7f2fe8e191ae73", "Url": "https://api.github.com/repos/zhaozhiming/green_rider", "Date": "2013-07-20T11:44:06Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.h2.mvstore.MVMap<java.lang.String, java.lang.Long>.getOrDefault(java.lang.String,java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (latest == id) { state.put(def.name, previous); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/650/buggy-version/silo-engine.src.main.java.se.l4.silo.engine.internal.query.QueryEngineUpdater.java", "BodyUseAPI": [], "Fixed commit": "2262634af02e0fb4c33afa73b6ce807ce40b3829", "Url": "https://api.github.com/repos/LevelFourAB/silo", "Date": "2016-06-22T11:18:46Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getTime()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((date.after(d)) && (date.before(end))) { if (line.contains(databaseEntity)) { if (line.matches(\".*SELECT.*FROM.*\")) reads++; else if (((((line.matches(\".*INSERT INTO.*\")) || (line.matches(\".*DELETE FROM.*\"))) || (line.matches(\".*MERGE INTO.*\"))) || (line.matches(\".*MERGE INTO.*\"))) || (line.matches(\".*UPDATE .*SET.*\"))) writes++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2143/buggy-version/src.uk.ac.york.mhe504.dblm.datacapture.OJDBCLogProcessor.java", "BodyUseAPI": [], "Fixed commit": "56cf4f4752ad8304f78c6081769adee2653f0b7f", "Url": "https://api.github.com/repos/mhe504/DBLModeller", "Date": "2015-12-01T17:21:11Z"},
{"Line": "=>625", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((addingTile) && (!(ctrlPressed))) && (canFit(selectedBlock[0], selectedBlock[1], 1, 1))) grid[selectedBlock[0]][selectedBlock[1]] = selectedTile; else if ((removingTile) && (ctrlPressed)) { WorldCreator.CreatorWorldObject toRemove = null; for (WorldCreator.CreatorWorldObject object : objects) { if (object.collidesWith(selectedBlock[0], selectedBlock[1], ((selectedBlock[0]) + 1), ((selectedBlock[1]) + 1))) { toRemove = object; } } if (toRemove != null) { objects.remove(toRemove); update(); requestFocusInWindow(); return; } grid[selectedBlock[0]][selectedBlock[1]] = ' '; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1579/buggy-version/src.WorldCreator.CreatorWorld.java", "BodyUseAPI": ["WorldCreator.CreatorWorldObject.collidesWith(int,int,int,int)"], "Fixed commit": "526e6c0132cb78aae26fc9924d51d4f8e95ccdf5", "Url": "https://api.github.com/repos/Williamxu98/WorldQuestOnline", "Date": "2016-01-12T03:36:53Z"},
{"Line": "=>637", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (toRemove != null) { objects.remove(toRemove); update(); requestFocusInWindow(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1579/buggy-version/src.WorldCreator.CreatorWorld.java", "BodyUseAPI": ["java.util.ArrayList<WorldCreator.CreatorWorldObject>.remove(WorldCreator.CreatorWorldObject)"], "Fixed commit": "526e6c0132cb78aae26fc9924d51d4f8e95ccdf5", "Url": "https://api.github.com/repos/Williamxu98/WorldQuestOnline", "Date": "2016-01-12T03:36:53Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((actualWidth < 0) || (actualHeight < 0)) { android.graphics.Bitmap bitmap2 = android.graphics.BitmapFactory.decodeFile(filePath); actualWidth = bitmap2.getWidth(); actualHeight = bitmap2.getHeight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4769/buggy-version/compressor.src.main.java.id.zelory.compressor.ImageUtil.java", "BodyUseAPI": [], "Fixed commit": "2c3006f353d26690217c872d4a1108e8a07d2123", "Url": "https://api.github.com/repos/zetbaitsu/Compressor", "Date": "2016-10-10T06:48:56Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getConfig().isConfigurationSection(\"items\")) { org.bukkit.configuration.ConfigurationSection itemSection = getConfig().getConfigurationSection(\"items\"); for (java.lang.String key : itemSection.getKeys(false)) { listener.items.put(java.util.UUID.fromString(key), ((java.util.List<org.bukkit.inventory.ItemStack>) (itemSection.getList(key)))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2512/buggy-version/src.main.java.space.ourmc.finalchild.deathinventorycontrol.DeathInventoryControl.java", "BodyUseAPI": [], "Fixed commit": "475c1d2a290a9149ea31d223a21b499d9b2ef609", "Url": "https://api.github.com/repos/finalchild/DeathInventoryControl", "Date": "2016-04-11T06:27:23Z"},
{"Line": "=>1746", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.phoenix.util.MetaDataUtil.getClientTimeStamp(java.util.List<org.apache.hadoop.hbase.client.Mutation>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((table.getTimeStamp()) < clientTimeStamp) { if (!(org.apache.phoenix.coprocessor.MetaDataEndpointImpl.isTableDeleted(table))) { builder.setReturnCode(MetaDataProtos.MutationCode.TABLE_ALREADY_EXISTS); builder.setMutationTime(org.apache.phoenix.util.EnvironmentEdgeManager.currentTimeMillis()); builder.setTable(org.apache.phoenix.schema.PTableImpl.toProto(table)); done.run(builder.build()); return; } }else { builder.setReturnCode(MetaDataProtos.MutationCode.NEWER_TABLE_FOUND); builder.setMutationTime(org.apache.phoenix.util.EnvironmentEdgeManager.currentTimeMillis()); builder.setTable(org.apache.phoenix.schema.PTableImpl.toProto(table)); done.run(builder.build()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7425/buggy-version/phoenix-core.src.main.java.org.apache.phoenix.coprocessor.MetaDataEndpointImpl.java", "BodyUseAPI": ["MetaDataResponse.Builder.setTable(org.apache.phoenix.schema.PTableImpl.toProto(table))", "org.apache.phoenix.schema.PTableImpl.toProto(org.apache.phoenix.schema.PTable)", "MetaDataResponse.Builder.setTable(org.apache.phoenix.schema.PTableImpl.toProto(table))", "org.apache.phoenix.schema.PTableImpl.toProto(org.apache.phoenix.schema.PTable)", "org.apache.phoenix.coprocessor.MetaDataEndpointImpl.isTableDeleted(org.apache.phoenix.schema.PTable)"], "Fixed commit": "c32dfbbef5887885b9d003128d86bea9cb62327e", "Url": "https://api.github.com/repos/twdsilva/phoenix", "Date": "2017-10-21T03:56:07Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.SharedTranscript.getOnlySharedTranscript()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(ourText.getTranscript().equals(\"\"))) { toAdd = \"\\t\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3643/buggy-version/app.controllers.Application.java", "BodyUseAPI": [], "Fixed commit": "9eff2ebf99999dfb4d5876cc8f6423d7351d8358", "Url": "https://api.github.com/repos/Rice-Scalable-Health/SPeach-Broadcast-Web", "Date": "2014-04-02T16:32:42Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (node != null) { org.jetbrains.mps.openapi.model.SModel model = node.getModel(); if (model != null) { jetbrains.mps.internal.collections.runtime.SetSequence.fromSet(models).addElement(model); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2044/buggy-version/workbench.mps-workbench.source_gen.jetbrains.mps.watching.ModelFocusSynchronizer.java", "BodyUseAPI": ["org.jetbrains.mps.openapi.model.SNode.getModel()"], "Fixed commit": "ad7f977d82dc0c1221326b43818b9030e915c8ba", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2013-08-21T16:18:43Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.sharpcart.android.wizardpager.wizard.model.ReviewItem>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (reviewItem.getTitle().equalsIgnoreCase(\"Your password\")) { ((android.widget.TextView) (rootView.findViewById(android.R.id.text1))).setText(reviewItem.getTitle()); ((android.widget.TextView) (rootView.findViewById(android.R.id.text2))).setText(value); ((android.widget.TextView) (rootView.findViewById(android.R.id.text2))).setInputType(((android.text.InputType.TYPE_CLASS_TEXT) | (android.text.InputType.TYPE_TEXT_VARIATION_PASSWORD))); }else { ((android.widget.TextView) (rootView.findViewById(android.R.id.text1))).setText(reviewItem.getTitle()); ((android.widget.TextView) (rootView.findViewById(android.R.id.text2))).setText(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3290/buggy-version/src.com.sharpcart.android.wizardpager.wizard.ui.ReviewFragment.java", "BodyUseAPI": ["com.sharpcart.android.wizardpager.wizard.model.ReviewItem.getTitle()", "((android.widget.TextView) (rootView.findViewById(android.R.id.text1))).setText(reviewItem.getTitle())", "com.sharpcart.android.wizardpager.wizard.model.ReviewItem.getTitle()", "((android.widget.TextView) (rootView.findViewById(android.R.id.text1))).setText(reviewItem.getTitle())"], "Fixed commit": "71e6341b9e81d9619516767226bf59205d3ab6c4", "Url": "https://api.github.com/repos/yoyogiv/SharpCartMobile", "Date": "2014-02-17T16:11:48Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isTaskRoot())) { android.content.Intent intent = getIntent(); java.lang.String action = intent.getAction(); if ((intent.hasCategory(Intent.CATEGORY_LAUNCHER)) && (action.equals(Intent.ACTION_MAIN))) { finish(); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5186/buggy-version/src.com.easemob.easeui.ui.EaseBaseActivity.java", "BodyUseAPI": [], "Fixed commit": "b54c9259e1de062a23f77108cc728df23651f7f9", "Url": "https://api.github.com/repos/easemob/easeui", "Date": "2015-11-16T08:18:11Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((touchedShape) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2816/buggy-version/app.src.main.java.com.example.sabila.handymind.tools.SelectionTool.java", "BodyUseAPI": [], "Fixed commit": "d7d265e0e87ef0ed8bae03ca2796a5e69cb1324b", "Url": "https://api.github.com/repos/bellaarnindya/HandyMind", "Date": "2017-12-15T14:03:24Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((info.getParentId()) == (io.anyway.galaxy.common.Constants.TX_ROOT_ID)) { log.debug(\"Root transaction record, ignored in this version.\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6800/buggy-version/galaxy-core.src.main.java.io.anyway.galaxy.message.TransactionMessageServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "26842ef6ee8bf6c4317c41acbc996006d7c0aeb6", "Url": "https://api.github.com/repos/balancebeam/galaxy", "Date": "2016-08-15T01:40:34Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playGame.getDealerScore()) >= 17) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5227/buggy-version/app.src.main.java.com.toddbray.blackjack.activity_game.java", "BodyUseAPI": [], "Fixed commit": "63f824c1dc2deb309ac6f18de7e46e9f82b53ab7", "Url": "https://api.github.com/repos/Toddab16/BlackJack", "Date": "2017-02-03T20:14:35Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((p1 != null) && (p2 != null)) && (p3 != null)) && (p4 != null)) { isAllFourFilled = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8222/buggy-version/src.main.java.com.threesixtyt.cubes.service.ProcessorService.java", "BodyUseAPI": [], "Fixed commit": "dfbfa6ac161bf8949479d6f413efc94d5b228880", "Url": "https://api.github.com/repos/bdogru/cubes", "Date": "2016-01-26T19:07:43Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["messageText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((messageContent == null) || (\"\".equals(messageContent))) { android.support.design.widget.Snackbar.make(findViewById(R.id.chat_layout), \"Los mensajes vacios no s\u00f3n permitidos\", Snackbar.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/737/buggy-version/app.src.main.java.dev.blunch.blunch.activity.ChatActivity.java", "BodyUseAPI": [], "Fixed commit": "0b1ea9953bfa7b2417b421811d19daecc5a5ca08", "Url": "https://api.github.com/repos/BlunchDev/blunch_android", "Date": "2016-05-15T10:40:20Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((--numTries) == 0) { writeLine.printf((\"%s\" + \"%n\"), e.toString()); writeLine.flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/630/buggy-version/Proc.java", "BodyUseAPI": [], "Fixed commit": "a867210b6110e3874695de19b2f4e8cf166a020f", "Url": "https://api.github.com/repos/noahyonack/LogicalClocks", "Date": "2016-03-13T22:10:20Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInited) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/856/buggy-version/cbc.CBCJVM.src.cbccore.Device.java", "BodyUseAPI": [], "Fixed commit": "08a7b99f28ea3a42bcf47655df1568d56be52937", "Url": "https://api.github.com/repos/CBCJVM/CBCJVM", "Date": "2011-05-16T18:49:30Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((eqs.size()) == 0) { return copy; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/534/buggy-version/src.analogyFinder.src.models.ast.Forest.java", "BodyUseAPI": [], "Fixed commit": "ff3f43deb21a1efd73ecab768cbe7aa2a0282a97", "Url": "https://api.github.com/repos/tanonev/codewebs", "Date": "2017-05-15T21:04:05Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPickerDialog) != null) { android.view.SurfaceView sv = ((android.view.SurfaceView) (mPickerDialog.getCustomView().findViewById(R.id.surface))); sv.getHolder().getSurface().release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5715/buggy-version/app.src.main.java.com.felkertech.n.plugins.MainPicker.java", "BodyUseAPI": [], "Fixed commit": "9145890af4e20cc405c6c7a206088668c4555074", "Url": "https://api.github.com/repos/Fleker/CumulusTV", "Date": "2016-10-22T22:39:05Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getName().equals(L2genData.IFILE)) { if (!(gov.nasa.gsfc.seadas.processing.core.SeadasProcessorInfo.isSupportedMission(fileInfo, processorInfoId))) { setValidationComment((((\"# WARNING!!! file \" + filename) + \" is not a valid input mission\") + \"\\n\")); }else if (!(fileInfo.getMissionDirectory().exists())) { if ((fileInfo.getMissionDirectory()) != null) { setValidationComment(((\"WARNING!!! Mission directory '\" + (fileInfo.getMissionDirectory().getAbsolutePath())) + \"' does not exist\")); }else { setValidationComment(\"WARNING!!! Mission directory does not exist\"); } }else if (!(gov.nasa.gsfc.seadas.processing.core.SeadasProcessorInfo.isValidFileType(fileInfo, processorInfoId))) { setValidationComment((((\"# WARNING!!! file \" + filename) + \" is not a valid input file type\") + \"\\n\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4900/buggy-version/seadas-processing.src.main.java.gov.nasa.gsfc.seadas.processing.core.ParamInfo.java", "BodyUseAPI": [], "Fixed commit": "d06b674d6488bb504d896c1f68873f2340660e80", "Url": "https://api.github.com/repos/seadas/seadas", "Date": "2014-11-06T18:15:59Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getX()) < (horizOffset)) { jm.util.Play.midi(getScoreWithRepeats(3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3347/buggy-version/src.main.Grid.java", "BodyUseAPI": [], "Fixed commit": "6e7651376c9c5901c49b554b487019814cfb181b", "Url": "https://api.github.com/repos/cvcal/NoteMatrixWithTonality", "Date": "2014-12-09T03:40:14Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.command.script.OScriptManager.getEngine(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(scriptEngine instanceof javax.script.Compilable)) throw new com.orientechnologies.orient.core.exception.OCommandExecutionException(((\"Language '\" + language) + \"' does not support compilation\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1426/buggy-version/core.src.main.java.com.orientechnologies.orient.core.command.script.OCommandExecutorScript.java", "BodyUseAPI": [], "Fixed commit": "1371f714d4e7868392bd8aee43a4b5dc55dacffb", "Url": "https://api.github.com/repos/maggiolo00/orientdb", "Date": "2014-05-12T22:34:22Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.command.Message.getOriginalDestination()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (origDest != null) { org.apache.activemq.util.ByteSequence origDestBytes = marshaller.marshal(origDest); origDestBytes.compact(); coreMessage.putBytesProperty(org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.AMQ_MSG_ORIG_DESTINATION, origDestBytes.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6214/buggy-version/artemis-protocols.artemis-openwire-protocol.src.main.java.org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.java", "BodyUseAPI": ["org.apache.activemq.wireformat.WireFormat.marshal(org.apache.activemq.command.ActiveMQDestination)"], "Fixed commit": "225f5e7040fb2405460396eab1852d0b21ddb397", "Url": "https://api.github.com/repos/apache/activemq-artemis", "Date": "2016-02-18T12:52:32Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isConduit) { wrapper = getInjectableEnderIO(tile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/418/buggy-version/common.buildcraft.compat.CompatHooksImpl.java", "BodyUseAPI": [], "Fixed commit": "d3a8cafec3be9b763a4f3830e7480d4a13564d69", "Url": "https://api.github.com/repos/BuildCraft/BuildCraftCompat", "Date": "2015-03-21T23:27:43Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bundle.hasType(crazypants.enderio.conduit.item.IItemConduit.class)) { crazypants.enderio.conduit.item.IItemConduit conduit = bundle.getConduit(crazypants.enderio.conduit.item.IItemConduit.class); if (conduit != null) { return new buildcraft.compat.enderio.ItemConduitInjectable(conduit); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/418/buggy-version/common.buildcraft.compat.CompatHooksImpl.java", "BodyUseAPI": ["crazypants.enderio.conduit.IConduitBundle.getConduit(java.lang.Class)"], "Fixed commit": "d3a8cafec3be9b763a4f3830e7480d4a13564d69", "Url": "https://api.github.com/repos/BuildCraft/BuildCraftCompat", "Date": "2015-03-21T23:27:43Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edge_event.getEdge()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(EPCModeler.receivedEdges.contains(e))) { lu.sven.epcmodeler.EPCModeler.pushToPeers(gml, \"/addEdge\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7958/buggy-version/src.lu.sven.epcmodeler.util.GraphChangeListener.java", "BodyUseAPI": [], "Fixed commit": "6069f11b335df3a4e2efb78fbded3f15ca757440", "Url": "https://api.github.com/repos/svnee/EPCModeler", "Date": "2011-03-28T14:57:37Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (left.equals(\"\")) { return (\"{1 \\\\over \" + right) + \"}\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2830/buggy-version/app.src.main.java.com.ps.physicssimulator.utils.ExpressionModified.java", "BodyUseAPI": [], "Fixed commit": "2546e9ee11ba6ee92347f57981bd832443480784", "Url": "https://api.github.com/repos/kuuuurt/Physics-Simulator", "Date": "2016-08-08T14:50:33Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((charSequence.toString().charAt(0)) == '.') charSequence = \"0\" + charSequence;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2830/buggy-version/app.src.main.java.com.ps.physicssimulator.CalculatorActivity.java", "BodyUseAPI": [], "Fixed commit": "2546e9ee11ba6ee92347f57981bd832443480784", "Url": "https://api.github.com/repos/kuuuurt/Physics-Simulator", "Date": "2016-08-08T14:50:33Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (range == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4321/buggy-version/tds.src.main.java.thredds.server.radarServer2.RadarDataInventory.java", "BodyUseAPI": [], "Fixed commit": "c050f7531fe18409fa7390bef0a9a46c0e848e7d", "Url": "https://api.github.com/repos/Unidata/thredds", "Date": "2015-05-22T18:55:47Z"},
{"Line": "=>1291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(e.getBlock().getDrops().isEmpty())) { for (int i = 0; i < (e.getBlock().getDrops().size()); i++) { drops.add((e.getBlock().getType().toString().endsWith(\"_ORE\") ? new me.mrCookieSlime.CSCoreLibPlugin.general.Inventory.Item.CustomItem(((java.util.List<org.bukkit.inventory.ItemStack>) (e.getBlock().getDrops())).get(i), fortune) : ((java.util.List<org.bukkit.inventory.ItemStack>) (e.getBlock().getDrops())).get(i))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1250/buggy-version/src.me.mrCookieSlime.Slimefun.Setup.SlimefunSetup.java", "BodyUseAPI": ["((java.util.List<org.bukkit.inventory.ItemStack>) (e.getBlock().getDrops())).get(int)", "e.getBlock().getType().toString()", "e.getBlock().getType().toString().endsWith(java.lang.String)", "e.getBlock().getDrops().size()", "org.bukkit.event.block.BlockBreakEvent.getBlock()", "e.getBlock().getDrops()", "org.bukkit.event.block.BlockBreakEvent.getBlock()", "java.util.List<org.bukkit.inventory.ItemStack>.add((e.getBlock().getType().toString().endsWith(\"_ORE\") ? new me.mrCookieSlime.CSCoreLibPlugin.general.Inventory.Item.CustomItem(((java.util.List<org.bukkit.inventory.ItemStack>) (e.getBlock().getDrops())).get(i), fortune) : ((java.util.List<org.bukkit.inventory.ItemStack>) (e.getBlock().getDrops())).get(i)))", "e.getBlock().getType()", "e.getBlock().getDrops()", "org.bukkit.event.block.BlockBreakEvent.getBlock()", "e.getBlock().getDrops()", "((java.util.List<org.bukkit.inventory.ItemStack>) (e.getBlock().getDrops())).get(int)", "org.bukkit.event.block.BlockBreakEvent.getBlock()"], "Fixed commit": "c841182d0c44f43643dd58b66b1b1390f2c5c845", "Url": "https://api.github.com/repos/TheBusyBiscuit/Slimefun4", "Date": "2015-03-08T09:53:15Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arguments[i]) == null) { int j = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/251/buggy-version/src.som.interpreter.nodes.MessageSendNode.java", "BodyUseAPI": [], "Fixed commit": "f401829f58d94e05925bf85d21e1a74658106edb", "Url": "https://api.github.com/repos/charig/TruffleMATE", "Date": "2016-08-31T14:12:03Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cpw.mods.fml.common.FMLCommonHandler.instance().getSide().equals(Side.SERVER)) universalteam.universalcore.nick.NicknameData.updateNickname(username);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7599/buggy-version/src.main.java.universalteam.universalcore.nick.NicknameData.java", "BodyUseAPI": [], "Fixed commit": "145f967a6041022e84ad1058642d2ed2b74a2300", "Url": "https://api.github.com/repos/UniversalTeam/UniversalCore", "Date": "2014-11-11T14:52:33Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dropdownYearsCount) < maxYearsCount) maxYearsCount = dropdownYearsCount;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6741/buggy-version/datepicker.src.main.java.ru.eqlbin.gwt.datepicker.client.DropdownMonthSelector.java", "BodyUseAPI": [], "Fixed commit": "b44be25ad56fbdd304ce58dd9118f596b4b4a311", "Url": "https://api.github.com/repos/eqlbin/gwt-dropdown-month-datepicker", "Date": "2017-03-20T03:03:20Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) != (org.apache.kafka.streams.KafkaStreams.STOPPED)) { metrics.close(); state = org.apache.kafka.streams.KafkaStreams.STOPPED; org.apache.kafka.streams.KafkaStreams.log.info(\"Stopped Kafka Stream process\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4210/buggy-version/streams.src.main.java.org.apache.kafka.streams.KafkaStreams.java", "BodyUseAPI": [], "Fixed commit": "30bbf7d73ac354c19ac57b612c61cccbf20e195b", "Url": "https://api.github.com/repos/jklukas/kafka", "Date": "2016-05-10T20:51:46Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) == (org.apache.kafka.streams.KafkaStreams.RUNNING)) { throw new java.lang.IllegalStateException(\"This process was already started.\"); }else { throw new java.lang.IllegalStateException(\"Cannot restart after closing.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4210/buggy-version/streams.src.main.java.org.apache.kafka.streams.KafkaStreams.java", "BodyUseAPI": [], "Fixed commit": "30bbf7d73ac354c19ac57b612c61cccbf20e195b", "Url": "https://api.github.com/repos/jklukas/kafka", "Date": "2016-05-10T20:51:46Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (astNode.hasLabel()) { astNode.setLabel(processVariables(astNode.getLabel(), variableMap)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4175/buggy-version/modelchecker.src.main.java.mc.compiler.Expander.java", "BodyUseAPI": ["mc.compiler.ASTNode.getLabel()", "mc.compiler.ASTNode.setLabel(java.lang.String)", "mc.compiler.Expander.processVariables(astNode.getLabel(),java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "c5d0d2ef31162bcd717512287bc7a1d9c4be6194", "Url": "https://api.github.com/repos/DavidSheridan/Model-Checker", "Date": "2017-01-27T00:00:42Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) == null) { timer = new javax.swing.Timer(((int) (1000 / 60)), this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4916/buggy-version/src.thepianogame.controller.MainController.java", "BodyUseAPI": [], "Fixed commit": "4a9672d05dc1969bdc7cc2dc8113632da58d50f3", "Url": "https://api.github.com/repos/johndrew/ThePianoGame", "Date": "2015-04-19T16:43:17Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dynamicheart.raven.model.member.Member.getUser()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (masterUser != null) master = masterUser.getUsername();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5119/buggy-version/src.main.java.com.dynamicheart.raven.controller.admin.house.AdminHouseController.java", "BodyUseAPI": ["com.dynamicheart.raven.model.user.User.getUsername()"], "Fixed commit": "84b9b39188d35597417914231681c626b903003e", "Url": "https://api.github.com/repos/dynamicheart/raven-web", "Date": "2017-09-12T08:20:05Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bootSetting > 1) throw new java.lang.RuntimeException(\"Who_SENT_IN_WHAT_BOOT\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/223/buggy-version/app.src.main.java.org.connectbot.bean.HostBean.java", "BodyUseAPI": [], "Fixed commit": "7a3e5f1b0288d95b539f634640b25ce5cc070ed0", "Url": "https://api.github.com/repos/RoundSparrow/connectbot", "Date": "2016-03-14T04:20:50Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<org.md2k.datakitapi.source.datasource.DataSourceClient>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (PlatformType.PHONE.equals(dataSourceClient.getDataSource().getPlatform().getType())) preferenceCategory = ((android.preference.PreferenceCategory) (findPreference(\"phone\"))); else if (PlatformType.MICROSOFT_BAND.equals(dataSourceClient.getDataSource().getPlatform().getType())) preferenceCategory = ((android.preference.PreferenceCategory) (findPreference(\"microsoft_band\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7258/buggy-version/plotter.src.main.java.org.md2k.plotter.PrefsFragmentDataSources.java", "BodyUseAPI": ["PlatformType.MICROSOFT_BAND.equals(dataSourceClient.getDataSource().getPlatform().getType())", "org.md2k.datakitapi.source.datasource.DataSourceClient.getDataSource()", "dataSourceClient.getDataSource().getPlatform().getType()", "dataSourceClient.getDataSource().getPlatform()"], "Fixed commit": "ce703b37733b5c1cda5c24f75e96ad9e0c62db0a", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-Plotter", "Date": "2016-02-24T14:29:30Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mWeightEditText.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(android.text.TextUtils.isEmpty(weightString))) { weight = java.lang.Integer.parseInt(weightString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5064/buggy-version/app.src.main.java.com.example.android.pets.EditorActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "e7bec5437dc84729b6acdd14936c799ebae6d1db", "Url": "https://api.github.com/repos/klauskpm/pets", "Date": "2016-11-21T16:05:15Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mWeightEditText.getText().toString().trim()", "mBreedEditText.getText().toString().trim()", "mNameEditText.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((((mCurrentPetUri) == null) && (android.text.TextUtils.isEmpty(nameString))) && (android.text.TextUtils.isEmpty(breedString))) && (android.text.TextUtils.isEmpty(weightString))) && ((mGender) == (com.example.android.pets.data.PetContract.PetEntry.GENDER_UNKNOWN))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5064/buggy-version/app.src.main.java.com.example.android.pets.EditorActivity.java", "BodyUseAPI": [], "Fixed commit": "e7bec5437dc84729b6acdd14936c799ebae6d1db", "Url": "https://api.github.com/repos/klauskpm/pets", "Date": "2016-11-21T16:05:15Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.imageio.ImageIO.createImageOutputStream(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (ios != null) { pixelitor.io.JpegOutput.writeJPGtoStream(image, ios, quality); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8186/buggy-version/src.main.java.pixelitor.io.JpegOutput.java", "BodyUseAPI": ["pixelitor.io.JpegOutput.writeJPGtoStream(java.awt.image.BufferedImage,javax.imageio.stream.ImageOutputStream,float)"], "Fixed commit": "03a3488c80238e601451e7f633bac389df22642a", "Url": "https://api.github.com/repos/lbalazscs/Pixelitor", "Date": "2015-10-09T17:30:48Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.nio.file.Files.exists(csvFilePath))) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/955/buggy-version/src.workshop.dao.CSVProductDao.java", "BodyUseAPI": [], "Fixed commit": "37ec14faf5a97e9b02edbf63dfafe7300e88f0ff", "Url": "https://api.github.com/repos/dziarmagam/workshop", "Date": "2017-08-04T10:27:51Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.minestar.cok.client.renderer.ItemRendererCrossbow.crossbowModel) == null) { de.minestar.cok.client.renderer.ItemRendererCrossbow.crossbowModel = net.minecraftforge.client.model.AdvancedModelLoader.loadModel(de.minestar.cok.client.renderer.ItemRendererCrossbow.crossbowModelResource); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7049/buggy-version/src.main.java.de.minestar.cok.client.renderer.ItemRendererCrossbow.java", "BodyUseAPI": [], "Fixed commit": "3ba536d36fe6f586f3b02fab07553f18cab50126", "Url": "https://api.github.com/repos/DerGeras/CoK", "Date": "2014-09-04T17:36:13Z"},
{"Line": "=>1132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getChild()) != null) { rec = getChild().exportedRecord; if (!((((edu.ku.brc.specify.datamodel.Treeable) (rec)).getParent().getRankId()) > currentRank)) { return false; } }else { rec = actualExportedRecord; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/9292/buggy-version/src.edu.ku.brc.specify.tasks.subpane.wb.wbuploader.UploadTableTree.java", "BodyUseAPI": [], "Fixed commit": "d32ab3e77235e8371401f41c708007292074a2f7", "Url": "https://api.github.com/repos/specify/specify6", "Date": "2017-12-13T21:51:40Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cellChecked) == null) { cellChecked = new boolean[numColumns][numRows]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7726/buggy-version/app.src.main.java.hu.ott_one.gameoflife.ui.game_screen.base_presenter_view.BaseCellGridView.java", "BodyUseAPI": [], "Fixed commit": "e648b8bf85ac3cf807a94b08012aabb3c4e707e3", "Url": "https://api.github.com/repos/bodaiboka/life", "Date": "2017-02-05T00:20:11Z"},
{"Line": "=>1588", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((adapter.getCount()) == 0) && ((buffer) != null)) && ((conn) != null)) && ((conn.getState()) == (com.irccloud.android.NetworkConnection.STATE_CONNECTED))) { android.util.Log.d(\"IRCCloud\", \"All buffer events were hidden, requesting more\"); requestingBacklog = true; conn.request_backlog(buffer.cid, buffer.bid, earliest_eid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/6343/buggy-version/src.com.irccloud.android.fragment.MessageViewFragment.java", "BodyUseAPI": ["com.irccloud.android.NetworkConnection.request_backlog(buffer.cid,buffer.bid,long)"], "Fixed commit": "736f780413c979cfe6505cf981f3326415283ed8", "Url": "https://api.github.com/repos/irccloud/android", "Date": "2015-03-16T15:26:11Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (seedu.address.commons.util.StringUtil.isNonZeroUnsignedInteger(splitString[x])) { splitParse.add(splitString[x]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1378/buggy-version/src.main.java.seedu.address.logic.parser.ParserUtil.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "e3b1faf29f60531b79ab4e3eb76ba0b92df7f512", "Url": "https://api.github.com/repos/CS2103AUG2017-T10-B2/main", "Date": "2017-10-24T09:34:03Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cmds.isHighlight()) || (cmds.isJump())) { java.lang.String highlighted = javadocofflinesearch.lucene.InfoExtractor.highlightInString(s, cmds.getQuery(), new javadocofflinesearch.formatters.StaticHtmlFormatter(null, null), cmds.isHighlight(), cmds.isJump(), ((potentionalFile.toLowerCase().endsWith(\".html\")) || (potentionalFile.toLowerCase().endsWith(\".htm\")))); buff = highlighted.getBytes(\"utf-8\"); }else { buff = s.getBytes(\"utf-8\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1043/buggy-version/src.javadocofflinesearch.server.TinyHttpdImpl.java", "BodyUseAPI": ["javadocofflinesearch.lucene.InfoExtractor.highlightInString(java.lang.String,cmds.getQuery(),javadocofflinesearch.formatters.StaticHtmlFormatter,cmds.isHighlight(),cmds.isJump(),boolean)", "javadocofflinesearch.server.WebParams.getQuery()", "javadocofflinesearch.server.WebParams.isJump()", "javadocofflinesearch.server.WebParams.isHighlight()"], "Fixed commit": "478ed881b3a863dbed2e658affb18587ad2727fe", "Url": "https://api.github.com/repos/judovana/JavadocOfflineSearch", "Date": "2016-02-14T11:20:57Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((detailsMap) == null) && (!(org.apache.commons.lang.StringUtils.isEmpty(details)))) { detailsMap = org.apache.griffin.core.util.JsonUtil.toEntity(details, new com.fasterxml.jackson.core.type.TypeReference<java.util.Map<java.lang.String, java.lang.Object>>() {}); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/287/buggy-version/service.src.main.java.org.apache.griffin.core.measure.entity.Rule.java", "BodyUseAPI": ["org.apache.griffin.core.util.JsonUtil.toEntity(java.lang.String,com.fasterxml.jackson.core.type.TypeReference<java.util.Map<java.lang.String, java.lang.Object>>)"], "Fixed commit": "df4a6d150d1be24c492c0ed75003814dbee4da7c", "Url": "https://api.github.com/repos/ahutsunshine/incubator-griffin", "Date": "2017-11-23T06:58:42Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (view == (mButtonPeriod)) { gatherEquation(\".\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7514/buggy-version/app.src.main.java.com.example.scout.calculator.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "054f792aac334ec4fc6b1bd5d480ed9e7541e7e8", "Url": "https://api.github.com/repos/scotthollandjr/CalculatorDroid", "Date": "2016-08-17T23:32:20Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(caseSensitive)) string = string.toLowerCase();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8900/buggy-version/src.main.java.de.glmtk.util.completiontrie.CompletionTrie.java", "BodyUseAPI": [], "Fixed commit": "b73e95c6af50509b2ba8a83738fa14b0758c2f3a", "Url": "https://api.github.com/repos/renepickhardt/generalized-language-modeling-toolkit", "Date": "2015-03-13T01:53:03Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((progressCount) == (step2TotalProgressCount)) score += com.example.playpalpengame.PlayPalUtility.killTimeBar();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4767/buggy-version/src.com.example.playpalpengame.Game2Activity.java", "BodyUseAPI": [], "Fixed commit": "23f000ec0560393bafa88422000fe53708469473", "Url": "https://api.github.com/repos/b99902062/PlayPalPenGame", "Date": "2014-11-12T17:15:48Z"},
{"Line": "=>891", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((legislation.trim().length()) > 0) { legislation = (legislation.substring(0, 1).toUpperCase()) + (legislation.substring(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3199/buggy-version/src.main.java.com.limewoodMedia.nsapi.NationStates.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.substring(int,int)", "java.lang.String.toUpperCase()"], "Fixed commit": "964506331fe8caedf0df4eff4d05a4cca1664c53", "Url": "https://api.github.com/repos/Afforess/ns-api", "Date": "2014-03-08T07:27:16Z"},
{"Line": "=>903", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((legislation.length()) > 0) { legislation += \". \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3199/buggy-version/src.main.java.com.limewoodMedia.nsapi.NationStates.java", "BodyUseAPI": [], "Fixed commit": "964506331fe8caedf0df4eff4d05a4cca1664c53", "Url": "https://api.github.com/repos/Afforess/ns-api", "Date": "2014-03-08T07:27:16Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (adapterIds != null) { delimitedAdapterIds = com.askfast.util.JSONUtil.serialize(adapterIds).replace(\"[\", \"\").replace(\"]\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4759/buggy-version/src.main.java.com.askfast.askfastapi.AskFastRestClient.java", "BodyUseAPI": ["com.askfast.util.JSONUtil.serialize(adapterIds).replace(java.lang.String,java.lang.String)", "com.askfast.util.JSONUtil.serialize(adapterIds).replace(\"[\", \"\").replace(java.lang.String,java.lang.String)", "com.askfast.util.JSONUtil.serialize(java.util.Collection<java.lang.String>)"], "Fixed commit": "93b7b569e75ed8e9324609ae6a6a0915bfb2dfb4", "Url": "https://api.github.com/repos/askfast/askfast-api-java", "Date": "2015-08-11T17:04:44Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (adapterTypes != null) { delimitedAdapterTypes = com.askfast.util.JSONUtil.serialize(adapterTypes).replace(\"[\", \"\").replace(\"]\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4759/buggy-version/src.main.java.com.askfast.askfastapi.AskFastRestClient.java", "BodyUseAPI": ["com.askfast.util.JSONUtil.serialize(java.util.Collection<java.lang.String>)", "com.askfast.util.JSONUtil.serialize(adapterTypes).replace(\"[\", \"\").replace(java.lang.String,java.lang.String)", "com.askfast.util.JSONUtil.serialize(adapterTypes).replace(java.lang.String,java.lang.String)"], "Fixed commit": "93b7b569e75ed8e9324609ae6a6a0915bfb2dfb4", "Url": "https://api.github.com/repos/askfast/askfast-api-java", "Date": "2015-08-11T17:04:44Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Long.valueOf(sc.getUserPrincipal().getName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (userId != null) { com.ellychou.todo.rest.service.EventRestService.log.info((\"userid\" + userId)); event.setUserId(userId); int i = eventDao.createEvent(event); if (i == 1) { return javax.ws.rs.core.Response.status(201).entity(\"A new event has been created\").build(); }else { return javax.ws.rs.core.Response.status(404).entity(\"Creation failed\").build(); } }else { return javax.ws.rs.core.Response.status(401).entity(\"Please log in fist\").build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3870/buggy-version/src.main.java.com.ellychou.todo.rest.service.EventRestService.java", "BodyUseAPI": ["com.ellychou.todo.rest.entities.Event.setUserId(java.lang.Long)", "org.apache.log4j.Logger.info(java.lang.String)"], "Fixed commit": "125b15652b6e636acc6c9be8744c627097198bcd", "Url": "https://api.github.com/repos/Ellychou/Todo-Jersey-Spring-MyBatis", "Date": "2015-03-16T22:07:27Z"},
{"Line": "=>939", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (z > 0) { int level = ((int) (java.lang.Math.floor((z * oneOverLevelWidth)))); if (level > (nbContourLevels - 1)) { level = nbContourLevels - 1; } levels[ix][iy] = level; }else { levels[ix][iy] = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3469/buggy-version/com.opendoorlogistics.components.src.com.opendoorlogistics.components.heatmap.HeatmapGenerator.java", "BodyUseAPI": ["java.lang.Math.floor(double)"], "Fixed commit": "99b46d73ca0bc5244414e88f82dea190af35cb02", "Url": "https://api.github.com/repos/PGWelch/com.opendoorlogistics", "Date": "2015-05-21T12:48:56Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.opendoorlogistics.components.heatmap.HeatmapGenerator.LevelAccessor.getLevel(java.awt.Point)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (level == (-1)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/3469/buggy-version/com.opendoorlogistics.components.src.com.opendoorlogistics.components.heatmap.HeatmapGenerator.java", "BodyUseAPI": [], "Fixed commit": "99b46d73ca0bc5244414e88f82dea190af35cb02", "Url": "https://api.github.com/repos/PGWelch/com.opendoorlogistics", "Date": "2015-05-21T12:48:56Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (instanceServiceMap != null) { objectProcessManager.scheduleProcessInstance(ServiceDiscoveryConstants.PROCESS_SERVICE_EXPOSE_MAP_UPDATE_HEALTHY, instanceServiceMap, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5176/buggy-version/code.iaas.service-discovery.server.src.main.java.io.cattle.platform.servicediscovery.process.ServiceDiscoveryInstanceStartPostListener.java", "BodyUseAPI": ["io.cattle.platform.servicediscovery.process.ServiceDiscoveryInstanceStartPostListener.scheduleProcessInstance(ServiceDiscoveryConstants.PROCESS_SERVICE_EXPOSE_MAP_UPDATE_HEALTHY,io.cattle.platform.core.model.ServiceExposeMap,<nulltype>)"], "Fixed commit": "43f2a8aa276ab7c4e84856fe169be5225fe5d658", "Url": "https://api.github.com/repos/alena1108/cattle", "Date": "2015-05-06T23:23:40Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((locationListener) != null) { if ((networkLocationManager) != null) { networkLocationManager.removeUpdates(locationListener); } if ((gpsLocationManager) != null) { gpsLocationManager.removeUpdates(locationListener); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7126/buggy-version/src.ca.cumulonimbus.pressurenetsdk.CbLocationManager.java", "BodyUseAPI": [], "Fixed commit": "7720983954aaaef3714ae0f21f70cb9d5b78cb4d", "Url": "https://api.github.com/repos/Cbsoftware/pressureNET-SDK", "Date": "2013-08-03T20:28:43Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNoteNames) != null) { final nl.yoerinijs.notebuddy.activities.NotesActivity.StableArrayAdapter adapter = new nl.yoerinijs.notebuddy.activities.NotesActivity.StableArrayAdapter(this, android.R.layout.simple_list_item_1, mNoteNames); listNotes.setAdapter(adapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8483/buggy-version/app.src.main.java.nl.yoerinijs.notebuddy.activities.NotesActivity.java", "BodyUseAPI": [], "Fixed commit": "e7c896ba1a57efaf5a8d1d1019c16c54b467aceb", "Url": "https://api.github.com/repos/YoeriNijs/NoteBuddy", "Date": "2017-03-15T21:17:28Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stack.getItem()) == null) { igwmod.lib.IGWLog.warning(\"Found an ItemStack with a null item! This isn't supposed to happen!\"); }else { cpw.mods.fml.common.registry.GameRegistry.UniqueIdentifier id = cpw.mods.fml.common.registry.GameRegistry.findUniqueIdentifierFor(stack.getItem()); if ((id != null) && ((id.modId) != null)) modid = id.modId.toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/67/buggy-version/src.igwmod.WikiUtils.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.getItem()", "cpw.mods.fml.common.registry.GameRegistry.findUniqueIdentifierFor(stack.getItem())"], "Fixed commit": "d2263536e3c2ea69a09797520065dc866b2ed239", "Url": "https://api.github.com/repos/MineMaarten/IGW-mod", "Date": "2015-07-16T15:14:30Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cm.podd.report.activity.ReportActivity.getCurrentFocus()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (view != null) { android.view.inputmethod.InputMethodManager imm = ((android.view.inputmethod.InputMethodManager) (getSystemService(Context.INPUT_METHOD_SERVICE))); imm.hideSoftInputFromWindow(view.getWindowToken(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2307/buggy-version/app.src.main.java.org.cm.podd.report.activity.ReportActivity.java", "BodyUseAPI": ["android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(view.getWindowToken(),int)", "android.view.View.getWindowToken()"], "Fixed commit": "c379d34d3e482faf37b4fb44136c4c926c62e8e9", "Url": "https://api.github.com/repos/openpodd/podd-android", "Date": "2017-05-19T04:17:47Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (list != null) { return list.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1157/buggy-version/lesscode-core.src.main.java.com.jayfeng.lesscode.core.AdapterLess.java", "BodyUseAPI": ["java.util.List<T>.size()"], "Fixed commit": "4f9af7d4fd13af6fb8b47a3c2dd3a90f37ac35d5", "Url": "https://api.github.com/repos/openproject/LessCode", "Date": "2015-04-20T13:34:33Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (list != null) { return list.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1157/buggy-version/lesscode-core.src.main.java.com.jayfeng.lesscode.core.AdapterLess.java", "BodyUseAPI": ["java.util.List<T>.size()"], "Fixed commit": "4f9af7d4fd13af6fb8b47a3c2dd3a90f37ac35d5", "Url": "https://api.github.com/repos/openproject/LessCode", "Date": "2015-04-20T13:34:33Z"},
{"Line": "=>555", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["avp.getAddress().getValue()", "earlyReadInstruction.getAddress().getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (avpAddress.getAddress().equals(earlyReadAddress.getAddress())) { de.upb.llvm_parser.llvm.Value value = avp.getValue().getValue(); if (value instanceof de.upb.llvm_parser.llvm.AddressUse) { return ((de.upb.llvm_parser.llvm.AddressUse) (value)).getAddress().getName(); } if (value instanceof de.upb.llvm_parser.llvm.Constant) { return ((de.upb.llvm_parser.llvm.Constant) (value)).getValue().toString(); } if (value instanceof de.upb.llvm_parser.llvm.PrimitiveValue) { return ((de.upb.llvm_parser.llvm.PrimitiveValue) (value)).getValue(); } return \"TODO\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8658/buggy-version/de.upb.lina.cfg.tools.src.de.upb.lina.cfg.tools.strategies.TSOUtil.java", "BodyUseAPI": [], "Fixed commit": "dd13b9c9ce5576bba4356ba9de49fa20cc709ae4", "Url": "https://api.github.com/repos/oleg82upb/lina4wm-tools", "Date": "2015-04-23T11:32:43Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.java.sip.communicator.impl.gui.main.chat.ChatMessage.getMessageTitle()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (messageTitle != null) chatString += ((((errorIcon + messageTitle) + endHeaderTag) + \"<h5>\") + message) + \"</h5>\"; else chatString += ((((endHeaderTag + \"<h5>\") + errorIcon) + \" \") + message) + \"</h5>\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/898/buggy-version/src.net.java.sip.communicator.impl.gui.main.chat.ChatConversationPanel.java", "BodyUseAPI": [], "Fixed commit": "cc1e7affb8e1f13c8b365f730529863fef8b3b00", "Url": "https://api.github.com/repos/jitsi/jitsi", "Date": "2013-11-26T11:00:49Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (documents.isEmpty()) { uriPath += ((\"/documents/\" + (gov.nasa.jpl.mbee.mdk.api.incubating.convert.Converters.getElementToIdConverter().apply(element))) + \"/views/\") + (gov.nasa.jpl.mbee.mdk.api.incubating.convert.Converters.getElementToIdConverter().apply(element)); }else { uriPath += ((\"/documents/\" + (gov.nasa.jpl.mbee.mdk.api.incubating.convert.Converters.getElementToIdConverter().apply(documents.iterator().next()))) + \"/views/\") + (gov.nasa.jpl.mbee.mdk.api.incubating.convert.Converters.getElementToIdConverter().apply(element)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/8841/buggy-version/src.main.java.gov.nasa.jpl.mbee.mdk.actions.MMSViewLinkAction.java", "BodyUseAPI": ["gov.nasa.jpl.mbee.mdk.api.incubating.convert.Converters.getElementToIdConverter().apply(documents.iterator().next())", "documents.iterator().next()", "java.util.Set<gov.nasa.jpl.mbee.mdk.actions.Element>.iterator()"], "Fixed commit": "589c1a2621512c2697d89dcaceb6631b4da77d3d", "Url": "https://api.github.com/repos/Open-MBEE/mdk", "Date": "2017-05-30T22:56:34Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["auxiliaryGrammar.Program.getIfInDom(java.util.List<ast.ExpCore.ClassB.Member>,Ast.MethodSelector)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!((optMt.get()) instanceof ast.ExpCore.ClassB.MethodWithType)) { throw is.L42.connected.withSafeOperators.Errors42.errorMethodClash(java.util.Collections.emptyList(), optMt.get(), mwt, true, java.util.Collections.emptyList(), true, true, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4361/buggy-version/PlgSafeOperators.src.is.L42.connected.withSafeOperators.LiftValue.java", "BodyUseAPI": ["java.util.Optional<ast.ExpCore.ClassB.Member>.get()", "is.L42.connected.withSafeOperators.Errors42.errorMethodClash(java.util.List<java.lang.Object>,optMt.get(),ast.ExpCore.ClassB.MethodWithType,boolean,java.util.List<java.lang.Object>,boolean,boolean,boolean)"], "Fixed commit": "c861cdd727964351639bdcf9b5fba5fa26bbd991", "Url": "https://api.github.com/repos/ElvisResearchGroup/L42", "Date": "2016-04-06T10:23:20Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (listing != null) { for (java.io.File childFile : listing) { if ((childFile.isDirectory()) || (childFile.getName().toLowerCase().endsWith(\".epub\"))) { items.add(childFile); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/466/buggy-version/src.main.java.net.nightwhistler.pageturner.activity.FileBrowseActivity.java", "BodyUseAPI": [], "Fixed commit": "14011e9ea424d705be71cbd12e7af96dc5e1f18f", "Url": "https://api.github.com/repos/khajavi/PageTurner", "Date": "2012-04-10T05:50:17Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (startDate != null) { parser.DateTimeParser.dateArgs.add(startDate.toString(ParserConstants.FORMAT_DATE_STORAGE)); }else { parser.DateTimeParser.dateArgs.add(parser.DateTimeParser.getDate(ParserConstants.INT_ZERO)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/4880/buggy-version/src.parser.DateTimeParser.java", "BodyUseAPI": ["org.joda.time.LocalDate.toString(ParserConstants.FORMAT_DATE_STORAGE)", "java.util.ArrayList<java.lang.String>.add(startDate.toString(ParserConstants.FORMAT_DATE_STORAGE))"], "Fixed commit": "0defb23c8d026f546a4ce53cf30f5549928907db", "Url": "https://api.github.com/repos/ishsingh93/main", "Date": "2015-11-03T13:41:38Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dataiku.dctc.file.FileManipulation.split(java.lang.String,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((path[0].length()) == 0) { throw new java.lang.IllegalArgumentException(((\"Missing host. Maybe you meant '\" + account) + \"' as an account, but it doesn't exist.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7220/buggy-version/src.dctc.java.com.dataiku.dctc.file.SshFileBuilder.java", "BodyUseAPI": [], "Fixed commit": "f2f88dbe6ac3c0ab0b556712007b9a78df9c0365", "Url": "https://api.github.com/repos/dataiku/dctc", "Date": "2013-05-31T07:34:08Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.spongepowered.api.command.args.CommandContext.getOne(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((wca.getNodeOrDefault().getDefaultLength()) != (-1)) && (!(optDuration.isPresent()))) { optDuration = java.util.Optional.of(wca.getNodeOrDefault().getDefaultLength()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/5453/buggy-version/src.main.java.io.github.nucleuspowered.nucleus.modules.warn.commands.WarnCommand.java", "BodyUseAPI": ["io.github.nucleuspowered.nucleus.modules.warn.config.WarnConfigAdapter.getNodeOrDefault()", "wca.getNodeOrDefault().getDefaultLength()", "java.util.Optional.of(wca.getNodeOrDefault().getDefaultLength())"], "Fixed commit": "de75bacd6ee24068a7c6d488c4124ae6f3f716ee", "Url": "https://api.github.com/repos/OblivionNW/Nucleus", "Date": "2016-07-28T15:19:17Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((unit.getDistancePassed()) <= (distance)) { java.lang.System.out.println(java.lang.String.format(StringConst.HAS_TRAVELED, unit.getName(), ((unit.getDistancePassed()) / 1000.0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1457/buggy-version/src.main.java.track.Track.java", "BodyUseAPI": ["main.java.vehicles.Vehicle.getName()", "java.lang.String.format(StringConst.HAS_TRAVELED,unit.getName(),((unit.getDistancePassed()) / 1000.0))", "java.io.PrintStream.println(java.lang.String)", "main.java.vehicles.Vehicle.getDistancePassed()"], "Fixed commit": "697782224d720e4f1260396d558cd7d990a8a067", "Url": "https://api.github.com/repos/ReforgedDream/SimChallenge", "Date": "2017-11-19T15:44:35Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null == (product.getCost())) { product.setCost(cost); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/1320/buggy-version/src.main.java.controller.MaintainController.java", "BodyUseAPI": ["model.Product.setCost(java.lang.Double)"], "Fixed commit": "6b20ab740b976cc5c1f3235f68b79079b6f9ed70", "Url": "https://api.github.com/repos/haiht01666/management-store", "Date": "2016-05-10T06:28:21Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lzh.router.replugin.core.RePluginRouteCallback.get().getCallback()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (callback != null) { com.lzh.router.replugin.core.RePluginRouteCallback.get().getCallback().onResume(uri); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/2643/buggy-version/core.src.main.java.com.lzh.router.replugin.core.RouterBridgeActivity.java", "BodyUseAPI": [], "Fixed commit": "c0060386148c802f800c1a82556800c44a2d4854", "Url": "https://api.github.com/repos/yjfnypeu/Router-RePlugin", "Date": "2017-08-25T05:56:34Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.taken.bernard.analysis.analyser.InterrogativeWordAnalyser.getInterrogativeWord(net.taken.bernard.common.Sentence)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (interrogativeWord == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V65/7871/buggy-version/src.main.java.net.taken.bernard.analysis.analyser.InterrogativeWordAnalyser.java", "BodyUseAPI": [], "Fixed commit": "4bb32596a37fc116155653cb5ebf93b52985d587", "Url": "https://api.github.com/repos/Taken0711/bernard", "Date": "2017-04-06T16:26:35Z"},
{"Line": "=>2956", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (searchTerm.isEmpty()) return searchTerm;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4130/buggy-version/src.winterwell.jtwitter.Twitter.java", "BodyUseAPI": [], "Fixed commit": "c5653084ec519724b17854c41c7fd45930c7a726", "Url": "https://api.github.com/repos/winterstein/JTwitter", "Date": "2011-08-24T14:26:31Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((java.lang.Double.parseDouble(amount)) - (grandTotal)) > 1) creditMonth = java.lang.String.valueOf(((java.lang.Double.parseDouble(creditMonth)) + (grandTotal))); else creditMonth = java.lang.String.valueOf(((java.lang.Double.parseDouble(creditMonth)) + (java.lang.Double.parseDouble(amount))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1713/buggy-version/src.view.Payment.java", "BodyUseAPI": ["java.lang.String.valueOf(double)", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.String.valueOf(double)"], "Fixed commit": "4ede3abb538241c9148b89a48b9dc27ed8e949ca", "Url": "https://api.github.com/repos/MH0411/billing-system", "Date": "2016-08-24T02:06:04Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((hosts) == null) || (hosts.trim().isEmpty())) { hosts = org.hawkular.apm.server.elasticsearch.ElasticsearchClient.ELASTICSEARCH_HOSTS_DEFAULT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5956/buggy-version/server.elasticsearch.src.main.java.org.hawkular.apm.server.elasticsearch.ElasticsearchClient.java", "BodyUseAPI": [], "Fixed commit": "eaac14365c6a85904bcec940ad456aa059fae4c2", "Url": "https://api.github.com/repos/objectiser/hawkular-apm", "Date": "2016-11-04T16:39:08Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (action == (Action.START)) { if (!(torrent.containsPeer(peer))) { torrent.addPeer(peer); }else { torrent.getPeer(peer.getIp()).setState(State.DOWNLOADING); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1304/buggy-version/src.main.java.org.jretracker.Tracker.java", "BodyUseAPI": [], "Fixed commit": "d30bedc463f6078bd587a6a5fe061b81c096386d", "Url": "https://api.github.com/repos/klug-pro/jRetracker", "Date": "2012-06-13T10:56:42Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.billybyte.meteorjava.MeteorListSendReceive<M>.getCsvList(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((oldListPerForThisUserId != null) && ((oldListPerForThisUserId.size()) > 0)) { java.util.List<java.lang.String> listOfIdsToRemove = new java.util.ArrayList<java.lang.String>(); for (com.billybyte.meteorjava.MeteorCsvListItem mcl : oldListPerForThisUserId) { listOfIdsToRemove.add(mcl.get_id()); } removeCsvListItems(tableName, listOfIdsToRemove); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2433/buggy-version/java-lists-in-meteor.src.main.java.com.billybyte.meteorjava.MeteorListSendReceive.java", "BodyUseAPI": [], "Fixed commit": "2d39c42215cf6f58d1acf13c69dcc3f4c28e301d", "Url": "https://api.github.com/repos/bgithub1/javaListsInMeteor", "Date": "2015-08-22T14:34:10Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (namesForArg != null) { for (java.lang.Object argValue : namesForArg) { if (objectHelper.isString(argValue)) { collector.addProposal(argIndex, new tern.server.protocol.completions.TernCompletionProposalRec(objectHelper.getText(argValue), objectHelper.getText(argValue), argType, null, null, null, 0, 0, false, false, false), argValue, objectHelper); }else { addProposal(argIndex, objectHelper, argValue, collector); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/9111/buggy-version/core.tern.core.src.tern.server.protocol.guesstypes.TernGuessTypesResultProcessor.java", "BodyUseAPI": [], "Fixed commit": "ab278705e005bd3788bd2d6fbbd263c1562baf17", "Url": "https://api.github.com/repos/angelozerr/tern.java", "Date": "2016-01-22T23:41:28Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((JDBCType.GUID) == (getterGetParam(index).getJdbcType())) { objectValue = getValue(index, JDBCType.GUID); }else { objectValue = getValue(index, JDBCType.CHAR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6908/buggy-version/src.main.java.com.microsoft.sqlserver.jdbc.SQLServerCallableStatement.java", "BodyUseAPI": ["com.microsoft.sqlserver.jdbc.SQLServerCallableStatement.getValue(int,JDBCType.CHAR)", "com.microsoft.sqlserver.jdbc.SQLServerCallableStatement.getValue(int,JDBCType.GUID)"], "Fixed commit": "23383f2b923d027d35701d8a0e5cea29dabc7db5", "Url": "https://api.github.com/repos/v-PATHngs/mssql-jdbc-PATHngs", "Date": "2017-07-31T19:19:43Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.blackducksoftware.integration.jira.task.JiraTask.initJiraContext(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (jiraContext == null) { logger.error(\"No (valid) user in configuration data; The plugin has likely not yet been configured; The task cannot run (yet)\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7078/buggy-version/src.main.java.com.blackducksoftware.integration.jira.task.JiraTask.java", "BodyUseAPI": [], "Fixed commit": "3695418ac1b4ebda9d2c2f21e3f2ebd786ef6309", "Url": "https://api.github.com/repos/blackducksoftware/hub-jira", "Date": "2016-11-02T14:30:10Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mImageView) == null) mImageView = ((android.widget.ImageView) (parent.findViewById(R.id.img_single)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/896/buggy-version/app.src.main.java.razerdp.friendcircle.ui.adapteritem.ItemWithImgSingle.java", "BodyUseAPI": [], "Fixed commit": "f1a457b8b047291a0137d146bd101feb32762f36", "Url": "https://api.github.com/repos/razerdp/FriendCircle", "Date": "2016-03-25T13:02:14Z"},
{"Line": "=>906", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (sdxObjToRemove != null) { rspecV3Obj.getAnyOrNodeOrLink().remove(sdxObjToRemove); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6737/buggy-version/AggregateWS.src.net.geni.aggregate.services.core.RspecHandler_GENIv3.java", "BodyUseAPI": ["rspecV3Obj.getAnyOrNodeOrLink().remove(java.lang.Object)"], "Fixed commit": "9118e46a9587324d7a341542b7c5182c078cfbd0", "Url": "https://api.github.com/repos/xi-yang/GENI-DCN-AM", "Date": "2016-11-22T14:46:29Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((username != null) && (username.isEmpty())) username = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7518/buggy-version/src.main.java.com.forgeessentials.api.UserIdent.java", "BodyUseAPI": [], "Fixed commit": "668592376b00fbde9968e18fa4dd12e0a2387276", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentials", "Date": "2016-07-08T21:24:09Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((identUsername != null) && (identUsername.isEmpty())) identUsername = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7518/buggy-version/src.main.java.com.forgeessentials.api.UserIdent.java", "BodyUseAPI": [], "Fixed commit": "668592376b00fbde9968e18fa4dd12e0a2387276", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentials", "Date": "2016-07-08T21:24:09Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Objects.equals(login, \" \")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7630/buggy-version/app.src.main.java.com.meatballs.data.YouTrackDAO.java", "BodyUseAPI": [], "Fixed commit": "e29fe3230c60b372ed84d643763119a162e893cf", "Url": "https://api.github.com/repos/UroborusEx/YouTrack-Keeper", "Date": "2017-12-19T02:13:05Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timings.size()) < 6) throw new org.harctoolbox.analyze.DecodeException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6740/buggy-version/src.main.java.org.harctoolbox.analyze.Analyzer.java", "BodyUseAPI": [], "Fixed commit": "5686b9434f0bc70cb970fb00baaf351c2bf2f47d", "Url": "https://api.github.com/repos/bengtmartensson/IrpTransmogrifier", "Date": "2016-09-24T15:57:19Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (sagaInspector == null) { sagaInspector = newInspector; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1571/buggy-version/core.src.main.java.org.axonframework.saga.annotation.SagaMethodMessageHandlerInspector.java", "BodyUseAPI": [], "Fixed commit": "011fe9490bb14b8bb1fe72e8b2e414a397a8cfce", "Url": "https://api.github.com/repos/AxonFramework/AxonFramework", "Date": "2013-10-30T12:11:48Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (closingIndex == (rule.length())) { throw new java.lang.Exception((((\"Unbalanced brackets in Ruins template \" + r) + \", offending rule: \") + rule)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3491/buggy-version/Ruins.src.main.java.atomicstryker.ruins.common.RuinTemplateRule.java", "BodyUseAPI": [], "Fixed commit": "49b9df34588e2a02b2f0a9e8e0b42fa33ea0daca", "Url": "https://api.github.com/repos/AtomicStryker/atomicstrykers-minecraft-mods", "Date": "2015-08-05T13:38:21Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((statsReporter) == null) statsReporter = new org.restcomm.commons.statistics.reporter.RestcommStatsReporter();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/35/buggy-version/jar.src.main.java.org.mobicents.tools.sip.balancer.BalancerRunner.java", "BodyUseAPI": [], "Fixed commit": "7a7a72429188084eba24f8d95260249a385a4b42", "Url": "https://api.github.com/repos/RestComm/load-balancer", "Date": "2016-10-10T19:02:37Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (result == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4794/buggy-version/DataTagsLib.src.edu.harvard.iq.datatags.tools.TagSpaceOptimizer.java", "BodyUseAPI": [], "Fixed commit": "e3a5c73a5be3d924c36fcc1e5b70ca0b38595d29", "Url": "https://api.github.com/repos/eyalben/DataTaggingLibrary", "Date": "2016-02-20T13:14:22Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fileNameInfo.isEmpty())) { contextInfo += \" \" + (fileNameInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3092/buggy-version/src.edu.washington.cs.dericp.diffutils.Hunk.java", "BodyUseAPI": [], "Fixed commit": "6b13f53935c7682326ba34c487aba0dbe5bf9224", "Url": "https://api.github.com/repos/dericp/diff-utils", "Date": "2016-01-31T12:16:33Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rawType.equals(\"queryHit\")) { }else if (rawType.equals(\"query\")) { }else if (rawType.equals(\"online\")) { graphServer.graph.RawPeer p = new graphServer.graph.RawPeer(peerIdentifier); peerTable.put(((IPAddress + \":\") + (token[2])), p); type = rawType; param1 = p.getKey(); }else if (rawType.equals(\"connect\")) { }else if (rawType.equals(\"offline\")) { }else if (rawType.equals(\"query_reaches_peer\")) { type = \"queryreachespeer\"; }else if (rawType.equals(\"publish\")) { }else if (rawType.equals(\"remove\")) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/878/buggy-version/src.graphServer.graph.P2PGraph.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "b89ab192bf3bd44392c74e410c4195b0241187a9", "Url": "https://api.github.com/repos/Matthew-Smith/GraphServer", "Date": "2011-07-12T19:55:09Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cascading.flow.hadoop.planner.HadoopFlowStepJob.getJobStateSafe()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (jobState == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8782/buggy-version/cascading-hadoop.src.main.shared-mr1.cascading.flow.hadoop.planner.HadoopFlowStepJob.java", "BodyUseAPI": [], "Fixed commit": "3a35e359ff31bb2ac39c9a6bfc3b058701bb3031", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2016-05-11T23:25:06Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cascading.flow.hadoop.planner.HadoopFlowStepJob.getJobStateSafe()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (jobState == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8782/buggy-version/cascading-hadoop.src.main.shared-mr1.cascading.flow.hadoop.planner.HadoopFlowStepJob.java", "BodyUseAPI": [], "Fixed commit": "3a35e359ff31bb2ac39c9a6bfc3b058701bb3031", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2016-05-11T23:25:06Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eventType == (EventType.TRACK_START)) { com.undefined.iuxe2015.MumoApplication.previouslyPlayedSong = com.undefined.iuxe2015.MumoApplication.currentlyPlayedSong; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1146/buggy-version/IUXE2015.app.src.main.java.com.undefined.iuxe2015.MumoApplication.java", "BodyUseAPI": [], "Fixed commit": "758882f2b108e43f397839de1988000e33a1c3c9", "Url": "https://api.github.com/repos/marijngoedegebure/IUXE2015", "Date": "2015-05-28T10:44:55Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Level.getObstacles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((kitty.getPosition().getY()) > (obs[x].getY())) { top = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2097/buggy-version/src.Game.java", "BodyUseAPI": [], "Fixed commit": "e0957247447ebfcd5df3f46dd2f287629d2dea7d", "Url": "https://api.github.com/repos/HelenTheJuggler/PairProject", "Date": "2016-05-19T13:07:44Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vel[1]) > 0) { vel[1] = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2097/buggy-version/src.Cat.java", "BodyUseAPI": [], "Fixed commit": "e0957247447ebfcd5df3f46dd2f287629d2dea7d", "Url": "https://api.github.com/repos/HelenTheJuggler/PairProject", "Date": "2016-05-19T13:07:44Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["writeMessage.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(messageTyped.equals(\"\"))) { chatInterface.sendMessage(messageTyped); messageList.add(((\"Client:\" + messageTyped) + \"\\n\")); viewMessage.append(((\"Client:\" + messageTyped) + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5828/buggy-version/src.edu.vt.ece4564.finalproject.databridge.ChatFragment.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)", "edu.vt.ece4564.finalproject.databridge.ChatInterface.sendMessage(java.lang.String)", "android.widget.TextView.append(java.lang.String)"], "Fixed commit": "3e037ec7755323f24ea666f50f2267e3eb65469f", "Url": "https://api.github.com/repos/rferrance/DataBridge", "Date": "2013-11-19T17:12:54Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (location != null) { currentLocationMarker = mMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(new com.google.android.gms.maps.model.LatLng(location.getLatitude(), location.getLongitude())).snippet(java.lang.Integer.toString(1)).icon(icon).title(\"Your Location\").snippet(\"You are here\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6263/buggy-version/app.src.main.java.com.scenicbustour.MapFragment.java", "BodyUseAPI": ["com.google.android.gms.maps.GoogleMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(new com.google.android.gms.maps.model.LatLng(location.getLatitude(), location.getLongitude())).snippet(java.lang.Integer.toString(1)).icon(icon).title(\"Your Location\").snippet(\"You are here\"))", "android.location.Location.getLatitude()", "android.location.Location.getLongitude()", "new com.google.android.gms.maps.model.MarkerOptions().position(new com.google.android.gms.maps.model.LatLng(location.getLatitude(), location.getLongitude())).snippet(java.lang.Integer.toString(1)).icon(icon).title(java.lang.String)", "new com.google.android.gms.maps.model.MarkerOptions().position(new com.google.android.gms.maps.model.LatLng(location.getLatitude(), location.getLongitude())).snippet(java.lang.String)", "new com.google.android.gms.maps.model.MarkerOptions().position(new com.google.android.gms.maps.model.LatLng(location.getLatitude(), location.getLongitude())).snippet(java.lang.Integer.toString(1)).icon(com.google.android.gms.maps.model.BitmapDescriptor)", "com.google.android.gms.maps.model.MarkerOptions.position(com.google.android.gms.maps.model.LatLng)", "new com.google.android.gms.maps.model.MarkerOptions().position(new com.google.android.gms.maps.model.LatLng(location.getLatitude(), location.getLongitude())).snippet(java.lang.Integer.toString(1)).icon(icon).title(\"Your Location\").snippet(java.lang.String)"], "Fixed commit": "a34e03256f520c82821bbd521b3153e5cc9be2d3", "Url": "https://api.github.com/repos/abdulaziz54/Bus-Guidebook", "Date": "2017-09-13T20:56:54Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (location != null) { stop = busStopsList.getNearestBusStop(new com.google.android.gms.maps.model.LatLng(location.getLatitude(), location.getLongitude())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6263/buggy-version/app.src.main.java.com.scenicbustour.MapFragment.java", "BodyUseAPI": ["com.scenicbustour.Models.BusStopsList.getNearestBusStop(com.google.android.gms.maps.model.LatLng)", "android.location.Location.getLongitude()", "android.location.Location.getLatitude()"], "Fixed commit": "a34e03256f520c82821bbd521b3153e5cc9be2d3", "Url": "https://api.github.com/repos/abdulaziz54/Bus-Guidebook", "Date": "2017-09-13T20:56:54Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedPlace) != null) { com.google.android.gms.maps.CameraUpdate cu = com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(new com.google.android.gms.maps.model.LatLng(selectedPlace.getLocation().getLatitude(), selectedPlace.getLocation().getLongitude()), 14); mMap.animateCamera(cu); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6263/buggy-version/app.src.main.java.com.scenicbustour.MapFragment.java", "BodyUseAPI": [], "Fixed commit": "a34e03256f520c82821bbd521b3153e5cc9be2d3", "Url": "https://api.github.com/repos/abdulaziz54/Bus-Guidebook", "Date": "2017-09-13T20:56:54Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((cube.getUp().getGrid()[1][0]) == (Cube.Color.ORANGE)) && ((cube.getUp().getGrid()[2][1]) == (Cube.Color.ORANGE))) { Logic.executeCMD(cmd.CMD_LEFT_ROTATE, actions, cube); Logic.twoNearInPlace(actions, cube); Logic.executeCMD(cmd.CMD_RIGHT_ROTATE, actions, cube); }else if (((cube.getUp().getGrid()[0][1]) == (Cube.Color.ORANGE)) && ((cube.getUp().getGrid()[1][2]) == (Cube.Color.ORANGE))) { Logic.executeCMD(cmd.CMD_UP_TWIST_RIGHT, actions, cube); Logic.twoNearInPlace(actions, cube); }else { Logic.noneInPlace(actions, cube); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8342/buggy-version/src.Logic.java", "BodyUseAPI": ["Cube.getUp()", "cube.getUp().getGrid()", "Cube.getUp()", "Logic.twoNearInPlace(java.util.List<cmd>,Cube)", "Logic.executeCMD(cmd.CMD_RIGHT_ROTATE,java.util.List<cmd>,Cube)", "cube.getUp().getGrid()", "Logic.twoNearInPlace(java.util.List<cmd>,Cube)", "Logic.noneInPlace(java.util.List<cmd>,Cube)", "Logic.executeCMD(cmd.CMD_LEFT_ROTATE,java.util.List<cmd>,Cube)", "Logic.executeCMD(cmd.CMD_UP_TWIST_RIGHT,java.util.List<cmd>,Cube)"], "Fixed commit": "d71fc513765e554c6417f58ed766fc57de72f774", "Url": "https://api.github.com/repos/UriSha/rubiksCube", "Date": "2017-11-26T09:59:23Z"},
{"Line": "=>768", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((onTagTextEntryListener) != null) onTagTextEntryListener.onTextEntry(this, s.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/574/buggy-version/library.src.main.java.me.gujun.android.taggroup.TagGroup.java", "BodyUseAPI": [], "Fixed commit": "7db00a73ec0d73f42158bae6dbb5c5b3ce1a4f7d", "Url": "https://api.github.com/repos/Seishin/AndroidTagGroup", "Date": "2015-08-07T08:47:31Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.creditease.marmot.bean.RouteBean.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((location != null) && (!(location.isEmpty()))) { context.setAttribute(\"location\", location); if ((contentType != null) && (!(contentType.isEmpty()))) { request.getRequestDispatcher(location).include(request, response); }else { request.getRequestDispatcher(location).forward(request, response); } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4958/buggy-version/src.main.java.cn.creditease.marmot.filter.RewriteFilter.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getRequestDispatcher(java.lang.String)", "javax.servlet.ServletContext.setAttribute(java.lang.String,java.lang.String)", "request.getRequestDispatcher(location).forward(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "javax.servlet.http.HttpServletRequest.getRequestDispatcher(java.lang.String)", "request.getRequestDispatcher(location).include(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"], "Fixed commit": "ed272ed03d4cbab216e66df2d24cfedde4dfa059", "Url": "https://api.github.com/repos/evan2x/java-marmot", "Date": "2016-04-29T06:53:50Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.creditease.marmot.bean.RouteBean.getContentType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((contentType != null) && (!(contentType.isEmpty()))) { response.setContentType(contentType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4958/buggy-version/src.main.java.cn.creditease.marmot.filter.RewriteFilter.java", "BodyUseAPI": ["javax.servlet.http.HttpServletResponse.setContentType(java.lang.String)"], "Fixed commit": "ed272ed03d4cbab216e66df2d24cfedde4dfa059", "Url": "https://api.github.com/repos/evan2x/java-marmot", "Date": "2016-04-29T06:53:50Z"},
{"Line": "=>653", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.prototypes) != null) this.prototypes.clear(); else this.prototypes = new java.util.ArrayList<datamining.clustering.protoype.Prototype<T>>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8049/buggy-version/src.datamining.validation.ClusteringInformation.java", "BodyUseAPI": [], "Fixed commit": "d8b7ef24b5a887867958d3b85ab314fcd5077187", "Url": "https://api.github.com/repos/Roland-Winkler/EDMOAL", "Date": "2013-05-03T16:46:20Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.greenrobot.eventbus.EventBus.getDefault().isRegistered(this))) { org.greenrobot.eventbus.EventBus.getDefault().register(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5378/buggy-version/app.src.main.java.com.nestedworld.nestedworld.ui.mainMenu.MainMenuActivity.java", "BodyUseAPI": [], "Fixed commit": "caf2accdc9a84697e98354280c31adc88e081734", "Url": "https://api.github.com/repos/kassisdion/NestedWorld-Android", "Date": "2016-09-23T22:15:13Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(filePath.startsWith(\"file:\\\\\"))) filePath = \"file:\\\\\" + filePath;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1513/buggy-version/Utils.src.cz.fidentis.landmarkParser.FPparser.java", "BodyUseAPI": [], "Fixed commit": "8787dea8d2943388bc9309fcdf580a3e820963a4", "Url": "https://api.github.com/repos/Fidentis/Analyst", "Date": "2017-08-02T12:04:13Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { msg = ((org.qii.weiciyuan.bean.MessageBean) (savedInstanceState.getSerializable(\"msg\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1698/buggy-version/src.org.qii.weiciyuan.ui.browser.BrowserWeiboMsgFragment.java", "BodyUseAPI": ["android.os.Bundle.getSerializable(java.lang.String)"], "Fixed commit": "d5ff6e35e43bdb589da90b6535c9e3c8240902fc", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-01T12:15:24Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (login == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1924/buggy-version/app.src.main.java.com.paulvarry.intra42.cache.CacheUsers.java", "BodyUseAPI": [], "Fixed commit": "3436c7b839415a975a6266d88ca3a3a05ef16b04", "Url": "https://api.github.com/repos/pvarry/intra42", "Date": "2017-06-15T19:59:32Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (obj.getStatus().equals(\"error_validation\")) { croutonAlert(getActivity(), obj.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5585/buggy-version/rhymecity.src.main.java.com.fly.firefly.ui.activity.Register.RegisterFragment.java", "BodyUseAPI": ["com.fly.firefly.ui.activity.Register.RegisterFragment.croutonAlert(getActivity(),obj.getMessage())", "com.fly.firefly.api.obj.RegisterReceive.getMessage()"], "Fixed commit": "0339c8148d9a4bfa9ddc2cc936e36baf9cc31a6e", "Url": "https://api.github.com/repos/zatyabdullah/Fy", "Date": "2015-12-17T02:48:32Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (objPropsMap.containsKey(s.getURI())) { dr = objPropsMap.get(s.getURI()); }else { dr.setRight(es.upm.oeg.ar2dtool.utils.graphml.GraphMLGenerator.DEFAULT_OBJ_PROP_VALUE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3608/buggy-version/es.upm.oeg.ar2dtool.utils.graphml.GraphMLGenerator.java", "BodyUseAPI": ["java.util.Map<java.lang.String, es.upm.oeg.ar2dtool.utils.dot.ObjPropPair<java.lang.String, java.lang.String>>.get(s.getURI())", "com.hp.hpl.jena.rdf.model.Resource.getURI()"], "Fixed commit": "dc054c29d7ee1bf4f4cb8dcbe2a02a5889e641ef", "Url": "https://api.github.com/repos/idafensp/ar2dtool", "Date": "2015-03-25T13:43:40Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (objPropsMap.containsKey(s.getURI())) { dr = objPropsMap.get(s.getURI()); }else { dr.setLeft(es.upm.oeg.ar2dtool.utils.graphml.GraphMLGenerator.DEFAULT_OBJ_PROP_VALUE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3608/buggy-version/es.upm.oeg.ar2dtool.utils.graphml.GraphMLGenerator.java", "BodyUseAPI": ["java.util.Map<java.lang.String, es.upm.oeg.ar2dtool.utils.dot.ObjPropPair<java.lang.String, java.lang.String>>.get(s.getURI())", "com.hp.hpl.jena.rdf.model.Resource.getURI()"], "Fixed commit": "dc054c29d7ee1bf4f4cb8dcbe2a02a5889e641ef", "Url": "https://api.github.com/repos/idafensp/ar2dtool", "Date": "2015-03-25T13:43:40Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((url == null) || (url.equals(\"\"))) { url = com.newsclient.tools.ImageFinder.findImageByKeyword(news.news_title); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1357/buggy-version/app.src.main.java.com.newsclient.tools.PicGetter.java", "BodyUseAPI": [], "Fixed commit": "d0bb2a45c86f138f74a69ff86cf3c296147c10c3", "Url": "https://api.github.com/repos/LegaDyan/NewsClient", "Date": "2017-09-13T13:38:40Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((com.newsclient.tools.PicGetter.mBitmap) == null) com.newsclient.tools.PicGetter.mBitmap = android.graphics.BitmapFactory.decodeResource(context.getResources(), R.drawable.unloaded);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1357/buggy-version/app.src.main.java.com.newsclient.tools.PicGetter.java", "BodyUseAPI": [], "Fixed commit": "d0bb2a45c86f138f74a69ff86cf3c296147c10c3", "Url": "https://api.github.com/repos/LegaDyan/NewsClient", "Date": "2017-09-13T13:38:40Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lisong_mechlab.model.chassi.ChassiDB.canonize(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (keyShortName.contains(\"muro\")) { return lisong_mechlab.model.chassi.ChassiDB.lookup(\"CTF-IM\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8667/buggy-version/src.lisong_mechlab.model.chassi.ChassiDB.java", "BodyUseAPI": [], "Fixed commit": "a9953560d74415e71f4374318afc616d701123be", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2013-10-02T21:47:59Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["stencyl.ext.polydes.common.ui.darktree.DarkTree<T>.getMousePosition(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (p == null) { p = java.awt.MouseInfo.getPointerInfo().getLocation(); javax.swing.SwingUtilities.convertPointFromScreen(p, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8335/buggy-version/Common.src.stencyl.ext.polydes.common.ui.darktree.DarkTree.java", "BodyUseAPI": [], "Fixed commit": "f2d4b5b91ef8f992990a28a57e17ecf9d689fbd4", "Url": "https://api.github.com/repos/justin-espedal/polydes", "Date": "2015-05-13T20:21:21Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.getProcessManager().addScript(java.net.URI,java.lang.String[],boolean,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pi.getProcessDescriptionType()) != null) { piList.add(pi); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1255/buggy-version/bundles.wps.wps-service.src.main.java.org.orbisgis.wpsservice.LocalWpsServerImpl.java", "BodyUseAPI": ["java.util.List<org.orbisgis.wpsservice.controller.process.ProcessIdentifier>.add(org.orbisgis.wpsservice.controller.process.ProcessIdentifier)"], "Fixed commit": "cbefd89e9ad40d08416c9745b44c0283cf6baf53", "Url": "https://api.github.com/repos/orbisgis/orbisgis", "Date": "2016-10-10T06:15:11Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (tempName != null) edu.drexel.psal.anonymouth.gooie.ThePresident.sessionName = tempName;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5757/buggy-version/src.edu.drexel.psal.anonymouth.gooie.ThePresident.java", "BodyUseAPI": [], "Fixed commit": "2bbc1aa17b6095d464caec3ebf091380350c9a6b", "Url": "https://api.github.com/repos/psal/JStylo-Anonymouth", "Date": "2012-04-13T17:44:12Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSimpleLoadingDialog) != null) { mSimpleLoadingDialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3840/buggy-version/app.src.main.java.com.luckyhan.rubychina.ui.activity.OAuthActivity.java", "BodyUseAPI": [], "Fixed commit": "a81c11e6c8f367c222fb5604c3f56eef0772db52", "Url": "https://api.github.com/repos/hanji1122/RubyChina", "Date": "2016-04-17T14:47:47Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (xml == null) { return retValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7019/buggy-version/src.main.java.org.jboss.pressgang.ccms.server.utils.TopicUtilities.java", "BodyUseAPI": [], "Fixed commit": "ff4b0d8aebe00b190c6c2ae8aad1a1bde1c49ea8", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSREST", "Date": "2013-11-05T06:39:19Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (type != null) { try { paramMetadataXML = getClass().getResourceAsStream(\"ParameterMetaData.xml\"); metadata = pt.lsts.neptus.plugins.uavparameters.ParameterMetadataMapReader.open(paramMetadataXML, type); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8017/buggy-version/plugins-dev.uav-parameters.pt.lsts.neptus.plugins.uavparameters.ParameterTableModel.java", "BodyUseAPI": ["pt.lsts.neptus.plugins.uavparameters.ParameterMetadataMapReader.open(java.io.InputStream,java.lang.String)"], "Fixed commit": "916a318e06b7af85b6388deebfbd13e72e6f3582", "Url": "https://api.github.com/repos/LSTS/neptus", "Date": "2016-11-23T19:27:29Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((comm) != null) return comm.allChessbotsConnected(); else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7114/buggy-version/src.edu.utdallas.robotchess.manager.Manager.java", "BodyUseAPI": [], "Fixed commit": "29b8101e7e655cc97d3645f66e76f31198d17277", "Url": "https://api.github.com/repos/utdrobotchess/chess-game", "Date": "2015-07-04T21:07:17Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.scene.control.TextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ip.equalsIgnoreCase(\"localhost\")) { ip = \"127.0.0.1\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/114/buggy-version/src.main.java.s32a.Client.GUI.AirhockeyGUI.java", "BodyUseAPI": [], "Fixed commit": "badf44c4552aaca34da3471f98ef452a0594350f", "Url": "https://api.github.com/repos/PTS32A/Airhockey", "Date": "2015-01-06T14:25:37Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hint) != null) return hint.getJSON(jsonObject); else return jsonObject;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8671/buggy-version/woServer.src.edu.umass.ckc.wo.tutor.response.HintResponse.java", "BodyUseAPI": [], "Fixed commit": "79e90057495d21917dbebe1aa7bc325beedc65a3", "Url": "https://api.github.com/repos/mfrechet/mathspring", "Date": "2014-11-14T14:38:32Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((kv.length) == 2) { k = kv[0].replace(\"\\\"\", \"\"); v = kv[1].replace(\"\\\"\", \"\"); attributes.put(k, v); }else { java.lang.System.out.println((\"Size must be 2: attr = \" + attr)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7293/buggy-version/biodata-formats.src.main.java.org.opencb.biodata.formats.feature.gtf.io.GtfReader.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "514c83c80aa898f1dd6cebd3cccc5a76cae65541", "Url": "https://api.github.com/repos/opencb/biodata", "Date": "2014-12-22T01:19:41Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (idx < 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2267/buggy-version/logtracker.src.main.java.org.sper.logtracker.servstat.proc.CategoryCollection.java", "BodyUseAPI": [], "Fixed commit": "b0309434b95a20211ca5f8944235fb0618550922", "Url": "https://api.github.com/repos/silvanperego/LogTracker", "Date": "2016-08-08T13:18:31Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (throwable == null) { logger.debug(sb.toString()); }else { logger.debug(sb.toString(), throwable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5398/buggy-version/profiler.src.main.java.com.navercorp.pinpoint.profiler.logging.Slf4jPLoggerAdapter.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,java.lang.Throwable)"], "Fixed commit": "0ce9e3c6f8e89e0fe345fcac53d7065b3c4aec79", "Url": "https://api.github.com/repos/Xylus/pinpoint", "Date": "2015-06-10T06:58:40Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((polyline) != null) polyline = mMap.addPolyline(lineOptions);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8358/buggy-version/app.src.main.java.com.prembros.artooproject.Directions.java", "BodyUseAPI": [], "Fixed commit": "35e5eb4c9c8478edbd21f39f7b0fac6f6c4ed45e", "Url": "https://api.github.com/repos/premacck/Artoo-project", "Date": "2017-09-12T06:54:18Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sourceforge.veditor.semanticwarnings.SimpleNode.getChild(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(child instanceof net.sourceforge.veditor.semanticwarnings.ASTchoice)) { result.addAll(getAllBaseIdentifierNodes(node.getChild(i))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2019/buggy-version/src.src.net.sourceforge.veditor.semanticwarnings.SemanticWarnings.java", "BodyUseAPI": [], "Fixed commit": "3fdda33657e68bcbb22a478bf36c7ef1fd2bd78b", "Url": "https://api.github.com/repos/ssharks/veditor", "Date": "2016-01-07T23:22:33Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUris()) != null) { removeAllWatchContentUris(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/576/buggy-version/src.main.java.com.mridang.cellinfo.ImprovedExtension.java", "BodyUseAPI": [], "Fixed commit": "5266166adf425dc3b65ba7af9595ad1c32589dc3", "Url": "https://api.github.com/repos/mridang/dashclock-cellinfo", "Date": "2015-03-29T09:09:27Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bstate.getBlock()) == (this)) { if (state && (((bstate.getValue(zmaster587.libVulpes.block.multiblock.VARIANT)) & 8) == 0)) { world.setBlockState(pos, bstate.withProperty(zmaster587.libVulpes.block.multiblock.VARIANT, ((bstate.getValue(zmaster587.libVulpes.block.multiblock.VARIANT)) | 8))); world.notifyBlockUpdate(pos, bstate, bstate, 3); }else if ((!state) && (((bstate.getValue(zmaster587.libVulpes.block.multiblock.VARIANT)) & 8) != 0)) { world.setBlockState(pos, bstate.withProperty(zmaster587.libVulpes.block.multiblock.VARIANT, ((bstate.getValue(zmaster587.libVulpes.block.multiblock.VARIANT)) & 7))); world.notifyBlockUpdate(pos, bstate, bstate, 3); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1042/buggy-version/src.main.java.zmaster587.libVulpes.block.multiblock.BlockHatch.java", "BodyUseAPI": ["net.minecraft.block.state.IBlockState.getValue(zmaster587.libVulpes.block.multiblock.VARIANT)", "net.minecraft.world.World.setBlockState(net.minecraft.util.math.BlockPos,bstate.withProperty(zmaster587.libVulpes.block.multiblock.VARIANT, ((bstate.getValue(zmaster587.libVulpes.block.multiblock.VARIANT)) | 8)))", "net.minecraft.world.World.setBlockState(net.minecraft.util.math.BlockPos,bstate.withProperty(zmaster587.libVulpes.block.multiblock.VARIANT, ((bstate.getValue(zmaster587.libVulpes.block.multiblock.VARIANT)) & 7)))", "net.minecraft.block.state.IBlockState.getValue(zmaster587.libVulpes.block.multiblock.VARIANT)", "net.minecraft.world.World.notifyBlockUpdate(net.minecraft.util.math.BlockPos,net.minecraft.block.state.IBlockState,net.minecraft.block.state.IBlockState,int)", "net.minecraft.block.state.IBlockState.withProperty(zmaster587.libVulpes.block.multiblock.VARIANT,((bstate.getValue(zmaster587.libVulpes.block.multiblock.VARIANT)) | 8))", "net.minecraft.world.World.notifyBlockUpdate(net.minecraft.util.math.BlockPos,net.minecraft.block.state.IBlockState,net.minecraft.block.state.IBlockState,int)", "net.minecraft.block.state.IBlockState.getValue(zmaster587.libVulpes.block.multiblock.VARIANT)", "net.minecraft.block.state.IBlockState.getValue(zmaster587.libVulpes.block.multiblock.VARIANT)", "net.minecraft.block.state.IBlockState.withProperty(zmaster587.libVulpes.block.multiblock.VARIANT,((bstate.getValue(zmaster587.libVulpes.block.multiblock.VARIANT)) & 7))"], "Fixed commit": "833ba93b6f6b6655f21bec69238e4cdcad2ad4a0", "Url": "https://api.github.com/repos/zmaster587/libVulpes", "Date": "2017-02-16T19:50:56Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (conditions.equals(\"Clouds\")) { this.background = cloudImage; }else if (conditions.equals(\"Rain\")) { this.background = rainImage; }else if (conditions.equals(\"Extreme\")) { this.background = thunderImage; }else if (conditions.equals(\"Mist\")) { this.background = rainImage; }else { java.lang.System.out.println((\"None of the above conditions; Conditions: \" + (conditions))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/454/buggy-version/src.tk.atherismotorsports.weather.Weather.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "c85c9581ce8ca389c7df28e5368cb83e3f574ce4", "Url": "https://api.github.com/repos/camm73/Atheris-UI", "Date": "2016-05-18T19:57:22Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!repeatedFailure) { android.app.DialogFragment dialogFragment = org.ovirt.mobile.movirt.ui.dialogs.ErrorDialogFragment.newInstance(this, authenticator, providerFacade, reason); dialogFragment.show(getFragmentManager(), \"error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2750/buggy-version/moVirt.src.main.java.org.ovirt.mobile.movirt.ui.AuthenticatorActivity.java", "BodyUseAPI": [], "Fixed commit": "b2ffc5b914185f6983da674e7a90c331808f8aaa", "Url": "https://api.github.com/repos/suomiy/moVirt", "Date": "2016-03-11T20:10:26Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s1.length()) > (s2.length())) { longer = s1.toLowerCase(); shorter = s2.toLowerCase(); }else { longer = s2.toLowerCase(); shorter = s1.toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/731/buggy-version/src.main.java.com.ontotext.ehri.deduplication.measures.JaroWinkler.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.lang.String.toLowerCase()", "java.lang.String.toLowerCase()", "java.lang.String.toLowerCase()"], "Fixed commit": "b6368e2df7fe793c998bc53995cea7ba9a70071f", "Url": "https://api.github.com/repos/Ontotext-AD/ehri-person-deduplication", "Date": "2016-10-17T14:04:23Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isRoot())) { ru.chirikhin.chattree.model.BaseMessage newChildMessage = new ru.chirikhin.chattree.model.NewChildMessage(globalIDGenerator.getGlobalID()); sendMessage(new ru.chirikhin.chattree.model.AddressedMessage(newChildMessage, parentInetSocketAddress)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3034/buggy-version/src.main.java.ru.chirikhin.chattree.model.Node.java", "BodyUseAPI": [], "Fixed commit": "1bf217b0a20bb8e4635c48b7d954d678faecb92c", "Url": "https://api.github.com/repos/WildWind03/Java-Chat-Tree", "Date": "2016-11-09T02:56:38Z"},
{"Line": "=>769", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedPathId.equalsIgnoreCase(unitId)) { assignmentOffset = (pageNumber / (assignmentLimit)) * (assignmentLimit); if ((assignmentOffset) == pageNumber) { assignmentOffset = (assignmentOffset) - (assignmentLimit); } getUnitAssignments(assignmentOffset, isEditMode); }else { if ((totalHintCount - 1) == (assignmentOffset)) { assignmentOffset = (assignmentOffset) - (assignmentLimit); } getUnitAssignments(assignmentOffset, isEditMode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7320/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.classpages.unitdetails.UnitAssignmentView.java", "BodyUseAPI": [], "Fixed commit": "f6866bba9a9463f8a7f6a996407934fa03ea2504", "Url": "https://api.github.com/repos/VinRudramurthy/Gooru-Web", "Date": "2014-09-24T13:27:57Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((name.length()) > 16) { name.setLength(16); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7712/buggy-version/src.main.java.org.kitteh.nametags.NameTags.java", "BodyUseAPI": ["java.lang.StringBuilder.setLength(int)"], "Fixed commit": "5e48b50220ac86fb854c896baa9d7728da04cfe2", "Url": "https://api.github.com/repos/KittehOrg/NameTags", "Date": "2012-08-03T19:30:19Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((runningPcs) != null) { synchronized(runningPcs) { java.util.Iterator<java.lang.Object> it = runningPcs.valueIterator(); while (it.hasNext()) { ((railo.runtime.PageContextImpl) (it.next())).reset(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6897/buggy-version/railo-java.railo-core.src.railo.runtime.CFMLFactoryImpl.java", "BodyUseAPI": [], "Fixed commit": "dee25a2913cf66983c84c63c84e7ad1244e648f4", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-05-02T23:06:46Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ctx.isReturningGeneratedKeys()) { return conn.prepareStatement(sql, java.sql.Statement.RETURN_GENERATED_KEYS); }else { return conn.prepareStatement(sql); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1096/buggy-version/src.main.java.org.skife.jdbi.v2.DefaultStatementBuilder.java", "BodyUseAPI": [], "Fixed commit": "0ba25b5ed1fc66f2145e9078b3d4de4261d882ac", "Url": "https://api.github.com/repos/jdbi/jdbi", "Date": "2011-08-01T19:22:52Z"},
{"Line": "=>615", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task.getStatus()) != (TaskManager.COMPLETE)) { returningTasks.add(task.clone()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5710/buggy-version/src.TaskManager.java", "BodyUseAPI": ["java.util.ArrayList<Task>.add(task.clone())", "Task.clone()"], "Fixed commit": "2faae265fbf2d1eb328006fd729e9dda92309146", "Url": "https://api.github.com/repos/cs2103jan2015-w14-4j/main", "Date": "2015-04-04T13:44:21Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.bkromhout.minerva.ui.TagBackgroundSpan.TAG_SEP.endsWith(currentLine)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6208/buggy-version/app.src.main.java.com.bkromhout.minerva.ui.TagBackgroundSpan.java", "BodyUseAPI": [], "Fixed commit": "d25fc87c1fc0da7cfc3974253ff3267d00c597a4", "Url": "https://api.github.com/repos/bkromhout/Minerva", "Date": "2016-07-24T01:45:20Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Character.isDigit(columnName.charAt(0))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6006/buggy-version/tajo-catalog.tajo-catalog-common.src.main.java.org.apache.tajo.catalog.CatalogUtil.java", "BodyUseAPI": [], "Fixed commit": "1e5781f9f703f1edf5a5b10d201f008d9effb211", "Url": "https://api.github.com/repos/tyotta/tajo", "Date": "2015-08-26T01:32:59Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vehicleShepard.View.isValidDate(licenseExpField.getText())) { expDateValid = true; }else { expDateValid = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2500/buggy-version/src.vehicleShepard.CustomerView.java", "BodyUseAPI": [], "Fixed commit": "8271967739a450fd96801d22c6b8021e1dd677a9", "Url": "https://api.github.com/repos/phillipphoenix/GPProjekt", "Date": "2011-12-18T16:56:50Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((folder.getLastRequestTime()) != null) { folder.refreshFolder(folder.getLastRequestTime()); }else { folder.refreshFolder(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4000/buggy-version/Code.RSS-Feeder.app.src.main.java.com.projektarbeit.rss_feeder.control.FeedContainer.java", "BodyUseAPI": ["com.projektarbeit.rss_feeder.control.Folder.refreshFolder()", "com.projektarbeit.rss_feeder.control.Folder.getLastRequestTime()", "com.projektarbeit.rss_feeder.control.Folder.refreshFolder(folder.getLastRequestTime())"], "Fixed commit": "7c09d8b0715df17e3d227c8c7db55fd997961b6d", "Url": "https://api.github.com/repos/yellowmoneybank/RSS-Feeder", "Date": "2017-07-10T13:19:59Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pl.mjedynak.idea.plugins.builder.factory.MemberChooserDialogFactory.getMemberChooserDialog(java.util.List<com.intellij.codeInsight.generation.PsiElementClassMember>,com.intellij.openapi.project.Project)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(memberChooserDialog.isOK())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6809/buggy-version/src.main.java.pl.mjedynak.idea.plugins.builder.action.handler.DisplayChoosersRunnable.java", "BodyUseAPI": [], "Fixed commit": "d1100eee827378d9ccb109899d516fd29c966884", "Url": "https://api.github.com/repos/mjedynak/builder-generator-idea-plugin", "Date": "2011-11-28T20:57:55Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stos.empty()) { main.Wyrazenie.logger.log(java.util.logging.Level.INFO, (\"Wynik: \" + wyn)); return wyn; }else { wyjatki.ONP_ZaDuzoArgumentow w = new wyjatki.ONP_ZaDuzoArgumentow(); main.Wyrazenie.logger.log(java.util.logging.Level.WARNING, (\"B\u0142\u0105d w obliczeniach \" + w)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3504/buggy-version/src.main.Wyrazenie.java", "BodyUseAPI": [], "Fixed commit": "744ff570a593d27b1898eb7ccd20fb6ecfe20aa1", "Url": "https://api.github.com/repos/Rufusmen/ONP", "Date": "2017-11-12T15:01:54Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((after.getTag()) != null) { tags.addAll(after.getTag()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1752/buggy-version/integration.src.main.java.org.exoplatform.task.integration.TaskLoggingListener.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.addAll(after.getTag())", "org.exoplatform.task.domain.Task.getTag()"], "Fixed commit": "16784a08beb005be0426e933aa48fa6445ed039b", "Url": "https://api.github.com/repos/exo-addons/task", "Date": "2015-10-09T10:57:11Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((before.getTag()) != null) && (!(before.getTag().isEmpty()))) { tags.removeAll(before.getTag()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1752/buggy-version/integration.src.main.java.org.exoplatform.task.integration.TaskLoggingListener.java", "BodyUseAPI": ["org.exoplatform.task.domain.Task.getTag()", "java.util.Set<java.lang.String>.removeAll(before.getTag())"], "Fixed commit": "16784a08beb005be0426e933aa48fa6445ed039b", "Url": "https://api.github.com/repos/exo-addons/task", "Date": "2015-10-09T10:57:11Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getSystemService(Context.VIBRATOR_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (vibrator.hasVibrator()) { vibrator.vibrate(200); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7/buggy-version/hood-core.src.release.java.at.favre.lib.hood.HoodFactory.java", "BodyUseAPI": ["android.os.Vibrator.vibrate(int)"], "Fixed commit": "fffb60abb17368a9c9ac63bc503c45aae294dff6", "Url": "https://api.github.com/repos/patrickfav/under-the-hood", "Date": "2017-02-09T20:26:08Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.KITKAT)) { displayIntro(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8193/buggy-version/src.com.tinfoil.sms.sms.ConversationView.java", "BodyUseAPI": [], "Fixed commit": "f6bf37dd37fd54e294fcc6007577aad2746b100d", "Url": "https://api.github.com/repos/tinfoilhat/tinfoil-sms", "Date": "2014-01-15T01:34:55Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentExchange) instanceof org.springframework.amqp.core.TopicExchange) { binding = org.springframework.amqp.core.BindingBuilder.bind(q).to(((org.springframework.amqp.core.TopicExchange) (currentExchange))).with(routingKey); }else if ((currentExchange) instanceof org.springframework.amqp.core.CustomExchange) { binding = org.springframework.amqp.core.BindingBuilder.bind(q).to(currentExchange).with(routingKey).noargs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3531/buggy-version/src.main.java.com.jbrisbin.groovy.mqdsl.RabbitMQBuilder.java", "BodyUseAPI": [], "Fixed commit": "90343dbf3062a420b9315756b1d0fd7b34d3ef2a", "Url": "https://api.github.com/repos/jbrisbin/rabbitmq-dsl", "Date": "2011-10-27T16:38:47Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mapLinksToListenTo.equals(this.mapLinksToListenTo)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2704/buggy-version/java.core.src.com.tygron.pub.api.data.UpdateMonitor.java", "BodyUseAPI": [], "Fixed commit": "63156d7f4d9a20a5777a2c8fba39467abd4fac40", "Url": "https://api.github.com/repos/Tygron/SDK", "Date": "2015-06-08T11:29:12Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["genericsutil.GenericsUtilImpl.splitTrim(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((f.length) > 3) tvs = genericsutil.GenericsUtilImpl.makeTVS(genericsutil.GenericsUtilImpl.joinString(f, 3)); else tvs = genericsutil.GenericsUtilImpl.makeTVS(f[2]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7750/buggy-version/lib.src.genericsutil.GenericsUtilImpl.java", "BodyUseAPI": ["genericsutil.GenericsUtilImpl.joinString(java.lang.String[],int)", "genericsutil.GenericsUtilImpl.makeTVS(java.lang.String)", "genericsutil.GenericsUtilImpl.makeTVS(java.lang.String)"], "Fixed commit": "8e698929df68c73e40b9b55d19eb5e67b3d7eb61", "Url": "https://api.github.com/repos/kbaseapps/GenericsUtil", "Date": "2017-02-02T01:50:33Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (selectedPaths.get(0))) { refreshMediaData(new java.io.File(selectedPaths.get(0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7665/buggy-version/matisse.src.main.java.com.zhihu.matisse.ui.MatisseActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "com.zhihu.matisse.ui.MatisseActivity.refreshMediaData(java.io.File)"], "Fixed commit": "a1bad1a25a48abce3c579172b4f14ad6183f63fe", "Url": "https://api.github.com/repos/haoxunwang/ImageSelector", "Date": "2017-11-10T03:33:51Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (length == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3/buggy-version/buffer.src.main.java.io.netty.buffer.ReadOnlyByteBufferBuf.java", "BodyUseAPI": [], "Fixed commit": "f478fcd3b0ced600abb3b5163f12cd10bc91979e", "Url": "https://api.github.com/repos/shantanusharma/netty", "Date": "2013-07-22T05:12:05Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (buffer.hasArray()) { out.write(buffer.array(), (index + (buffer.arrayOffset())), length); }else { byte[] tmp = new byte[length]; java.nio.ByteBuffer tmpBuf = internalNioBuffer(); tmpBuf.clear().position(index); tmpBuf.get(tmp); out.write(tmp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3/buggy-version/buffer.src.main.java.io.netty.buffer.ReadOnlyByteBufferBuf.java", "BodyUseAPI": ["java.nio.ByteBuffer.arrayOffset()", "java.nio.ByteBuffer.array()", "java.io.OutputStream.write(byte[],int,int)"], "Fixed commit": "f478fcd3b0ced600abb3b5163f12cd10bc91979e", "Url": "https://api.github.com/repos/shantanusharma/netty", "Date": "2013-07-22T05:12:05Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (length == 0) { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3/buggy-version/buffer.src.main.java.io.netty.buffer.ReadOnlyByteBufferBuf.java", "BodyUseAPI": [], "Fixed commit": "f478fcd3b0ced600abb3b5163f12cd10bc91979e", "Url": "https://api.github.com/repos/shantanusharma/netty", "Date": "2013-07-22T05:12:05Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isActive()) { epollInReady(); }else { closeOnRead(pipeline()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3652/buggy-version/transport-native-epoll.src.main.java.io.netty.channel.epoll.EpollSocketChannel.java", "BodyUseAPI": [], "Fixed commit": "f9238d1c15019615743d31130750d722deea1822", "Url": "https://api.github.com/repos/phlizik/netty", "Date": "2014-02-19T10:57:41Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context) instanceof android.app.Activity) { if (((android.app.Activity) (context)).isFinishing()) return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5477/buggy-version/app.src.main.java.com.voicetube.toolkit.component.tool.dialog.BaseDialog.java", "BodyUseAPI": [], "Fixed commit": "46c17bd6bf90932b384590b45d20a732d2b3f6e4", "Url": "https://api.github.com/repos/voicetube/android_toolkit_utils", "Date": "2017-12-01T06:41:49Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dialog.isShowing())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5477/buggy-version/app.src.main.java.com.voicetube.toolkit.component.tool.dialog.BaseDialog.java", "BodyUseAPI": [], "Fixed commit": "46c17bd6bf90932b384590b45d20a732d2b3f6e4", "Url": "https://api.github.com/repos/voicetube/android_toolkit_utils", "Date": "2017-12-01T06:41:49Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (config.isAnalyticsEnabled()) { java.lang.String botanProxyToken = config.getBotanProxyToken(); try { if ((botanProxyToken != null) && (me.shib.java.lib.jbots.JBots.isProxyModelInClassPath(botanProxyToken))) { java.lang.Class<?> clazz = java.lang.Class.forName(config.getBotModelClassName()); java.lang.reflect.Constructor<?> ctor = clazz.getConstructor(java.lang.String.class, java.lang.String.class); bot = ((me.shib.java.lib.jtelebot.service.TelegramBot) (ctor.newInstance(botApiToken, botanProxyToken))); }else { java.lang.Class<?> clazz = java.lang.Class.forName(config.getBotModelClassName()); java.lang.reflect.Constructor<?> ctor = clazz.getConstructor(java.lang.String.class, java.lang.String.class); bot = ((me.shib.java.lib.jtelebot.service.TelegramBot) (ctor.newInstance(botApiToken, botanProxyToken))); } } catch (java.lang.Exception ignored) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4515/buggy-version/src.me.shib.java.lib.jbots.JBots.java", "BodyUseAPI": ["me.shib.java.lib.jbots.JBotConfig.getBotModelClassName()", "java.lang.Class.forName(config.getBotModelClassName())", "me.shib.java.lib.jbots.JBotConfig.getBotModelClassName()", "me.shib.java.lib.jbots.JBotConfig.getBotanProxyToken()", "java.lang.Class.forName(config.getBotModelClassName())"], "Fixed commit": "433d930608a351fa53839f593d7bc6e33b09a6b8", "Url": "https://api.github.com/repos/shibme/jbots", "Date": "2016-01-27T20:10:06Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (bot == null) { bot = me.shib.java.lib.jtelebot.service.TelegramBot.getInstance(botApiToken); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4515/buggy-version/src.me.shib.java.lib.jbots.JBots.java", "BodyUseAPI": [], "Fixed commit": "433d930608a351fa53839f593d7bc6e33b09a6b8", "Url": "https://api.github.com/repos/shibme/jbots", "Date": "2016-01-27T20:10:06Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (levelAvailable(n)) { text.setText(java.lang.Integer.toString(n)); }else { text.setText(\"X\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4608/buggy-version/app.src.main.java.com.edulectronics.tinycircuit.Views.ExerciseMenuActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "java.lang.Integer.toString(int)"], "Fixed commit": "82d2cd5a05efecb1906d69235451b8ec690cf0e0", "Url": "https://api.github.com/repos/wzwietering/IntroductieProject", "Date": "2017-01-20T13:18:43Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) < (Build.VERSION_CODES.KITKAT)) { PostsLV.addFooterView(new android.view.View(this.getBaseContext())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5120/buggy-version/app.src.main.java.ar.edu.unc.famaf.redditreader.ui.NewsActivity.java", "BodyUseAPI": [], "Fixed commit": "3e16cc76bbb55a4bb473a705f35196653f40685c", "Url": "https://api.github.com/repos/mauguignard/androidRedditReader", "Date": "2016-10-12T20:18:55Z"},
{"Line": "=>977", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (p != null) { outputBuilder.append(\"Uncalled bet (\").append(total).append(\") returned to \").append(p.getName()).append(\"\\r\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6422/buggy-version/src.main.java.org.ozsoft.texasholdem.Table.java", "BodyUseAPI": ["java.lang.StringBuilder.append(p.getName())", "java.lang.StringBuilder.append(java.lang.String)", "org.ozsoft.texasholdem.Player.getName()"], "Fixed commit": "2e6bf3d8e0118834cc482a2008486b565b077799", "Url": "https://api.github.com/repos/guoyucn/nashclient", "Date": "2016-01-27T15:13:16Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.newInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (laf instanceof javax.swing.LookAndFeel) { javax.swing.UIManager.setLookAndFeel(((javax.swing.LookAndFeel) (laf))); }else if (laf instanceof org.jvnet.substance.api.SubstanceSkin) { org.jvnet.substance.SubstanceLookAndFeel.setSkin(((org.jvnet.substance.api.SubstanceSkin) (laf))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/44/buggy-version/src-pos.com.openbravo.pos.config.JFrmConfig.java", "BodyUseAPI": [], "Fixed commit": "902860f76a46d6b2e0b6aac587e567e9941aad79", "Url": "https://api.github.com/repos/dixonmartinez/OpenBravoPOS_2.30.2", "Date": "2016-12-04T16:50:32Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((InvertedIndex.invertedIndex.get(query)) == null) { return 0; }else { nk = InvertedIndex.invertedIndex.get(query).size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8743/buggy-version/src.VectorSpaceModel.java", "BodyUseAPI": ["InvertedIndex.invertedIndex.get(java.lang.String)", "InvertedIndex.invertedIndex.get(query).size()"], "Fixed commit": "88c31d2ca596cf710468cc448f2c3299833e6ba1", "Url": "https://api.github.com/repos/Recelis/MicroSearch", "Date": "2017-02-07T11:30:37Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (activity != null) { am.delete(activity); return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6540/buggy-version/src.main.java.be.doji.productivity.TrackMeUp.presentation.webfront.UiApplication.java", "BodyUseAPI": ["be.doji.productivity.TrackMeUp.managers.ActivityManager.delete(be.doji.productivity.TrackMeUp.model.tasks.Activity)"], "Fixed commit": "96459ebcbd79e64be1e4863ec4fbbc16d45ab6f7", "Url": "https://api.github.com/repos/justDoji/TrackMeUp", "Date": "2017-10-29T12:49:04Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((am) == null) { initialize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6540/buggy-version/src.main.java.be.doji.productivity.TrackMeUp.presentation.webfront.UiApplication.java", "BodyUseAPI": [], "Fixed commit": "96459ebcbd79e64be1e4863ec4fbbc16d45ab6f7", "Url": "https://api.github.com/repos/justDoji/TrackMeUp", "Date": "2017-10-29T12:49:04Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.craftinc.gates.commands.CommandLocation.isOpen()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (gateOpen) { gate.setOpen(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5126/buggy-version/src.de.craftinc.gates.commands.CommandLocation.java", "BodyUseAPI": [], "Fixed commit": "b50a2b27d3039f48497c41118256f506b69f70ea", "Url": "https://api.github.com/repos/craftinc/craftinc-gates", "Date": "2013-06-23T15:09:39Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.craftinc.gates.commands.CommandLocation.isOpen()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (gateOpen) { gate.setOpen(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5126/buggy-version/src.de.craftinc.gates.commands.CommandLocation.java", "BodyUseAPI": [], "Fixed commit": "b50a2b27d3039f48497c41118256f506b69f70ea", "Url": "https://api.github.com/repos/craftinc/craftinc-gates", "Date": "2013-06-23T15:09:39Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(net.dean.cyanideviewer.api.CyanideApi.IMAGE_DIR.mkdirs())) { android.util.Log.e(CyanideViewer.TAG, ((\"Unable to create the directory \" + (net.dean.cyanideviewer.api.CyanideApi.IMAGE_DIR.getAbsolutePath())) + \". Does it exist as a file?\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3467/buggy-version/app.src.main.java.net.dean.cyanideviewer.api.CyanideApi.java", "BodyUseAPI": ["android.util.Log.e(CyanideViewer.TAG,java.lang.String)", "java.io.File.getAbsolutePath()"], "Fixed commit": "621db1e165e9e74d7271648e0061c449a19c1457", "Url": "https://api.github.com/repos/thatJavaNerd/CyanideViewer", "Date": "2014-04-06T01:16:43Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.event.UndoableEditEvent.getEdit()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((edit.getType()) == (javax.swing.event.DocumentEvent.EventType.CHANGE)) compoundEdit.addEdit(edit); else if (((lastProgrammatic) && prog) || (((!(lastProgrammatic)) && (!prog)) && (isIncremental(edit)))) compoundEdit.addEdit(edit, document.getTextPane().getCaretPosition()); else { compoundEdit.end(); compoundEdit = startCompoundEdit(edit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8215/buggy-version/src.mmj.pa.CompoundUndoManager.java", "BodyUseAPI": ["mmj.pa.CompoundUndoManager.EditEvent.addEdit(javax.swing.text.AbstractDocument.DefaultDocumentEvent)", "mmj.pa.CompoundUndoManager.isIncremental(javax.swing.text.AbstractDocument.DefaultDocumentEvent)", "mmj.pa.CompoundUndoManager.startCompoundEdit(javax.swing.text.AbstractDocument.DefaultDocumentEvent)", "mmj.pa.CompoundUndoManager.EditEvent.addEdit(javax.swing.text.AbstractDocument.DefaultDocumentEvent,document.getTextPane().getCaretPosition())"], "Fixed commit": "3c5a8d204975d5b4f54b11cb3aaa7e8efb3ee3b1", "Url": "https://api.github.com/repos/digama0/mmj2", "Date": "2014-02-14T02:20:01Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gffTags) == false) gffTags = tp.isGffTags();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1967/buggy-version/src.org.broad.igv.feature.tribble.UCSCCodec.java", "BodyUseAPI": [], "Fixed commit": "230267b130ed80e0c8fde676b0833b4c5e33d206", "Url": "https://api.github.com/repos/igvteam/igv", "Date": "2015-05-22T18:46:58Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rosParam.isDumpCommand()) { org.ros.rosjava.roslaunch.launching.RosParamManager.dumpParam(rosParam); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7057/buggy-version/src.org.ros.rosjava.roslaunch.launching.RosParamManager.java", "BodyUseAPI": ["org.ros.rosjava.roslaunch.launching.RosParamManager.dumpParam(org.ros.rosjava.roslaunch.parsing.RosParamTag)"], "Fixed commit": "a851d2765814c958d5e7b0e76e1d6d8336c68f39", "Url": "https://api.github.com/repos/bponsler/rosjava_roslaunch", "Date": "2016-01-29T23:53:20Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((listener == null) || ((listener.getListensToMouseEventsOperator()) == null)) || ((listener.getMouseEventSelector()) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8275/buggy-version/src.genesis_event.AbstractMouseListenerHandler.java", "BodyUseAPI": [], "Fixed commit": "efc248803098fa9ed14aca45fa4a8e0f7e693063", "Url": "https://api.github.com/repos/Mikkomario/UtopiaGenesis", "Date": "2014-12-17T14:14:14Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mNewDevices) != null) && (mNewDevices.isEmpty())) { onProgressStart(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5885/buggy-version/src.com.codepath.beacon.activity.BlePagerActivity.java", "BodyUseAPI": [], "Fixed commit": "d5498968df2bec09c3c2cfe92c80f2a65bbb77f4", "Url": "https://api.github.com/repos/rcao137/ibeaconrecipe", "Date": "2014-08-04T05:43:28Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((params) == null) { paramNum = 0; }else { paramNum = params.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6693/buggy-version/src.main.java.com.jModule.def.Command.java", "BodyUseAPI": [], "Fixed commit": "a6f6089c02a488331d8059dcf1c24f1e28810615", "Url": "https://api.github.com/repos/pkelaita/JModule", "Date": "2017-09-01T06:08:28Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (paramNum == (args.length)) { logic.runCommand(args); }else { java.lang.System.out.println(((getUsage()) + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6693/buggy-version/src.main.java.com.jModule.def.Command.java", "BodyUseAPI": ["com.jModule.def.CommandLogic.runCommand(java.lang.String[])"], "Fixed commit": "a6f6089c02a488331d8059dcf1c24f1e28810615", "Url": "https://api.github.com/repos/pkelaita/JModule", "Date": "2017-09-01T06:08:28Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.hasOwner()) { nbtTagCompound.setString(Names.NBT.OWNER, owner); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1275/buggy-version/src.main.java.com.timthebrick.tinystorage.tileentity.TileEntityTinyStorage.java", "BodyUseAPI": [], "Fixed commit": "7d277796427215746f2cb23414229b7067d657db", "Url": "https://api.github.com/repos/SmithsGaming/Tiny-Storage", "Date": "2015-02-16T14:08:28Z"},
{"Line": "=>4461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lb.isArg) lb.idx -= 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4431/buggy-version/src.jvm.clojure.lang.Compiler.java", "BodyUseAPI": [], "Fixed commit": "faa5ccb33d25799ee13d79648bb0db71eb56914d", "Url": "https://api.github.com/repos/MichaelBlume/clojure", "Date": "2015-08-31T04:27:39Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((runningStatemachines.containsKey(ID)) && (currentStates.containsKey(ID))) { java.lang.System.out.println((((((\"## handleSatisfiedConstraint(id,satConstraint) --> \" + ID) + \" \") + (runningStatemachines.get(ID).isActive())) + \" \") + (currentStates.get(ID).isActive()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4084/buggy-version/impl.androidApp.api.src.main.java.org.mindroid.impl.statemachine.StatemachineManager.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.mindroid.impl.statemachine.IStatemachine>.get(java.lang.String)", "runningStatemachines.get(ID).isActive()", "java.util.Map<java.lang.String, org.mindroid.impl.statemachine.IState>.get(java.lang.String)", "currentStates.get(ID).isActive()", "java.io.PrintStream.println((((((\"## handleSatisfiedConstraint(id,satConstraint) --> \" + ID) + \" \") + (runningStatemachines.get(ID).isActive())) + \" \") + (currentStates.get(ID).isActive())))"], "Fixed commit": "f13759c88b7a789dd687a8acaaf02c3f690abe6c", "Url": "https://api.github.com/repos/Echtzeitsysteme/mindroid", "Date": "2017-05-12T16:10:44Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.qos.logback.classic.spi.ILoggingEvent.getFormattedMessage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (msg == null) return ch.qos.logback.core.spi.FilterReply.NEUTRAL;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/9223/buggy-version/src.main.java.com.bwfcwalshy.flarebot.ErrorCatcher.java", "BodyUseAPI": [], "Fixed commit": "3faae9a278d46fee72b92d40602fc316b381b55c", "Url": "https://api.github.com/repos/FlareBot/FlareBot", "Date": "2017-01-20T21:03:40Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (accessor == null) { accessor = findElementAccessor(((voodoodriver.SodaElements) (map.get(\"type\"))), name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3897/buggy-version/src.voodoodriver.SodaXML.java", "BodyUseAPI": [], "Fixed commit": "729c626dd5255a2297d495a3ae62926599cbc61d", "Url": "https://api.github.com/repos/sugarcrm/VooDooDriver", "Date": "2011-11-14T23:40:36Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<io.druid.timeline.DataSegment, java.lang.Long>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (capacity == 0) capacity = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6252/buggy-version/server.src.main.java.io.druid.server.coordinator.helper.DruidCoordinatorBestFitSegmentReplicator.java", "BodyUseAPI": [], "Fixed commit": "4b3c88200bb0698670b2acd5a6e4516d5b3e1c75", "Url": "https://api.github.com/repos/mghosh4/druid", "Date": "2017-08-09T16:15:07Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.broadleafcommerce.openadmin.client.dto.Property.getMetadata()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fmd instanceof org.broadleafcommerce.openadmin.client.dto.BasicFieldMetadata) { ceilingType = cmd.getCeilingType(); }else if (fmd instanceof org.broadleafcommerce.openadmin.client.dto.CollectionMetadata) { ceilingType = ((org.broadleafcommerce.openadmin.client.dto.CollectionMetadata) (fmd)).getCollectionCeilingEntity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1977/buggy-version/admin.broadleaf-open-admin-platform.src.main.java.org.broadleafcommerce.openadmin.web.service.FormBuilderServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "cfbddc6ca3e3e6d68e6c15f540a04aca02eae1fd", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2013-04-19T22:41:41Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.dakror.arise.game.Game.client) != null) updateQueueDisplay();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/9301/buggy-version/src.main.java.de.dakror.arise.game.building.Barracks.java", "BodyUseAPI": [], "Fixed commit": "846f699454873b43481c19bfcced8f2ca9fa4746", "Url": "https://api.github.com/repos/Dakror/Arise", "Date": "2014-04-02T16:09:43Z"},
{"Line": "=>804", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hazelcast.core.Member.getInetSocketAddress()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (ipAddress != null) return ipAddress.toString().substring(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8131/buggy-version/distributed.src.main.java.com.orientechnologies.orient.server.hazelcast.OHazelcastPlugin.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.lang.String.substring(int)"], "Fixed commit": "b7817f1b051e01ab860b599e3a04287440148c15", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2013-09-11T11:07:17Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (tagArgs != null) { bindingsMap.putAll(tagArgs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1879/buggy-version/src.main.java.play.template2.GTJavaBase.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Object>.putAll(java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "3eb804625bcd338ef62b39b2a9ecc8602becc95a", "Url": "https://api.github.com/repos/mbknor/gt-engine", "Date": "2013-04-16T20:17:42Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MAX_QUIZ_WORDS) == 10) addWordToFiles();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3157/buggy-version/src.app.model.QuizModel.java", "BodyUseAPI": [], "Fixed commit": "f57f6a9562350ef70a787533ad2ebf05b7f09e53", "Url": "https://api.github.com/repos/FMcIntosh/VoxSpellFM", "Date": "2016-10-24T03:04:28Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bucket_low_f == bucket_up_f) bucket_up_f += 0.01;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1309/buggy-version/parquet-column.src.main.java.org.apache.parquet.column.statistics.histogram.Histogram.java", "BodyUseAPI": [], "Fixed commit": "765a35432026044b159f0e4660e113df7ae68336", "Url": "https://api.github.com/repos/lizbai0821/parquet-mr", "Date": "2016-11-20T11:39:32Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (marshaller == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8051/buggy-version/errai-marshalling.src.main.java.org.jboss.errai.marshalling.server.MappingContextSingleton.java", "BodyUseAPI": [], "Fixed commit": "cf604733b67784c39fc7b020477ec541108dff03", "Url": "https://api.github.com/repos/errai/errai", "Date": "2012-09-28T16:49:59Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((categoryString.length()) > 0) return categoryString.substring(0, ((categoryString.length()) - 2)); else return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/504/buggy-version/SFFoodTruck.app.src.main.java.com.codepath.com.sffoodtruck.data.model.Business.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "a79be620a3958eb39476b5158b43f1df45543232", "Url": "https://api.github.com/repos/Codepath-Group7/Group7", "Date": "2017-10-19T17:08:53Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((completeAddress.length()) > 0) return completeAddress.substring(0, ((completeAddress.length()) - 2)); else return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/504/buggy-version/SFFoodTruck.app.src.main.java.com.codepath.com.sffoodtruck.data.model.Location.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "a79be620a3958eb39476b5158b43f1df45543232", "Url": "https://api.github.com/repos/Codepath-Group7/Group7", "Date": "2017-10-19T17:08:53Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((calculator.calculator.totalBracketPairs) == 0) { (calculator.calculator.totalBracketPairs)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8064/buggy-version/src.calculator.calculator.java", "BodyUseAPI": [], "Fixed commit": "0bc14b5bfda76a9afb87edf7795d835e4d808fa8", "Url": "https://api.github.com/repos/thirstyice/calculator", "Date": "2015-12-28T00:14:47Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((players) == null) { players = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2766/buggy-version/src.main.java.Beans.PlayersBean.java", "BodyUseAPI": [], "Fixed commit": "e32f3a04b2cdfef07403af82895d8ac6b37e7308", "Url": "https://api.github.com/repos/seinecle/SimpleLeaderBoard", "Date": "2015-08-24T22:29:26Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dx != 0) { if ((java.lang.Math.abs(dx)) > (((1.0 * (getSpeed())) * (cl.automind.gameframework.tileworld.Body.SIZE)) / (cl.automind.gameframework.tileworld.Body.FPS))) { this.sx = (this.sx) + ((((java.lang.Math.signum(dx)) * (getSpeed())) * (cl.automind.gameframework.tileworld.Body.SIZE)) / (cl.automind.gameframework.tileworld.Body.FPS)); }else { this.sx = (this.sx) + dx; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3440/buggy-version/src.cl.automind.gameframework.tileworld.Body.java", "BodyUseAPI": ["java.lang.Math.signum(float)", "java.lang.Math.abs(float)"], "Fixed commit": "dca413b6c8e921addbbfcf61fb612ed15055bcab", "Url": "https://api.github.com/repos/mabahamo/GameFramework", "Date": "2011-09-06T15:57:33Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((ctx.expr(1).getChildCount()) == 1) && ((ctx.expr(1).getChild(0)) instanceof io.djigger.ql.OQLParser.StringAtomContext)) { value = value.substring(1, ((value.length()) - 1)); value = value.replace(\"\\\"\\\"\", \"\\\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5632/buggy-version/commons.src.main.java.io.djigger.ql.OQLMongoDBQueryVisitor.java", "BodyUseAPI": [], "Fixed commit": "154fd6097a371ddb16657ec3de7ab508af754c6d", "Url": "https://api.github.com/repos/exense/djigger", "Date": "2016-06-30T09:44:55Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(restx.security.CORSFilter.SIMPLE_METHODS.contains(req.getHttpMethod()))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6652/buggy-version/restx-core.src.main.java.restx.security.CORSFilter.java", "BodyUseAPI": [], "Fixed commit": "af3fc06546c1ef586f9641d74784754c09605898", "Url": "https://api.github.com/repos/restx/restx", "Date": "2014-01-01T17:43:04Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["restx.security.RestxRequest.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(host.isPresent())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6652/buggy-version/restx-core.src.main.java.restx.security.CORSFilter.java", "BodyUseAPI": [], "Fixed commit": "af3fc06546c1ef586f9641d74784754c09605898", "Url": "https://api.github.com/repos/restx/restx", "Date": "2014-01-01T17:43:04Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["restx.security.RestxRequest.getHeader(java.lang.String)", "restx.security.RestxRequest.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (origin.get().endsWith(host.get())) { restx.security.CORSFilter.logger.debug(\"Same Origin request not considered as CORS Request: {}\", req); return false; }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6652/buggy-version/restx-core.src.main.java.restx.security.CORSFilter.java", "BodyUseAPI": [], "Fixed commit": "af3fc06546c1ef586f9641d74784754c09605898", "Url": "https://api.github.com/repos/restx/restx", "Date": "2014-01-01T17:43:04Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["restx.security.RestxRequest.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(origin.isPresent())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6652/buggy-version/restx-core.src.main.java.restx.security.CORSFilter.java", "BodyUseAPI": [], "Fixed commit": "af3fc06546c1ef586f9641d74784754c09605898", "Url": "https://api.github.com/repos/restx/restx", "Date": "2014-01-01T17:43:04Z"},
{"Line": "=>759", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((world.getBlock(x, (y + 1), z)) instanceof newBiospheresMod.BlockDome)) { world.setBlock(x, (y + 1), z, Blx.snow_layer, 0, 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8307/buggy-version/src.main.java.newBiospheresMod.BiosphereChunkProvider.java", "BodyUseAPI": ["net.minecraft.world.World.setBlock(int,int,int,Blx.snow_layer,int,int)"], "Fixed commit": "7c829cd130e5a952ac1065b8934c41d0727a7d70", "Url": "https://api.github.com/repos/BrainSlugs83/NewBiospheresMod", "Date": "2015-04-26T21:14:06Z"},
{"Line": "=>1233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.getForceFieldManager().getEnabledSourceField(block.getLocation(),FieldFlag.PREVENT_PLACE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (field != null) { if (!(field.getSettings().inPlaceBlacklist(block))) { if (FieldFlag.PREVENT_PLACE.applies(field, player)) { if (plugin.getPermissionsManager().has(player, \"preciousstones.bypass.place\")) { plugin.getCommunicationManager().notifyBypassPlace(player, block, field); }else { plugin.getCommunicationManager().warnPlace(player, block, field); event.setCancelled(true); return false; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5465/buggy-version/src.main.java.net.sacredlabyrinth.Phaed.PreciousStones.listeners.PSBlockListener.java", "BodyUseAPI": ["net.sacredlabyrinth.Phaed.PreciousStones.vectors.Field.getSettings()", "plugin.getCommunicationManager().notifyBypassPlace(org.bukkit.entity.Player,org.bukkit.block.Block,net.sacredlabyrinth.Phaed.PreciousStones.vectors.Field)", "plugin.getCommunicationManager().warnPlace(org.bukkit.entity.Player,org.bukkit.block.Block,net.sacredlabyrinth.Phaed.PreciousStones.vectors.Field)", "field.getSettings().inPlaceBlacklist(org.bukkit.block.Block)", "FieldFlag.PREVENT_PLACE.applies(net.sacredlabyrinth.Phaed.PreciousStones.vectors.Field,org.bukkit.entity.Player)"], "Fixed commit": "667f4a3b0d836c35c785e8f25d1adaec0c5164d2", "Url": "https://api.github.com/repos/SacredCoding/PreciousStones", "Date": "2013-03-22T02:07:52Z"},
{"Line": "=>916", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.isCancelled()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5465/buggy-version/src.main.java.net.sacredlabyrinth.Phaed.PreciousStones.listeners.PSBlockListener.java", "BodyUseAPI": [], "Fixed commit": "667f4a3b0d836c35c785e8f25d1adaec0c5164d2", "Url": "https://api.github.com/repos/SacredCoding/PreciousStones", "Date": "2013-03-22T02:07:52Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.getMaxDamage(item)) - (this.getDamage(item))) <= 1) { nmd.primal.core.common.helper.PlayerHelper.spawnItemOnPlayer(world, ((net.minecraft.entity.player.EntityPlayer) (player)), new net.minecraft.item.ItemStack(nmd.primal.forgecraft.init.ModItems.bronzepickaxehead, 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5015/buggy-version/kfc.src.main.java.nmd.primal.forgecraft.items.tools.BronzePickaxe.java", "BodyUseAPI": [], "Fixed commit": "3a1c9676ab953a99088cce4dd3f47412d725e5f2", "Url": "https://api.github.com/repos/kitsushadow/forgecraft", "Date": "2017-11-30T03:13:57Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((onefengma.demo.common.StringUtils.isEmpty(basePushData.title)) || (onefengma.demo.common.StringUtils.isEmpty(basePushData.desc))) { onefengma.demo.server.core.LogUtils.saveToFiles((((\"title or desc null: \" + (basePushData.title)) + \", \") + (basePushData.desc)), true); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2856/buggy-version/src.main.java.onefengma.demo.server.core.JiGuangPushManager.java", "BodyUseAPI": ["onefengma.demo.server.core.LogUtils.saveToFiles((((\"title or desc null: \" + (basePushData.title)) + \", \") + (basePushData.desc)),boolean)"], "Fixed commit": "a46fb23ae95a75c32bbcfdb510257bd2ce6ad755", "Url": "https://api.github.com/repos/chufengma/b2b", "Date": "2016-12-04T13:55:24Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.command.CommandSender.hasPermission(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hasPermission) { this.plugin.log(java.util.logging.Level.FINER, ((((\"Player [\" + (player.getName())) + \"] HAS PERMISSION [\") + node) + \"]!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2180/buggy-version/src.main.java.com.onarandombox.MultiverseCore.utils.MVPermissions.java", "BodyUseAPI": [], "Fixed commit": "56926dc14ce1f073e2fde54d12fe532683b27c71", "Url": "https://api.github.com/repos/Multiverse/Multiverse-Core", "Date": "2011-10-16T08:06:18Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Object, org.eclipse.epsilon.zest.graph.EpsilonZestNode>.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((targetNode != null) || ((mode == (org.eclipse.epsilon.zest.view.EpsilonZestGraphView.MissingNodeHandling.ADD_MISSING)) && ((++i) < (ellipsisThreshold)))) { mapToEdge(sourceObject, targetObject, label, mode); }else if (mode == (org.eclipse.epsilon.zest.view.EpsilonZestGraphView.MissingNodeHandling.ADD_MISSING)) { ellipsisObjects.add(targetObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/9007/buggy-version/org.eclipse.epsilon.zest.src.org.eclipse.epsilon.zest.view.EpsilonZestGraphView.java", "BodyUseAPI": ["org.eclipse.epsilon.zest.view.EpsilonZestGraphView.mapToEdge(java.lang.Object,java.lang.Object,java.lang.String,org.eclipse.epsilon.zest.view.EpsilonZestGraphView.MissingNodeHandling)"], "Fixed commit": "3b3863b2da9b786df9c5d5cb060a1dcb419265b8", "Url": "https://api.github.com/repos/epsilonlabs/epsilon-zest", "Date": "2017-07-20T23:02:31Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFeedItems.size()) == 0) { ViewFiles.emptyStatusTextView.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2595/buggy-version/app.src.main.java.swati4star.createpdf.FilesAdapter.java", "BodyUseAPI": [], "Fixed commit": "48fe7a9868600fe5cc7d3912227376c1e8f5ee60", "Url": "https://api.github.com/repos/flxwu/Images-to-PDF", "Date": "2017-10-20T14:00:45Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((request.getParameter(\"minutes\")) != null) && ((request.getParameter(\"keyword\")) != null)) { minutes = java.lang.Integer.parseInt(request.getParameter(\"minutes\")); keyword = request.getParameter(\"keyword\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6856/buggy-version/src.WebServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "java.lang.Integer.parseInt(request.getParameter(\"minutes\"))", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "298e0778638b5a99204864cdfbf1a35b238d65e6", "Url": "https://api.github.com/repos/halberthong/TwittMapApplication", "Date": "2015-10-28T20:42:48Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((command.getResultCode()) == (SMFP_EFPTR_PREVCOMMAND)) { com.shtrih.fiscalprinter.SysUtils.sleep(com.shtrih.fiscalprinter.SMFiscalPrinterImpl.SMFP_EFPTR_PREVCOMMAND_TimeToSleep); i--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2626/buggy-version/Source.Core.src.com.shtrih.fiscalprinter.SMFiscalPrinterImpl.java", "BodyUseAPI": [], "Fixed commit": "c3701f706734aa6f137229cd4523e968d2e762d0", "Url": "https://api.github.com/repos/shtrih-m/javapos_shtrih", "Date": "2017-02-27T15:38:59Z"},
{"Line": "=>898", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != aListener) { aListener.onCancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7341/buggy-version/vector.src.main.java.im.vector.util.VectorRoomMediasSender.java", "BodyUseAPI": ["im.vector.util.VectorRoomMediasSender.OnImageUploadListener.onCancel()"], "Fixed commit": "07574870e11d65f8b17fed187ada81a39c7897d4", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2016-08-11T08:36:18Z"},
{"Line": "=>915", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != aListener) { aListener.onDone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7341/buggy-version/vector.src.main.java.im.vector.util.VectorRoomMediasSender.java", "BodyUseAPI": ["im.vector.util.VectorRoomMediasSender.OnImageUploadListener.onDone()"], "Fixed commit": "07574870e11d65f8b17fed187ada81a39c7897d4", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2016-08-11T08:36:18Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(<nulltype>,java.lang.String,java.lang.String,int,<nulltype>,java.lang.String[],java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (x == null) { Parchessi.numPlayers = 1; }else { Parchessi.numPlayers = java.lang.Integer.parseInt(x); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/593/buggy-version/Eclipse.Game.src.Parchessi.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "2a3cdbea6476518f548d2cc6352955cdca95102e", "Url": "https://api.github.com/repos/TaylorTheDeveloper/Parcheesi-Java", "Date": "2014-11-28T17:49:43Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(<nulltype>,java.lang.String,java.lang.String,int,<nulltype>,java.lang.String[],int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (x == null) { tok = autoSelectFreeToken(); }else { tok = java.lang.Integer.parseInt(x); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/593/buggy-version/Eclipse.Game.src.Player.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "2a3cdbea6476518f548d2cc6352955cdca95102e", "Url": "https://api.github.com/repos/TaylorTheDeveloper/Parcheesi-Java", "Date": "2014-11-28T17:49:43Z"},
{"Line": "=>595", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.drools.rule.builder.PatternBuilder.getFieldReadAccessor(org.drools.rule.builder.RuleBuildContext,org.drools.lang.descr.BaseDescr,pattern.getObjectType(),java.lang.String,<nulltype>,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((restriction == null) || (extractor == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1865/buggy-version/drools-compiler.src.main.java.org.drools.rule.builder.PatternBuilder.java", "BodyUseAPI": [], "Fixed commit": "cb4a67135d9d688188578718d78afdddf673b74f", "Url": "https://api.github.com/repos/kiegroup/drools", "Date": "2011-03-16T14:44:21Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (serializers != null) { this.serializers = serializers; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4364/buggy-version/repairnator.src.main.java.fr.inria.spirals.repairnator.process.step.AbstractStep.java", "BodyUseAPI": [], "Fixed commit": "afd8f00ba306dbd74b82e7ee39146f651b0f610e", "Url": "https://api.github.com/repos/Spirals-Team/repairnator", "Date": "2017-01-23T11:55:46Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serializers) != null) { for (fr.inria.spirals.repairnator.serializer.AbstractDataSerializer serializer : this.serializers) { serializer.serializeData(this.inspector); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4364/buggy-version/repairnator.src.main.java.fr.inria.spirals.repairnator.process.step.AbstractStep.java", "BodyUseAPI": [], "Fixed commit": "afd8f00ba306dbd74b82e7ee39146f651b0f610e", "Url": "https://api.github.com/repos/Spirals-Team/repairnator", "Date": "2017-01-23T11:55:46Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mList.size()) == 0) { com.dwj.coolweather.ActivityController.finishAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/673/buggy-version/app.src.main.java.com.dwj.coolweather.SelectCityActivity.java", "BodyUseAPI": [], "Fixed commit": "d775c28c54679f342c180186f92df9d0a045879f", "Url": "https://api.github.com/repos/GitDu/CoolWeather", "Date": "2017-09-24T05:08:00Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.thm.ateam.memory.game.PlayerList.getInstance().session.size()) > 0) { intent = new android.content.Intent(this, de.thm.ateam.memory.game.GameActivity.class); startActivityForResult(intent, de.thm.ateam.memory.SelectMultipleUserActivity.GAME_HAS_FINISHED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3994/buggy-version/src.de.thm.ateam.memory.SelectMultipleUserActivity.java", "BodyUseAPI": [], "Fixed commit": "8bdcb359cb600b76e973b2ff44d59c33fb11c544", "Url": "https://api.github.com/repos/Crunch09/memory", "Date": "2012-06-19T08:07:51Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (minHour > 12) amPMTime = (((((((minHour - 12) + \":\") + minMin) + \"-\") + (endHour - 12)) + \":\") + endMin) + \" PM\"; else if ((minHour < 12) && (endHour >= 12)) if (endHour == 12) amPMTime = ((((((minHour + \":\") + minMin) + \" AM-\") + endHour) + \":\") + endMin) + \" PM\"; else amPMTime = ((((((minHour + \":\") + minMin) + \" AM-\") + (endHour - 12)) + \":\") + endMin) + \" PM\"; else if (endHour > 12) amPMTime = ((((((minHour + \":\") + minMin) + \"-\") + (endHour - 12)) + \":\") + endMin) + \" PM\"; else amPMTime = (time.get(posSmall)) + \" AM\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4612/buggy-version/QLife.app.src.main.java.engsoc.qlife.ui.fragments.DayFragment.java", "BodyUseAPI": [], "Fixed commit": "bcbd88fbf6eee4a605135bc93b7a2261b6aee848", "Url": "https://api.github.com/repos/QueensEngineeringSociety/QLife", "Date": "2017-09-22T22:37:11Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (combinedResult != null) { combinedResult.onCombineFinished(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3228/buggy-version/hazelcast.src.main.java.com.hazelcast.client.impl.protocol.task.map.DefaultMapAggregateMessageTask.java", "BodyUseAPI": ["com.hazelcast.map.impl.query.AggregationResult.onCombineFinished()"], "Fixed commit": "3c75c3b73ebeceb1d35600afd14be9dc65cf1e0f", "Url": "https://api.github.com/repos/hazelcast/hazelcast", "Date": "2016-11-19T19:31:05Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (countPairs > 0) { averageScore = averageScore / ((double) (countPairs)); }else { averageScore = 1.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/9285/buggy-version/biojava-structure.src.main.java.org.biojava.nbio.structure.contact.StructureInterfaceList.java", "BodyUseAPI": [], "Fixed commit": "8857d5f519b01dac8f11f01b3687fbe389e44ce5", "Url": "https://api.github.com/repos/heuermh/biojava", "Date": "2015-04-02T18:06:30Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newText.contains(\"realmpath\")) { android.util.Log.d(\"REALM\", (\"path: \" + (realm.getPath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5422/buggy-version/WhoRU.app.src.main.java.org.danico.whoru.SearchFragment.java", "BodyUseAPI": [], "Fixed commit": "08090a7e70794f18fc33173b0597999c547e0f58", "Url": "https://api.github.com/repos/nicomda/Who-Are-U", "Date": "2017-03-22T02:50:49Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (layer >= (notes.length)) resize(((short) (layer)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5071/buggy-version/src.com.github.soniex2.nbx.api.NBSTick.java", "BodyUseAPI": [], "Fixed commit": "d6df6f8fad448a37b177bbfef799d63ae38dfa33", "Url": "https://api.github.com/repos/SoniEx2/NBX-API", "Date": "2013-07-22T01:53:00Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerCount) == 1) { if ((players[current].health) <= 0) { net.mountain.engine.entities.mapObjects.players.SceneManager.setScene(SceneManager.SCENE_GAMEOVER); return; } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1186/buggy-version/src.net.mountain.engine.entities.mapObjects.players.Party.java", "BodyUseAPI": [], "Fixed commit": "b80d5ae6a6e920897a9ff981a7b6935683d2ba25", "Url": "https://api.github.com/repos/MrPibot/2D-Platformer", "Date": "2017-07-03T22:32:45Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(c.contains(\"input\"))) { MainFrame.octavePanel.evaluate(((\"DomainMath_OctaveVariables('\" + (org.domainmath.gui.MainFrame.parent_root)) + \"DomainMath_OctaveVariables.dat',whos);\")); MainFrame.varView.reload(); MainFrame.varView.reload(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6047/buggy-version/DomainMathIDE.src.org.domainmath.gui.octave.OctavePanel.java", "BodyUseAPI": [], "Fixed commit": "14ef2cdeb70c3ee1798f2f130f6a575931276fbf", "Url": "https://api.github.com/repos/vinukn/domainmath-ide", "Date": "2013-02-05T06:36:13Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myTotalTimeMillis.get()) == 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/941/buggy-version/common.src.jetbrains.buildServer.torrent.util.TorrentsDownloadStatistic.java", "BodyUseAPI": [], "Fixed commit": "8cb1277fdde98e0ecb3d466c2f5ba1afd03ec0c5", "Url": "https://api.github.com/repos/JetBrains/teamcity-torrent-plugin", "Date": "2017-12-14T09:26:19Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((property.getEType()) instanceof org.eclipse.ocl.ecore.VoidType) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1434/buggy-version/plugins.org.eclipse.ocl.ecore.src.org.eclipse.ocl.ecore.EcoreEvaluationEnvironment.java", "BodyUseAPI": [], "Fixed commit": "5062465fd0f65cb58aa1af7916a1d05655c6fe63", "Url": "https://api.github.com/repos/FURCAS-dev/FURCAS", "Date": "2011-05-01T12:11:41Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<org.eclipse.emf.ecore.EStructuralFeature, java.lang.Object>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((value != null) || (!((property.getEType()) instanceof org.eclipse.ocl.ecore.VoidType))) { tuple.eSet(property, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1434/buggy-version/plugins.org.eclipse.ocl.ecore.src.org.eclipse.ocl.ecore.EcoreEvaluationEnvironment.java", "BodyUseAPI": ["org.eclipse.emf.ecore.EObject.eSet(org.eclipse.emf.ecore.EStructuralFeature,java.lang.Object)"], "Fixed commit": "5062465fd0f65cb58aa1af7916a1d05655c6fe63", "Url": "https://api.github.com/repos/FURCAS-dev/FURCAS", "Date": "2011-05-01T12:11:41Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (runningJoin) { java.lang.StringBuilder running = new java.lang.StringBuilder(); for (java.lang.String split : splitStrings) { running.append(split); indexContents.append(\" \").append(running.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6493/buggy-version/src.main.java.com.searchcode.app.util.SearchcodeLib.java", "BodyUseAPI": [], "Fixed commit": "706f2d0e113f572701c2c10c1d2e079abb39e86e", "Url": "https://api.github.com/repos/boyter/searchcode-server", "Date": "2017-09-27T01:42:36Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(unmapFile.delete())) { fr.ens.transcriptome.eoulsan.EoulsanLogger.getLogger().warning((\"Cannot remove SOAP temporary file: \" + unmapFile)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2660/buggy-version/src.main.java.fr.ens.transcriptome.eoulsan.bio.readsmappers.SOAPReadsMapper.java", "BodyUseAPI": ["fr.ens.transcriptome.eoulsan.EoulsanLogger.getLogger().warning(java.lang.String)"], "Fixed commit": "4d4d2e830e561bff677ec8e82f8804473f6430a1", "Url": "https://api.github.com/repos/GenomicParisCentre/eoulsan", "Date": "2014-11-29T11:51:49Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(outputFile.delete())) { fr.ens.transcriptome.eoulsan.EoulsanLogger.getLogger().warning((\"Cannot remove SOAP temporary file: \" + outputFile)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2660/buggy-version/src.main.java.fr.ens.transcriptome.eoulsan.bio.readsmappers.SOAPReadsMapper.java", "BodyUseAPI": ["fr.ens.transcriptome.eoulsan.EoulsanLogger.getLogger().warning(java.lang.String)"], "Fixed commit": "4d4d2e830e561bff677ec8e82f8804473f6430a1", "Url": "https://api.github.com/repos/GenomicParisCentre/eoulsan", "Date": "2014-11-29T11:51:49Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(outputFile.delete())) { fr.ens.transcriptome.eoulsan.EoulsanLogger.getLogger().warning((\"Cannot remove SOAP temporary file: \" + outputFile)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2660/buggy-version/src.main.java.fr.ens.transcriptome.eoulsan.bio.readsmappers.SOAPReadsMapper.java", "BodyUseAPI": ["fr.ens.transcriptome.eoulsan.EoulsanLogger.getLogger().warning(java.lang.String)"], "Fixed commit": "4d4d2e830e561bff677ec8e82f8804473f6430a1", "Url": "https://api.github.com/repos/GenomicParisCentre/eoulsan", "Date": "2014-11-29T11:51:49Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(unmapFile.delete())) { fr.ens.transcriptome.eoulsan.EoulsanLogger.getLogger().warning((\"Cannot remove SOAP temporary file: \" + unmapFile)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2660/buggy-version/src.main.java.fr.ens.transcriptome.eoulsan.bio.readsmappers.SOAPReadsMapper.java", "BodyUseAPI": ["fr.ens.transcriptome.eoulsan.EoulsanLogger.getLogger().warning(java.lang.String)"], "Fixed commit": "4d4d2e830e561bff677ec8e82f8804473f6430a1", "Url": "https://api.github.com/repos/GenomicParisCentre/eoulsan", "Date": "2014-11-29T11:51:49Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((factor) == 1) index -= 2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5145/buggy-version/src.frames.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "d1e517a342c8a43d42e1fc2ecbe92a9206a06d63", "Url": "https://api.github.com/repos/Criptonite/QweenPlacing", "Date": "2017-06-25T17:08:56Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index) > ((graphPanel.getCombinationsArray().size()) - 1)) { nextButton.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5145/buggy-version/src.frames.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "d1e517a342c8a43d42e1fc2ecbe92a9206a06d63", "Url": "https://api.github.com/repos/Criptonite/QweenPlacing", "Date": "2017-06-25T17:08:56Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["zerothindex.clancraft.bukkit.SaveStateClan.toClan()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((clan.getPlot()) != null) { clan.getPlot().recalculate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1856/buggy-version/src.zerothindex.clancraft.bukkit.BukkitClanPlugin.java", "BodyUseAPI": ["clan.getPlot().recalculate()", "zerothindex.clancraft.clan.Clan.getPlot()"], "Fixed commit": "420f91d152201b514d0e3d232bd019e118fba978", "Url": "https://api.github.com/repos/zerothindex/ClanCraft", "Date": "2012-03-23T03:06:27Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication().getName()", "com.livingoncodes.spring.web.service.UserService.getUser(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((loggedInUsername.equals(\"anonymousUser\")) || (loggedInUser == null)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6665/buggy-version/src.com.livingoncodes.spring.web.validation.UniqueEmailImpl.java", "BodyUseAPI": [], "Fixed commit": "491846ffc645c9b256d78147b5ef88b5a69cc99e", "Url": "https://api.github.com/repos/mozammel/bdchub", "Date": "2014-12-22T18:53:21Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication().getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (loggedInUsername.equals(\"anonymousUser\")) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6665/buggy-version/src.com.livingoncodes.spring.web.validation.UniqueUsernameImpl.java", "BodyUseAPI": [], "Fixed commit": "491846ffc645c9b256d78147b5ef88b5a69cc99e", "Url": "https://api.github.com/repos/mozammel/bdchub", "Date": "2014-12-22T18:53:21Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == null) { throw new org.eclipse.hawkbit.repository.exception.ConstraintViolationException(\"type cannot be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1056/buggy-version/hawkbit-mgmt-resource.src.main.java.org.eclipse.hawkbit.mgmt.rest.resource.MgmtSoftwareModuleMapper.java", "BodyUseAPI": [], "Fixed commit": "b27b0856226fbeb34c46d1299c4bab569e73e410", "Url": "https://api.github.com/repos/eclipse/hawkbit", "Date": "2016-09-13T07:51:19Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((event.getDamager()) instanceof org.bukkit.entity.Player) && (canBypass(((org.bukkit.entity.Player) (event.getDamager()))))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/602/buggy-version/src.main.java.com.wezro.dedication.Dedication.java", "BodyUseAPI": [], "Fixed commit": "2e053aae4f325146eb1e63e3eeb3ef769ac867ab", "Url": "https://api.github.com/repos/psygate/dedication", "Date": "2015-08-23T14:31:31Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canBypass(((org.bukkit.entity.Player) (event.getPlayer())))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/602/buggy-version/src.main.java.com.wezro.dedication.Dedication.java", "BodyUseAPI": [], "Fixed commit": "2e053aae4f325146eb1e63e3eeb3ef769ac867ab", "Url": "https://api.github.com/repos/psygate/dedication", "Date": "2015-08-23T14:31:31Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.airbnb.lottie.L.traceDepth) == (com.airbnb.lottie.L.MAX_DEPTH)) { (com.airbnb.lottie.L.depthPastMaxDepth)++; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/9032/buggy-version/lottie.src.main.java.com.airbnb.lottie.L.java", "BodyUseAPI": [], "Fixed commit": "5dc7d6ce0533c01aad3599bb13e598ab5f9a0c16", "Url": "https://api.github.com/repos/airbnb/lottie-android", "Date": "2017-07-01T18:52:24Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.airbnb.lottie.L.depthPastMaxDepth) > 0) { (com.airbnb.lottie.L.depthPastMaxDepth)--; return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/9032/buggy-version/lottie.src.main.java.com.airbnb.lottie.L.java", "BodyUseAPI": [], "Fixed commit": "5dc7d6ce0533c01aad3599bb13e598ab5f9a0c16", "Url": "https://api.github.com/repos/airbnb/lottie-android", "Date": "2017-07-01T18:52:24Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.sourceforge.fenixedu.domain.space.SpaceUtils.isRoom(space)) { return new net.sourceforge.fenixedu.webServices.jersey.beans.publico.FenixSpace.RoomSubdivision(space, withParentAndContainedSpaces); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8615/buggy-version/src.main.java.net.sourceforge.fenixedu.webServices.jersey.beans.publico.FenixSpace.java", "BodyUseAPI": [], "Fixed commit": "f0be91bf899a9e901e64e5257ad15be6d7f83358", "Url": "https://api.github.com/repos/FenixEdu/fenixedu-academic", "Date": "2014-11-04T19:30:30Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent) instanceof org.kite9.diagram.style.AbstractXMLDiagramElement) { ((org.kite9.diagram.style.AbstractXMLDiagramElement) (parent)).ensureInitialized(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5945/buggy-version/core.src.main.java.org.kite9.diagram.style.AbstractXMLDiagramElement.java", "BodyUseAPI": [], "Fixed commit": "55ddb2203ca4137b2246ab782a0526dc67609b7c", "Url": "https://api.github.com/repos/kite9-org/kite9-java", "Date": "2016-09-20T07:42:40Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) getActivity().getWindow().setStatusBarColor(mContext.getResources().getColor(R.color.gray_light));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6207/buggy-version/mobile.src.main.java.com.thunsaker.rapido.ui.MainFragment.java", "BodyUseAPI": [], "Fixed commit": "829459584fe2b42ec85127e0b1973dbd024393f6", "Url": "https://api.github.com/repos/thunsaker/rapido", "Date": "2015-09-09T23:02:36Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getBooleanExtra(Constants.CHECK_FOR_UPDATES,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (checkForUpdates) { if (com.skystreamtv.element_ez_stream.updater.utils.Connectivity.isConnectionAvailable(this)) { getIntent().putExtra(Constants.CHECK_FOR_UPDATES, false); checkForUpdates(); }else { android.app.AlertDialog noConnection = com.skystreamtv.element_ez_stream.updater.ui.Dialogs.buildErrorDialog(this, getString(R.string.no_internet_title), getString(R.string.no_internet_info), com.skystreamtv.element_ez_stream.updater.ui.ERROR_ACTION_NO_ACTION); noConnection.show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7058/buggy-version/app.src.main.java.com.skystreamtv.element_ez_stream.updater.ui.DisclaimerActivity.java", "BodyUseAPI": [], "Fixed commit": "78be2219b374df8dcef2c29c19ab134a41a03e2e", "Url": "https://api.github.com/repos/elementtv/updater", "Date": "2016-08-19T20:34:18Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((q.getRecordCount()) != 0) { q.setRecordCount(0); queueProc.updateQueueRecord(q); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8488/buggy-version/src.org.bitseal.services.BackgroundService.java", "BodyUseAPI": ["org.bitseal.data.QueueRecord.setRecordCount(int)", "org.bitseal.core.QueueRecordProcessor.updateQueueRecord(org.bitseal.data.QueueRecord)"], "Fixed commit": "01c3b840dee21275aaaf5f4c33d84a770b848eed", "Url": "https://api.github.com/repos/JonathanCoe/bitseal", "Date": "2015-01-15T13:01:01Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.connections) == null) { logger.logDebug(METHOD, (\"Reinitializing pool connections: \" + (this.getPoolName()))); this.connections = new java.util.Vector<com.cffreedom.utils.db.DbConnection>(poolsize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8164/buggy-version/src.main.java.com.cffreedom.utils.db.ConnectionPool.java", "BodyUseAPI": [], "Fixed commit": "ca9fcdac28e7646583d95cf628aaa51eae6b6b7a", "Url": "https://api.github.com/repos/communicationfreedom/cffreedom-utils", "Date": "2013-06-26T15:48:25Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["util.WebServiceHelper.readAll(java.io.BufferedReader)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((jsonStr.trim().length()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/707/buggy-version/src.main.java.util.WebServiceHelper.java", "BodyUseAPI": [], "Fixed commit": "12119d32439ee0ed9b58c89e722e747b01b8fd02", "Url": "https://api.github.com/repos/11791-01/project-team01", "Date": "2014-11-18T04:33:23Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.cuter44.wxpay.reqs.WxpayRequestBase.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((value == null) || (value.isEmpty())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7887/buggy-version/src.com.github.cuter44.wxpay.reqs.WxpayRequestBase.java", "BodyUseAPI": [], "Fixed commit": "2092e45522f5062adb59bb635903d9921cdcf8d8", "Url": "https://api.github.com/repos/cuter44/wxpay-sdk", "Date": "2015-08-08T22:30:57Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.github.cuter44.wxpay.reqs.WxpayRequestBase.KEY_SIGN.equals(key)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7887/buggy-version/src.com.github.cuter44.wxpay.reqs.WxpayRequestBase.java", "BodyUseAPI": [], "Fixed commit": "2092e45522f5062adb59bb635903d9921cdcf8d8", "Url": "https://api.github.com/repos/cuter44/wxpay-sdk", "Date": "2015-08-08T22:30:57Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.cuter44.wxpay.resps.WxpayResponseBase.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((value == null) || (value.isEmpty())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7887/buggy-version/src.com.github.cuter44.wxpay.resps.WxpayResponseBase.java", "BodyUseAPI": [], "Fixed commit": "2092e45522f5062adb59bb635903d9921cdcf8d8", "Url": "https://api.github.com/repos/cuter44/wxpay-sdk", "Date": "2015-08-08T22:30:57Z"},
{"Line": "=>508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (0 == (currentPlaylist_.size())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6712/buggy-version/app.src.main.java.com.mamewo.malarm24.MalarmPlayerService.java", "BodyUseAPI": [], "Fixed commit": "828ac09bbd93dd469c7de89d3b8cc85d2041f5ff", "Url": "https://api.github.com/repos/mamewotoko/malarm", "Date": "2017-01-03T11:26:47Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (0 == (currentPlaylist_.size())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6712/buggy-version/app.src.main.java.com.mamewo.malarm24.MalarmPlayerService.java", "BodyUseAPI": [], "Fixed commit": "828ac09bbd93dd469c7de89d3b8cc85d2041f5ff", "Url": "https://api.github.com/repos/mamewotoko/malarm", "Date": "2017-01-03T11:26:47Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Element.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (url.substring(1, 2).equals(\":\")) { url = \"file:/\" + url; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8855/buggy-version/src.main.java.org.docx4j.convert.in.xhtml.XHTMLImageHandlerDefault.java", "BodyUseAPI": [], "Fixed commit": "d88dd62e85f6eb409ed2b7375932dd731ead238b", "Url": "https://api.github.com/repos/plutext/docx4j-ImportXHTML", "Date": "2013-09-08T00:35:16Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((attributes.size()) == 1) && (attributes.keySet().iterator().next().equals(\"\"))) { allAttributes.put(io.datakernel.jmx.AttributeNodeForMap.VALUE_COLUMN_NAME, attributes.values().iterator().next()); }else { allAttributes.putAll(attributes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6565/buggy-version/eventloop.src.main.java.io.datakernel.jmx.AttributeNodeForMap.java", "BodyUseAPI": ["java.util.Collection<java.lang.Object>.iterator()", "java.util.Map<java.lang.String, java.lang.Object>.values()", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object)", "java.util.Iterator<java.lang.Object>.next()", "java.util.Map<java.lang.String, java.lang.Object>.putAll(java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "9db2767d3f7579bc29da8fd2dbc2e173bbc55d72", "Url": "https://api.github.com/repos/softindex/datakernel", "Date": "2016-02-23T17:27:24Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.datakernel.jmx.ValueFetcher.fetchFrom(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (currentList != null) { for (java.lang.Object element : currentList) { subNode.refresh(java.util.Arrays.asList(element), timestamp, smoothingWindow); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6565/buggy-version/eventloop.src.main.java.io.datakernel.jmx.AttributeNodeForList.java", "BodyUseAPI": [], "Fixed commit": "9db2767d3f7579bc29da8fd2dbc2e173bbc55d72", "Url": "https://api.github.com/repos/softindex/datakernel", "Date": "2016-02-23T17:27:24Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.datakernel.jmx.ValueFetcher.fetchFrom(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (currentList != null) { for (java.lang.Object element : currentList) { java.util.Map<java.lang.String, java.lang.Object> attributesFromElement = subNode.aggregateAllAttributes(java.util.Arrays.asList(element)); attributesFromAllElements.add(attributesFromElement); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6565/buggy-version/eventloop.src.main.java.io.datakernel.jmx.AttributeNodeForList.java", "BodyUseAPI": [], "Fixed commit": "9db2767d3f7579bc29da8fd2dbc2e173bbc55d72", "Url": "https://api.github.com/repos/softindex/datakernel", "Date": "2016-02-23T17:27:24Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sg.codengineers.ldo.model.Task.getDeadline()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dd == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2637/buggy-version/src.sg.codengineers.ldo.logic.Handler.java", "BodyUseAPI": [], "Fixed commit": "2296898db812eff5278d006a28d5b6b564707704", "Url": "https://api.github.com/repos/cs2103aug2014-w10-3j/main", "Date": "2014-11-10T16:02:58Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((TFC.Render.Blocks.RenderDetailed.renderer) == null) { TFC.Render.Blocks.RenderDetailed.renderer = new TFC.Render.RenderBlocksFixUV(renderblocks); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1966/buggy-version/TFC_Shared.src.TFC.Render.Blocks.RenderDetailed.java", "BodyUseAPI": [], "Fixed commit": "838d8af270a56efac982389a7ca8277c74cda514", "Url": "https://api.github.com/repos/Deadrik/TFCraft", "Date": "2013-10-01T03:21:47Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSharedPreferences(\"PREFERENCE\", com.example.kevin4848.try2.MODE_PRIVATE).getBoolean(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isFirstRun) { startActivity(new android.content.Intent(this, com.example.kevin4848.try2.SlideShowActivity.class)); getSharedPreferences(\"PREFERENCE\", com.example.kevin4848.try2.MODE_PRIVATE).edit().putBoolean(\"isfirstrun\", false).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1217/buggy-version/hermosa.app.src.main.java.com.example.kevin4848.try2.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6d52c0690bc66d3fb40adacf8ef7877f07cf31e3", "Url": "https://api.github.com/repos/SanjayThangaraj/try-2", "Date": "2017-09-28T17:04:20Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratio.streaming.commons.kafka.service.TopicService.getNumPartitionsForTopic(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (partitions == 0) { partitions = config.getInt(\"kafka.partitions\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5283/buggy-version/src.main.java.com.stratio.streaming.StreamingEngine.java", "BodyUseAPI": [], "Fixed commit": "fb1783554dd83c11d96953da323c585732b8a527", "Url": "https://api.github.com/repos/Stratio/stratio-streaming", "Date": "2014-06-02T09:49:00Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mediaPlayer) != null) { mediaPlayer.seekTo(time); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5618/buggy-version/jcplayer.src.main.java.com.example.jean.jcplayer.JcPlayerService.java", "BodyUseAPI": [], "Fixed commit": "9ece7becead6d44b20423352b975aa6b6ac0c6f8", "Url": "https://api.github.com/repos/iRajul/JcPlayer", "Date": "2017-03-26T08:15:32Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBitmap) != null) { setWidth(mBitmap.getWidth()); setHeight(mBitmap.getHeight()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/710/buggy-version/src.rajawali.materials.textures.ASingleTexture.java", "BodyUseAPI": [], "Fixed commit": "6199952b92c43f44cb69233ba380a0dc80e3b673", "Url": "https://api.github.com/repos/ravenfeld/Rajawali", "Date": "2013-09-10T15:49:02Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.robotricker.transportpipes.com.massivecraft.factions.entity.BoardColl.get().getFactionAt(com.massivecraft.massivecore.ps.PS.valueOf(b))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (faction != null) { canBuild = faction.getMPlayers().contains(mp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/282/buggy-version/src.main.java.de.robotricker.transportpipes.TransportPipes.java", "BodyUseAPI": ["faction.getMPlayers().contains(com.massivecraft.factions.entity.MPlayer)", "com.massivecraft.factions.entity.Faction.getMPlayers()"], "Fixed commit": "fbed4de5aa50cba6bc0751d00c8fd2bfa0fde749", "Url": "https://api.github.com/repos/RoboTricker/Transport-Pipes", "Date": "2017-04-29T18:42:49Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((externalIdentifiers.getExternalIdentifier().size()) == 1) { if (((externalIdentifiers.getExternalIdentifier().get(0).getWorkExternalIdentifierId()) == null) && ((externalIdentifiers.getExternalIdentifier().get(0).getWorkExternalIdentifierType()) == null)) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1954/buggy-version/orcid-model.src.main.java.org.orcid.jaxb.model.record.PeerReview.java", "BodyUseAPI": ["org.orcid.jaxb.model.record.WorkExternalIdentifiers.getExternalIdentifier()", "externalIdentifiers.getExternalIdentifier().get(0).getWorkExternalIdentifierId()", "externalIdentifiers.getExternalIdentifier().get(int)", "externalIdentifiers.getExternalIdentifier().get(0).getWorkExternalIdentifierType()", "org.orcid.jaxb.model.record.WorkExternalIdentifiers.getExternalIdentifier()", "externalIdentifiers.getExternalIdentifier().get(int)"], "Fixed commit": "c411a56b9a081eb05b0352ad41e3d1eb067be017", "Url": "https://api.github.com/repos/ORCID/ORCID-Source", "Date": "2015-04-13T22:00:39Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["doc.get(\"feed\").getAsJsonObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((feed.get(\"entry\")) == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4944/buggy-version/code.src.cubrikproject.tud.likelines.util.YouTubeComment.java", "BodyUseAPI": [], "Fixed commit": "e4673a10a675006408f8a75bea40df2beeced69a", "Url": "https://api.github.com/repos/ShinNoNoir/likelines-smila", "Date": "2013-10-14T19:08:40Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isMasterZnodeCleaned) { continue; }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2213/buggy-version/guagua-core.src.main.java.ml.shifu.guagua.worker.NettyWorkerCoordinator.java", "BodyUseAPI": [], "Fixed commit": "a48ddfa9dc134641b32f682f36bd78c1ba5e669f", "Url": "https://api.github.com/repos/ShifuML/guagua", "Date": "2015-04-09T04:24:20Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sentenceTokens[i].getToken()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isQuotedCompound(sentence, i, token)) { int lastPos = (sb.length()) - 1; char lastChar = sb.charAt(lastPos); sb.deleteCharAt(lastPos); sb.append(token).append(lastChar); }else if ((token.length()) < 20) { sb.append(org.languagetool.rules.spelling.hunspell.HunspellRule.WHITESPACE_ARRAY[token.length()]); }else { for (int j = 0; j < (token.length()); j++) { sb.append(' '); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8721/buggy-version/languagetool-core.src.main.java.org.languagetool.rules.spelling.hunspell.HunspellRule.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.length()", "java.lang.StringBuilder.append(char)", "java.lang.String.length()", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "d94d2933eabef4209d12d582cf0252a2d9804b29", "Url": "https://api.github.com/repos/languagetool-org/languagetool", "Date": "2017-12-01T20:50:45Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bits > 32) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8720/buggy-version/src.info.ata4.util.io.BitInputStream.java", "BodyUseAPI": [], "Fixed commit": "93e9ebedef3e8037c4ac51d18323a455830477c1", "Url": "https://api.github.com/repos/haog/disunity", "Date": "2014-05-22T15:39:02Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bitCount) != 32) { code &= (1 << (bits)) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8720/buggy-version/src.info.ata4.util.io.BitInputStream.java", "BodyUseAPI": [], "Fixed commit": "93e9ebedef3e8037c4ac51d18323a455830477c1", "Url": "https://api.github.com/repos/haog/disunity", "Date": "2014-05-22T15:39:02Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.lwjgl.input.Mouse.isButtonDown(0))) this.dragging = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/813/buggy-version/MinecraftJoypadSplitscreenMod.src.com.shiny.joypadmod.minecraftExtensions.GuiSlider.java", "BodyUseAPI": [], "Fixed commit": "304a58fe4cb7d1a34e4e54acf54565dded1b2c21", "Url": "https://api.github.com/repos/ljsimin/MinecraftJoypadSplitscreenMod", "Date": "2014-04-17T07:48:41Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.model.UserModel.getFriendsList(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (friends.isEmpty()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2511/buggy-version/buymestuff.src.com.model.UserModel.java", "BodyUseAPI": [], "Fixed commit": "f0e295dcf4d4dc9f3cd171ee011a4ef99975294d", "Url": "https://api.github.com/repos/davekenny/buymestuff", "Date": "2014-11-28T11:44:27Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.topsun.posclient.common.ui.utils.FormatUtils.checkIpFormat(org.eclipse.swt.widgets.Button,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!flag) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/264/buggy-version/com.topsun.posclient.system.ui.src.com.topsun.posclient.system.ui.view.SettingView.java", "BodyUseAPI": [], "Fixed commit": "937286ca8f94a000a21fe0c9a49c825e6a1fe892", "Url": "https://api.github.com/repos/tandong8888/topsun", "Date": "2013-12-06T14:59:16Z"},
{"Line": "=>736", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (store) checklist.put((((artifact.getGroupId()) + \":\") + (artifact.getArtifactId())), artifact);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7116/buggy-version/src.main.java.org.grails.maven.plugin.AbstractGrailsMojo.java", "BodyUseAPI": [], "Fixed commit": "d64b671e831a96583887d7c0620cb4613f1e1737", "Url": "https://api.github.com/repos/bluegrails/grails-maven", "Date": "2013-02-11T22:00:34Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fieldModel == null) { return com.squareup.javapoet.TypeName.VOID; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/947/buggy-version/lyrics-core.src.main.java.com.flipkart.lyrics.helper.Helper.java", "BodyUseAPI": [], "Fixed commit": "5f19cc090a4124a3169615e048dbfdaa0eb7a0bc", "Url": "https://api.github.com/repos/flipkart-incubator/Lyrics", "Date": "2017-01-25T07:17:28Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2075/buggy-version/algorythms.src.main.java.KdTree.java", "BodyUseAPI": [], "Fixed commit": "517f5918053c09634e55d8245babee436e0821c8", "Url": "https://api.github.com/repos/ioanbsu/coursera", "Date": "2013-03-19T15:35:58Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2075/buggy-version/algorythms.src.main.java.KdTree.java", "BodyUseAPI": [], "Fixed commit": "517f5918053c09634e55d8245babee436e0821c8", "Url": "https://api.github.com/repos/ioanbsu/coursera", "Date": "2013-03-19T15:35:58Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((minorVersString.length()) != 2) { minorVersString = \"0\" + minorVersString; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7324/buggy-version/org.opentosca.planbuilder.type.plugin.ubuntuvm.src.org.opentosca.planbuilder.type.plugin.ubuntuvm.handler.Handler.java", "BodyUseAPI": [], "Fixed commit": "bf4080ce4e883c1a753571657312b6d9167daf12", "Url": "https://api.github.com/repos/OpenTOSCA/container", "Date": "2015-10-12T12:40:19Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((getCalendarDateHolders().get(pair.getKey())) != null) getCalendarDateHolders().get(pair.getKey()).removeSelection();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2344/buggy-version/app.src.main.java.com.roadster.sakhala.multselectioncalendarview.calendarview.CalendarDateManager.java", "BodyUseAPI": ["getCalendarDateHolders().get(pair.getKey()).removeSelection()", "java.util.HashMap<java.lang.String, com.roadster.sakhala.multselectioncalendarview.calendarview.CalendarDateHolder>.get(java.lang.Object)", "java.util.Map.Entry.getKey()"], "Fixed commit": "1a2bf9baa74209bf443dc1d40f73080828d00094", "Url": "https://api.github.com/repos/Atul206/MultiSelectionCalendarView-Android", "Date": "2017-09-08T06:41:11Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, com.roadster.sakhala.multselectioncalendarview.calendarview.Event>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (null != event) textView.setTextColor(android.graphics.Color.parseColor(event.getColorId()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2344/buggy-version/app.src.main.java.com.roadster.sakhala.multselectioncalendarview.calendarview.CalendarDateManager.java", "BodyUseAPI": ["android.widget.TextView.setTextColor(android.graphics.Color.parseColor(event.getColorId()))", "com.roadster.sakhala.multselectioncalendarview.calendarview.Event.getColorId()", "android.graphics.Color.parseColor(event.getColorId())"], "Fixed commit": "1a2bf9baa74209bf443dc1d40f73080828d00094", "Url": "https://api.github.com/repos/Atul206/MultiSelectionCalendarView-Android", "Date": "2017-09-08T06:41:11Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cloudLevel.getDiceNumber()) > 0) { levelDice = ((java.lang.Integer) (cloudLevel.getDiceNumber())).toString(); levelDice = (\"(\" + levelDice) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6235/buggy-version/src.com.rachum.amir.skyhiking.android.GameActivity.java", "BodyUseAPI": ["((java.lang.Integer) (cloudLevel.getDiceNumber())).toString()", "com.rachum.amir.skyhiking.CloudLevel.getDiceNumber()"], "Fixed commit": "1c864201fb53b933f1699eb70c9ff8d8931ca231", "Url": "https://api.github.com/repos/Nurdok/Sky-Hiking", "Date": "2012-06-29T22:34:38Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(UtilManager.empireplayers.isEmpty())) && ((UtilManager.empireplayers.get(playername)) != null)) { es.themin.empires.util.SettingsManager.getInstance().getPlayerData().set((playername + \".empire\"), UtilManager.empireplayers.get(playername).getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7549/buggy-version/src.main.java.es.themin.empires.empires.java", "BodyUseAPI": ["UtilManager.empireplayers.get(java.lang.String)", "es.themin.empires.util.SettingsManager.getInstance().getPlayerData().set(java.lang.String,UtilManager.empireplayers.get(playername).getId())", "UtilManager.empireplayers.get(playername).getId()"], "Fixed commit": "bf52d3853d1490167d078098790d29b6dbf5b0b8", "Url": "https://api.github.com/repos/kraftman/Empires", "Date": "2014-01-19T18:49:43Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path.isEmpty()) { return \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/771/buggy-version/src.main.java.tachyon.hadoop.Utils.java", "BodyUseAPI": [], "Fixed commit": "094341051d2883cb3bec42ef0fc263103935eb39", "Url": "https://api.github.com/repos/cybermaster/tachyon", "Date": "2013-07-11T23:40:49Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ret.isEmpty()) { return \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/771/buggy-version/src.main.java.tachyon.hadoop.Utils.java", "BodyUseAPI": [], "Fixed commit": "094341051d2883cb3bec42ef0fc263103935eb39", "Url": "https://api.github.com/repos/cybermaster/tachyon", "Date": "2013-07-11T23:40:49Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTachyonFileInputStream) != null) { long needSkip = pos - (mCurrentPosition); while (needSkip > 0) { needSkip -= mTachyonFileInputStream.skip(needSkip); } mCurrentPosition = pos; }else if ((mHdfsInputStream) != null) { mHdfsInputStream.seek(pos); mCurrentPosition = pos; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/771/buggy-version/src.main.java.tachyon.hadoop.TFileInputStreamHdfs.java", "BodyUseAPI": [], "Fixed commit": "094341051d2883cb3bec42ef0fc263103935eb39", "Url": "https://api.github.com/repos/cybermaster/tachyon", "Date": "2013-07-11T23:40:49Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pos < (mCurrentPosition)) { throw new java.io.IOException((((\"Not supported to seek to \" + pos) + \" . Current Position is \") + (mCurrentPosition))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/771/buggy-version/src.main.java.tachyon.hadoop.TFileInputStreamHdfs.java", "BodyUseAPI": [], "Fixed commit": "094341051d2883cb3bec42ef0fc263103935eb39", "Url": "https://api.github.com/repos/cybermaster/tachyon", "Date": "2013-07-11T23:40:49Z"},
{"Line": "=>1167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextAvailable) { msg = \"\\n\\n\\tAtmosphere Framework Updates\\n\\tMinor available (bugs fixes): {}\\n\\tMajor available (new features): {}\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6763/buggy-version/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereFramework.java", "BodyUseAPI": [], "Fixed commit": "ef602bba145a7589dd44030b84d606b992848583", "Url": "https://api.github.com/repos/Atmosphere/atmosphere", "Date": "2015-04-22T17:00:51Z"},
{"Line": "=>1154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (inputLine.startsWith(\"ATMO_RELEASE_VERSION=\")) { nextMajorRelease = inputLine.substring(\"ATMO_RELEASE_VERSION=\".length()); if ((((nextMajorRelease.compareTo(org.atmosphere.util.Version.getRawVersion())) > 0) && ((nextMajorRelease.toLowerCase().indexOf(\"rc\")) == (-1))) && ((nextMajorRelease.toLowerCase().indexOf(\"beta\")) == (-1))) { nextAvailable = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6763/buggy-version/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereFramework.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "ef602bba145a7589dd44030b84d606b992848583", "Url": "https://api.github.com/repos/Atmosphere/atmosphere", "Date": "2015-04-22T17:00:51Z"},
{"Line": "=>606", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((alert.getHistoryRef()) != null) { if (!(allAlerts.contains(alert))) { allAlerts.add(alert); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5658/buggy-version/src.org.zaproxy.zap.extension.alert.ExtensionAlert.java", "BodyUseAPI": ["java.util.List<org.parosproxy.paros.core.scanner.Alert>.contains(org.parosproxy.paros.core.scanner.Alert)", "java.util.List<org.parosproxy.paros.core.scanner.Alert>.add(org.parosproxy.paros.core.scanner.Alert)"], "Fixed commit": "fc9e694c9d97ac0fb26cf86ab23a28f92dee34fc", "Url": "https://api.github.com/repos/JordanGS/zaproxy", "Date": "2016-08-12T19:29:05Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((listener.identifierPosition.size()) <= identifier) { }else if ((listener.identifierPosition.get(identifier)) == \"class\") { token.setType(110); (types[0])++; }else if ((listener.identifierPosition.get(identifier)) == \"function\") { token.setType(111); (types[1])++; }else if ((listener.identifierPosition.get(identifier)) == \"variable\") { token.setType(112); (types[2])++; }else if ((listener.identifierPosition.get(identifier)) == \"outside\") { token.setType(113); (types[3])++; }else if ((listener.identifierPosition.get(identifier)) == \"variableClass\") { token.setType(114); (types[4])++; }else if ((listener.identifierPosition.get(identifier)) == \"variableFunction\") { token.setType(115); (types[5])++; }else if ((listener.identifierPosition.get(identifier)) == \"functionVariableClass\") { token.setType(116); (types[6])++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4684/buggy-version/gs-rest-client.src.main.java.client.Tokenizer.TokenizerBuilder.java", "BodyUseAPI": ["listener.identifierPosition.get(int)", "listener.identifierPosition.get(int)", "listener.identifierPosition.get(int)", "listener.identifierPosition.get(int)", "listener.identifierPosition.get(int)", "listener.identifierPosition.get(int)", "listener.identifierPosition.get(int)"], "Fixed commit": "c3a114b62e1103173f9e737a93cca782a62ea5da", "Url": "https://api.github.com/repos/lealdan/FixMyBug", "Date": "2017-02-16T13:59:55Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((spriteSheet) != null) { int width = (spriteSheet.getWidth()) / (Entity.animStages); int height = (spriteSheet.getHeight()) / (this.getTotalAnimateStrip()); this.size[0] = width; this.size[1] = height; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1546/buggy-version/Sidescroller.src.Spell.java", "BodyUseAPI": [], "Fixed commit": "09d077cc13b857e0dd75b936af198fcef8858812", "Url": "https://api.github.com/repos/infinity8/Sidescroller", "Date": "2012-09-24T09:57:55Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((browseExerciseById(exercise).length) == 1) { exerciseName = browseExerciseById(exercise)[0].getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7075/buggy-version/app.src.main.java.com.main.toledo.gymtrackr.DatabaseWrapper.java", "BodyUseAPI": ["com.main.toledo.gymtrackr.DatabaseWrapper.browseExerciseById(int)", "browseExerciseById(exercise)[0].getName()"], "Fixed commit": "f6d4c25a73e6e2c6680d4ba0959aba14f7d78c36", "Url": "https://api.github.com/repos/kodieGlosser/FitnessApp", "Date": "2015-03-14T22:36:43Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["circuits[i].getExercises()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((browseExercisesByExactName(exercises[j].getName()).length) == 1) { exerciseId = browseExercisesByExactName(exercises[j].getName())[0].getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7075/buggy-version/app.src.main.java.com.main.toledo.gymtrackr.DatabaseWrapper.java", "BodyUseAPI": ["browseExercisesByExactName(exercises[j].getName())[0].getId()", "exercises[j].getName()", "com.main.toledo.gymtrackr.DatabaseWrapper.browseExercisesByExactName(exercises[j].getName())"], "Fixed commit": "f6d4c25a73e6e2c6680d4ba0959aba14f7d78c36", "Url": "https://api.github.com/repos/kodieGlosser/FitnessApp", "Date": "2015-03-14T22:36:43Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((idsOfLastFiveChallenges.size()) + 1) > 5) { idsOfLastFiveChallenges.remove(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8561/buggy-version/src.de.lauverngers.challenge.ChallengeService.java", "BodyUseAPI": ["java.util.List<java.lang.Long>.remove(int)"], "Fixed commit": "fd4cd2a5ad96bee49e12519341ee13346d1603a3", "Url": "https://api.github.com/repos/Bellara/Trinkspiel", "Date": "2014-09-18T13:06:34Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ProgConfig.DISPLAY_SCHEDULER_TASK_TRACES) == false) { for (com.illinois.rts.visualizer.Trace thisTrace : traces) { thisTrace.setDoNotShow(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7898/buggy-version/src.com.illinois.rts.visualizer.CombinedTraceGroup.java", "BodyUseAPI": [], "Fixed commit": "3acb2ffb3335773b8ef356761077c1ac61486d7e", "Url": "https://api.github.com/repos/cchen140/RtsHackerVisualizer", "Date": "2015-07-02T09:10:18Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ProgConfig.DISPLAY_SCHEDULER_SUMMARY_TRACE) == true) { combinedTrace.setDoNotShow(false); }else { combinedTrace.setDoNotShow(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7898/buggy-version/src.com.illinois.rts.visualizer.CombinedTraceGroup.java", "BodyUseAPI": [], "Fixed commit": "3acb2ffb3335773b8ef356761077c1ac61486d7e", "Url": "https://api.github.com/repos/cchen140/RtsHackerVisualizer", "Date": "2015-07-02T09:10:18Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapter.getCount()) == 0) { emptyView.setText(R.string.posts_no_posts_msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7070/buggy-version/app.src.main.java.retloko.org.rssreader.PostsActivity.java", "BodyUseAPI": [], "Fixed commit": "a3a9587e1be19351fb25ddbb45627825ffba2846", "Url": "https://api.github.com/repos/AVBelyy/lesson6", "Date": "2014-11-10T19:27:51Z"},
{"Line": "=>809", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (amount.equals(chargedAmount)) { appFee = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5754/buggy-version/raveModule.src.main.java.flutterwave.com.rave.Components.RaveDialog.java", "BodyUseAPI": [], "Fixed commit": "9adabc1ff3209142321b63cea43ccf77781ec03a", "Url": "https://api.github.com/repos/andela-Kshittu/Rave", "Date": "2017-02-04T09:59:37Z"},
{"Line": "=>638", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (amount.equals(chargedAmount)) { appFee = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5754/buggy-version/raveModule.src.main.java.flutterwave.com.rave.Components.RaveDialog.java", "BodyUseAPI": [], "Fixed commit": "9adabc1ff3209142321b63cea43ccf77781ec03a", "Url": "https://api.github.com/repos/andela-Kshittu/Rave", "Date": "2017-02-04T09:59:37Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["no.runsafe.clans.handlers.CharterHandler.getCharterSigns(no.runsafe.framework.minecraft.item.meta.RunsafeMeta)", "no.runsafe.framework.api.player.IPlayer.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (charterSigns.contains(playerName)) { player.sendColouredMessage(\"&cYou have already signed this charter.\"); player.closeInventory(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2929/buggy-version/src.no.runsafe.clans.monitors.PlayerMonitor.java", "BodyUseAPI": [], "Fixed commit": "b1f43f15d7476c536cebacdf09920595d7ded5c5", "Url": "https://api.github.com/repos/Runsafe/RunsafeClans", "Date": "2014-02-06T07:10:09Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m.length) < (sm.length)) { throw new java.lang.IllegalArgumentException(\"m is too short\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1540/buggy-version/src.saltaa.JavaSaltLib.java", "BodyUseAPI": [], "Fixed commit": "4e13676d3791abca580b2fb2ebdc2b1bef3d452d", "Url": "https://api.github.com/repos/assaabloy-ppi/salt-channel", "Date": "2017-04-11T15:15:50Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (naam.isEmpty()) { editNaam.setError(\"Verplicht\"); }else if ((radioGroup.getCheckedRadioButtonId()) <= 0) { checkBoxB.setError(\"selekteer klas\"); }else if (spinner.getSelectedItem().toString().equals(\"Selecteer klas\")) { android.widget.Toast toast = android.widget.Toast.makeText(getBaseContext(), \"Selecteer een klas aub\", Toast.LENGTH_LONG); toast.setGravity(((android.view.Gravity.CENTER_VERTICAL) | (android.view.Gravity.CENTER_HORIZONTAL)), 0, 10); toast.show(); }else { dialog.dismiss(); _fillListWoorden(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1086/buggy-version/app.src.main.java.be.thomasmore.fonologischverkennen.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "931b84e87dc90761b1065e7e4efefe83c734c804", "Url": "https://api.github.com/repos/AxelPauwels/FonologischVerkennen", "Date": "2017-12-24T11:50:23Z"},
{"Line": "=>1209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.ichi2.anki.AnkiDroidApp.deck()) != null) { com.ichi2.anki.DeckTask.launchDeckTask(DeckTask.TASK_TYPE_LOAD_STATISTICS, mLoadStatisticsHandler, new com.ichi2.anki.DeckTask.TaskData(this, new java.lang.String[]{ \"\" }, com.ichi2.anki.StudyOptions.mStatisticType, period)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1285/buggy-version/src.com.ichi2.anki.StudyOptions.java", "BodyUseAPI": [], "Fixed commit": "57a12f95da4565bb6ac8459e87a6380939d4c7f0", "Url": "https://api.github.com/repos/nobnago/Anki-Android", "Date": "2011-02-20T15:37:08Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getRequestURI()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((path.indexOf(\"/register.jsp\")) > (-1)) { chain.doFilter(servletRequest, serlvetResponse); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6917/buggy-version/Bank.src.filter.LoginFilter.java", "BodyUseAPI": [], "Fixed commit": "1d2a6866eb445f7c65ebfa146a5c2fad9de3bee1", "Url": "https://api.github.com/repos/l0huan08/bank", "Date": "2014-09-23T01:44:10Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getRequestURI()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((path.indexOf(\"/register.jsp\")) > (-1)) { chain.doFilter(servletRequest, serlvetResponse); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6917/buggy-version/Bank.src.filter.AuthorityFilter.java", "BodyUseAPI": [], "Fixed commit": "1d2a6866eb445f7c65ebfa146a5c2fad9de3bee1", "Url": "https://api.github.com/repos/l0huan08/bank", "Date": "2014-09-23T01:44:10Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (budgetP == 0) for (int i = 0; i <= 3; i++) server.budget[i] |= 1 << count; else server.budget[budgetP] |= 1 << count;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/220/buggy-version/server.java", "BodyUseAPI": [], "Fixed commit": "5a6e2137111aefe608d5865e1557ae52cb7d9560", "Url": "https://api.github.com/repos/st945306/Lunch-Decider", "Date": "2015-06-09T10:02:43Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (weatherP == 0) for (int i = 1; i <= 3; i++) server.weather[i] |= 1 << (server.restNum); else server.weather[weatherP] |= 1 << (server.restNum);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/220/buggy-version/server.java", "BodyUseAPI": [], "Fixed commit": "5a6e2137111aefe608d5865e1557ae52cb7d9560", "Url": "https://api.github.com/repos/st945306/Lunch-Decider", "Date": "2015-06-09T10:02:43Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (budgetP == 0) for (int i = 1; i <= 3; i++) server.budget[i] |= 1 << (server.restNum); else server.budget[budgetP] |= 1 << (server.restNum);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/220/buggy-version/server.java", "BodyUseAPI": [], "Fixed commit": "5a6e2137111aefe608d5865e1557ae52cb7d9560", "Url": "https://api.github.com/repos/st945306/Lunch-Decider", "Date": "2015-06-09T10:02:43Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (weatherP == 0) for (int i = 1; i <= 3; i++) server.weather[i] |= 1 << count; else server.weather[weatherP] |= 1 << count;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/220/buggy-version/server.java", "BodyUseAPI": [], "Fixed commit": "5a6e2137111aefe608d5865e1557ae52cb7d9560", "Url": "https://api.github.com/repos/st945306/Lunch-Decider", "Date": "2015-06-09T10:02:43Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((myEnemies[i]) != null) myEnemies[i].killSoundEffect();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7359/buggy-version/Code.00Driver.app.src.main.java.abyssproductions.double0driver.GameEngine.GameEngine.java", "BodyUseAPI": ["myEnemies[i].killSoundEffect()"], "Fixed commit": "cb531889a9e2c89e1f3f888754c595c0a861361e", "Url": "https://api.github.com/repos/MandipSan/00Driver", "Date": "2017-06-07T03:39:22Z"},
{"Line": "=>605", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<gr.uom.java.ast.decomposition.cfg.AbstractVariable>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((findRenamedVariableName1(variable1)) == null) { if ((variable2.getVariableType().equals(variable1.getVariableType())) && (!(sortedVariables2.contains(variable2)))) { sortedVariables2.add(variable2); found = true; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2730/buggy-version/src.gr.uom.java.ast.decomposition.cfg.mapping.PreconditionExaminer.java", "BodyUseAPI": ["gr.uom.java.ast.decomposition.cfg.AbstractVariable.getVariableType()", "variable2.getVariableType().equals(variable1.getVariableType())"], "Fixed commit": "adf3e467ca49e0e988009751b2ee74d17246130f", "Url": "https://api.github.com/repos/tsantalis/JDeodorant", "Date": "2015-09-02T18:06:14Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (false) if (((nLength > 1) && (c1 == '-')) && (c2 == '-')) throw new java.lang.IllegalArgumentException((\"Identifier may not start with two hyphens: \" + aPattern));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7936/buggy-version/src.main.java.com.helger.css.parser.CSSParseHelper.java", "BodyUseAPI": [], "Fixed commit": "e2cb950b86b51ae5739863f39b82385ff99d9447", "Url": "https://api.github.com/repos/phax/ph-css", "Date": "2016-04-18T09:13:58Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.asu.spring.quadriga.service.network.INetworkTransformationManager.getSearchTransformedNetwork(project.getProjectId(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((transformedNetwork == null) || ((transformedNetwork.getNodes().size()) == 0)) { model.addAttribute(\"isNetworkEmpty\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8385/buggy-version/Quadriga.src.main.java.edu.asu.spring.quadriga.web.publicwebsite.NetworkSearchController.java", "BodyUseAPI": [], "Fixed commit": "344fcefe3f1751ee6e2a29525d839914f4bfe715", "Url": "https://api.github.com/repos/diging/quadriga", "Date": "2016-03-19T03:33:35Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastEntryListSize()) > 0) return formatMessage(lastEntryListGet(0)); else return (getSimpleCommandName()) + \": No RSS Entries received yet.\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5017/buggy-version/src.org.hive13.jircbot.commands.jIBCTRssReader.java", "BodyUseAPI": [], "Fixed commit": "14807852cbcf70d944193b12234513251fd30584", "Url": "https://api.github.com/repos/Hive13/jIRCBot", "Date": "2011-10-15T02:26:31Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((\"true\".equals(value)) || (\"false\".equals(value))) { jsonConf.put(config.getKey(), java.lang.Boolean.valueOf(value)); }else { jsonConf.put(config.getKey(), value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2240/buggy-version/components.appmgt.org.wso2.carbon.appmgt.mobile.src.main.java.org.wso2.carbon.appmgt.mobile.store.MDMConfig.java", "BodyUseAPI": ["org.json.simple.JSONObject.put(java.lang.String,java.lang.String)", "java.lang.Boolean.valueOf(java.lang.String)", "org.json.simple.JSONObject.put(java.lang.String,java.lang.Boolean)"], "Fixed commit": "27c21700ab0649797e92a985d25eeedd5d45cde4", "Url": "https://api.github.com/repos/ruwanta/carbon-appmgt", "Date": "2015-04-08T09:53:28Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((nodeMin == null) || (nodeMax == null)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8524/buggy-version/src.java.com.mounacheikhna.practice.google.SumInBst.java", "BodyUseAPI": [], "Fixed commit": "ec444c3ba118d6965e4529f6404dd8ba9309d38a", "Url": "https://api.github.com/repos/chemouna/practice", "Date": "2017-04-09T10:43:04Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rel instanceof org.apache.calcite.rel.core.Window) { int childFieldCount = ((org.apache.calcite.rel.core.Window) (rel)).getInput().getRowType().getFieldCount(); for (int bit : groupKey) { if (bit >= childFieldCount) { return super.getDistinctRowCount(rel, groupKey, predicate); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8874/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.planner.cost.DrillRelMdDistinctRowCount.java", "BodyUseAPI": ["org.apache.calcite.rel.metadata.RelMdDistinctRowCount.getDistinctRowCount(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)"], "Fixed commit": "a4dc1490e5d7ef88e7d5f7aa1883a96c8172d054", "Url": "https://api.github.com/repos/gparai/drill", "Date": "2017-02-24T08:19:06Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (frequencyIndex < ((position.probabilities.size()) - 1)) { i--; frequencyIndex++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7317/buggy-version/bq-genome-generator.src.main.java.com.stanford.dataflow.GenomeGenerator.java", "BodyUseAPI": [], "Fixed commit": "942c306eec976a583c16abdcd4d3a270a5844a79", "Url": "https://api.github.com/repos/StanfordBioinformatics/GenomeGenerator", "Date": "2016-02-01T01:41:53Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((jp.getText()) == null) || (jp.getText().equals(\"{\"))) || (jp.getText().equals(jp.getCurrentName()))) { token = jp.nextToken(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/744/buggy-version/converter.json.src.main.java.org.theeuropeanlibrary.maia.converter.json.EntityJsonDeserializer.java", "BodyUseAPI": ["com.fasterxml.jackson.core.JsonParser.nextToken()"], "Fixed commit": "4f59b92c85a76e6b3e488fe91135464ad85d74d9", "Url": "https://api.github.com/repos/TheEuropeanLibrary/MAIA", "Date": "2014-11-25T16:26:04Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((message.length()) < 1) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1237/buggy-version/jacle-commons.src.main.java.jacle.common.logging.PrefixLogFormatter.java", "BodyUseAPI": [], "Fixed commit": "e836846a2ef4255ee99f686abfdd2fe0bbc4d14f", "Url": "https://api.github.com/repos/MoebiusSolutions/jacle", "Date": "2016-04-27T17:40:03Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestLine.isEmpty()) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6823/buggy-version/src.httpfs.Httpfs.java", "BodyUseAPI": [], "Fixed commit": "72ef3e37dfd8e4f140dcc173470c7cce23f2b978", "Url": "https://api.github.com/repos/richbighouse/httpfs", "Date": "2016-10-23T18:21:10Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sender instanceof org.bukkit.entity.Player)) { sender.sendMessage(\"no console usage\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5130/buggy-version/src.main.java.io.github.KoenMulder.BoxEconomy.Main.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage(java.lang.String)"], "Fixed commit": "e849f5402bbbeadc2cdce0f1750528e555281730", "Url": "https://api.github.com/repos/KoenMulder/BoxEconomy", "Date": "2014-08-10T19:40:47Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFile) != null) rajawali.util.RajLog.d((\"Parsing: \" + (mFile.getAbsolutePath())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1905/buggy-version/src.rajawali.parser.AParser.java", "BodyUseAPI": [], "Fixed commit": "ae7bb612d4014a093b8e6679c85b8b2a1a3aabee", "Url": "https://api.github.com/repos/MasDennis/Rajawali", "Date": "2013-05-12T20:10:45Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((split.length) == 2) { if ((split[1].length()) == 1) val += (java.lang.Integer.parseInt(split[1])) * 10; else if ((split[1].length()) == 2) val += java.lang.Integer.parseInt(split[1]); else throw new java.lang.IllegalArgumentException(\"invalid precision on string vector\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3312/buggy-version/src.main.java.rky.dating.primitives.HidePrecision2Vec.java", "BodyUseAPI": [], "Fixed commit": "7a953316564155d6a5acb4d5dd118a1717b8f69b", "Url": "https://api.github.com/repos/rshepherd/dating-game", "Date": "2012-11-19T01:49:38Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((split[0].charAt(0)) == '-') val = -val;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3312/buggy-version/src.main.java.rky.dating.primitives.HidePrecision2Vec.java", "BodyUseAPI": [], "Fixed commit": "7a953316564155d6a5acb4d5dd118a1717b8f69b", "Url": "https://api.github.com/repos/rshepherd/dating-game", "Date": "2012-11-19T01:49:38Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m) != null) { releaseMediaPlayer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8596/buggy-version/app.src.main.java.com.example.android.paomoplayer.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "655f8a190856c96f08ac19ed502ff2a2cd61795d", "Url": "https://api.github.com/repos/Tanner-Wang/PaomoPlayer", "Date": "2017-08-12T13:21:10Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(xid)) response.addContextualMessage(\"xid\", \"validate.required\"); else if (com.serotonin.validation.StringValidation.isLengthGreaterThan(xid, 50)) response.addMessage(\"xid\", new com.serotonin.m2m2.i18n.TranslatableMessage(\"validate.notLongerThan\", 50)); else if (!(ReportDao.instance.isXidUnique(xid, id))) response.addContextualMessage(\"xid\", \"validate.xidUsed\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2604/buggy-version/Reports.src.com.serotonin.m2m2.reports.web.ReportsDwr.java", "BodyUseAPI": ["com.serotonin.validation.StringValidation.isLengthGreaterThan(java.lang.String,int)", "ReportDao.instance.isXidUnique(java.lang.String,int)"], "Fixed commit": "9ea00e9d2611ada758afdc801b87356c86266776", "Url": "https://api.github.com/repos/infiniteautomation/ma-modules-public", "Date": "2016-05-24T20:06:45Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (frame.has(\"format\")) { format = com.door43.translationstudio.core.TranslationFormat.get(frame.getString(\"format\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7893/buggy-version/app.src.main.java.com.door43.translationstudio.core.Frame.java", "BodyUseAPI": ["com.door43.translationstudio.core.TranslationFormat.get(frame.getString(\"format\"))", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "7522a49c1ed6726f626b838bb26b774982b43b53", "Url": "https://api.github.com/repos/unfoldingWord-dev/ts-android", "Date": "2015-09-14T18:45:02Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (value != null) { if (value instanceof java.lang.String) { java.lang.String text = ((java.lang.String) (value)); entityBuilder.addTextBody(key, text, org.apache.http.entity.ContentType.create(\"*/*\", charset)); }else if (value instanceof java.io.File) { java.io.File file = ((java.io.File) (value)); entityBuilder.addBinaryBody(key, file); }else { java.lang.String canonicalName = value.getClass().getCanonicalName(); throw new java.lang.UnsupportedOperationException((((\"No Handler found for \" + canonicalName) + \". Only String or File is accepted, \") + \"because http parameters knows no other types.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2216/buggy-version/src.main.java.net.sourceforge.jwbf.core.actions.HttpActionClient.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Object>.getCanonicalName()", "java.lang.Object.getClass()"], "Fixed commit": "8f42f2e31652c483f8800f99d55346ced8a6fa99", "Url": "https://api.github.com/repos/eldur/jwbf", "Date": "2015-01-05T12:05:07Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.event.ListSelectionEvent.getSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((list.getSelectedIndex()) != (-1)) { updateRecipeView(list.getSelectedIndex()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4034/buggy-version/RecipeSearch.src.recipesearch.RecipeSearchView.java", "BodyUseAPI": ["javax.swing.JList.getSelectedIndex()", "recipesearch.RecipeSearchView.RecipeListListener.updateRecipeView(int)"], "Fixed commit": "ff12a81b03132fdcf5356eb53784ff56eb124d46", "Url": "https://api.github.com/repos/ulrikau/RecipeSearch", "Date": "2015-02-06T07:44:49Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dataObjectInfo.scalarUnit) != null) { com.alliander.osgp.dto.valueobjects.smartmetering.DlmsMeterValueDto meterValue = this.dlmsHelperService.getScaledMeterValue(dataObject, dataObjectInfo.scalarUnit, \"getScaledMeterValue\"); return new com.alliander.osgp.dto.valueobjects.smartmetering.ProfileEntryDto(meterValue.getValue()); }else { return new com.alliander.osgp.dto.valueobjects.smartmetering.ProfileEntryDto(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1184/buggy-version/osgp-protocol-adapter-dlms.src.main.java.org.osgp.adapter.protocol.dlms.domain.commands.GetProfileGenericDataCommandExecutor.java", "BodyUseAPI": ["org.osgp.adapter.protocol.dlms.domain.commands.DlmsHelperService.getScaledMeterValue(org.openmuc.jdlms.datatypes.DataObject,org.openmuc.jdlms.datatypes.DataObject,java.lang.String)"], "Fixed commit": "5808aafc4a28d7bed4648fd1aff91f5cafe9d763", "Url": "https://api.github.com/repos/OSGP/Protocol-Adapter-DLMS", "Date": "2017-02-14T15:23:01Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((callbackContext) != null) { callbackContext.sendPluginResult(new org.apache.cordova.PluginResult(PluginResult.Status.OK)); callbackContext = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3252/buggy-version/src.android.GimbalPlugin.java", "BodyUseAPI": [], "Fixed commit": "77f4297286393abbe04f5b51d2101fb6e4eccd36", "Url": "https://api.github.com/repos/koga73/cordova-gimbal-bridge", "Date": "2016-09-28T20:58:56Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (anno instanceof jetbrick.template.JetAnnotations.Methods) { resolver.addMethodClass(klass); }else if (anno instanceof jetbrick.template.JetAnnotations.Functions) { resolver.addFunctionClass(klass); }else if (anno instanceof jetbrick.template.JetAnnotations.Tags) { resolver.addTagClass(klass); }else if (anno instanceof jetbrick.template.JetAnnoations.Methods) { resolver.addMethodClass(klass); }else if (anno instanceof jetbrick.template.JetAnnoations.Functions) { resolver.addFunctionClass(klass); }else if (anno instanceof jetbrick.template.JetAnnoations.Tags) { resolver.addTagClass(klass); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5851/buggy-version/src.main.java.jetbrick.template.JetEngine.java", "BodyUseAPI": [], "Fixed commit": "09e3a727f33e15e470c7757541b379356e385e3e", "Url": "https://api.github.com/repos/subchen/jetbrick-template", "Date": "2013-12-30T15:03:35Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getListAdapter()) == null) { if ((mListHeader) != null) getListView().addHeaderView(mListHeader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6365/buggy-version/src.com.money.manager.ex.fragment.AllDataFragment.java", "BodyUseAPI": [], "Fixed commit": "431bf9c27ac1a9bfa4f63e3e0c321a6dfbfed4ad", "Url": "https://api.github.com/repos/moneymanagerex/android-money-manager-ex", "Date": "2015-04-08T20:41:34Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!dirty) { logger.debug(\"failed shard {} not found in routingNodes, ignoring it\", failedShard); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2916/buggy-version/src.main.java.org.elasticsearch.cluster.routing.allocation.AllocationService.java", "BodyUseAPI": [], "Fixed commit": "843f28b280b152e74b33a04f55ea45ff5f53d41e", "Url": "https://api.github.com/repos/elasticsearch/elasticsearch", "Date": "2014-04-16T12:45:54Z"},
{"Line": "=>1803", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((actualTypes[i]) instanceof java.lang.reflect.TypeVariable) { type = typeArgsMap.get(((java.lang.reflect.TypeVariable<?>) (actualTypes[i])).getName()); }else if ((actualTypes[i]) instanceof java.lang.Class) { type = actualTypes[i]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4265/buggy-version/src.main.java.uk.co.jemos.podam.api.PodamFactoryImpl.java", "BodyUseAPI": ["java.lang.reflect.Type.getName()", "java.util.Map<java.lang.String, java.lang.reflect.Type>.get(java.lang.String)"], "Fixed commit": "110ccde8928518fbaddf107ac417c6bd9f7ec712", "Url": "https://api.github.com/repos/daivanov/joinmo", "Date": "2015-02-21T19:45:12Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(channel.isOpen())) { channel = connection.createChannel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7447/buggy-version/modules.rabbitmq.src.main.java.org.apache.axis2.transport.rabbitmq.ServiceTaskManager.java", "BodyUseAPI": [], "Fixed commit": "884ed9fe3a648b75bf6a804499da8f10e56a693e", "Url": "https://api.github.com/repos/Buddhima/wso2-axis2-transports", "Date": "2015-02-17T03:41:49Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(channel.isOpen())) { channel = connection.createChannel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7447/buggy-version/modules.rabbitmq.src.main.java.org.apache.axis2.transport.rabbitmq.ServiceTaskManager.java", "BodyUseAPI": [], "Fixed commit": "884ed9fe3a648b75bf6a804499da8f10e56a693e", "Url": "https://api.github.com/repos/Buddhima/wso2-axis2-transports", "Date": "2015-02-17T03:41:49Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(autoAck)) { channel.basicAck(message.getDeliveryTag(), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7447/buggy-version/modules.rabbitmq.src.main.java.org.apache.axis2.transport.rabbitmq.ServiceTaskManager.java", "BodyUseAPI": [], "Fixed commit": "884ed9fe3a648b75bf6a804499da8f10e56a693e", "Url": "https://api.github.com/repos/Buddhima/wso2-axis2-transports", "Date": "2015-02-17T03:41:49Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["entityManager.createQuery(\"from TrialSubject t where t.id = ?\").setParameter(1, subject.getId()).getSingleResult()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tmp.getResponseProperty()) != null) { throw new javax.validation.ValidationException(((\"Response for trial subject with id: \" + (subject.getId())) + \" has been already saved\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5331/buggy-version/src.main.java.de.randi2.services.TrialServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "997369c698ecb0ec03896c1c638f9a02fb03b0e1", "Url": "https://api.github.com/repos/randi2/randi2", "Date": "2011-09-23T14:37:43Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((responsePropertyValue != null) && (!(responsePropertyValue.isEmpty()))) { try { this.getResponseProperty().setValue(responsePropertyValue); this.responsePropertyValue = responsePropertyValue; } catch (de.randi2.unsorted.ContraintViolatedException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5331/buggy-version/src.main.java.de.randi2.jsf.backingBeans.ResponseAdd.java", "BodyUseAPI": ["de.randi2.model.SubjectProperty<java.lang.String>.setValue(java.lang.String)"], "Fixed commit": "997369c698ecb0ec03896c1c638f9a02fb03b0e1", "Url": "https://api.github.com/repos/randi2/randi2", "Date": "2011-09-23T14:37:43Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(parentDir.exists())) { if (!(parentDir.mkdirs())) { log.warn((\"Unable to create needed directory for the cache file: \" + (file.getParentFile().getAbsolutePath()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2968/buggy-version/Agent.src.info.novatec.inspectit.agent.analyzer.impl.ClassHashHelper.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "d5affd906b48c93b2798973b29f18cc0031ece40", "Url": "https://api.github.com/repos/ivansenic/inspectIT", "Date": "2016-01-19T11:33:57Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.min(int,long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (allocationSize <= (position * (pageSize))) { overflowBufferCount.incrementAndGet(); allocatedMemory.getAndAdd(pageSize); return trackBuffer(java.nio.ByteBuffer.allocateDirect(pageSize).order(java.nio.ByteOrder.nativeOrder())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/9126/buggy-version/core.src.main.java.com.orientechnologies.common.directmemory.OByteBufferPool.java", "BodyUseAPI": [], "Fixed commit": "e48ae34ce1827858f78f9f4ddfe30fd289050478", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-08-07T15:49:03Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["myRealm.where(com.emoon.balance.Model.EarnBurn.class).equalTo(\"id\", dataId).findFirst()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (data.getIconType().equalsIgnoreCase(IconType.ICON.toString())) { cv.setIconResource(com.emoon.balance.Util.Util.getIconID(getContext(), data.getIcon())); cv.setIconColor(R.color.white); }else if (data.getIconType().equalsIgnoreCase(IconType.NUMBER.toString())) { cv.setText((\"\" + (com.emoon.balance.Util.Util.getFirstCharacterFromString(data.getName().toUpperCase())))); cv.setTextColor(R.color.white); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5627/buggy-version/app.src.main.java.com.emoon.balance.Fragment.TransactionFragment.java", "BodyUseAPI": ["com.emoon.balance.Model.EarnBurn.getIconType()", "com.zhan.library.CircularView.setText((\"\" + (com.emoon.balance.Util.Util.getFirstCharacterFromString(data.getName().toUpperCase()))))", "com.zhan.library.CircularView.setIconResource(com.emoon.balance.Util.Util.getIconID(getContext(), data.getIcon()))", "com.emoon.balance.Util.Util.getIconID(getContext(),data.getIcon())", "com.emoon.balance.Model.EarnBurn.getIcon()", "data.getName().toUpperCase()", "com.emoon.balance.Util.Util.getFirstCharacterFromString(data.getName().toUpperCase())", "com.emoon.balance.Model.EarnBurn.getName()", "data.getIconType().equalsIgnoreCase(IconType.NUMBER.toString())"], "Fixed commit": "fb20fea0b14b94d4598a14e71dbc827772fd4542", "Url": "https://api.github.com/repos/EveningMoon/Balance", "Date": "2016-06-03T14:45:52Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((memberMetaData.size()) == 0) { discoverNodes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3874/buggy-version/src.main.java.com.hazelcast.azure.AzureDiscoveryStrategy.java", "BodyUseAPI": [], "Fixed commit": "e0fb68d9120c2de9a9895f0d48e6443832e702d3", "Url": "https://api.github.com/repos/hazelcast/hazelcast-azure", "Date": "2016-10-19T12:42:27Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hazelcast.azure.AzureDiscoveryStrategy.getFaultDomain(com.microsoft.azure.management.compute.VirtualMachineOperations,com.microsoft.azure.management.compute.models.VirtualMachine,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (faultDomainId != null) { memberMetaData.put(PartitionGroupMetaData.PARTITION_GROUP_ZONE, faultDomainId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3874/buggy-version/src.main.java.com.hazelcast.azure.AzureDiscoveryStrategy.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(PartitionGroupMetaData.PARTITION_GROUP_ZONE,java.lang.String)"], "Fixed commit": "e0fb68d9120c2de9a9895f0d48e6443832e702d3", "Url": "https://api.github.com/repos/hazelcast/hazelcast-azure", "Date": "2016-10-19T12:42:27Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(objectRepository.remove(name))) { throw new org.apache.james.user.api.UsersRepositoryException(((\"User \" + name) + \" does not exist\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7223/buggy-version/server.data.data-file.src.main.java.org.apache.james.user.file.UsersFileRepository.java", "BodyUseAPI": [], "Fixed commit": "782a3b19625717cf3e40edcd3563ac0175642be3", "Url": "https://api.github.com/repos/Laura-Royet/james-project", "Date": "2016-01-25T17:09:29Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.model.Weather.getMain()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (weatherText == null) { return (com.example.service.SimpleWeatherForecastService.errorMessage) + \" error code: 003\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8760/buggy-version/src.main.java.com.example.service.SimpleWeatherForecastService.java", "BodyUseAPI": [], "Fixed commit": "2db6b0a6a558aaa73f67acc2d16d207a00e3c27e", "Url": "https://api.github.com/repos/ytkc8/Line-bot", "Date": "2017-08-15T19:20:06Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getLayoutParams()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (lp == null) { lp = new com.alibaba.android.vlayout.VirtualLayoutManager.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT); }else { lp = new com.alibaba.android.vlayout.VirtualLayoutManager.LayoutParams(lp.width, lp.height); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7609/buggy-version/tangram.src.main.java.com.tmall.wireless.tangram.MVHelper.java", "BodyUseAPI": [], "Fixed commit": "d5cb6947d76881b4804c6d3e9bd77de1f8212377", "Url": "https://api.github.com/repos/liufsd/Tangram-Android", "Date": "2017-12-11T15:41:16Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/719/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Utils.java", "BodyUseAPI": [], "Fixed commit": "a05c2dc90a4fc09b97114650ae22320edec5c46b", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-04-25T19:37:48Z"},
{"Line": "=>2242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((last - first) < 0) { last = first + (key.substring(first).indexOf(' ')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/752/buggy-version/components.formats-gpl.src.loci.formats.in.NativeND2Reader.java", "BodyUseAPI": ["java.lang.String.indexOf(char)", "java.lang.String.substring(int)"], "Fixed commit": "0af0d8455764e9844f910b4cb5d0e21a518e1f60", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-03-22T03:01:11Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"LIKE\".equals(column)) { column = sqlArray.get((i - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3427/buggy-version/app.connectors.connectors.sql.sql-common.src.main.java.io.syndesis.connector.sql.SqlStatementParser.java", "BodyUseAPI": [], "Fixed commit": "dc9d319779ac1c4b7cde474911e6e2128ef41e02", "Url": "https://api.github.com/repos/lburgazzoli/syndesis", "Date": "2017-12-14T17:25:54Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (false) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/9288/buggy-version/FtcRobotController.src.main.java.com.qualcomm.ftcrobotcontroller.opmodes.TwoMotorDrive.java", "BodyUseAPI": [], "Fixed commit": "c8eac172905e1af52ca3487ad36fc38dd387ea75", "Url": "https://api.github.com/repos/WhitmoreLakeRobotics/2015-Robot-ResQ", "Date": "2015-11-13T02:06:33Z"},
{"Line": "=>528", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m_app.hasPrependDate()) { newTask.setCreateDate(hirondelle.date4j.DateTime.today(java.util.TimeZone.getDefault()).format(Constants.DATE_FORMAT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/621/buggy-version/src.main.java.nl.mpcjanssen.simpletask.Simpletask.java", "BodyUseAPI": [], "Fixed commit": "15b322f94ff508c6ac0ccba2c58ede42d0bc1df8", "Url": "https://api.github.com/repos/mpcjanssen/simpletask-android", "Date": "2014-07-05T17:10:18Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.awesometickets.business.entities.repositories.CinemaHallRepository.findWithoutSeatLayout(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((list.size()) == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/9151/buggy-version/src.main.java.com.awesometickets.business.services.CinemaHallService.java", "BodyUseAPI": [], "Fixed commit": "aa103b2d4c793a2c2e88b0e26dcf758c0d82e87b", "Url": "https://api.github.com/repos/AwesomeTickets/ServiceServer", "Date": "2017-05-03T04:16:20Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((servicoSelecionado) == null) escreveTabelaServicos();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2948/buggy-version/ProjetoP2.src.gui.PainelServicos.java", "BodyUseAPI": [], "Fixed commit": "e56f9c444578a8716e06fae6b1759fdb5773e3a4", "Url": "https://api.github.com/repos/BrenoSouza/LP2.Projeto", "Date": "2015-01-22T20:09:18Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pt.ist.fenixframework.FenixFramework.getDomainObject(globalContext.getRequestContext()[1])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (competenceCourse == null) { throw new org.fenixedu.cms.exceptions.ResourceNotFoundException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4489/buggy-version/src.main.java.pt.ist.fenix.domain.unit.components.CompetenceCourseComponent.java", "BodyUseAPI": [], "Fixed commit": "67c6893de696215d83c970edda2839d1bb64e641", "Url": "https://api.github.com/repos/jcarvalho/fenix-ist", "Date": "2015-03-04T17:25:07Z"},
{"Line": "=>702", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((touchedNotes.size()) > 1) { dragNotes(false, id, tick, note); if (id == 0) { float otherTick = xToTick(pointerIdToPos.get(1).x); com.kh.beatbot.view.helper.TickWindowHelper.updateView(java.lang.Math.min(tick, otherTick), java.lang.Math.max(tick, otherTick)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3756/buggy-version/src.com.kh.beatbot.view.MidiView.java", "BodyUseAPI": [], "Fixed commit": "1b287ee7827b9344a2283f7c288003e9afb6d707", "Url": "https://api.github.com/repos/khiner/BeatBot", "Date": "2013-03-10T20:46:54Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isEmpty()) || ((size()) == 1)) { sentinel.prev = sentinel.next = null; return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1570/buggy-version/DLList.DLList.java", "BodyUseAPI": [], "Fixed commit": "b8ae253500c6a0e9bd9e30bf711c8d09175fbe20", "Url": "https://api.github.com/repos/strange-life/CS-61B-Spring-2017", "Date": "2017-07-29T09:45:47Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isEmpty()) || ((size()) == 1)) { sentinel.prev = sentinel.next = null; return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1570/buggy-version/DLList.DLList.java", "BodyUseAPI": [], "Fixed commit": "b8ae253500c6a0e9bd9e30bf711c8d09175fbe20", "Url": "https://api.github.com/repos/strange-life/CS-61B-Spring-2017", "Date": "2017-07-29T09:45:47Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.nateowami.solve4x.solver.Fraction.indexOfSlash(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (divisionIndex < 1) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6946/buggy-version/src.com.github.nateowami.solve4x.solver.Fraction.java", "BodyUseAPI": [], "Fixed commit": "5100760ff64f2772767b58ad6559bd1a9006e311", "Url": "https://api.github.com/repos/Nateowami/Solve4x", "Date": "2015-07-20T09:37:17Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()", "java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((top.length()) == topLength) || ((bottom.length()) == bottomLength)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6946/buggy-version/src.com.github.nateowami.solve4x.solver.Fraction.java", "BodyUseAPI": [], "Fixed commit": "5100760ff64f2772767b58ad6559bd1a9006e311", "Url": "https://api.github.com/repos/Nateowami/Solve4x", "Date": "2015-07-20T09:37:17Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!useKey) parrent.availableJobs.release();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6236/buggy-version/DictionaryLookUpNetParallel.src.dictionaryLookUpNetParallel.LookUpServer.java", "BodyUseAPI": [], "Fixed commit": "2205c9c6bf86c92801c7d43c8d4a5c7b58c4d220", "Url": "https://api.github.com/repos/klinginE/DictionaryLookUpNetParallel", "Date": "2015-02-14T01:25:12Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.basex.query.up.expr.QueryContext.value(expr[1])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(v.isEmpty())) throw org.basex.query.up.expr.BASEX_MOD.get(info);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7030/buggy-version/basex-core.src.main.java.org.basex.query.up.expr.Modify.java", "BodyUseAPI": [], "Fixed commit": "9ddcfaac7cf16b1e58d093f04ee1cc3b3daa5fa3", "Url": "https://api.github.com/repos/LukasK/basex", "Date": "2014-03-13T12:18:31Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(f.renameTo(dest))) { org.giiwa.framework.web.Module.log.error((((\"rename the module path failed, then using copy!!! dest=\" + dest) + \", original=\") + (f.getName()))); if (dest.exists()) { org.giiwa.core.base.IOUtil.delete(dest); org.giiwa.framework.web.Module.log.info((\"trying to delete the dest path, path=\" + (dest.getName()))); } org.giiwa.framework.web.Module.log.info((\"copying to the path=\" + (dest.getName()))); org.giiwa.core.base.IOUtil.copy(f, dest); org.giiwa.framework.web.Module.log.info((\"deleteing to the path=\" + (dest.getName()))); org.giiwa.core.base.IOUtil.delete(f); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4242/buggy-version/src.main.java.org.giiwa.framework.web.Module.java", "BodyUseAPI": ["java.io.File.getName()", "org.giiwa.framework.web.Log.info(java.lang.String)", "org.giiwa.core.base.IOUtil.copy(java.io.File,java.io.File)", "java.io.File.getName()", "org.giiwa.framework.web.Log.info(java.lang.String)", "java.io.File.getName()", "org.giiwa.framework.web.Log.info(java.lang.String)", "java.io.File.exists()", "org.giiwa.core.base.IOUtil.delete(java.io.File)", "org.giiwa.framework.web.Log.error(java.lang.String)", "org.giiwa.core.base.IOUtil.delete(java.io.File)", "java.io.File.getName()"], "Fixed commit": "79bec30dd0f9a32d8455332cbcd4eee89c7b7977", "Url": "https://api.github.com/repos/giiwa/giiwa", "Date": "2016-11-30T21:11:17Z"},
{"Line": "=>1886", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(f.renameTo(d))) { org.giiwa.framework.web.Module.log.error((((\"rename file failed!!! dest=\" + (d.getName())) + \", src=\") + (f.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4242/buggy-version/src.main.java.org.giiwa.framework.web.Module.java", "BodyUseAPI": ["java.io.File.getName()", "java.io.File.getName()", "org.giiwa.framework.web.Log.error(java.lang.String)"], "Fixed commit": "79bec30dd0f9a32d8455332cbcd4eee89c7b7977", "Url": "https://api.github.com/repos/giiwa/giiwa", "Date": "2016-11-30T21:11:17Z"},
{"Line": "=>1900", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(f.renameTo(d))) { org.giiwa.framework.web.Module.log.error((((\"rename file failed!!! dest=\" + (d.getName())) + \", src=\") + (f.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4242/buggy-version/src.main.java.org.giiwa.framework.web.Module.java", "BodyUseAPI": ["java.io.File.getName()", "java.io.File.getName()", "org.giiwa.framework.web.Log.error(java.lang.String)"], "Fixed commit": "79bec30dd0f9a32d8455332cbcd4eee89c7b7977", "Url": "https://api.github.com/repos/giiwa/giiwa", "Date": "2016-11-30T21:11:17Z"},
{"Line": "=>766", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(f1.renameTo(f2))) { org.giiwa.framework.bean.Repo.log.error((((\"rename file failed!!! dest=\" + (f2.getName())) + \", src=\") + (f1.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4242/buggy-version/src.main.java.org.giiwa.framework.bean.Repo.java", "BodyUseAPI": ["java.io.File.getName()", "org.giiwa.framework.bean.Log.error(java.lang.String)", "java.io.File.getName()"], "Fixed commit": "79bec30dd0f9a32d8455332cbcd4eee89c7b7977", "Url": "https://api.github.com/repos/giiwa/giiwa", "Date": "2016-11-30T21:11:17Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(print.equals(\"NaN\"))) str = print; else str = \" \";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4324/buggy-version/app.src.main.java.io.github.gappleto97.multicalc.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e2736199bbc15807b5a032b29cbd6b45cb73e99a", "Url": "https://api.github.com/repos/gappleto97/MultiCalc", "Date": "2015-09-17T19:48:36Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((quitMessage.length()) > 0) { mQuitDialog = new android.support.v7.app.AlertDialog.Builder(this).setPositiveButton(\"Cancel\", new android.content.DialogInterface.OnClickListener() { @java.lang.Override public void onClick(android.content.DialogInterface dialog, int which) { dialog.dismiss(); } }).setOnDismissListener(new android.content.DialogInterface.OnDismissListener() { @java.lang.Override public void onDismiss(android.content.DialogInterface dialog) { getWindow().getDecorView().setSystemUiVisibility(mSystemUiVisibility); } }).setNegativeButton(\"Quit\", new android.content.DialogInterface.OnClickListener() { @java.lang.Override public void onClick(android.content.DialogInterface dialog, int which) { systems.altimit.rpgmakermv.WebPlayerActivity.super.onBackPressed(); } }).setMessage(quitMessage.toString()).create(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/121/buggy-version/app.src.main.java.systems.altimit.rpgmakermv.WebPlayerActivity.java", "BodyUseAPI": ["new android.support.v7.app.AlertDialog.Builder(this).setPositiveButton(\"Cancel\", new android.content.DialogInterface.OnClickListener() {\n    @java.lang.Override\n    public void onClick(android.content.DialogInterface dialog, int which) {\n        dialog.dismiss();\n    }\n}).setOnDismissListener(new android.content.DialogInterface.OnDismissListener() {\n    @java.lang.Override\n    public void onDismiss(android.content.DialogInterface dialog) {\n        getWindow().getDecorView().setSystemUiVisibility(mSystemUiVisibility);\n    }\n}).setNegativeButton(\"Quit\", new android.content.DialogInterface.OnClickListener() {\n    @java.lang.Override\n    public void onClick(android.content.DialogInterface dialog, int which) {\n        systems.altimit.rpgmakermv.WebPlayerActivity.super.onBackPressed();\n    }\n}).setMessage(java.lang.String)", "java.lang.StringBuilder.toString()", "new android.support.v7.app.AlertDialog.Builder(this).setPositiveButton(\"Cancel\", new android.content.DialogInterface.OnClickListener() {\n    @java.lang.Override\n    public void onClick(android.content.DialogInterface dialog, int which) {\n        dialog.dismiss();\n    }\n}).setOnDismissListener(new android.content.DialogInterface.OnDismissListener() {\n    @java.lang.Override\n    public void onDismiss(android.content.DialogInterface dialog) {\n        getWindow().getDecorView().setSystemUiVisibility(mSystemUiVisibility);\n    }\n}).setNegativeButton(\"Quit\", new android.content.DialogInterface.OnClickListener() {\n    @java.lang.Override\n    public void onClick(android.content.DialogInterface dialog, int which) {\n        systems.altimit.rpgmakermv.WebPlayerActivity.super.onBackPressed();\n    }\n}).setMessage(quitMessage.toString()).create()"], "Fixed commit": "1cb6ff6db324d7f4ea235ac45f9e1b02648b3e0a", "Url": "https://api.github.com/repos/AltimitSystems/mv-android-client", "Date": "2017-12-30T18:53:12Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isWhiteTurn) { if ((isWhiteChecked) && (!(gameBoard.isPlayerChecked(gameBoard.getTable()[target.getRow()][target.getCol()].getPlayerRole())))) return true; }else { if ((isBlackChecked) && (!(gameBoard.isPlayerChecked(gameBoard.getTable()[target.getRow()][target.getCol()].getPlayerRole())))) return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1106/buggy-version/src.shogi.board.GameBoard.java", "BodyUseAPI": [], "Fixed commit": "acc657e632bfc9cbcda6ae06bc296a7f1b957805", "Url": "https://api.github.com/repos/poorvatanProjects/shogi", "Date": "2016-04-11T05:08:39Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof java.net.SocketException) { throw new com.jme3.network.kernel.KernelException((\"Error sending datagram to:\" + (address)), e); }else if (e instanceof java.lang.RuntimeException) { throw ((java.lang.RuntimeException) (e)); }else { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7378/buggy-version/jme3-networking.src.main.java.com.jme3.network.kernel.udp.UdpEndpoint.java", "BodyUseAPI": [], "Fixed commit": "f31911f039743cc8121cf02899dbc37456e58a1d", "Url": "https://api.github.com/repos/slawekmikula/jmonkeyengine", "Date": "2014-05-31T21:36:49Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.thoughtworks.recordplayback.PlaybackHandler.getRecordedResponse(java.lang.String,java.lang.Object[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((recordedResponse == null) && (mode.isDebug())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6948/buggy-version/record-playback.src.main.java.com.thoughtworks.recordplayback.RecordPlaybackInterceptor.java", "BodyUseAPI": [], "Fixed commit": "ab1bd9f9aa53ab2858c2f314ab3f89e153087a6e", "Url": "https://api.github.com/repos/tadams/RecordPlayback", "Date": "2011-10-06T19:23:01Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((apiFile.isFile()) == false) { return new java.util.HashMap<java.util.List, com.thoughtworks.recordplayback.RecordedResponse>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6948/buggy-version/record-playback.src.main.java.com.thoughtworks.recordplayback.Cache.java", "BodyUseAPI": [], "Fixed commit": "ab1bd9f9aa53ab2858c2f314ab3f89e153087a6e", "Url": "https://api.github.com/repos/tadams/RecordPlayback", "Date": "2011-10-06T19:23:01Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getReference()) == null) { setLength(getAlternate().length()); }else if ((getAlternate()) == null) { setLength(getReference().length()); }else { setLength(java.lang.Math.max(getReference().length(), getAlternate().length())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7212/buggy-version/biodata-models.src.main.java.org.opencb.biodata.models.variant.Variant.java", "BodyUseAPI": [], "Fixed commit": "9c5e24dba3d207cc2106dfa10c2466c5b86b23b5", "Url": "https://api.github.com/repos/opencb/biodata", "Date": "2015-10-22T14:36:25Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ning.billing.entitlement.api.transfer.DefaultEntitlementTransferApi.getSubscriptionFromId(cur.getId(),com.ning.billing.util.callcontext.InternalCallContext)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((oldSubscription.getState()) == (com.ning.billing.entitlement.api.user.Subscription.SubscriptionState.CANCELLED)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1705/buggy-version/entitlement.src.main.java.com.ning.billing.entitlement.api.transfer.DefaultEntitlementTransferApi.java", "BodyUseAPI": [], "Fixed commit": "eda1aa88e5bdb2294ce4c9ab8f46374811fb6178", "Url": "https://api.github.com/repos/killbill/killbill", "Date": "2013-02-13T00:55:10Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.movielist.aishwarytandon.movielist.MainActivity.findViewById(R.id.movies_recycler_view)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (recyclerView != null) { recyclerView.setLayoutManager(new android.support.v7.widget.LinearLayoutManager(this)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1671/buggy-version/app.src.main.java.com.movielist.aishwarytandon.movielist.MainActivity.java", "BodyUseAPI": ["android.support.v7.widget.RecyclerView.setLayoutManager(android.support.v7.widget.LinearLayoutManager)"], "Fixed commit": "a4b115619296c4afeed0057f39fc5f7603868452", "Url": "https://api.github.com/repos/ashwary/MovieList", "Date": "2016-06-04T19:06:16Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (recyclerView != null) { recyclerView.setAdapter(new com.movielist.aishwarytandon.movielist.MovieAdapter(movies, R.layout.list_item_movie, getApplicationContext())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1671/buggy-version/app.src.main.java.com.movielist.aishwarytandon.movielist.MainActivity.java", "BodyUseAPI": ["android.support.v7.widget.RecyclerView.setAdapter(com.movielist.aishwarytandon.movielist.MovieAdapter)"], "Fixed commit": "a4b115619296c4afeed0057f39fc5f7603868452", "Url": "https://api.github.com/repos/ashwary/MovieList", "Date": "2016-06-04T19:06:16Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getActivity().getIntent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (intent != null) { android.util.Log.v(LOG_TAG, \"QQQQQQQQQ\"); mUri = android.net.Uri.parse(intent.getDataString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5662/buggy-version/app.src.main.java.net.brightron.jayaneetha.visitmihinthale.DetailFragment.java", "BodyUseAPI": ["android.content.Intent.getDataString()", "android.net.Uri.parse(intent.getDataString())"], "Fixed commit": "4d61eed3ae0b61d6e9c58edb18c634d889a78a06", "Url": "https://api.github.com/repos/jayaneetha/visit-mihinthale-app", "Date": "2015-03-18T13:50:26Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7038/buggy-version/src.main.java.de.flapdoodle.mongoom.mapping.converter.factories.ReferenceConverter.java", "BodyUseAPI": [], "Fixed commit": "7e29844b4dfc7ce668449ce43a5520ac64337bc0", "Url": "https://api.github.com/repos/michaelmosmann/mongoom.flapdoodle.de", "Date": "2011-02-20T08:18:36Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.population.isHyperNEAT())) { this.population.setNEATActivationFunction(dialog.getNeatActivationFunction()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7920/buggy-version/src.main.java.org.encog.workbench.tabs.population.neat.NEATPopulationTab.java", "BodyUseAPI": ["org.encog.neural.neat.NEATPopulation.setNEATActivationFunction(dialog.getNeatActivationFunction())"], "Fixed commit": "53b1ef599a6c9b29a8138a23bb2a941717afc9b4", "Url": "https://api.github.com/repos/encog/encog-java-workbench", "Date": "2013-01-11T12:01:22Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (population.isHyperNEAT()) { af = \"HyperNEAT\"; }else { af = population.getActivationFunctions().getList().get(0).getObj().getClass().getSimpleName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7920/buggy-version/src.main.java.org.encog.workbench.tabs.population.neat.NEATPopulationInfo.java", "BodyUseAPI": ["population.getActivationFunctions().getList()", "population.getActivationFunctions().getList().get(0).getObj()", "population.getActivationFunctions().getList().get(int)", "population.getActivationFunctions().getList().get(0).getObj().getClass().getSimpleName()", "org.encog.neural.neat.NEATPopulation.getActivationFunctions()", "population.getActivationFunctions().getList().get(0).getObj().getClass()"], "Fixed commit": "53b1ef599a6c9b29a8138a23bb2a941717afc9b4", "Url": "https://api.github.com/repos/encog/encog-java-workbench", "Date": "2013-01-11T12:01:22Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.george.library.repository.BookRepository.getAllSubItemsforItem(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (reviews == null) reviews = new java.util.ArrayList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7186/buggy-version/src.main.java.org.george.library.repository.BookRepository.java", "BodyUseAPI": [], "Fixed commit": "5b4c82ff1a5df6ee20c03c6621186719ffb819f8", "Url": "https://api.github.com/repos/kinkey/library-app", "Date": "2015-11-15T21:50:22Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getAction()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(intentAction)) { context.startActivity(intent); }else { android.support.v4.content.LocalBroadcastManager.getInstance(context).sendBroadcast(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4033/buggy-version/mopub-sdk.src.main.java.com.mopub.mobileads.HtmlWebViewClient.java", "BodyUseAPI": [], "Fixed commit": "bd9a7004438b97707ee7d87e0d57c39a6bd9afdb", "Url": "https://api.github.com/repos/theely/mopub-android-sdk", "Date": "2013-12-12T20:34:35Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((org.eclipse.jetty.server.handler.ContextHandler.Context) (filterConfig.getServletContext())).getContextHandler().getServer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (server.getHandler().getClass().equals(org.eclipse.jetty.server.handler.RequestLogHandler.class)) { return ((org.eclipse.jetty.server.handler.HandlerList) (((org.eclipse.jetty.server.handler.RequestLogHandler) (server.getHandler())).getHandler())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5427/buggy-version/server.src.main.java.com.graphaware.server.foundation.bootstrap.GraphAwareBootstrappingFilter.java", "BodyUseAPI": ["org.eclipse.jetty.server.Server.getHandler()", "((org.eclipse.jetty.server.handler.RequestLogHandler) (server.getHandler())).getHandler()"], "Fixed commit": "dd4713f2386dde3eca6cda2465cd31733bc896b1", "Url": "https://api.github.com/repos/graphaware/neo4j-framework", "Date": "2015-11-16T01:17:17Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(grid.getChildren().contains(failedLogin))) { grid.add(failedLogin, 0, 7); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/777/buggy-version/src.unimensa.MainWindow.java", "BodyUseAPI": ["javafx.scene.layout.GridPane.add(javafx.scene.text.Text,int,int)"], "Fixed commit": "e146c89d5d77fac4cce1ad4142abd04d756af4a1", "Url": "https://api.github.com/repos/FraTheVet/unimensa", "Date": "2016-01-25T16:55:26Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (textArea.isEditable()) { int oldCPos = textArea.getCaretPosition(); textArea.getTextState().insert(oldCPos, \"\\t\"); int caretPosition = oldCPos + 1; textArea.setCaretPosition(caretPosition); textArea.setStartSelectionIndex(caretPosition); textArea.setEndSelectionIndex(caretPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1623/buggy-version/src.main.java.org.liquidengine.legui.component.misc.listener.textarea.TextAreaKeyEventListener.java", "BodyUseAPI": ["org.liquidengine.legui.component.TextArea.setStartSelectionIndex(int)", "org.liquidengine.legui.component.TextArea.getTextState()", "org.liquidengine.legui.component.TextArea.setCaretPosition(int)", "org.liquidengine.legui.component.TextArea.getCaretPosition()", "org.liquidengine.legui.component.TextArea.setEndSelectionIndex(int)", "textArea.getTextState().insert(int,java.lang.String)"], "Fixed commit": "a19023649f581097fea1385b3073a649da69dd0d", "Url": "https://api.github.com/repos/LiquidEngine/legui", "Date": "2017-12-06T23:11:42Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.google.gwt.user.client.History.getToken().equals(com.codenvy.employee.client.ApplicationController.Tokens.INFO.getToken())) { com.google.gwt.user.client.History.newItem(com.codenvy.employee.client.ApplicationController.Tokens.INFO.getToken()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2379/buggy-version/src.main.java.com.codenvy.employee.client.ApplicationController.java", "BodyUseAPI": ["com.codenvy.employee.client.ApplicationController.Tokens.getToken()", "com.google.gwt.user.client.History.newItem(java.lang.String)"], "Fixed commit": "ee7709338045ecf2dfcd294f5a42ce866af59c2c", "Url": "https://api.github.com/repos/AndrienkoAleksandr/EmployeePersonalData", "Date": "2014-09-05T07:33:28Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (period == (org.jboss.logmanager.handlers.PeriodicRotatingFileHandler.Period.WEEK)) { calendar.set(java.util.Calendar.DAY_OF_WEEK, calendar.getFirstDayOfWeek()); }else { calendar.clear(java.util.Calendar.DAY_OF_WEEK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3095/buggy-version/src.main.java.org.jboss.logmanager.handlers.PeriodicRotatingFileHandler.java", "BodyUseAPI": [], "Fixed commit": "5eb15b06eda4201f7b211488ab487ccd1f430b07", "Url": "https://api.github.com/repos/jboss-logging/jboss-logmanager", "Date": "2013-07-08T20:55:07Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.phon.session.Record.getGroup(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((group.getTier(tier)) != null) data = group.getTier(tier, java.lang.String.class);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6937/buggy-version/src.main.java.ca.phon.plugins.praat.export.TextGridExporter.java", "BodyUseAPI": ["ca.phon.session.Group.getTier(java.lang.String,java.lang.Class)"], "Fixed commit": "9d90ee4f83d1ed751e1d42521891dd06a30dde2d", "Url": "https://api.github.com/repos/phon-ca/phon-praat-plugin", "Date": "2015-04-17T11:46:33Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.phon.session.Record.getGroup(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((group.getTier(tier)) != null) data = group.getTier(tier, java.lang.String.class);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6937/buggy-version/src.main.java.ca.phon.plugins.praat.export.TextGridExporter.java", "BodyUseAPI": ["ca.phon.session.Group.getTier(java.lang.String,java.lang.Class)"], "Fixed commit": "9d90ee4f83d1ed751e1d42521891dd06a30dde2d", "Url": "https://api.github.com/repos/phon-ca/phon-praat-plugin", "Date": "2015-04-17T11:46:33Z"},
{"Line": "=>526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Client.Client.SCREEN_HEIGHT) == 1080) { graphics.drawImage(Imports.Images.getImage(\"menuBackground\"), 0, 0, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1061/buggy-version/Source.Menu.MainMenu.java", "BodyUseAPI": [], "Fixed commit": "e58fbaefca43a0cd9abee52835e91521fb255aec", "Url": "https://api.github.com/repos/Williamxu98/WorldQuestOnline", "Date": "2017-01-15T20:22:25Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((randNums[((randNums.length) - 1)]) == 0) { for (int i = (randNums.length) - 1; i > 0; i--) { randNums[i] = randNums[(i - 1)]; } randNums[0] = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3276/buggy-version/Draft.java", "BodyUseAPI": [], "Fixed commit": "aa39a52912cade313e07c8dcb873e674b493185d", "Url": "https://api.github.com/repos/ndara/Draft-Queens-Fantasy-Football", "Date": "2016-06-08T00:17:54Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mFloatingGroupView.getLayoutParams()) == null) { mFloatingGroupView.setLayoutParams(new android.view.ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3697/buggy-version/FloatingGroupExpandableListView.src.com.diegocarloslima.fgelv.lib.FloatingGroupExpandableListView.java", "BodyUseAPI": ["android.view.View.setLayoutParams(android.view.ViewGroup.LayoutParams)"], "Fixed commit": "a2f3a8140b48dd0f4472ce9b39374bf65635f72c", "Url": "https://api.github.com/repos/diegocarloslima/FloatingGroupExpandableListView", "Date": "2014-02-04T23:15:51Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (aEnd != null) { if (aStart != null) { iStatement.append(\" AND \"); }else { iStatement.append(\" WHERE \"); } iStatement.append(\"invoice.date <= :end\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2086/buggy-version/maohifx.invoice.src.main.java.com.maohi.software.maohifx.invoice.dao.InvoiceLineDAO.java", "BodyUseAPI": [], "Fixed commit": "ea88f7674aff4e53c0cba42874064067c65d5ed3", "Url": "https://api.github.com/repos/Heifara/maohifx", "Date": "2015-12-23T23:12:11Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (aStart != null) { iQuery.setString(\"start\", aStart); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2086/buggy-version/maohifx.invoice.src.main.java.com.maohi.software.maohifx.invoice.dao.InvoiceLineDAO.java", "BodyUseAPI": ["org.hibernate.Query.setString(java.lang.String,java.lang.String)"], "Fixed commit": "ea88f7674aff4e53c0cba42874064067c65d5ed3", "Url": "https://api.github.com/repos/Heifara/maohifx", "Date": "2015-12-23T23:12:11Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (aEnd != null) { iQuery.setString(\"end\", aEnd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2086/buggy-version/maohifx.invoice.src.main.java.com.maohi.software.maohifx.invoice.dao.InvoiceLineDAO.java", "BodyUseAPI": ["org.hibernate.Query.setString(java.lang.String,java.lang.String)"], "Fixed commit": "ea88f7674aff4e53c0cba42874064067c65d5ed3", "Url": "https://api.github.com/repos/Heifara/maohifx", "Date": "2015-12-23T23:12:11Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (root == null) { java.util.logging.Logger.getLogger(gargoyle.ct.resource.internal.VirtualResource.class.getName()).warning(\"some location is null\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5183/buggy-version/src.main.java.gargoyle.ct.resource.internal.LocalResource.java", "BodyUseAPI": [], "Fixed commit": "3ebdbac07dc0aadc4e41c62004bdd58a8add023d", "Url": "https://api.github.com/repos/lure0xaos/CoffeeTime", "Date": "2017-03-29T12:14:24Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filename == null) || (filename.isEmpty())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3405/buggy-version/app.src.main.java.org.mercycorps.translationcards.porting.TxcPortingUtility.java", "BodyUseAPI": [], "Fixed commit": "409e24316abbfb1000d565153b7e17214ac774ee", "Url": "https://api.github.com/repos/translation-cards/translation-cards", "Date": "2016-06-08T21:46:59Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mTrailerResults.size()) > 0) { mMovDetailFragment.updateShareAction((\"http://www.youtube.com/watch?v=\" + (mTrailerResults.get(0).getKey()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1191/buggy-version/app.src.main.java.com.example.android.equ.app.equ.MovDetailAdapter.java", "BodyUseAPI": ["mTrailerResults.get(0).getKey()", "com.example.android.equ.app.equ.MovDetailFragment.updateShareAction((\"http://www.youtube.com/watch?v=\" + (mTrailerResults.get(0).getKey())))", "java.util.List<com.example.android.equ.app.equ.TrailerResult>.get(int)"], "Fixed commit": "1dde2939db84beb442d448693f5099aed1c5faae", "Url": "https://api.github.com/repos/equ-hong/PopMov2", "Date": "2016-04-13T09:21:01Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.au.shareinfoserver.dao.TrafficInfoRepository.findByUuid(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (trafficInfo != null) { trafficInfoRepository.updateNumberOfPeople(((trafficInfo.getNumOfPeople()) - 1), messageUuid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7406/buggy-version/src.main.java.com.au.shareinfoserver.traffic.service.TrafficInfoShareService.java", "BodyUseAPI": ["com.au.shareinfoserver.dao.TrafficInfoRepository.updateNumberOfPeople(((trafficInfo.getNumOfPeople()) - 1),java.lang.String)", "com.au.shareinfoserver.dao.TrafficInfo.getNumOfPeople()"], "Fixed commit": "db50079fbb2c296abb509fcc5b92236dd9fd1470", "Url": "https://api.github.com/repos/fanfal/ShareInfoServer", "Date": "2017-11-06T08:55:21Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.GregorianCalendar.getInstance(java.util.TimeZone)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((ClosingTime.get(java.util.Calendar.MINUTE)) == 0) timeArray[1] += \"00\"; else timeArray[1] += ClosingTime.get(java.util.Calendar.MINUTE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7624/buggy-version/src.main.java.com.warmachine.storeinserter.FXMLController.java", "BodyUseAPI": ["java.util.Calendar.get(int)"], "Fixed commit": "68c5c3066b5796f63638b3668005a7ba7e4b84c5", "Url": "https://api.github.com/repos/Biokinetica/StoreInserter", "Date": "2014-08-16T13:40:59Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.GregorianCalendar.getInstance(java.util.TimeZone)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((OpeningTime.get(java.util.Calendar.MINUTE)) == 0) timeArray[0] += \"00\"; else timeArray[0] += OpeningTime.get(java.util.Calendar.MINUTE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7624/buggy-version/src.main.java.com.warmachine.storeinserter.FXMLController.java", "BodyUseAPI": ["java.util.Calendar.get(int)"], "Fixed commit": "68c5c3066b5796f63638b3668005a7ba7e4b84c5", "Url": "https://api.github.com/repos/Biokinetica/StoreInserter", "Date": "2014-08-16T13:40:59Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.acknowledgement) != (-1)) { if ((data.acknowledgement) < 5) { ((at.fhooe.mc.android.tetris.MultiplayerActivity) (context)).fillTetrominoArray(true); }else if ((data.acknowledgement) == 5) { ((at.fhooe.mc.android.tetris.MultiplayerActivity) (context)).nextTetromino(); ((at.fhooe.mc.android.tetris.MultiplayerActivity) (context)).newTetromino(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5636/buggy-version/app.src.main.java.at.fhooe.mc.android.tetris.TetrisHandler.java", "BodyUseAPI": [], "Fixed commit": "e734b9563ccdf731ced6d035b6740bc2b0c4a5f3", "Url": "https://api.github.com/repos/Platti/Tetris", "Date": "2015-07-10T09:20:09Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(myGameOver)) { this.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5636/buggy-version/app.src.main.java.at.fhooe.mc.android.tetris.MultiplayerActivity.java", "BodyUseAPI": [], "Fixed commit": "e734b9563ccdf731ced6d035b6740bc2b0c4a5f3", "Url": "https://api.github.com/repos/Platti/Tetris", "Date": "2015-07-10T09:20:09Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((conditionMap.size()) > 0) { queryBuilder.append(\" WHERE \"); for (com.web.spring.datatable.ColumnDef columnDef : criterias.getColumnDefs()) { if (indexColumnList.contains(columnDef.getName())) { if ((conditionMap.get(columnDef.getName())) != null) { java.lang.String replace = conditionMap.get(columnDef.getName()).replaceAll(columnDef.getName(), (\"p.\" + (columnDef.getName()))); paramList.add((\" \" + replace)); } } if (unIndexColumnList.contains(columnDef.getName())) { if ((conditionMap.get(columnDef.getName())) != null) { java.lang.String replace = conditionMap.get(columnDef.getName()).replaceAll(columnDef.getName(), (\"p.\" + (columnDef.getName()))); paramList.add((\" \" + replace)); } } } java.util.Iterator<java.lang.String> tr = paramList.iterator(); while (tr.hasNext()) { queryBuilder.append(tr.next()); if (tr.hasNext()) { queryBuilder.append(\" AND \"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3963/buggy-version/src.com.web.spring.datatable.TableQuery.java", "BodyUseAPI": ["java.lang.String.replaceAll(columnDef.getName(),(\"p.\" + (columnDef.getName())))", "java.util.HashMap<java.lang.String, java.lang.String>.get(columnDef.getName())", "java.util.HashMap<java.lang.String, java.lang.String>.get(columnDef.getName())", "java.util.HashMap<java.lang.String, java.lang.String>.get(columnDef.getName())", "java.util.HashMap<java.lang.String, java.lang.String>.get(columnDef.getName())", "java.lang.String.replaceAll(columnDef.getName(),(\"p.\" + (columnDef.getName())))"], "Fixed commit": "4d43cb77131bc4ab771b38b6a93a89a8701f1e75", "Url": "https://api.github.com/repos/lwfwind/spring-jquery-datatable", "Date": "2016-10-12T03:41:19Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numberOfSolutions < 0) { numberOfSolutions = solutionList.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4772/buggy-version/jmetalsp-core.src.main.java.org.uma.jmetalsp.util.restartstrategy.impl.RemoveNSolutionsAccordingToTheCrowdingDistance.java", "BodyUseAPI": [], "Fixed commit": "0b561edb693603e8bfafb4a1890ae37ebdc6ec81", "Url": "https://api.github.com/repos/jMetal/jMetalSP", "Date": "2017-07-18T10:54:17Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numberOfSolutions < 0) { numberOfSolutions = solutionList.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4772/buggy-version/jmetalsp-core.src.main.java.org.uma.jmetalsp.util.restartstrategy.impl.RemoveNSolutionsAccordingToTheHypervolumeContribution.java", "BodyUseAPI": [], "Fixed commit": "0b561edb693603e8bfafb4a1890ae37ebdc6ec81", "Url": "https://api.github.com/repos/jMetal/jMetalSP", "Date": "2017-07-18T10:54:17Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.racing.model.repo.UserRepo.selectById(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((user.getUserPoints().add(points).compareTo(java.math.BigDecimal.ZERO)) == (-1)) { return com.racing.controller.vo.ApiResult.createErrorReuslt(\"\u5206\u6570\u4e0d\u591f\u51cf\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6767/buggy-version/racing_server.src.main.java.com.racing.service.user.UserService.java", "BodyUseAPI": [], "Fixed commit": "ed3485e384e5749935968ede142dff6803391c98", "Url": "https://api.github.com/repos/leon-repository/racing_server", "Date": "2016-10-14T14:58:59Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["simpledb.Catalog.getTableName(file.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (prev_name != null) { this.table_list.remove(prev_name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5554/buggy-version/src.java.simpledb.Catalog.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, simpledb.DbFile>.remove(java.lang.String)"], "Fixed commit": "16148e0bd4bfc09edb401fa095e0a95e889ada01", "Url": "https://api.github.com/repos/mschmutz1/EECS-339-project", "Date": "2017-10-02T20:09:19Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["views.ArrowHandler.instance().addArrowsForEvent(model.ThreadEvent,java.util.List<views.FlowPanel>,views.DataHelper)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((views.PreferencesHelper.isRepositioningAllowed()) && ((arrowsAdded.size()) != 0)) moveViewToTheStart(arrowsAdded);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8914/buggy-version/src.views.MainWindow.java", "BodyUseAPI": ["views.MainWindow.moveViewToTheStart(java.util.List<supportModel.Arrow>)"], "Fixed commit": "8a57c4d81c35ea856ae4fe5ccfae9749a03a7671", "Url": "https://api.github.com/repos/scale-proactive/A-viewer-tool-for-multiactive-objects", "Date": "2015-06-04T11:47:09Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((utils.SizeHelper.instance().didEventHappendBetweenMinAndMax(destinationThreadEvent.getRequestSentTime())) && (utils.SizeHelper.instance().didEventHappendBetweenMinAndMax(destinationThreadEvent.getDerivedTime()))) { return new supportModel.Arrow(y1, y2, sourceThreadEvent, destinationThreadEvent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8914/buggy-version/src.utils.ArrowHandler.java", "BodyUseAPI": [], "Fixed commit": "8a57c4d81c35ea856ae4fe5ccfae9749a03a7671", "Url": "https://api.github.com/repos/scale-proactive/A-viewer-tool-for-multiactive-objects", "Date": "2015-06-04T11:47:09Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type instanceof org.rascalmpl.interpreter.types.NonTerminalType) { return ((org.rascalmpl.interpreter.types.NonTerminalType) (type)).isSubtypeOfNonTerminal(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3617/buggy-version/src.org.rascalmpl.interpreter.types.NonTerminalType.java", "BodyUseAPI": [], "Fixed commit": "246887564f7c50254c784b4a2af7837a6f5651d2", "Url": "https://api.github.com/repos/cwi-swat/rascal", "Date": "2013-10-21T17:48:11Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openflexo.foundation.resource.FlexoResourceCenter<?>.getRegistedRepositories(org.openflexo.foundation.technologyadapter.TechnologyAdapter)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (repCollection != null) { returned.addAll(repCollection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3490/buggy-version/flexodesktop.model.flexofoundation.src.main.java.org.openflexo.foundation.technologyadapter.DefaultTechnologyAdapterService.java", "BodyUseAPI": ["java.util.List<org.openflexo.foundation.resource.ResourceRepository<?>>.addAll(java.util.Collection<org.openflexo.foundation.resource.ResourceRepository<?>>)"], "Fixed commit": "a6297b9aa5049e9ff854a78c7b999d521eca83f6", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2013-06-20T19:52:54Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fragment) { cb.setFragment(cb.getQuery()); cb.setQuery(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3878/buggy-version/modules.org.restlet.ext.oauth.src.org.restlet.ext.oauth.AuthorizationBaseServerResource.java", "BodyUseAPI": [], "Fixed commit": "3f722769316421fa9776526c022813e795ed6a89", "Url": "https://api.github.com/repos/grammophone/restlet-framework-java", "Date": "2012-10-10T10:15:52Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getRenderList().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (icon == null) icon = getRenderList().get(\"blank\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2406/buggy-version/src.main.java.rubedo.items.tools.ToolBase.java", "BodyUseAPI": [], "Fixed commit": "474fa404764d3e82f3bd71e4d5835cb4eba7bc05", "Url": "https://api.github.com/repos/Katalliaan/Rubedo", "Date": "2014-03-06T20:50:04Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (enemy.isEntering) enemy.velocity.setAngle(45.0F);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/720/buggy-version/core.src.com.mygdx.game.evogyre.EnemyManager.java", "BodyUseAPI": ["enemy.velocity.setAngle(float)"], "Fixed commit": "f4050e8dac7dda9b81b6065568338282969328cf", "Url": "https://api.github.com/repos/Ripley6811/EvoGyre", "Date": "2016-01-25T11:15:37Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((simulator.RealRunSimulator.robot.direction) == (configuration.RobotConstant.DIRECTION.WEST)) { simulator.RealRunSimulator.connection.sendMsg(\"ZL\", \"INSTR\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/586/buggy-version/simulator.RealRunSimulator.java", "BodyUseAPI": [], "Fixed commit": "8f23b11795dbf295fc198d1d9128ebb3f733f35a", "Url": "https://api.github.com/repos/zzy96/CZ3004MDP", "Date": "2017-10-12T04:00:59Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((worldObj.getBlockId(xCoord, yCoord, zCoord)) != (ModBlocks.mobilizer.blockID)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2317/buggy-version/src.main.java.vazkii.tinkerer.common.block.tile.TileEntityMobilizer.java", "BodyUseAPI": [], "Fixed commit": "871bb6ad45c31c78b3fa3cd315aa6a08a5ac8a5a", "Url": "https://api.github.com/repos/Vazkii/ThaumicTinkerer", "Date": "2014-02-05T20:26:18Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(context.getResources().getString(R.string.settings_triggered_task_list_key),<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (json != null) { try { java.lang.reflect.Type listType = new com.google.gson.reflect.TypeToken<java.util.List<java.lang.Integer>>() {}.getType(); com.google.gson.Gson gson = new com.google.gson.Gson(); tasks = gson.fromJson(json, listType); } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4843/buggy-version/app.src.main.java.ve.com.abicelis.remindy.util.SharedPreferenceUtil.java", "BodyUseAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)"], "Fixed commit": "b6e7d315efcc9bdd07b603f03362287efe6f6e54", "Url": "https://api.github.com/repos/abicelis/Remindy", "Date": "2017-06-06T12:13:29Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (classloader == null) { com.morgoo.droidplugin.core.PluginDirHelper.cleanOptimizedDirectory(optimizedDirectory); classloader = new com.morgoo.droidplugin.core.PluginClassLoader(apk, optimizedDirectory, libraryPath, java.lang.ClassLoader.getSystemClassLoader()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2569/buggy-version/project.Libraries.DroidPlugin.src.com.morgoo.droidplugin.core.PluginProcessManager.java", "BodyUseAPI": [], "Fixed commit": "e7f4905a8b65a0c0b396eb0dc9536531c05981a7", "Url": "https://api.github.com/repos/vfishv/DroidPlugin", "Date": "2016-01-05T09:27:19Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pcgen.cdom.facet.analysis.ChallengeRatingFacet.calcRaceCR(pcgen.cdom.enumeration.CharID)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (raceCR != null) { cr += raceCR; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8456/buggy-version/code.src.java.pcgen.cdom.facet.analysis.ChallengeRatingFacet.java", "BodyUseAPI": [], "Fixed commit": "1f22f6d1dcdd2f3926cfd908e982fddce79171c8", "Url": "https://api.github.com/repos/PCGen/pcgen", "Date": "2015-05-31T06:57:22Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wrapper.getGlobalCluster()) != null) { output = wrapper.getGlobalCluster().handleNodeRead(input, kryo, output); }else { output = handleNodeRead(input, kryo, output); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5876/buggy-version/src.main.java.main.java.com.bag.server.LocalClusterSlave.java", "BodyUseAPI": ["main.java.com.bag.server.ServerWrapper.getGlobalCluster()", "wrapper.getGlobalCluster().handleNodeRead(com.esotericsoftware.kryo.io.Input,com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output)"], "Fixed commit": "098fbd6958b311f53dcb9b0e7928e61edfb682c6", "Url": "https://api.github.com/repos/Raycoms/fireplug", "Date": "2017-05-17T15:21:13Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wrapper.getGlobalCluster()) != null) { output = wrapper.getGlobalCluster().handleRelationshipRead(input, kryo, output); }else { output = handleRelationshipRead(input, kryo, output); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5876/buggy-version/src.main.java.main.java.com.bag.server.LocalClusterSlave.java", "BodyUseAPI": ["main.java.com.bag.server.ServerWrapper.getGlobalCluster()", "wrapper.getGlobalCluster().handleRelationshipRead(com.esotericsoftware.kryo.io.Input,com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output)"], "Fixed commit": "098fbd6958b311f53dcb9b0e7928e61edfb682c6", "Url": "https://api.github.com/repos/Raycoms/fireplug", "Date": "2017-05-17T15:21:13Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (def) { return mondrian.olap.Util.trueFunctor(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/767/buggy-version/src.main.mondrian.xmla.Rowset.java", "BodyUseAPI": [], "Fixed commit": "160dadad7af7dee209fa85ba8cbd9106fa60c799", "Url": "https://api.github.com/repos/pentaho/mondrian", "Date": "2012-09-05T21:24:50Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getProperties().get(PropertyDefinition.Catalog.name())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((catalogName == null) && (request.getRestrictions().containsKey(Property.StandardMemberProperty.CATALOG_NAME.name()))) { java.lang.Object restriction = request.getRestrictions().get(Property.StandardMemberProperty.CATALOG_NAME.name()); if (restriction instanceof java.util.List) { final java.util.List requiredValues = ((java.util.List) (restriction)); catalogName = java.lang.String.valueOf(requiredValues.get(0)); }else { throw mondrian.olap.Util.newInternal((\"unexpected restriction type: \" + (restriction.getClass()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/767/buggy-version/src.main.mondrian.xmla.XmlaHandler.java", "BodyUseAPI": ["mondrian.xmla.XmlaRequest.getRestrictions()", "request.getRestrictions().get(Property.StandardMemberProperty.CATALOG_NAME.name())"], "Fixed commit": "160dadad7af7dee209fa85ba8cbd9106fa60c799", "Url": "https://api.github.com/repos/pentaho/mondrian", "Date": "2012-09-05T21:24:50Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.olap4j.metadata.XmlaConstants.Literal.CATALOG_NAME.name()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((this.properties.containsKey(key)) && (!(restrictions.containsKey(key)))) { java.util.List<java.lang.String> values; values = new java.util.ArrayList<java.lang.String>(); restrictions.put(this.properties.get(key), values); if (mondrian.xmla.impl.DefaultXmlaRequest.LOGGER.isDebugEnabled()) { mondrian.xmla.impl.DefaultXmlaRequest.LOGGER.debug((((((\"DefaultXmlaRequest.initRestrictions: \" + \" key=\\\"\") + key) + \"\\\", value=\\\"\") + (this.properties.get(key))) + \"\\\"\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/767/buggy-version/src.main.mondrian.xmla.impl.DefaultXmlaRequest.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "org.apache.log4j.Logger.debug(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<java.lang.String, java.util.List<java.lang.String>>.put(java.lang.String,java.util.List<java.lang.String>)"], "Fixed commit": "160dadad7af7dee209fa85ba8cbd9106fa60c799", "Url": "https://api.github.com/repos/pentaho/mondrian", "Date": "2012-09-05T21:24:50Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (arm == 0) { arm = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2154/buggy-version/src.Model.StatusEffectShell.java", "BodyUseAPI": [], "Fixed commit": "c1b3b3b7906d51d27a87b560944e19b67a456a1a", "Url": "https://api.github.com/repos/Maestro1337/ssha", "Date": "2013-05-24T14:54:14Z"},
{"Line": "=>695", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (skill.isPassive()) { activePlayer.removePassiveSkill(ownedSkill); ownedSkill.upgradeSkill(); activePlayer.addPassiveSkill(ownedSkill); }else { ownedSkill.upgradeSkill(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2154/buggy-version/src.View.ShoppingView.java", "BodyUseAPI": [], "Fixed commit": "c1b3b3b7906d51d27a87b560944e19b67a456a1a", "Url": "https://api.github.com/repos/Maestro1337/ssha", "Date": "2013-05-24T14:54:14Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(intent.hasExtra(at.jclehner.appopsxposed.EXTRA_SHOW_FRAGMENT))) intent.putExtra(at.jclehner.appopsxposed.EXTRA_SHOW_FRAGMENT, com.android.settings.applications.AppOpsSummary.class.getName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1402/buggy-version/src.at.jclehner.appopsxposed.AppOpsActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(at.jclehner.appopsxposed.EXTRA_SHOW_FRAGMENT,java.lang.String)"], "Fixed commit": "be8d58b9d75c1d821f6da9cfc7d33febe1ade1fd", "Url": "https://api.github.com/repos/jclehner/AppOpsXposed", "Date": "2014-11-27T15:41:08Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getDrawable()) != null) { onDrawReady = true; imageRenderedAtLeastOnce = true; if ((delayedZoomVariables) != null) { setZoom(delayedZoomVariables.scale, delayedZoomVariables.focusX, delayedZoomVariables.focusY, delayedZoomVariables.scaleType); delayedZoomVariables = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5970/buggy-version/src.com.ortiz.touch.TouchImageView.java", "BodyUseAPI": [], "Fixed commit": "eeb9f29b2b93dac586f9a0d0158d77f03d7790e8", "Url": "https://api.github.com/repos/voidxv/TouchImageView", "Date": "2017-02-03T20:23:01Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (which == (android.content.DialogInterface.BUTTON_NEGATIVE)) { onCancel(dialog); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6183/buggy-version/src.com.android.certinstaller.CertInstaller.java", "BodyUseAPI": [], "Fixed commit": "c87a48ac1c22403b690330f0cf7a1890f9a0c4eb", "Url": "https://api.github.com/repos/TeamNyx/packages_apps_CertInstaller", "Date": "2009-09-28T02:26:15Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.certinstaller.CertInstaller.2.getViewText(R.id.credential_password)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(passwd)) { showError(R.string.password_empty_error); }else { mDialogResult = com.android.certinstaller.CertInstaller.DONE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6183/buggy-version/src.com.android.certinstaller.CertInstaller.java", "BodyUseAPI": [], "Fixed commit": "c87a48ac1c22403b690330f0cf7a1890f9a0c4eb", "Url": "https://api.github.com/repos/TeamNyx/packages_apps_CertInstaller", "Date": "2009-09-28T02:26:15Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDialogResult) == (com.android.certinstaller.CertInstaller.DONE)) { showDialog(com.android.certinstaller.CertInstaller.PROGRESS_BAR_DIALOG); final java.lang.String passwd = getViewText(R.id.credential_password); new java.lang.Thread(new java.lang.Runnable() { public void run() { if (!(mCredentials.extractFromPkcs12(passwd))) { mDialogResult = com.android.certinstaller.CertInstaller.REOPEN; showError(R.string.password_error); } removeDialog(com.android.certinstaller.CertInstaller.PROGRESS_BAR_DIALOG); runOnUiThread(new java.lang.Runnable() { public void run() { enterPasswdDialogBottomHalf(); } }); } }).start(); }else { enterPasswdDialogBottomHalf(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6183/buggy-version/src.com.android.certinstaller.CertInstaller.java", "BodyUseAPI": [], "Fixed commit": "c87a48ac1c22403b690330f0cf7a1890f9a0c4eb", "Url": "https://api.github.com/repos/TeamNyx/packages_apps_CertInstaller", "Date": "2009-09-28T02:26:15Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((skeleton) == null) { boneCount = 0; }else { boneCount = skeleton.getBoneCount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3927/buggy-version/src.main.java.maud.Pose.java", "BodyUseAPI": [], "Fixed commit": "eb72d88b03be89f3c6a2c2db896b4c3c01ee5e19", "Url": "https://api.github.com/repos/stephengold/Maud", "Date": "2017-08-10T22:30:46Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((resultClass) != null) || ((resultClassName) != null)) && ((result) == null)) { result = \"DISTINCT this\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3738/buggy-version/src.main.java.org.datanucleus.store.query.AbstractJDOQLQuery.java", "BodyUseAPI": [], "Fixed commit": "5d443e745d6e04debc375c35f69336607dd74f80", "Url": "https://api.github.com/repos/datanucleus/datanucleus-core", "Date": "2017-04-30T09:46:43Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((application.controller.MainController.soundFixer) == false) { java.lang.String musicFile = \"src/soundTrack/powerMove.mp3\"; this.sound = new javafx.scene.media.Media(new java.io.File(musicFile).toURI().toString()); this.mediaPlayer = new javafx.scene.media.MediaPlayer(sound); this.mediaPlayer.play(); application.controller.MainController.soundFixer = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5097/buggy-version/src.application.controller.MainController.java", "BodyUseAPI": [], "Fixed commit": "078ddf276d1070e180302c655395085917613b92", "Url": "https://api.github.com/repos/UTSA-CS-3443/Programmer-Typer-Gamer", "Date": "2017-12-01T00:13:52Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.key.equals(key)) { this.item = item; }else if (less(key, this.key)) left.insert(key, item); else right.insert(key, item);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1101/buggy-version/RBT.java", "BodyUseAPI": ["recipebook.RBT<S, T>.insert(S,T)", "recipebook.RBT<S, T>.insert(S,T)", "recipebook.RBT<S, T>.less(S,S)"], "Fixed commit": "2d2dc73f63ddde8cf6b53ca208ef33c4aa080f20", "Url": "https://api.github.com/repos/rodforrb/Recipe-Book", "Date": "2015-04-09T13:29:34Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lecturas.size()) == 0) return \"(-1)\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7749/buggy-version/lecturasElfec.src.main.java.com.elfec.lecturas.helpers.sql.SqlUtils.java", "BodyUseAPI": [], "Fixed commit": "ea157e7f9ea09d6821581e291237be243d8df56c", "Url": "https://api.github.com/repos/diegoRodriguezAguila/Elfec.Lecturas", "Date": "2016-07-19T18:06:18Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends br.com.gbvbahia.maker.factories.types.properties.XMLoader>.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (filePath == null) { throw new br.com.gbvbahia.maker.factories.types.properties.exception.XMLoaderException(null, ((\"File \" + (this.xmlSetupTestFile)) + \" was not found.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/779/buggy-version/src.main.java.br.com.gbvbahia.maker.factories.types.properties.XMLoader.java", "BodyUseAPI": [], "Fixed commit": "5e0c6f6d610bbdd20adce2dc75a9e9223b09c7f6", "Url": "https://api.github.com/repos/gbvbahia01/Make", "Date": "2016-02-23T12:14:55Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c.isFace()) this.total += 10;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3046/buggy-version/src.main.java.Player.java", "BodyUseAPI": [], "Fixed commit": "efb12332e132ec0858e7c5638678d74fd2bbfe03", "Url": "https://api.github.com/repos/schwartzadev/blackjack", "Date": "2017-04-10T03:52:37Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(c.isFace())) this.total += c.getValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3046/buggy-version/src.main.java.Player.java", "BodyUseAPI": ["Card.getValue()"], "Fixed commit": "efb12332e132ec0858e7c5638678d74fd2bbfe03", "Url": "https://api.github.com/repos/schwartzadev/blackjack", "Date": "2017-04-10T03:52:37Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(configFile.exists())) { throw new java.lang.RuntimeException(java.lang.String.format(\"Thrift client config file does not exist: %s\", filePath)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/147/buggy-version/components.org.apache.stratos.common.src.main.java.org.apache.stratos.common.statistics.publisher.ThriftClientConfigParser.java", "BodyUseAPI": [], "Fixed commit": "0c4683a0e70765e952a0b084474ef6de814a07dd", "Url": "https://api.github.com/repos/chamilad/stratos", "Date": "2015-01-31T18:55:11Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.technion.ir.Utils.Utils.splitToTokens(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((combinedVectorSplited.length) == 1) { updatedPassFeatureIds = updatedFeatureIdRow(combinedVectorSplited[0], firstFeatureRowNumber); }else { updatedPassFeatureIds = updatedFeatureIdRow(combinedVectorSplited, firstFeatureRowNumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1871/buggy-version/Learning2Rank.src.main.java.com.technion.ir.MaxPassInfoForDocFeatureVec.AbstractCombinedFeatures.java", "BodyUseAPI": ["com.technion.ir.MaxPassInfoForDocFeatureVec.AbstractCombinedFeatures.updatedFeatureIdRow(java.lang.String[],int)", "com.technion.ir.MaxPassInfoForDocFeatureVec.AbstractCombinedFeatures.updatedFeatureIdRow(java.lang.String,int)"], "Fixed commit": "d5bd33a42b01b74a5937899514430e73009ac6b4", "Url": "https://api.github.com/repos/Eilons/Learning2Rank", "Date": "2016-12-06T15:05:56Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pathValue.endsWith(\"/\")) { pathValue = pathValue.substring(0, ((pathValue.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4495/buggy-version/jaxrs.src.main.java.feign.jaxrs.JAXRSContract.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "3e5d29bf1c9c3bafab18ee705c477bf53d24d6cf", "Url": "https://api.github.com/repos/OpenFeign/feign", "Date": "2015-06-12T00:52:21Z"},
{"Line": "=>6732", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((polLambdaExponent) > 0.0) { lPowPol = pow(polLambda, polLambdaExponent); if ((polLambdaExponent) >= 1.0) { dlPowPol = (polLambdaExponent) * (pow(polLambda, ((polLambdaExponent) - 1.0))); if ((polLambdaExponent) >= 2.0) { d2lPowPol = ((polLambdaExponent) * ((polLambdaExponent) - 1.0)) * (pow(polLambda, ((polLambdaExponent) - 2.0))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6120/buggy-version/modules.potential.src.main.java.ffx.potential.nonbonded.ParticleMeshEwaldCart.java", "BodyUseAPI": ["ffx.potential.nonbonded.ParticleMeshEwaldCart.pow(double,double)", "ffx.potential.nonbonded.ParticleMeshEwaldCart.pow(double,double)"], "Fixed commit": "0a875b1629072d513e6c57d79bd2a725eab2f978", "Url": "https://api.github.com/repos/mjschnie/ffx", "Date": "2017-02-16T19:43:34Z"},
{"Line": "=>458", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mHudViewHolder) != null) { mHudViewHolder.updateLoadCost(((mPrepareEndTime) - (mPrepareStartTime))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7089/buggy-version/upplayer.src.main.java.com.upyun.upplayer.widget.UpVideoView.java", "BodyUseAPI": [], "Fixed commit": "7ffad619cdc5608760feba0dde8498cf091a270b", "Url": "https://api.github.com/repos/upyun/android-player-sdk", "Date": "2017-01-11T04:00:09Z"},
{"Line": "=>663", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mHudViewHolder) != null) { mHudViewHolder.updateSeekCost(((mSeekEndTime) - (mSeekStartTime))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7089/buggy-version/upplayer.src.main.java.com.upyun.upplayer.widget.UpVideoView.java", "BodyUseAPI": [], "Fixed commit": "7ffad619cdc5608760feba0dde8498cf091a270b", "Url": "https://api.github.com/repos/upyun/android-player-sdk", "Date": "2017-01-11T04:00:09Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNewTeam) { globalIndex = Global.Teams.size(); Global.Teams.add(this); uniqueID = dota2drafter.Global.RequestUniqueID(); }else { Global.Teams.set(this.globalIndex, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1505/buggy-version/src.dota2drafter.Team.java", "BodyUseAPI": [], "Fixed commit": "4565260503b870d42ef83a9e4d99bc472233278f", "Url": "https://api.github.com/repos/Kasijjuf/Dota2Drafter", "Date": "2016-01-24T19:28:03Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sourceforge.argparse4j.inf.Namespace.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (outputFormat.equalsIgnoreCase(\"conll00\")) { bwriter.write(annotator.annotateChunksToCoNLL00(kaf)); }else { annotator.chunkToKAF(kaf); newLp.setEndTimestamp(); bwriter.write(kaf.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8339/buggy-version/src.main.java.eus.ixa.ixa.pipe.chunk.CLI.java", "BodyUseAPI": [], "Fixed commit": "2ab4610f584f689cc19569fb1d5011fc7c12d7da", "Url": "https://api.github.com/repos/ixa-ehu/ixa-pipe-chunk", "Date": "2016-04-22T11:42:53Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<vooga.fighter.model.objects.GameObject>.get(int)", "java.util.List<vooga.fighter.model.objects.GameObject>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!((o1 instanceof vooga.fighter.model.objects.MapObject) || (o2 instanceof vooga.fighter.model.objects.MapObject))) { java.awt.Rectangle o1Rect = o1.getCurrentState().getCurrentRectangle(); java.awt.Rectangle o2Rect = o1.getCurrentState().getCurrentRectangle(); if (myCollisionDetector.quickDetectCollision(o1Rect, o2Rect)) { handleCollisions(o1, o2); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7387/buggy-version/src.vooga.fighter.util.CollisionManager.java", "BodyUseAPI": ["vooga.fighter.model.objects.GameObject.getCurrentState()", "o1.getCurrentState().getCurrentRectangle()", "vooga.fighter.util.CollisionManager.handleCollisions(vooga.fighter.model.objects.GameObject,vooga.fighter.model.objects.GameObject)", "o1.getCurrentState().getCurrentRectangle()", "vooga.fighter.model.objects.GameObject.getCurrentState()"], "Fixed commit": "f1c14a585307566c839f298c4ed1c64d4425c695", "Url": "https://api.github.com/repos/duke-compsci308-spring2013/vooga", "Date": "2013-04-24T05:03:06Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.ornl.stucco.rt.util.JSONObject.optString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (vertexId == \"\") { vertexId = v.getString(\"_id\"); v.putOnce(\"name\", vertexId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4038/buggy-version/src.main.java.gov.ornl.stucco.rt.util.Loader.java", "BodyUseAPI": [], "Fixed commit": "b8137cee5ac266130ea5feaee5d669b51b5c9275", "Url": "https://api.github.com/repos/stucco/rt", "Date": "2013-09-10T19:59:58Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < ((bytes.length) - 1)) bufferStringForFingerprint.append(\":\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/374/buggy-version/ejb.src.main.java.com.earroyoron.openfirma.OpenFirmaBean.java", "BodyUseAPI": [], "Fixed commit": "5620604ee9eea8718dbf19002955cad21b0888f1", "Url": "https://api.github.com/repos/earroyoron/openfirma", "Date": "2012-05-19T09:34:08Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getChannel()) != null) url = getChannel().getUrl();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1585/buggy-version/app.src.main.java.com.felkertech.n.plugins.MainPicker.java", "BodyUseAPI": [], "Fixed commit": "b5636c7f8e660b1c4245124901e227005ac10c5d", "Url": "https://api.github.com/repos/Fleker/CumulusTV", "Date": "2015-09-13T19:12:46Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1585/buggy-version/app.src.main.java.com.felkertech.n.plugins.MainPicker.java", "BodyUseAPI": [], "Fixed commit": "b5636c7f8e660b1c4245124901e227005ac10c5d", "Url": "https://api.github.com/repos/Fleker/CumulusTV", "Date": "2015-09-13T19:12:46Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (event != null) { this.description = event.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1592/buggy-version/grassroot-webapp.src.main.java.za.org.grassroot.webapp.model.rest.ResponseWrappers.GroupSearchWrapper.java", "BodyUseAPI": [], "Fixed commit": "7c2d2fa5cc68d0aea9a71d3ee2759778ed89f0ba", "Url": "https://api.github.com/repos/vegtelenseg/grassroot-platform", "Date": "2016-03-16T14:40:10Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((book.getTitle().length()) > 30) { builtUri.buildUpon().appendQueryParameter(\"title\", book.getTitle().substring(0, 30)); }else { builtUri.buildUpon().appendQueryParameter(\"title\", book.getTitle()).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6057/buggy-version/app.src.main.java.com.example.michaelg.myapplication.Item.ViewPagerActivity.java", "BodyUseAPI": ["builtUri.buildUpon().appendQueryParameter(\"title\", book.getTitle()).build()", "builtUri.buildUpon().appendQueryParameter(java.lang.String,book.getTitle().substring(0, 30))", "com.example.michaelg.myapplication.ListviewActivity.Book.getTitle()", "book.getTitle().substring(int,int)", "com.example.michaelg.myapplication.ListviewActivity.Book.getTitle()", "builtUri.buildUpon().appendQueryParameter(java.lang.String,book.getTitle())"], "Fixed commit": "4c70ff60601c6b39953cad6f3409037109896e3c", "Url": "https://api.github.com/repos/tsofenAndroidteam/Main_frag", "Date": "2016-10-15T20:01:13Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.araqne.log.api.LastPosition.getPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((wtmpFile.length()) < pos) { pos = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7769/buggy-version/araqne-log-api.src.main.java.org.araqne.log.api.WtmpLogger.java", "BodyUseAPI": [], "Fixed commit": "77eafcf12d70451b82fe91291b6f71011f0dce7a", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2014-07-26T23:48:13Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.grid.storm.config.Configuration.getInstance().getAutomaticDirectoryCreation()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (automaticDirectoryCreation) continue; else errorString = errorString + \" does not exist!\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2857/buggy-version/src.main.java.it.grid.storm.asynch.PtP.java", "BodyUseAPI": [], "Fixed commit": "66e3c7066e0c67ecbb2c24d3e7f9311d21e62fec", "Url": "https://api.github.com/repos/italiangrid/storm", "Date": "2014-08-28T15:27:16Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((classpathPrefix) != null) { config.setClasspathPrefix(classpathPrefix); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2754/buggy-version/classpath-taxone-maven-plugin.src.main.java.it.taxone.plugins.classpath.ClassPathMojo.java", "BodyUseAPI": [], "Fixed commit": "42292715ce43d712d9b8ca7f23388a5ad3eac49d", "Url": "https://api.github.com/repos/taxone/Development", "Date": "2014-09-12T05:32:13Z"},
{"Line": "=>869", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (envVars != null) { for (java.util.Map.Entry<java.lang.String, java.lang.String> ent : envVars.entrySet()) if (macEnv.containsKey(ent.getKey())) { java.lang.String old = macEnv.get(ent.getKey()); if ((old == null) || (old.isEmpty())) macEnv.put(ent.getKey(), ent.getValue()); else macEnv.put(ent.getKey(), ((old + ':') + (ent.getValue()))); }else macEnv.put(ent.getKey(), ent.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4951/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.visor.util.VisorTaskUtils.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.entrySet()"], "Fixed commit": "f1a0467670415aa28a73cbdd1053e3692255b0f6", "Url": "https://api.github.com/repos/apache/ignite", "Date": "2015-12-24T03:26:51Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (engine != null) { logger.info(\"Created scripting engine {}.\", shortName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1023/buggy-version/framework.common.org.gumtree.core.src.org.gumtree.scripting.support.ScriptingManager.java", "BodyUseAPI": [], "Fixed commit": "b6e89bfed81a6b555186c001f906da7164032a4b", "Url": "https://api.github.com/repos/Gumtree/gumtree", "Date": "2017-02-02T05:30:45Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.nihongo.vokabeltrainer.dao.GenericDAO<ch.nihongo.vokabeltrainer.entities.Userlogin>.findAllResults(Userlogin.FIND_BY_USERNAME,java.util.Map<java.lang.String, java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(results.isEmpty())) { foundEntity = results.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8004/buggy-version/src.java.ch.nihongo.vokabeltrainer.dao.UserloginDAO.java", "BodyUseAPI": ["java.util.List<ch.nihongo.vokabeltrainer.entities.Userlogin>.get(int)"], "Fixed commit": "05c4d37790306ccf5e4c67102d4ad536f9fc7849", "Url": "https://api.github.com/repos/oKin3/Vokabeltrainer", "Date": "2015-10-26T07:13:26Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (CallerFlashlight.LOG) android.util.Log.d(com.proapps.callflashlight.AppList.TAG, (\"Installed package :\" + (packageInfo.packageName)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6549/buggy-version/src.main.java.com.proapps.callflashlight.AppList.java", "BodyUseAPI": [], "Fixed commit": "3c1486e85c9c837f8bed59f165b61b3c07e004a0", "Url": "https://api.github.com/repos/thatapps/flashneo", "Date": "2014-02-08T08:58:06Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.meisterschueler.ognviewer.OgnService.1.getSystemService(Context.LOCATION_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (locManager != null) { currentLocation = locManager.getLastKnownLocation(LocationManager.GPS_PROVIDER); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2887/buggy-version/app.src.main.java.com.meisterschueler.ognviewer.OgnService.java", "BodyUseAPI": ["android.location.LocationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER)"], "Fixed commit": "143470ebe622a0d224dd6b3fccf69eda2ef0638a", "Url": "https://api.github.com/repos/prikril/ogn-viewer-android", "Date": "2017-11-15T19:50:07Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((origAddress.charAt(2)) == '-') origAddress = origAddress.replace(\"-\", \":\"); else if ((origAddress.charAt(2)) != ':') { for (int i = 0; i < (origAddress.length()); i++) { formattedAddress.append(origAddress.charAt(i)); if ((i % 2) == 1) { formattedAddress.append(\":\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8207/buggy-version/exportLibraries.storagedrivers.purestorage.src.main.java.open.hyperion.purestorage.utils.PureStorageUtil.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.String.length()", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.StringBuilder.append(char)"], "Fixed commit": "2974c3df5c0c30eb5387439983eafc676203a532", "Url": "https://api.github.com/repos/open-hyperion/coprhd-controller", "Date": "2017-03-12T00:05:42Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (MessageType.Keepalive.equals(header.getType())) { log.info((\"Received keepalive message from Loxone \" + (configuration.idToExternalForm()))); }else if (!(headerQueue.offer(header))) { log.warn(\"Dropping message header: {}\", header); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7193/buggy-version/net.solarnetwork.node.hw.loxone.src.net.solarnetwork.node.loxone.protocol.ws.LoxoneEndpoint.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,net.solarnetwork.node.loxone.protocol.ws.MessageHeader)", "java.util.Queue<net.solarnetwork.node.loxone.protocol.ws.MessageHeader>.offer(net.solarnetwork.node.loxone.protocol.ws.MessageHeader)"], "Fixed commit": "1466f87dab2e9ae9b9b82287341023838ff45fd0", "Url": "https://api.github.com/repos/evidentlimited/solarnetwork-loxone", "Date": "2017-12-18T19:32:51Z"},
{"Line": "=>1761", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!reregister) { edao.removeEventWaitForActivityInstance(actInstId, \"activity to notify is returned\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3185/buggy-version/mdw-services.src.com.centurylink.mdw.services.process.ProcessExecutorImpl.java", "BodyUseAPI": [], "Fixed commit": "1165bf3497b13404eadf1ff54b242fc0e24235dd", "Url": "https://api.github.com/repos/CenturyLinkCloud/mdw", "Date": "2017-06-14T19:12:51Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url.startsWith(\"https\")) { return url; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5206/buggy-version/src.main.java.org.spo.fw.web.Lib_Utils.java", "BodyUseAPI": [], "Fixed commit": "fb604ed9a63514c63d051fd0e3c30df55b4611fd", "Url": "https://api.github.com/repos/premganz/SeleniumPageObjects", "Date": "2015-11-19T17:29:03Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.arl.fjage.json.RemoteContainer.agentsForService(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (aids != null) for (int i = 0; i < (aids.length); i++) rv.add(aids[i]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/506/buggy-version/src.main.java.org.arl.fjage.json.MasterContainer.java", "BodyUseAPI": ["java.util.List<org.arl.fjage.json.AgentID>.add(aids[i])"], "Fixed commit": "b0d4a55502bdcd201cb9a551c58ce1df7ee6ba9d", "Url": "https://api.github.com/repos/org-arl/fjage", "Date": "2016-01-01T10:46:36Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"/\".equals(line.trim())) { isFoundQueryEnd = true; }else { isFoundQueryEnd = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6015/buggy-version/modules.distribution.resources.migration.wso2-api-migration-client.src.main.java.org.wso2.carbon.apimgt.migration.client.MigrationClientBase.java", "BodyUseAPI": [], "Fixed commit": "d5d9aa6e9734585914d4d16d158db321cda72d79", "Url": "https://api.github.com/repos/malinthaprasan/product-apim", "Date": "2016-06-22T06:09:58Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getContentResolver().query(ScannedApplicationContract.CONTENT_URI,<nulltype>,((org.satorysoft.cotton.db.contract.ScannedApplicationContract.APPLICATION_NAME) + \"=?\"),java.lang.String[],<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (cursor != null) { cursor.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/134/buggy-version/app.src.main.java.org.satorysoft.cotton.adapter.ApplicationListAdapter.java", "BodyUseAPI": ["android.database.Cursor.close()"], "Fixed commit": "dc7ce7f37d6644b99bbf5239af3917285be7c14d", "Url": "https://api.github.com/repos/viacheslavokolitiy/cotton", "Date": "2015-05-12T12:23:33Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (queue.isEmpty()) { return new java.util.ArrayList<java.awt.Point>(); }else { current = queue.poll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6536/buggy-version/UpJammin2.src.ai.Path.java", "BodyUseAPI": ["java.util.PriorityQueue<ai.Triple>.poll()"], "Fixed commit": "97464be82829c8dbfc32ac3ce302d504a3ebfa78", "Url": "https://api.github.com/repos/IAmSam42/UpJammin2", "Date": "2017-06-10T21:04:20Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.springframework.util.StringUtils.isEmpty(apiInfo.getRegex())) { apiInfo.setRegex(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/575/buggy-version/src.main.java.org.allen.imocker.controller.ApiAdminController.java", "BodyUseAPI": ["org.allen.imocker.entity.ApiInfo.setRegex(<nulltype>)"], "Fixed commit": "f2298511502aec9bdcd52c865543fa7852ebe948", "Url": "https://api.github.com/repos/allenfu2013/imocker", "Date": "2016-12-22T09:59:54Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.springframework.util.StringUtils.isEmpty(apiInfo.getRegex())) { apiInfo.setRegex(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/575/buggy-version/src.main.java.org.allen.imocker.controller.ApiAdminController.java", "BodyUseAPI": ["org.allen.imocker.entity.ApiInfo.setRegex(<nulltype>)"], "Fixed commit": "f2298511502aec9bdcd52c865543fa7852ebe948", "Url": "https://api.github.com/repos/allenfu2013/imocker", "Date": "2016-12-22T09:59:54Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((queryDTO.getIpList()) != null) { for (java.lang.String ip : queryDTO.getIpList()) { backEndQuery.addIP(ip); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5883/buggy-version/components.cep.org.wso2.carbon.cep.admin.4.0.5.src.main.java.org.wso2.carbon.cep.admin.internal.CEPAdminUtils.java", "BodyUseAPI": ["org.wso2.carbon.cep.admin.internal.QueryDTO.getIpList()"], "Fixed commit": "79041151e9a6b4145010e973c924664c3a39c1da", "Url": "https://api.github.com/repos/Wihidum/cep", "Date": "2013-10-30T09:25:05Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item.equals(\"Recentes\")) { recyclerViewAdapter.getData().clear(); recyclerViewAdapter.getData().addAll(billListRecentsAndOpened); recyclerViewAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5482/buggy-version/app.src.main.java.gppmds.wikilegis.view.OpenBillsListFragment.java", "BodyUseAPI": [], "Fixed commit": "972fc4e8a4a5170906e4edf5c6d74a2fbc1d34cb", "Url": "https://api.github.com/repos/izacristina/2016.2-WikiLegis", "Date": "2016-10-06T16:52:50Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { loadSubreddits(v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1161/buggy-version/Breadit.reddit.src.main.java.me.williamhester.ui.fragments.SubredditFragment.java", "BodyUseAPI": [], "Fixed commit": "c543bb4a7059011b41820e2f38ec832bfd48d047", "Url": "https://api.github.com/repos/WilliamHester/breadit", "Date": "2015-01-06T03:54:37Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userToLinkMap.getValue()) != null) { userBBCodeWithLink = java.lang.String.format(org.jtalks.jcommune.service.nontransactional.MentionedUsers.USER_WITH_LINK_TO_PROFILE_TEMPLATE, userToLinkMap.getValue(), username); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/240/buggy-version/jcommune-service.src.main.java.org.jtalks.jcommune.service.nontransactional.MentionedUsers.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "java.lang.String.format(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "8bd94c924f6c10ba4e65d3429ef069b74cfc2ced", "Url": "https://api.github.com/repos/jtalks-org/jcommune", "Date": "2013-05-30T13:59:30Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (bufferedImage != null) org.magic.services.MTGControler.getInstance().getEnabledCache().put(bufferedImage, mc, ed);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/9184/buggy-version/src.org.magic.api.pictures.impl.MagicCardInfoPicturesProvider.java", "BodyUseAPI": ["org.magic.services.MTGControler.getInstance().getEnabledCache().put(java.awt.image.BufferedImage,org.magic.api.beans.MagicCard,org.magic.api.beans.MagicEdition)"], "Fixed commit": "9b6cbd9b679c3cff24dfbac8e058064ac4ac87bb", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2017-06-05T19:28:59Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value.matches(\"#[0-9a-fA-F]+\")) { value = (\"Color.parseColor(\\\"\" + value) + \"\\\")\"; }else if (value.matches(\"@android:color/.+\")) { value = value.substring(((value.indexOf('/')) + 1)); value = \"android.R.color.\" + value; }else if (value.matches(\"@color/.+\")) { value = value.substring(((value.indexOf('/')) + 1)); value = \"color.\" + value; }else if (((value.equals(\"gone\")) || (value.equals(\"visibile\"))) || (value.equals(\"invisibile\"))) { value = \"View.\" + (value.toUpperCase()); }else if (value.startsWith(\"@drawable/\")) { value = value.substring(((value.indexOf('/')) + 1)); value = (\"\" + value) + \".get(context)\"; }else if (value.equals(\"vertical\")) { value = \"LinearLayout.VERTICAL\"; }else if (value.equals(\"horizontal\")) { value = \"LinearLayout.HORIZONTAL\"; }else if ((attr.getQualifiedName().equals(\"android:gravity\")) || (attr.getQualifiedName().equals(\"android:layout_gravity\"))) { value = com.excelsecu.axml.Utils.devideParams(value, \"Gravity\"); }else if (attrName.equals(\"android:password\")) { value = \"new PasswordTransformationMethod()\"; }else if (attrName.equals(\"android:singleLine\")) { value = \"new SingleLineTransformationMethod()\"; }else if (attrName.equals(\"android:inputType\")) { java.lang.String error = value; value = Config.INPUT_TYPE_MAP.get(value); if (value == null) { throw new com.excelsecu.axml.AXMLException(AXMLException.ATTRIBUTE_VALUE_ERROR, error); } value = com.excelsecu.axml.Utils.devideParams(value, \"InputType\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6112/buggy-version/src.com.excelsecu.axml.LayoutTranslater.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.indexOf(char)", "java.lang.String.matches(java.lang.String)"], "Fixed commit": "6e7750c4f8164ea920cc95db8aa8531676187700", "Url": "https://api.github.com/repos/sickworm/AndroidXMLToJava", "Date": "2015-01-21T03:51:58Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dom4j.Attribute.getQualifiedName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (attrName.equals(\"android:singleLine\")) { addImport(android.text.method.SingleLineTransformationMethod.class.getName()); }else if (attrName.equals(\"android:inputType\")) { addImport(android.text.InputType.class.getName()); }else if (attrValue.matches(\"@color/.+\")) { addImport(((Config.PACKAGE_NAME) + \".values.color\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6112/buggy-version/src.com.excelsecu.axml.LayoutTranslater.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "6e7750c4f8164ea920cc95db8aa8531676187700", "Url": "https://api.github.com/repos/sickworm/AndroidXMLToJava", "Date": "2015-01-21T03:51:58Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (filters instanceof java.util.List) { filtersList = ((java.util.List<com.google.api.services.webmasters.model.ApiDimensionFilter>) (filters)); }else { filtersList = new java.util.ArrayList(filters); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4413/buggy-version/gobblin-core.src.main.java.gobblin.source.extractor.extract.google.webmaster.GoogleWebmasterFilter.java", "BodyUseAPI": [], "Fixed commit": "ecd4551ff0962acb9c772fc7232dd9006a323ff5", "Url": "https://api.github.com/repos/enjoyear/gobblin", "Date": "2016-11-15T19:35:37Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (myDb.createUser(username, pw, firstname, lastname, dataOfBirth)) { new arcade.view.LoginView(this, myResources); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6733/buggy-version/src.arcade.model.Model.java", "BodyUseAPI": [], "Fixed commit": "038d6d37f8eb3756cc0d52e26fbab5eb5ae564d7", "Url": "https://api.github.com/repos/duke-compsci308-spring2013/vooga", "Date": "2013-04-19T17:22:36Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start > end) { lejos.nxt.LCD.clear((n + 1)); }else { lejos.nxt.LCD.clear((n - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5140/buggy-version/src.RobotController.java", "BodyUseAPI": [], "Fixed commit": "b885c9402bf03914d22f15aaea19b540c701d006", "Url": "https://api.github.com/repos/Floppy012/Mindstorms", "Date": "2017-11-02T18:54:25Z"},
{"Line": "=>939", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (translateMode == null) translateMode = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4408/buggy-version/door43-client.src.main.java.org.unfoldingword.door43client.Library.java", "BodyUseAPI": [], "Fixed commit": "391d7b28f5296dcac3225cc694e2befe06850c50", "Url": "https://api.github.com/repos/neutrinog/android-door43-client", "Date": "2016-10-06T08:07:22Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (null == imple) { imple = new me.tangke.scrolldetector.detector.DefaultScrollDetector(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6181/buggy-version/ScrollDetector.src.me.tangke.scrolldetector.ScrollDetectors.java", "BodyUseAPI": [], "Fixed commit": "00683d54fbf4ed0135f38fea1b761706620d87d7", "Url": "https://api.github.com/repos/TangKe/ScrollDetector", "Date": "2014-07-05T10:20:47Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((crypt) != null) { msg = crypt.encryptMsg(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2329/buggy-version/sqchat.Connection.java", "BodyUseAPI": [], "Fixed commit": "220d381a8f4976d57993df393ae981c4d629dbfb", "Url": "https://api.github.com/repos/crackdog/sqchat_client", "Date": "2013-11-12T17:22:35Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.health.gui.output.OutputPanelSidebar.getList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((list.getModel().getSize()) > 0) { java.lang.String selected = com.health.gui.output.OutputPanelSidebar.getList().getSelectedValue(); com.health.gui.output.OutputMainPanel.setData(com.health.gui.output.OutputPanelSidebar.getAnalysisData(selected)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3867/buggy-version/health.src.main.java.com.health.gui.output.VOutputPanel.java", "BodyUseAPI": [], "Fixed commit": "8c5921a4b5d03ed2982476ab9fe2f7bb22214720", "Url": "https://api.github.com/repos/adamIqbal/Health", "Date": "2015-06-26T22:17:39Z"},
{"Line": "=>818", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((CURRENT_SCOPE) != (GLOBAL_SCOPE)) { CURRENT_SCOPE = CURRENT_SCOPE.getParent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5538/buggy-version/output.tigerParser.java", "BodyUseAPI": [], "Fixed commit": "571fe7bd56ae0a6955fe13b3b74ad06726b46ac8", "Url": "https://api.github.com/repos/CS4240-tiger/tiger-compiler", "Date": "2014-11-03T17:25:06Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (root) { file.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1074/buggy-version/src.main.java.org.parabot.api.io.Directories.java", "BodyUseAPI": [], "Fixed commit": "ffbddf28b46d55c5991ae1db47a04513d56b04c3", "Url": "https://api.github.com/repos/Parabot/Internal-API", "Date": "2016-10-03T18:32:31Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(\"\".equals(card.getText()))) || (!(\"\".equals(item.getText())))) owner.checkout(java.lang.Integer.parseInt(card.getText()), java.lang.Integer.parseInt(item.getText())); else java.lang.System.out.println(\"Empty field\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5236/buggy-version/src.check.CheckOut.java", "BodyUseAPI": ["javax.swing.JTextField.getText()", "libarypackage.Libary.checkout(int,int)", "java.lang.Integer.parseInt(java.lang.String)", "javax.swing.JTextField.getText()", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "ed3deb205bc382d46f444149d0ef43021d5c2159", "Url": "https://api.github.com/repos/rukeyscott/Library", "Date": "2015-04-19T19:26:40Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (upto > (multiplier * lo)) { found = lo; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3241/buggy-version/src.main.java.com.stekodyne.euler.One.java", "BodyUseAPI": [], "Fixed commit": "3fbe77f492c310df7508bd998c83fb36f063193f", "Url": "https://api.github.com/repos/stekodyne/euler-one", "Date": "2015-11-16T23:49:44Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == (org.bukkit.Material.WOOL)) { return getWool(sdata); }else if (sdata.matches(\"^[0-9]+$\")) { return new org.bukkit.material.MaterialData(type, java.lang.Byte.parseByte(sdata)); }else { return new org.bukkit.material.MaterialData(type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8948/buggy-version/src.com.nisovin.magicspells.materials.MagicItemNameResolver.java", "BodyUseAPI": [], "Fixed commit": "93e46b2009ba39c0de737b7795624f53da9bc572", "Url": "https://api.github.com/repos/nisovin/MagicSpells", "Date": "2014-06-19T18:36:39Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["modularizator.logic.Network.getProject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (project == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8905/buggy-version/src.modularizator.logic.Network.java", "BodyUseAPI": [], "Fixed commit": "f2bf6f80e451d112e3e50d6c3d0948e3a9039597", "Url": "https://api.github.com/repos/vahan/Modularizator", "Date": "2013-09-04T15:12:12Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Boolean.parseBoolean(context.getRequest().getParameter(\"includeAll\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (includeVoided) { java.util.List<org.openmrs.Obs> obs = new java.util.ArrayList<org.openmrs.Obs>(enc.getAllObs(includeVoided)); return new org.openmrs.module.webservices.rest.web.resource.impl.NeedsPaging<org.openmrs.Obs>(obs, context); }else { java.util.List<org.openmrs.Obs> obs = new java.util.ArrayList<org.openmrs.Obs>(enc.getAllObs()); return new org.openmrs.module.webservices.rest.web.resource.impl.NeedsPaging<org.openmrs.Obs>(obs, context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2445/buggy-version/omod-1.8.src.main.java.org.openmrs.module.webservices.rest.web.v1_0.resource.openmrs1_8.ObsResource1_8.java", "BodyUseAPI": ["org.openmrs.Encounter.getAllObs(boolean)"], "Fixed commit": "9443f86faca689e758562184d583135da13a1662", "Url": "https://api.github.com/repos/Ewanjiru/openmrs-module-webservices.rest", "Date": "2017-10-23T12:47:40Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hangum.tadpole.session.manager.SessionManager.getUserInfo(PreferenceDefine.RDB_RESULT_NUMBER_IS_COMMA)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (userInfo != null) { strYesNo = userInfo.getValue0(); if ((null == strYesNo) || (\"\".equals(strYesNo))) { return PublicTadpoleDefine.YES_NO.YES.toString(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3461/buggy-version/com.hangum.tadpole.preference.src.com.hangum.tadpole.preference.get.GetPreferenceGeneral.java", "BodyUseAPI": ["com.hangum.tadpole.dao.system.UserInfoDataDAO.getValue0()"], "Fixed commit": "e5a0ef3b2ec33098e76d91cb3d5ebb9db250da0f", "Url": "https://api.github.com/repos/hangum/TadpoleForDBTools", "Date": "2013-09-12T13:55:02Z"},
{"Line": "=>693", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof javax.swing.text.html.HTML.Tag) { javax.swing.text.html.HTML.Tag kind = ((javax.swing.text.html.HTML.Tag) (obj)); if (kind == (javax.swing.text.html.HTML.Tag.CONTENT)) { return new uk.co.rjsoftware.xmpp.dialogs.main.MainForm.InlineViewWithEllipsesSupport(elem); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5122/buggy-version/src.main.java.uk.co.rjsoftware.xmpp.dialogs.main.MainForm.java", "BodyUseAPI": [], "Fixed commit": "796ef1b1d062358692f5ccce0298e03f7ad1d83c", "Url": "https://api.github.com/repos/richardsimpson/chat-client", "Date": "2014-06-29T00:45:09Z"},
{"Line": "=>689", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.text.AttributeSet.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (elementName == null) { obj = attrs.getAttribute(javax.swing.text.StyleConstants.NameAttribute); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5122/buggy-version/src.main.java.uk.co.rjsoftware.xmpp.dialogs.main.MainForm.java", "BodyUseAPI": [], "Fixed commit": "796ef1b1d062358692f5ccce0298e03f7ad1d83c", "Url": "https://api.github.com/repos/richardsimpson/chat-client", "Date": "2014-06-29T00:45:09Z"},
{"Line": "=>681", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.text.html.HTMLEditorKit.HTMLFactory.create(javax.swing.text.Element)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (view instanceof javax.swing.text.html.ParagraphView) { return new uk.co.rjsoftware.xmpp.dialogs.main.MainForm.WrapParagraphView(elem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5122/buggy-version/src.main.java.uk.co.rjsoftware.xmpp.dialogs.main.MainForm.java", "BodyUseAPI": [], "Fixed commit": "796ef1b1d062358692f5ccce0298e03f7ad1d83c", "Url": "https://api.github.com/repos/richardsimpson/chat-client", "Date": "2014-06-29T00:45:09Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(exit)) { nanosPerFrame = 1000000000 / (machine.getMachineType().getFramesPerSecond()); lastTime = frameStart = com.badlogic.gdx.utils.TimeUtils.nanoTime(); framesThisSecond = framesLastSecond = 0; avgUpdateTime = 0; frameCount = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6485/buggy-version/core.src.emu.jvic.MachineRunnable.java", "BodyUseAPI": [], "Fixed commit": "c38169e31b2b7cec1f14343d6eb39a6a4327acfc", "Url": "https://api.github.com/repos/lanceewing/jvic", "Date": "2016-03-27T23:58:47Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerIndex) < 0) playerIndex += 4;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4103/buggy-version/app.src.main.java.com.awsickapps.uno.Data.Game.java", "BodyUseAPI": [], "Fixed commit": "65eac31acf06cc1b28f84bd74e442c188fffe754", "Url": "https://api.github.com/repos/calderwoodra/420UNO", "Date": "2015-03-20T07:59:56Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.Ben12345rocks.VotingPlugin.Config.ConfigVoteSites.getInstance().getVoteSitesNames()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (sites != null) { for (java.lang.String siteName : sites) { java.lang.String URL = com.Ben12345rocks.VotingPlugin.Config.ConfigVoteSites.getInstance().getServiceSite(siteName); if (URL.equals(url)) { return siteName; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5433/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Utils.java", "BodyUseAPI": [], "Fixed commit": "0f9f075bf9baf2b484f9afe4547248d15058136d", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-03-24T20:29:28Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (orientation == (android.content.res.Configuration.ORIENTATION_LANDSCAPE)) { com.hycorie.dev.gdg_final_prj.MainActivity.setListViewHeightBasedOnChildren(sv); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1637/buggy-version/app.src.main.java.com.hycorie.dev.gdg_final_prj.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5b2ae4693716cfe32101ab15e12af5f3a89724a0", "Url": "https://api.github.com/repos/malinich/GDG-FINAL_PRJ", "Date": "2016-03-16T01:41:20Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((addTask) != null) { addTask.cancel(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6197/buggy-version/src.main.java.net.nikr.eve.jeveasset.gui.dialogs.account.AccountImportDialog.java", "BodyUseAPI": [], "Fixed commit": "6035fa783c44ab1ecb67af41c0ad696df479e53b", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-04-29T10:28:30Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (opGroupM.find()) { tmp = opGroupM.group(); aux = opGroupM.replaceFirst(this.fixRepSign(tmp)); }else if (wholeOpM.find()) { tmp = wholeOpM.group(); index = wholeOpM.start(); tokens.put(index, tmp); aux = wholeOpM.replaceFirst(this.spacenize(tmp)); }else if (varNameM.find()) { tmp = varNameM.group(); index = varNameM.start(); tokens.put(index, tmp); aux = varNameM.replaceFirst(this.spacenize(tmp)); }else if (ufpM.find()) { tmp = ufpM.group(); index = ufpM.start(); tokens.put(index, tmp); aux = ufpM.replaceFirst(this.spacenize(tmp)); }else { throw new fonte.LotusException(\"invalidExp\", this.value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6465/buggy-version/fonte.Expression.java", "BodyUseAPI": ["java.util.regex.Matcher.group()", "java.util.regex.Matcher.replaceFirst(java.lang.String)"], "Fixed commit": "00e83b9d9c2a0cbe20aba04684fe61caff02a2b8", "Url": "https://api.github.com/repos/vladimirbelinski/Lotus", "Date": "2015-05-11T17:59:39Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.view.characterSelectList.isSelectionEmpty())) { this.model.setSelectedCharacter(this.view.characterSelectList.getSelectedValue()); this.view.setIncrementKeysEnabled(true); }else { this.model.player.setVictoryCondition(new ca.carleton.magicrealm.game.VictoryCondition()); this.view.setIncrementKeysEnabled(false); this.view.setDecrementKeysEnabled(false); this.view.setFinishEnabled(false); this.view.updateText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5830/buggy-version/src.main.java.ca.carleton.magicrealm.GUI.charactercreate.CharacterCreateMenu.java", "BodyUseAPI": ["ca.carleton.magicrealm.GUI.charactercreate.MenuPanel.setIncrementKeysEnabled(boolean)", "ca.carleton.magicrealm.GUI.charactercreate.MenuPanel.setIncrementKeysEnabled(boolean)", "ca.carleton.magicrealm.GUI.charactercreate.MenuPanel.updateText()", "ca.carleton.magicrealm.GUI.charactercreate.MenuPanel.setDecrementKeysEnabled(boolean)", "ca.carleton.magicrealm.GUI.charactercreate.MenuPanel.setFinishEnabled(boolean)", "ca.carleton.magicrealm.GUI.charactercreate.MenuModel.setSelectedCharacter(this.view.characterSelectList.getSelectedValue())", "this.view.characterSelectList.getSelectedValue()"], "Fixed commit": "f5d5cc133c6fa82f1c8055b44188dbac78f6f393", "Url": "https://api.github.com/repos/michaelhum/3004-Magic-Realm-16", "Date": "2015-02-23T07:46:58Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fullEntry.startsWith(\"rList-\"))) { java.lang.String creator = fullEntry.split(\"&_\")[1]; if (creator.equals(edu.stanford.covalence.covalence.MainActivity.currentUser)) { results.add(fullEntry); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/9176/buggy-version/app.src.main.java.edu.stanford.covalence.covalence.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "7be529a2aad5ac6eeddd778f4d4bbd96a4ff29ae", "Url": "https://api.github.com/repos/cnoh/Covalence", "Date": "2015-12-04T21:46:56Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (local.toString().equals(\"this\")) { identifier += \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/508/buggy-version/soot-reim-definite.src.edu.rpi.InferenceTransformer.java", "BodyUseAPI": [], "Fixed commit": "5e2749768a022c4d0be0dd6c3660cd0b5e8390e6", "Url": "https://api.github.com/repos/proganalysis/type-inference", "Date": "2017-09-14T18:34:29Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPoi) != null) { java.util.ArrayList<eu.trentorise.smartcampus.territoryservice.model.BaseDTObject> list = new java.util.ArrayList<eu.trentorise.smartcampus.territoryservice.model.BaseDTObject>(); getEvent().setLocation(mPoi.getLocation()); list.add(getEvent()); eu.trentorise.smartcampus.dt.custom.map.MapManager.switchToMapView(list, mFragment); }else { android.widget.Toast.makeText(getSherlockActivity(), R.string.toast_poi_not_found, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3871/buggy-version/src.eu.trentorise.smartcampus.dt.fragments.events.EventDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "6c889773d84724979f84728415c13de847290452", "Url": "https://api.github.com/repos/smartcampuslab/android.discovertrento.lib", "Date": "2013-11-12T09:21:33Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (handler == null) throw new java.lang.NullPointerException(\"Cannot pass a null handler\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4662/buggy-version/src.api.HerbBase.java", "BodyUseAPI": [], "Fixed commit": "ad82bfd33859c380a82fa2d0f9c6bf2e5fe9a51a", "Url": "https://api.github.com/repos/jvanburen/Herb", "Date": "2012-11-06T05:03:06Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.time) <= 0) throw new java.lang.IllegalStateException((\"Cannot wait for a non-positive\" + \" amount of time\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4662/buggy-version/src.api.HerbBase.java", "BodyUseAPI": [], "Fixed commit": "ad82bfd33859c380a82fa2d0f9c6bf2e5fe9a51a", "Url": "https://api.github.com/repos/jvanburen/Herb", "Date": "2012-11-06T05:03:06Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ft.hack.dynamite.db.ArticleDAO.getArticle(row1.getString(\"article_id\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (recommendation != null) { recommendation.setCount(((int) (row1.getLong(\"count\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6567/buggy-version/webapp.src.main.java.com.ft.hack.dynamite.db.UserActivityDAO.java", "BodyUseAPI": ["com.ft.hack.dynamite.model.Recommendation.setCount(((int) (row1.getLong(\"count\"))))"], "Fixed commit": "ff4e40c75e47677e24cb08fa0749bc2df5b612cc", "Url": "https://api.github.com/repos/anuragkapur/FT-HackDay-2013", "Date": "2013-05-21T11:57:05Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["balle.main.SimpleWorldGUI.Screen.getSnapshot()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (robot.isNearWall(s.getPitch())) { balle.main.drawable.Label nearWallLabel = new balle.main.drawable.Label(\"NW\", new balle.world.Coord(robot.getPosition().getX(), (((robot.getPosition().getY()) + ((robot.getHeight()) / 2)) + 0.03)), java.awt.Color.MAGENTA); nearWallLabel.draw(g, scaler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6872/buggy-version/src.balle.main.SimpleWorldGUI.java", "BodyUseAPI": ["balle.world.objects.Robot.getHeight()", "balle.world.objects.Robot.getPosition()", "robot.getPosition().getX()", "robot.getPosition().getY()", "balle.world.objects.Robot.getPosition()"], "Fixed commit": "c4d936c79d6c33ac08206985b7588a9a07995996", "Url": "https://api.github.com/repos/sauliusl/edisdp2012-4", "Date": "2012-04-02T22:28:01Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue().getColumnType().getDataType()) == com.datastax.driver.core.com.stratio.crossdata.common.metadata.DataType) { if (entry.getValue().getColumnType().getDbType().equals(\"timestamp\")) { sb.append(\"{type:\\\"date\\\"}\"); }else { sb.append(\"{type:\\\"\").append(entry.getValue().getColumnType().getDbType()).append(\"\\\"}\"); } }else { sb.append(com.stratio.connector.cassandra.statements.CreateIndexStatement.luceneTypes.get(entry.getValue().getColumnType().getDataType())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1696/buggy-version/src.main.java.com.stratio.connector.cassandra.statements.CreateIndexStatement.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.util.Map.Entry<com.stratio.crossdata.common.data.ColumnName, com.stratio.crossdata.common.metadata.ColumnMetadata>.getValue()", "entry.getValue().getColumnType().getDbType().equals(java.lang.String)", "java.util.Map.Entry<com.stratio.crossdata.common.data.ColumnName, com.stratio.crossdata.common.metadata.ColumnMetadata>.getValue()", "java.lang.StringBuilder.append(entry.getValue().getColumnType().getDbType())", "entry.getValue().getColumnType()", "entry.getValue().getColumnType().getDataType()", "entry.getValue().getColumnType().getDbType()", "java.util.Map<com.datastax.driver.core.DataType, java.lang.String>.get(entry.getValue().getColumnType().getDataType())", "entry.getValue().getColumnType().getDbType()", "entry.getValue().getColumnType()", "entry.getValue().getColumnType()", "java.lang.StringBuilder.append(com.stratio.connector.cassandra.statements.CreateIndexStatement.luceneTypes.get(entry.getValue().getColumnType().getDataType()))", "java.util.Map.Entry<com.stratio.crossdata.common.data.ColumnName, com.stratio.crossdata.common.metadata.ColumnMetadata>.getValue()"], "Fixed commit": "a80acaf117f81d936971db266624a02a27e1bb88", "Url": "https://api.github.com/repos/Stratio/stratio-connector-cassandra", "Date": "2015-02-20T12:17:16Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["camelContext.getClassResolver().resolveClass(actualSchema.getFullName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (clazz != null) { classLoader = clazz.getClassLoader(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2141/buggy-version/components.camel-avro.src.main.java.org.apache.camel.dataformat.avro.AvroDataFormat.java", "BodyUseAPI": ["java.lang.Class<?>.getClassLoader()"], "Fixed commit": "fafa34a3fc61e1545f397632e14719f81b5e4311", "Url": "https://api.github.com/repos/tdiesler/camel", "Date": "2016-09-01T07:36:04Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (leg.isTransit()) { leg.setIntermediateStops(intermediateResponse.getStops(leg.getDetailRef())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8174/buggy-version/sthlmtraveling.src.main.java.com.markupartist.sthlmtraveling.ViewOnMapActivity.java", "BodyUseAPI": ["com.markupartist.sthlmtraveling.data.models.IntermediateResponse.getStops(leg.getDetailRef())", "com.markupartist.sthlmtraveling.data.models.Leg.setIntermediateStops(intermediateResponse.getStops(leg.getDetailRef()))", "com.markupartist.sthlmtraveling.data.models.Leg.getDetailRef()"], "Fixed commit": "4bbaefba0d27062a7627cc3e164c117404100c9d", "Url": "https://api.github.com/repos/willgurht/sthlmtraveling", "Date": "2016-01-24T09:45:19Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(net.wequick.small.ApkBundleLauncher.sLoadedActivities.containsKey(activityName))) { java.lang.String tempActivityName = activityName + \"Activity\"; if (net.wequick.small.ApkBundleLauncher.sLoadedActivities.containsKey(tempActivityName)) activityName = tempActivityName; else throw new android.content.ActivityNotFoundException(((\"Unable to find explicit activity class { \" + activityName) + \" }\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4691/buggy-version/Android.DevSample.small.src.main.java.net.wequick.small.ApkBundleLauncher.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, android.content.pm.ActivityInfo>.containsKey(java.lang.String)"], "Fixed commit": "ff2d3601059c8c1d7de9f25b1ba8ee7545140b31", "Url": "https://api.github.com/repos/wequick/Small", "Date": "2016-03-29T07:56:55Z"},
{"Line": "=>510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.cscott.sdr.calls.DancerPath.tangentStart()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(Point.ZERO.equals(initialTangent))) { net.cscott.sdr.calls.ExactRotation initialDir = net.cscott.sdr.calls.ExactRotation.fromXY(initialTangent.x, initialTangent.y); sweep = curR.minSweep(initialDir); if ((sweep.abs().compareTo(Fraction.ONE_QUARTER)) > 0) { dp = rollToTarget(current, target); ds.add(sd, dp); current = dp.to; time = time.add(dp.time); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/31/buggy-version/src.net.cscott.sdr.calls.lists.BasicList.java", "BodyUseAPI": ["net.cscott.sdr.calls.ExactRotation.fromXY(initialTangent.x,initialTangent.y)"], "Fixed commit": "830858443120367e0f72941e39835bd2b9714d00", "Url": "https://api.github.com/repos/cscott/SDR", "Date": "2012-11-16T17:50:24Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (new java.io.File(((root + \"/\") + (file.name))).exists()) { com.brashmonkey.spriter.FileReference ref = new com.brashmonkey.spriter.FileReference(folder.id, file.id); this.resources.put(ref, this.loadResource(ref)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8620/buggy-version/Spriter.src.com.brashmonkey.spriter.Loader.java", "BodyUseAPI": [], "Fixed commit": "3bdd9a7a173bea39fef1929cebeefafad126b366", "Url": "https://api.github.com/repos/Trixt0r/spriter", "Date": "2014-04-25T19:18:28Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.intelliware.ihtsdo.mlds.repository.UserRepository.getUserByEmail(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (user == null) { return new org.springframework.http.ResponseEntity(org.springframework.http.HttpStatus.BAD_REQUEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2692/buggy-version/src.main.java.ca.intelliware.ihtsdo.mlds.web.rest.PasswordResetResource.java", "BodyUseAPI": [], "Fixed commit": "54c9aaf5d8d09e514b7dd1c32fdbc5132750b9e1", "Url": "https://api.github.com/repos/IHTSDO/MLDS", "Date": "2014-08-06T16:50:43Z"},
{"Line": "=>757", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.get(SAML2AuthConstants.Config.Name.SIGNATURE_ALGO)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (sigAlgObj != null) { sigAlg = ((java.lang.String) (sigAlgObj)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5980/buggy-version/components.org.wso2.carbon.identity.authenticator.outbound.saml2sso.src.main.java.org.wso2.carbon.identity.authenticator.outbound.saml2sso.authenticator.SAML2SSOAuthenticator.java", "BodyUseAPI": [], "Fixed commit": "ef44f30dda03d5fdde4c2aa2b0ad72d501ec1a23", "Url": "https://api.github.com/repos/wso2-extensions/identity-outbound-auth-samlsso", "Date": "2017-03-15T12:03:38Z"},
{"Line": "=>769", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.get(SAML2AuthConstants.Config.Name.DIGEST_ALGO)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (digAlgoObj != null) { digAlg = ((java.lang.String) (digAlgoObj)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5980/buggy-version/components.org.wso2.carbon.identity.authenticator.outbound.saml2sso.src.main.java.org.wso2.carbon.identity.authenticator.outbound.saml2sso.authenticator.SAML2SSOAuthenticator.java", "BodyUseAPI": [], "Fixed commit": "ef44f30dda03d5fdde4c2aa2b0ad72d501ec1a23", "Url": "https://api.github.com/repos/wso2-extensions/identity-outbound-auth-samlsso", "Date": "2017-03-15T12:03:38Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ver0.EnemyActor.getEnemies()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((enemies[i]) != null) { if ((enemies[i].getNumDefeated()) > 0) { java.lang.System.out.println(((choice + \") \") + (enemies[i].getName()))); choice++; indexRepresentedByChoice[choice] = i; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5541/buggy-version/GenericRPG.src.ver0.Library.java", "BodyUseAPI": ["enemies[i].getNumDefeated()", "enemies[i].getName()", "java.io.PrintStream.println(((choice + \") \") + (enemies[i].getName())))"], "Fixed commit": "25c0f3141d8c03d8f3b67d22c5906100da9b5870", "Url": "https://api.github.com/repos/austinBailey5624/GenericRPGConsole", "Date": "2016-05-02T04:39:14Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ver0.EnemyActor.getEnemies()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((enemies[i]) != null) { if ((enemies[i].getNumDefeated()) > 0) { isEmpty = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5541/buggy-version/GenericRPG.src.ver0.Library.java", "BodyUseAPI": ["enemies[i].getNumDefeated()"], "Fixed commit": "25c0f3141d8c03d8f3b67d22c5906100da9b5870", "Url": "https://api.github.com/repos/austinBailey5624/GenericRPGConsole", "Date": "2016-05-02T04:39:14Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getEquippedSword()) == null) { java.lang.System.out.println(((((((player.getName()) + \" attacks \") + (npc.getName())) + \" with no sword , dealing \") + difference) + \" damage!\\n\")); }else { java.lang.System.out.println(((((((((player.getName()) + \" attacks \") + (npc.getName())) + \" with a \") + (player.getEquippedSword().getName())) + \", dealing \") + difference) + \" damage!\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5541/buggy-version/GenericRPG.src.ver0.Battle.java", "BodyUseAPI": ["java.io.PrintStream.println(((((((player.getName()) + \" attacks \") + (npc.getName())) + \" with no sword , dealing \") + difference) + \" damage!\\n\"))", "java.io.PrintStream.println(((((((((player.getName()) + \" attacks \") + (npc.getName())) + \" with a \") + (player.getEquippedSword().getName())) + \", dealing \") + difference) + \" damage!\\n\"))", "player.getEquippedSword().getName()", "ver0.PlayerActor.getName()", "ver0.PlayerActor.getName()", "ver0.PlayerActor.getEquippedSword()"], "Fixed commit": "25c0f3141d8c03d8f3b67d22c5906100da9b5870", "Url": "https://api.github.com/repos/austinBailey5624/GenericRPGConsole", "Date": "2016-05-02T04:39:14Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getEquippedSword()) == null) { java.lang.System.out.println(((((((player.getName()) + \" attacks \") + (npc.getName())) + \" with no sword, dealing \") + difference) + \" damage!\\n\")); }else { java.lang.System.out.println(((((((((player.getName()) + \" attacks \") + (npc.getName())) + \" with a \") + (player.getEquippedSword().getName())) + \", dealing \") + difference) + \" damage!\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5541/buggy-version/GenericRPG.src.ver0.Battle.java", "BodyUseAPI": ["ver0.PlayerActor.getName()", "java.io.PrintStream.println(((((((((player.getName()) + \" attacks \") + (npc.getName())) + \" with a \") + (player.getEquippedSword().getName())) + \", dealing \") + difference) + \" damage!\\n\"))", "java.io.PrintStream.println(((((((player.getName()) + \" attacks \") + (npc.getName())) + \" with no sword, dealing \") + difference) + \" damage!\\n\"))", "ver0.PlayerActor.getName()", "player.getEquippedSword().getName()", "ver0.PlayerActor.getEquippedSword()"], "Fixed commit": "25c0f3141d8c03d8f3b67d22c5906100da9b5870", "Url": "https://api.github.com/repos/austinBailey5624/GenericRPGConsole", "Date": "2016-05-02T04:39:14Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) == 5) { java.lang.System.out.println(\"Using custom connection...\"); com.mysql.jdbc.jdbc2.optional.MysqlDataSource basicDataSource = new com.mysql.jdbc.jdbc2.optional.MysqlDataSource(); basicDataSource.setUser(args[3]); basicDataSource.setPassword(args[4]); basicDataSource.setServerName(args[1]); basicDataSource.setPort(java.lang.Integer.parseInt(args[2])); basicDataSource.setDatabaseName(args[5]); }else { pmngr = new org.sigaim.siie.db.sql.SQLPersistenceManager(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1938/buggy-version/src.org.sigaim.siie.seql.monitor.SEQLMonitor.java", "BodyUseAPI": ["com.mysql.jdbc.jdbc2.optional.MysqlDataSource.setPort(int)", "com.mysql.jdbc.jdbc2.optional.MysqlDataSource.setUser(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "com.mysql.jdbc.jdbc2.optional.MysqlDataSource.setPassword(java.lang.String)", "com.mysql.jdbc.jdbc2.optional.MysqlDataSource.setServerName(java.lang.String)", "com.mysql.jdbc.jdbc2.optional.MysqlDataSource.setDatabaseName(java.lang.String)"], "Fixed commit": "6a542b23a01bb08bcde56b5ec0b17082377a4d98", "Url": "https://api.github.com/repos/aldoilsant/sigaim-siie", "Date": "2014-07-13T17:03:48Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entry.getValue()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/252/buggy-version/src.main.java.com.gmail.woodyc40.topics.cmd.Inspect.java", "BodyUseAPI": [], "Fixed commit": "74546be3b3463467800dde1eaf2943c0e1f55b57", "Url": "https://api.github.com/repos/AgentTroll/jdb", "Date": "2017-10-02T16:30:17Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.flamie.Main.in.hasNextInt()) { int num = org.flamie.Main.in.nextInt(); if ((num <= 9) && (num >= 0)) { org.flamie.Main.userArray.set(elementsCounter, num); elementsCounter += 1; }else { java.lang.System.out.println(\"\u0427\u0438\u0441\u043b\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u043e\u0442 \u043d\u0443\u043b\u044f \u0434\u043e \u0434\u0435\u0432\u044f\u0442\u0438\"); } }else { org.flamie.Main.in.next(); java.lang.System.out.println(\"\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 \u0432\u0432\u043e\u0434!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1124/buggy-version/src.org.flamie.Main.java", "BodyUseAPI": ["java.util.Scanner.next()", "java.util.Scanner.nextInt()"], "Fixed commit": "c0b1bf9de521e2ab74e994db9002a303e95db889", "Url": "https://api.github.com/repos/Ctyode/Bulls-and-Cows", "Date": "2017-01-28T18:44:11Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<K, java.util.Set<V>>.get(K)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (res == null) return java.util.Collections.EMPTY_SET;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1260/buggy-version/src.main.java.com.dataheaps.beanszoo.utils.Multimap.java", "BodyUseAPI": [], "Fixed commit": "a98df572d8dec7b7d84c2cc162909c4f03838ca5", "Url": "https://api.github.com/repos/pelatimtt/beanszoo", "Date": "2017-02-26T08:21:13Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((end - start) > 50) throw new org.immopoly.common.ImmopolyException(org.immopoly.common.ImmopolyException.MISSING_PARAMETER_START_END, (((\"end - start > 50 \" + startS) + \",\") + endS));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5921/buggy-version/src.org.immopoly.appengine.actions.ActionUserHistory.java", "BodyUseAPI": [], "Fixed commit": "3bee428d9757417c393c8e3cbd8b47cc850a5d41", "Url": "https://api.github.com/repos/immopoly/appengine", "Date": "2011-11-28T14:53:48Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (mCamera != null) { mCamera.release(); }else { canUse = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3982/buggy-version/camera.src.main.java.com.cjt2325.cameralibrary.util.CheckPermission.java", "BodyUseAPI": ["android.hardware.Camera.release()"], "Fixed commit": "463800c1d1159f9f482e7c25432fcfe9492fbd4e", "Url": "https://api.github.com/repos/CJT2325/CameraView", "Date": "2017-06-15T09:59:37Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sds.util.AccessFlags.checkFlag(accessFlag, sds.util.AccessFlags.ACC_STATIC)) sb.append(\"static \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3708/buggy-version/src.main.java.sds.util.AccessFlags.java", "BodyUseAPI": [], "Fixed commit": "f70721acc3e89bfb6a0f0b9baccf9cd520aaf6da", "Url": "https://api.github.com/repos/g1144146/SDS", "Date": "2016-04-29T05:00:25Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (admin.tableExists(Cons.raw_data)) { admin.disableTable(Cons.raw_data); admin.deleteTable(Cons.raw_data); Main.logger.info((\"Table deleted: \" + (hbase.Cons.raw_data))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/75/buggy-version/data_stream_simulator.src.main.java.Main.java", "BodyUseAPI": ["org.apache.hadoop.hbase.client.HBaseAdmin.deleteTable(Cons.raw_data)", "org.apache.hadoop.hbase.client.HBaseAdmin.disableTable(Cons.raw_data)"], "Fixed commit": "d2c743f91bb2c68c3695347af16398bbedb43651", "Url": "https://api.github.com/repos/nickozoulis/thunderstorm", "Date": "2015-11-28T15:20:22Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (observer != null) observer.didFoundConnection();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4025/buggy-version/src.main.java.br.com.apuri.manager.ApuriConnectionManager.java", "BodyUseAPI": ["br.com.apuri.manager.ApuriConnectionManager.ApuriConnectionObserver.didFoundConnection()"], "Fixed commit": "1bcad26ce8a08be66de6d3ecdf9714133d9b0f43", "Url": "https://api.github.com/repos/apuridev/apuri-lib", "Date": "2015-03-21T14:53:16Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Main.classItems[i][j]) == null) temp = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8439/buggy-version/app.src.main.java.com.zigapk.gimvic.suplence.Other.java", "BodyUseAPI": [], "Fixed commit": "8517e7590aa8b57df8844c8dd8d5dd627c469307", "Url": "https://api.github.com/repos/GimVic-app/gimvic-android", "Date": "2015-01-10T16:55:43Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (evidence.gui.ClientWindow.rPackage.getFrontWall().getImageName().equals(\"obj/outside.png\")) { this.roomText.setText(((\"Location: \" + (evidence.gui.ClientWindow.rPackage.getCurrentRoom())) + \"\\n\\n\")); this.roomText.append(evidence.gui.ClientWindow.rPackage.getFeedback()); }else { this.roomText.setText(((((\"Location: \" + (evidence.gui.ClientWindow.rPackage.getFrontWall().getDirection())) + \" wall of the \") + (evidence.gui.ClientWindow.rPackage.getCurrentRoom())) + \"\\n\\n\")); this.roomText.append(evidence.gui.ClientWindow.rPackage.getFeedback()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/381/buggy-version/src.evidence.gui.ClientWindow.java", "BodyUseAPI": ["evidence.gui.ClientWindow.rPackage.getFrontWall().getDirection()", "evidence.clientserver.infoholders.RenderPackage.getCurrentRoom()", "evidence.clientserver.infoholders.RenderPackage.getFeedback()", "javax.swing.JTextArea.setText(((((\"Location: \" + (evidence.gui.ClientWindow.rPackage.getFrontWall().getDirection())) + \" wall of the \") + (evidence.gui.ClientWindow.rPackage.getCurrentRoom())) + \"\\n\\n\"))", "javax.swing.JTextArea.append(evidence.gui.ClientWindow.rPackage.getFeedback())", "evidence.clientserver.infoholders.RenderPackage.getFrontWall()", "javax.swing.JTextArea.setText(((\"Location: \" + (evidence.gui.ClientWindow.rPackage.getCurrentRoom())) + \"\\n\\n\"))", "javax.swing.JTextArea.append(evidence.gui.ClientWindow.rPackage.getFeedback())", "evidence.clientserver.infoholders.RenderPackage.getCurrentRoom()", "evidence.clientserver.infoholders.RenderPackage.getFeedback()"], "Fixed commit": "86a2ca39db7ee15f7dab48202cdb4d51423897e0", "Url": "https://api.github.com/repos/georginamurphy/Evidence", "Date": "2016-10-11T06:18:07Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (visible) { playGroup.open(); }else { playGroup.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1509/buggy-version/src.beetracker.UIControl.java", "BodyUseAPI": [], "Fixed commit": "60de228467abc1f2295df3f30014908ee9944426", "Url": "https://api.github.com/repos/darthyoshi/beetracker", "Date": "2015-07-20T03:21:07Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (visible) { setupGroup.open(); }else { setupGroup.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1509/buggy-version/src.beetracker.UIControl.java", "BodyUseAPI": [], "Fixed commit": "60de228467abc1f2295df3f30014908ee9944426", "Url": "https://api.github.com/repos/darthyoshi/beetracker", "Date": "2015-07-20T03:21:07Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (visible) { thresholdGroup.open(); }else { thresholdGroup.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1509/buggy-version/src.beetracker.UIControl.java", "BodyUseAPI": [], "Fixed commit": "60de228467abc1f2295df3f30014908ee9944426", "Url": "https://api.github.com/repos/darthyoshi/beetracker", "Date": "2015-07-20T03:21:07Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(estimtedDelivery.equals(\"null\"))) { getRecentPregnancy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3953/buggy-version/src.ie.teamchile.smartapp.activities.ServiceUserActivity.java", "BodyUseAPI": [], "Fixed commit": "8ec67911e94957574b317322ea2233646cfad4eb", "Url": "https://api.github.com/repos/otormaigh/SMART", "Date": "2015-03-31T09:47:10Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (destinationCountry == (CountryCode.IE)) { this.postalOrZipCode = \"-\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5412/buggy-version/pwinty-java-sdk.src.main.uk.co.mattburns.pwinty.v2_1.Order.java", "BodyUseAPI": [], "Fixed commit": "408706d1e5d39fec84435d043e0d3e51f38b2d83", "Url": "https://api.github.com/repos/mattburns/pwinty-java-sdk", "Date": "2014-08-13T14:36:01Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(part.equals(activeModelReviewPart))) { activeModelReviewPart = part; updateValues(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1814/buggy-version/plugins.at.bitandart.zoubek.mervin.src.at.bitandart.zoubek.mervin.review.ModelReviewEditorTrackingView.java", "BodyUseAPI": [], "Fixed commit": "85cae5d3efbd74eac238e67839099c5b7fa38ae9", "Url": "https://api.github.com/repos/theArchonius/mervin", "Date": "2015-06-21T09:47:02Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((perusahaan) == null) setPerusahaan(pelanggan.getPerusahaan());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/624/buggy-version/src.com.unitedvision.tvkabel.web.document.pdf.KartuPelangganPdfView.java", "BodyUseAPI": [], "Fixed commit": "cd5a95a8f50ee519f3d7d0b195b634e8a4caf1b6", "Url": "https://api.github.com/repos/uvsystem/tvkabel", "Date": "2015-01-13T04:46:28Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.voldemortConfig) != null) { hadoopConfigPath = this.voldemortConfig.getHadoopConfigPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8134/buggy-version/contrib.hadoop-store-builder.src.java.voldemort.store.readonly.fetcher.HdfsFetcher.java", "BodyUseAPI": [], "Fixed commit": "3b6c28255127400cf8c79f788411b4c966e8926c", "Url": "https://api.github.com/repos/baepiff/voldemort", "Date": "2013-01-14T02:52:29Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((currentJob.getTriggerStatus()) == (PhotoSerie.TriggerJobStatus.WAITFORUSER)) && (((alertDialog) == null) || (!(alertDialog.isShowing())))) { currentJob.setTriggerStatus(PhotoSerie.TriggerJobStatus.NEW); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8576/buggy-version/AzoCamSyncTriggerService.src.de.quadrillenschule.azocamsynca.job.JobProcessor.java", "BodyUseAPI": ["de.quadrillenschule.azocamsynca.job.TriggerPhotoSerie.setTriggerStatus(PhotoSerie.TriggerJobStatus.NEW)"], "Fixed commit": "10905d8380f57f08a810984601341f8cd66aa3c7", "Url": "https://api.github.com/repos/andizottmann/AZoCamSync", "Date": "2015-03-30T17:17:39Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result.hasErrors()) { modelMap.put(\"sent_notifications\", notificationService.getCurrentUserSentNotifications()); modelMap.put(\"received_notifications\", userNotificationService.getCurrentUserUserNotifications()); modelMap.put(\"groups_1\", userGroupService.getUserGroupsByCourse(1)); modelMap.put(\"groups_2\", userGroupService.getUserGroupsByCourse(2)); modelMap.put(\"groups_3\", userGroupService.getUserGroupsByCourse(3)); modelMap.put(\"groups_4\", userGroupService.getUserGroupsByCourse(4)); modelMap.put(\"groups_5\", userGroupService.getUserGroupsByCourse(5)); modelMap.put(\"groups_6\", userGroupService.getUserGroupsByCourse(6)); return \"notification/extended-notifications\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2801/buggy-version/src.main.java.com.itis.controller.NotificationController.java", "BodyUseAPI": [], "Fixed commit": "7f6bef02e7d93ee3eeaee97c0926ee5dfa520424", "Url": "https://api.github.com/repos/levzakharov/itis-webapp", "Date": "2017-05-23T11:37:29Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["irctots3chat.getTS3().getAPI()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (api != null) { api.sendChannelMessage(((nickname + \" : \") + message)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/583/buggy-version/src.main.java.net.phillm.irctots3chat.IRCListener.java", "BodyUseAPI": ["com.github.theholywaffle.teamspeak3.TS3Api.sendChannelMessage(java.lang.String)"], "Fixed commit": "7e5bbb2f151ad68be87ccad4461b543d10569651", "Url": "https://api.github.com/repos/phillmac/ChatBridge", "Date": "2015-12-08T02:44:30Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (relevantEnd < 0) throw new java.text.ParseException((((\"Can't find end of value: \" + jsonName) + \", relevantString: \") + relevantString), relevantEnd);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6437/buggy-version/JSONDateUtils.java", "BodyUseAPI": [], "Fixed commit": "222015f2d3ee131d8760429e15ec6817c5c8c990", "Url": "https://api.github.com/repos/amirgur1/JSON-java", "Date": "2014-09-08T20:19:10Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (relevantEnd < 0) relevantEnd = relevantString.indexOf('}');", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6437/buggy-version/JSONDateUtils.java", "BodyUseAPI": [], "Fixed commit": "222015f2d3ee131d8760429e15ec6817c5c8c990", "Url": "https://api.github.com/repos/amirgur1/JSON-java", "Date": "2014-09-08T20:19:10Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x.value) == 0) return 0; else return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8306/buggy-version/TrieST.java", "BodyUseAPI": [], "Fixed commit": "e447180722310e2bcb8aedac3bcb0a3b8f60e6d4", "Url": "https://api.github.com/repos/ani555/TextEditor-with-autocomplete", "Date": "2015-07-03T08:50:00Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sourceforge.pmd.lang.apex.ast.ASTVariableExpression.getFirstChildOfType(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (ref != null) { if ((ref.getNode().getJadtIdentifiers().size()) == 1) { objectName = (ref.getNode().getJadtIdentifiers().get(0).value) + \".\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3946/buggy-version/pmd-apex.src.main.java.net.sourceforge.pmd.lang.apex.rule.security.ApexXSSFromURLParamRule.java", "BodyUseAPI": ["ref.getNode().getJadtIdentifiers().size()", "ref.getNode().getJadtIdentifiers()", "net.sourceforge.pmd.lang.apex.ast.ASTReferenceExpression.getNode()", "ref.getNode().getJadtIdentifiers().get(int)", "net.sourceforge.pmd.lang.apex.ast.ASTReferenceExpression.getNode()", "ref.getNode().getJadtIdentifiers()"], "Fixed commit": "2d10c55e3f63ac9a54036a214ec216248ca9b331", "Url": "https://api.github.com/repos/Monits/pmd", "Date": "2016-12-03T00:11:31Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ctx.numbered) != null) { name = ctx.numbered.name.getText(); }else { name = ctx.named.name.getText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4189/buggy-version/projects.batfish.src.batfish.grammar.cisco.controlplane.CiscoControlPlaneExtractor.java", "BodyUseAPI": ["ctx.named.name.getText()", "ctx.numbered.name.getText()"], "Fixed commit": "ab4424ce2b895923f3b72462cbd0c7167d69a511", "Url": "https://api.github.com/repos/arifogel/batfish", "Date": "2014-07-02T06:05:31Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inputView) == null) android.util.Log.d(TAG, \"inputView == null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6261/buggy-version/client.Android.RemoteControl.app.src.main.java.net.mindwalkers.control.Keyboard.java", "BodyUseAPI": [], "Fixed commit": "4cec9f2460bc05b258aa468d54b1c23e5e4b55fe", "Url": "https://api.github.com/repos/JohnJacket/control", "Date": "2017-05-16T08:24:16Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.serviceInstance.getServiceImpl().getServiceClient()) != null) servImpl.setServiceClient(new java.net.URI(this.serviceInstance.getServiceImpl().getServiceClient())); else servImpl.setServiceClient(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/849/buggy-version/css-modules.serviceRegistry.src.main.java.org.societies.platform.servicelifecycle.serviceRegistry.model.RegistryEntry.java", "BodyUseAPI": ["org.societies.api.schema.servicelifecycle.model.ServiceImplementation.setServiceClient(java.net.URI)", "this.serviceInstance.getServiceImpl().getServiceClient()", "org.societies.platform.servicelifecycle.serviceRegistry.model.ServiceInstanceDAO.getServiceImpl()"], "Fixed commit": "b6258d56945c601b358011a08d7489384a12bd7b", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2012-09-14T15:21:32Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offsetCount) == 1) { mostCurrentId = result.getCurrentId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3713/buggy-version/streams-contrib.streams-provider-sysomos.src.main.java.org.apache.streams.sysomos.provider.SysomosHeartbeatStream.java", "BodyUseAPI": [], "Fixed commit": "cd961513397ad234762f59b170b62bfa847b9029", "Url": "https://api.github.com/repos/w2ogroup/incubator-streams", "Date": "2014-05-26T15:43:12Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isWindowsNotLimit(shineButton.activity)) { shineButton.activity.getWindow().getDecorView().getLocalVisibleRect(visibleFrame); }else { shineButton.activity.getWindow().getDecorView().getWindowVisibleDisplayFrame(visibleFrame); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/199/buggy-version/shinebuttonlib.src.main.java.com.sackcentury.shinebuttonlib.ShineView.java", "BodyUseAPI": ["shineButton.activity.getWindow()", "shineButton.activity.getWindow()", "shineButton.activity.getWindow().getDecorView()", "shineButton.activity.getWindow().getDecorView().getLocalVisibleRect(android.graphics.Rect)", "shineButton.activity.getWindow().getDecorView()", "shineButton.activity.getWindow().getDecorView().getWindowVisibleDisplayFrame(android.graphics.Rect)"], "Fixed commit": "60cf1edfb34464c8d88812a2fd82b50ddcb3c5b7", "Url": "https://api.github.com/repos/ChadCSong/ShineButton", "Date": "2017-11-13T08:39:11Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/199/buggy-version/app.src.main.java.com.sackcentury.shinebutton.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "60cf1edfb34464c8d88812a2fd82b50ddcb3c5b7", "Url": "https://api.github.com/repos/ChadCSong/ShineButton", "Date": "2017-11-13T08:39:11Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((pixelGrid.getCellsAsList()) == null) || (pixelGrid.getCellsAsList().isEmpty())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/704/buggy-version/app.src.main.java.com.android.kaffka.arduinoledpainel.activities.FullscreenActivity.java", "BodyUseAPI": [], "Fixed commit": "3bf5a8b505798759bacf5dcc43aabcbd7099e40f", "Url": "https://api.github.com/repos/gkaffka/arduinoledpanel", "Date": "2017-03-10T11:08:02Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue()) != null) { body = body.replace(((\"${\" + (entry.getKey())) + \"}\"), entry.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1207/buggy-version/src.main.java.br.com.moip.mockkid.service.ResponseMatcher.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "dfa02d934583e697e91debedf9758f2033755a1f", "Url": "https://api.github.com/repos/moip/mockkid", "Date": "2017-12-28T20:56:15Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isJson) { return br.com.moip.mockkid.variable.resolver.body.JSONBodyVariableResolver.extractValueFromJson(name, request); }else if (isXml) { return br.com.moip.mockkid.variable.resolver.body.XMLBodyVariableResolver.extractValueFromXml(name, request); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1207/buggy-version/src.main.java.br.com.moip.mockkid.variable.resolver.BodyVariableResolver.java", "BodyUseAPI": [], "Fixed commit": "dfa02d934583e697e91debedf9758f2033755a1f", "Url": "https://api.github.com/repos/moip/mockkid", "Date": "2017-12-28T20:56:15Z"},
{"Line": "=>740", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(parent instanceof org.zkoss.zk.ui.metainfo.ShadowInfo)) { new org.zkoss.zk.ui.metainfo.TextInfo(parent, label); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2018/buggy-version/zk.src.org.zkoss.zk.ui.metainfo.Parser.java", "BodyUseAPI": [], "Fixed commit": "3c4808c7cb1a26326f66fabe6e849b374c0298ad", "Url": "https://api.github.com/repos/christopher-szu/zk", "Date": "2015-09-04T02:25:55Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((allscores.size()) < 10) { spaceinvaders.HighscoreManager.getInstance().clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5688/buggy-version/src.main.java.spaceinvaders.ScoreMenu.java", "BodyUseAPI": [], "Fixed commit": "9a394d8adde30479ec1fa8115ac6db18907901a8", "Url": "https://api.github.com/repos/Jeroemaster/SpaceInvaders", "Date": "2015-10-30T16:37:54Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bahmni.csv.column.CSVColumns<T>.getPosition(headerAnnotation.name(),int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (headerColumnValueNotFoundForMandatoryColumn(aRow, position)) throw new org.bahmni.csv.exception.MigrationException((\"No Value found in the csv file for the column \" + (headerAnnotation.name())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3534/buggy-version/bahmni-migrator.src.main.java.org.bahmni.csv.column.CSVColumns.java", "BodyUseAPI": [], "Fixed commit": "f08ba60923c3760905a5eb904569d47451bcb7a0", "Url": "https://api.github.com/repos/Bahmni/bahmni-java-utils", "Date": "2016-09-02T12:04:02Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (eConfig.isEnabled()) { eConfig.onRegistered(); evilcraft.EvilCraft.log((\"Registered \" + (eConfig.NAMEDID))); processedConfigs.add(eConfig); evilcraft.EvilCraft.addInitListeners(new evilcraft.api.config.ConfigHandler.ConfigInitListener(eConfig)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6134/buggy-version/src.main.java.evilcraft.api.config.ConfigHandler.java", "BodyUseAPI": ["evilcraft.EvilCraft.log((\"Registered \" + (eConfig.NAMEDID)))", "evilcraft.api.config.ExtendedConfig<?>.onRegistered()", "java.util.LinkedHashSet<evilcraft.api.config.ExtendedConfig>.add(evilcraft.api.config.ExtendedConfig<?>)", "evilcraft.EvilCraft.addInitListeners(evilcraft.api.config.ConfigHandler.ConfigInitListener)"], "Fixed commit": "c40a496a9b1b9d4b7ea075eff0b2aca55030b6e4", "Url": "https://api.github.com/repos/rubensworks/EvilCraft", "Date": "2014-09-04T11:45:11Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (appendable == null) { return \"\"; }else if (appendable instanceof java.lang.StringBuilder) { return appendable.toString(); }else { return ((java.lang.CharSequence) (appendable)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2119/buggy-version/app.src.main.java.com.hippo.util.TextUtils2.java", "BodyUseAPI": ["java.lang.Appendable.toString()"], "Fixed commit": "d059368ecca203de67088d88da60e9aa9b16e6ab", "Url": "https://api.github.com/repos/seven332/Nimingban", "Date": "2015-09-04T18:11:40Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sequence == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2119/buggy-version/app.src.main.java.com.hippo.util.TextUtils2.java", "BodyUseAPI": [], "Fixed commit": "d059368ecca203de67088d88da60e9aa9b16e6ab", "Url": "https://api.github.com/repos/seven332/Nimingban", "Date": "2015-09-04T18:11:40Z"},
{"Line": "=>558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.csstudio.opibuilder.widgets.editparts.XYGraphEditPart.getPV(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (pv != null) { for (org.epics.vtype.VType o : pv.getAllBufferedValues()) { setYValue(trace, dataProvider, o); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4901/buggy-version/applications.opibuilder.opibuilder-plugins.org.csstudio.opibuilder.widgets.src.org.csstudio.opibuilder.widgets.editparts.XYGraphEditPart.java", "BodyUseAPI": ["org.csstudio.simplepv.IPV.getAllBufferedValues()"], "Fixed commit": "8d64dad81e9b1053fa91edd0057a9481f591eaa6", "Url": "https://api.github.com/repos/dls-controls/cs-studio", "Date": "2015-05-22T13:43:42Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(unreachableEips.isEmpty())) { com.netflix.eureka.util.EIPManager.logger.info(\"Added unreachable EIPs {} to the available EIP list. Final EIP list is {}\", unreachableEips, availableEIPList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7033/buggy-version/eureka-core.src.main.java.com.netflix.eureka.util.EIPManager.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String,java.util.List<java.lang.String>,java.util.List<java.lang.String>)"], "Fixed commit": "086a7b17ce02d9126c066d97803300c9b89b331f", "Url": "https://api.github.com/repos/NiteshKant/eureka", "Date": "2013-07-29T23:19:44Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.junit.runners.model.FrameworkMethod.getReturnType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sig.canAcceptArrayType(type)) { addArrayValues(dataPointsMethod.getName(), list, dataPointsMethod.invokeExplosively(null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6599/buggy-version/src.main.java.org.junit.experimental.theories.internal.AllMembersSupplier.java", "BodyUseAPI": [], "Fixed commit": "2a9a848f6fedcf34c7a0ee5a4592f7b1735cc591", "Url": "https://api.github.com/repos/maraist/junit", "Date": "2011-04-26T14:27:51Z"},
{"Line": "=>739", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((identifiedVersion == null) || (\"-\".equals(identifiedVersion.toString()))) { if (prevAffected) { affected = true; } }else if ((identifiedVersion.equals(v)) || (prevAffected && ((identifiedVersion.compareTo(v)) < 0))) { if (isStruts) { if (identifiedVersion.getVersionParts().get(0).equals(v.getVersionParts().get(0))) { affected = true; } }else { affected = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/78/buggy-version/dependency-check-core.src.main.java.org.owasp.dependencycheck.data.nvdcve.CveDB.java", "BodyUseAPI": ["org.owasp.dependencycheck.utils.DependencyVersion.getVersionParts()", "org.owasp.dependencycheck.utils.DependencyVersion.equals(org.owasp.dependencycheck.utils.DependencyVersion)", "identifiedVersion.getVersionParts().get(int)", "identifiedVersion.getVersionParts().get(0).equals(v.getVersionParts().get(0))", "org.owasp.dependencycheck.utils.DependencyVersion.compareTo(org.owasp.dependencycheck.utils.DependencyVersion)"], "Fixed commit": "4319a350ac56fc2eb160e0f30f2d5f8daf2801cd", "Url": "https://api.github.com/repos/jeremylong/DependencyCheck", "Date": "2014-05-07T11:05:37Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.displacementX) == 0) || ((this.displacementY) == 0)) { this.displacementX = (cursor.getX()) - (getMascot().getAnchor().x); this.displacementY = (cursor.getY()) - (getMascot().getAnchor().y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3800/buggy-version/src.com.group_finity.mascot.action.Dragged.java", "BodyUseAPI": [], "Fixed commit": "3dcff5d0dc9bf94df28780929fde49dc0b613de4", "Url": "https://api.github.com/repos/AlanJager/shimeji4mac", "Date": "2016-11-30T07:55:53Z"},
{"Line": "=>1231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((long_options) != null) c = checkLongOption();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8351/buggy-version/gnu.getopt.Getopt.java", "BodyUseAPI": [], "Fixed commit": "777af2f65e25fcb15db5bc68fa9d0255c001efb2", "Url": "https://api.github.com/repos/mernst/java-getopt", "Date": "2015-07-07T17:21:31Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"\".equals(archive.getAndroidId())) { service.checkin(); service.login(); service.uploadDeviceConfig(); }else { service.login(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6991/buggy-version/src.main.java.de.onyxbits.raccoon.gui.InitWorker.java", "BodyUseAPI": [], "Fixed commit": "d61fdb1486e0e42c79256f15948b02be6f29c269", "Url": "https://api.github.com/repos/onyxbits/Raccoon", "Date": "2014-06-14T16:05:39Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mapping == null) || ((mapping.getValue()) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7780/buggy-version/mappingservice.implementation.src.main.java.org.opendaylight.lispflowmapping.implementation.lisp.MapServer.java", "BodyUseAPI": [], "Fixed commit": "5fb7e86da2b67a10d6aa68a936caa0f6a976f039", "Url": "https://api.github.com/repos/opendaylight/lispflowmapping", "Date": "2015-07-17T01:56:23Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((refName.indexOf('%')) > (-1)) { refName = refName.substring(0, refName.indexOf('%')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/769/buggy-version/src.main.java.com.gitblit.git.PatchsetReceivePack.java", "BodyUseAPI": ["java.lang.String.indexOf(char)", "java.lang.String.substring(int,int)"], "Fixed commit": "1207947afee4d7fbd2ee374339d5e84bb0528e9a", "Url": "https://api.github.com/repos/ds5apn/gitblit", "Date": "2014-03-13T02:25:52Z"},
{"Line": "=>788", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hasField(field)) { java.lang.String flat = getString(field); if (com.gitblit.models.TicketModel.isEmpty(flat)) { setField(field, com.gitblit.models.TicketModel.join(list, \",\")); }else { java.util.Set<java.lang.String> set = new java.util.TreeSet<java.lang.String>(java.util.Arrays.asList(flat.split(\",\"))); set.addAll(list); setField(field, com.gitblit.models.TicketModel.join(set, \",\")); } }else { setField(field, com.gitblit.models.TicketModel.join(list, \",\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/769/buggy-version/src.main.java.com.gitblit.models.TicketModel.java", "BodyUseAPI": ["com.gitblit.models.TicketModel.Change.setField(com.gitblit.models.TicketModel.Field,java.lang.String)", "com.gitblit.models.TicketModel.Change.getString(com.gitblit.models.TicketModel.Field)", "com.gitblit.models.TicketModel.Change.setField(com.gitblit.models.TicketModel.Field,java.lang.String)", "com.gitblit.models.TicketModel.Change.setField(com.gitblit.models.TicketModel.Field,java.lang.String)"], "Fixed commit": "1207947afee4d7fbd2ee374339d5e84bb0528e9a", "Url": "https://api.github.com/repos/ds5apn/gitblit", "Date": "2014-03-13T02:25:52Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event instanceof org.apache.samoa.learners.ModelContentEvent) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/10/buggy-version/samoa-api.src.main.java.org.apache.samoa.evaluation.EvaluatorProcessor.java", "BodyUseAPI": [], "Fixed commit": "01ef62332a74c31d09028be36f63de5cb894fa20", "Url": "https://api.github.com/repos/pangolulu/incubator-samoa", "Date": "2016-01-20T04:49:30Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((classifier) instanceof org.apache.samoa.learners.SerializableLearner) { for (org.apache.samoa.topology.Stream modelStream : ((org.apache.samoa.learners.SerializableLearner) (classifier)).getModelStreams()) { builder.connectInputShuffleStream(modelStream, evaluator); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/10/buggy-version/samoa-api.src.main.java.org.apache.samoa.tasks.PrequentialEvaluation.java", "BodyUseAPI": [], "Fixed commit": "01ef62332a74c31d09028be36f63de5cb894fa20", "Url": "https://api.github.com/repos/pangolulu/incubator-samoa", "Date": "2016-01-20T04:49:30Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.walmart.releaseautomation.weekly.dashboard.model.Rule.getFilter()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (filter.getFileToFilter().equalsIgnoreCase(\"DefectsReport.xls\")) { setRowBrkCheckColIndex(getRowBrkFilterColIndex(row, \"Defect ID\")); }else { setRowBrkCheckColIndex(getRowBrkFilterColIndex(row, \"Created Date\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2668/buggy-version/weekly-dashboard-automation.src.main.java.com.walmart.releaseautomation.weekly.dashboard.impl.RulesImpl.java", "BodyUseAPI": [], "Fixed commit": "3f658d1b655d20e82a31cc9e5e42ce2f96824b18", "Url": "https://api.github.com/repos/nagagit/weekly_dashboard", "Date": "2015-01-21T16:46:03Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Float.isInfinite(org.wso2.carbon.iot.android.sense.data.publisher.Event.speed)) || (java.lang.Float.isNaN(org.wso2.carbon.iot.android.sense.data.publisher.Event.speed))) { return -1.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5753/buggy-version/components.iot-plugins.androidsense-plugin.org.wso2.carbon.device.mgt.iot.androidsense.agent.app.src.main.java.org.wso2.carbon.iot.android.sense.data.publisher.Event.java", "BodyUseAPI": [], "Fixed commit": "47659555afed0b701867fc774aa0708bc32390ed", "Url": "https://api.github.com/repos/lgobinath/carbon-device-mgt-plugins", "Date": "2016-08-19T07:57:59Z"},
{"Line": "=>747", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.storage.impl.local.paginated.OClusterPositionMap.get(com.orientechnologies.orient.core.id.OClusterPosition)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (positionEntry == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8144/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.impl.local.paginated.OPaginatedCluster.java", "BodyUseAPI": [], "Fixed commit": "c48fff95533a852a407523de32d34cb717e92cf1", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-03-04T11:41:24Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pageIndex >= (diskCache.getFilledUpTo(fileId))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8144/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.impl.local.paginated.OClusterPositionMap.java", "BodyUseAPI": [], "Fixed commit": "c48fff95533a852a407523de32d34cb717e92cf1", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-03-04T11:41:24Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.innovateuk.ifs.application.service.CompetitionService.getById(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (competition.getCompetitionStatus().equals(CompetitionStatus.PROJECT_SETUP)) { throw new org.innovateuk.ifs.commons.error.exception.ObjectNotFoundException(); }else { throw new java.lang.IllegalStateException((\"Unexpected competition state for competition: \" + competitionId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/189/buggy-version/ifs-web-service.ifs-competition-mgt-service.src.main.java.org.innovateuk.ifs.management.controller.CompetitionManagementCompetitionController.java", "BodyUseAPI": [], "Fixed commit": "bb3b4a8c7c273e6dcbdbbd26d8d05617751fd6a6", "Url": "https://api.github.com/repos/InnovateUKGitHub/innovation-funding-service", "Date": "2017-07-31T13:31:48Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(keyword)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7954/buggy-version/app.src.main.java.nl.napauleon.sabber.search.SearchListAdapter.java", "BodyUseAPI": [], "Fixed commit": "66e36257b5f2e78013064ecdef1b6625c4318bf1", "Url": "https://api.github.com/repos/blarneyjingles/Sabber", "Date": "2013-02-08T04:24:22Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((after_charging.get((p - 1))) + (charging.get(p))) - (model.getP_max())) > 100) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6670/buggy-version/src.com.polytech.di.wang.projetlibrevrp.heurisitic.OneVehicle.java", "BodyUseAPI": [], "Fixed commit": "6e67bf04708dc4b400beffdb7a302d518f0a1cc3", "Url": "https://api.github.com/repos/martinWANG2014/ProjetLibreVRP", "Date": "2017-03-28T09:44:27Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.fenixedu.bennu.scheduler.domain.SchedulerSystem.repository) == null) { org.fenixedu.bennu.scheduler.domain.SchedulerSystem.repository = new org.fenixedu.bennu.scheduler.log.FileSystemLogRepository(3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8222/buggy-version/bennu-scheduler.src.main.java.org.fenixedu.bennu.scheduler.domain.SchedulerSystem.java", "BodyUseAPI": [], "Fixed commit": "2e082d312298b3219e9d7299f0874b6b1876a520", "Url": "https://api.github.com/repos/luisfsantos/bennu", "Date": "2016-12-29T15:17:12Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.equals(UserType.City_Official.toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (typeCO) { boolean validTitle = app.java.controller.FormValidation.textFieldNotEmpty(city_official_title, title_label, \"Required\"); }else { title_label.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/630/buggy-version/JavaApp.src.main.app.java.controller.RegistrationController.java", "BodyUseAPI": [], "Fixed commit": "d6cf80fbfc7bcac2ce488003ff1dcfa184eb948f", "Url": "https://api.github.com/repos/fjosufi3/SLSJavaApp", "Date": "2017-04-18T19:50:22Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.node.ObjectNode.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (args.isArray()) { java.util.Iterator<com.corundumstudio.socketio.parser.JsonNode> iterator = args.elements(); if (iterator.hasNext()) { com.corundumstudio.socketio.parser.JsonNode node = iterator.next(); java.lang.Class<?> eventClass = eventMapping.get(eventName); java.lang.Object arg = mapper.treeToValue(node, eventClass); eventArgs.add(arg); while (iterator.hasNext()) { node = iterator.next(); arg = mapper.treeToValue(node, java.lang.Object.class); eventArgs.add(arg); } } }else { com.corundumstudio.socketio.parser.JsonNode node = args; java.lang.Class<?> eventClass = eventMapping.get(eventName); java.lang.Object arg = mapper.treeToValue(node, eventClass); eventArgs.add(arg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/9013/buggy-version/src.main.java.com.corundumstudio.socketio.parser.JacksonJsonSupport.java", "BodyUseAPI": ["com.corundumstudio.socketio.parser.JsonNode.elements()"], "Fixed commit": "59f1460a25de3ddfe7ac336678294594ffa3251f", "Url": "https://api.github.com/repos/Zipwhip/netty-socketio", "Date": "2013-10-07T20:16:11Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getLocation().getBlock().getRelative(BlockFace.DOWN,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(((isEarth(b)) || (isSand(b))) || (isMetal(b)))) { remove(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8965/buggy-version/src.com.projectkorra.projectkorra.earthbending.Catapult.java", "BodyUseAPI": [], "Fixed commit": "4cb6624cab3d3fda24ab7e5ab7dd10c76b42d940", "Url": "https://api.github.com/repos/Simplicitee/ProjectKorra", "Date": "2017-06-08T23:41:20Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1484/buggy-version/Cash.app.src.main.java.com.house603.cash.feature.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "42c66a33cbf57e80150f2facf241d1b3032b9d67", "Url": "https://api.github.com/repos/house603/NewCash", "Date": "2017-04-17T21:19:34Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["a.first().attr(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(url.contains(\"leprosorium.ru\"))) url = (com.home.lepradroid.commons.Commons.SITE_URL) + url;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8749/buggy-version/LepraDroid.src.com.home.lepradroid.tasks.GetPostsTask.java", "BodyUseAPI": [], "Fixed commit": "c49b05473aa86fdc8519b74daa940cf4753ba3a8", "Url": "https://api.github.com/repos/NevRA/LepraDroid", "Date": "2014-08-23T15:08:23Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.getElementsByTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((a.size()) > 1) signature = signature.substring(0, signature.indexOf(\", \u00b7\")); else signature = signature.substring(0, signature.indexOf(\", \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0439\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8749/buggy-version/LepraDroid.src.com.home.lepradroid.tasks.GetCommentsTask.java", "BodyUseAPI": [], "Fixed commit": "c49b05473aa86fdc8519b74daa940cf4753ba3a8", "Url": "https://api.github.com/repos/NevRA/LepraDroid", "Date": "2014-08-23T15:08:23Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Maps.newHashMap()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (prunedKey.isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4462/buggy-version/contrib.src.main.java.com.datatorrent.contrib.dimensions.DimensionsQueryExecutor.java", "BodyUseAPI": [], "Fixed commit": "e0d10337a9c87764a6ebce89d25d260f799eea55", "Url": "https://api.github.com/repos/apache/apex-malhar", "Date": "2015-06-18T01:47:44Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (micdoodle8.mods.galacticraft.core.GalacticraftCore.isPlanetsLoaded) { defaultLoc = new net.minecraft.client.resources.model.ModelResourceLocation(((micdoodle8.mods.galacticraft.planets.GalacticraftPlanets.ASSET_PREFIX) + \":asteroids_block\"), \"basictypeasteroids=asteroid_deco\"); }else { defaultLoc = new net.minecraft.client.resources.model.ModelResourceLocation(((micdoodle8.mods.galacticraft.core.Constants.ASSET_PREFIX) + \":basic_block_core\"), \"basictype=deco_block_1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6791/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.proxy.ClientProxyCore.java", "BodyUseAPI": [], "Fixed commit": "cf02fdadf2660ea6251128320ef020ca5b720a72", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2017-07-29T21:46:31Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.checkerframework.framework.util.typeinference8.types.AbstractType.getJavaType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((type.getKind()) == (javax.lang.model.type.TypeKind.WILDCARD)) { type = ((com.sun.tools.javac.code.Type.WildcardType) (type)).getExtendsBound(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6667/buggy-version/framework.src.org.checkerframework.framework.util.typeinference8.types.AbstractType.java", "BodyUseAPI": [], "Fixed commit": "f369d6cd3bc81e95af958ad9a51dbd1ef1445b60", "Url": "https://api.github.com/repos/smillst/checker-framework", "Date": "2017-12-13T19:16:25Z"},
{"Line": "=>1441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.kmelia.control.ejb.KmeliaBmEJB.isPublicationInBasket(pubDetail.getPK())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isPublicationInBasket) { sendSubscriptionsNotification(pubDetail, true, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5951/buggy-version/kmelia.kmelia-ejb.src.main.java.com.stratelia.webactiv.kmelia.control.ejb.KmeliaBmEJB.java", "BodyUseAPI": [], "Fixed commit": "235603876f96edabf0f86e7055eaa8a8e1606c2f", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Components", "Date": "2014-09-10T07:32:39Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (oriFilename.contains(\"%\")) { java.lang.String decodedFilename = java.net.URLDecoder.decode(oriFilename, \"UTF-8\"); decodedFilename = newUrl.replace(oriFilename, decodedFilename); newUrls.add(decodedFilename); }else { java.lang.String encodedFilename = java.net.URLEncoder.encode(oriFilename, \"UTF-8\"); encodedFilename = newUrl.replace(oriFilename, encodedFilename); newUrls.add(encodedFilename); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1100/buggy-version/LNReader.src.com.erakk.lnreader.task.RelinkImagesTask.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "88cb7cb2b446a1ee89b7e4c77aab7df5fb0527f0", "Url": "https://api.github.com/repos/remote-mine/LNReader-Android", "Date": "2014-09-20T12:27:27Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((event.getAction()) == (android.view.KeyEvent.ACTION_UP)) && ((mImageUrls) != null)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7151/buggy-version/app.src.main.java.com.kaim808.betterreader.activities.ChapterViewingActivity.java", "BodyUseAPI": [], "Fixed commit": "c0d18cafde322be220929954965eb3ea20fcd59a", "Url": "https://api.github.com/repos/Kai-Munechika/BetterReader", "Date": "2017-07-27T10:00:10Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (autocompletes != null) { for (net.hunnor.dict.model.Autocomplete autocomplete : autocompletes) { suggestions.add(autocomplete.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3408/buggy-version/src.main.java.net.hunnor.dict.web.ApiController.java", "BodyUseAPI": [], "Fixed commit": "c376e48e1fa53327f50beb9ab40229242d4e807d", "Url": "https://api.github.com/repos/hunnor-dict/web-spring", "Date": "2016-09-07T15:54:14Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((columnNames.get(columnName)) != null) { return get(columnNames.get(columnName)); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4446/buggy-version/src.com.xingcloud.xa.session2.ra.impl.XRelation.java", "BodyUseAPI": ["com.xingcloud.xa.session2.ra.impl.XRelation.XRow.get(java.lang.Integer)", "java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Fixed commit": "c8be8b743575601fb3492c4db063b41db6eb2014", "Url": "https://api.github.com/repos/fangjian601/XASession2", "Date": "2013-02-20T10:09:28Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (location == null) { location = locationManager.getLastKnownLocation(LocationManager.PASSIVE_PROVIDER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6741/buggy-version/LinguaAdHoc.src.ch.smartapes.linguaadhoc.android.LocationContext.java", "BodyUseAPI": [], "Fixed commit": "5002f736c94b20814d34dbe43e89ac8b7a83b6dc", "Url": "https://api.github.com/repos/naibaf7/LinguaAdHoc", "Date": "2014-10-11T18:17:24Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dbms.parser.ValueComputer.ParseData.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (token.contains(\"+\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1446/buggy-version/db_main.src.dbms.parser.ValueComputer.java", "BodyUseAPI": [], "Fixed commit": "cf6e54eb34d322cf7647a2b401cfde9a74131f22", "Url": "https://api.github.com/repos/rajabzz/GySQL", "Date": "2015-11-17T19:59:03Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getId()) != null) { requirementSetMap.forEach((java.util.Set<java.lang.String> key,java.util.List<java.lang.String> value) -> value.remove(item.getId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7241/buggy-version/executioner-workqueue.src.main.java.com.slickqa.executioner.workqueue.WorkQueueList.java", "BodyUseAPI": ["java.util.List<java.lang.String>.remove(item.getId())", "com.slickqa.executioner.workqueue.WorkQueueItem.getId()", "java.util.Map<java.util.Set<java.lang.String>, java.util.List<java.lang.String>>.forEach(java.util.function.BiConsumer<java.util.Set<java.lang.String>, java.util.List<java.lang.String>>)"], "Fixed commit": "f1ad6f790d39e2207c96c31095f3c719e098474b", "Url": "https://api.github.com/repos/slickqa/executioner", "Date": "2016-09-14T20:28:56Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.osmand.plus.GpxSelectionHelper.getUiListener()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (r != null) { r.run(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3383/buggy-version/OsmAnd.src.net.osmand.plus.activities.AvailableGPXFragment.java", "BodyUseAPI": ["java.lang.Runnable.run()"], "Fixed commit": "b181ac87457718a5261dcd79f866cfb32c913c2a", "Url": "https://api.github.com/repos/Bars107/Osmand", "Date": "2014-06-27T00:38:03Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isUniqueFeed) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2986/buggy-version/src.main.java.edu.usf.cutr.gtfsrtvalidator.background.BackgroundTask.java", "BodyUseAPI": [], "Fixed commit": "b31418e5d37371f6eda32daea1c5eabf66acad98", "Url": "https://api.github.com/repos/mohangandhiGH/gtfs-realtime-validator", "Date": "2017-04-01T20:59:54Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pgs == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3291/buggy-version/src.gui.PhysicalGameStatePanel.java", "BodyUseAPI": [], "Fixed commit": "a7b04e5a1788f29ba73dc8c2ab4518b40acea56a", "Url": "https://api.github.com/repos/santiontanon/microrts", "Date": "2015-05-07T04:02:41Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (volumeNumber < 100000) { volumeCharacters = volumeNumber.toString(); }else if (volumeNumber <= 999999) { volumeCharacters = ((volumeNumber.toString().substring(0, 3)) + \",\") + (volumeNumber.toString().substring(3, 6)); }else if ((volumeNumber >= 1000000) && (volumeNumber <= 100000000)) { volumeNumber = volumeNumber / 1000000; if (volumeNumber < 10) { volumeCharacters = (volumeNumber.toString().substring(0, 3)) + \"M\"; }else if (volumeNumber >= 10) { volumeCharacters = (volumeNumber.toString().substring(0, 4)) + \"M\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/9190/buggy-version/StockQuotes.src.stock.Stock.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.Double.toString()", "java.lang.String.substring(int,int)", "java.lang.Double.toString()", "java.lang.Double.toString()"], "Fixed commit": "5fd891dce9d785bb8ae9dbab583468e681dddf07", "Url": "https://api.github.com/repos/awadlow/stockProgram", "Date": "2015-12-08T02:09:02Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gameBoard[i][j]) { return ((getAliveNeighborCount(i, j)) == 2) || ((getAliveNeighborCount(i, j)) == 3); }else { return (getAliveNeighborCount(i, j)) == 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2229/buggy-version/src.main.GameOfLife.java", "BodyUseAPI": ["main.GameOfLife.getAliveNeighborCount(int,int)", "main.GameOfLife.getAliveNeighborCount(int,int)", "main.GameOfLife.getAliveNeighborCount(int,int)"], "Fixed commit": "cf322c98a780571a7be58cc3047c1b0d21f28e27", "Url": "https://api.github.com/repos/rschaefli/GameOfLife", "Date": "2015-02-07T19:51:50Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.ide.eclipse.core.java.Introspector.findMethod(org.eclipse.jdt.core.IType,java.lang.String,int,org.springframework.ide.eclipse.core.java.Introspector.Public,org.springframework.ide.eclipse.core.java.Introspector.Static)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (method != null) { return method; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6616/buggy-version/plugins.org.springframework.ide.eclipse.core.src.org.springframework.ide.eclipse.core.java.Introspector.java", "BodyUseAPI": [], "Fixed commit": "a5016899b7d8b0c9491801c76fa0c5c6c4ec5156", "Url": "https://api.github.com/repos/spring-projects/spring-ide", "Date": "2014-06-27T10:21:20Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (matcher != null) addMatcher(matcher, org.eclipse.viatra2.patternlanguage.core.helper.CorePatternLanguageHelper.getFullyQualifiedName(pattern), false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/3075/buggy-version/plugins.org.eclipse.viatra2.emf.incquery.tooling.gui.src.org.eclipse.viatra2.emf.incquery.queryexplorer.content.matcher.ObservablePatternMatcherRoot.java", "BodyUseAPI": ["org.eclipse.viatra2.emf.incquery.queryexplorer.content.matcher.ObservablePatternMatcherRoot.addMatcher(org.eclipse.viatra2.emf.incquery.runtime.api.IncQueryMatcher<org.eclipse.viatra2.emf.incquery.runtime.api.GenericPatternMatch>,org.eclipse.viatra2.patternlanguage.core.helper.CorePatternLanguageHelper.getFullyQualifiedName(pattern),boolean)"], "Fixed commit": "dd5a8dba846c4373d343cf7b2aee84f86ddb34cc", "Url": "https://api.github.com/repos/ujhelyiz/EMF-IncQuery", "Date": "2012-06-07T17:20:02Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (game.hasNextQuestion()) { android.content.Intent startGame = new android.content.Intent(getApplicationContext(), at.vocabdevelopment.studymanager.GameQuestion.class); startGame.putExtra(\"game\", game); startActivity(startGame); finish(); }else { android.widget.Toast.makeText(this, \"No active questions in deck.\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/9009/buggy-version/StudyManager.app.src.main.java.at.vocabdevelopment.studymanager.SetupChallenge.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,at.vocabdevelopment.studymanager.Game)"], "Fixed commit": "b67f1876ca2eb0afcf059ee920bf71b5d0482001", "Url": "https://api.github.com/repos/TNiedermair/free_team_11", "Date": "2017-06-07T08:57:26Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getAttente()) < 0) { p.setAttente(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6232/buggy-version/zildo.src.main.java.zildo.fwk.script.command.ScriptExecutor.java", "BodyUseAPI": ["zildo.monde.sprites.persos.Perso.setAttente(int)"], "Fixed commit": "468f69b5c38f26e3b17fddeb451c2c4ae368ab60", "Url": "https://api.github.com/repos/tchegito/zildo", "Date": "2017-08-28T09:57:56Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBlockInStream) != null) { mBlockInStream.close(); mBlockInStream = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6988/buggy-version/core.client.fs.src.main.java.alluxio.client.file.FileInStream.java", "BodyUseAPI": [], "Fixed commit": "89c9a6c2787cdcdedb1847424fe542f016365b1a", "Url": "https://api.github.com/repos/scienceluo/alluxio", "Date": "2017-12-13T01:15:22Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent) != null) { return ((org.eclipse.tcf.te.tcf.filesystem.core.model.FSTreeNode) (parent)).isWindowsNode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5152/buggy-version/target_explorer.plugins.org.eclipse.tcf.te.tcf.filesystem.core.src.org.eclipse.tcf.te.tcf.filesystem.core.model.FSTreeNode.java", "BodyUseAPI": [], "Fixed commit": "d28c5b616b3a9c8529c40af33838194fc3bad17b", "Url": "https://api.github.com/repos/wind-river-cdt/tcf", "Date": "2012-05-07T14:52:28Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (propdir.endsWith(\".jar\")) { propdir = propdir.substring(0, propdir.lastIndexOf(java.io.File.separator)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5595/buggy-version/src.main.java.net.hirschauer.yaas.lighthouse.util.PropertiesHandler.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "9d9046d2e1e39fda227f3960bafd527481919f41", "Url": "https://api.github.com/repos/shouldmakemusic/lighthouse", "Date": "2015-03-29T00:27:40Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(f.exists())) { f.createNewFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5595/buggy-version/src.main.java.net.hirschauer.yaas.lighthouse.util.PropertiesHandler.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "9d9046d2e1e39fda227f3960bafd527481919f41", "Url": "https://api.github.com/repos/shouldmakemusic/lighthouse", "Date": "2015-03-29T00:27:40Z"},
{"Line": "=>601", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (value == null) { vd.setInit(new com.github.javaparser.ast.expr.LongLiteralExpr(\"0l\")); }else { vd.setInit(new com.github.javaparser.ast.expr.LongLiteralExpr(value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6571/buggy-version/src.main.java.randoop.main.Minimize.java", "BodyUseAPI": ["com.github.javaparser.ast.body.VariableDeclarator.setInit(com.github.javaparser.ast.expr.LongLiteralExpr)"], "Fixed commit": "fb716eaab3ff0d6acc476a1097b3879adece3d75", "Url": "https://api.github.com/repos/huangwaylon/randoop", "Date": "2017-03-29T22:57:16Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (verboseOuput) { java.lang.System.out.println(((\"Minimized method \" + (method.getName())) + \".\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6571/buggy-version/src.main.java.randoop.main.Minimize.java", "BodyUseAPI": [], "Fixed commit": "fb716eaab3ff0d6acc476a1097b3879adece3d75", "Url": "https://api.github.com/repos/huangwaylon/randoop", "Date": "2017-03-29T22:57:16Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (initialized_) { view_.clearObjects(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5274/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.environment.EnvironmentPresenter.java", "BodyUseAPI": [], "Fixed commit": "0315b7e80ebd8367e9b066c7e14f17577d69f12b", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2013-05-25T00:15:30Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldfreq != 0) { tempFreq += oldfreq - (distance % oldfreq); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8715/buggy-version/src.main.java.hu.mta.sztaki.lpds.cloud.simulator.Timed.java", "BodyUseAPI": [], "Fixed commit": "2efd8f1586e77401dd38c6ba975bab4d6bf4be92", "Url": "https://api.github.com/repos/kecskemeti/dissect-cf", "Date": "2015-07-20T08:55:27Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (context != null) { sharedPref = android.preference.PreferenceManager.getDefaultSharedPreferences(context.getApplicationContext()); editor = sharedPref.edit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/870/buggy-version/datacontroller.src.main.java.com.jgabrielfreitas.datacontroller.DataController.java", "BodyUseAPI": [], "Fixed commit": "a0a759a759fefa09de4ad20185aa237b873477bb", "Url": "https://api.github.com/repos/jgabrielfreitas/DataController", "Date": "2016-06-20T19:28:35Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2274/buggy-version/src.it.wm.perdue.contatti.InfoPerDueBaseActivity.java", "BodyUseAPI": [], "Fixed commit": "b66ff9044bad54eb4b70e04cad8969ad3dbeb76f", "Url": "https://api.github.com/repos/eltazar/x2Android", "Date": "2012-12-11T00:19:23Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["renameField.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (currentText.equals(\"-\")) { renameField.setError(\"Station cannot be named \\\"-\\\"\"); }else if ((!(currentText.equals(currentName))) && ((survey.getStationByName(currentText)) != null)) { renameField.setError(\"Station name must be unique\"); }else { renameField.setError(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8551/buggy-version/app.src.main.java.org.hwyl.sexytopo.control.table.ManualEntry.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "org.hwyl.sexytopo.model.survey.Survey.getStationByName(java.lang.String)"], "Fixed commit": "e4343e822a3ef898cf1432d47a601a840768d311", "Url": "https://api.github.com/repos/richsmith/sexytopo", "Date": "2017-11-15T22:40:16Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hwyl.sexytopo.control.util.GraphToListTranslator.createMap(surveyEntry).get(org.hwyl.sexytopo.model.table.TableCol)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (toRename == (org.hwyl.sexytopo.model.survey.Survey.NULL_STATION)) { showSimpleToast(\"Can't rename a splay end\"); }else { org.hwyl.sexytopo.control.table.ManualEntry.renameStation(this, getSurvey(), toRename); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8551/buggy-version/app.src.main.java.org.hwyl.sexytopo.control.activity.TableActivity.java", "BodyUseAPI": ["org.hwyl.sexytopo.control.table.ManualEntry.renameStation(org.hwyl.sexytopo.control.activity.TableActivity,getSurvey(),org.hwyl.sexytopo.model.survey.Station)"], "Fixed commit": "e4343e822a3ef898cf1432d47a601a840768d311", "Url": "https://api.github.com/repos/richsmith/sexytopo", "Date": "2017-11-15T22:40:16Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["DbHandler.DBUserHandler.registerUser(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (message.contains(\"Error, \")) { response.sendRedirect(\"register.jsp\"); }else { db.registerUser(email, password, businessName, phone, \"not\", fullName, dateFormat.format(datePre)); response.sendRedirect(\"awaitingApproval.jsp\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6189/buggy-version/sundebygninger.BedreBygninger.src.java.servletHandler.Front.java", "BodyUseAPI": [], "Fixed commit": "d4e4c03d80e57e9036d48beac984a6293823873e", "Url": "https://api.github.com/repos/2joocy/sundebygninger", "Date": "2016-10-12T05:23:34Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (command.getClass().equals(org.catrobat.paintroid.command.implementation.ResizeCommand.class)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4816/buggy-version/Paintroid.src.main.java.org.catrobat.paintroid.tools.implementation.UndoTool.java", "BodyUseAPI": [], "Fixed commit": "2a73bc421545783c33038706728c0d4c0790a9a9", "Url": "https://api.github.com/repos/aschulhofer/Paintroid", "Date": "2017-04-14T15:19:18Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mGoogleApiClient) != null) && (mGoogleApiClient.isConnected())) { Auth.GoogleSignInApi.signOut(mGoogleApiClient); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2298/buggy-version/app.src.main.java.ec601.aty.food_app.LoginActivity.java", "BodyUseAPI": ["Auth.GoogleSignInApi.signOut(com.google.android.gms.common.api.GoogleApiClient)"], "Fixed commit": "dfba5f7ef75a84108533b05d7ab6671aa0b6a673", "Url": "https://api.github.com/repos/juleskt/Food-app", "Date": "2017-10-28T17:55:22Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.isaacapps.unitconverterapp.activities.Spinner.getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (spinnerSelection.equalsIgnoreCase(generalFilters[4])) { oppositeUnitCategoryName = \"metric\"; }else if (spinnerSelection.equalsIgnoreCase(generalFilters[5])) { oppositeUnitCategoryName = \"special\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6123/buggy-version/src.com.isaacapps.unitconverterapp.activities.UnitBrowserActivity.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "c0ce31b2af7a3901532000a5721988e843df28d8", "Url": "https://api.github.com/repos/isaaclafrance/UnitManagerAndConverter", "Date": "2017-05-16T02:19:21Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((vol.getProtectionSet()) != null) && (!(com.emc.storageos.db.client.util.NullColumnValueGetter.isNullURI(vol.getProtectionSet().getURI())))) { protectionSetIds.add(vol.getProtectionSet().getURI()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7117/buggy-version/controllersvc.src.main.java.com.emc.storageos.protectioncontroller.impl.recoverpoint.RPHelper.java", "BodyUseAPI": ["com.emc.storageos.db.client.model.Volume.getProtectionSet()", "vol.getProtectionSet().getURI()", "java.util.Set<java.net.URI>.add(vol.getProtectionSet().getURI())"], "Fixed commit": "a723a3c494cd2568cad9e4b4f69f48acc63cbe5e", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-09-28T12:12:04Z"},
{"Line": "=>1525", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((volume.getConsistencyGroup()) != null) { volume.setConsistencyGroup(com.emc.storageos.db.client.util.NullColumnValueGetter.getNullURI()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7117/buggy-version/controllersvc.src.main.java.com.emc.storageos.protectioncontroller.impl.recoverpoint.RPHelper.java", "BodyUseAPI": ["com.emc.storageos.db.client.model.Volume.setConsistencyGroup(com.emc.storageos.db.client.util.NullColumnValueGetter.getNullURI())"], "Fixed commit": "a723a3c494cd2568cad9e4b4f69f48acc63cbe5e", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-09-28T12:12:04Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mobi.acpm.inspeckage.hooks.CryptoHook.sb) == null) { mobi.acpm.inspeckage.hooks.CryptoHook.sb = new java.lang.StringBuffer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8011/buggy-version/app.src.main.java.mobi.acpm.inspeckage.hooks.CryptoHook.java", "BodyUseAPI": [], "Fixed commit": "346b631d6cfd9bf50fb24d3f66cb2c96e2509950", "Url": "https://api.github.com/repos/ac-pm/Inspeckage", "Date": "2016-10-25T13:44:39Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mobi.acpm.inspeckage.hooks.CryptoHook.sb) == null) { mobi.acpm.inspeckage.hooks.CryptoHook.sb = new java.lang.StringBuffer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8011/buggy-version/app.src.main.java.mobi.acpm.inspeckage.hooks.CryptoHook.java", "BodyUseAPI": [], "Fixed commit": "346b631d6cfd9bf50fb24d3f66cb2c96e2509950", "Url": "https://api.github.com/repos/ac-pm/Inspeckage", "Date": "2016-10-25T13:44:39Z"},
{"Line": "=>1663", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == str2) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1609/buggy-version/hutool-core.src.main.java.com.PATHoleilu.hutool.util.StrUtil.java", "BodyUseAPI": [], "Fixed commit": "ba2bec64d9672dbab2d44a84eb679558800150c5", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2017-12-25T07:32:40Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFooterView) != null) { mFooterView.setState(WListViewFooter.STATE_NORMAL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6345/buggy-version/app.src.main.java.com.micky.weixinxlistview.wlistview.WListView.java", "BodyUseAPI": [], "Fixed commit": "826aa006ef330ba94e2039ab75c4329eaa493107", "Url": "https://api.github.com/repos/mickyliu945/WeiXinCircleListView", "Date": "2015-12-07T02:35:10Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((handler) == null) { restart(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4463/buggy-version/DanmakuFlameMaster.src.main.java.master.flame.danmaku.ui.widget.DanmakuSurfaceView.java", "BodyUseAPI": [], "Fixed commit": "aee1f9c3da813f74d8c2192f9b321cad7472cdb1", "Url": "https://api.github.com/repos/Bilibili/DanmakuFlameMaster", "Date": "2015-07-31T08:03:40Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((handler) == null) { restart(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/4463/buggy-version/DanmakuFlameMaster.src.main.java.master.flame.danmaku.ui.widget.DanmakuView.java", "BodyUseAPI": [], "Fixed commit": "aee1f9c3da813f74d8c2192f9b321cad7472cdb1", "Url": "https://api.github.com/repos/Bilibili/DanmakuFlameMaster", "Date": "2015-07-31T08:03:40Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != oldtimeslice) { long oldts = to_timeslice(oldtimeslice); if (oldts != newtimeslice) directory.delete(2, get_timeslice_key(to_timeslice(oldtimeslice), key)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1221/buggy-version/server.src.main.java.de.zib.vold.volatileLogic.VolatileDirectoryImpl.java", "BodyUseAPI": ["de.zib.vold.volatileLogic.VolatileDirectoryImpl.get_timeslice_key(long,java.util.List<java.lang.String>)", "de.zib.vold.volatileLogic.VolatileDirectoryImpl.to_timeslice(java.util.List<java.lang.String>)", "de.zib.vold.volatileLogic.VolatileDirectoryImpl.to_timeslice(java.util.List<java.lang.String>)", "de.zib.vold.backend.PartitionedDirectory.delete(int,java.util.List<java.lang.String>)"], "Fixed commit": "77c4cf6a44a154ba368c3a55e76c26b3361fe996", "Url": "https://api.github.com/repos/zibhub/VolD", "Date": "2011-11-14T09:30:42Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.uniulm.bagception.bundlemessageprotocol.entities.ContextSuggestion.getItemsToReplace(stateUpdate.getContextSuggestions(),de.uniulm.bagception.bundlemessageprotocol.entities.Item)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (sug != null) { android.util.Log.d(\"CTX\", (\" reason: \" + (sug.getReason()))); android.util.Log.d(\"CTX\", (\" replace: \" + (sug.getReplaceSuggestions()))); itemsIn.add(new de.uniulm.bagception.bundlemessageprotocol.entities.RichItem(item, sug, needless)); }else { itemsIn.add(new de.uniulm.bagception.bundlemessageprotocol.entities.RichItem(item, suggestAdd, needless)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8199/buggy-version/src.de.uniulm.bagception.client.ui.launcher.ContextItems.java", "BodyUseAPI": ["de.uniulm.bagception.bundlemessageprotocol.entities.ContextSuggestion.getReason()", "de.uniulm.bagception.bundlemessageprotocol.entities.ContextSuggestion.getReplaceSuggestions()", "java.util.Set<de.uniulm.bagception.bundlemessageprotocol.entities.RichItem>.add(de.uniulm.bagception.bundlemessageprotocol.entities.RichItem)", "android.util.Log.d(java.lang.String,(\" reason: \" + (sug.getReason())))", "android.util.Log.d(java.lang.String,(\" replace: \" + (sug.getReplaceSuggestions())))"], "Fixed commit": "e9f361c93a14267b4d0b30864365e3431df94633", "Url": "https://api.github.com/repos/Bagception/BagceptionClient", "Date": "2014-02-24T17:14:18Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((preferences) != null) && ((preferences.getProperty(\"optRecipe\")) != null)) { path = preferences.getProperty(\"optRecipe\"); }else { path = ca.strangebrew.SBStringUtils.getAppPath(\"recipes\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7782/buggy-version/src.ca.strangebrew.ui.swing.StrangeSwing.java", "BodyUseAPI": [], "Fixed commit": "69efb36b737e180354ebd237a361fe235a8f45a4", "Url": "https://api.github.com/repos/DougEdey/StrangeBrew", "Date": "2012-08-28T23:31:13Z"},
{"Line": "=>2145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((preferences) != null) && ((preferences.getProperty(\"optRecipe\")) != null)) { path = preferences.getProperty(\"optRecipe\"); ca.strangebrew.Debug.print((\"Recipes path:\" + path)); fileChooser.setCurrentDirectory(new java.io.File(path)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/7782/buggy-version/src.ca.strangebrew.ui.swing.StrangeSwing.java", "BodyUseAPI": ["ca.strangebrew.Options.getProperty(java.lang.String)"], "Fixed commit": "69efb36b737e180354ebd237a361fe235a8f45a4", "Url": "https://api.github.com/repos/DougEdey/StrangeBrew", "Date": "2012-08-28T23:31:13Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opennms.features.topology.plugins.topo.asset.GeneratorConfig.getFilters()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (f != null) for (int i = 0; i < (f.size()); i++) { msg.append(f.get(i)); if (i < (f.size())) msg.append(\";\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6473/buggy-version/features.topology-map.plugins.org.opennms.features.topology.plugins.topo.asset.src.main.java.org.opennms.features.topology.plugins.topo.asset.cmd.CreateAssetTopologyCommand.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "java.lang.StringBuffer.append(java.lang.String)", "java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()"], "Fixed commit": "81a80f91d2d1737b1e8b6f706554557b11d300e2", "Url": "https://api.github.com/repos/OpenNMS/opennms", "Date": "2017-04-06T18:37:55Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opennms.features.topology.plugins.topo.asset.GeneratorConfig.getLayerHierarchies()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (l != null) for (int i = 0; i < (l.size()); i++) { msg.append(l.get(i)); if (i < (l.size())) msg.append(\",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6473/buggy-version/features.topology-map.plugins.org.opennms.features.topology.plugins.topo.asset.src.main.java.org.opennms.features.topology.plugins.topo.asset.cmd.CreateAssetTopologyCommand.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.lang.StringBuffer.append(java.lang.String)", "java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "81a80f91d2d1737b1e8b6f706554557b11d300e2", "Url": "https://api.github.com/repos/OpenNMS/opennms", "Date": "2017-04-06T18:37:55Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["service.SearchInfoService.getFlightByFlightNumber(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (validFlights.isEmpty()) return ERROR;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/386/buggy-version/src.action.searchGoingAction.java", "BodyUseAPI": [], "Fixed commit": "cb27a252a1af9802e3e1dae25d2cf8a522a692a5", "Url": "https://api.github.com/repos/LZZT/AirLineReservation", "Date": "2017-03-29T01:45:53Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ijfx.core.FXUserInterface.mainWindow) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6573/buggy-version/src.main.java.ijfx.core.FXUserInterface.java", "BodyUseAPI": [], "Fixed commit": "2b1a58ebb84259c2ae3ff55b56268968456ba46f", "Url": "https://api.github.com/repos/cmongis/imagejfx-core", "Date": "2017-07-17T08:16:56Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.thoughtworks.lhli.lovelive_rock.manager.CardManager.isNetworkAvailable(context)) { retrofit.Call<com.thoughtworks.lhli.lovelive_rock.model.MultipleCards> call = com.thoughtworks.lhli.lovelive_rock.Retrofit.getInstance().getCardService().getCardList(page); call.enqueue(getCardListCallback()); }else { java.lang.System.out.print(\"Get all cards failed.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6294/buggy-version/app.src.main.java.com.thoughtworks.lhli.lovelive_rock.manager.CardManager.java", "BodyUseAPI": [], "Fixed commit": "78657557c9d5a134948fbcbe70105bad4bf342e2", "Url": "https://api.github.com/repos/Kevin170113664/lovelive_rock", "Date": "2015-11-25T05:50:33Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ss.project.Board.walkField(ss.project.Field,int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (board.getMark(neighbour).equals(m)) { result++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6053/buggy-version/src.ss.project.Medium.java", "BodyUseAPI": [], "Fixed commit": "5dd26ca46f26b01113cfcf9fff76032dd2a27a65", "Url": "https://api.github.com/repos/maxitco/beunss", "Date": "2017-01-30T18:52:11Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (visibleCount < 2) { edu.umd.cs.piccolo.PLayer content = calico.plugins.iip.components.graph.IntentionGraph.getInstance().getLayer(calico.plugins.iip.components.graph.IntentionGraph.Layer.CONTENT); if ((content.getChildrenCount()) == 1) zoomToRegion(content.getChild(0).getBounds()); }else { zoomToRegion(new edu.umd.cs.piccolo.util.PBounds(minX, minY, (maxX - minX), (maxY - minY))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1046/buggy-version/plugins.IntentionalInterfacesPluginClient.src.calico.plugins.iip.components.graph.IntentionGraph.java", "BodyUseAPI": [], "Fixed commit": "0e92be5ab1e396b542363b8abe7e9ee58eb3024c", "Url": "https://api.github.com/repos/nfmangano/CalicoClient", "Date": "2012-08-23T01:22:31Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oneShot) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6448/buggy-version/src.main.java.com.nu.art.cyborg.io.transceiver.BaseTransceiver.java", "BodyUseAPI": [], "Fixed commit": "b3b4ed98d1c7ef1a74f823af3b7909437d4df721", "Url": "https://api.github.com/repos/nu-art/cyborg-core", "Date": "2017-10-17T13:43:21Z"},
{"Line": "=>3352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((parenCount + braceCount) + bracketCount) > 0) return org.rstudio.studio.client.workbench.views.source.editors.text.Range.create(pos.getRow(), 0, ((pos.getRow()) + 1), 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/898/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.source.editors.text.AceEditor.java", "BodyUseAPI": [], "Fixed commit": "a4b4c768fe59807eecb472ea0d152cc975bf378d", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2017-07-27T22:19:51Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getStation().isFaulty()) { abortRoute(); path.clear(); routeIndex = 0; isComplete = true; com.TeamHEC.LocomotionCommotion.UI_Elements.WarningMessage.fireWarningWindow(\"Sorry\", \"The station is faulty. You must repair it to continue!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6399/buggy-version/core.src.com.TeamHEC.LocomotionCommotion.Train.Route.java", "BodyUseAPI": [], "Fixed commit": "dcf7e703dad242275e1952c79db5b07b77dea8bf", "Url": "https://api.github.com/repos/Oliver-Binns/taxe-game-2", "Date": "2015-02-23T22:22:49Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (html5_fmt_map == null) { html5_fmt_map = br.getRegex(\"\\\"url_encoded_fmt_stream_map\\\":\\\"(.*?)\\\"\").getMatch(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2820/buggy-version/core.com.frostwire.search.extractors.YouTubeExtractor.java", "BodyUseAPI": [], "Fixed commit": "8c08eda0cfc61ff513e4a88b1bfaeb82306299af", "Url": "https://api.github.com/repos/votaguz/frostwire-common", "Date": "2015-01-27T20:49:30Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedList<com.ctrip.platform.dal.dao.sqlbuilder.Clause>.getLast()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((isBracket(entry)) && (!(isLeft(entry)))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6647/buggy-version/dal-client.src.main.java.com.ctrip.platform.dal.dao.sqlbuilder.AbstractSqlBuilder.java", "BodyUseAPI": [], "Fixed commit": "2f54ed753a7b74a6a82d036e4e3e94bbfd7cd37d", "Url": "https://api.github.com/repos/ctripcorp/dal", "Date": "2017-10-23T06:23:39Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentRunningJob) != null) && ((currentRunningJob) instanceof net.osmand.plus.routing.RoutingHelper.RouteRecalculationThread)) { net.osmand.plus.routing.RoutingHelper.RouteRecalculationThread thread = ((net.osmand.plus.routing.RoutingHelper.RouteRecalculationThread) (currentRunningJob)); thread.stopCalculation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6397/buggy-version/OsmAnd.src.net.osmand.plus.routing.RoutingHelper.java", "BodyUseAPI": [], "Fixed commit": "4064bf4cfe251f632b607e45f6e44270a5d9cf79", "Url": "https://api.github.com/repos/Bars107/Osmand", "Date": "2014-06-26T16:19:03Z"},
{"Line": "=>2474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != tech) { if (null != (tech.getSkillForWorkingOn(part))) { fixPart(part, tech); }else { addReport(java.lang.String.format(\"%s looks at %s, recalls his total lack of skill for working with such technology, then slowly puts the tools down before anybody gets hurt.\", tech.getHyperlinkedFullTitle(), part.getName())); part.setTeamId(null); } }else { javax.swing.JOptionPane.showMessageDialog(null, (((\"Could not find tech for part: \" + (part.getName())) + \" on unit: \") + (part.getUnit().getHyperlinkedName())), \"Invalid Auto-continue\", javax.swing.JOptionPane.ERROR_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8398/buggy-version/MekHQ.src.mekhq.campaign.Campaign.java", "BodyUseAPI": ["mekhq.campaign.Campaign.fixPart(mekhq.campaign.parts.Part,mekhq.campaign.personnel.Person)", "mekhq.campaign.personnel.Person.getHyperlinkedFullTitle()", "java.lang.String.format(java.lang.String,tech.getHyperlinkedFullTitle(),part.getName())", "mekhq.campaign.Campaign.addReport(java.lang.String)", "mekhq.campaign.personnel.Person.getSkillForWorkingOn(mekhq.campaign.parts.Part)"], "Fixed commit": "94a360cee348c06ab6ca7e8d64000ba431438264", "Url": "https://api.github.com/repos/MegaMek/mekhq", "Date": "2016-03-30T15:40:32Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startingHeight > endingHeight) { endingHeight = startingHeight; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/5470/buggy-version/fr.inria.soctrace.tools.ocelotl.ui.src.fr.inria.soctrace.tools.ocelotl.ui.views.timelineview.SpatioTemporalMouseListener.java", "BodyUseAPI": [], "Fixed commit": "e3211775be1bbb524b36c64e4cdf3b3a92069ce5", "Url": "https://api.github.com/repos/soctrace-inria/ocelotl", "Date": "2014-11-17T12:54:21Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.konstanz.schulen.suso.BuildConfig.DEBUG_MODE) { android.util.Log.d(\"DownloadStringIntent\", (\"Got data from Server: \" + data)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6193/buggy-version/app.src.main.java.de.konstanz.schulen.suso.data.DownloadStringIntentService.java", "BodyUseAPI": [], "Fixed commit": "6a4f46825c115679a671e43bdaa44243394115e3", "Url": "https://api.github.com/repos/SusoGym/SEST-Android", "Date": "2017-08-01T20:53:23Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG_MODE) { android.util.Log.d(\"LoginActivity\", ((((\"Login try with: ['\" + (username)) + \"', '\") + (password)) + \"']\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/6193/buggy-version/app.src.main.java.de.konstanz.schulen.suso.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "6a4f46825c115679a671e43bdaa44243394115e3", "Url": "https://api.github.com/repos/SusoGym/SEST-Android", "Date": "2017-08-01T20:53:23Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((net.minecraft.entity.EntityLivingBase) (theEntity)).getEquipmentInSlot(1).attemptDamageItem(1, theWorld.rand)) ((net.minecraft.entity.EntityLivingBase) (theEntity)).setCurrentItemOrArmor(1, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/1193/buggy-version/java.iceandshadow2.nyx.blocks.NyxBlockStone.java", "BodyUseAPI": ["net.minecraft.entity.Entity.setCurrentItemOrArmor(int,<nulltype>)"], "Fixed commit": "20b795e3e8807bf1b3f7d87a1206e8c0afa358c1", "Url": "https://api.github.com/repos/TheDaemoness/IceAndShadow2", "Date": "2015-02-10T19:42:43Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.azapps.mirakel.model.list.ListMirakel.getList(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (list == null) list = de.azapps.mirakel.model.list.SpecialList.firstSpecial();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/2661/buggy-version/src.de.azapps.mirakel.main_activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2cfe4a0761206f65b6d40e46d3b5e8459c034041", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2013-07-19T07:32:06Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (child.getChildren().isEmpty()) { fqn += child.toString(); }else { fqn += child.childrenAsString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/8838/buggy-version/kevoree-core.org.kevoree.kevscript.src.main.java.org.kevoree.kevscript.TypeFqnInterpreter.java", "BodyUseAPI": ["org.waxeye.ast.IAST<org.kevoree.kevscript.Type>.childrenAsString()", "org.waxeye.ast.IAST<org.kevoree.kevscript.Type>.toString()"], "Fixed commit": "9a233f82a4d62f9105087541c3189f9fd23ec8da", "Url": "https://api.github.com/repos/kevoree/kevoree", "Date": "2016-09-01T15:37:08Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["res_name[position].getPicture().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (img_path[0].contains(\" \")) { java.lang.String tmp = img_path[0].replaceAll(\" \", \"%20\"); builder.build().load(tmp).resize(300, 300).into(imageView); }else { builder.build().load(img_path[0]).resize(300, 300).into(imageView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V66/725/buggy-version/app.src.main.java.com.Senior.Faff.RestaurantProfile.Customlistview_addvice_adapter.java", "BodyUseAPI": ["builder.build().load(img_path[0]).resize(int,int)", "builder.build().load(img_path[0]).resize(300, 300).into(android.widget.ImageView)", "builder.build().load(java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "0db317213cb8456c3cf9345cae98d0b243cd4d52", "Url": "https://api.github.com/repos/shaman1412/Senior", "Date": "2017-04-30T16:28:57Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (response.contentType.equals(\"application/json\")) { response.contentType = defaultContentType; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4660/buggy-version/api.app.controllers.api.interceptor.APIResponseWrapper.java", "BodyUseAPI": [], "Fixed commit": "1948bc66339e19ffba2cb321d5534dfe4a96d8ce", "Url": "https://api.github.com/repos/fivesmallq/play1-base", "Date": "2017-07-13T15:08:23Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getConfiguration().getInt(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (migrationRate == 0) { isMigrate = false; }else { isMigrate = ((generation % migrationRate) == 0) ? true : false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/992/buggy-version/src.main.java.org.bradheintz.travsales.SelectionBinMapper.java", "BodyUseAPI": [], "Fixed commit": "80ee81df2fe75f92974a38d299c63a73bcf63cf6", "Url": "https://api.github.com/repos/RuthRainbow/TravSales", "Date": "2013-03-14T16:10:37Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((pratilipiFilter.getListName()) != null) && ((pratilipiIdListCursorTuple.getNumberFound()) == 0)) l2Cache.put(memcacheId, pratilipiDataListCursorTuple);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1761/buggy-version/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java", "BodyUseAPI": [], "Fixed commit": "15e261849200b439a24a1c3c3ee917c982bcaebd", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-03-23T11:25:22Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(settingValueFromControl)) { updateComponentFromInput(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1597/buggy-version/plugin_ide.ui.src-lang.melnorme.util.swt.components.AbstractField.java", "BodyUseAPI": [], "Fixed commit": "da42fd0b47dda70684da5e59c480b13e7c22121e", "Url": "https://api.github.com/repos/DDT-IDE/DDT", "Date": "2015-05-20T18:49:54Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null == shortUrl) mUpdateShortUrlStmt.bindNull(1); else mUpdateShortUrlStmt.bindString(1, shortUrl);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2611/buggy-version/uriio-lib.src.main.java.com.uriio.beacons.Storage.java", "BodyUseAPI": ["android.database.sqlite.SQLiteStatement.bindString(int,java.lang.String)"], "Fixed commit": "a7779a010a54f745b90333f39445dda75326c646", "Url": "https://api.github.com/repos/adriancretu/beacons-android", "Date": "2016-05-22T20:36:35Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(activeWindow.isLoaded())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4642/buggy-version/Etyllica.src.br.com.etyllica.core.InnerCore.java", "BodyUseAPI": [], "Fixed commit": "7fc4d61c5e1608ec638408780349ca182622ae92", "Url": "https://api.github.com/repos/yuripourre/etyllica", "Date": "2014-01-12T17:02:32Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!leaveModifyableAsIs) attributesCanBeModified = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1048/buggy-version/src.java.htsjdk.variant.variantcontext.VariantContextBuilder.java", "BodyUseAPI": [], "Fixed commit": "5fe412a1d587d7d6e6d765cf8d691ee2957fdc76", "Url": "https://api.github.com/repos/melonistic/htsjdk", "Date": "2015-04-28T22:55:04Z"},
{"Line": "=>808", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sweble.wikitext.parser.WikitextParser.parseArticle(org.sweble.wikitext.parser.preprocessor.PreprocessedWikitext,title.getTitle())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((parsedAst.getWarnings()) == (java.util.Collections.EMPTY_LIST)) { parsedAst.setWarnings(ppAst.getWarnings()); }else parsedAst.getWarnings().addAll(ppAst.getWarnings());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3109/buggy-version/swc-engine.src.main.java.org.sweble.wikitext.engine.WtEngine.java", "BodyUseAPI": ["parsedAst.getWarnings().addAll(ppAst.getWarnings())", "org.sweble.wikitext.parser.nodes.WtParsedWikitextPage.setWarnings(ppAst.getWarnings())", "org.sweble.wikitext.parser.nodes.WtParsedWikitextPage.getWarnings()"], "Fixed commit": "ebf42097f633fa4d305727d955afba3a45f0f057", "Url": "https://api.github.com/repos/sweble/sweble-wikitext", "Date": "2012-11-01T15:23:36Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.GINGERBREAD)) { executor.allowCoreThreadTimeOut((((getKeepAliveTime()) != 0) && (isCoreThreadDisposable()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7630/buggy-version/robospice-core-parent.robospice.src.main.java.com.octo.android.robospice.SpiceService.java", "BodyUseAPI": [], "Fixed commit": "d478be975b733569c4b95378a93ecc7c009ce074", "Url": "https://api.github.com/repos/stephanenicolas/robospice", "Date": "2014-06-11T09:15:14Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (value == null) { printInspectedName(value, ((fields[i].getName()) + \" = \")); }else if ((value.equals(null)) && (value.getClass().isArray())) { int length = java.lang.reflect.Array.getLength(value); for (int index = 0; index < length; index++) { if ((java.util.Arrays.asList(PRIMITIVE_WRAPPERS).contains(value.getClass().getComponentType())) || (value.getClass().getComponentType().isPrimitive())) { printInspectedName(java.lang.reflect.Array.get(value, index), ((((fields[i].getName()) + \"[\") + (java.lang.Integer.toString(index))) + \"] = \")); }else if (recursive) { }else { printInspectedName(java.lang.reflect.Array.get(value, index).hashCode(), ((((fields[i].getName()) + \"[\") + (java.lang.Integer.toString(index))) + \"] address (HashCode) \")); } } }else if ((java.util.Arrays.asList(PRIMITIVE_WRAPPERS).contains(value.getClass())) || (value.getClass().isPrimitive())) { printInspectedName(value.toString(), ((fields[i].getName()) + \" = \")); }else if (recursive) { }else { printInspectedName(value.hashCode(), ((fields[i].getName()) + \" address(HashCode) is \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5346/buggy-version/Inspector.java", "BodyUseAPI": ["java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.getComponentType()", "Inspector.printInspectedName(java.lang.Object,java.lang.String)", "java.lang.Object.hashCode()", "java.lang.reflect.Array.get(java.lang.Object,int)", "Inspector.printInspectedName(java.lang.Object,java.lang.String)", "java.lang.Class<? extends java.lang.Object>.isArray()", "java.lang.Class<? extends java.lang.Object>.getComponentType()", "java.lang.Object.getClass()", "java.util.List<java.lang.Class<?>>.contains(java.lang.Class<? extends java.lang.Object>)", "java.lang.Object.getClass()", "java.lang.reflect.Array.getLength(java.lang.Object)", "java.util.List<java.lang.Class<?>>.contains(java.lang.Class<?>)", "java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.isPrimitive()", "java.lang.Object.getClass()", "Inspector.printInspectedName(java.lang.String,java.lang.String)", "Inspector.printInspectedName(int,java.lang.String)", "java.lang.Object.hashCode()", "java.lang.Class<?>.isPrimitive()", "Inspector.printInspectedName(int,java.lang.String)", "java.lang.Object.toString()", "java.lang.Object.equals(<nulltype>)", "java.lang.reflect.Array.get(java.lang.Object,int)"], "Fixed commit": "40a6c74213be61d55dbb05e4ca53cae24dc34cba", "Url": "https://api.github.com/repos/rsbarhey/CPSC501-A2", "Date": "2015-10-21T02:45:01Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (recursive) { }else { printInspectedName(value.hashCode(), ((fields[i].getName()) + \" address(HashCode) is \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5346/buggy-version/Inspector.java", "BodyUseAPI": [], "Fixed commit": "40a6c74213be61d55dbb05e4ca53cae24dc34cba", "Url": "https://api.github.com/repos/rsbarhey/CPSC501-A2", "Date": "2015-10-21T02:45:01Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((helper) == null) { helper = new eu.veldsoft.share.with.us.storage.MessageHistoryDatabaseHelper(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6420/buggy-version/client.src.eu.veldsoft.share.with.us.NewMessageCheckService.java", "BodyUseAPI": [], "Fixed commit": "f8cbb28e32a66bfcf2881f328857c14420ed574a", "Url": "https://api.github.com/repos/VelbazhdSoftwareLLC/ShareWithUs", "Date": "2016-07-20T10:59:26Z"},
{"Line": "=>1439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (library.getFile().contains(\"-\")) { libraryNamesAdded.add(library.getFile().substring(0, library.getFile().lastIndexOf(\"-\"))); }else { libraryNamesAdded.add(library.getFile()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4400/buggy-version/src.main.java.com.atlauncher.workers.InstanceInstaller.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(library.getFile().substring(0, library.getFile().lastIndexOf(\"-\")))", "library.getFile().lastIndexOf(java.lang.String)", "java.util.List<java.lang.String>.add(library.getFile())", "library.getFile().substring(int,library.getFile().lastIndexOf(\"-\"))", "com.atlauncher.data.mojang.Library.getFile()", "com.atlauncher.data.mojang.Library.getFile()", "com.atlauncher.data.mojang.Library.getFile()"], "Fixed commit": "287795c31be5bfda6b436a820e46bf3d37c7e41a", "Url": "https://api.github.com/repos/ATLauncher/ATLauncher", "Date": "2014-08-23T15:19:32Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stamp.value()) > 0) { stamp.update(((stamp.value()) - 1)); putToTheEnd(x, k); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2127/buggy-version/src.main.java.org.jacop.constraints.GCC.java", "BodyUseAPI": ["org.jacop.core.TimeStamp<java.lang.Integer>.update(((stamp.value()) - 1))", "org.jacop.core.TimeStamp<java.lang.Integer>.value()"], "Fixed commit": "1c7e626d5f560a0f4ca1d5f4155d62ca5c266767", "Url": "https://api.github.com/repos/radsz/jacop", "Date": "2015-08-11T06:42:52Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stamp.value()) > 0) { stamp.update(((stamp.value()) - 1)); putToTheEnd(x, xNodesHash.get(var)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2127/buggy-version/src.main.java.org.jacop.constraints.GCC.java", "BodyUseAPI": ["org.jacop.core.TimeStamp<java.lang.Integer>.update(((stamp.value()) - 1))", "org.jacop.core.TimeStamp<java.lang.Integer>.value()"], "Fixed commit": "1c7e626d5f560a0f4ca1d5f4155d62ca5c266767", "Url": "https://api.github.com/repos/radsz/jacop", "Date": "2015-08-11T06:42:52Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (page instanceof com.gargoylesoftware.htmlunit.html.HtmlPage) { org.jsoup.nodes.Document doc = org.jsoup.Jsoup.parse(((com.gargoylesoftware.htmlunit.html.HtmlPage) (page)).asXml()); response.setDocument(doc); response.setHtml(doc.html()); }else { response.setHtml(page.getWebResponse().getContentAsString()); org.jsoup.nodes.Document doc = org.jsoup.Jsoup.parse(response.getHtml()); response.setDocument(doc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1185/buggy-version/src.main.java.be.maximvdw.spigotsite.http.HTTPUnitRequest.java", "BodyUseAPI": ["be.maximvdw.spigotsite.http.HTTPResponse.setHtml(page.getWebResponse().getContentAsString())", "com.gargoylesoftware.htmlunit.Page.getWebResponse()", "page.getWebResponse().getContentAsString()"], "Fixed commit": "f4acf79da6c0c93ad2e2a4a20e503e2d991d8ee7", "Url": "https://api.github.com/repos/Maximvdw/SpigotSite", "Date": "2016-02-08T14:32:38Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mediaType == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3913/buggy-version/juneau-core.src.main.java.org.apache.juneau.serializer.SerializerGroup.java", "BodyUseAPI": [], "Fixed commit": "22e5cfd020ac8bbbf7c8105fb9295e535db5b2a5", "Url": "https://api.github.com/repos/apache/juneau", "Date": "2017-02-24T22:20:46Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i == (-1)) return s;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4504/buggy-version/arms.src.main.java.com.jess.arms.http.RequestInterceptor.java", "BodyUseAPI": [], "Fixed commit": "548d5520f4c074f4fdbd56b0a1b6cd7531c97145", "Url": "https://api.github.com/repos/PATHobailong24/MVPArms", "Date": "2017-04-14T06:09:54Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (assignment >= 0) { java.lang.String key = property.substring(0, assignment).trim(); java.lang.String value = property.substring((assignment + 1)).trim(); if (((value.startsWith(\"'\")) && (value.endsWith(\"'\"))) || ((value.startsWith(\"\\\"\")) && (value.endsWith(\"\\\"\")))) { value = value.substring(1, ((value.length()) - 1)); } collector.propertyRead(key, value); }else { throw new java.io.IOException(((((\"Line \" + line) + \": cannot read property '\") + property) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3174/buggy-version/docking-frames-ext-css-theme.src.bibliothek.gui.dock.extension.css.intern.CssParser.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.substring(int)", "java.lang.String.substring(int,int)", "java.lang.String.trim()"], "Fixed commit": "b0c7557ecf4b69c6a4247960864a38982244bb9f", "Url": "https://api.github.com/repos/Benoker/DockingFrames", "Date": "2012-09-30T10:54:16Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (notifyListener) notifyOnToggleChange(position);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/551/buggy-version/androidtoggleswitch.src.main.java.belka.us.androidtoggleswitch.widgets.ToggleSwitch.java", "BodyUseAPI": [], "Fixed commit": "69d8d6204ad858c31b0f8aab594e491547092955", "Url": "https://api.github.com/repos/BelkaLab/Android-Toggle-Switch", "Date": "2017-02-07T15:42:24Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (queryIndexList.isEmpty()) { java.lang.System.err.println(\"There is no query index yet, build one first!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7694/buggy-version/src.main.java.de.n39hackers.ir.REPL.java", "BodyUseAPI": [], "Fixed commit": "248c6173a3d6070866c0ed830cb6b74585760a38", "Url": "https://api.github.com/repos/rosario-raulin/n39hackers-ir", "Date": "2014-11-30T11:48:27Z"},
{"Line": "=>1128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((modelsTabPane.getTabCount()) > 0) modelsTabPane.setSelectedIndex(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5783/buggy-version/com.variamos.gui.src.com.variamos.gui.maineditor.BasicGraphEditor.java", "BodyUseAPI": ["javax.swing.JTabbedPane.setSelectedIndex(int)"], "Fixed commit": "20fc5c4d083fb183eb6ce3e34626e670b0f8f6d8", "Url": "https://api.github.com/repos/jilopezv/VARIAMOS", "Date": "2015-02-23T23:01:30Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (firstSpaceIndex < 0) { firstSpaceIndex = input.length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5552/buggy-version/src.commons.NoiseWordProcessor.java", "BodyUseAPI": [], "Fixed commit": "1e1fc258ce76377ec2bfbbe89070aab7a454a0b8", "Url": "https://api.github.com/repos/mikelimantara/assignment1_kwic", "Date": "2015-09-01T11:18:15Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((exisData) != null) { auto.setSelected(exisData.isAutomatic()); if (exisData.isAutomatic()) auto.setText(\"Automatik\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1698/buggy-version/src.de.dakror.spamwars.layer.BuildWeaponLayer.java", "BodyUseAPI": [], "Fixed commit": "727b54995171e5f65ff4f6f212bf93155a8c00bf", "Url": "https://api.github.com/repos/Dakror/Spam-Wars", "Date": "2013-12-15T15:53:47Z"},
{"Line": "=>1098", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((errorView) != null) { errorView.setText(error); errorView.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7577/buggy-version/CNAndroidApp.src.main.java.com.thecn.app.activities.profile.ProfileHeaderController.java", "BodyUseAPI": [], "Fixed commit": "5348d69da1afa24550f4482a09f17b8e1b3f1636", "Url": "https://api.github.com/repos/milanmanvar/CNAndroidApp-Milan", "Date": "2016-04-04T20:19:12Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (snap.isTarget()) { priLabel.setText(java.lang.Integer.toString(snap.getRelativePriority())); }else { priLabel.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2178/buggy-version/hss.src.app.view.MainDisplayController.java", "BodyUseAPI": ["java.lang.Integer.toString(snap.getRelativePriority())", "app.model.Snapshot.getRelativePriority()", "javafx.scene.control.Label.setText(java.lang.String)"], "Fixed commit": "3304f33fd15ac393f2f268a63e997ea0f150432b", "Url": "https://api.github.com/repos/ControlxFreak/T7Software", "Date": "2017-06-20T02:16:14Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (goldCoin < 0) { goldCoin = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/288/buggy-version/entity.src.main.java.com.walkfun.entity.account.UserInfo.java", "BodyUseAPI": [], "Fixed commit": "da985baccff213403f5993a33cbbd821cc3541eb", "Url": "https://api.github.com/repos/Leongum/WalkFun", "Date": "2014-03-05T02:52:49Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newValue != null) { propSpeechLoopDelay = java.lang.Integer.parseInt(((java.lang.String) (newValue))); }else { propSpeechLoopDelay = 1500; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3194/buggy-version/ARE.components.processor.speechprocessor.src.main.java.eu.asterics.component.processor.speechprocessor.SpeechProcessorInstance.java", "BodyUseAPI": [], "Fixed commit": "29b9f7ddbeb9b9641e9518ea4e55354954616cca", "Url": "https://api.github.com/repos/asterics/AsTeRICS", "Date": "2015-01-19T18:28:14Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (date == null) { return \"\"; }else { return org.pikater.shared.util.DateUtils.czechDateFormatter.format(date); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4602/buggy-version/src.org.pikater.shared.util.DateUtils.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(java.util.Date)"], "Fixed commit": "508f1cf1252de0b7e5bc2b51230a43c477617db2", "Url": "https://api.github.com/repos/krajj7/pikater", "Date": "2014-06-28T20:52:47Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((getValue()) != null) { java.lang.Class<?> valueTypeClass = getValue().getClass(); java.lang.Class<?> viewBindingTypeClass = getType(); if (!(valueTypeClass.equals(viewBindingTypeClass))) { throw new java.lang.ClassCastException(java.lang.String.format(\"Incorrect type binding detected. '%s' suggests '%s' but '%s' returns '%s'\", column.getClass().getName(), viewBindingTypeClass.getName(), valueWrapper.getClass().getName(), valueTypeClass.getName())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4602/buggy-version/src.org.pikater.web.vaadin.gui.server.components.dbviews.tableview.DBTableItemPropertyGeneric.java", "BodyUseAPI": [], "Fixed commit": "508f1cf1252de0b7e5bc2b51230a43c477617db2", "Url": "https://api.github.com/repos/krajj7/pikater", "Date": "2014-06-28T20:52:47Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cubeDesc.getDictionaryBuilderClass(col)) != null) { isReducerLocalBuildDict = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5799/buggy-version/engine-mr.src.main.java.org.apache.kylin.engine.mr.steps.FactDistinctColumnsReducer.java", "BodyUseAPI": [], "Fixed commit": "415a9ea244247d9d050404bb43990e8b8bfdcf5f", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2016-12-21T06:08:20Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(pose.toString().contains(\"REST\"))) && (!(pose.toString().contains(\"TAP\")))) java.lang.System.out.println(pose.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2850/buggy-version/src.HelloMyo.java", "BodyUseAPI": ["Pose.toString()", "java.io.PrintStream.println(pose.toString())"], "Fixed commit": "b0832ba55c0874266389e90bd4dd6b43b8a17bbe", "Url": "https://api.github.com/repos/mudkipium/hophacksf15", "Date": "2015-09-13T13:34:29Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((st.assign[j]) != (-1)) && (prob.Assignables[j].isCourse)) { if (((i != j) && ((st.assign[j]) != (-1))) && (((st.assign[j]) == (st.assign[i])) || (prob.overlap[st.assign[j]][st.assign[i]]))) { if (prob.Assignables[i].name.substring(0, 8).equals(prob.Assignables[j].name.substring(0, 8))) { dSecDiffTotal++; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8642/buggy-version/CourseScheduler.src.scheduler.Evaluator.java", "BodyUseAPI": ["prob.Assignables[i].name.substring(int,int)", "prob.Assignables[i].name.substring(0, 8).equals(prob.Assignables[j].name.substring(0, 8))", "prob.Assignables[j].name.substring(int,int)"], "Fixed commit": "865d0cf3ba2b4a019fd5ec2f92a765180e931121", "Url": "https://api.github.com/repos/Ironykins/433-ai-scheduling", "Date": "2015-12-05T23:44:10Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.developerstudio.eclipse.capp.core.artifacts.manager.CAppEnvironment.getRegistryHandler().selectRegistryPath(org.wso2.developerstudio.eclipse.registry.core.interfaces.IRegistryConnection[],java.lang.String,java.lang.String,IRegistryHandler.SELECTED_REGISTRY_RESOURCE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (selectedPathData == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7510/buggy-version/datamapper-tool.org.wso2.developerstudio.visualdatamapper.diagram.src.org.wso2.developerstudio.datamapper.diagram.custom.util.SchemaKeyEditorDialog.java", "BodyUseAPI": [], "Fixed commit": "340d428abddaa583e8a6e82da701eb9853ef4f34", "Url": "https://api.github.com/repos/maheeka/developer-studio", "Date": "2016-02-16T08:16:36Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.swt.widgets.FileDialog.open()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (filePath == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7510/buggy-version/datamapper-tool.org.wso2.developerstudio.visualdatamapper.diagram.src.org.wso2.developerstudio.datamapper.diagram.custom.util.SchemaKeyEditorDialog.java", "BodyUseAPI": [], "Fixed commit": "340d428abddaa583e8a6e82da701eb9853ef4f34", "Url": "https://api.github.com/repos/maheeka/developer-studio", "Date": "2016-02-16T08:16:36Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.java.model.Piece.attackSquares(int[][])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (attackingPositions != null) { for (main.java.model.Square attackingSquare : attackingPositions) { bitmap[attackingSquare.getRow()][attackingSquare.getColumn()] = 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8826/buggy-version/src.main.java.model.Board.java", "BodyUseAPI": [], "Fixed commit": "414f22a04be6f658fae63112971ad3bd01889fef", "Url": "https://api.github.com/repos/nylend95/Chess", "Date": "2017-02-16T23:17:29Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.java.model.Piece.attackSquares(int[][])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (attackingPositions != null) { for (main.java.model.Square attackingSquare : attackingPositions) { bitmap[attackingSquare.getRow()][attackingSquare.getColumn()] = 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8826/buggy-version/src.main.java.model.Board.java", "BodyUseAPI": [], "Fixed commit": "414f22a04be6f658fae63112971ad3bd01889fef", "Url": "https://api.github.com/repos/nylend95/Chess", "Date": "2017-02-16T23:17:29Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (failed) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6810/buggy-version/src.main.java.org.vngx.jsch.userauth.UserAuthPublicKey.java", "BodyUseAPI": [], "Fixed commit": "79eabd7fb181e9237883aa2821c0b642eb14e725", "Url": "https://api.github.com/repos/vngx/vngx-jsch", "Date": "2011-09-14T14:32:13Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((numericControl.getValidationRules()) != null) && (!(numericControl.getValidationRules().isEmpty()))) { edu.common.dynamicextensions.domain.nui.ValidationRule vr = numericControl.getValidationRule(\"range\"); java.util.Map values = vr.getParams(); controlProps.setProperty(\"minimumValue\", values.get(\"min\")); controlProps.setProperty(\"maximumValue\", values.get(\"max\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5059/buggy-version/software.DynamicExtentions.src.java.edu.wustl.dynamicextensions.formdesigner.mapper.ControlMapper.java", "BodyUseAPI": ["edu.common.dynamicextensions.domain.nui.NumberField.getValidationRule(java.lang.String)"], "Fixed commit": "a6430682caa35b46780ad6452cf7cbafaaadaf86", "Url": "https://api.github.com/repos/NCIP/catissue-dynamic-extensions", "Date": "2015-04-22T16:57:36Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tenantId != (org.wso2.carbon.utils.multitenancy.MultitenantConstants.SUPER_TENANT_ID)) { username = org.wso2.carbon.utils.multitenancy.MultitenantUtils.getTenantAwareUsername(username); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4637/buggy-version/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBUtils.java", "BodyUseAPI": [], "Fixed commit": "d57e0b46c1fa816d84900322a398e5c89f156b7d", "Url": "https://api.github.com/repos/madhawa-gunasekara/carbon-data", "Date": "2015-07-10T04:06:00Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isParseMaxMode) disambiguator.initializeFromParser(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2662/buggy-version/org.spoofax.jsglr.src.org.spoofax.jsglr.client.SGLR.java", "BodyUseAPI": [], "Fixed commit": "258338148db59c9101bc5a8d3748b7c04b7359ba", "Url": "https://api.github.com/repos/metaborg/jsglr", "Date": "2013-09-09T14:18:53Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getView()) != null) { setListShown(false); loadBoards((to + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5925/buggy-version/src.com.snowd.android.jimi.fragment.ThreadViewFragment.java", "BodyUseAPI": [], "Fixed commit": "e59ded8e1addb72b2a15675872bd501b85a439fb", "Url": "https://api.github.com/repos/snowd/guitar_china_android_demo", "Date": "2013-11-22T10:26:26Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getView()) != null) { setListShown(false); loadBoards((to + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5925/buggy-version/src.com.snowd.android.jimi.fragment.TopicViewFragment.java", "BodyUseAPI": [], "Fixed commit": "e59ded8e1addb72b2a15675872bd501b85a439fb", "Url": "https://api.github.com/repos/snowd/guitar_china_android_demo", "Date": "2013-11-22T10:26:26Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.open2jam.parser.BMSParser.parseBMSHeader(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (chart != null) list.add(chart);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3840/buggy-version/base.src.org.open2jam.parser.BMSParser.java", "BodyUseAPI": ["org.open2jam.parser.ChartList.add(org.open2jam.parser.BMSChart)"], "Fixed commit": "128baf4c6ef9b127bbe9f4d620b60f9d95ce495d", "Url": "https://api.github.com/repos/chaosfox/open2jam", "Date": "2011-03-11T13:08:59Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list.isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3840/buggy-version/base.src.org.open2jam.parser.BMSParser.java", "BodyUseAPI": [], "Fixed commit": "128baf4c6ef9b127bbe9f4d620b60f9d95ce495d", "Url": "https://api.github.com/repos/chaosfox/open2jam", "Date": "2011-03-11T13:08:59Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((myParentAgent.hotelsInfo.size()) >= (myParentAgent.hotels.size())) { msgPropagated = utils.Utils.createMessageWithAidReceiver(ACLMessage.INFORM, client, codec, ontology, HotelmaniaOntology.REQUESTHOTELINFO); msgPropagated.setContentObject(myParentAgent.hotelsInfo); myParentAgent.send(msgPropagated); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6551/buggy-version/src.main.java.behaviours.hotelmania.HandleResponseHotelInfo.java", "BodyUseAPI": ["jade.lang.acl.ACLMessage.setContentObject(myParentAgent.hotelsInfo)", "Hotelmania.group3.AgHotelmania.send(jade.lang.acl.ACLMessage)"], "Fixed commit": "ad2afbf8bfa26153784f7966af2cad9b2dc4b7c0", "Url": "https://api.github.com/repos/IsmaelMT/emse-hotelmania", "Date": "2015-05-26T14:16:17Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(deletedNodeNames.contains(deletedNode.getVmName()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4905/buggy-version/server.cluster-mgmt.src.main.java.com.vmware.bdd.service.job.ClusterUpdateDataStep.java", "BodyUseAPI": [], "Fixed commit": "16f9da9eb48d6b4792f5ae00e64758ffcbe603af", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-03-10T07:58:00Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((e != null) && ((e.getMessage()) != null)) && ((e.getMessage()) != \"\")) { mav.addObject(\"message\", e.getMessage()); }else { mav.addObject(\"message\", \"We're sorry - something has gone wrong on out end.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3422/buggy-version/src.main.java.net.bndy.wf.exceptions.ControllerExceptionHandler.java", "BodyUseAPI": ["org.springframework.web.servlet.ModelAndView.addObject(java.lang.String,java.lang.String)", "java.lang.Exception.getMessage()"], "Fixed commit": "eedfc9fbc18790456f5e65fb312f1a6e63c33b14", "Url": "https://api.github.com/repos/BNDY-NET/web-framework-for-java", "Date": "2017-11-29T06:02:28Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.bndy.wf.modules.app.models.User.getRoles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (roles != null) { for (net.bndy.wf.modules.app.models.Role role : this.getRoles()) { grantedAuthorities.add(new org.springframework.security.core.authority.SimpleGrantedAuthority(role.getName())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3422/buggy-version/src.main.java.net.bndy.wf.modules.app.models.User.java", "BodyUseAPI": [], "Fixed commit": "eedfc9fbc18790456f5e65fb312f1a6e63c33b14", "Url": "https://api.github.com/repos/BNDY-NET/web-framework-for-java", "Date": "2017-11-29T06:02:28Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentVersion.contains(\"-DEV\")) { log.info(\"Plugin in DEV mode!\"); callback.upToDate(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1992/buggy-version/Core.src.main.java.org.inventivetalent.update.spiget.SpigetUpdateAbstract.java", "BodyUseAPI": [], "Fixed commit": "cab58ecc3668a6676508bfbfb7c591b7edd826ab", "Url": "https://api.github.com/repos/SimplyBallistic/SpigetUpdater", "Date": "2017-07-29T14:09:31Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.boot.autoconfigure.jdbc.DataSourceBuilder.build()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dataSource instanceof org.apache.tomcat.jdbc.pool.DataSource) { ((org.apache.tomcat.jdbc.pool.DataSource) (dataSource)).getPoolProperties().setTestOnBorrow(true); ((org.apache.tomcat.jdbc.pool.DataSource) (dataSource)).getPoolProperties().setValidationQuery(\"SELECT 1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5233/buggy-version/src.main.java.org.hspconsortium.platform.api.fhir.MySQLConfig.java", "BodyUseAPI": [], "Fixed commit": "6d01ce4541367ad9e95bc0f5fe790f7e7025812e", "Url": "https://api.github.com/repos/smart-on-fhir-reference-implementation/reference-api-mysql", "Date": "2016-06-21T16:14:38Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.boot.autoconfigure.jdbc.DataSourceBuilder.build()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dataSource instanceof org.apache.tomcat.jdbc.pool.DataSource) { ((org.apache.tomcat.jdbc.pool.DataSource) (dataSource)).getPoolProperties().setTestOnBorrow(true); ((org.apache.tomcat.jdbc.pool.DataSource) (dataSource)).getPoolProperties().setValidationQuery(\"SELECT 1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5233/buggy-version/src.main.java.org.hspconsortium.platform.api.fhir.MySQLConfig.java", "BodyUseAPI": [], "Fixed commit": "6d01ce4541367ad9e95bc0f5fe790f7e7025812e", "Url": "https://api.github.com/repos/smart-on-fhir-reference-implementation/reference-api-mysql", "Date": "2016-06-21T16:14:38Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hspconsortium.platform.api.fhir.service.HspcDataSourceRepository.createDataSource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dataSource instanceof org.apache.tomcat.jdbc.pool.DataSource) { ((org.apache.tomcat.jdbc.pool.DataSource) (dataSource)).getPoolProperties().setTestOnBorrow(true); ((org.apache.tomcat.jdbc.pool.DataSource) (dataSource)).getPoolProperties().setValidationQuery(\"SELECT 1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5233/buggy-version/src.main.java.org.hspconsortium.platform.api.fhir.service.HspcDataSourceRepository.java", "BodyUseAPI": [], "Fixed commit": "6d01ce4541367ad9e95bc0f5fe790f7e7025812e", "Url": "https://api.github.com/repos/smart-on-fhir-reference-implementation/reference-api-mysql", "Date": "2016-06-21T16:14:38Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.math.BigDecimal.doubleValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result < 0) { ChangeText.setForeground(java.awt.Color.red); }else { ChangeText.setForeground(new java.awt.Color(45, 117, 69)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7048/buggy-version/UniversitySouvenirStore.src.sg.edu.nus.iss.universitystore.view.subpanel.SalesPanel.java", "BodyUseAPI": [], "Fixed commit": "999803b180a5996730a418d8c123e1a2026cd4c5", "Url": "https://api.github.com/repos/team24se5ft/UniversitySouvenirStore", "Date": "2016-04-02T10:50:25Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.ask) == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8594/buggy-version/src.com.framework.options.Put.java", "BodyUseAPI": [], "Fixed commit": "cb2d704a1e92605eda794d059860c5db14a8c599", "Url": "https://api.github.com/repos/craig-stevenson/options-framework", "Date": "2015-04-25T20:11:26Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sharedVisibility) { for (final byte[] bitmask : bitmasks) { final java.nio.ByteBuffer input = java.nio.ByteBuffer.wrap(flattenedValue); final int fieldLength = input.getInt(); final byte[] fieldValueBytes = new byte[fieldLength]; input.get(fieldValueBytes); final mil.nga.giat.geowave.core.store.data.PersistentValue<java.lang.Object> persistentValue = new mil.nga.giat.geowave.core.store.data.PersistentValue<java.lang.Object>(new mil.nga.giat.geowave.core.index.ByteArrayId(bitmask), null); final mil.nga.giat.geowave.core.store.DataStoreEntryInfo.FieldInfo<java.lang.Object> fieldInfo = mil.nga.giat.geowave.core.store.memory.DataStoreUtils.getFieldInfo(persistentValue, fieldValueBytes, commonVisibility); fieldInfoList.add(fieldInfo); } }else { final mil.nga.giat.geowave.core.store.data.PersistentValue<java.lang.Object> persistentValue = new mil.nga.giat.geowave.core.store.data.PersistentValue<java.lang.Object>(new mil.nga.giat.geowave.core.index.ByteArrayId(bitmasks.get(0)), null); final mil.nga.giat.geowave.core.store.DataStoreEntryInfo.FieldInfo<java.lang.Object> fieldInfo = mil.nga.giat.geowave.core.store.memory.DataStoreUtils.getFieldInfo(persistentValue, flattenedValue, commonVisibility); fieldInfoList.add(fieldInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2315/buggy-version/extensions.datastores.accumulo.src.main.java.mil.nga.giat.geowave.datastore.accumulo.util.AccumuloUtils.java", "BodyUseAPI": [], "Fixed commit": "6350bf0be9813cf8144a897914e296872ca6a8b1", "Url": "https://api.github.com/repos/locationtech/geowave", "Date": "2016-04-27T14:15:51Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.ethan.myclub.global.Preferences.isLogined()) request.addHeader(\"Authorization\", (\"JWT \" + (com.ethan.myclub.global.Preferences.sToken)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6413/buggy-version/app.src.main.java.com.ethan.myclub.network.ApiHelper.java", "BodyUseAPI": [], "Fixed commit": "7b24f457c6646e84bc375147d6a36f00ed579d3a", "Url": "https://api.github.com/repos/Ethan-yt/MyClub", "Date": "2017-03-14T18:12:04Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numberOfNodes) <= 1) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8110/buggy-version/node.src.be.dist.node.NodeSetup.java", "BodyUseAPI": [], "Fixed commit": "ef867284c57097e8fbc3ee82401217b6eb805fff", "Url": "https://api.github.com/repos/iliessens/SystemY", "Date": "2017-11-27T11:14:10Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isImpassable(x, y, radius)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/464/buggy-version/1314-Worms-Part2.src.worms.model.World.java", "BodyUseAPI": [], "Fixed commit": "5eb0ea8b1f3151fbb8346fa30f5123824f0a72e9", "Url": "https://api.github.com/repos/WormsRepository/Project", "Date": "2014-04-22T15:54:11Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((account.getId()) == null) || (((account.getPassword()) != null) && (!(account.getPassword().trim().isEmpty())))) { logger.info(\"Create password\"); org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder passwordEncoder = new org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder(); account.setPassword(passwordEncoder.encode(account.getPassword())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4023/buggy-version/src.main.java.com.we2seek.store.service.AccountServiceImpl.java", "BodyUseAPI": ["com.we2seek.store.entity.Account.getPassword()", "org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder.encode(account.getPassword())", "com.we2seek.store.entity.Account.setPassword(passwordEncoder.encode(account.getPassword()))"], "Fixed commit": "5f17ed873ac04145fdd6f8a6ed39feab1e5bcc1f", "Url": "https://api.github.com/repos/we2seek/web-store", "Date": "2016-05-11T14:49:26Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDrawerLayout) != null) { mDrawerLayout.setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2535/buggy-version/src.net.eledge.android.eu.europeana.gui.activity.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "fadb3d5b469894ae88881fb4cd6e464a51ef6f09", "Url": "https://api.github.com/repos/eLedge/europeana4android", "Date": "2013-06-24T15:10:13Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDrawerLayout) != null) { mDrawerLayout.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2535/buggy-version/src.net.eledge.android.eu.europeana.gui.activity.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "fadb3d5b469894ae88881fb4cd6e464a51ef6f09", "Url": "https://api.github.com/repos/eLedge/europeana4android", "Date": "2013-06-24T15:10:13Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.helix.controller.stages.ClusterDataCache.getStateModelDef(is.getStateModelDefRef())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (stateModelDef == null) { throw new org.apache.helix.HelixException((((\"State model definition \" + (is.getStateModelDefRef())) + \" for resource not found!\") + (is.getResourceName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2996/buggy-version/helix-core.src.main.java.org.apache.helix.tools.ClusterStateVerifier.BestPossibleExternalViewVerifier.java", "BodyUseAPI": [], "Fixed commit": "df215edb63551b24a73a4995dfc0579a800ea757", "Url": "https://api.github.com/repos/lei-PATH/helix", "Date": "2016-11-03T21:13:42Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((super.movable.getMaterial()) == (jsettlers.common.material.EMaterialType.NO_MATERIAL)) { reoffer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7692/buggy-version/jsettlers.logic.src.main.java.jsettlers.logic.movable.strategies.BearerMovableStrategy.java", "BodyUseAPI": [], "Fixed commit": "63a4164f80177a5134c21b4be2270c7fb9bcf190", "Url": "https://api.github.com/repos/jsettlers/settlers-remake", "Date": "2017-02-18T17:17:32Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lowagie.text.pdf.PdfReader.getPdfObject(catalog.get(PdfName.ACROFORM),reader.getCatalog())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (acroFormObject instanceof com.lowagie.text.pdf.PdfDictionary) { com.lowagie.text.pdf.PdfDictionary acroForm = ((com.lowagie.text.pdf.PdfDictionary) (acroFormObject)); if (((acroFields) != null) && (acroFields.getXfa().isChanged())) { markUsed(acroForm); if (!(flat)) acroFields.getXfa().setXfa(this); } if ((sigFlags) != 0) { if (acroForm != null) { acroForm.put(PdfName.SIGFLAGS, new com.lowagie.text.pdf.PdfNumber(sigFlags)); markUsed(acroForm); markUsed(catalog); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6403/buggy-version/openpdf.src.main.java.com.lowagie.text.pdf.PdfStamperImp.java", "BodyUseAPI": [], "Fixed commit": "6e210b0dd199f42847c0129dd6d359d7e2891deb", "Url": "https://api.github.com/repos/LibrePDF/OpenPDF", "Date": "2017-05-04T20:40:20Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((zoom) > tmpZoom) zoom = tmpZoom;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6435/buggy-version/Point3D.Point3DViewer.java", "BodyUseAPI": [], "Fixed commit": "a8dc10b58cecf05643058cbb670ca93afeae8719", "Url": "https://api.github.com/repos/FumihikoKouno/Tools", "Date": "2013-11-29T02:08:57Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (idx < 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6435/buggy-version/Point3D.Point3DPlayer.java", "BodyUseAPI": [], "Fixed commit": "a8dc10b58cecf05643058cbb670ca93afeae8719", "Url": "https://api.github.com/repos/FumihikoKouno/Tools", "Date": "2013-11-29T02:08:57Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(definition.getStreamId().equals(entry.getKey()))) && (i < (streamDefinitionMap.entrySet().size()))) { continue; }else if (definition.getStreamId().equals(entry.getKey())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3855/buggy-version/siddhi-hive-component.org.wso2.carbon.siddhihive.core.src.main.java.org.wso2.carbon.siddhihive.core.internal.SiddhiHiveManager.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, org.wso2.carbon.siddhihive.core.configurations.StreamDefinitionExt>.getKey()", "definition.getStreamId().equals(entry.getKey())", "org.wso2.siddhi.query.api.definition.StreamDefinition.getStreamId()"], "Fixed commit": "c53ecd05b6ab5256b09ab35bf431abe669bf4a66", "Url": "https://api.github.com/repos/tishan89/siddhi-hive", "Date": "2014-06-23T07:47:55Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Game.currentGame.getActiveLayer()) instanceof de.dakror.arise.layer.CityHUDLayer) { java.lang.String string = (((\"Lvl. \" + ((level) + 1)) + \" \") + (name)) + ((stage) == 2 ? \" (Abriss)\" : (stage) == 3 ? \" (Ausbau)\" : (stage) == 0 ? \" (Bau)\" : \"\"); de.dakror.gamesetup.util.Helper.drawShadow(x, y, ((g.getFontMetrics(g.getFont().deriveFont(30.0F)).stringWidth(string)) + 30), 64, g); de.dakror.gamesetup.util.Helper.drawString(string, (x + 15), (y + 40), g, 30); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/95/buggy-version/src.main.java.de.dakror.arise.game.building.Building.java", "BodyUseAPI": [], "Fixed commit": "caff896a0dfeec7eec642e4ff35cb119fd576b52", "Url": "https://api.github.com/repos/Dakror/Arise", "Date": "2014-03-06T20:47:01Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (android.os.Build.VERSION_CODES.ICE_CREAM_SANDWICH)) { android.net.Uri.Builder builder = CalendarContract.CONTENT_URI.buildUpon(); builder.appendPath(\"time\"); android.content.ContentUris.appendId(builder, currentTime); LaunchIntent = new android.content.Intent(android.content.Intent.ACTION_VIEW).setData(builder.build()); }else { LaunchIntent = new android.content.Intent(android.content.Intent.ACTION_VIEW).setType(\"vnd.android.cursor.item/event\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4338/buggy-version/app.src.main.java.ch.deletescape.lawnchair.pixelify.DateWidgetView.java", "BodyUseAPI": [], "Fixed commit": "44bcac2812e782256b6ac00828acdd02a829ca96", "Url": "https://api.github.com/repos/ijustyce/Lawnchair", "Date": "2017-07-21T22:08:11Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(systemPath)) { setDependencySystemPath(groupId, artifactId, systemPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2394/buggy-version/src.main.java.com.phresco.pom.util.PomProcessor.java", "BodyUseAPI": ["com.phresco.pom.util.PomProcessor.setDependencySystemPath(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "91bfd87c588aeeff8730b47bb0c1c821fec71d91", "Url": "https://api.github.com/repos/phresco/phresco-pom", "Date": "2013-01-30T15:05:46Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mLockPatternUtils.isLockFingerEnabled()) && (!(mLockPatternUtils.savedFingerExists()))) { mLockPatternUtils.setLockFingerEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7319/buggy-version/policy.src.com.android.internal.policy.impl.LockPatternKeyguardView.java", "BodyUseAPI": [], "Fixed commit": "ace3bf834c65cb61fec8776e244f84e08ba2b13f", "Url": "https://api.github.com/repos/firecode95/android_frameworks_base", "Date": "2013-08-21T08:02:32Z"},
{"Line": "=>565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pr.getRequestType().equals(X_LVE_PaymentRequest.REQUESTTYPE_APInvoice)) { org.compiere.model.MInvoice inv = new org.compiere.model.MInvoice(getCtx(), prl.getC_Invoice_ID(), get_TrxName()); C_BPartner_ID = inv.getC_BPartner_ID(); }else if (pr.getRequestType().equals(X_LVE_PaymentRequest.REQUESTTYPE_PurchaseOrder)) { org.compiere.model.MOrder order = new org.compiere.model.MOrder(getCtx(), prl.getC_Order_ID(), get_TrxName()); C_BPartner_ID = order.getC_BPartner_ID(); }else if (pr.getRequestType().equals(X_LVE_PaymentRequest.REQUESTTYPE_GLJournal)) { org.compiere.model.MJournalLine jl = new org.compiere.model.MJournalLine(getCtx(), prl.getGL_JournalLine_ID(), get_TrxName()); C_BPartner_ID = jl.get_ValueAsInt(\"C_BPartner_ID\"); }else { C_BPartner_ID = prl.getC_BPartner_ID(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1520/buggy-version/patches.org.compiere.model.MPaySelectionCheck.java", "BodyUseAPI": ["org.spin.model.MLVEPaymentRequest.getRequestType()", "pr.getRequestType().equals(X_LVE_PaymentRequest.REQUESTTYPE_GLJournal)", "org.spin.model.MLVEPaymentRequest.getRequestType()", "pr.getRequestType().equals(X_LVE_PaymentRequest.REQUESTTYPE_PurchaseOrder)"], "Fixed commit": "3e3123f46fdb8eeb9b57b9adb0ede03ec41a76ac", "Url": "https://api.github.com/repos/erpcya/LVE-EFT", "Date": "2015-02-14T17:49:01Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(attributeName)) { localizer.removeLocalizedValue(key, LocalizedObjectTypes.CUSTOM_ATTRIBUTE_NAME, language); }else { localizer.storeLocalizedResource(language, key, LocalizedObjectTypes.CUSTOM_ATTRIBUTE_NAME, attributeName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4564/buggy-version/oscm-accountmgmt-intsvc.javasrc.org.oscm.accountservice.dataaccess.UdaDefinitionAccess.java", "BodyUseAPI": ["org.oscm.i18nservice.local.LocalizerServiceLocal.storeLocalizedResource(java.lang.String,long,LocalizedObjectTypes.CUSTOM_ATTRIBUTE_NAME,java.lang.String)"], "Fixed commit": "ffef27894d3f295984eb33125b38b45752f33788", "Url": "https://api.github.com/repos/servicecatalog/development", "Date": "2016-12-21T09:19:31Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((speaker.getCastFigure(i)) != null) { if (((speaker.getCastFigure(i).getNames()) != null) && ((speaker.getCastFigure(i).getNames().size()) > 0)) { p.print(speaker.getCastFigure(i).getNames(0)); }else { p.print(null); } if (((speaker.getCastFigure(i).getXmlId()) != null) && ((speaker.getCastFigure(i).getXmlId().size()) > 0)) { p.print(speaker.getCastFigure(i).getXmlId(0)); }else { p.print(null); } }else { p.print(null); p.print(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4501/buggy-version/de.unistuttgart.ims.drama.io.core.src.main.java.de.unistuttgart.quadrama.io.core.CSVVariant.java", "BodyUseAPI": ["de.unistuttgart.ims.drama.api.Speaker.getCastFigure(int)", "org.apache.commons.csv.CSVPrinter.print(speaker.getCastFigure(i).getNames(0))", "org.apache.commons.csv.CSVPrinter.print(speaker.getCastFigure(i).getXmlId(0))", "speaker.getCastFigure(i).getNames().size()", "de.unistuttgart.ims.drama.api.Speaker.getCastFigure(int)", "de.unistuttgart.ims.drama.api.Speaker.getCastFigure(int)", "de.unistuttgart.ims.drama.api.Speaker.getCastFigure(int)", "speaker.getCastFigure(i).getXmlId()", "speaker.getCastFigure(i).getXmlId(int)", "speaker.getCastFigure(i).getNames()", "speaker.getCastFigure(i).getXmlId().size()", "de.unistuttgart.ims.drama.api.Speaker.getCastFigure(int)", "de.unistuttgart.ims.drama.api.Speaker.getCastFigure(int)", "speaker.getCastFigure(i).getXmlId()", "speaker.getCastFigure(i).getNames()", "speaker.getCastFigure(i).getNames(int)"], "Fixed commit": "20a0c0b0ba5c7d1cb1600c2318f72542b19f6b27", "Url": "https://api.github.com/repos/quadrama/DramaNLP", "Date": "2017-11-04T08:08:20Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(commentobj.getString(\"comments\").equals(\"\"))) { commentview.txtviewmessage.setText(commentobj.getString(\"comments\")); }else { commentview.txtviewmessage.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6078/buggy-version/android.src.org.egov.android.view.adapter.CommentsAdapter.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "android.widget.TextView.setText(commentobj.getString(\"comments\"))"], "Fixed commit": "314a63ddc6c9136840b624c1eb2e190fe2c2f0b5", "Url": "https://api.github.com/repos/egovernments/egov-mobile", "Date": "2015-11-05T08:22:54Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getWorldObj().isRemote) { extendTarget = tagCompound.getFloat(\"extendTarget\"); sideTarget = tagCompound.getFloat(\"sideTarget\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/516/buggy-version/java.k4unl.minecraft.Hydraulicraft.tileEntities.harvester.TileHarvesterTrolley.java", "BodyUseAPI": [], "Fixed commit": "fabba1cfbe9fdca422e7f9339b07e59fe8bb2e7e", "Url": "https://api.github.com/repos/K-4U/Hydraulicraft", "Date": "2014-05-07T17:16:52Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getWorldObj().isRemote) { doMove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/516/buggy-version/java.k4unl.minecraft.Hydraulicraft.tileEntities.harvester.TileHarvesterTrolley.java", "BodyUseAPI": [], "Fixed commit": "fabba1cfbe9fdca422e7f9339b07e59fe8bb2e7e", "Url": "https://api.github.com/repos/K-4U/Hydraulicraft", "Date": "2014-05-07T17:16:52Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!inContact) { this.timeSince = jumpingalien.model.Utilities.clipInRange(0.0, this.timeInterval, this.timeSince); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5293/buggy-version/src.jumpingalien.model.reactions.TerrainCollisionDamager.java", "BodyUseAPI": [], "Fixed commit": "9bbc7656326e8b6612d2665a6e8474bb5df7f786", "Url": "https://api.github.com/repos/mennovf/ogp", "Date": "2015-04-27T13:41:33Z"},
{"Line": "=>904", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugins.adufour.ezplug.EzVarFile.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (pathName != null) { if (!(pathName.getName().endsWith(\".xml\"))) { pathName = new java.io.File(((pathName.getAbsolutePath()) + \".xml\")); } this.saveParameters(pathName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4203/buggy-version/src.plugins.mitiv.blinddeconv.MitivBlindDeconvolution.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)", "java.io.File.getAbsolutePath()", "java.io.File.getName()"], "Fixed commit": "ef3e4bc0928a92a9d27b399b22a18dca1f394dcc", "Url": "https://api.github.com/repos/FerreolS/tipi4icy", "Date": "2017-02-27T10:34:53Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((loadFile.getValue()) != null) { loadParamClicked(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4203/buggy-version/src.plugins.mitiv.blinddeconv.MitivBlindDeconvolution.java", "BodyUseAPI": [], "Fixed commit": "ef3e4bc0928a92a9d27b399b22a18dca1f394dcc", "Url": "https://api.github.com/repos/FerreolS/tipi4icy", "Date": "2017-02-27T10:34:53Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(list.containsKey(element.hashCode()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1752/buggy-version/src.dna.graph.datastructures.DHashMultimap.java", "BodyUseAPI": [], "Fixed commit": "bcced51daef080f96533bb73734bb59bec66e03e", "Url": "https://api.github.com/repos/NicoHaase/DNA", "Date": "2014-05-28T07:38:05Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(list.containsKey(element.hashCode()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1752/buggy-version/src.dna.graph.datastructures.DLinkedHashMultimap.java", "BodyUseAPI": [], "Fixed commit": "bcced51daef080f96533bb73734bb59bec66e03e", "Url": "https://api.github.com/repos/NicoHaase/DNA", "Date": "2014-05-28T07:38:05Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((signedFile.getSMIMEMessageWraper().getTimeStampToken()) != null) { timeStampDateStr = org.votingsystem.util.DateUtils.getLongDate_Es(signedFile.getSMIMEMessageWraper().getTimeStampToken().getTimeStampInfo().getGenTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3704/buggy-version/ClientTool.src.main.java.org.votingsystem.client.pane.SignedFilePane.java", "BodyUseAPI": ["signedFile.getSMIMEMessageWraper().getTimeStampToken()", "signedFile.getSMIMEMessageWraper().getTimeStampToken().getTimeStampInfo()", "org.votingsystem.client.model.SignedFile.getSMIMEMessageWraper()", "org.votingsystem.util.DateUtils.getLongDate_Es(signedFile.getSMIMEMessageWraper().getTimeStampToken().getTimeStampInfo().getGenTime())", "signedFile.getSMIMEMessageWraper().getTimeStampToken().getTimeStampInfo().getGenTime()"], "Fixed commit": "071ffa7278019dd8345f2e452c6cdec0333aa499", "Url": "https://api.github.com/repos/votingsystem/votingsystem", "Date": "2014-09-12T11:29:25Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.osmand.plus.audionotes.NotesFragment.getView()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (view != null) { view.findViewById(R.id.select_all).setVisibility((selectionMode ? android.view.View.VISIBLE : android.view.View.GONE)); ((net.osmand.plus.myplaces.FavoritesActivity) (getActivity())).setToolbarVisibility(((!selectionMode) && (net.osmand.plus.helpers.AndroidUiHelper.isOrientationPortrait(getActivity())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2554/buggy-version/OsmAnd.src.net.osmand.plus.audionotes.NotesFragment.java", "BodyUseAPI": ["android.view.View.findViewById(R.id.select_all)", "view.findViewById(R.id.select_all).setVisibility((selectionMode ? android.view.View.VISIBLE : android.view.View.GONE))"], "Fixed commit": "70366e6b76f9958dd61947eaaba4a4dbe3423058", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2016-01-30T08:02:12Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bean.getList()) != null) { for (cn.zzuzl.model.TermScore termScore : bean.getList()) { for (cn.zzuzl.model.ScoreVO scoreVO : termScore.getScores()) { if (!flag) { row.createCell((index++), HSSFCell.CELL_TYPE_STRING).setCellValue(scoreVO.getTitle()); } scoreRow.createCell((_index++), HSSFCell.CELL_TYPE_STRING).setCellValue(scoreVO.getScore()); } } flag = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8237/buggy-version/src.main.java.cn.zzuzl.common.util.ExcelExportUtil.java", "BodyUseAPI": ["cn.zzuzl.dto.QualityJsonBean.getList()"], "Fixed commit": "1aac1aeebf855c5a2de0ce51ddfc66c5986b8221", "Url": "https://api.github.com/repos/zzuzl/Mis", "Date": "2016-09-18T11:39:21Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((music) != null) { music.setVolume(volume); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/655/buggy-version/core.src.com.retroMachines.util.MusicManager.java", "BodyUseAPI": [], "Fixed commit": "e6493985adc266b4d4bf28ad0f5427851d2ac642", "Url": "https://api.github.com/repos/Die-anonymen-PSEler/game", "Date": "2015-03-03T10:04:06Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (this.game.getPot().getBulgingSoundFX())) { this.game.getPot().getBulgingSoundFX().getSound().play(1.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/857/buggy-version/core.src.com.psychogra.slon2.models.PotGameInputAdapter.java", "BodyUseAPI": ["this.game.getPot().getBulgingSoundFX().getSound().play(float)", "this.game.getPot().getBulgingSoundFX()", "com.psychogra.slon2.models.game.PotGame.getPot()", "this.game.getPot().getBulgingSoundFX().getSound()"], "Fixed commit": "34bffcaaa94d2f9888743e334afa0723c8cef137", "Url": "https://api.github.com/repos/lmodlinski/slon2", "Date": "2017-09-24T11:22:38Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!forSearch) && (2 == (org.apache.commons.lang.StringUtils.indexOf(domainName, \"--\")))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7505/buggy-version/rdap-webapp.src.main.java.org.restfulwhois.rdap.core.common.util.DomainUtil.java", "BodyUseAPI": [], "Fixed commit": "257c4307c4c252d2a3f29059dfeab63aafa862f9", "Url": "https://api.github.com/repos/cnnic/rdap", "Date": "2014-12-01T06:02:06Z"},
{"Line": "=>642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((from == 1) && (entity.isEntityAlive())) { toDim.spawnEntityInWorld(entity); toDim.updateEntityWithOptionalForce(entity, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/843/buggy-version/src.main.java.crazypants.enderio.teleport.telepad.TileTelePad.java", "BodyUseAPI": ["net.minecraft.world.WorldServer.updateEntityWithOptionalForce(net.minecraft.entity.Entity,boolean)", "net.minecraft.world.WorldServer.spawnEntityInWorld(net.minecraft.entity.Entity)"], "Fixed commit": "ada5b4fc4189817ba20c1e9c93bdb4c1e8eb8cc7", "Url": "https://api.github.com/repos/SleepyTrousers/EnderIO", "Date": "2016-01-18T19:31:06Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<com.example.photoshare.thrift.Comment>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (comments != null) { for (int i = (comments.size()) - 1; (i >= 0) && (i >= ((comments.size()) - comments_count)); i--) { commentList.addToComments(comments.get(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1229/buggy-version/photoshareserver.src.main.java.com.example.photoshare.api.PhotoService.java", "BodyUseAPI": ["java.util.List<com.example.photoshare.thrift.Comment>.get(int)", "java.util.List<com.example.photoshare.thrift.Comment>.size()", "com.example.photoshare.thrift.CommentList.addToComments(comments.get(i))", "java.util.List<com.example.photoshare.thrift.Comment>.size()"], "Fixed commit": "4d2bfe146f6e321fb81e95417d98dbf0feac5f8d", "Url": "https://api.github.com/repos/rffffffff007/PhotoShare", "Date": "2014-12-18T02:15:02Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.reichholf.dreamdroid.fragment.MyPreferenceFragment.findPreference(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (dev != null) getPreferenceScreen().removePreference(dev);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3652/buggy-version/app.src.net.reichholf.dreamdroid.fragment.MyPreferenceFragment.java", "BodyUseAPI": ["getPreferenceScreen().removePreference(android.preference.Preference)"], "Fixed commit": "4fd4abe6aca1126ea7340905cc1fd2461eb8f257", "Url": "https://api.github.com/repos/sreichholf/dreamDroid", "Date": "2015-05-21T19:06:42Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.dp.blackhole.common.Util.retryRename(fs, recoveryPath, normalPath)) { com.dp.blackhole.collectornode.HDFSRecovery.LOG.info((\"Finished to rename to \" + normalPathname)); }else { if (fs.exists(normalPath)) { com.dp.blackhole.collectornode.HDFSRecovery.LOG.warn((((\"failed to rename to \" + normalPathname) + \", it exists, delete \") + recoveryPath)); if (!(com.dp.blackhole.common.Util.retryDelete(fs, recoveryPath))) { com.dp.blackhole.collectornode.HDFSRecovery.LOG.error(((\"delete \" + recoveryPath) + \" failed\")); } }else { throw new java.lang.Exception((\"Faild to rename to \" + normalPathname)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7724/buggy-version/src.main.java.com.dp.blackhole.collectornode.HDFSRecovery.java", "BodyUseAPI": ["org.apache.commons.logging.Log.error(((\"delete \" + recoveryPath) + \" failed\"))", "org.apache.hadoop.fs.FileSystem.exists(org.apache.hadoop.fs.Path)", "org.apache.commons.logging.Log.warn((((\"failed to rename to \" + normalPathname) + \", it exists, delete \") + recoveryPath))", "com.dp.blackhole.common.Util.retryDelete(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path)"], "Fixed commit": "1ecdadd06589fed503edff3b303836353e96a295", "Url": "https://api.github.com/repos/ErikFang/blackhole", "Date": "2013-08-28T09:56:26Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((main.ThatNeighbour.size()) == 1) CurrentStanding = newNeighbour;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5477/buggy-version/ProjlabProto.src.main.Switch.java", "BodyUseAPI": [], "Fixed commit": "db4881c0942aacf91c55703914d1a98d605dc703", "Url": "https://api.github.com/repos/ProjlabFlash/proto", "Date": "2017-04-18T23:50:48Z"},
{"Line": "=>1265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((params.length) < 3) { main.Application.targetOS.println(\"Nincs eleg parameter!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5477/buggy-version/ProjlabProto.src.main.Application.java", "BodyUseAPI": [], "Fixed commit": "db4881c0942aacf91c55703914d1a98d605dc703", "Url": "https://api.github.com/repos/ProjlabFlash/proto", "Date": "2017-04-18T23:50:48Z"},
{"Line": "=>1272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, main.Switch>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sw == null) { main.Application.sendMessage(\"Sikertelen. A megadott sin nem letezik.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5477/buggy-version/ProjlabProto.src.main.Application.java", "BodyUseAPI": [], "Fixed commit": "db4881c0942aacf91c55703914d1a98d605dc703", "Url": "https://api.github.com/repos/ProjlabFlash/proto", "Date": "2017-04-18T23:50:48Z"},
{"Line": "=>1282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (cskey == null) for (java.util.Map.Entry<java.lang.String, main.Switch> entry : main.Application.switches.entrySet()) if ((entry.getValue()) == cs) cskey = entry.getKey();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5477/buggy-version/ProjlabProto.src.main.Application.java", "BodyUseAPI": [], "Fixed commit": "db4881c0942aacf91c55703914d1a98d605dc703", "Url": "https://api.github.com/repos/ProjlabFlash/proto", "Date": "2017-04-18T23:50:48Z"},
{"Line": "=>1288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (cskey == null) for (java.util.Map.Entry<java.lang.String, main.BuildingSpot> entry : main.Application.buildingSpots.entrySet()) if ((entry.getValue()) == cs) cskey = entry.getKey();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5477/buggy-version/ProjlabProto.src.main.Application.java", "BodyUseAPI": [], "Fixed commit": "db4881c0942aacf91c55703914d1a98d605dc703", "Url": "https://api.github.com/repos/ProjlabFlash/proto", "Date": "2017-04-18T23:50:48Z"},
{"Line": "=>1285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (cskey == null) for (java.util.Map.Entry<java.lang.String, main.CrossRailway> entry : main.Application.crosses.entrySet()) if ((entry.getValue()) == cs) cskey = entry.getKey();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5477/buggy-version/ProjlabProto.src.main.Application.java", "BodyUseAPI": [], "Fixed commit": "db4881c0942aacf91c55703914d1a98d605dc703", "Url": "https://api.github.com/repos/ProjlabFlash/proto", "Date": "2017-04-18T23:50:48Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == null) { if (target == null) { return null; }else { type = target.getClass(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2780/buggy-version/carracoo-beans.src.main.java.org.carracoo.beans.core.BeanDecoderImpl.java", "BodyUseAPI": [], "Fixed commit": "0526a57892a148cd55b243326ef2a505f881a8dc", "Url": "https://api.github.com/repos/BYUS-INC/java-carracoo", "Date": "2013-08-09T08:22:50Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newValue.toString().equals(\"NaN\")) java.lang.System.out.println((\"newval : \" + newValue));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7424/buggy-version/MLkNNProjekt.src.main.java.tud.ke.ml.project.classifier.NearestNeighbor.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "f919ffb66dd52164b873c263c2adbc264fd74652", "Url": "https://api.github.com/repos/Malou2m/machine-learning-project", "Date": "2017-01-06T15:57:00Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((title.length()) > 60) { title = title.substring(0, 60); }else if ((title.length()) < 60) { do { title = title + \"-\"; } while ((title.length()) < 60 ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4241/buggy-version/src.main.java.com.ckula.mangafoxdownloader.service.MangaDowloadService.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "6ceff47228cad760d4dae1989ff637a0f93cdb0f", "Url": "https://api.github.com/repos/ChrisKula/MangaFoxDownloader", "Date": "2016-04-23T21:48:29Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((restServer) != null) { try { restServer.stop(); } catch (java.lang.Exception e) { org.apache.tajo.master.TajoMaster.LOG.error(e.getMessage(), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1035/buggy-version/tajo-core.src.main.java.org.apache.tajo.master.TajoMaster.java", "BodyUseAPI": [], "Fixed commit": "9fa73f4eb5449e5e91d76d857c32c1a85ba85001", "Url": "https://api.github.com/repos/ykrips/tajo", "Date": "2015-04-03T05:59:53Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getBoolean(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(user.hasChildByAgeGroup(\"middle\"))) && hasChildMiddle) { com.aah.selectingfood.model.Child child = new com.aah.selectingfood.model.Child(\"middle\"); user.addChild(child); }else if ((user.hasChildByAgeGroup(\"middle\")) && (!hasChildMiddle)) { user.removeChildByAgeGroup(\"middle\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3417/buggy-version/app.src.main.java.com.aah.selectingfood.helper.DataManagement.java", "BodyUseAPI": ["com.aah.selectingfood.model.User.removeChildByAgeGroup(java.lang.String)", "com.aah.selectingfood.model.User.addChild(com.aah.selectingfood.model.Child)", "com.aah.selectingfood.model.User.hasChildByAgeGroup(java.lang.String)"], "Fixed commit": "ef67539d651c61005f9f823a405e4f48b47a6254", "Url": "https://api.github.com/repos/seherm/HappyBaby", "Date": "2017-05-22T19:28:52Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getBoolean(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(user.hasChildByAgeGroup(\"old\"))) && hasChildOld) { com.aah.selectingfood.model.Child child = new com.aah.selectingfood.model.Child(\"old\"); user.addChild(child); }else if ((user.hasChildByAgeGroup(\"old\")) && (!hasChildOld)) { user.removeChildByAgeGroup(\"old\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3417/buggy-version/app.src.main.java.com.aah.selectingfood.helper.DataManagement.java", "BodyUseAPI": ["com.aah.selectingfood.model.User.hasChildByAgeGroup(java.lang.String)", "com.aah.selectingfood.model.User.addChild(com.aah.selectingfood.model.Child)", "com.aah.selectingfood.model.User.removeChildByAgeGroup(java.lang.String)"], "Fixed commit": "ef67539d651c61005f9f823a405e4f48b47a6254", "Url": "https://api.github.com/repos/seherm/HappyBaby", "Date": "2017-05-22T19:28:52Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getBoolean(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(user.hasChildByAgeGroup(\"young\"))) && hasChildYoung) { com.aah.selectingfood.model.Child child = new com.aah.selectingfood.model.Child(\"young\"); user.addChild(child); }else if ((user.hasChildByAgeGroup(\"young\")) && (!hasChildYoung)) { user.removeChildByAgeGroup(\"young\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3417/buggy-version/app.src.main.java.com.aah.selectingfood.helper.DataManagement.java", "BodyUseAPI": ["com.aah.selectingfood.model.User.addChild(com.aah.selectingfood.model.Child)", "com.aah.selectingfood.model.User.removeChildByAgeGroup(java.lang.String)", "com.aah.selectingfood.model.User.hasChildByAgeGroup(java.lang.String)"], "Fixed commit": "ef67539d651c61005f9f823a405e4f48b47a6254", "Url": "https://api.github.com/repos/seherm/HappyBaby", "Date": "2017-05-22T19:28:52Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ticket instanceof org.jasig.cas.ticket.TicketGrantingTicket) { logger.debug(\"Cleaning up expired ticket-granting ticket [{}]\", ticket.getId()); this.centralAuthenticationService.destroyTicketGrantingTicket(ticket.getId()); }else if (ticket instanceof org.jasig.cas.ticket.ServiceTicket) { logger.debug(\"Cleaning up expired service ticket [{}]\", ticket.getId()); this.ticketRegistry.deleteTicket(ticket.getId()); }else { logger.warn(\"Unknown ticket type [{} found to clean\", ticket.getClass().getSimpleName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/358/buggy-version/cas-server-core.src.main.java.org.jasig.cas.ticket.registry.support.DefaultTicketRegistryCleaner.java", "BodyUseAPI": ["org.jasig.cas.ticket.registry.TicketRegistry.deleteTicket(ticket.getId())", "org.slf4j.Logger.debug(java.lang.String,ticket.getId())", "org.jasig.cas.CentralAuthenticationService.destroyTicketGrantingTicket(ticket.getId())", "ticket.getClass().getSimpleName()", "org.jasig.cas.ticket.Ticket.getId()", "org.jasig.cas.ticket.Ticket.getId()", "org.slf4j.Logger.warn(java.lang.String,ticket.getClass().getSimpleName())", "org.jasig.cas.ticket.Ticket.getClass()", "org.jasig.cas.ticket.Ticket.getId()", "org.slf4j.Logger.debug(java.lang.String,ticket.getId())", "org.jasig.cas.ticket.Ticket.getId()"], "Fixed commit": "85686a887d8d7b35678f8311f9ea1ff918510b75", "Url": "https://api.github.com/repos/apereo/cas", "Date": "2015-03-24T14:37:09Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rabbitmq.client.BasicProperties.getHeaders()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (null != input) { for (java.util.Map.Entry<java.lang.String, java.lang.Object> kvp : input.entrySet()) { com.github.jcustenborder.kafka.connect.rabbitmq.MessageConverter.log.trace(\"headers() - key = {}\", kvp.getKey()); final java.lang.String field = com.github.jcustenborder.kafka.connect.rabbitmq.MessageConverter.FIELD_LOOKUP.get(kvp.getValue().getClass()); com.github.jcustenborder.kafka.connect.rabbitmq.MessageConverter.log.trace(\"headers() - field = {}\", field); org.apache.kafka.connect.data.Struct value = new org.apache.kafka.connect.data.Struct(com.github.jcustenborder.kafka.connect.rabbitmq.MessageConverter.SCHEMA_HEADER_VALUE).put(field, kvp.getValue()); results.put(kvp.getKey(), value); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8378/buggy-version/src.main.java.com.github.jcustenborder.kafka.connect.rabbitmq.MessageConverter.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.entrySet()"], "Fixed commit": "92335c7ffe7a22ebe241fb2b8644d508fa6f4194", "Url": "https://api.github.com/repos/arkadiuszbicz/kafka-connect-rabbitmq", "Date": "2017-06-30T17:11:07Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentOperation) == (com.vladimircvetanov.smartfinance.TransactionFragment.OPERATION_NONE)) return currNumber;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3731/buggy-version/SmartFinance.app.src.main.java.com.vladimircvetanov.smartfinance.TransactionFragment.java", "BodyUseAPI": [], "Fixed commit": "22db57591e9863554db1fbba3fb39cfc1f3b191d", "Url": "https://api.github.com/repos/aleksandvc/Smart-Finance", "Date": "2017-04-29T23:35:16Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.netty.buffer.ChannelBuffer.readInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (commandId == (com.cloudhopper.smpp.SmppConstants.CMD_ID_GENERIC_NACK)) { pdu = new com.cloudhopper.smpp.pdu.GenericNack(); }else if (commandId == (com.cloudhopper.smpp.SmppConstants.CMD_ID_SUBMIT_MULTI_RESP)) { pdu = new com.cloudhopper.smpp.pdu.SubmitMultiResp(); }else { pdu = new com.cloudhopper.smpp.pdu.PartialPduResp(commandId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/532/buggy-version/src.main.java.com.cloudhopper.smpp.transcoder.DefaultPduTranscoder.java", "BodyUseAPI": [], "Fixed commit": "78ccb69879636a50d71f8169e20e2f1ca4d98855", "Url": "https://api.github.com/repos/abhayani/cloudhopper-smpp", "Date": "2013-06-09T08:31:22Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.netty.buffer.ChannelBuffer.readInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (commandId == (com.cloudhopper.smpp.SmppConstants.CMD_ID_UNBIND)) { pdu = new com.cloudhopper.smpp.pdu.Unbind(); }else if (commandId == (com.cloudhopper.smpp.SmppConstants.CMD_ID_SUBMIT_MULTI)) { pdu = new com.cloudhopper.smpp.pdu.SubmitMulti(); }else { pdu = new com.cloudhopper.smpp.pdu.PartialPdu(commandId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/532/buggy-version/src.main.java.com.cloudhopper.smpp.transcoder.DefaultPduTranscoder.java", "BodyUseAPI": [], "Fixed commit": "78ccb69879636a50d71f8169e20e2f1ca4d98855", "Url": "https://api.github.com/repos/abhayani/cloudhopper-smpp", "Date": "2013-06-09T08:31:22Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.util.math.RayTraceResult.getBlockPos()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (blockPos != null) { net.minecraft.tileentity.TileEntity te = mc.theWorld.getTileEntity(blockPos); if (((mc.theWorld.getBlockState(blockPos).getBlock()) == (PipeBlocks.Blocks.BRASS_PIPE.getBlock())) || (te instanceof eiteam.esteemedinnovation.api.block.IDisguisableBlock)) { EsteemedInnovation.channel.sendToServer(new eiteam.esteemedinnovation.network.CamoPacket(blockPos)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7188/buggy-version/src.main.java.eiteam.esteemedinnovation.handler.GenericTickHandler.java", "BodyUseAPI": ["EsteemedInnovation.channel.sendToServer(eiteam.esteemedinnovation.network.CamoPacket)", "mc.theWorld.getTileEntity(net.minecraft.util.math.BlockPos)", "mc.theWorld.getBlockState(blockPos).getBlock()", "mc.theWorld.getBlockState(net.minecraft.util.math.BlockPos)"], "Fixed commit": "3197af60cc9de5e192cd57ad6dd052e79d80d227", "Url": "https://api.github.com/repos/Esteemed-Innovation/Esteemed-Innovation", "Date": "2016-11-09T03:01:02Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((state_key.equalsIgnoreCase(\"percent\")) == true) value.setText((formatedValue + \" %\")); else if ((state_key.equalsIgnoreCase(\"visibility\")) == true) value.setText((formatedValue + \" km\")); else if ((state_key.equalsIgnoreCase(\"chill\")) == true) value.setText((formatedValue + \" \u00b0C\")); else if ((state_key.equalsIgnoreCase(\"speed\")) == true) value.setText((formatedValue + \" km/h\")); else if ((state_key.equalsIgnoreCase(\"drewpoint\")) == true) value.setText((formatedValue + \" \u00b0C\")); else if ((state_key.equalsIgnoreCase(\"condition-code\")) == true) try { value.setText(activities.Graphics_Manager.Names_conditioncodes(getContext(), ((int) (formatedValue)))); } catch (java.lang.Exception e1) { value.setText(loc_Value); } else value.setText(loc_Value);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/203/buggy-version/src.widgets.Graphical_Info_with_achartengine.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "26f6f2579a32efb84d5ac6071621559f707d6dcc", "Url": "https://api.github.com/repos/domogik/domodroid", "Date": "2014-08-03T08:15:50Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(m_hiliteAdded)) { org.knime.knip.base.nodes.view.TableCellViewNodeView.getJMenuBar().add(m_tableView.createHiLiteMenu()); m_hiliteAdded = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2993/buggy-version/org.knime.knip.base.src.org.knime.knip.base.nodes.view.TableCellViewNodeView.java", "BodyUseAPI": [], "Fixed commit": "782b826fce601cb09101303c52d8558677423e98", "Url": "https://api.github.com/repos/knime-ip/knip", "Date": "2013-10-08T22:07:56Z"},
{"Line": "=>1083", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((pictureOfTheDayList) != null) && ((pictureOfTheDayList.size()) > 0)) && ((pictureOfTheDayList.get(0)) != null)) && ((pictureOfTheDayList.get(0).getMediaLink()) != null)) com.bumptech.glide.Glide.with(this).load(pictureOfTheDayList.get(0).getMediaLink()).centerCrop().crossFade().into(collapsingImageView);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4727/buggy-version/app.src.main.java.org.wikimedia.commons.wikimedia.Activities.MainActivity.java", "BodyUseAPI": ["com.bumptech.glide.Glide.with(this).load(pictureOfTheDayList.get(0).getMediaLink())", "com.bumptech.glide.Glide.with(this).load(pictureOfTheDayList.get(0).getMediaLink()).centerCrop().crossFade().into(android.widget.ImageView)", "com.bumptech.glide.Glide.with(this).load(pictureOfTheDayList.get(0).getMediaLink()).centerCrop().crossFade()", "com.bumptech.glide.Glide.with(this).load(pictureOfTheDayList.get(0).getMediaLink()).centerCrop()", "pictureOfTheDayList.get(0).getMediaLink()", "java.util.ArrayList<apiwrapper.commons.wikimedia.org.Models.FeedItem>.get(int)"], "Fixed commit": "57d79f7b79225dc01a6637d5bff75eabb13f5d05", "Url": "https://api.github.com/repos/CommonsLab/CommonsLab", "Date": "2017-06-08T10:08:23Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (statusP.startsWith(\"TASK_EXTRACTING\")) { return ctxP.getString(R.string.detail_status_extracting); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4253/buggy-version/src.org.jared.synodroid.ds.data.TaskStatus.java", "BodyUseAPI": [], "Fixed commit": "450412f1a779a416cc7ef61621703f1a39fac71d", "Url": "https://api.github.com/repos/stevegaron/Synodroid-lite", "Date": "2013-03-04T00:54:58Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((longitude) != 0.0) && ((latitude) != 0.0)) { zoomToLocation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7221/buggy-version/app.src.main.java.com.example.agneh.poweroutletapp.HomeFR.java", "BodyUseAPI": [], "Fixed commit": "a5e787844885d2bca95482d9132c735bb44642a8", "Url": "https://api.github.com/repos/AgneH/PowerOutletApp", "Date": "2017-04-29T10:50:52Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (suffix.equalsIgnoreCase(\"\")) { suffix = ratpack.thymeleaf.ThymeleafModule.DEFAULT_TEMPLATE_SUFFIX; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5707/buggy-version/ratpack-thymeleaf.src.main.java.ratpack.thymeleaf.ThymeleafModule.java", "BodyUseAPI": [], "Fixed commit": "8ca69f263fda6c59890a9fbb1b88c6c421c68c5e", "Url": "https://api.github.com/repos/rhart/ratpack", "Date": "2013-12-04T11:29:33Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (stringVal.startsWith(\"java.lang.Object@\")) { stringVal = io.pivotal.Domain.QueryResultsViewMapping.DEFAULT_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6883/buggy-version/src.main.java.io.pivotal.Domain.QueryResultsViewMapping.java", "BodyUseAPI": [], "Fixed commit": "cde83ec7e89d9324807c98f799e91e96769484ec", "Url": "https://api.github.com/repos/cf-platform-eng/gcp-ml-sentiment", "Date": "2016-10-10T19:47:47Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (equalAny(DefaultKeyword.LIKE)) { parseOtherCondition(sqlStatement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5645/buggy-version/sharding-jdbc-core.src.main.java.com.dangdang.ddframe.rdb.sharding.parsing.parser.SQLParser.java", "BodyUseAPI": [], "Fixed commit": "60e077f5914ea1f180c5d8d49ae2484536a4bdde", "Url": "https://api.github.com/repos/sharding-sphere/sharding-sphere", "Date": "2017-07-05T04:00:00Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) != null) { timer.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2571/buggy-version/app.src.main.java.com.example.codyhunsberger.bitcoindashboard.ChartFragment.java", "BodyUseAPI": [], "Fixed commit": "1773558f2b2d6f20a7565acb0cec59657b1082b6", "Url": "https://api.github.com/repos/hunsbct/Bitcoin-Dashboard", "Date": "2016-12-26T00:57:44Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((idPetugas) == null) { idPetugas = getIdPetugas(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5304/buggy-version/app.src.main.java.com.project.greenfuture.petugas.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "13d2be4b35582cb0176281183e66f41135d86aa6", "Url": "https://api.github.com/repos/FungkiPandu/greenfuture-petugas", "Date": "2017-08-08T05:34:26Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (needRightBracket) { sb.append(\")\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8051/buggy-version/src.main.java.com.github.oceanc.mybatis3.generator.plugin.OptimisticLockAutoIncreasePlugin.java", "BodyUseAPI": [], "Fixed commit": "c36b2fec6be8f754d716fc6fb18508173dbc1115", "Url": "https://api.github.com/repos/oceanc/mybatis3-generator-plugins", "Date": "2015-04-17T14:30:07Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(openAPSSuggest.isNull(\"snoozeBG\"))) && (!(openAPSSuggest.getString(\"snoozeBG\").equals(\"NA\")))) snoozeBGValue.setText(tools.unitizedBG(openAPSSuggest.getDouble(\"snoozeBG\"), getApplicationContext()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7721/buggy-version/app.src.main.java.com.hypodiabetic.happ.MainActivity.java", "BodyUseAPI": ["com.hypodiabetic.happ.MainActivity.6.unitizedBG(openAPSSuggest.getDouble(\"snoozeBG\"),getApplicationContext())", "android.widget.TextView.setText(tools.unitizedBG(openAPSSuggest.getDouble(\"snoozeBG\"), getApplicationContext()))", "org.json.JSONObject.getDouble(java.lang.String)"], "Fixed commit": "500cc956d5e49edf10a3efc431d3e599dfa79097", "Url": "https://api.github.com/repos/LadyViktoria/HAPP", "Date": "2015-10-24T18:26:35Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(openAPSSuggest.isNull(\"eventualBG\"))) && (!(openAPSSuggest.getString(\"eventualBG\").equals(\"NA\")))) eventualBGValue.setText(tools.unitizedBG(openAPSSuggest.getDouble(\"eventualBG\"), getApplicationContext()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7721/buggy-version/app.src.main.java.com.hypodiabetic.happ.MainActivity.java", "BodyUseAPI": ["com.hypodiabetic.happ.MainActivity.6.unitizedBG(openAPSSuggest.getDouble(\"eventualBG\"),getApplicationContext())", "org.json.JSONObject.getDouble(java.lang.String)", "android.widget.TextView.setText(tools.unitizedBG(openAPSSuggest.getDouble(\"eventualBG\"), getApplicationContext()))"], "Fixed commit": "500cc956d5e49edf10a3efc431d3e599dfa79097", "Url": "https://api.github.com/repos/LadyViktoria/HAPP", "Date": "2015-10-24T18:26:35Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (memoryIsEmpty()) memory = getIndicator().doubleValue(); else memory = (memory.doubleValue()) + (getIndicator().doubleValue());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2210/buggy-version/src.main.java.com.shestakam.Calculator.java", "BodyUseAPI": [], "Fixed commit": "6bb3c00c5834ea8859cd83276c365f6172d20ce0", "Url": "https://api.github.com/repos/AlexandrShestak/Calculator", "Date": "2015-07-12T14:00:15Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1673/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "c79a162388a701fb63f2d397928b9c2b1902ae62", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-07T16:25:00Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["itBrainiacs.muffins.DataBook.getIsbn()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (isbn != null) { if (((isbn.length()) != 0) && ((((isbn.length()) != 10) && ((isbn.length()) != 13)) || (!(onlyDigits(isbn))))) { badInput = badInput + \"--The ISBN-number must be 10 or 13 digits long.\\n\"; validInput = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8239/buggy-version/Muffins.src.itBrainiacs.muffins.AddBookActivity.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.length()", "java.lang.String.length()", "itBrainiacs.muffins.AddBookActivity.onlyDigits(java.lang.String)"], "Fixed commit": "e9c1b9c277cd588348baabdba8cb722a929c1304", "Url": "https://api.github.com/repos/oscarbr/Brainiacs-startup", "Date": "2012-05-16T14:23:36Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bucketTempId >= (hashIndex.size())) hashIndex.set(bucketId, bucketTemp); else hashIndex.set(bucketTempId, bucketTemp);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5067/buggy-version/Index_Mech.src.hashIndex.HashIndex.java", "BodyUseAPI": ["java.util.ArrayList<hashIndex.Bucket>.set(int,hashIndex.Bucket)", "java.util.ArrayList<hashIndex.Bucket>.set(int,hashIndex.Bucket)"], "Fixed commit": "9610345a1b371eb6d2d429fe8b8db9039f8d31d5", "Url": "https://api.github.com/repos/WPIcs542/Project", "Date": "2015-10-24T03:08:45Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mdata.getMinigame(minigame).getThTimer()) != null) { mdata.getMinigame(minigame).getThTimer().stopTimer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7108/buggy-version/src.com.pauldavdesign.mineauz.minigames.Minigames.java", "BodyUseAPI": ["mdata.getMinigame(minigame).getThTimer().stopTimer()", "com.pauldavdesign.mineauz.minigames.MinigameData.getMinigame(java.lang.String)", "mdata.getMinigame(minigame).getThTimer()"], "Fixed commit": "9148897bde51ce4f1a308da6f48cc3f4d3ae61bf", "Url": "https://api.github.com/repos/itstake/Minigames-Korean", "Date": "2014-08-10T07:27:06Z"},
{"Line": "=>923", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (locReses != null) { for (lucee.commons.io.res.Resource locRes : locReses) { sb.append(locRes.getAbsolutePath()).append(';'); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7434/buggy-version/core.src.main.java.lucee.runtime.config.ConfigServerImpl.java", "BodyUseAPI": [], "Fixed commit": "a91ed2c4b2d6940252a37c2ce0ca06c1cda25516", "Url": "https://api.github.com/repos/lucee/Lucee", "Date": "2017-12-07T19:54:16Z"},
{"Line": "=>572", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hash_diff == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2533/buggy-version/src.routing.MessageRouter.java", "BodyUseAPI": [], "Fixed commit": "10a012a45e7b3da15b2ec47bcb6fed673beaa5db", "Url": "https://api.github.com/repos/julianofischer/the-one", "Date": "2016-11-18T05:09:17Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<java.lang.String>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (current_dir.equals(\"\")) { actionBar.setTitle(getString(R.string.default_display_name_for_root_folder)); }else { actionBar.setTitle(current_dir); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5997/buggy-version/src.com.owncloud.android.ui.activity.Uploader.java", "BodyUseAPI": ["android.support.v7.app.ActionBar.setTitle(java.lang.String)"], "Fixed commit": "003baf8e778a6205b00e2eedaa43c45010831cd9", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2016-03-23T15:17:14Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (f.exists()) { f.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6844/buggy-version/src.com.android.gallery3d.app.VideoUtils.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "1c5d28d8cd5a175f04055258d6290b520e246c45", "Url": "https://api.github.com/repos/CyanogenMod/android_packages_apps_Gallery2", "Date": "2015-01-31T18:31:18Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((javassist.Modifier.isStatic(field.getModifiers())) == false) && ((javassist.Modifier.isFinal(field.getModifiers())) == false)) { fields.add(field); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7610/buggy-version/src.main.java.de.terrestris.shogun.dao.DatabaseDao.java", "BodyUseAPI": ["java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)"], "Fixed commit": "8a5fe525a11b8981c0060af48eeae5a16691e1aa", "Url": "https://api.github.com/repos/terrestris/shogun", "Date": "2013-08-05T06:56:39Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(editText.getText().toString().equals(text.toString()))) { if ((text.length()) > (digits)) { text = text.subSequence(0, digits); } editText.setText(text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/9007/buggy-version/pinentry.src.main.java.me.philio.pinentry.PinEntryView.java", "BodyUseAPI": ["java.lang.CharSequence.length()", "java.lang.CharSequence.subSequence(int,int)", "android.widget.EditText.setText(java.lang.CharSequence)"], "Fixed commit": "2bd4309c0563677535131fe3d792ca9d216faa65", "Url": "https://api.github.com/repos/dwaynehoy/PinEntryView", "Date": "2017-08-24T03:39:03Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (grConf.getTargetTempGraph().equals(grConf.getTargetTempGraph())) { java.lang.System.out.println(\"No need to move graphs\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7722/buggy-version/fagi-gis.src.main.java.gr.athenainnovation.imis.fusion.gis.utils.SPARQLUtilities.java", "BodyUseAPI": [], "Fixed commit": "79c3ba8f24252244023e3bc2a110d02d696f3f9d", "Url": "https://api.github.com/repos/GeoKnow/FAGI-gis", "Date": "2016-07-07T12:58:33Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((other.field[i][j]) != null) { field[i][j] = new own.projects.lemiroapp.GameBoardPosition(other.field[i][j]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7774/buggy-version/app.src.main.java.own.projects.lemiroapp.GameBoard.java", "BodyUseAPI": [], "Fixed commit": "9e4c6b3b6c0cc6e44b9dead8a2628c247bd940a5", "Url": "https://api.github.com/repos/Aedge90/Nine-Mens-Morris-Android", "Date": "2016-11-26T12:26:17Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(filter.contains(\".\"))) { com.xingcloud.delayserver.DelayAnalysisLogicRunnable.LOG.info(((\"filter is \" + filter) + \". It does not have . \")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/9200/buggy-version/src.main.java.com.xingcloud.delayserver.DelayAnalysisLogicRunnable.java", "BodyUseAPI": ["org.apache.commons.logging.Log.info(java.lang.String)"], "Fixed commit": "590d04e04c1e5e482f8652de3c0c45b7064a5f41", "Url": "https://api.github.com/repos/XingCloud/DelayLogServer", "Date": "2013-12-17T06:53:30Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_elements.remove(element)) { if (e < (_firstIndexDisplayed)) { --(_firstIndexDisplayed); } if (e < (_selectedIndex)) { --(_selectedIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4364/buggy-version/src.main.java.cofh.lib.gui.element.ElementListBox.java", "BodyUseAPI": [], "Fixed commit": "ddbd2e750657aaeb4f8f02b1c3257b43c0b4e25d", "Url": "https://api.github.com/repos/CoFH/CoFHLib", "Date": "2015-07-29T22:45:52Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(optionalListElement.isMandatory())) { fullIdentifier = result.getOldGraph().getIdentifier(optionalListElement); result.removeModification(fullIdentifier); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3676/buggy-version/src.main.java.org.iti.structureGraph.comparison.StatementStructureGraphComparer.java", "BodyUseAPI": ["result.getOldGraph().getIdentifier(org.iti.structureGraph.nodes.IStructureElement)"], "Fixed commit": "6433895afe7d1e26d834656f54f936c194d67c24", "Url": "https://api.github.com/repos/hschink/structure-graph", "Date": "2016-05-30T18:34:52Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (t == null) { t = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4077/buggy-version/src.main.java.com.radish.biyu.webapi.services.PenPalService.java", "BodyUseAPI": [], "Fixed commit": "94a64a854217cfed5cfb59213269ec16dcd72571", "Url": "https://api.github.com/repos/a6205206z/biyu", "Date": "2016-11-22T14:20:26Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((marker) == null) { marker = map.addMarker(se.chalmers.krogkollen.map.MarkerOptionsFactory.createMarkerOptions(getResources().getDisplayMetrics(), getResources(), pub)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2335/buggy-version/Project.src.se.chalmers.krogkollen.detailed.DetailedActivity.java", "BodyUseAPI": [], "Fixed commit": "fd46be6325473b704e3ccca04e16c13b76a68777", "Url": "https://api.github.com/repos/zippeellii/Krogkollen", "Date": "2013-10-15T09:37:24Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(groupNames.isEmpty())) selected = groupNames.get(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7614/buggy-version/src.ftTodoList.ToDoBean.java", "BodyUseAPI": [], "Fixed commit": "cadac42b0250ceb69116f72e507ce54cb01bc92f", "Url": "https://api.github.com/repos/FelixBer/FeToTodoList", "Date": "2015-06-22T10:18:29Z"},
{"Line": "=>885", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((byteOrder) == (edu.sc.seis.seisFile.sac.SacTimeSeries.IntelByteOrder)) { y[(numAdded++)] = java.lang.Float.intBitsToFloat(((((((buf[(i++)]) & 255) << 0) + (((buf[(i++)]) & 255) << 8)) + (((buf[(i++)]) & 255) << 16)) + (((buf[(i++)]) & 255) << 24))); }else { y[(numAdded++)] = java.lang.Float.intBitsToFloat(((((((buf[(i++)]) & 255) << 24) + (((buf[(i++)]) & 255) << 16)) + (((buf[(i++)]) & 255) << 8)) + (((buf[(i++)]) & 255) << 0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3624/buggy-version/src.edu.sc.seis.seisFile.sac.SacTimeSeries.java", "BodyUseAPI": [], "Fixed commit": "3659c64b6274c9dce6664f76c87eae585e5d43a6", "Url": "https://api.github.com/repos/crotwell/seisFile", "Date": "2006-04-21T17:02:36Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (errorsInOntology != null) { errorsInOntology.toString(prefixInstance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8945/buggy-version/rifeditor.src.main.java.lupos.gui.ResultPanelHelper.java", "BodyUseAPI": ["lupos.rif.datatypes.RuleResult.toString(lupos.gui.operatorgraph.viewer.ViewerPrefix)"], "Fixed commit": "9f8637db7df126334099c86039db0f0f1c10855d", "Url": "https://api.github.com/repos/luposdate/luposdate", "Date": "2012-10-25T08:59:03Z"},
{"Line": "=>1125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cells[cell_id].isSink()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6426/buggy-version/src.dta_solver.SO_Optimizer.java", "BodyUseAPI": [], "Fixed commit": "8a90f54601cf718bf4a59d932b0a133cd335ac50", "Url": "https://api.github.com/repos/Gueust/DTA-PC", "Date": "2013-07-07T20:55:47Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((c.getEndTime()) != null) && ((c.getEndTime().length()) > 45)) c.setEndTime(c.getEndTime().substring(0, 45));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4793/buggy-version/src.edu.rice.util.Http.java", "BodyUseAPI": ["edu.rice.model.Course.getEndTime()", "edu.rice.model.Course.setEndTime(c.getEndTime().substring(0, 45))", "c.getEndTime().substring(int,int)"], "Fixed commit": "4e8e298bca0a5bddd79ec1b9400f52e2f9b5122e", "Url": "https://api.github.com/repos/lyupan/RiceApp", "Date": "2017-09-24T13:20:01Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((c.getStartTime()) != null) && ((c.getStartTime().length()) > 45)) c.setStartTime(c.getStartTime().substring(0, 45));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4793/buggy-version/src.edu.rice.util.Http.java", "BodyUseAPI": ["c.getStartTime().substring(int,int)", "edu.rice.model.Course.setStartTime(c.getStartTime().substring(0, 45))", "edu.rice.model.Course.getStartTime()"], "Fixed commit": "4e8e298bca0a5bddd79ec1b9400f52e2f9b5122e", "Url": "https://api.github.com/repos/lyupan/RiceApp", "Date": "2017-09-24T13:20:01Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keepQuotes) { output.appender.append(quote); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8405/buggy-version/src.main.java.com.univocity.parsers.csv.CsvParser.java", "BodyUseAPI": [], "Fixed commit": "e0f3fe6010d7b8630939abfdd495ac5d549daa14", "Url": "https://api.github.com/repos/uniVocity/univocity-parsers", "Date": "2017-10-11T23:59:23Z"},
{"Line": "=>2104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.backend.isConnected()) { if ((this.backend.getSendDuration()) < 0) { this.remainingTimeValueLabel.setText(\"estimating...\"); }else if ((this.backend.getSendDuration()) == 0) { this.remainingTimeValueLabel.setText(\"--:--:--\"); }else { this.remainingTimeValueLabel.setText(com.willwinder.universalgcodesender.Utils.formattedMillis(this.backend.getSendDuration())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4402/buggy-version/src.com.willwinder.universalgcodesender.MainWindow.java", "BodyUseAPI": ["com.willwinder.universalgcodesender.model.BackendAPI.getSendDuration()", "javax.swing.JLabel.setText(com.willwinder.universalgcodesender.Utils.formattedMillis(this.backend.getSendDuration()))", "com.willwinder.universalgcodesender.model.BackendAPI.getSendDuration()", "com.willwinder.universalgcodesender.Utils.formattedMillis(this.backend.getSendDuration())", "com.willwinder.universalgcodesender.model.BackendAPI.getSendDuration()"], "Fixed commit": "991a7847209e6019320caf84a30868e00a1355cb", "Url": "https://api.github.com/repos/winder/Universal-G-Code-Sender", "Date": "2016-03-05T22:30:18Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((world instanceof net.minecraft.world.World) && (!(((net.minecraft.world.World) (world)).isRemote))) { net.minecraft.tileentity.TileEntity te = world.getTileEntity(x, y, z); if (te instanceof pneumaticCraft.common.tileentity.TileEntityBase) { ((pneumaticCraft.common.tileentity.TileEntityBase) (te)).onNeighborTileUpdate(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1902/buggy-version/src.pneumaticCraft.common.block.BlockPneumaticCraft.java", "BodyUseAPI": ["net.minecraft.world.IBlockAccess.getTileEntity(int,int,int)"], "Fixed commit": "8f2f5ea224e881d4154653cdb6dc8c13bde72901", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2015-07-07T20:16:06Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((world instanceof net.minecraft.world.World) && (!(world.isRemote))) { net.minecraft.tileentity.TileEntity te = world.getTileEntity(x, y, z); if (te instanceof pneumaticCraft.common.tileentity.TileEntityBase) { ((pneumaticCraft.common.tileentity.TileEntityBase) (te)).onNeighborBlockUpdate(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1902/buggy-version/src.pneumaticCraft.common.block.BlockPneumaticCraft.java", "BodyUseAPI": ["net.minecraft.world.World.getTileEntity(int,int,int)"], "Fixed commit": "8f2f5ea224e881d4154653cdb6dc8c13bde72901", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2015-07-07T20:16:06Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alvazan.orm.layer0.base.BaseEntityManagerImpl.findAll(java.lang.Class<T>,java.util.List<java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (entities.next()) return entities.getCurrent().getValue(); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1186/buggy-version/src.main.java.com.alvazan.orm.layer0.base.BaseEntityManagerImpl.java", "BodyUseAPI": ["com.alvazan.orm.api.z8spi.iter.Cursor<com.alvazan.orm.api.z8spi.KeyValue<T>>.getCurrent()", "entities.getCurrent().getValue()"], "Fixed commit": "053b8a207f0d63738ece2402aaa43799154b76a2", "Url": "https://api.github.com/repos/deanhiller/playorm", "Date": "2013-04-04T08:54:09Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.taserlag.lasertag.player.Player.dbPlayer) != null) { com.taserlag.lasertag.player.Player.dbPlayer.readyUp(com.taserlag.lasertag.player.Player.dbPlayerReference); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7224/buggy-version/app.src.main.java.com.taserlag.lasertag.player.Player.java", "BodyUseAPI": [], "Fixed commit": "c19275379dec01415e20184f632ec4dbb57f0e6c", "Url": "https://api.github.com/repos/drummeric/LaserTag", "Date": "2016-03-22T21:13:37Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.e4.ui.css.swt.dom.CompositeElement.getNativeWidget()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((styledText.getVerticalBar()) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/458/buggy-version/net.jeeeyul.eclipse.themes.src.net.jeeeyul.eclipse.themes.css.StyleTextLineHandler.java", "BodyUseAPI": [], "Fixed commit": "bdcf3b109b05f00a65a69b8b718e6bb204eefbbd", "Url": "https://api.github.com/repos/jeeeyul/eclipse-themes", "Date": "2012-12-30T05:15:14Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((compositeElement.getNativeWidget()) instanceof org.eclipse.swt.custom.StyledText)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/458/buggy-version/net.jeeeyul.eclipse.themes.src.net.jeeeyul.eclipse.themes.css.StyleTextLineHandler.java", "BodyUseAPI": [], "Fixed commit": "bdcf3b109b05f00a65a69b8b718e6bb204eefbbd", "Url": "https://api.github.com/repos/jeeeyul/eclipse-themes", "Date": "2012-12-30T05:15:14Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((client.getVerticalBar()) != null) client.getVerticalBar().addListener(SWT.Selection, listener);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/458/buggy-version/net.jeeeyul.eclipse.themes.src.net.jeeeyul.eclipse.themes.css.ChromeEditorLiner.java", "BodyUseAPI": ["org.eclipse.swt.custom.StyledText.getVerticalBar()", "client.getVerticalBar().addListener(SWT.Selection,org.eclipse.swt.widgets.Listener)"], "Fixed commit": "bdcf3b109b05f00a65a69b8b718e6bb204eefbbd", "Url": "https://api.github.com/repos/jeeeyul/eclipse-themes", "Date": "2012-12-30T05:15:14Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((client.getVerticalBar()) != null) { offset = (height - ((client.getVerticalBar().getSelection()) % height)) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/458/buggy-version/net.jeeeyul.eclipse.themes.src.net.jeeeyul.eclipse.themes.css.ChromeEditorLiner.java", "BodyUseAPI": ["org.eclipse.swt.custom.StyledText.getVerticalBar()", "client.getVerticalBar().getSelection()"], "Fixed commit": "bdcf3b109b05f00a65a69b8b718e6bb204eefbbd", "Url": "https://api.github.com/repos/jeeeyul/eclipse-themes", "Date": "2012-12-30T05:15:14Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((client.getVerticalBar()) != null) client.getVerticalBar().removeListener(SWT.Selection, listener);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/458/buggy-version/net.jeeeyul.eclipse.themes.src.net.jeeeyul.eclipse.themes.css.ChromeEditorLiner.java", "BodyUseAPI": ["client.getVerticalBar().removeListener(SWT.Selection,org.eclipse.swt.widgets.Listener)", "org.eclipse.swt.custom.StyledText.getVerticalBar()"], "Fixed commit": "bdcf3b109b05f00a65a69b8b718e6bb204eefbbd", "Url": "https://api.github.com/repos/jeeeyul/eclipse-themes", "Date": "2012-12-30T05:15:14Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str.isFrozen()) return str;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2660/buggy-version/ext.java.nokogiri.XmlDocumentFragment.java", "BodyUseAPI": [], "Fixed commit": "aa00ecce6e77163a916ffc15a4e702dfa3291c2c", "Url": "https://api.github.com/repos/sparklemotion/nokogiri", "Date": "2014-06-09T16:50:09Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.length) == 4) { java.lang.System.out.println(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6407/buggy-version/seep-worker.src.main.java.uk.ac.imperial.lsds.seepworker.core.Dataset.java", "BodyUseAPI": [], "Fixed commit": "0f9c1630b6783677f22a32929610c44a611827bd", "Url": "https://api.github.com/repos/lsds/SEEPng", "Date": "2016-04-28T00:07:47Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.ByteBuffer.getInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (recordSize == 0) { inputStream.close(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6407/buggy-version/seep-worker.src.main.java.uk.ac.imperial.lsds.seepworker.core.Dataset.java", "BodyUseAPI": [], "Fixed commit": "0f9c1630b6783677f22a32929610c44a611827bd", "Url": "https://api.github.com/repos/lsds/SEEPng", "Date": "2016-04-28T00:07:47Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (smte instanceof com.redhat.ceylon.compiler.typechecker.tree.Tree.BaseMemberExpression) { com.redhat.ceylon.eclipse.code.correct.CreateParameterProposal.addCreateParameterProposal(proposals, project, vfdg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1856/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.code.correct.CreateProposal.java", "BodyUseAPI": [], "Fixed commit": "e6808fb281e82461e28f1948b4bc1e4fbfb7311f", "Url": "https://api.github.com/repos/ceylon/ceylon-ide-eclipse", "Date": "2014-06-03T10:31:56Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["info.getModulesManager().getModule(newKey.name,info.getModulesManager().getNature(),boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (builtinModule != null) { if (builtinModule instanceof org.python.pydev.editor.codecompletion.revisited.javaintegration.AbstractJavaClassModule) { if ((newKey.file) != null) { ignoreFiles.add(newKey.file); }else { org.python.pydev.core.log.Log.log((\"Not expecting null file for java class module: \" + newKey)); } continue; } boolean removeFirst = keys.containsKey(newKey); addAstForCompiledModule(builtinModule, info, newKey, removeFirst); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4862/buggy-version/plugins.com.python.pydev.analysis.src.com.python.pydev.analysis.additionalinfo.AbstractAdditionalDependencyInfo.java", "BodyUseAPI": ["com.python.pydev.analysis.additionalinfo.AbstractAdditionalDependencyInfo.addAstForCompiledModule(org.python.pydev.core.IModule,org.python.pydev.ui.pythonpathconf.InterpreterInfo,org.python.pydev.core.ModulesKey,boolean)"], "Fixed commit": "5fcf2871ef43bf20368dc866596e8018eb076b3b", "Url": "https://api.github.com/repos/fabioz/Pydev", "Date": "2014-03-17T13:24:20Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.startsWith(\", \")) result = result.replaceFirst(\", \", \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7386/buggy-version/src.Language.Dictionary.Definition.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "325c394d1722fe0d36b9e328424d5f2e74de9ffd", "Url": "https://api.github.com/repos/thatdude624/Spark-Reader", "Date": "2017-01-13T16:09:19Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (a != null) { price += a.getPrijs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1790/buggy-version/src.domain.appointment.Appointment.java", "BodyUseAPI": ["domain.inventory.Article.getPrijs()"], "Fixed commit": "11996bfa8e11ea529ac3546a0620ebfa9b56854e", "Url": "https://api.github.com/repos/NickRutgers/ATD", "Date": "2015-06-22T23:17:51Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((panoramakit.engine.task.TaskManager.mc.currentScreen) instanceof net.minecraft.client.gui.GuiMemoryErrorScreen) halt();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/491/buggy-version/src.panoramakit.engine.task.TaskManager.java", "BodyUseAPI": [], "Fixed commit": "a57a7f04861d56a100aa131b5a677d50c2b03606", "Url": "https://api.github.com/repos/Dayanto/Panorama-Kit", "Date": "2013-09-14T22:07:13Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.hub.emffrag.internal.ObjectInputStream.readValue(de.hub.emffrag.internal.FStoreObject,org.eclipse.emf.ecore.EStructuralFeature,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (value != null) { object.fSet(feature, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6488/buggy-version/de.hub.emffrag4.src.de.hub.emffrag.internal.ObjectInputStream.java", "BodyUseAPI": ["de.hub.emffrag.internal.FStoreObject.fSet(org.eclipse.emf.ecore.EStructuralFeature,java.lang.Object)"], "Fixed commit": "1085c9b775003c0cca88091619d01ee485a46377", "Url": "https://api.github.com/repos/markus1978/emf-fragments", "Date": "2016-01-16T20:47:22Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mb.dataType) != 2) { vh.data.setText((\"\u5f53\u524d\u901f\u5ea6\uff1a\" + (mb.data))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/473/buggy-version/src.com.android.automation.GridAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText((\"\u5f53\u524d\u901f\u5ea6\uff1a\" + (mb.data)))"], "Fixed commit": "6d7b57c58cbfb3e6b2151fe8c68229c6a44b751b", "Url": "https://api.github.com/repos/ullambana0715/Automation", "Date": "2015-10-15T02:30:59Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((element.attributeValue(\"PublishedYear\")) != null) { publishedYear = java.lang.Integer.parseInt(element.attributeValue(\"PublishedYear\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5149/buggy-version/src.notes.book.Book.java", "BodyUseAPI": ["java.lang.Integer.parseInt(element.attributeValue(\"PublishedYear\"))", "org.dom4j.Element.attributeValue(java.lang.String)"], "Fixed commit": "07212a1e8ad86701b0657417a858abfa8b289594", "Url": "https://api.github.com/repos/rui1989/EasyNote", "Date": "2013-09-30T00:35:13Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((element.attributeValue(\"Edition\")) != null) { edition = java.lang.Integer.parseInt(element.attributeValue(\"Edition\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5149/buggy-version/src.notes.book.Book.java", "BodyUseAPI": ["org.dom4j.Element.attributeValue(java.lang.String)", "java.lang.Integer.parseInt(element.attributeValue(\"Edition\"))"], "Fixed commit": "07212a1e8ad86701b0657417a858abfa8b289594", "Url": "https://api.github.com/repos/rui1989/EasyNote", "Date": "2013-09-30T00:35:13Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((action) == (railo.runtime.tag.Cache.CACHE)) && (hasBody)) action = railo.runtime.tag.Cache.CONTENT;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4725/buggy-version/railo-java.railo-core.src.railo.runtime.tag.Cache.java", "BodyUseAPI": [], "Fixed commit": "522cf1ba4bbefda6a1fcfc88ea64143f6724668c", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2014-04-08T18:11:22Z"},
{"Line": "=>1179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((r.getLs_R_factor_R_free()) == null) { org.biojava.bio.structure.io.mmcif.SimpleMMcifConsumer.logger.info(\"_refine.ls_R_factor_R_free not present, not parsing Rfree value\"); }else { try { pdbHeader.setRfree(java.lang.Float.parseFloat(r.getLs_R_factor_R_free())); } catch (java.lang.NumberFormatException e) { org.biojava.bio.structure.io.mmcif.SimpleMMcifConsumer.logger.debug(\"Could not parse Rfree from string '{}'\", r.getLs_R_factor_R_free()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5129/buggy-version/biojava3-structure.src.main.java.org.biojava.bio.structure.io.mmcif.SimpleMMcifConsumer.java", "BodyUseAPI": ["org.biojava.bio.structure.io.mmcif.model.Refine.getLs_R_factor_R_free()", "org.biojava.bio.structure.io.mmcif.model.Refine.getLs_R_factor_R_free()", "java.lang.Float.parseFloat(r.getLs_R_factor_R_free())", "org.biojava.bio.structure.PDBHeader.setRfree(float)", "org.slf4j.Logger.debug(java.lang.String,r.getLs_R_factor_R_free())"], "Fixed commit": "c41e27d6f867f73d5d0f963d89c2ea091ce36453", "Url": "https://api.github.com/repos/josemduarte/biojava", "Date": "2015-01-26T10:51:44Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((a.startsWith(\"$P\")) && (result.startsWith(\"$L\"))) { java.lang.String storeOp = \"UNIMPLEMENTED store!\"; java.lang.String imd; java.lang.String res; if (type.equals(\"INT\")) storeOp = \"STOREI\"; else if (type.equals(\"FLOAT\")) storeOp = \"STOREF\"; sl.add(((((storeOp + \" \") + a) + \" \") + (imd = generateTemp()))); sl.add(((((storeOp + \" \") + imd) + \" \") + result)); return sl; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8688/buggy-version/src.IntermediateRepresentation.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "2294fcb931ade9240a90d42c57c6f0902232d6db", "Url": "https://api.github.com/repos/gbudiman/lc7", "Date": "2011-11-21T01:37:14Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ch) == '\\\\') { getch(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4666/buggy-version/scanner.Scanner.java", "BodyUseAPI": [], "Fixed commit": "fae013cc7c8c7329079d56d91399b56d9076ab9a", "Url": "https://api.github.com/repos/makslevental/plp_lang", "Date": "2015-02-07T20:42:11Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ch) == '%') t = makeDefaTok(cop5555sp15.MOD); else if ((ch) == '&') t = makeDefaTok(cop5555sp15.AND); else t = makeDefaTok(cop5555sp15.AT);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4666/buggy-version/scanner.Scanner.java", "BodyUseAPI": [], "Fixed commit": "fae013cc7c8c7329079d56d91399b56d9076ab9a", "Url": "https://api.github.com/repos/makslevental/plp_lang", "Date": "2015-02-07T20:42:11Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().findFragmentById(R.id.movie_fragment)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (fragment != null) fragment.onPaletteGenerated(palette);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6893/buggy-version/app.src.main.java.com.centerstage.limelight.DetailActivity.java", "BodyUseAPI": ["com.centerstage.limelight.MovieFragment.onPaletteGenerated(android.support.v7.graphics.Palette)"], "Fixed commit": "d5aeddc8651af8f1feba5cb6489214db3c692400", "Url": "https://api.github.com/repos/enigma9119/Limelight", "Date": "2015-07-20T03:30:41Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.Optional.ofNullable(ex).filter(( e) -> e instanceof no.difi.meldingsutveksling.ptv.SoapFaultInterceptor.SoapFaultException).isPresent()) { final org.springframework.ws.WebServiceMessage response = messageContext.getResponse(); no.difi.meldingsutveksling.logging.Audit.error(\"Failed to send message to correspondence agency\", logMarkers.and(net.logstash.logback.marker.Markers.append(\"soap_fault\", asString(response.getPayloadSource()))), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/974/buggy-version/post-til-virksomhet.src.main.java.no.difi.meldingsutveksling.ptv.SoapFaultInterceptor.java", "BodyUseAPI": ["no.difi.meldingsutveksling.logging.Audit.error(java.lang.String,logMarkers.and(net.logstash.logback.marker.Markers.append(\"soap_fault\", asString(response.getPayloadSource()))),java.lang.Exception)"], "Fixed commit": "c4b3cdd56f5d2e4f34600993387887b05ac42978", "Url": "https://api.github.com/repos/difi/move-integrasjonspunkt", "Date": "2016-08-12T12:25:02Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(mutDOF.isTemplate(desiredTemplate))) { mutDOF.switchToTemplate(desiredTemplate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4231/buggy-version/src.edu.duke.cs.osprey.minimization.MolecEObjFunction.java", "BodyUseAPI": [], "Fixed commit": "d697e3a8e12724f3fccfc3712683d23596942333", "Url": "https://api.github.com/repos/donaldlab/OSPREY3", "Date": "2016-05-05T16:40:04Z"},
{"Line": "=>646", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eu.fbk.knowledgestore.data.Representation.class.isAssignableFrom(responseType.getRawType())) { response.bufferEntity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4092/buggy-version/ks-client.src.main.java.eu.fbk.knowledgestore.client.Client.java", "BodyUseAPI": [], "Fixed commit": "18bc8c7ba7f00f4b209715b737ff5cf1785b1bf5", "Url": "https://api.github.com/repos/dkmfbk/knowledgestore", "Date": "2015-05-06T10:23:37Z"},
{"Line": "=>650", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.ws.rs.core.Response.readEntity(javax.ws.rs.core.GenericType<T>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result instanceof eu.fbk.knowledgestore.data.Stream<?>) { ((eu.fbk.knowledgestore.data.Stream<?>) (result)).onClose(new java.lang.Runnable() { @java.lang.Override public void run() { response.close(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4092/buggy-version/ks-client.src.main.java.eu.fbk.knowledgestore.client.Client.java", "BodyUseAPI": [], "Fixed commit": "18bc8c7ba7f00f4b209715b737ff5cf1785b1bf5", "Url": "https://api.github.com/repos/dkmfbk/knowledgestore", "Date": "2015-05-06T10:23:37Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resource.contains(\"$\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/628/buggy-version/src.main.java.com.toddfast.mutagen.cassandra.impl.CassandraMutagenImpl.java", "BodyUseAPI": [], "Fixed commit": "e7cf9f48de980c10ce1b74fbcb4c7bb8a1ad9f69", "Url": "https://api.github.com/repos/toddfast/mutagen-cassandra", "Date": "2013-12-30T21:20:07Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedHashMap<java.lang.String, net.vvakame.util.jsonpullparser.util.Type>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (type == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2647/buggy-version/jsonpullparser-core.src.main.java.net.vvakame.util.jsonpullparser.util.JsonHash.java", "BodyUseAPI": [], "Fixed commit": "fd7e459157ef5d29460494730c00e9eb8aa111ae", "Url": "https://api.github.com/repos/vvakame/JsonPullParser", "Date": "2013-01-21T12:55:16Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedHashMap<java.lang.String, net.vvakame.util.jsonpullparser.util.Type>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (type == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2647/buggy-version/jsonpullparser-core.src.main.java.net.vvakame.util.jsonpullparser.util.JsonHash.java", "BodyUseAPI": [], "Fixed commit": "fd7e459157ef5d29460494730c00e9eb8aa111ae", "Url": "https://api.github.com/repos/vvakame/JsonPullParser", "Date": "2013-01-21T12:55:16Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedHashMap<java.lang.String, net.vvakame.util.jsonpullparser.util.Type>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (type == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2647/buggy-version/jsonpullparser-core.src.main.java.net.vvakame.util.jsonpullparser.util.JsonHash.java", "BodyUseAPI": [], "Fixed commit": "fd7e459157ef5d29460494730c00e9eb8aa111ae", "Url": "https://api.github.com/repos/vvakame/JsonPullParser", "Date": "2013-01-21T12:55:16Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedHashMap<java.lang.String, net.vvakame.util.jsonpullparser.util.Type>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (type == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2647/buggy-version/jsonpullparser-core.src.main.java.net.vvakame.util.jsonpullparser.util.JsonHash.java", "BodyUseAPI": [], "Fixed commit": "fd7e459157ef5d29460494730c00e9eb8aa111ae", "Url": "https://api.github.com/repos/vvakame/JsonPullParser", "Date": "2013-01-21T12:55:16Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedHashMap<java.lang.String, net.vvakame.util.jsonpullparser.util.Type>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (type == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2647/buggy-version/jsonpullparser-core.src.main.java.net.vvakame.util.jsonpullparser.util.JsonHash.java", "BodyUseAPI": [], "Fixed commit": "fd7e459157ef5d29460494730c00e9eb8aa111ae", "Url": "https://api.github.com/repos/vvakame/JsonPullParser", "Date": "2013-01-21T12:55:16Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedHashMap<java.lang.String, net.vvakame.util.jsonpullparser.util.Type>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (type == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2647/buggy-version/jsonpullparser-core.src.main.java.net.vvakame.util.jsonpullparser.util.JsonHash.java", "BodyUseAPI": [], "Fixed commit": "fd7e459157ef5d29460494730c00e9eb8aa111ae", "Url": "https://api.github.com/repos/vvakame/JsonPullParser", "Date": "2013-01-21T12:55:16Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.scene.control.TextArea.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nums.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2271/buggy-version/HTMLEditor.src.htmleditor.commands.NewFileCommand.java", "BodyUseAPI": [], "Fixed commit": "58a4b7117675a6bb823733af40a2d51ddafeaa9f", "Url": "https://api.github.com/repos/Hydral1k/HTMLEditor", "Date": "2015-04-06T00:28:03Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (sourceDocument.getName().contains(\".\")) this.sourceName = sourceDocument.getName().split(\".\")[0]; else this.sourceName = sourceDocument.getName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/9125/buggy-version/src.corp.util.BrownClusterer.java", "BodyUseAPI": [], "Fixed commit": "a4fb405841f6464094a08df50cd1239de7d60063", "Url": "https://api.github.com/repos/forkunited/CorporateRelationExtraction", "Date": "2013-09-27T04:14:03Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataBar != null) { barVector.add(new DataBar(line)); count++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/282/buggy-version/src.DataArray.java", "BodyUseAPI": [], "Fixed commit": "3c19564608d49db5d81f3f0e5ab9826105aad4e4", "Url": "https://api.github.com/repos/mchowdhury91/MAC286Stocks", "Date": "2017-11-22T03:59:47Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((notificationsDefaults.getObject(notificationName)) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5765/buggy-version/common.src.main.java.org.entcore.common.notification.TimelineMailer.java", "BodyUseAPI": [], "Fixed commit": "2cb33c39fc66abeacd9ce9c630186ef29bc195d5", "Url": "https://api.github.com/repos/entcore/entcore", "Date": "2016-04-19T09:08:36Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((notificationsDefaults.getObject(notificationName)) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5765/buggy-version/common.src.main.java.org.entcore.common.notification.TimelineMailer.java", "BodyUseAPI": [], "Fixed commit": "2cb33c39fc66abeacd9ce9c630186ef29bc195d5", "Url": "https://api.github.com/repos/entcore/entcore", "Date": "2016-04-19T09:08:36Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cleanId.equals(\"\")) { hmi.tts.util.BMLTextUtil.log.error(\"Fluency can only use BML bookmarks that contain digits, and within the speech block the sync ids should be unique even when all non-digits have been stripped\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/794/buggy-version/HmiTTS.src.hmi.tts.util.BMLTextUtil.java", "BodyUseAPI": [], "Fixed commit": "51b71cb0ca7e4ca107f785d8ef0b14dd6ec3b558", "Url": "https://api.github.com/repos/jankolkmeier/HmiCore", "Date": "2016-09-24T08:58:52Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPlayer) == null) { mPlayer = new android.media.SoundPool(2, android.media.AudioManager.STREAM_MUSIC, 0); com.mindfulst.dneves.pomotivity.MainActivity.mTickSoundId = mPlayer.load(this, R.raw.tick_sound, 1); com.mindfulst.dneves.pomotivity.MainActivity.mAlarmSoundId = mPlayer.load(this, R.raw.alarm_sound, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6529/buggy-version/mobile.src.main.java.com.mindfulst.dneves.pomotivity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a4617e47f9c183bc524b14b68fc739695b83d7a6", "Url": "https://api.github.com/repos/DiogoNeves/Pomotivity", "Date": "2014-08-05T21:40:32Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((productCategory != null) && ((productCategory.getId()) == (getId()))) || (((productCategory != null) && ((productCategory.getParentCategory()) != null)) && ((productCategory.getParentCategory().getId()) == (getId())))) { throw new java.lang.RuntimeException(\"parent category should not be same as itself.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3365/buggy-version/work.src.io.betterlife.erp.domains.catalog.ProductCategory.java", "BodyUseAPI": [], "Fixed commit": "0c2c8d76d2d1065b7eb14f6cb6407d3e64a857fa", "Url": "https://api.github.com/repos/betterlife/erp", "Date": "2015-06-04T17:17:49Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.valueOf(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (methodName.equals(com.beyondconstraint.bounty.generation.method.StringsMethod.METHOD_FIRST_TO_LOWER_CASE)) { return com.beyondconstraint.bounty.utils.StringUtils.firstToLowerCase(value); }else if (methodName.equals(com.beyondconstraint.bounty.generation.method.StringsMethod.METHOD_TO_UPPER_CASE)) { return value != null ? value.toUpperCase() : null; }else if (methodName.equals(com.beyondconstraint.bounty.generation.method.StringsMethod.METHOD_TO_LOWER_CASE)) { return value != null ? value.toLowerCase() : null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1040/buggy-version/codegen.src.main.java.com.beyondconstraint.bounty.generation.method.StringsMethod.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "6d12aa5136aff56cfe41e2e0b2c34939e25f87c7", "Url": "https://api.github.com/repos/beyondconstraint/bounty-codegen", "Date": "2016-02-07T10:10:38Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((finishListener) != null) { finishListener.handleEvent(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8721/buggy-version/core.src.main.java.io.undertow.server.protocol.ajp.AjpServerRequestConduit.java", "BodyUseAPI": [], "Fixed commit": "855e55fbfcc2d3f01104e47a1f2ea28c9ffcce41", "Url": "https://api.github.com/repos/undertow-io/undertow", "Date": "2014-05-14T19:46:30Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((banterRoomList.getChildAt(0)) != null) animateNewPosts(banterRoomList.getChildAt(0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3386/buggy-version/src.com.example.Banter.BanterRoomFragment.java", "BodyUseAPI": ["com.example.Banter.ListView.getChildAt(int)", "com.example.Banter.BanterRoomFragment.PostPolling.1.animateNewPosts(banterRoomList.getChildAt(0))"], "Fixed commit": "0a8fd3b0b2c07aebe26ccfa52a70c68763f5047c", "Url": "https://api.github.com/repos/fatzalore/Banter", "Date": "2014-10-23T00:21:27Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == fullName) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/183/buggy-version/src.main.java.com.github.aro_tech.interface_it.util.ClassNameUtils.java", "BodyUseAPI": [], "Fixed commit": "162d7b73335b991ab8e87d1c9de92431f8e89d4b", "Url": "https://api.github.com/repos/aro-tech/interface-it", "Date": "2016-07-09T05:50:55Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(e.getValue().isEmpty())) { final com.barchart.feed.inst.participant.InstrumentState inst = e.getValue().get(0); if (inst != null) { if (inst.symbol().contains(\"|\")) { com.barchart.feed.ddf.instrument.provider.DDF_RxInstrumentProvider.symbolMap.put(inst.vendorSymbols().get(VendorID.BARCHART), e.getValue()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3671/buggy-version/barchart-feed-ddf-instrument.src.main.java.com.barchart.feed.ddf.instrument.provider.DDF_RxInstrumentProvider.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.util.List<com.barchart.feed.inst.participant.InstrumentState>>.getValue()", "java.util.Map.Entry<java.lang.String, java.util.List<com.barchart.feed.inst.participant.InstrumentState>>.getValue()", "java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<com.barchart.feed.inst.participant.InstrumentState>>.put(inst.vendorSymbols().get(VendorID.BARCHART),e.getValue())", "e.getValue().get(int)"], "Fixed commit": "2e7cf9af64c8f4da0693c498135782526ffc1b0b", "Url": "https://api.github.com/repos/barchart/barchart-feed-ddf", "Date": "2014-02-20T14:40:01Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(e.getValue().isEmpty())) { list.add(e.getValue().get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3671/buggy-version/barchart-feed-ddf-instrument.src.main.java.com.barchart.feed.ddf.instrument.provider.DDF_RxInstrumentProvider.java", "BodyUseAPI": ["java.util.List<com.barchart.feed.api.model.meta.Instrument>.add(e.getValue().get(0))", "java.util.Map.Entry<java.lang.String, java.util.List<com.barchart.feed.inst.participant.InstrumentState>>.getValue()", "e.getValue().get(int)"], "Fixed commit": "2e7cf9af64c8f4da0693c498135782526ffc1b0b", "Url": "https://api.github.com/repos/barchart/barchart-feed-ddf", "Date": "2014-02-20T14:40:01Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mailEvent.calculateCost(events, mailEvent.findRoute(routes))) != 0) { expenditure += mailEvent.calculateCost(events, mailEvent.findRoute(routes)); revenue += (mailEvent.calculatePrice(events, mailEvent.findRoute(routes))) - (expenditure); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7116/buggy-version/src.core.Model.java", "BodyUseAPI": ["events.MailEvent.calculatePrice(java.util.ArrayList<events.Event>,mailEvent.findRoute(routes))", "events.MailEvent.findRoute(java.util.ArrayList<routes.Route>)", "events.MailEvent.findRoute(java.util.ArrayList<routes.Route>)", "events.MailEvent.calculateCost(java.util.ArrayList<events.Event>,mailEvent.findRoute(routes))"], "Fixed commit": "f1861a47d82032a7e489efd94491c549c12b3daa", "Url": "https://api.github.com/repos/SKHolmes/SWEN301-Group-Project", "Date": "2016-06-21T02:56:48Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((yproc) != null) yproc.doStop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8048/buggy-version/yamcs-core.src.main.java.org.yamcs.archive.ParameterReplayHandler.java", "BodyUseAPI": [], "Fixed commit": "7be6c88759f7d9df2bfc0894a532889c811ea527", "Url": "https://api.github.com/repos/yamcs/yamcs", "Date": "2016-01-22T12:24:36Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(cpyMapKeys.containsKey(cit))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/117/buggy-version/src.main.java.ch.tkuhn.memetools.CalculatePaperSuccess.java", "BodyUseAPI": [], "Fixed commit": "d7b575b6fc793e111fa6ea7d11ae40084772c65b", "Url": "https://api.github.com/repos/tkuhn/memetools", "Date": "2015-05-07T05:54:09Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((courseList) == null) courseList = new java.util.ArrayList<team9.tutoragency.model.Course>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7026/buggy-version/tutor-agency.src.main.java.team9.tutoragency.model.Member.java", "BodyUseAPI": [], "Fixed commit": "f416e3e3a5186b13874fa1ae369506cb05878f21", "Url": "https://api.github.com/repos/unibe-ese/ese2015-team9", "Date": "2015-11-01T14:22:34Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(key.equals(\"default\"))) { flags.add(((key + \";\") + (section.get(key)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6845/buggy-version/PlotSquared.src.main.java.com.intellectualcrafters.plot.object.PlotWorld.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(((key + \";\") + (section.get(key))))", "org.bukkit.configuration.ConfigurationSection.get(java.lang.String)"], "Fixed commit": "15b24b0a0006d0ba2c5184b38b8010e8457f8365", "Url": "https://api.github.com/repos/IntellectualSites/PlotSquared", "Date": "2015-03-11T11:16:57Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.wst.common.project.facet.core.ProjectFacetsManager.create(((org.jboss.tools.ws.ui.wizards.JBossRSGenerateWizard) (this.getWizard())).getProject())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (facetProject == null) { setErrorMessage(JBossWSUIMessages.Error_JBossWS_GenerateWizard_NotDynamicWebProject2); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1277/buggy-version/plugins.org.jboss.tools.ws.ui.src.org.jboss.tools.ws.ui.wizards.JBossRSGenerateWizardPage.java", "BodyUseAPI": [], "Fixed commit": "417f1ba5d2695a5df7c3a420f24e89dc221b99bf", "Url": "https://api.github.com/repos/dazarov/jbosstools-webservices", "Date": "2013-07-03T14:00:48Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (externalPayment) { return javax.ws.rs.core.Response.status(Status.BAD_REQUEST).entity(\"External payments have not been implemented yet\").build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5931/buggy-version/jaxrs.src.main.java.com.ning.billing.jaxrs.resources.InvoiceResource.java", "BodyUseAPI": [], "Fixed commit": "0e1d00afb72ea7990941081b7e3988997405d396", "Url": "https://api.github.com/repos/ning/killbill", "Date": "2012-07-07T06:20:46Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDbRw) != null) { mDbRw.cleanup(); mDbRw = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2075/buggy-version/src.com.toycode.pwmemo.EditActivity.java", "BodyUseAPI": [], "Fixed commit": "10799c95ba490531b0e2942a6d5637dff734c3a0", "Url": "https://api.github.com/repos/HiroshiOkada/PwMemo", "Date": "2011-11-22T22:07:19Z"},
{"Line": "=>1157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.fossasia.phimpme.gallery.activities.SingleMediaActivity.SLIDE_SHOW_INTERVAL) > 1000) { hideSystemUI(); handler.postDelayed(slideShowRunnable, org.fossasia.phimpme.gallery.activities.SingleMediaActivity.SLIDE_SHOW_INTERVAL); }else android.widget.Toast.makeText(this, \"Minimum duration is 2 sec\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4819/buggy-version/app.src.main.java.org.fossasia.phimpme.gallery.activities.SingleMediaActivity.java", "BodyUseAPI": [], "Fixed commit": "cb2d526cc9af0be0f088a47e6983849052ded2a0", "Url": "https://api.github.com/repos/fossasia/phimpme-android", "Date": "2017-11-28T08:14:24Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(authentication instanceof org.springframework.security.authentication.AnonymousAuthenticationToken)) { java.lang.String redirect = \"redirect:/home\"; httpServletResponse.sendRedirect(redirect); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/525/buggy-version/schoolmanagementsystem.src.main.java.com.springmvc.controllers.MainController.java", "BodyUseAPI": [], "Fixed commit": "d4554fae7a8598c72d8c0f8fab3c76cfc185fd97", "Url": "https://api.github.com/repos/chamara-madusanka/SpringMVC", "Date": "2016-01-11T14:55:08Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (trigger == null) { mView.makeViewsUneditable(); mIsInEditingMode = false; }else { mView.focusOnView(trigger); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8003/buggy-version/app.src.main.java.cryptobox.presenters.EditorPresenter.java", "BodyUseAPI": ["android.view.View.focusOnView(android.view.View)"], "Fixed commit": "30fc5ce7868a47dc02fef89b4f696ecd59297809", "Url": "https://api.github.com/repos/roman-smirnov/CryptoBox", "Date": "2016-12-10T11:51:32Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getAction()) == (android.view.MotionEvent.ACTION_UP)) { cv.invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2757/buggy-version/src.com.kuna.ibeatcon_android.Controller.java", "BodyUseAPI": [], "Fixed commit": "49cac9065cc1dc241ed7eef3a0da365eab975a0e", "Url": "https://api.github.com/repos/xuserv/iBeatConAndroid", "Date": "2014-05-09T15:01:04Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.languageId) != null) this.currentLanguageVO = org.infoglue.cms.controllers.kernel.impl.simple.LanguageController.getController().getLanguageVOWithId(this.languageId); else if (languageId != null) this.currentLanguageVO = org.infoglue.cms.controllers.kernel.impl.simple.LanguageController.getController().getLanguageVOWithId(languageId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2949/buggy-version/src.java.org.infoglue.cms.applications.contenttool.actions.ViewContentVersionAction.java", "BodyUseAPI": [], "Fixed commit": "277dc7398798583377de9c653ec3511ac4d8107b", "Url": "https://api.github.com/repos/johandahlgren/infoglue", "Date": "2012-09-04T20:21:23Z"},
{"Line": "=>1077", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value.contains(\":\")) { name = new net.sf.saxon.s9api.QName(value, node); }else { name = new net.sf.saxon.s9api.QName(\"\", value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5305/buggy-version/src.main.java.com.xmlcalabash.model.Parser.java", "BodyUseAPI": [], "Fixed commit": "2003bbf8c4c89c467bc7f35e5451978b6e4caba6", "Url": "https://api.github.com/repos/ndw/xmlcalabash1", "Date": "2015-05-05T02:23:17Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activity) != null) { context.startActivity(new android.content.Intent(context, activity)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7713/buggy-version/app.src.main.java.com.ssau.lab1.ui.menu.MenuItem.java", "BodyUseAPI": [], "Fixed commit": "67845a01f5a310f0c682c57da16413a4f1a0f244", "Url": "https://api.github.com/repos/ikyzmin/lab1", "Date": "2016-12-03T06:38:17Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (config.has(radlab.rain.ScenarioTrack.CFG_RESOURCE_PATH)) { this._resourcePath = config.getString(radlab.rain.ScenarioTrack.CFG_RESOURCE_PATH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4645/buggy-version/src.radlab.rain.ScenarioTrack.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "b487dbba6d09a822c4d2a4f58938fe1a96480d95", "Url": "https://api.github.com/repos/sguazt/rain-workload-toolkit", "Date": "2013-10-16T08:42:09Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((option.modifierList) != null) { option.modifiers = new com.nisovin.magicspells.castmodifiers.ModifierSet(option.modifierList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6954/buggy-version/src.com.nisovin.magicspells.spells.MenuSpell.java", "BodyUseAPI": [], "Fixed commit": "6d15012b3151e8d4bab17a5fb53a0beb75f50500", "Url": "https://api.github.com/repos/nisovin/MagicSpells", "Date": "2014-05-24T05:25:23Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["T.getList(org.cytoscape.ding.internal.gradients.STOP_LIST,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (points.isEmpty()) gradient.set(org.cytoscape.ding.internal.gradients.STOP_LIST, getGrEditor().getControlPoints());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8059/buggy-version/ding-impl.ding-presentation-impl.src.main.java.org.cytoscape.ding.internal.gradients.AbstractGradientEditor.java", "BodyUseAPI": [], "Fixed commit": "0aa5f10a9b2c8946a5248b99d6e68a9a57f3cf9e", "Url": "https://api.github.com/repos/chrtannus/cytoscape-impl", "Date": "2014-07-16T20:48:15Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (searchByTime) { time = (hour * 100) + minute; }else { time = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1878/buggy-version/app.src.main.java.com.android.teamasia.miniyelp.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "3b255b74640a33a91f8794b76ee78f3758cd2ecb", "Url": "https://api.github.com/repos/kienthoang/MiniYelp", "Date": "2014-09-22T01:39:51Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == 0.0) { isMinus = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5524/buggy-version/src.main.java.com.bruce.byjson.TokenReader.java", "BodyUseAPI": [], "Fixed commit": "d23891a485f07d70b2e2f3f63ef95605bf1bf701", "Url": "https://api.github.com/repos/BruceYuan1993/BYJson", "Date": "2017-06-15T14:21:26Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getWidget().getNumberOfSeries()) == 0) { seriesAndDataLabelsRendered = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3269/buggy-version/addon.src.main.java.com.vaadin.addon.charts.shared.ChartConnector.java", "BodyUseAPI": [], "Fixed commit": "5cfee36669cd71a0daec0db99a1eb83b0e9e22e3", "Url": "https://api.github.com/repos/vaadin/charts", "Date": "2017-06-09T10:57:16Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jsOverlay.getSeries()) != null) { return jsOverlay.getSeries().length(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3269/buggy-version/addon.src.main.java.com.vaadin.addon.charts.client.ui.HighchartWidget.java", "BodyUseAPI": ["jsOverlay.getSeries().length()", "com.vaadin.addon.charts.client.ui.HighchartJsOverlay.getSeries()"], "Fixed commit": "5cfee36669cd71a0daec0db99a1eb83b0e9e22e3", "Url": "https://api.github.com/repos/vaadin/charts", "Date": "2017-06-09T10:57:16Z"},
{"Line": "=>732", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((isOnPinA(newX, newY)) && (isOnPinB(newX, newY))) { if ((fLayout.indexOfChild(pinA)) > (fLayout.indexOfChild(pinB))) { aSelected = true; pinAdXGrab = (newX) - oldPinAMarginLeft; pinAdYGrab = (newY) - oldPinAMarginTop; }else { bSelected = true; pinBdXGrab = (newX) - oldPinBMarginLeft; pinBdYGrab = (newY) - oldPinBMarginTop; } }else if ((isOnPinA(newX, newY)) && (!(bSelected))) { aSelected = true; pinAdXGrab = (newX) - oldPinAMarginLeft; pinAdYGrab = (newY) - oldPinAMarginTop; }else if ((isOnPinB(newX, newY)) && (!(aSelected))) { bSelected = true; pinBdXGrab = (newX) - oldPinBMarginLeft; pinBdYGrab = (newY) - oldPinBMarginTop; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/807/buggy-version/src.edu.berkeley.cs160.clairetuna.prog3.MainActivity.java", "BodyUseAPI": ["edu.berkeley.cs160.clairetuna.prog3.MainActivity.MainView.isOnPinB(float,float)", "edu.berkeley.cs160.clairetuna.prog3.MainActivity.MainView.isOnPinA(float,float)"], "Fixed commit": "486b8f7094057cc1c0c0c7cde6b0f842854909d2", "Url": "https://api.github.com/repos/ctuna/bart", "Date": "2013-03-25T00:03:26Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (response == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/285/buggy-version/app.src.main.java.kz.mukhamedissa.exchangerates.network.YahooCurrencyAPIClient.java", "BodyUseAPI": [], "Fixed commit": "268d2329d30cbfb0327299fe2057ebf2092e336c", "Url": "https://api.github.com/repos/mukhamedissa/ExchangeRates", "Date": "2017-05-28T06:09:44Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (catalog.getBoolean(\"_exists\")) { java.lang.System.out.println(catalog.getString(\"http://rdf.biosemantics.org/ontologies/fdp-o#metadataIdentifier\")); datasetMetadata.setParentURI(f.createIRI(catalog.getString(\"http://rdf.biosemantics.org/ontologies/fdp-o#metadataIdentifier\"))); }else { datasetMetadata.setParentURI(f.createIRI((((((((fdp.getString(\"baseUri\")) + \"/catalog/\") + (catalog.getString(\"http://purl.org/dc/terms/title\").replace(\" \", \"_\"))) + \"_\") + (catalog.getString(\"http://purl.org/dc/terms/hasVersion\").replace(\" \", \"_\"))) + \"_\") + uuid_catalog))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1014/buggy-version/extensions.fairifier-rdf-extension.dtls.fairifier.PostFairDataToFairDataPoint.java", "BodyUseAPI": ["java.io.PrintStream.println(catalog.getString(\"http://rdf.biosemantics.org/ontologies/fdp-o#metadataIdentifier\"))", "org.eclipse.rdf4j.model.impl.SimpleValueFactory.createIRI(catalog.getString(\"http://rdf.biosemantics.org/ontologies/fdp-o#metadataIdentifier\"))", "org.json.JSONObject.getString(java.lang.String)", "org.dtls.fairifier.DatasetMetadata.setParentURI(f.createIRI((((((((fdp.getString(\"baseUri\")) + \"/catalog/\") + (catalog.getString(\"http://purl.org/dc/terms/title\").replace(\" \", \"_\"))) + \"_\") + (catalog.getString(\"http://purl.org/dc/terms/hasVersion\").replace(\" \", \"_\"))) + \"_\") + uuid_catalog)))", "org.json.JSONObject.getString(java.lang.String)", "org.dtls.fairifier.DatasetMetadata.setParentURI(f.createIRI(catalog.getString(\"http://rdf.biosemantics.org/ontologies/fdp-o#metadataIdentifier\")))", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "catalog.getString(\"http://purl.org/dc/terms/hasVersion\").replace(java.lang.String,java.lang.String)", "catalog.getString(\"http://purl.org/dc/terms/title\").replace(java.lang.String,java.lang.String)", "org.eclipse.rdf4j.model.impl.SimpleValueFactory.createIRI((((((((fdp.getString(\"baseUri\")) + \"/catalog/\") + (catalog.getString(\"http://purl.org/dc/terms/title\").replace(\" \", \"_\"))) + \"_\") + (catalog.getString(\"http://purl.org/dc/terms/hasVersion\").replace(\" \", \"_\"))) + \"_\") + uuid_catalog))"], "Fixed commit": "9751a109d2755017a48921ba3027bd07edd40186", "Url": "https://api.github.com/repos/Shamanou/FAIRifier", "Date": "2017-06-03T12:54:38Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (dataset.getBoolean(\"_exists\")) { java.lang.System.out.println(dataset.getString(\"http://rdf.biosemantics.org/ontologies/fdp-o#metadataIdentifier\")); distributionMetadata.setParentURI(f.createIRI(dataset.getString(\"http://rdf.biosemantics.org/ontologies/fdp-o#metadataIdentifier\"))); }else { distributionMetadata.setParentURI(f.createIRI((((((((fdp.getString(\"baseUri\")) + \"/dataset/\") + (dataset.getString(\"http://purl.org/dc/terms/title\").replace(\" \", \"_\"))) + \"_\") + (dataset.getString(\"http://purl.org/dc/terms/hasVersion\").replace(\" \", \"_\"))) + \"_\") + uuid_dataset))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1014/buggy-version/extensions.fairifier-rdf-extension.dtls.fairifier.PostFairDataToFairDataPoint.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "org.dtls.fairifier.DistributionMetadata.setParentURI(f.createIRI((((((((fdp.getString(\"baseUri\")) + \"/dataset/\") + (dataset.getString(\"http://purl.org/dc/terms/title\").replace(\" \", \"_\"))) + \"_\") + (dataset.getString(\"http://purl.org/dc/terms/hasVersion\").replace(\" \", \"_\"))) + \"_\") + uuid_dataset)))", "dataset.getString(\"http://purl.org/dc/terms/title\").replace(java.lang.String,java.lang.String)", "org.dtls.fairifier.DistributionMetadata.setParentURI(f.createIRI(dataset.getString(\"http://rdf.biosemantics.org/ontologies/fdp-o#metadataIdentifier\")))", "org.json.JSONObject.getString(java.lang.String)", "org.eclipse.rdf4j.model.impl.SimpleValueFactory.createIRI(dataset.getString(\"http://rdf.biosemantics.org/ontologies/fdp-o#metadataIdentifier\"))", "java.io.PrintStream.println(dataset.getString(\"http://rdf.biosemantics.org/ontologies/fdp-o#metadataIdentifier\"))", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "org.eclipse.rdf4j.model.impl.SimpleValueFactory.createIRI((((((((fdp.getString(\"baseUri\")) + \"/dataset/\") + (dataset.getString(\"http://purl.org/dc/terms/title\").replace(\" \", \"_\"))) + \"_\") + (dataset.getString(\"http://purl.org/dc/terms/hasVersion\").replace(\" \", \"_\"))) + \"_\") + uuid_dataset))", "dataset.getString(\"http://purl.org/dc/terms/hasVersion\").replace(java.lang.String,java.lang.String)"], "Fixed commit": "9751a109d2755017a48921ba3027bd07edd40186", "Url": "https://api.github.com/repos/Shamanou/FAIRifier", "Date": "2017-06-03T12:54:38Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bundle_context.getBundle().getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (templateUrl == null) { com.buglabs.osgi.sewing.LogManager.log(LogService.LOG_ERROR, (\"Failed to get item from input:\" + path)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/163/buggy-version/com.buglabs.osgi.sewing.com.buglabs.osgi.sewing.TemplateIncludesCache.java", "BodyUseAPI": [], "Fixed commit": "7a64544ecf4c0d0158a6c9b9e1632caf16cec343", "Url": "https://api.github.com/repos/buglabs/bug-osgi", "Date": "2011-07-18T22:55:59Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(UserType.GITHUB.equals(user.getType()))) { throw new com.epam.reportportal.auth.integration.github.GitHubUserReplicator.UserSynchronizationException(((\"User with login '\" + (user.getId())) + \"' already exists\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7175/buggy-version/src.main.java.com.epam.reportportal.auth.integration.github.GitHubUserReplicator.java", "BodyUseAPI": ["com.epam.ta.reportportal.database.entity.user.User.getId()"], "Fixed commit": "ce4b2855bd5b934ad6a68123e8b62a5206e5316c", "Url": "https://api.github.com/repos/reportportal/service-authorization", "Date": "2016-10-06T16:17:32Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(presetUsage.containsKey(preset))) presetUsage.put(preset, 1); else presetUsage.put(preset, ((presetUsage.get(preset)) + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4782/buggy-version/src.level.maps.generationModules.ModularGeneration.java", "BodyUseAPI": ["java.util.HashMap<level.maps.presets.modularPresets.ModularPreset, java.lang.Integer>.get(level.maps.presets.modularPresets.ModularPreset)", "java.util.HashMap<level.maps.presets.modularPresets.ModularPreset, java.lang.Integer>.put(level.maps.presets.modularPresets.ModularPreset,int)", "java.util.HashMap<level.maps.presets.modularPresets.ModularPreset, java.lang.Integer>.put(level.maps.presets.modularPresets.ModularPreset,((presetUsage.get(preset)) + 1))"], "Fixed commit": "da52cefead5189cfe5adb2dd1608bb93be50be4c", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2017-04-21T00:04:03Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.walkerMap.get(table.getRawTable())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tableId == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7583/buggy-version/src.org.dbflute.erflute.editor.persistent.xml.writer.WrittenVirtualDiagramBuilder.java", "BodyUseAPI": [], "Fixed commit": "3a40d6d2d9f0388a4185d2ba10280c89ab0fc4bd", "Url": "https://api.github.com/repos/dbflute-session/erflute", "Date": "2017-06-12T10:39:02Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getData().getConfigurationSection(\"Lucky\")) != null) { return getData().getConfigurationSection(\"Lucky\").getKeys(false); }else { return new java.util.HashSet<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5946/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Objects.RewardFileData.java", "BodyUseAPI": [], "Fixed commit": "1a9c780aecdd467a2b24c44779ecdec5325eb8ba", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2017-07-10T14:26:12Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Seconds == (-30)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5924/buggy-version/core.src.com.saver.shower.showerSaver.java", "BodyUseAPI": [], "Fixed commit": "82e54f1a26360e532674181320371ddddb206bad", "Url": "https://api.github.com/repos/yaodaniel/HackSB", "Date": "2015-02-01T09:05:13Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numero) == 3) { return 8; }else { return 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8260/buggy-version/src.guessinggame.Giocatore418334.java", "BodyUseAPI": [], "Fixed commit": "6edccc4d43e534e43276ff5672a0da6214349875", "Url": "https://api.github.com/repos/claudio-unipv/GuessingGame", "Date": "2016-03-08T16:12:15Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numero) == 3) { return 8; }else { return 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8260/buggy-version/src.guessinggame.Giocatore418334.java", "BodyUseAPI": [], "Fixed commit": "6edccc4d43e534e43276ff5672a0da6214349875", "Url": "https://api.github.com/repos/claudio-unipv/GuessingGame", "Date": "2016-03-08T16:12:15Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numero) == 0) { return 9; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8260/buggy-version/src.guessinggame.Giocatore418334.java", "BodyUseAPI": [], "Fixed commit": "6edccc4d43e534e43276ff5672a0da6214349875", "Url": "https://api.github.com/repos/claudio-unipv/GuessingGame", "Date": "2016-03-08T16:12:15Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numero) == 2) { return 9; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8260/buggy-version/src.guessinggame.Giocatore418334.java", "BodyUseAPI": [], "Fixed commit": "6edccc4d43e534e43276ff5672a0da6214349875", "Url": "https://api.github.com/repos/claudio-unipv/GuessingGame", "Date": "2016-03-08T16:12:15Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numero) == 2) { return 9; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8260/buggy-version/src.guessinggame.Giocatore418334.java", "BodyUseAPI": [], "Fixed commit": "6edccc4d43e534e43276ff5672a0da6214349875", "Url": "https://api.github.com/repos/claudio-unipv/GuessingGame", "Date": "2016-03-08T16:12:15Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numero) == 1) { return 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8260/buggy-version/src.guessinggame.Giocatore418334.java", "BodyUseAPI": [], "Fixed commit": "6edccc4d43e534e43276ff5672a0da6214349875", "Url": "https://api.github.com/repos/claudio-unipv/GuessingGame", "Date": "2016-03-08T16:12:15Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numero) == 0) { return 9; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8260/buggy-version/src.guessinggame.Giocatore418334.java", "BodyUseAPI": [], "Fixed commit": "6edccc4d43e534e43276ff5672a0da6214349875", "Url": "https://api.github.com/repos/claudio-unipv/GuessingGame", "Date": "2016-03-08T16:12:15Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numero) == 1) { return 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8260/buggy-version/src.guessinggame.Giocatore418334.java", "BodyUseAPI": [], "Fixed commit": "6edccc4d43e534e43276ff5672a0da6214349875", "Url": "https://api.github.com/repos/claudio-unipv/GuessingGame", "Date": "2016-03-08T16:12:15Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.src.ItemStack.copy()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((workStack.stackSize) == 0) { slot.putStack(null); }else if ((workStack.stackSize) == (originalStack.stackSize)) { return null; }else { slot.putStack(workStack); slot.onSlotChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2058/buggy-version/src.common.ro.narc.liquiduu.ContainerAccelerator.java", "BodyUseAPI": ["net.minecraft.src.Slot.putStack(net.minecraft.src.ItemStack)"], "Fixed commit": "1a31fd3a5d3411f2f79e10e735cf621af0b31f41", "Url": "https://api.github.com/repos/narc0tiq/LiquidUU", "Date": "2012-12-09T02:18:03Z"},
{"Line": "=>1606", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mikepenz.fastadapter.FastAdapter<Item>.notifyAdapterSubItemsChanged(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (itemsCount == 0) { mExpanded.delete(position); }else { mExpanded.put(position, itemsCount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/600/buggy-version/library.src.main.java.com.mikepenz.fastadapter.FastAdapter.java", "BodyUseAPI": ["android.util.SparseIntArray.put(int,int)"], "Fixed commit": "5f92d42946429846ce9f84696cf07d5984a59e26", "Url": "https://api.github.com/repos/AhmadNemati/FastAdapter", "Date": "2016-09-19T17:03:45Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { android.util.Log.d(\"Main\", \"using multiple fragments\"); if ((graphFragment) == null) graphFragment = new apps.czeidler.economylogboook.mainactivity.GraphFragment(); if ((entryListFragment) == null) entryListFragment = new apps.czeidler.economylogboook.mainactivity.EntryListFragment(); getSupportFragmentManager().beginTransaction().add(R.id.fragment_econ_list, entryListFragment, \"entryList\").add(R.id.fragment_graphs, graphFragment, \"graphs\").commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/759/buggy-version/app.src.main.java.apps.czeidler.economylogboook.mainactivity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "387a3bfe59dd025fd43d88690fe5d854f18ce739", "Url": "https://api.github.com/repos/ColinZeidler/EconomyLogbook", "Date": "2016-03-17T04:09:36Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.emilsjolander.sprinkles.ModelInfo.from(java.lang.Class<? extends se.emilsjolander.sprinkles.Model>)", "info.primaryKeys.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((info.autoIncrementColumn) == column) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/154/buggy-version/library.src.main.java.se.emilsjolander.sprinkles.Migration.java", "BodyUseAPI": [], "Fixed commit": "9113b62fb217cdafba5b49652559de95c6a693db", "Url": "https://api.github.com/repos/emilsjolander/sprinkles", "Date": "2014-01-25T14:57:07Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((graph) == null) throw new java.lang.IllegalArgumentException(\"The element has been detached, the graph element cannot be retrieved. Reattach the element to a Graph instance\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8710/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientElementIterator.java", "BodyUseAPI": [], "Fixed commit": "abc30c309ccc2ec544316c9a9cb61971c7fe8658", "Url": "https://api.github.com/repos/mcculls/orientdb", "Date": "2015-03-09T17:12:56Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentSide == side) { return reverseSublist(side, firstIndexForCurrentSide, currentIndex, ports); }else { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3167/buggy-version/plugins.org.eclipse.elk.alg.layered.src.org.eclipse.elk.alg.layered.p3order.GreedyPortDistributor.java", "BodyUseAPI": ["org.eclipse.elk.alg.layered.p3order.GreedyPortDistributor.reverseSublist(org.eclipse.elk.core.options.PortSide,int,int,java.util.List<org.eclipse.elk.alg.layered.graph.LPort>)"], "Fixed commit": "4543005eafd64cba6314e9714342f63086edd140", "Url": "https://api.github.com/repos/altre/elk", "Date": "2016-04-13T12:01:34Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.imaging.formats.jpeg.JpegImageMetadata.findEXIFValueWithExactMatch(TiffTagConstants.TIFF_TAG_MODEL)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (model != null) { byte[] bytes = model.getByteArrayValue(); java.lang.String modelStr = new java.lang.String(bytes).trim(); if (org.apache.commons.lang3.StringUtils.isNotEmpty(modelStr)) { info.setDevice(modelStr); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3603/buggy-version/src.main.java.zz.filecollector.fileprocessor.JpgPhotoProcessor.java", "BodyUseAPI": ["org.apache.commons.imaging.formats.tiff.TiffField.getByteArrayValue()"], "Fixed commit": "a0377553c56aa6fad6b8273722510c0a9afa0cc4", "Url": "https://api.github.com/repos/zhzh132/FileCollector", "Date": "2016-09-13T14:40:06Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (id != null) { this.id = java.lang.Integer.parseInt(id); }else { se.kth.model.bo.UserProfile profile = tokenSession.getProfile(); if (profile != null) { this.id = profile.getId(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3327/buggy-version/Social.src.se.kth.handler.Wall.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "f368e17846f9d4c561b459ab218f8aab96c942e9", "Url": "https://api.github.com/repos/Happyness/social", "Date": "2013-11-11T09:52:39Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((atg.getOrder()) != null) { pojo.setOrder(atg.getOrder()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/9045/buggy-version/openinfra_core.src.main.java.de.btu.openinfra.backend.db.daos.AttributeTypeGroupToTopicCharacteristicDao.java", "BodyUseAPI": ["de.btu.openinfra.backend.db.pojos.AttributeTypeGroupToTopicCharacteristicPojo.setOrder(atg.getOrder())", "de.btu.openinfra.backend.db.jpa.model.AttributeTypeGroupToTopicCharacteristic.getOrder()"], "Fixed commit": "1485b8e8051de4cafe423eec69b6078bbd3df72d", "Url": "https://api.github.com/repos/PhilippE11/core", "Date": "2015-07-20T09:27:59Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tags.get(255).getCardinality()) > 0) return (tags.get(255).getFirstNumericValue()) == 2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2352/buggy-version/src.main.java.com.easyinnova.tiff.model.types.IFD.java", "BodyUseAPI": ["tags.get(255).getFirstNumericValue()", "com.easyinnova.tiff.model.IfdTags.get(int)"], "Fixed commit": "5266be37e8eb16992b8396ed73fc41f2ed5442f8", "Url": "https://api.github.com/repos/EasyinnovaSL/Tiff-Library-4J", "Date": "2016-11-28T08:03:57Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tags.get(254).getCardinality()) > 0) return java.math.BigInteger.valueOf(tags.get(254).getFirstNumericValue()).testBit(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2352/buggy-version/src.main.java.com.easyinnova.tiff.model.types.IFD.java", "BodyUseAPI": ["com.easyinnova.tiff.model.IfdTags.get(int)", "tags.get(254).getFirstNumericValue()", "java.math.BigInteger.valueOf(tags.get(254).getFirstNumericValue())", "java.math.BigInteger.testBit(int)"], "Fixed commit": "5266be37e8eb16992b8396ed73fc41f2ed5442f8", "Url": "https://api.github.com/repos/EasyinnovaSL/Tiff-Library-4J", "Date": "2016-11-28T08:03:57Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (in.isReadable()) { encoder.writeOutbound(in.retain()); fetchEncoderOutput(out); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7690/buggy-version/codec-http.src.main.java.io.netty.handler.codec.http.HttpContentEncoder.java", "BodyUseAPI": ["io.netty.channel.embedded.EmbeddedChannel.writeOutbound(in.retain())", "io.netty.buffer.ByteBuf.retain()"], "Fixed commit": "4d1c763b0c8026fa875ca4696a000cd0f2a3cd6c", "Url": "https://api.github.com/repos/netty/netty", "Date": "2013-07-10T15:36:17Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (f.exists()) f.delete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8713/buggy-version/src.main.java.io.mazenmc.skypebot.utils.UpdateChecker.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "c2ad6db4b32a3a58e2890a152f08d2599ecb0422", "Url": "https://api.github.com/repos/calebbfmv/SkypeBot", "Date": "2015-01-22T00:27:27Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["V.getLB()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((bestProvedLB) != null) && ((bestProvedLB.doubleValue()) > lb)) { lb = bestProvedLB.doubleValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/9131/buggy-version/choco-solver.src.main.java.org.chocosolver.solver.objective.ObjectiveManager.java", "BodyUseAPI": ["N.doubleValue()"], "Fixed commit": "f98740ea7064861f9d80f40b742a78fd97281d6e", "Url": "https://api.github.com/repos/chocoteam/choco-solver", "Date": "2015-10-15T08:44:48Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bestProvedLB) == null) { bestProvedLB = lb; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/9131/buggy-version/choco-solver.src.main.java.org.chocosolver.solver.objective.ObjectiveManager.java", "BodyUseAPI": [], "Fixed commit": "f98740ea7064861f9d80f40b742a78fd97281d6e", "Url": "https://api.github.com/repos/chocoteam/choco-solver", "Date": "2015-10-15T08:44:48Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["V.getUB()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((bestProvedUB) != null) && ((bestProvedUB.doubleValue()) < ub)) { ub = bestProvedUB.doubleValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/9131/buggy-version/choco-solver.src.main.java.org.chocosolver.solver.objective.ObjectiveManager.java", "BodyUseAPI": ["N.doubleValue()"], "Fixed commit": "f98740ea7064861f9d80f40b742a78fd97281d6e", "Url": "https://api.github.com/repos/chocoteam/choco-solver", "Date": "2015-10-15T08:44:48Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["V.getUB()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((bestProvedUB) != null) && ((bestProvedUB.intValue()) < ub)) { ub = bestProvedUB.intValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/9131/buggy-version/choco-solver.src.main.java.org.chocosolver.solver.objective.ObjectiveManager.java", "BodyUseAPI": ["N.intValue()"], "Fixed commit": "f98740ea7064861f9d80f40b742a78fd97281d6e", "Url": "https://api.github.com/repos/chocoteam/choco-solver", "Date": "2015-10-15T08:44:48Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["V.getLB()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((bestProvedLB) != null) && ((bestProvedLB.intValue()) > lb)) { lb = bestProvedLB.intValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/9131/buggy-version/choco-solver.src.main.java.org.chocosolver.solver.objective.ObjectiveManager.java", "BodyUseAPI": ["N.intValue()"], "Fixed commit": "f98740ea7064861f9d80f40b742a78fd97281d6e", "Url": "https://api.github.com/repos/chocoteam/choco-solver", "Date": "2015-10-15T08:44:48Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bestProvedUB) == null) { bestProvedUB = ub; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/9131/buggy-version/choco-solver.src.main.java.org.chocosolver.solver.objective.ObjectiveManager.java", "BodyUseAPI": [], "Fixed commit": "f98740ea7064861f9d80f40b742a78fd97281d6e", "Url": "https://api.github.com/repos/chocoteam/choco-solver", "Date": "2015-10-15T08:44:48Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.qcadoo.mes.technologies.constants.TechnologyState.changeState(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((newState.equals(TechnologyState.DECLINED)) || (newState.equals(TechnologyState.OUTDATED))) { technology.setField(\"master\", \"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4379/buggy-version/mes-plugins.mes-plugins-technologies.src.main.java.com.qcadoo.mes.technologies.states.TechnologyStateService.java", "BodyUseAPI": [], "Fixed commit": "acf74abe2028fa843b57893b218e3d3cf7ed830a", "Url": "https://api.github.com/repos/qcadoo/mes", "Date": "2012-03-21T07:58:33Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position >= (_feed.getItemCount())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7294/buggy-version/TinyRssLib.src.com.tinymission.rss.FeedActivity.java", "BodyUseAPI": [], "Fixed commit": "5fcf161729fccde52742a1ccc6dffdd2baf07912", "Url": "https://api.github.com/repos/ajselvig/TinyRss", "Date": "2012-05-20T05:44:47Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tinymission.rss.FeedActivity.FeedAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (item == null) return view;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7294/buggy-version/TinyRssLib.src.com.tinymission.rss.FeedActivity.java", "BodyUseAPI": [], "Fixed commit": "5fcf161729fccde52742a1ccc6dffdd2baf07912", "Url": "https://api.github.com/repos/ajselvig/TinyRss", "Date": "2012-05-20T05:44:47Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(viewOnly)) { android.content.Intent intent = new android.content.Intent(this, com.aayaffe.sailingracecoursemanager.geographical.GPSService.class); bindService(intent, mConnection, Context.BIND_AUTO_CREATE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/266/buggy-version/app.src.main.java.com.aayaffe.sailingracecoursemanager.activities.GoogleMapsActivity.java", "BodyUseAPI": [], "Fixed commit": "80ed5110dd7640ea21a8748dbf69efb82a921074", "Url": "https://api.github.com/repos/aayaffe/SailingRaceCourseManager", "Date": "2017-12-04T20:43:49Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (jsonArray == null) { com.oryxtech.android.sideeffects.Utils.displayToast(currentActivity, \"No interactions found\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3917/buggy-version/app.src.main.java.com.oryxtech.android.sideeffects.Interactions.java", "BodyUseAPI": [], "Fixed commit": "a9b5ae52b1abf9f363dc1c933ea94340b6150d4a", "Url": "https://api.github.com/repos/crayne/SideEffectsGradle", "Date": "2017-06-19T15:39:05Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useSimpleAdjustment) { footstepToPack.getPose(footstepPose); icpOptimizationController.getFootstepSolution(0, footstepPositionSolution); footstepPose.setXYFromPosition2d(footstepPositionSolution); footstepToPack.setPose(footstepPose); }else { us.ihmc.euclid.transform.RigidBodyTransform ankleToSole = transformsFromAnkleToSole.get(footstepToPack.getRobotSide()); footstepToPack.getAnklePose(footstepPose, ankleToSole); icpOptimizationController.getFootstepSolution(0, footstepPositionSolution); footstepPose.setXYFromPosition2d(footstepPositionSolution); footstepToPack.setFromAnklePose(footstepPose, ankleToSole); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2916/buggy-version/CommonWalkingControlModules.src.us.ihmc.commonWalkingControlModules.instantaneousCapturePoint.ICPOptimizationLinearMomentumRateOfChangeControlModule.java", "BodyUseAPI": [], "Fixed commit": "c388d2a820c3aa2836e5653a5f85fbcd2dedf810", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2017-08-07T14:28:02Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(checkCanteenExists(name, address))) { if (changesExist) { canteenDAO.updateCanteen(canteenToEdit); }else { throw new java.lang.Exception(\"No changes were made to the Canteen\"); } }else { throw new java.lang.Exception(\"Canteen name already taken\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4008/buggy-version/src.controller.CanteenController.java", "BodyUseAPI": [], "Fixed commit": "18d634907c138b97b94a8a448fa9c383adf015f7", "Url": "https://api.github.com/repos/tweetweetarnold/eureka_webservice", "Date": "2016-02-23T13:05:07Z"},
{"Line": "=>528", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(lse.getValueIsAdjusting())) { displayGoal(subGoalsList.getSelectedIndex()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3769/buggy-version/src.coq.ProofError.java", "BodyUseAPI": [], "Fixed commit": "1d1a7f70cb5256cb1708d71d21145757d93dc258", "Url": "https://api.github.com/repos/aa755/nbcoq", "Date": "2013-08-19T23:05:26Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.timedStateMap) != null) { for (li.strolch.model.timedstate.StrolchTimedState<li.strolch.model.timevalue.IValue<?>> timedState : this.timedStateMap.values()) { clone.addTimedState(timedState.getClone()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/270/buggy-version/li.strolch.model.src.main.java.li.strolch.model.Resource.java", "BodyUseAPI": [], "Fixed commit": "5fbbe50667151885ed0ff86e54fe60f06b1113c3", "Url": "https://api.github.com/repos/4treesCH/strolch", "Date": "2014-10-04T21:58:46Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((key.length()) < 3) || (!(key.startsWith(((org.jaml.api.Defaults.markupBegin) + (org.jaml.api.Defaults.emptyString)))))) || (!(key.endsWith(((org.jaml.api.Defaults.markupEnd) + (org.jaml.api.Defaults.emptyString)))))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/212/buggy-version/jaml-core.src.org.jaml.loaders.MarkupLoader.java", "BodyUseAPI": [], "Fixed commit": "d039fe43098415700886e5e46939267ce0f77198", "Url": "https://api.github.com/repos/hblaub/JAML", "Date": "2011-09-04T12:34:17Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((study.getCountries()) != null) { for (java.lang.String country : study.getCountries()) { countries += country + \",\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4282/buggy-version/code.br.ufpe.cin.reviewer.ui.rcp.src.br.ufpe.cin.reviewer.ui.rcp.literaturereview.StudyAnalysisView.java", "BodyUseAPI": ["br.ufpe.cin.reviewer.model.common.Study.getCountries()"], "Fixed commit": "9b792945b911bbf7d1532e13b6f0dc8146b70caf", "Url": "https://api.github.com/repos/bfsc/reviewer", "Date": "2013-05-16T21:54:22Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((study.getInstitutions()) != null) { for (java.lang.String institution : study.getInstitutions()) { institutions += institution + \",\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4282/buggy-version/code.br.ufpe.cin.reviewer.ui.rcp.src.br.ufpe.cin.reviewer.ui.rcp.literaturereview.StudyAnalysisView.java", "BodyUseAPI": ["br.ufpe.cin.reviewer.model.common.Study.getInstitutions()"], "Fixed commit": "9b792945b911bbf7d1532e13b6f0dc8146b70caf", "Url": "https://api.github.com/repos/bfsc/reviewer", "Date": "2013-05-16T21:54:22Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((study.getAuthors()) != null) { for (java.lang.String author : study.getAuthors()) { authors += author + \",\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4282/buggy-version/code.br.ufpe.cin.reviewer.ui.rcp.src.br.ufpe.cin.reviewer.ui.rcp.literaturereview.StudyAnalysisView.java", "BodyUseAPI": ["br.ufpe.cin.reviewer.model.common.Study.getAuthors()"], "Fixed commit": "9b792945b911bbf7d1532e13b6f0dc8146b70caf", "Url": "https://api.github.com/repos/bfsc/reviewer", "Date": "2013-05-16T21:54:22Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((study.getCode()) != null) { label_Id_conteudo.setText(study.getCode()); }else { label_Id_conteudo.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4282/buggy-version/code.br.ufpe.cin.reviewer.ui.rcp.src.br.ufpe.cin.reviewer.ui.rcp.literaturereview.StudyAnalysisView.java", "BodyUseAPI": ["br.ufpe.cin.reviewer.model.common.Study.getCode()", "org.eclipse.swt.widgets.Text.setText(study.getCode())"], "Fixed commit": "9b792945b911bbf7d1532e13b6f0dc8146b70caf", "Url": "https://api.github.com/repos/bfsc/reviewer", "Date": "2013-05-16T21:54:22Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (service != null) this.service = service;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8452/buggy-version/cas-client-core.src.main.java.org.jasig.cas.client.util.AbstractCasFilter.java", "BodyUseAPI": [], "Fixed commit": "e2ed817545a00270a69a38aa416a4237af196c91", "Url": "https://api.github.com/repos/charleehu/java-cas-client", "Date": "2016-03-22T09:02:33Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (returnValue != null) return returnValue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8707/buggy-version/src.Ass4.hashMap.MyHashTable.java", "BodyUseAPI": [], "Fixed commit": "c99cf47617c8a8289414f3eeb2811e6247cecd06", "Url": "https://api.github.com/repos/stedmana/Comp250", "Date": "2017-12-05T17:40:46Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getLoadFactor()) >= (MAX_LOAD_FACTOR)) { this.rehash(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8707/buggy-version/src.Ass4.hashMap.MyHashTable.java", "BodyUseAPI": [], "Fixed commit": "c99cf47617c8a8289414f3eeb2811e6247cecd06", "Url": "https://api.github.com/repos/stedmana/Comp250", "Date": "2017-12-05T17:40:46Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof java.lang.Boolean) { setProperty(name, ((java.lang.Boolean) (value))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8560/buggy-version/src.main.java.com.whitewoodcity.core.node.conrol.TableView.java", "BodyUseAPI": [], "Fixed commit": "a2e2430dd7b901972e8e6eb3c2f36b24757438a7", "Url": "https://api.github.com/repos/whitewoodcity/xbrowser", "Date": "2017-10-19T08:38:29Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jdesktop.swingx.JXList.getModel()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(model.isEmpty())) { list.setSelectedIndex(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1271/buggy-version/dayone.src.main.java.uk.co.gregreynolds.dayone.DayOnePanel.java", "BodyUseAPI": [], "Fixed commit": "a2639e5ded9c3d35a8cc89406fc41d367d742f80", "Url": "https://api.github.com/repos/gregryork/DayOneViewer", "Date": "2013-08-20T12:39:32Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (statMap.containsKey(type)) { java.lang.Integer stat = statMap.get(type).get(id); map.put(type, (stat == null ? 0 : stat)); }else { map.put(type, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4661/buggy-version/src.main.java.cat.nyaa.autobloodmoon.arena.GameScoreBoard.java", "BodyUseAPI": ["java.util.Map<cat.nyaa.autobloodmoon.arena.GameScoreBoard.StatType, java.lang.Integer>.put(cat.nyaa.autobloodmoon.arena.GameScoreBoard.StatType,int)", "java.util.Map<cat.nyaa.autobloodmoon.arena.GameScoreBoard.StatType, java.util.Map<java.util.UUID, java.lang.Integer>>.get(cat.nyaa.autobloodmoon.arena.GameScoreBoard.StatType)", "java.util.Map<cat.nyaa.autobloodmoon.arena.GameScoreBoard.StatType, java.lang.Integer>.put(cat.nyaa.autobloodmoon.arena.GameScoreBoard.StatType,int)", "java.util.Map<java.util.UUID, java.lang.Integer>.get(java.util.UUID)"], "Fixed commit": "4cedc74b006d7b7c9e76f09450ba2574d1450897", "Url": "https://api.github.com/repos/NyaaCat/Bloodmoon", "Date": "2017-04-02T02:09:01Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (message != null) { if (!(message.isEmpty())) { sb.append(message); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8514/buggy-version/src.main.java.net.virtalab.logger.Log.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.isEmpty()"], "Fixed commit": "bfb930c5b6ac2e72854cea5fd55208b86aea7b19", "Url": "https://api.github.com/repos/virtalab/logger", "Date": "2014-08-11T14:37:14Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isMilitaryBuilding()) { map.updateBorder(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1253/buggy-version/src.main.java.org.appland.settlers.model.Building.java", "BodyUseAPI": [], "Fixed commit": "60c8d9a3dca3a5f111d8f936301b58af8e91dee4", "Url": "https://api.github.com/repos/johan-martenson/settlers", "Date": "2014-08-12T21:58:36Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (icon != null) { iconIv.setImageBitmap(icon); }else { iconIv.setImageResource(R.drawable.ic_default); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2705/buggy-version/app.src.main.java.com.mohammedsazid.android.browse.MainActivity.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)"], "Fixed commit": "d7d9ebddbde24dc307e762504b3cecd8108d9f72", "Url": "https://api.github.com/repos/sazid/Browse", "Date": "2016-09-27T20:03:54Z"},
{"Line": "=>1733", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activeCramTags) == null) { activeCramTags = new java.util.HashSet<java.lang.String>(); }else { activeCramTags.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3520/buggy-version/src.com.ichi2.anki.StudyOptions.java", "BodyUseAPI": [], "Fixed commit": "950d06aa7e2506c38a77387f8a5b442b6777e038", "Url": "https://api.github.com/repos/nobnago/Anki-Android", "Date": "2011-10-22T09:28:26Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((defaultValues) != null) && (defaultValues.containsKey(currentMode))) { o = defaultValues.get(currentMode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8607/buggy-version/OsmAnd.src.net.osmand.plus.OsmandSettings.java", "BodyUseAPI": ["java.util.Map<net.osmand.plus.ApplicationMode, T>.get(net.osmand.plus.ApplicationMode)"], "Fixed commit": "5b1aff575d4bbe8e2ca0aa455b5d9a16f9b363e3", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2015-07-03T09:30:37Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((events.size()) == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1987/buggy-version/app.src.main.java.com.example.baard.Habit.java", "BodyUseAPI": [], "Fixed commit": "136d3147978af06f4becc30208ade7187594b6d9", "Url": "https://api.github.com/repos/CMPUT301F17T02/BAARD", "Date": "2017-12-02T04:58:55Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.System.getProperties().getProperty(\"os.name\").toLowerCase().contains(\"mac\")) { config.setWindowedMode(((int) ((dm.width) * 0.8F)), ((int) ((dm.height) * 0.8F))); }else { config.setWindowedMode(((int) ((dm.width) * 0.95F)), ((int) ((dm.height) * 0.95F))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/436/buggy-version/editor.src.main.com.mbrlabs.mundus.Main.java", "BodyUseAPI": [], "Fixed commit": "a87c64d8302bfcd71361b75a8345f6add423e0fc", "Url": "https://api.github.com/repos/mbrlabs/Mundus", "Date": "2016-06-28T14:07:09Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mScaleType) == null) { mScaleType = ScaleType.FIT_CENTER; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/594/buggy-version/src.com.example.touch.TouchImageView.java", "BodyUseAPI": [], "Fixed commit": "8d0add02b6926db78066d4e56c66623cedca8f8f", "Url": "https://api.github.com/repos/adamsp/TouchImageView", "Date": "2014-03-09T20:07:03Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.stratos.autoscaler.applications.ApplicationHolder.getApplications()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((persistedApplications != null) && (persistedApplications.applicationExists(applicationContext.getApplicationId()))) { java.lang.String existingKey = persistedApplications.getApplication(applicationContext.getApplicationId()).getKey(); application = new org.apache.stratos.autoscaler.applications.parser.Application(applicationContext.getApplicationId(), existingKey); }else { application = new org.apache.stratos.autoscaler.applications.parser.Application(applicationContext.getApplicationId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7697/buggy-version/components.org.apache.stratos.autoscaler.src.main.java.org.apache.stratos.autoscaler.applications.parser.DefaultApplicationParser.java", "BodyUseAPI": ["org.apache.stratos.autoscaler.applications.parser.ApplicationContext.getApplicationId()", "org.apache.stratos.autoscaler.applications.parser.ApplicationContext.getApplicationId()", "persistedApplications.getApplication(applicationContext.getApplicationId()).getKey()", "org.apache.stratos.autoscaler.applications.parser.ApplicationContext.getApplicationId()", "org.apache.stratos.autoscaler.applications.parser.Applications.getApplication(applicationContext.getApplicationId())"], "Fixed commit": "0a5fec3b9ecf12d3ff37078278d2b56c9b6e3f38", "Url": "https://api.github.com/repos/Thanu/stratos", "Date": "2016-02-10T08:59:42Z"},
{"Line": "=>625", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.equals(mRoomTokens.get(roomId), fromToken)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3879/buggy-version/matrix-sdk.src.main.java.org.matrix.androidsdk.data.MXMemoryStore.java", "BodyUseAPI": [], "Fixed commit": "9fccb3f200e8317a7b622ffeae1203305405ab03", "Url": "https://api.github.com/repos/matrix-org/matrix-android-sdk", "Date": "2016-01-22T08:57:32Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node.hasProperty(VdbLexicon.DataRole.MAPPED_ROLE_NAMES)) { javax.jcr.Property property = node.getProperty(VdbLexicon.DataRole.MAPPED_ROLE_NAMES); javax.jcr.Value[] mappedRoleValues = property.getValues(); for (javax.jcr.Value value : mappedRoleValues) { writeTab(org.komodo.modeshape.visitor.VdbNodeVisitor.ElementTabValue.MAPPED_ROLE_NAME); writeElementWithText(VdbLexicon.ManifestIds.MAPPED_ROLE_NAME, value.getString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6152/buggy-version/komodo-modeshape-vdb.src.main.java.org.komodo.modeshape.visitor.VdbNodeVisitor.java", "BodyUseAPI": ["javax.jcr.Node.getProperty(VdbLexicon.DataRole.MAPPED_ROLE_NAMES)"], "Fixed commit": "47cadfddefcd14a3fe22f1d2888a3ff384d8a9d1", "Url": "https://api.github.com/repos/Teiid-Designer/komodo", "Date": "2017-07-21T17:13:25Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reloading_) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7290/buggy-version/src.gwt.src.org.rstudio.studio.client.application.ui.appended.ApplicationEndedPopupPanel.java", "BodyUseAPI": [], "Fixed commit": "0b427f716330dfd8b983ef4aef01c4e80d0143dd", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2017-08-04T18:44:00Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (v != null) { buffer.append(((v.toString()) + \",\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4833/buggy-version/microbat.src.main.microbat.util.JavaUtil.java", "BodyUseAPI": ["java.lang.StringBuffer.append(java.lang.String)", "com.sun.jdi.Value.toString()"], "Fixed commit": "33934130e841c3d5b90f738884ecde895c51864d", "Url": "https://api.github.com/repos/sunjun-group/Ziyuan", "Date": "2016-04-21T12:24:05Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((node.getObject()) != null) && (!(org.talend.repository.ProjectManager.getInstance().isInCurrentMainProject(node.getObject().getProperty())))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3355/buggy-version/main.plugins.org.talend.repository.src.main.java.org.talend.repository.preference.MavenDeploymentConfigurationProjectSettingPage.java", "BodyUseAPI": [], "Fixed commit": "dd599ecba8b38204546c15ade20b2cb33948392b", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2017-12-08T07:45:25Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isTaskRoot())) { finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6371/buggy-version/xabber.src.main.java.com.xabber.android.ui.activity.ContactListActivity.java", "BodyUseAPI": [], "Fixed commit": "68d765a0e01531ed65fc3b6ee3651d3515bebb13", "Url": "https://api.github.com/repos/casperklein/xabber-android", "Date": "2017-06-19T06:31:49Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.shopbilling.services.AppLicenseServices.getAppSecurityData()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (lastRun != null) { java.util.Date prevDate = com.shopbilling.services.AppLicenseServices.sdf.parse(lastRun); if ((currentTime.compareTo(prevDate)) < 0) { isSystemDateChanged = true; } }else { com.shopbilling.services.AppLicenseServices.logger.error(\"## Configuration Missing ## :: Database Entry Missing for APP_SECURITY_DATA\"); isSystemDateChanged = true; return isSystemDateChanged; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1408/buggy-version/src.com.shopbilling.services.AppLicenseServices.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "af5e77b4e9f477edbe8666a435d1746fc5a9d385", "Url": "https://api.github.com/repos/kumbharvish/MysStore-Base", "Date": "2017-12-21T17:11:10Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (commentStr != null) { commentStr = commentStr.toLowerCase(); if (commentStr.contains(mSearchString)) { searchComments.add(comment); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2415/buggy-version/src.main.java.org.quantumbadger.redreader.adapters.CommentListingManager.java", "BodyUseAPI": ["java.lang.String.toLowerCase()"], "Fixed commit": "188572d8f494380a722747e26297abea26c5d36a", "Url": "https://api.github.com/repos/cpalasanu/RedReader", "Date": "2016-07-24T17:32:46Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.datamodel.ThumbnailsCacheManager.getBitmapFromDiskCache(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (thumbnail == null) { thumbnail = com.owncloud.android.datamodel.ThumbnailsCacheManager.mDefaultImg; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2919/buggy-version/src.com.owncloud.android.ui.adapter.FileListListAdapter.java", "BodyUseAPI": [], "Fixed commit": "d7de54a6a51cdad174c4461f8b5e3279910d433c", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2014-10-16T14:13:17Z"},
{"Line": "=>2541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rv) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8822/buggy-version/src.com.dyz.gameserver.logic.PlayCardsLogic.java", "BodyUseAPI": [], "Fixed commit": "d00e8c262fb32316d6a7fb6368b9637c6e1dc855", "Url": "https://api.github.com/repos/XihuLai/GS", "Date": "2017-01-07T15:37:45Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((core.DummyContent.ListeMeetingDirectory) != null) { for (java.lang.String meeting : core.DummyContent.ListeMeetingDirectory) { core.DummyContent.addItem(new core.DummyContent.DummyItem(meeting)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7426/buggy-version/MM-Project.src.core.DummyContent.java", "BodyUseAPI": [], "Fixed commit": "891f204a5aeb03c19141afe408d94d9537289b27", "Url": "https://api.github.com/repos/i-togui/TX", "Date": "2014-03-05T08:44:06Z"},
{"Line": "=>915", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (meeting_folder.canRead()) { for (java.io.File inFile : meeting_folder.listFiles()) { if (inFile.isDirectory()) { meetingsId.add(inFile.getName()); } } return meetingsId; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7426/buggy-version/MM-Project.src.core.Meeting.java", "BodyUseAPI": ["java.io.File.listFiles()"], "Fixed commit": "891f204a5aeb03c19141afe408d94d9537289b27", "Url": "https://api.github.com/repos/i-togui/TX", "Date": "2014-03-05T08:44:06Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((currentDate.getTime()) - (aloksharma.ufl.edu.stash.HomeActivity.stashInitializationDate.getTime())) / 86400000) == 0) { aloksharma.ufl.edu.stash.HomeActivity.timeGoalsProgressBar = ((float) (1)) / (((aloksharma.ufl.edu.stash.HomeActivity.stashTargetDate.getTime()) - (aloksharma.ufl.edu.stash.HomeActivity.stashInitializationDate.getTime())) / 86400000); aloksharma.ufl.edu.stash.HomeActivity.timeGoalsPercentage = (java.lang.String.valueOf(((java.lang.Math.round((1 * 100))) / (((aloksharma.ufl.edu.stash.HomeActivity.stashTargetDate.getTime()) - (aloksharma.ufl.edu.stash.HomeActivity.stashInitializationDate.getTime())) / 86400000)))) + \"%\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3217/buggy-version/app.src.main.java.aloksharma.ufl.edu.stash.HomeActivity.java", "BodyUseAPI": ["java.lang.String.valueOf(long)", "java.util.Date.getTime()", "java.util.Date.getTime()"], "Fixed commit": "82ffc3028554e6b650b702bbe81b137a866264ec", "Url": "https://api.github.com/repos/Alok-Sharma/Stash", "Date": "2015-11-16T02:53:40Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getInventory().contains(\"Gold amulet (u)\")) { getBank().deposit(\"Gold amulet (u)\", 27); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5513/buggy-version/GoldNecklace.main.java", "BodyUseAPI": [], "Fixed commit": "a3414934c7459fed0d208bc2d19b1a3eb3b4ec08", "Url": "https://api.github.com/repos/rjesquivias/Scripts", "Date": "2017-03-10T08:32:05Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((pos < ((mBufferStartPosition) + length)) && (pos >= (mBufferStartPosition)))) { mBufferStartPosition = (((int) (pos)) / length) * length; mCurrentBuffer = readRemoteByteBuffer(mBlockInfo, mBufferStartPosition, length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2735/buggy-version/src.main.java.tachyon.client.RemoteBlockInStream.java", "BodyUseAPI": ["tachyon.client.RemoteBlockInStream.readRemoteByteBuffer(tachyon.thrift.ClientBlockInfo,long,long)"], "Fixed commit": "8fc8b2d2fa2237c5679fe9c5122cf6c54e4a1235", "Url": "https://api.github.com/repos/anuragkh/tachyon", "Date": "2014-01-28T01:44:29Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(_points.containsKey(vertex))) { final java.awt.Point point = createPoint(vertex, x, false); _points.put(vertex, point); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/902/buggy-version/desktop.ui.src.main.java.org.datacleaner.widgets.visualization.JobGraphLayoutTransformer.java", "BodyUseAPI": ["java.util.Map<java.lang.Object, java.awt.Point>.put(java.lang.Object,java.awt.Point)", "org.datacleaner.widgets.visualization.JobGraphLayoutTransformer.createPoint(java.lang.Object,int,boolean)"], "Fixed commit": "7fffdac13eca98fe562b1f3565381daf07d05d4f", "Url": "https://api.github.com/repos/datacleaner/DataCleaner", "Date": "2015-03-17T10:34:00Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (foldTime <= 0) return 0.0F;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2969/buggy-version/src.com.mishiranu.dashchan.widget.PullableWrapper.java", "BodyUseAPI": [], "Fixed commit": "d399355436601e64781ec50b9b3ceaaba36d4a6b", "Url": "https://api.github.com/repos/Mishiranu/Dashchan", "Date": "2016-09-26T13:02:14Z"},
{"Line": "=>768", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (foldTime <= 0) return 0.0F;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2969/buggy-version/src.com.mishiranu.dashchan.widget.PullableWrapper.java", "BodyUseAPI": [], "Fixed commit": "d399355436601e64781ec50b9b3ceaaba36d4a6b", "Url": "https://api.github.com/repos/Mishiranu/Dashchan", "Date": "2016-09-26T13:02:14Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["abner.Tagger.getEntities(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((entities[1].length) > 0) { if (entities[1][0].equals(\"PROTEIN\")) { tag = entities[1][0]; }else { tag = \"GENE\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8730/buggy-version/src.main.java.edu.cmu.lti.deiis.project.annotator.AbnerAnnotator.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "6d2558d39e56d584fcf07a36267a02c8a3505f0d", "Url": "https://api.github.com/repos/11791-01/project-team01", "Date": "2014-11-30T00:58:01Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.settingsContainer.init())) { getLog().finer(\"Settings disabled.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1898/buggy-version/commons-bukkit.src.main.java.com.supaham.commons.bukkit.SimpleCommonPlugin.java", "BodyUseAPI": [], "Fixed commit": "c5d5eb25008c2aedeafa9a84a618b4dfd9940bdf", "Url": "https://api.github.com/repos/SupaHam/SupaCommons", "Date": "2016-05-02T21:22:29Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEnabled())) { throw new java.lang.IllegalStateException(\"Settings not enabled.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1898/buggy-version/commons-bukkit.src.main.java.com.supaham.commons.bukkit.SimpleCommonPlugin.java", "BodyUseAPI": [], "Fixed commit": "c5d5eb25008c2aedeafa9a84a618b4dfd9940bdf", "Url": "https://api.github.com/repos/SupaHam/SupaCommons", "Date": "2016-05-02T21:22:29Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEnabled())) { throw new java.lang.IllegalStateException(\"Settings not enabled.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1898/buggy-version/commons-bukkit.src.main.java.com.supaham.commons.bukkit.SimpleCommonPlugin.java", "BodyUseAPI": [], "Fixed commit": "c5d5eb25008c2aedeafa9a84a618b4dfd9940bdf", "Url": "https://api.github.com/repos/SupaHam/SupaCommons", "Date": "2016-05-02T21:22:29Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEnabled())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1898/buggy-version/commons-bukkit.src.main.java.com.supaham.commons.bukkit.SimpleCommonPlugin.java", "BodyUseAPI": [], "Fixed commit": "c5d5eb25008c2aedeafa9a84a618b4dfd9940bdf", "Url": "https://api.github.com/repos/SupaHam/SupaCommons", "Date": "2016-05-02T21:22:29Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((thejavapowder.TheJavaPowder.var.state) == 0) { thejavapowder.TheJavaPowder.var.Drawing = true; if ((e.getModifiersEx()) == (java.awt.event.InputEvent.BUTTON1_DOWN_MASK)) { thejavapowder.TheJavaPowder.var.leftClick = true; }else if ((e.getModifiersEx()) == (java.awt.event.InputEvent.BUTTON3_DOWN_MASK)) { thejavapowder.TheJavaPowder.var.leftClick = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8767/buggy-version/src.thejavapowder.TheJavaPowder.java", "BodyUseAPI": [], "Fixed commit": "32fb2e917153eb5b4773797f0ca2d60b0ee03b8a", "Url": "https://api.github.com/repos/JavaPowder/TheJavaPowder", "Date": "2011-11-21T00:58:11Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jetbrains.jetpad.vclang.parser.BuildVisitor.visitDefinition(ctx.definition())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (definition instanceof com.jetbrains.jetpad.vclang.term.Concrete.DataDefinition) { for (com.jetbrains.jetpad.vclang.term.Concrete.Constructor constructor : ((com.jetbrains.jetpad.vclang.term.Concrete.DataDefinition) (definition)).getConstructors()) { constructor.setParentStatement(statement); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2243/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.parser.BuildVisitor.java", "BodyUseAPI": [], "Fixed commit": "fb28afe0c8f35f21921d8fae13646db1cc73e005", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2015-11-05T14:58:45Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((self.inner().failoverPolicies()) != null) { self.inner().failoverPolicies().clear(); self.inner().failoverPolicies().addAll(self.failoverPolicies); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4531/buggy-version/azure-mgmt-documentdb.src.main.java.com.microsoft.azure.management.documentdb.implementation.DatabaseAccountImpl.java", "BodyUseAPI": ["com.microsoft.azure.management.documentdb.implementation.DatabaseAccountImpl.inner()", "com.microsoft.azure.management.documentdb.implementation.DatabaseAccountImpl.inner()", "self.inner().failoverPolicies().clear()", "self.inner().failoverPolicies()", "self.inner().failoverPolicies()", "self.inner().failoverPolicies().addAll(java.util.List<com.microsoft.azure.management.documentdb.implementation.FailoverPolicyInner>)"], "Fixed commit": "6db9502e8e184f25d823670a3f6282a728981ea6", "Url": "https://api.github.com/repos/lenala/azure-sdk-for-java", "Date": "2017-05-26T07:01:03Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cluster.manager.preparedQueries.containsKey(bs.statement.getPreparedId().id)) { return new com.datastax.driver.core.Requests.Execute(bs.statement.getPreparedId().id, options); }else { throw new com.datastax.driver.core.exceptions.InvalidQueryException(java.lang.String.format((\"Tried to execute unknown prepared query : %s. \" + \"You may have used a PreparedStatement that was created with another Cluster instance.\"), bs.statement.getPreparedId().id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6369/buggy-version/driver-core.src.main.java.com.datastax.driver.core.SessionManager.java", "BodyUseAPI": ["bs.statement.getPreparedId()", "bs.statement.getPreparedId()", "java.lang.String.format(java.lang.String,bs.statement.getPreparedId().id)"], "Fixed commit": "6576d36259f3f99ed7969d698fbdfb343fc28e37", "Url": "https://api.github.com/repos/newkek/java-driver", "Date": "2015-03-10T11:26:41Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((curr.next) == null) { lastNodeFunction.accept(curr); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/487/buggy-version/java.linkedlist.LinkedList.java", "BodyUseAPI": ["java.util.function.Consumer<LinkedList<T>.Node>.accept(LinkedList<T>.Node)"], "Fixed commit": "d675199725422555e9f2e4d409717c31f56ce88c", "Url": "https://api.github.com/repos/kva1966/random-code", "Date": "2016-06-10T11:42:29Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xcolab.view.pages.proposals.view.ProposalEvaluationTabController.getProposalPromotionCommentRating(org.xcolab.client.proposals.pojo.Proposal,org.xcolab.client.contest.pojo.phases.ContestPhase,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (proposalRating != null) { proposalRatings.add(proposalRating); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5509/buggy-version/view.src.main.java.org.xcolab.view.pages.proposals.view.ProposalEvaluationTabController.java", "BodyUseAPI": ["java.util.List<org.xcolab.client.proposals.pojo.proposals.ProposalRatings>.add(org.xcolab.client.proposals.pojo.proposals.ProposalRatings)"], "Fixed commit": "e99dc95127ff949f84a911d248f0eae284a1b513", "Url": "https://api.github.com/repos/CCI-MIT/XCoLab", "Date": "2017-02-02T12:52:33Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getNextSibling()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (elseStmt == null) { isTerminated = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3521/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck.java", "BodyUseAPI": [], "Fixed commit": "5c3bb950f680bc11de7307b4d0e93d05698065c2", "Url": "https://api.github.com/repos/MEZk/checkstyle", "Date": "2015-07-18T09:10:35Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["no.runsafe.framework.api.IWorld.getEntityById(entity.getEntityId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (wolf == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6539/buggy-version/src.no.runsafe.wolfhunt.TrackingEngine.java", "BodyUseAPI": [], "Fixed commit": "f220fa2f21c47fbefe6cbcfcb4b9a77b56a7d606", "Url": "https://api.github.com/repos/Runsafe/WolfHunt", "Date": "2014-10-22T19:28:05Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["no.runsafe.framework.minecraft.entity.RunsafeEntity.getWorld()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (world == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6539/buggy-version/src.no.runsafe.wolfhunt.TrackingEngine.java", "BodyUseAPI": [], "Fixed commit": "f220fa2f21c47fbefe6cbcfcb4b9a77b56a7d606", "Url": "https://api.github.com/repos/Runsafe/WolfHunt", "Date": "2014-10-22T19:28:05Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == 1) { updateCountry(); android.util.Log.i(\"hej\", \"update country\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2992/buggy-version/app.src.main.java.com.example.fredrik.mobilelab.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "984fd917770bb91508bd5dd32f22243179975628", "Url": "https://api.github.com/repos/SwedFred/MobileLab", "Date": "2017-12-05T12:51:40Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((restresource.RestResource.requestListeners) != null) for (restresource.RequestListener l : restresource.RestResource.requestListeners) l.requestMade(method, path, params);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1114/buggy-version/src.main.java.restresource.RestResource.java", "BodyUseAPI": [], "Fixed commit": "728777e085136bfde86b12068898a0f2f8e8f4d0", "Url": "https://api.github.com/repos/nerde/rest-resource", "Date": "2014-01-16T12:52:06Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jp.getCurrentToken()) == (org.codehaus.jackson.JsonToken.START_ARRAY)) { jp.nextToken(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/748/buggy-version/extensions.bundles.opendaylight.vtn.src.main.java.org.opennaas.extensions.opendaylight.vtn.protocol.client.serializers.json.deserialize.vBridgeInterfacesWrapperJSONDeserializer.java", "BodyUseAPI": ["org.codehaus.jackson.JsonParser.nextToken()"], "Fixed commit": "a4450cf83c8a2319da49662fa315770836d7e56e", "Url": "https://api.github.com/repos/dana-i2cat/opennaas-routing-nfv", "Date": "2014-04-14T15:10:50Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jp.getCurrentToken()) == (org.codehaus.jackson.JsonToken.START_ARRAY)) { jp.nextToken(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/748/buggy-version/extensions.bundles.opendaylight.vtn.src.main.java.org.opennaas.extensions.opendaylight.vtn.protocol.client.serializers.json.deserialize.vLinksWrapperJSONDeserializer.java", "BodyUseAPI": ["org.codehaus.jackson.JsonParser.nextToken()"], "Fixed commit": "a4450cf83c8a2319da49662fa315770836d7e56e", "Url": "https://api.github.com/repos/dana-i2cat/opennaas-routing-nfv", "Date": "2014-04-14T15:10:50Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jp.getCurrentToken()) == (org.codehaus.jackson.JsonToken.START_ARRAY)) { jp.nextToken(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/748/buggy-version/extensions.bundles.opendaylight.vtn.src.main.java.org.opennaas.extensions.opendaylight.vtn.protocol.client.serializers.json.deserialize.LogicalPortsWrapperJSONDeserializer.java", "BodyUseAPI": ["org.codehaus.jackson.JsonParser.nextToken()"], "Fixed commit": "a4450cf83c8a2319da49662fa315770836d7e56e", "Url": "https://api.github.com/repos/dana-i2cat/opennaas-routing-nfv", "Date": "2014-04-14T15:10:50Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jp.getCurrentToken()) == (org.codehaus.jackson.JsonToken.START_ARRAY)) { jp.nextToken(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/748/buggy-version/extensions.bundles.opendaylight.vtn.src.main.java.org.opennaas.extensions.opendaylight.vtn.protocol.client.serializers.json.deserialize.BoundaryWrapperJSONDeserializer.java", "BodyUseAPI": ["org.codehaus.jackson.JsonParser.nextToken()"], "Fixed commit": "a4450cf83c8a2319da49662fa315770836d7e56e", "Url": "https://api.github.com/repos/dana-i2cat/opennaas-routing-nfv", "Date": "2014-04-14T15:10:50Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!foundOpponentChecker) { java.lang.String gameOverMessage = ((event.getPlayerNum()) == (Checker.BLACK)) ? \"Black wins!\" : \"Red wins!\"; return new models.metabg.Result(models.metabg.Result.ResultType.GAME_OVER, gameOverMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2980/buggy-version/app.models.checkers.CheckersLogic.java", "BodyUseAPI": [], "Fixed commit": "7def8a214cfb85787a4e5a8ae2cab536422018ea", "Url": "https://api.github.com/repos/etaub47/metabg", "Date": "2014-07-04T21:08:57Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.wsf.spi.metadata.j2ee.serviceref.UnifiedHandlerChainsMetaDataParser.parse(java.io.InputStream)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (handlerChainsUMDM != null) { for (final org.jboss.wsf.spi.metadata.j2ee.serviceref.UnifiedHandlerChainMetaData handlerChainUMDM : handlerChainsUMDM.getHandlerChains()) { for (final org.jboss.wsf.spi.metadata.j2ee.serviceref.UnifiedHandlerMetaData handlerUMDM : handlerChainUMDM.getHandlers()) { retVal.add(handlerUMDM.getHandlerClass()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2527/buggy-version/webservices.server-integration.src.main.java.org.jboss.as.webservices.injection.WSHandlerChainAnnotationProcessor.java", "BodyUseAPI": ["org.jboss.wsf.spi.metadata.j2ee.serviceref.UnifiedHandlerChainsMetaData.getHandlerChains()"], "Fixed commit": "3848fd274614418d17211d6e65160d841b8a364a", "Url": "https://api.github.com/repos/wildfly/wildfly", "Date": "2013-09-04T11:35:23Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Enumeration<? extends java.util.zip.ZipEntry>.nextElement()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(entry.isDirectory())) { try (java.io.BufferedInputStream is = new java.io.BufferedInputStream(zip.getInputStream(entry));java.io.FileOutputStream fos = new java.io.FileOutputStream(destFile);java.io.BufferedOutputStream dest = new java.io.BufferedOutputStream(fos, com.freedomotic.util.Unzip.BUFFER)) { int currentByte; byte[] data = new byte[com.freedomotic.util.Unzip.BUFFER]; while ((currentByte = is.read(data, 0, com.freedomotic.util.Unzip.BUFFER)) != (-1)) { dest.write(data, 0, currentByte); } } catch (java.io.IOException ex) { com.freedomotic.util.Unzip.LOG.error(com.freedomotic.app.Freedomotic.getStackTraceInfo(ex)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/810/buggy-version/framework.freedomotic-core.src.main.java.com.freedomotic.util.Unzip.java", "BodyUseAPI": ["java.util.zip.ZipFile.getInputStream(java.util.zip.ZipEntry)"], "Fixed commit": "e479fcea244dc24ea1712703c104b89e8c0a8b95", "Url": "https://api.github.com/repos/mcicolella/freedomotic", "Date": "2017-08-11T16:13:46Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tfName.getText().compareTo(\"\")) != 0) { this.setVisible(false); }else { javax.swing.JOptionPane.showMessageDialog(null, \"Bitte Daten vollst\ufffdndig ausf\ufffdllen.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6771/buggy-version/BlueHotel.src.blue.hotel.gui.RoomEditor.java", "BodyUseAPI": [], "Fixed commit": "67b00aa8f43e7f7c38aa7729be921614bc91e149", "Url": "https://api.github.com/repos/wi3sl/sese", "Date": "2011-11-29T11:37:48Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((trackPos) != 0) changeTrack((--(trackPos))); else changeTrack(tracks.size());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3364/buggy-version/app.src.main.java.eduydtak.umich.www_personal.spotifystreamer.StreamMusicActivity.java", "BodyUseAPI": [], "Fixed commit": "c8c7f87f2cf62d7f1f1db10846fffe2c13d41afa", "Url": "https://api.github.com/repos/ydtak/Nanodegree_SpotifyStreamer", "Date": "2015-06-16T14:58:47Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((trackPos) < (tracks.size())) changeTrack((++(trackPos))); else changeTrack(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3364/buggy-version/app.src.main.java.eduydtak.umich.www_personal.spotifystreamer.StreamMusicActivity.java", "BodyUseAPI": [], "Fixed commit": "c8c7f87f2cf62d7f1f1db10846fffe2c13d41afa", "Url": "https://api.github.com/repos/ydtak/Nanodegree_SpotifyStreamer", "Date": "2015-06-16T14:58:47Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((trackPos) != 0) changeTrack((--(trackPos))); else changeTrack(tracks.size());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3364/buggy-version/app.src.main.java.eduydtak.umich.www_personal.spotifystreamer.StreamMusicDialog.java", "BodyUseAPI": [], "Fixed commit": "c8c7f87f2cf62d7f1f1db10846fffe2c13d41afa", "Url": "https://api.github.com/repos/ydtak/Nanodegree_SpotifyStreamer", "Date": "2015-06-16T14:58:47Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((trackPos) < (tracks.size())) changeTrack((++(trackPos))); else changeTrack(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3364/buggy-version/app.src.main.java.eduydtak.umich.www_personal.spotifystreamer.StreamMusicDialog.java", "BodyUseAPI": [], "Fixed commit": "c8c7f87f2cf62d7f1f1db10846fffe2c13d41afa", "Url": "https://api.github.com/repos/ydtak/Nanodegree_SpotifyStreamer", "Date": "2015-06-16T14:58:47Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(java.nio.file.Files.isDirectory(extracted.getParent()))) { java.nio.file.Files.createDirectory(extracted.getParent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4781/buggy-version/src.main.java.me.nallar.modpatcher.LaunchClassLoaderUtil.java", "BodyUseAPI": ["java.nio.file.Files.createDirectory(java.nio.file.Path)", "java.nio.file.Path.getParent()"], "Fixed commit": "e0bea1c9a46e7cbb497abfe4b4293ef70d45170f", "Url": "https://api.github.com/repos/MinimallyCorrect/ModPatcher", "Date": "2017-05-08T00:24:55Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((channel) != null) { channel.addShutdownListener(this); notifyOnOpen(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4376/buggy-version/src.main.java.org.jenkinsci.plugins.rabbitmqconsumer.channels.AbstractRMQChannel.java", "BodyUseAPI": [], "Fixed commit": "7e123ac357a11b0df0d7a20218d3eb0e7dc6ff0e", "Url": "https://api.github.com/repos/jenkinsci/rabbitmq-consumer-plugin", "Date": "2013-08-21T11:07:54Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (pageToRedirect != null) { externalContext.setResponseStatus(HttpServletResponse.SC_MOVED_TEMPORARILY); externalContext.redirect((contextPath + pageToRedirect)); }else { externalContext.responseSendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, \"Unknown Error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/617/buggy-version/src.main.java.org.jboss.planet.util.ExceptionHandler.java", "BodyUseAPI": ["javax.faces.context.ExternalContext.redirect(java.lang.String)"], "Fixed commit": "41b2d03259dc0ec0e5560612a1567462a2b3b05d", "Url": "https://api.github.com/repos/jbossorg/borg", "Date": "2014-04-01T09:47:03Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (datastoreConnection.getDatastore().getPerformanceCharacteristics().isQueryOptimizationPreferred()) { query.getSelectClause().setDistinct(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8797/buggy-version/engine.core.src.main.java.org.datacleaner.reference.DatastoreDictionary.java", "BodyUseAPI": [], "Fixed commit": "865fc9ae7a216b4b5d1d70831a806ce4b1d99aa7", "Url": "https://api.github.com/repos/datacleaner/DataCleaner", "Date": "2015-12-22T08:38:41Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (attribs != null) this.attribs = attribs;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1994/buggy-version/src.main.java.uk.co.badgerr.trac.AttribContainer.java", "BodyUseAPI": [], "Fixed commit": "18b67c75b5618fe49f21dfc4786929a07b51ec31", "Url": "https://api.github.com/repos/jfemia/trac-rpc", "Date": "2017-02-05T19:50:21Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.attribs.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((b == null) || (!b)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1994/buggy-version/src.main.java.uk.co.badgerr.trac.Milestone.java", "BodyUseAPI": [], "Fixed commit": "18b67c75b5618fe49f21dfc4786929a07b51ec31", "Url": "https://api.github.com/repos/jfemia/trac-rpc", "Date": "2017-02-05T19:50:21Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["beast.core.parameter.RealParameter.getValue(int)", "beast.core.parameter.RealParameter.getValue(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (N1 != N0) return ((N0 * (java.lang.Math.exp((((N1 - N0) / (t1 - t0)) * (x - (intensities[interval])))))) - a) / b; else return (groupBoundaries[interval]) + (N0 * (x - (intensities[interval])));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3322/buggy-version/src.bacter.model.pop.SkylinePopulationFunction.java", "BodyUseAPI": ["java.lang.Math.exp(double)"], "Fixed commit": "336b35f467fece7623061b06b306382ed5884817", "Url": "https://api.github.com/repos/tgvaughan/bacter", "Date": "2015-04-28T05:16:53Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(popSizes.getValue((i - 1)).equals(popSizes.getValue(i)))) intensities[i] = (intensities[(i - 1)]) + ((((groupBoundaries[i]) - (groupBoundaries[(i - 1)])) / ((popSizes.getValue(i)) - (popSizes.getValue((i - 1))))) * (java.lang.Math.log(((popSizes.getValue(i)) / (popSizes.getValue((i - 1))))))); else intensities[i] = (intensities[(i - 1)]) + (((groupBoundaries[i]) - (groupBoundaries[(i - 1)])) / (popSizes.getValue((i - 1))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3322/buggy-version/src.bacter.model.pop.SkylinePopulationFunction.java", "BodyUseAPI": ["beast.core.parameter.RealParameter.getValue(int)", "java.lang.Math.log(((popSizes.getValue(i)) / (popSizes.getValue((i - 1)))))", "beast.core.parameter.RealParameter.getValue(int)", "beast.core.parameter.RealParameter.getValue(int)", "beast.core.parameter.RealParameter.getValue(int)", "beast.core.parameter.RealParameter.getValue(int)"], "Fixed commit": "336b35f467fece7623061b06b306382ed5884817", "Url": "https://api.github.com/repos/tgvaughan/bacter", "Date": "2015-04-28T05:16:53Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["beast.core.parameter.RealParameter.getValue(int)", "beast.core.parameter.RealParameter.getValue(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (N1 != N0) return (intensities[interval]) + (((t1 - t0) / (N1 - N0)) * (java.lang.Math.log((N / N0)))); else return (intensities[interval]) + ((t - t0) / N0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3322/buggy-version/src.bacter.model.pop.SkylinePopulationFunction.java", "BodyUseAPI": ["java.lang.Math.log(double)"], "Fixed commit": "336b35f467fece7623061b06b306382ed5884817", "Url": "https://api.github.com/repos/tgvaughan/bacter", "Date": "2015-04-28T05:16:53Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lineItem.getUnitPrice()) == null) { orderData.setUnitPriceHT(java.lang.Double.valueOf(0)); }else { orderData.setUnitPriceHT(lineItem.getUnitPrice()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/101/buggy-version/src.main.java.fr.sremi.services.OrderService.java", "BodyUseAPI": ["fr.sremi.model.LineItem.getUnitPrice()", "fr.sremi.data.OrderDetailData.setUnitPriceHT(lineItem.getUnitPrice())"], "Fixed commit": "481c0395d51829ae6e445361ffa75e5dcfcd2200", "Url": "https://api.github.com/repos/fgallois/SREMI-GPAO", "Date": "2015-12-20T20:43:46Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.element.isJsonPrimitive()) { string = result.element.getAsString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3154/buggy-version/library.src.main.java.com.flipkart.layoutengine.builder.DataParsingLayoutBuilder.java", "BodyUseAPI": ["result.element.getAsString()"], "Fixed commit": "d25239c46d12c530fa1744d1c1b2f0d74ad0671e", "Url": "https://api.github.com/repos/flipkart-incubator/proteus", "Date": "2017-07-31T18:54:17Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inputTable.getColumnCount()) != (outputTableSchema.getColumns().size())) { java.lang.System.out.println(outputTableSchema.getColumns().size()); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4199/buggy-version/src.frontend.org.voltdb.sysprocs.saverestore.SavedTableConverter.java", "BodyUseAPI": ["outputTableSchema.getColumns().size()", "java.io.PrintStream.println(outputTableSchema.getColumns().size())", "org.voltdb.catalog.Table.getColumns()"], "Fixed commit": "5fa66cc7a23bd96e1b06db306f077579604837b8", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2011-11-17T23:02:25Z"},
{"Line": "=>1301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.elmakers.mine.bukkit.spell.BaseSpell.getEyeLocation()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((mage) == null) || (source == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8734/buggy-version/src.main.java.com.elmakers.mine.bukkit.spell.BaseSpell.java", "BodyUseAPI": [], "Fixed commit": "e1d4e075ab4e2a756aa5ac2bc6cb3afbcccf843b", "Url": "https://api.github.com/repos/elBukkit/MagicLib", "Date": "2016-02-01T03:28:26Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listener) != null) listener.dbEvent(fileName, Message.GET);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8082/buggy-version/src.distributed_fs.client.DFSService.java", "BodyUseAPI": [], "Fixed commit": "92dfeda5b68c9caa3316316135d5c3d38b23dc82", "Url": "https://api.github.com/repos/sceccotti89/Distributed-File-System", "Date": "2016-05-11T20:42:11Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileInformation == null) { fileInformation = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8831/buggy-version/src.main.java.org.waarp.openr66.protocol.localhandler.packet.json.TransferRequestJsonPacket.java", "BodyUseAPI": [], "Fixed commit": "99078374cc6a2d367801170a84f4194d92e8e91c", "Url": "https://api.github.com/repos/marakiis/WaarpR66", "Date": "2017-03-24T17:46:47Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sectionBuilder.toString().isEmpty())) { sectionBuilder.append(\"|\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/687/buggy-version/app.src.main.java.com.abigailmathews.take5.MainActivity.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "d6d0cf7bb0b04c2914adfc40a95f0fcef4c79401", "Url": "https://api.github.com/repos/AbigailMathews/take5", "Date": "2017-06-06T19:13:20Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.waarp.common.utility.SystemPropertyUtil.isFileEncodingCorrect())) { java.lang.System.err.println(((\"Issue while trying to set UTF-8 as default file encoding: use -Dfile.encoding=UTF-8 as java command argument\\n\" + \"Currently file.encoding is: \") + (org.waarp.common.utility.SystemPropertyUtil.get(SystemPropertyUtil.FILE_ENCODING)))); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2817/buggy-version/src.main.java.org.waarp.uip.WaarpPassword.java", "BodyUseAPI": [], "Fixed commit": "a0d9a8625f1081219c8398979f6e4990bc334a9c", "Url": "https://api.github.com/repos/fredericBregier/WaarpPassword", "Date": "2015-05-07T21:03:47Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(playedCards.isEmpty())) { if (((playedCards.get(0).getValue()) != 2) && (!((playedCards.size()) == 4))) { if (!(playedCards.isEmpty())) { int k = 30; for (int i = 0; i < (playedCards.size()); i++) g.drawImage(cardImages[(3 - (playedCards.get(i).getSuit()))][((playedCards.get(i).getValue()) - 2)], (((PresidentPanel.PILEX) + (k * i)) - ((playedCards.size()) * 8)), PresidentPanel.PILEY, ((PresidentPanel.WIDTH) / 2), ((PresidentPanel.HEIGHT) / 2), null); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/950/buggy-version/PresidentPanel.java", "BodyUseAPI": ["playedCards.get(i).getValue()", "java.util.ArrayList<Card>.size()", "java.util.ArrayList<Card>.get(int)", "java.util.ArrayList<Card>.size()", "java.util.ArrayList<Card>.get(int)", "java.util.ArrayList<Card>.size()", "java.util.ArrayList<Card>.get(int)", "java.util.ArrayList<Card>.isEmpty()", "playedCards.get(i).getSuit()", "playedCards.get(0).getValue()", "java.awt.Graphics.drawImage(java.awt.image.BufferedImage,(((PresidentPanel.PILEX) + (k * i)) - ((playedCards.size()) * 8)),int,int,int,<nulltype>)"], "Fixed commit": "5c8c92b40c6148b565559e9f19d7ad98b70b4230", "Url": "https://api.github.com/repos/ypatel38/President", "Date": "2017-05-28T00:27:38Z"},
{"Line": "=>510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (overwriteX) { for (int i = 0; i < (_ncolX); i++) xvecs[i] = fr.vec(hex.glrm.GLRM.idx_xnew(i, _ncolA, _ncolX)); }else { for (int i = 0; i < (_ncolX); i++) xvecs[i] = fr.vec(hex.glrm.GLRM.idx_xold(i, _ncolA)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7145/buggy-version/h2o-algos.src.main.java.hex.glrm.GLRM.java", "BodyUseAPI": [], "Fixed commit": "a3949135fe169339b2817bcef63d5685950c2dc0", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-07-13T21:17:52Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentUsername) != null) { xapiAgent = com.ustadmobile.nanolrs.core.endpoints.XapiAgentEndpoint.createOrUpdate(context, null, currentUsername, com.ustadmobile.core.util.UMTinCanUtil.getXapiServer(context)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4209/buggy-version/app-android.src.main.java.com.ustadmobile.port.android.impl.UstadMobileSystemImplAndroid.java", "BodyUseAPI": [], "Fixed commit": "c3d357cc80fd2dc9419e6e77fedd9c59e1ddc42a", "Url": "https://api.github.com/repos/UstadMobile/UstadMobile", "Date": "2017-07-25T15:28:21Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jasonlib.Json.getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rank == 1) { return match == 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3425/buggy-version/src.hanabi.HanabiServer.java", "BodyUseAPI": [], "Fixed commit": "081408bd82ce0a7616d3c29285d0e4d3312edfa4", "Url": "https://api.github.com/repos/mirraj2/Hanabi", "Date": "2014-08-25T02:38:02Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.ObjectInputStream.readObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tempMessageObject instanceof de.gebit.integrity.remoting.transport.messages.ShutdownRequestMessage) { disconnectRequested = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/931/buggy-version/de.gebit.integrity.remoting.src.de.gebit.integrity.remoting.transport.Endpoint.java", "BodyUseAPI": [], "Fixed commit": "142742764cf88776d6aec488f62fa1718f957384", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2016-11-09T13:10:17Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tempList.size()) == 1) { tempKeyValueMap.put(tempDescriptor.getName(), tempList.get(0)); }else { tempKeyValueMap.put(tempDescriptor.getName(), tempList.toArray()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/931/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.parameter.conversion.conversions.java.other.ObjectToMap.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object)", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object[])", "java.util.List<java.lang.Object>.toArray()", "java.util.List<java.lang.Object>.get(int)"], "Fixed commit": "142742764cf88776d6aec488f62fa1718f957384", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2016-11-09T13:10:17Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((count < 0) || (count > (getMaxItemUseDuration(stack)))) player.stopUsingItem();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3945/buggy-version/workspace.src.main.java.com.madmodding.space.items.ItemDrill.java", "BodyUseAPI": [], "Fixed commit": "e75b985c2f4f13e615508198ed06120a33e25515", "Url": "https://api.github.com/repos/MadModding/BeyondSolar", "Date": "2015-11-08T21:27:35Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Constants.ApplicationPayload.PLATFORM_ANDROID.equals(application.getPlatform())) { mobileApps.add(application); if (((mobileAppCategories) != null) && (!(mobileAppCategories.contains(application.getCategory())))) { mobileAppCategories.add(application.getCategory()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7651/buggy-version/modules.mobile-agents.android.app-catalog.app.src.main.java.org.wso2.app.catalog.AppListActivity.java", "BodyUseAPI": ["java.util.List<java.lang.String>.contains(application.getCategory())", "org.wso2.app.catalog.beans.Application.getCategory()", "java.util.List<java.lang.String>.add(application.getCategory())", "org.wso2.app.catalog.beans.Application.getCategory()", "java.util.ArrayList<org.wso2.app.catalog.beans.Application>.add(org.wso2.app.catalog.beans.Application)"], "Fixed commit": "5adb76a3ce2f0f0ed15058ebafbce09ab29d3e4f", "Url": "https://api.github.com/repos/wso2-attic/product-emm", "Date": "2016-11-29T09:30:57Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.nbt.NBTTagCompound.getCompoundTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tankData.hasKey(\"Empty\")) { setFluid(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5837/buggy-version/src.main.java.evilcraft.core.fluid.Tank.java", "BodyUseAPI": [], "Fixed commit": "ff0b21e739772ae804bcb92707891a409f95134b", "Url": "https://api.github.com/repos/rubensworks/EvilCraft", "Date": "2014-09-08T15:53:11Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (arg != null) { accept(arg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7575/buggy-version/com.oracle.truffle.r.nodes.builtin.src.com.oracle.truffle.r.nodes.builtin.helpers.DebugHandling.java", "BodyUseAPI": ["com.oracle.truffle.r.nodes.builtin.helpers.DebugHandling.1.accept(com.oracle.truffle.r.runtime.nodes.RSyntaxElement)"], "Fixed commit": "d9277a9bf196f395579785ee2e8d3df44dfa6a0c", "Url": "https://api.github.com/repos/oracle/fastr", "Date": "2017-06-28T13:34:32Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inventory == (matrixLeft)) result.setInventorySlotContents(0, null); else resultRight.setInventorySlotContents(0, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/692/buggy-version/src.main.java.ganymedes01.ganyssurface.inventory.ContainerDualWorkTable.java", "BodyUseAPI": [], "Fixed commit": "2e799fcd21695ecc6225e2865cca6d2c7691e703", "Url": "https://api.github.com/repos/ganymedes01/Gany-s-Surface", "Date": "2015-08-22T20:21:05Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vip.getModuleId().equals(host.getModuleId())) && (vip.getEnvironment().equals(host.getEnvironment()))) { if (!(vip.getBlackListHosts().contains(host.getHostName()))) { vip.getBlackListHosts().add(host.getHostName()); getDataAccess().saveVip(vip); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4207/buggy-version/src.main.java.com.northernwall.hadrian.handlers.vip.VipHostHandler.java", "BodyUseAPI": ["com.northernwall.hadrian.domain.Host.getHostName()", "com.northernwall.hadrian.domain.Vip.getBlackListHosts()", "vip.getBlackListHosts().contains(host.getHostName())", "vip.getBlackListHosts().add(host.getHostName())", "com.northernwall.hadrian.domain.Host.getHostName()", "com.northernwall.hadrian.domain.Vip.getBlackListHosts()", "getDataAccess().saveVip(com.northernwall.hadrian.domain.Vip)"], "Fixed commit": "83fd7e5429e9071e0641da0378e0dca0c5ea0842", "Url": "https://api.github.com/repos/Jukkorsis/Hadrian", "Date": "2017-07-05T05:52:17Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.northernwall.hadrian.handlers.vip.VipHostHandler.fromJson(org.eclipse.jetty.server.Request,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (tempHost.getHostName().equals(data.hostName)) { if (data.action.equals(\"remove\")) { host = tempHost; }else { if ((vip.getModuleId().equals(tempHost.getModuleId())) && (vip.getEnvironment().equals(tempHost.getEnvironment()))) { host = tempHost; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4207/buggy-version/src.main.java.com.northernwall.hadrian.handlers.vip.VipHostHandler.java", "BodyUseAPI": ["com.northernwall.hadrian.domain.Host.getModuleId()", "vip.getEnvironment().equals(tempHost.getEnvironment())", "com.northernwall.hadrian.domain.Host.getEnvironment()", "data.action.equals(java.lang.String)", "vip.getModuleId().equals(tempHost.getModuleId())"], "Fixed commit": "83fd7e5429e9071e0641da0378e0dca0c5ea0842", "Url": "https://api.github.com/repos/Jukkorsis/Hadrian", "Date": "2017-07-05T05:52:17Z"},
{"Line": "=>1580", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.almalence.opencam.cameracontroller.HALv3.captureFormat) != (CameraController.RAW)) com.almalence.opencam.cameracontroller.HALv3.getInstance().previewRequestBuilder.addTarget(com.almalence.opencam.MainScreen.getInstance().getPreviewYUVSurface());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2573/buggy-version/src.com.almalence.opencam.cameracontroller.HALv3.java", "BodyUseAPI": [], "Fixed commit": "81c48d7d2a3d0835acda67a5f88801d00e07cdc1", "Url": "https://api.github.com/repos/almalence/OpenCamera", "Date": "2014-11-20T13:08:03Z"},
{"Line": "=>1660", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.almalence.opencam.cameracontroller.HALv3.captureFormat) != (CameraController.RAW)) com.almalence.opencam.cameracontroller.HALv3.getInstance().previewRequestBuilder.addTarget(com.almalence.opencam.MainScreen.getInstance().getPreviewYUVSurface());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2573/buggy-version/src.com.almalence.opencam.cameracontroller.HALv3.java", "BodyUseAPI": [], "Fixed commit": "81c48d7d2a3d0835acda67a5f88801d00e07cdc1", "Url": "https://api.github.com/repos/almalence/OpenCamera", "Date": "2014-11-20T13:08:03Z"},
{"Line": "=>1716", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (captureFormat != (com.almalence.opencam.cameracontroller.CameraController.RAW)) sfl.add(mImageReaderPreviewYUV.getSurface());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2573/buggy-version/src.com.almalence.opencam.MainScreen.java", "BodyUseAPI": [], "Fixed commit": "81c48d7d2a3d0835acda67a5f88801d00e07cdc1", "Url": "https://api.github.com/repos/almalence/OpenCamera", "Date": "2014-11-20T13:08:03Z"},
{"Line": "=>778", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sunglassesWaitlist.contains(sender.toLowerCase())) { sunglassesWaitlist.removeElement(sender.toLowerCase()); local_sendMessage((\"#\" + (this.channel)), (((line_header()) + sender) + \": YEAAAAAAAAAAAAHHHHH\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/274/buggy-version/PPbot.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.util.Vector<java.lang.String>.removeElement(java.lang.String)", "PPbot.local_sendMessage(java.lang.String,java.lang.String)"], "Fixed commit": "4f86aa1b3ead84baf3048688216be30d63144ef5", "Url": "https://api.github.com/repos/saagarp/plusplusbot", "Date": "2012-07-19T16:52:10Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((options.size()) == 1) { return options.get(0); }else { return options.get(random.nextInt(((options.size()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3820/buggy-version/core.src.main.java.com.crawljax.forms.RandomInputValueGenerator.java", "BodyUseAPI": ["java.util.Random.nextInt(int)", "java.util.List<T>.get(int)", "java.util.List<T>.get(int)", "java.util.List<T>.size()"], "Fixed commit": "feafba513a881bb1b3370b404179a4269595e939", "Url": "https://api.github.com/repos/crawljax/crawljax", "Date": "2013-02-26T02:08:17Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.leaniot.domain.attribute.AttributeType>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (((value == null) || (value.isEmpty())) && (!(attType.isOptional()))) throw new com.leaniot.exception.NotFoundException((\"attribute: \" + key)); else { com.leaniot.domain.attribute.DataType dataType = attType.getDataType(); if (!(dataType.isValid(value))) throw new com.leaniot.exception.ValueException(((\"attribute: \" + key) + \" is not valid value\")); com.leaniot.domain.attribute.DataValue dataValue = com.leaniot.domain.attribute.DataValue.getDataValue(value, dataType); attributes.put(key, dataValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8984/buggy-version/IOTPlatform.src.main.java.com.leaniot.service.SiteService.java", "BodyUseAPI": ["com.leaniot.domain.attribute.DataType.isValid(java.lang.String)", "com.leaniot.domain.attribute.DataValue.getDataValue(java.lang.String,com.leaniot.domain.attribute.DataType)", "com.leaniot.domain.attribute.AttributeType.getDataType()"], "Fixed commit": "281493c1d71684eee323483ea669a9a18200c231", "Url": "https://api.github.com/repos/iLeanIot/IOTPlatform", "Date": "2017-09-25T09:09:36Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (android.os.Build.VERSION_CODES.N)) { mDateTextView.setText(android.text.Html.fromHtml(stringExtra, Html.FROM_HTML_MODE_LEGACY)); }else { mDateTextView.setText(android.text.Html.fromHtml(stringExtra)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2377/buggy-version/app.src.main.java.com.myrescribe.ui.activities.ViewDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "9b3d984b062bfae346d89bcd7d25175d03005715", "Url": "https://api.github.com/repos/sandeepbahalkar123/myrescribe_repo", "Date": "2017-07-20T11:37:00Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((partner) != null) partner.doSex(this, createTan());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5347/buggy-version/src.world.Person.java", "BodyUseAPI": [], "Fixed commit": "3049f24d48677ed5d6a24768420ca78d487600a8", "Url": "https://api.github.com/repos/opthomas-prime/BeReVe", "Date": "2011-09-16T17:19:21Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (aobj == null) { if (method.getName().equals(\"hashCode\")) { return obj.hashCode(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5347/buggy-version/src.security.SecurityProxy.java", "BodyUseAPI": [], "Fixed commit": "3049f24d48677ed5d6a24768420ca78d487600a8", "Url": "https://api.github.com/repos/opthomas-prime/BeReVe", "Date": "2011-09-16T17:19:21Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.hashCode) == null) { this.hashCode = this.getStringRepresentation().hashCode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/676/buggy-version/src.dna.updates.update.Update.java", "BodyUseAPI": [], "Fixed commit": "52b6145f834b670f0f49216392c9796f4f797211", "Url": "https://api.github.com/repos/BenjaminSchiller/DNA", "Date": "2013-10-08T20:20:54Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((address.length) < 5) { for (int i = 0; i < 6; i++) { address[i] = \" \"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4266/buggy-version/src.edu.unsw.comp9321.jdbc.UserDTO.java", "BodyUseAPI": [], "Fixed commit": "dd92faa319c958b293351239b03b008a9e983cbe", "Url": "https://api.github.com/repos/nataliadj/bookstore-website", "Date": "2015-10-04T06:38:34Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.europeana.corelib.solr.service.SearchService.findById(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bean == null) { bean = searchService.resolve(europeanaObjectId, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/77/buggy-version/api2-war.src.main.java.eu.europeana.api2.v1.web.controller.ObjectController1.java", "BodyUseAPI": [], "Fixed commit": "11f034d499023aad5c99b88844a30c2805645f31", "Url": "https://api.github.com/repos/europeana/api2", "Date": "2013-12-11T13:09:58Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.europeana.corelib.solr.service.SearchService.findById(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bean == null) { bean = searchService.resolve(europeanaObjectId, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/77/buggy-version/api2-war.src.main.java.eu.europeana.api2.v1.web.controller.ObjectController1.java", "BodyUseAPI": [], "Fixed commit": "11f034d499023aad5c99b88844a30c2805645f31", "Url": "https://api.github.com/repos/europeana/api2", "Date": "2013-12-11T13:09:58Z"},
{"Line": "=>771", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fieldElement.getType().equals(int.class)) { result = fieldElement.getInt(serializable); }else if (fieldElement.getType().equals(short.class)) { result = fieldElement.getShort(serializable); }else { throw new java.lang.IllegalArgumentException((\"That cannot have a length \" + (fieldElement.getType()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6085/buggy-version/src.main.java.de.sloc.dataformat.PDU.java", "BodyUseAPI": ["java.lang.reflect.Field.getType()", "java.lang.reflect.Field.getType()", "java.lang.reflect.Field.getShort(de.sloc.dataformat.PDUSerializable)", "java.lang.reflect.Field.getInt(de.sloc.dataformat.PDUSerializable)", "java.lang.Class<?>.equals(java.lang.Class)"], "Fixed commit": "6e09422d8c0dc08a5dcb4b33efcc0178d6cfbd1c", "Url": "https://api.github.com/repos/sspies8684/dataformat", "Date": "2016-08-19T00:09:04Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isNewShortSound) mAudioPlayer.addTrack(newTrack);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4119/buggy-version/app.src.main.java.com.sloths.speedy.shortsounds.controller.ModelControl.java", "BodyUseAPI": [], "Fixed commit": "466b7c12004462b9e5c8b203bd8a79a6f48e39df", "Url": "https://api.github.com/repos/nharlow89/ShortSounds", "Date": "2015-05-28T00:57:54Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.cgFlags) == null) { this.cgFlags = \"wshnc\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/659/buggy-version/cogroo-nlp.src.main.java.org.cogroo.tools.featurizer.FeaturizerFactory.java", "BodyUseAPI": [], "Fixed commit": "ac12ce4f76d8df1d7d65ea8fe80d3180de625226", "Url": "https://api.github.com/repos/kinow/cogroo4", "Date": "2012-10-05T19:00:02Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2406/buggy-version/src.com.tweakcart.model.IntMap.java", "BodyUseAPI": [], "Fixed commit": "b90cc642a4f22274eee865a162248fd1260e0452", "Url": "https://api.github.com/repos/TweakCraft/TweakCart", "Date": "2011-08-23T13:03:01Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data < 4) return ((com.tweakcart.model.IntMap.materialSize) + ((int) (data))) + 50; else return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2406/buggy-version/src.com.tweakcart.model.IntMap.java", "BodyUseAPI": [], "Fixed commit": "b90cc642a4f22274eee865a162248fd1260e0452", "Url": "https://api.github.com/repos/TweakCraft/TweakCart", "Date": "2011-08-23T13:03:01Z"},
{"Line": "=>1662", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.classDataLoaded)) { this.result = ((hudson.plugins.analysis.core.ParserResult) (file.read())); this.classDataLoaded = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8518/buggy-version/src.main.java.hudson.plugins.analysis.core.BuildResult.java", "BodyUseAPI": [], "Fixed commit": "c81244c48c40c776dca95203401febd1d1b68790", "Url": "https://api.github.com/repos/willtmwu/analysis-core-plugin", "Date": "2015-07-16T12:26:24Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (userSelection == 0) { }else { if ((userSelection > 0) && (userSelection <= (foundRecipes.size()))) { com.lockness.kitchen.Recipe userRecipe = foundRecipes.get((userSelection - 1)); java.lang.System.out.println(userRecipe.toString()); }else { java.lang.System.out.println(\"Not a valid selection.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6803/buggy-version/src.com.lockness.program.ProgramMain.java", "BodyUseAPI": ["java.util.List<com.lockness.kitchen.Recipe>.get(int)"], "Fixed commit": "6c6b734df36a531fedb09b66fdc3a76e7d849616", "Url": "https://api.github.com/repos/Lockness/Recipes", "Date": "2015-06-08T06:38:32Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bundle == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8408/buggy-version/v2api.src.main.java.com.stdnull.v2api.model.V2MainFragModel.java", "BodyUseAPI": [], "Fixed commit": "31804568e3d6c62ea5303597fa25bfb7db5190ba", "Url": "https://api.github.com/repos/skyinu/RunMap", "Date": "2017-08-23T15:43:21Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(connections.containsKey(address))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1614/buggy-version/rpc.src.main.java.io.datakernel.rpc.client.RpcClient.java", "BodyUseAPI": [], "Fixed commit": "8ac01827a13b400c629a1b3e05954f2d9e2e4a2d", "Url": "https://api.github.com/repos/softindex/datakernel", "Date": "2016-11-14T18:33:57Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (serverClosing) { if ((requests.size()) == 0) { close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1614/buggy-version/rpc.src.main.java.io.datakernel.rpc.client.RpcClientConnection.java", "BodyUseAPI": [], "Fixed commit": "8ac01827a13b400c629a1b3e05954f2d9e2e4a2d", "Url": "https://api.github.com/repos/softindex/datakernel", "Date": "2016-11-14T18:33:57Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTarget) != null) { task.setTargetName(mTarget.getClass().getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8507/buggy-version/Aria.src.main.java.com.arialyy.aria.core.command.CancelCmd.java", "BodyUseAPI": [], "Fixed commit": "b24f83bf0bee2a4f11bc910e3e1d0d3fe1f39c6e", "Url": "https://api.github.com/repos/AriaLyy/Aria", "Date": "2016-12-13T14:16:54Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTarget) != null) { task.setTargetName(mTarget.getClass().getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8507/buggy-version/Aria.src.main.java.com.arialyy.aria.core.command.StopCmd.java", "BodyUseAPI": [], "Fixed commit": "b24f83bf0bee2a4f11bc910e3e1d0d3fe1f39c6e", "Url": "https://api.github.com/repos/AriaLyy/Aria", "Date": "2016-12-13T14:16:54Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.uzh.csg.mbps.customserialization.DecoderFactory.decode(java.lang.Class,pm.payload())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((paymentResponse.getStatus()) != (ch.uzh.csg.mbps.customserialization.ServerResponseStatus.DUPLICATE_REQUEST)) persistencyHandler.deletePersistedPaymentRequest(persistedPaymentRequest);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6363/buggy-version/AndroidNFCPaymentLibrary.src.main.java.ch.uzh.csg.paymentlib.PaymentRequestHandler.java", "BodyUseAPI": [], "Fixed commit": "5881181048159630fd256b8dd1e34a4a8da0bb46", "Url": "https://api.github.com/repos/jetonmemeti/android-nfc-payment-library", "Date": "2014-08-26T13:28:53Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.uzh.csg.mbps.customserialization.DecoderFactory.decode(java.lang.Class,pm.payload())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((paymentResponse.getStatus()) != (ch.uzh.csg.mbps.customserialization.ServerResponseStatus.DUPLICATE_REQUEST)) persistencyHandler.deletePersistedPaymentRequest(persistedPaymentRequest);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6363/buggy-version/AndroidNFCPaymentLibrary.src.main.java.ch.uzh.csg.paymentlib.PaymentRequestHandler.java", "BodyUseAPI": [], "Fixed commit": "5881181048159630fd256b8dd1e34a4a8da0bb46", "Url": "https://api.github.com/repos/jetonmemeti/android-nfc-payment-library", "Date": "2014-08-26T13:28:53Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (genres == null) genres = new java.util.HashSet<>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3689/buggy-version/src.main.java.pl.com.bottega.cineman.application.MovieDtoBuilder.java", "BodyUseAPI": [], "Fixed commit": "7f8de2766eb06712bbb702388147ce60d5f98ef5", "Url": "https://api.github.com/repos/kprzygudzki/cineman", "Date": "2017-05-06T07:28:52Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (actors == null) actors = new java.util.HashSet<>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3689/buggy-version/src.main.java.pl.com.bottega.cineman.application.MovieDtoBuilder.java", "BodyUseAPI": [], "Fixed commit": "7f8de2766eb06712bbb702388147ce60d5f98ef5", "Url": "https://api.github.com/repos/kprzygudzki/cineman", "Date": "2017-05-06T07:28:52Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["us.monoid.web.TextResource.getContentType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (contentType != null) { java.util.regex.Matcher m = us.monoid.web.TextResource.charsetPattern.matcher(contentType); if (m.find()) { java.lang.String charsetString = m.group(1); try { charset = java.nio.charset.Charset.forName(charsetString); } catch (java.nio.charset.IllegalCharsetNameException e) { e.printStackTrace(); } catch (java.lang.IllegalArgumentException e) { e.printStackTrace(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5546/buggy-version/src.main.java.us.monoid.web.TextResource.java", "BodyUseAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Fixed commit": "37706af3c6768cbf23b8a9fb83683244236f2bbf", "Url": "https://api.github.com/repos/beders/Resty", "Date": "2011-04-10T05:18:57Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((iLineCount) > 0) && (encoding.equals(\"utf-8\"))) { result.set(0, result.get(0).replace(\"\\ufeff\", \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7760/buggy-version/src.nl.ru.util.FileUtil.java", "BodyUseAPI": [], "Fixed commit": "e3e5c4349c865e69102f12795f099c3b5d37bbc8", "Url": "https://api.github.com/repos/ErwinKomen/CrpxProcessor", "Date": "2017-12-06T14:06:40Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((w.world[x][(y - 1)].getWorld()) == 602) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7993/buggy-version/Pangeo.src.pangeo.main.EdgeHandler.java", "BodyUseAPI": [], "Fixed commit": "3dc91ccd267c4667e744c5eb494a250c2c45cdb8", "Url": "https://api.github.com/repos/rangerofthewest/pangeo-code-java", "Date": "2014-12-12T23:00:28Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCountDownTimer) != null) mCountDownTimer.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/829/buggy-version/src.br.brunodea.goclock.Clock.java", "BodyUseAPI": [], "Fixed commit": "6f80baba85bfb4b35b8b39acf818b96765cb4eb6", "Url": "https://api.github.com/repos/brunodea/goclock", "Date": "2013-08-05T23:57:16Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fenixedu.bennu.core.domain.User.getLastNotification()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (notification == null) { return new java.util.HashSet<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5222/buggy-version/master-backend-ff.src.main.java.org.fenixedu.bennu.notifications.master.backend.ff.FFMasterBackend.java", "BodyUseAPI": [], "Fixed commit": "1f2d339de2f41d9a23da4d51684961649f8fd159", "Url": "https://api.github.com/repos/samfcmc/bennu-notifications", "Date": "2015-07-23T16:15:08Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (y < (YBlocks)) { java.lang.System.out.println((((\"press at \" + x) + \",\") + y)); if ((grid[x][y].getType()) == (Block.BlockType.EMPTY)) { fill_empty_block(x, y); }else { grid[x][y].rotate(); } grid[x][y].setChanged(true); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6174/buggy-version/app.src.main.java.gamelogic.GameWindow.java", "BodyUseAPI": ["gamelogic.GameWindow.fill_empty_block(int,int)", "grid[x][y].getType()", "grid[x][y].rotate()", "grid[x][y].setChanged(boolean)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "e6d76a75642ea83b63783464c8fd9a41cc761368", "Url": "https://api.github.com/repos/e-harvey/ShapesApp", "Date": "2016-04-19T02:51:37Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mViewPager.getAdapter()) == null) { setupView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/795/buggy-version/app.src.main.java.jp.gr.procon.proconapp.ui.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "15bd2a8f57ea734992f27b463d7c5658e6cfb6cd", "Url": "https://api.github.com/repos/sckm/ProconAppAndroid", "Date": "2015-10-03T01:57:56Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (logo == null) { imView.setImageResource(R.drawable.group_default_logo); }else { imView.setImageBitmap(logo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2746/buggy-version/src.com.allplayers.android.GroupPageActivity.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)"], "Fixed commit": "8fa7e624d51e823959cf40a9e06d145efae6e8bd", "Url": "https://api.github.com/repos/jdarling91/allplayers-android", "Date": "2013-05-03T19:37:00Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.mayo.cts2.framework.plugin.service.valueSetDefinitionResolutionServices.ctsUtility.Utilities.resolveEntityReference(edu.mayo.cts2.framework.model.core.URIAndEntityName,edu.mayo.cts2.framework.model.core.CodeSystemVersionReference,edu.mayo.cts2.framework.model.command.ResolvedReadContext)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (temp == null) { throw edu.mayo.cts2.framework.plugin.service.valueSetDefinitionResolutionServices.ctsUtility.ExceptionBuilder.buildUnknownEntity(((((\"Failed to resolve the entity '\" + (entity_)) + \"' in '\") + (codeSystemVersion_)) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1165/buggy-version/src.main.java.edu.mayo.cts2.framework.plugin.service.valueSetDefinitionResolutionServices.valueSetDefinitionResolutionImpl.utility.EntityReferenceResolver.java", "BodyUseAPI": [], "Fixed commit": "6b067cfc1bcc642a29e2f516916b695a0a6ec81c", "Url": "https://api.github.com/repos/cts2/valueSetDefinitionResolution-service", "Date": "2013-10-06T04:57:31Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ThreadLocal<org.apache.lucene.index.IndexWriterConfig>.get()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (config == null) { config = new org.apache.lucene.index.IndexWriterConfig(org.apache.lucene.util.Version.LUCENE_34, analyzer); proj.zoie.impl.indexing.internal.RAMSearchIndex.indexWriterConfigStorage.set(config); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2062/buggy-version/zoie-core.src.main.java.proj.zoie.impl.indexing.internal.RAMSearchIndex.java", "BodyUseAPI": [], "Fixed commit": "a204bf43eb88ae40dbe544cf88041cf0e41e3bac", "Url": "https://api.github.com/repos/senseidb/zoie", "Date": "2012-11-29T18:32:40Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.litle.sdk.samples.LitleOnline.authorize(com.litle.sdk.samples.Authorization)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(response.getMessage().equals(\"Approved\"))) { throw new java.lang.RuntimeException(\"The AuthWithTokenExample does not give the right response\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8453/buggy-version/samples.auth.src.main.java.AuthWithTokenExample.java", "BodyUseAPI": [], "Fixed commit": "1a8dd206353a93bb8ae841795e02de9a4978d3d6", "Url": "https://api.github.com/repos/Vantiv/litle-sdk-for-java", "Date": "2016-06-08T12:41:03Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getStringExtra(EditActivity.MESSAGE_TITLE)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (message != null) { android.widget.Toast.makeText(this, (\"send: \" + message), Toast.LENGTH_LONG).show(); listItems.add(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6995/buggy-version/Notes3.app.src.main.java.schmierwurschd.notes3.MainActivity.java", "BodyUseAPI": ["android.widget.Toast.makeText(this, (\"send: \" + message), Toast.LENGTH_LONG).show()", "android.widget.Toast.makeText(schmierwurschd.notes3.MainActivity,java.lang.String,Toast.LENGTH_LONG)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "52b468437d0a99851a269ae5a15d6ca5e7c2e5f3", "Url": "https://api.github.com/repos/fibll/Android-Studio", "Date": "2017-10-19T11:32:55Z"},
{"Line": "=>1817", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasMirror)) { return minUnconfirmedNonMirrorKey; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1539/buggy-version/xap-core.xap-datagrid.src.main.java.com.gigaspaces.internal.cluster.node.impl.backlog.AbstractSingleFileGroupBacklog.java", "BodyUseAPI": [], "Fixed commit": "9e43ff1058d077b09b781fbe71a5b87ef73d5be7", "Url": "https://api.github.com/repos/xap/xap", "Date": "2017-12-21T14:35:05Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activeFragment) == null) { activeFragment = new net.osmand.plus.mapmarkers.MapMarkersActiveFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5856/buggy-version/OsmAnd.src.net.osmand.plus.mapmarkers.MapMarkersDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "c93632e874e8912f2797fd85dbc822063995613f", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2017-09-07T15:36:37Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((historyFragment) == null) { historyFragment = new net.osmand.plus.mapmarkers.MapMarkersHistoryFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5856/buggy-version/OsmAnd.src.net.osmand.plus.mapmarkers.MapMarkersDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "c93632e874e8912f2797fd85dbc822063995613f", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2017-09-07T15:36:37Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s.charAt(i)) == ' ') continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2861/buggy-version/src.main.java.com.perimeterx.internals.cookie.PXCookie.java", "BodyUseAPI": [], "Fixed commit": "3db71a51771d9a15e0d58098538f09feb9465d03", "Url": "https://api.github.com/repos/PerimeterX/perimeterx-java-sdk", "Date": "2017-04-16T08:28:40Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jatekFut) && ((varakozoIdo) == 0)) { gameRun(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5770/buggy-version/projlab.src.projlab.Controller.java", "BodyUseAPI": [], "Fixed commit": "8b4d49fec2d95a944523dc744e65694c99918956", "Url": "https://api.github.com/repos/HM0002/SZPL", "Date": "2017-05-07T13:00:00Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((varakozoIdo) < 0) varakozoIdo = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5770/buggy-version/projlab.src.projlab.Controller.java", "BodyUseAPI": [], "Fixed commit": "8b4d49fec2d95a944523dc744e65694c99918956", "Url": "https://api.github.com/repos/HM0002/SZPL", "Date": "2017-05-07T13:00:00Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((friendsPagerAdapter) != null) { friendsPagerAdapter.myFriendsFragment.updateMyFriends(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8297/buggy-version/app.src.main.java.com.fyf.parkinglot.fragment.friends.FriendsFragment.java", "BodyUseAPI": [], "Fixed commit": "3d5a1bfda7f8c67cd580723a9b1fe57538477f5c", "Url": "https://api.github.com/repos/617218557/ParkingLot", "Date": "2016-05-10T15:26:08Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent) == null) { return enter(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6546/buggy-version/src.main.java.org.babblelang.engine.impl.Scope.java", "BodyUseAPI": [], "Fixed commit": "1fc0f1b446e5ce42e55f4a299e468a5da63e3669", "Url": "https://api.github.com/repos/nlehuen/babble", "Date": "2013-06-19T20:11:44Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((assign.getVariable()) instanceof tree.ExpNode.VariableNode) { tree.ExpNode.VariableNode variable = ((tree.ExpNode.VariableNode) (assign.getVariable())); java.lang.String identifier = variable.getVariable().getIdent(); if (identList.contains(identifier)) { errors.error((identifier + \" assigned more than once\"), variable.getPosition()); }else identList.add(identifier); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7391/buggy-version/src.tree.StaticChecker.java", "BodyUseAPI": ["StatementNode.AssignmentNode.getVariable()"], "Fixed commit": "e77835711f6e824d000ddeb34cb6ca50d81f5d8c", "Url": "https://api.github.com/repos/herotl111/A1", "Date": "2015-03-31T07:58:02Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.laudien.p1xelfehler.batterywarner.database.DatabaseModel.getCursor(android.database.sqlite.SQLiteDatabase)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((cursor == null) || (cursor.isClosed())) || ((cursor.getCount()) <= ((com.laudien.p1xelfehler.batterywarner.database.DatabaseModel.MAX_DATA_POINTS) * 2))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4717/buggy-version/app.src.main.java.com.laudien.p1xelfehler.batterywarner.database.DatabaseModel.java", "BodyUseAPI": [], "Fixed commit": "eb9fcf4812a9e29978f2df852422e48da23dda06", "Url": "https://api.github.com/repos/P1xelfehler/BatteryWarner", "Date": "2017-11-15T13:34:06Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getProcessModel().getSafetyRequirements().getDelegations().get(de.freiburg.uni.iig.sisi.model.ModelObject)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (delegationSet != null) roleSet.addAll(delegationSet);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2039/buggy-version/src.de.freiburg.uni.iig.sisi.model.safetyrequirements.mutant.AuthorizationMutant.java", "BodyUseAPI": ["java.util.HashSet<de.freiburg.uni.iig.sisi.model.resource.Role>.addAll(java.util.HashSet<de.freiburg.uni.iig.sisi.model.resource.Role>)"], "Fixed commit": "296b6011d65737c9f70de99f4adcece969a3aa81", "Url": "https://api.github.com/repos/sebald/SiSi", "Date": "2012-06-01T11:47:02Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (level == null) { level = org.pmw.tinylog.Level.INFO; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8240/buggy-version/src.main.java.org.openpnp.gui.LogPanel.java", "BodyUseAPI": [], "Fixed commit": "4b7fe0153457b148462a433a7a810074a6e154b2", "Url": "https://api.github.com/repos/openpnp/openpnp", "Date": "2016-10-30T16:17:26Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((pastRunItem) != null) && ((pastRunItem.pastLocations.size()) >= 2)) { this.getUnits(); this.getDatapoints(); android.util.Log.i(letshangllc.letsride.activities.runinfo.RunGraphFragment.TAG, (\"normal size: \" + (normalElevations.size()))); android.util.Log.i(letshangllc.letsride.activities.runinfo.RunGraphFragment.TAG, (\"speed size: \" + (normalSpeeds.size()))); if (((normalElevations.size()) >= 2) && ((normalSpeeds.size()) >= 2)) { this.setupGraphs(rootView); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7469/buggy-version/app.src.main.java.letshangllc.letsride.activities.runinfo.RunGraphFragment.java", "BodyUseAPI": [], "Fixed commit": "b60073443ef46795aecf57a52a78b8e497af9e07", "Url": "https://api.github.com/repos/cburnham4/Lets-Ride", "Date": "2016-08-21T19:38:42Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userId == (-1)) return \"adminsuccess\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7023/buggy-version/src.com.demo.action.RouteAction.java", "BodyUseAPI": [], "Fixed commit": "dd20b88d343e79d21f55a07e42ef803d739390fd", "Url": "https://api.github.com/repos/Jian-Jin/Airline_Simulation", "Date": "2016-11-08T23:08:01Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (prev.isEmpty()) { prev.add(assayNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/159/buggy-version/app.magetab.src.main.java.uk.ac.ebi.fg.annotare2.magetab.integration.MageTabGenerator.java", "BodyUseAPI": ["java.util.List<uk.ac.ebi.fg.annotare2.magetab.integration.SDRFNode>.add(uk.ac.ebi.fg.annotare2.magetab.integration.SDRFNode)"], "Fixed commit": "50977aa9dc5dade6e52ef8735bc747efef4d901e", "Url": "https://api.github.com/repos/arrayexpress/annotare2", "Date": "2013-10-14T10:00:38Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((records.length) == 0) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/249/buggy-version/src.main.java.com.toby.aDNS.ADNSServer.java", "BodyUseAPI": [], "Fixed commit": "b9afa57371256a4494e8db910806898f07050cc3", "Url": "https://api.github.com/repos/tobyxdd/anchorDNS", "Date": "2015-08-31T14:44:55Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((arr.length) > 0) { finalStr = arr[0]; for (int i = 1; i < (arr.length); i++) { if ((arr[i].equalsIgnoreCase(arr[(i - 1)])) == false) { finalStr = (finalStr + \" \") + (arr[i]); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2988/buggy-version/TopicExtractionUtility.src.shamsa.clustering.DataGenerator.CodePreprocessor.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "467ab07086365357e547ba2133143d51e713997d", "Url": "https://api.github.com/repos/shamsa-abid/DomainFacetedCodeRepoBuildingUtility", "Date": "2016-06-14T08:22:10Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index >= 0) { className = str.substring(0, str.indexOf(\" \")); className = shamsa.clustering.DataGenerator.CodePreprocessor.splitCamelCase(className); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2988/buggy-version/TopicExtractionUtility.src.shamsa.clustering.DataGenerator.CodePreprocessor.java", "BodyUseAPI": [], "Fixed commit": "467ab07086365357e547ba2133143d51e713997d", "Url": "https://api.github.com/repos/shamsa-abid/DomainFacetedCodeRepoBuildingUtility", "Date": "2016-06-14T08:22:10Z"},
{"Line": "=>605", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.getReturnType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (resultType.equals(java.lang.String.class)) { return \"\"; }else { return com.oracle.tools.util.ReflectionHelper.createProxyOf(resultType, new com.oracle.tools.deferred.DeferredHelper.DeferredMethodInteceptor()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/106/buggy-version/oracle-tools-core.src.main.java.com.oracle.tools.deferred.DeferredHelper.java", "BodyUseAPI": ["com.oracle.tools.util.ReflectionHelper.createProxyOf(java.lang.Class<?>,com.oracle.tools.deferred.DeferredHelper.DeferredMethodInteceptor)"], "Fixed commit": "1e99dc2c2d73c070b9ab8de8ce98e4869afe0378", "Url": "https://api.github.com/repos/coherence-community/oracle-tools", "Date": "2013-02-15T17:07:26Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position < (this.filterList.size())) { for (slm2015.hey.entity.Term t : termList) t.setIsSelected(false); filterList.get(position).setIsSelected(true); if (filterList.get(position).needToAdd()) termList.add(filterList.get(position)); filterList = termList; notifyDataSetChanged(); if ((termSelectedListener) != null) { termSelectedListener.OnTermSelected(filterList.get(position).getText()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8093/buggy-version/app.src.main.java.slm2015.hey.view.tabs.post.TermAdapter.java", "BodyUseAPI": ["filterList.get(position).getText()", "filterList.get(position).setIsSelected(boolean)", "filterList.get(position).needToAdd()", "java.util.List<slm2015.hey.entity.Term>.get(int)", "java.util.List<slm2015.hey.entity.Term>.get(int)", "slm2015.hey.view.tabs.post.TermAdapter.OnTermSelectedListener.OnTermSelected(filterList.get(position).getText())", "java.util.List<slm2015.hey.entity.Term>.add(filterList.get(position))", "java.util.List<slm2015.hey.entity.Term>.get(int)", "java.util.List<slm2015.hey.entity.Term>.get(int)"], "Fixed commit": "882ccd4f293f7b971c821e49a1a57be93bcae75a", "Url": "https://api.github.com/repos/ZhongTing/Hey", "Date": "2015-05-12T12:23:38Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (extractedOrgId.equals(orgId)) { org.openscoring.service.ModelResponse response = org.openscoring.service.ModelResource.createModelResponse(entry.getKey(), entry.getValue(), false); responses.add(response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1756/buggy-version/openscoring-service.src.main.java.org.openscoring.service.ModelResource.java", "BodyUseAPI": [], "Fixed commit": "c8ca176a4cad40c7ec7597010e1ebec1d6b5e0c7", "Url": "https://api.github.com/repos/nhan-jsl/openscoring", "Date": "2017-03-14T16:30:09Z"},
{"Line": "=>615", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((rc != (java.net.HttpURLConnection.HTTP_PARTIAL)) && (rc != 416)) { android.util.Log.d(com.quran.labs.androidquran.service.QuranDownloadService.TAG, (\"got unexpected response code: \" + rc)); notifyError(com.quran.labs.androidquran.service.QuranDownloadService.ERROR_NETWORK, false, notificationInfo); return com.quran.labs.androidquran.service.QuranDownloadService.ERROR_NETWORK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8966/buggy-version/src.com.quran.labs.androidquran.service.QuranDownloadService.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,java.lang.String)"], "Fixed commit": "4270ad1c429f218a6c6f253000ef5b88046559ae", "Url": "https://api.github.com/repos/ahmedre/quran_android", "Date": "2012-07-11T06:01:40Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rascalmpl.library.lang.java.m3.internal.ASTConverter.resolveBinding(org.rascalmpl.library.lang.java.m3.internal.ASTNode)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(decl.getURI().getScheme().equals(\"unknown\"))) { setAnnotation(\"decl\", decl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/9073/buggy-version/src.org.rascalmpl.library.lang.java.m3.internal.ASTConverter.java", "BodyUseAPI": ["org.rascalmpl.library.lang.java.m3.internal.ASTConverter.setAnnotation(java.lang.String,org.eclipse.imp.pdb.facts.ISourceLocation)"], "Fixed commit": "e07bf87f4bd0257e7d4e813be3050945ddb726b4", "Url": "https://api.github.com/repos/cwi-swat/rascal", "Date": "2013-09-12T11:03:19Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ex != null) { throw new org.hdiv.exception.HDIVException(\"Wrapped exception on debug\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2754/buggy-version/hdiv-core.src.main.java.org.hdiv.filter.ValidatorFilter.java", "BodyUseAPI": [], "Fixed commit": "4c403edffe13c9e5f06b76e02968675f77e34346", "Url": "https://api.github.com/repos/hdiv/hdiv", "Date": "2017-06-06T06:59:11Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (match.isVisible()) { matches.add(match.getSearchSpectrumID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5428/buggy-version/src.de.mpa.client.model.dbsearch.ProteinHit.java", "BodyUseAPI": ["de.mpa.client.model.SpectrumMatch.getSearchSpectrumID()", "java.util.Set<java.lang.Long>.add(match.getSearchSpectrumID())"], "Fixed commit": "9c43acd67681fba788b5d0aee67c4fcbde0fa1ae", "Url": "https://api.github.com/repos/compomics/meta-proteome-analyzer", "Date": "2016-07-28T12:25:54Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((plEndTimestamp) != null) { logger.log(java.util.logging.Level.INFO, (\"Seconds between now and plEndTimestamp: \" + (java.lang.String.valueOf(java.time.temporal.ChronoUnit.SECONDS.between(nowLDT, plEndTimestamp))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/427/buggy-version/src.playoutCore.meltedProxy.MeltedProxy.java", "BodyUseAPI": [], "Fixed commit": "5564b9a1b0236fc8411a4126aa009317ca2a8fdb", "Url": "https://api.github.com/repos/MagmaPlayout/mp-core", "Date": "2017-08-05T19:36:27Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getDescription()) == null) { descList.add(\"Description\"); }else { descList.add(event.getDescription()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4217/buggy-version/Virgil.app.src.main.java.wisc.virgil.virgil.EventsFragment.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(event.getDescription())", "wisc.virgil.virgil.Event.getDescription()"], "Fixed commit": "fd8d427749f32e141f7627ae31caea3ee2fbc8ba", "Url": "https://api.github.com/repos/VictorFerrero/Virgil_Android", "Date": "2016-05-01T21:05:52Z"},
{"Line": "=>923", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (obj instanceof java.lang.Boolean) { return java.lang.String.valueOf(obj); }else { org.collectionspace.services.common.document.DocumentUtils.logger.warn(((((\"Could not convert value of property \" + propertyPath) + \" in document \") + (docModel.getPathAsString())) + \" to a String.\")); org.collectionspace.services.common.document.DocumentUtils.logger.warn(\"This may be due to a new, as-yet-unhandled datatype returned from the repository\"); return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6785/buggy-version/services.common.src.main.java.org.collectionspace.services.common.document.DocumentUtils.java", "BodyUseAPI": ["java.lang.String.valueOf(java.lang.Object)"], "Fixed commit": "d4834b304f76e88bcf2e2b44ea75bd06ecc4da0e", "Url": "https://api.github.com/repos/ray-lee/services", "Date": "2013-07-30T00:46:59Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.commonsware.android.passwordbox.DatabaseHelper.getDatabase()) != null) { startActivity(new android.content.Intent(this, com.commonsware.android.passwordbox.MainActivity.class)); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7682/buggy-version/Database.PasswordBox.src.com.commonsware.android.passwordbox.AuthActivity.java", "BodyUseAPI": [], "Fixed commit": "4435f0694d9a335a27208a003b7699bfdfa06e65", "Url": "https://api.github.com/repos/commonsguy/cw-omnibus", "Date": "2014-01-13T13:40:42Z"},
{"Line": "=>979", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (v == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2133/buggy-version/src.com.neuSep17.ui.InventoryEditUI.java", "BodyUseAPI": [], "Fixed commit": "b68840c0c76cb97ffed720782f7fe6000585ffa7", "Url": "https://api.github.com/repos/iShiBin/inventory-management", "Date": "2017-12-08T06:14:08Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (logoUrl.equals(\"invalid\")) { logoImage.setImageResource(R.drawable.logo); }else { com.badou.mworking.net.bitmap.ImageViewLoader.setImageViewResource(logoImage, R.drawable.logo, logoUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4908/buggy-version/app.src.main.java.com.badou.mworking.BackWebActivity.java", "BodyUseAPI": ["com.badou.mworking.net.bitmap.ImageViewLoader.setImageViewResource(android.widget.ImageView,R.drawable.logo,java.lang.String)"], "Fixed commit": "598978e99c41bff3c2fa9a4ed6baddabe8304ae7", "Url": "https://api.github.com/repos/captainbupt/Douxing", "Date": "2015-07-01T04:04:13Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.low) == (this.high)) { return true; }else { if (((this.low) < hash) || ((this.high) >= hash)) return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6117/buggy-version/ScalableStorageService.src.consistent_hashing.Range.java", "BodyUseAPI": [], "Fixed commit": "3d5200aaa369b023bad23e6a18b728ed28c462b4", "Url": "https://api.github.com/repos/HazemAlbezreh/CloudDBProject", "Date": "2014-12-08T16:19:12Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(oldValue.equals(newValue))) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8579/buggy-version/interfaces.src.main.java.org.dllearner.confparser3.PostProcessor.java", "BodyUseAPI": [], "Fixed commit": "db683f7070eb6af2ea313f13d0d008c0cf5bce4e", "Url": "https://api.github.com/repos/SmartDataAnalytics/DL-Learner", "Date": "2015-06-18T10:14:59Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resPhi[i][k]) != (resPhi[i][k])) java.lang.System.out.println(\"resPhi NAN!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3714/buggy-version/src.multinomial.MixtureUpdate.java", "BodyUseAPI": [], "Fixed commit": "86350cdee1c53c1fc4ef399bef2554dc7e04e8f8", "Url": "https://api.github.com/repos/YpGu/15A", "Date": "2015-04-02T23:17:58Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tmpVarphi[i]) != (tmpVarphi[i])) java.lang.System.out.println(\"tmpVarphi NAN!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3714/buggy-version/src.multinomial.MixtureUpdate.java", "BodyUseAPI": [], "Fixed commit": "86350cdee1c53c1fc4ef399bef2554dc7e04e8f8", "Url": "https://api.github.com/repos/YpGu/15A", "Date": "2015-04-02T23:17:58Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resGamma[k]) != (resGamma[k])) java.lang.System.out.println(\"resGamma NAN!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3714/buggy-version/src.multinomial.MixtureUpdate.java", "BodyUseAPI": [], "Fixed commit": "86350cdee1c53c1fc4ef399bef2554dc7e04e8f8", "Url": "https://api.github.com/repos/YpGu/15A", "Date": "2015-04-02T23:17:58Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldVersion == 1) { db.execSQL((\"DROP INDEX IF EXISTS \" + (MessageListDAO.INDEX_ON_MSG_TYPE))); db.execSQL((\"DROP INDEX IF EXISTS \" + (PersonSenderDAO.INDEX_ON_KEY_TYPE))); db.execSQL((\"DROP INDEX IF EXISTS \" + (AttachmentDAO.INDEX_ON_FILENAME))); db.execSQL((\"DROP TABLE IF EXISTS \" + (AttachmentDAO.TABLE_ATTACHMENTS))); db.execSQL((\"DROP TABLE IF EXISTS \" + (FullMessageDAO.TABLE_MESSAGE_CONTENT))); db.execSQL((\"DROP TABLE IF EXISTS \" + (MessageListDAO.TABLE_MESSAGES))); db.execSQL((\"DROP TABLE IF EXISTS \" + (PersonSenderDAO.TABLE_PERSON))); db.execSQL(PersonSenderDAO.TABLE_CREATE); db.execSQL(FullMessageDAO.TABLE_CREATE); db.execSQL(MessageListDAO.TABLE_CREATE); db.execSQL(AttachmentDAO.TABLE_CREATE); db.execSQL(MessageListDAO.CREATE_INDEX_ON_MSG_TYPE); db.execSQL(PersonSenderDAO.CREATE_INDEX_ON_KEY_TYPE); db.execSQL(AttachmentDAO.CREATE_INDEX_ON_FILENAME); }else { dropAll(db); onCreate(db); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1774/buggy-version/src.hu.rgai.yako.sql.SQLHelper.java", "BodyUseAPI": [], "Fixed commit": "6d7b84010cedfc0f2a55d35981f16833e0a61fad", "Url": "https://api.github.com/repos/k-kojak/yako", "Date": "2014-10-15T13:44:41Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hu.rgai.yako.workers.Person.searchPersonAndr(android.content.Context,newMessage.getFrom())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((searchedFrom != null) && (!(searchedFrom.equals(newMessage.getFrom())))) { newMessage.setFrom(searchedFrom); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1774/buggy-version/src.hu.rgai.yako.workers.MessageListerAsyncTask.java", "BodyUseAPI": ["hu.rgai.yako.workers.MessageListElement.setFrom(hu.rgai.yako.workers.Person)"], "Fixed commit": "6d7b84010cedfc0f2a55d35981f16833e0a61fad", "Url": "https://api.github.com/repos/k-kojak/yako", "Date": "2014-10-15T13:44:41Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_lambdaIdx) == (lambda.length)) this.complete(); else new hex.glm.GLMTask.GLMIterationTask(this, _dinfo, _glm, case_mode, case_val, null, (_ymu = ymut.ymu()), (_reg = 1.0 / (ymut.nobs())), new hex.glm.GLM2.Iteration()).dfork(_dinfo._adaptedFrame);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1110/buggy-version/src.main.java.hex.glm.GLM2.java", "BodyUseAPI": [], "Fixed commit": "a527234c0b869d5ab6290832cc3c754db4075f2a", "Url": "https://api.github.com/repos/0xdata/h2o", "Date": "2014-03-03T20:05:05Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((argClass == (java.lang.Object.class)) && (fieldClass != argClass)) { mv.visitTypeInsn(com.alimuya.kevvy.reflect.factroy.CHECKCAST, com.alimuya.kevvy.reflect.factroy.AsmUtils.toAsmCls(fieldClass)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6886/buggy-version/src.com.alimuya.kevvy.reflect.factroy.UnsafeGSMethodBuilder.java", "BodyUseAPI": ["org.objectweb.asm.MethodVisitor.visitTypeInsn(com.alimuya.kevvy.reflect.factroy.CHECKCAST,com.alimuya.kevvy.reflect.factroy.AsmUtils.toAsmCls(fieldClass))", "com.alimuya.kevvy.reflect.factroy.AsmUtils.toAsmCls(java.lang.Class<?>)"], "Fixed commit": "f4e36863607c4d90cfefe3d24176f4d68b9a96f7", "Url": "https://api.github.com/repos/alimuya/kevvy-reflect", "Date": "2015-06-07T08:37:20Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Bukkit.getServer().getOfflinePlayer(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (p.isOnline()) { p.sendMessage(((net.md_5.bungee.api.ChatColor.AQUA) + \"You regained your truce with the monsters\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6876/buggy-version/SuperNaturalPlayers.src.com.weeryan17.snp.Util.Events.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(((net.md_5.bungee.api.ChatColor.AQUA) + \"You regained your truce with the monsters\"))"], "Fixed commit": "c96322044379c6762b29ca4782aa049abb23abda", "Url": "https://api.github.com/repos/weeryan17/SuperNaturalPlayers", "Date": "2015-11-11T14:23:02Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bindingAttributeResolver.hasAttribute(org.robobinding.viewattribute.textview.TextViewAttributeProvider.ON_TEXT_CHANGED)) { org.robobinding.viewattribute.ViewAttribute viewAttribute = new org.robobinding.viewattribute.textview.OnTextChangedAttribute(textView, bindingAttributeResolver.findAttributeValue(org.robobinding.viewattribute.textview.TextViewAttributeProvider.ON_TEXT_CHANGED)); bindingAttributeResolver.resolveAttribute(org.robobinding.viewattribute.textview.TextViewAttributeProvider.ON_TEXT_CHANGED, viewAttribute); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8937/buggy-version/robobinding.src.main.java.org.robobinding.viewattribute.textview.TextViewAttributeProvider.java", "BodyUseAPI": ["org.robobinding.binder.BindingAttributeResolver.resolveAttribute(java.lang.String,org.robobinding.viewattribute.ViewAttribute)", "org.robobinding.binder.BindingAttributeResolver.findAttributeValue(java.lang.String)"], "Fixed commit": "c45a47463f85be7144fee70bd82525e7e8417ee7", "Url": "https://api.github.com/repos/roberttaylor426/RoboBinding", "Date": "2011-12-22T11:06:54Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o.isError()) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2319/buggy-version/task_catalyst.src.main.java.moustachio.task_catalyst.TaskAdvanced.java", "BodyUseAPI": [], "Fixed commit": "d64f67d87a0b8361ecbf7c8191af2129e8cf4653", "Url": "https://api.github.com/repos/cs2103aug2014-t17-4j/main", "Date": "2014-11-10T06:24:13Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.anysoftkeyboard.ui.settings.wordseditor.AbbreviationDictionaryEditorFragment.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (activity == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/501/buggy-version/src.main.java.com.anysoftkeyboard.ui.settings.wordseditor.AbbreviationDictionaryEditorFragment.java", "BodyUseAPI": [], "Fixed commit": "ae98db47aeab84f4174f75f76a7f78071bc26b0f", "Url": "https://api.github.com/repos/AnySoftKeyboard/AnySoftKeyboard", "Date": "2015-07-28T21:15:35Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.anysoftkeyboard.ui.settings.wordseditor.UserDictionaryEditorFragment.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (activity == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/501/buggy-version/src.main.java.com.anysoftkeyboard.ui.settings.wordseditor.UserDictionaryEditorFragment.java", "BodyUseAPI": [], "Fixed commit": "ae98db47aeab84f4174f75f76a7f78071bc26b0f", "Url": "https://api.github.com/repos/AnySoftKeyboard/AnySoftKeyboard", "Date": "2015-07-28T21:15:35Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.anysoftkeyboard.ui.settings.wordseditor.UserDictionaryEditorFragment.5.createAdapterForWords(java.util.List<com.anysoftkeyboard.ui.settings.wordseditor.EditorWord>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (adapter != null) { mWordsRecyclerView.setAdapter(adapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/501/buggy-version/src.main.java.com.anysoftkeyboard.ui.settings.wordseditor.UserDictionaryEditorFragment.java", "BodyUseAPI": ["android.support.v7.widget.RecyclerView.setAdapter(RecyclerView.Adapter)"], "Fixed commit": "ae98db47aeab84f4174f75f76a7f78071bc26b0f", "Url": "https://api.github.com/repos/AnySoftKeyboard/AnySoftKeyboard", "Date": "2015-07-28T21:15:35Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((contentType) == null) contentType = \"project\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7301/buggy-version/src.main.java.hudson.plugins.emailext.EmailType.java", "BodyUseAPI": [], "Fixed commit": "3eb82a451ce9aa8c14a45bfc2297136b68762be6", "Url": "https://api.github.com/repos/ndeloof/email-ext-plugin", "Date": "2013-09-12T15:30:59Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (menuGuillotine.isOpen()) closeMenu();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7987/buggy-version/app.src.main.java.com.dev.innso.myappbum.UI.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e00281e0e80677464c077afe52728cdf55e20902", "Url": "https://api.github.com/repos/andrespaez90/MyAppbum", "Date": "2015-10-10T17:10:31Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (predictions.isEmpty()) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6303/buggy-version/app.src.main.java.com.android.launcher3.allapps.PredictiveAppsProvider.java", "BodyUseAPI": [], "Fixed commit": "0b36b98013c7ddf696ce7d31d28840b2bf71cca7", "Url": "https://api.github.com/repos/klinker24/Android-Blur-Launcher", "Date": "2015-10-08T15:00:20Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getCookies()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null != cookies) { for (javax.servlet.http.Cookie cookie : cookies) { if (org.apache.commons.lang3.StringUtils.equals(cookie.getName(), RecapConstants.RECAP_INSTITUTION_ID)) { institution = cookie.getValue(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7553/buggy-version/src.main.java.org.recap.util.HelperUtil.java", "BodyUseAPI": [], "Fixed commit": "afb34c36cbc06f2002eab470225a93f45d74908c", "Url": "https://api.github.com/repos/sudhish74/scsb-ui", "Date": "2017-02-27T18:58:07Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.naming.directory.SearchResult.getNameInNamespace()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((userDn == null) || (\"\".equals(userDn))) { throw new javax.naming.NamingException(\"username may not be empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4477/buggy-version/jetty-jaas.src.main.java.org.eclipse.jetty.jaas.spi.LdapLoginModule.java", "BodyUseAPI": [], "Fixed commit": "d9d20670fb59def6b4a4c361f4e3824d5e89d70f", "Url": "https://api.github.com/repos/WalkerWatch/jetty.project", "Date": "2016-06-17T23:56:41Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((password == null) || (\"\".equals(password))) { throw new javax.naming.NamingException(\"password may not be empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4477/buggy-version/jetty-jaas.src.main.java.org.eclipse.jetty.jaas.spi.LdapLoginModule.java", "BodyUseAPI": [], "Fixed commit": "d9d20670fb59def6b4a4c361f4e3824d5e89d70f", "Url": "https://api.github.com/repos/WalkerWatch/jetty.project", "Date": "2016-06-17T23:56:41Z"},
{"Line": "=>498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.lareferencia.backend.harvester.HarvestingEvent.getResumptionToken()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((resumptionToken != null) && ((resumptionToken.length()) > 255)) resumptionToken = resumptionToken.substring(0, 255);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/9072/buggy-version/backend.src.main.java.org.lareferencia.backend.tasks.SnapshotWorker.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "ce11f83a0a635f8de8f562c95946940fb7e84208", "Url": "https://api.github.com/repos/lareferencia/main", "Date": "2015-05-14T19:16:27Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(datagramChannel.isConnected())) { return ((java.net.InetSocketAddress) (datagramChannel.receive(readBuffer))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2168/buggy-version/src.com.esotericsoftware.kryonet.UdpConnection.java", "BodyUseAPI": ["java.nio.channels.DatagramChannel.receive(java.nio.ByteBuffer)"], "Fixed commit": "55ef2836a29386308dc1db32cabda8d32a735ed2", "Url": "https://api.github.com/repos/bjnovak/kryonet", "Date": "2016-02-15T02:03:21Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.util.attachment.control.AttachmentBm.getAttachmentByPrimaryKey(com.stratelia.webactiv.util.attachment.ejb.AttachmentPK)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (attachDetail != null) { com.stratelia.webactiv.util.attachment.control.AttachmentController.deleteAttachment(attachDetail, invokeCallback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2824/buggy-version/lib-core.src.main.java.com.stratelia.webactiv.util.attachment.control.AttachmentController.java", "BodyUseAPI": ["com.stratelia.webactiv.util.attachment.control.AttachmentController.deleteAttachment(com.stratelia.webactiv.util.attachment.model.AttachmentDetail,boolean)"], "Fixed commit": "8fa8519df9dd6e94705e0a427f1680a6720bf81f", "Url": "https://api.github.com/repos/CecileBONIN/Silverpeas-Core", "Date": "2011-06-21T12:35:02Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node instanceof terminals.ArrayAndIndex) { return expr + (node.getNodeChar()); }else if (node instanceof terminals.QuantifiedExpr) { terminals.QuantifiedExpr quant = ((terminals.QuantifiedExpr) (node)); java.lang.String quantString = \"<|\"; if (quant.getOp().equals(Operators.FOR_ALL)) { quantString += \" forall \"; }else if (quant.getOp().equals(Operators.THERE_EXISTS)) { quantString += \" exists \"; } java.lang.String dummies = \"\"; for (java.lang.String s : quant.getDummys()) { dummies += \",\" + s; } quantString += (dummies.substring(1)) + \" : \"; quantString += walkForPlainText(quant.getRange(), \"\"); quantString += \" : \"; quantString += walkForPlainText(quant.getTerm(), \"\"); quantString += \" |>\"; return expr + quantString; }else if (node instanceof nodes.IBinaryOperator) { if (node.getNodeChar().equals(Operators.AND)) { return ((expr + (walkForPlainText(node.children()[0], expr))) + \" and \") + (walkForPlainText(node.children()[1], expr)); }else if (node.getNodeChar().equals(Operators.OR)) { return ((expr + (walkForPlainText(node.children()[0], expr))) + \" or \") + (walkForPlainText(node.children()[1], expr)); }else if (node.getNodeChar().equals(Operators.IMPLICATION)) { return ((expr + (walkForPlainText(node.children()[0], expr))) + \" -> \") + (walkForPlainText(node.children()[1], expr)); }else if (node.getNodeChar().equals(Operators.REVERSE_IMPLICATION)) { return ((expr + (walkForPlainText(node.children()[0], expr))) + \" <- \") + (walkForPlainText(node.children()[1], expr)); }else if (node.getNodeChar().equals(Operators.EQUIVAL)) { return ((expr + (walkForPlainText(node.children()[0], expr))) + \" == \") + (walkForPlainText(node.children()[1], expr)); }else if (node.getNodeChar().equals(Operators.NOT_EQUIVAL)) { return ((expr + (walkForPlainText(node.children()[0], expr))) + \" !== \") + (walkForPlainText(node.children()[1], expr)); }else if (node.getNodeChar().equals(Operators.GTE)) { return ((expr + (walkForPlainText(node.children()[0], expr))) + \" >= \") + (walkForPlainText(node.children()[1], expr)); }else if (node.getNodeChar().equals(Operators.LTE)) { return ((expr + (walkForPlainText(node.children()[0], expr))) + \" <= \") + (walkForPlainText(node.children()[1], expr)); }else if (node.getNodeChar().equals(Operators.UNDER)) { return ((expr + (walkForPlainText(node.children()[0], expr))) + \" under \") + (walkForPlainText(node.children()[1], expr)); }else if (node.getNodeChar().equals(Operators.OVER)) { return ((expr + (walkForPlainText(node.children()[0], expr))) + \" over \") + (walkForPlainText(node.children()[1], expr)); }else if (node.getNodeChar().equals(Operators.UP)) { return ((expr + (walkForPlainText(node.children()[0], expr))) + \" up \") + (walkForPlainText(node.children()[1], expr)); }else if (node.getNodeChar().equals(Operators.DOWN)) { return ((expr + (walkForPlainText(node.children()[0], expr))) + \" down \") + (walkForPlainText(node.children()[1], expr)); }else { return ((((expr + (walkForPlainText(node.children()[0], expr))) + \" \") + (node.getNodeChar())) + \" \") + (walkForPlainText(node.children()[1], expr)); } }else if (node instanceof nodes.IUnaryOperator) { if (node.getNodeChar().equals(Operators.NOT)) { return (expr + \"! \") + (walkForPlainText(node.children()[0], expr)); }else { return ((expr + (node.getNodeChar())) + \" \") + (walkForPlainText(node.children()[0], expr)); } }else if (node instanceof nodes.NodeForBrackets) { java.lang.String openBracket = node.getNodeChar(); java.lang.String closeBracket; if (openBracket.equals(Operators.LFLOOR)) { openBracket = \"|_\"; closeBracket = \"_|\"; }else if (openBracket.equals(Operators.LCEILING)) { openBracket = \"|'\"; closeBracket = \"'|\"; }else { openBracket = \"(\"; closeBracket = \")\"; } return ((((expr + openBracket) + \" \") + (walkForPlainText(node.children()[0], expr))) + \" \") + closeBracket; }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2872/buggy-version/src.nodes.Node.java", "BodyUseAPI": ["nodes.Node.walkForPlainText(node.children()[1],java.lang.String)", "node.getNodeChar().equals(Operators.LTE)", "nodes.INode.children()", "nodes.INode.getNodeChar()", "node.getNodeChar().equals(Operators.OR)", "nodes.INode.children()", "nodes.INode.children()", "nodes.INode.children()", "nodes.Node.walkForPlainText(node.children()[1],java.lang.String)", "nodes.INode.children()", "nodes.INode.children()", "nodes.Node.walkForPlainText(node.children()[0],java.lang.String)", "nodes.INode.children()", "nodes.Node.walkForPlainText(node.children()[0],java.lang.String)", "nodes.Node.walkForPlainText(node.children()[0],java.lang.String)", "nodes.INode.children()", "nodes.Node.walkForPlainText(node.children()[0],java.lang.String)", "nodes.Node.walkForPlainText(node.children()[1],java.lang.String)", "nodes.INode.getNodeChar()", "nodes.INode.children()", "nodes.Node.walkForPlainText(node.children()[0],java.lang.String)", "nodes.INode.getNodeChar()", "node.getNodeChar().equals(Operators.GTE)", "nodes.INode.children()", "nodes.INode.children()", "nodes.INode.getNodeChar()", "nodes.Node.walkForPlainText(node.children()[1],java.lang.String)", "nodes.INode.getNodeChar()", "nodes.Node.walkForPlainText(node.children()[1],java.lang.String)", "nodes.INode.children()", "node.getNodeChar().equals(Operators.NOT)", "nodes.Node.walkForPlainText(node.children()[0],java.lang.String)", "nodes.Node.walkForPlainText(node.children()[0],java.lang.String)", "nodes.INode.children()", "nodes.INode.children()", "nodes.INode.children()", "node.getNodeChar().equals(Operators.OVER)", "nodes.Node.walkForPlainText(node.children()[1],java.lang.String)", "nodes.INode.getNodeChar()", "nodes.INode.children()", "nodes.INode.getNodeChar()", "node.getNodeChar().equals(Operators.REVERSE_IMPLICATION)", "nodes.Node.walkForPlainText(node.children()[1],java.lang.String)", "nodes.INode.getNodeChar()", "nodes.INode.getNodeChar()", "nodes.INode.getNodeChar()", "nodes.INode.children()", "nodes.Node.walkForPlainText(node.children()[1],java.lang.String)", "nodes.Node.walkForPlainText(node.children()[1],java.lang.String)", "nodes.Node.walkForPlainText(node.children()[1],java.lang.String)", "nodes.Node.walkForPlainText(node.children()[1],java.lang.String)", "nodes.INode.children()", "nodes.INode.children()", "nodes.Node.walkForPlainText(node.children()[0],java.lang.String)", "nodes.INode.children()", "nodes.INode.children()", "nodes.Node.walkForPlainText(node.children()[0],java.lang.String)", "nodes.INode.getNodeChar()", "nodes.Node.walkForPlainText(node.children()[0],java.lang.String)", "nodes.INode.getNodeChar()", "nodes.INode.children()", "nodes.INode.children()", "node.getNodeChar().equals(Operators.UNDER)", "nodes.Node.walkForPlainText(node.children()[1],java.lang.String)", "nodes.INode.children()", "nodes.Node.walkForPlainText(node.children()[0],java.lang.String)", "nodes.Node.walkForPlainText(node.children()[1],java.lang.String)", "nodes.Node.walkForPlainText(node.children()[0],java.lang.String)", "node.getNodeChar().equals(Operators.IMPLICATION)", "nodes.INode.children()", "node.getNodeChar().equals(Operators.DOWN)", "nodes.INode.getNodeChar()", "nodes.INode.getNodeChar()", "nodes.Node.walkForPlainText(node.children()[0],java.lang.String)", "nodes.INode.children()", "nodes.Node.walkForPlainText(node.children()[0],java.lang.String)", "node.getNodeChar().equals(Operators.UP)", "node.getNodeChar().equals(Operators.NOT_EQUIVAL)", "node.getNodeChar().equals(Operators.EQUIVAL)", "node.getNodeChar().equals(Operators.AND)", "nodes.INode.children()", "nodes.INode.getNodeChar()", "nodes.INode.children()", "nodes.INode.children()", "nodes.Node.walkForPlainText(node.children()[0],java.lang.String)", "nodes.INode.getNodeChar()", "nodes.INode.getNodeChar()", "nodes.Node.walkForPlainText(node.children()[0],java.lang.String)"], "Fixed commit": "6fc0e658bbf689c22d1c7f6c5ffcc633db61d185", "Url": "https://api.github.com/repos/jj05y/Final-Year-Project-Theorem-Proving-Assitant", "Date": "2017-01-10T19:56:23Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((x < (displayArea.length)) && (x > 0)) && (y < (displayArea[0].length))) && (y > 0)) { displayArea[x][y] = currentImg; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6157/buggy-version/src.main.java.tjp.wiji.gui.TextCollection.java", "BodyUseAPI": [], "Fixed commit": "635ee1aaf2be094bea88a5ef6a6bdf6235cb9c04", "Url": "https://api.github.com/repos/karobar/Wiji", "Date": "2017-03-05T00:02:09Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tabDrawerData.hasDrawerForList())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3639/buggy-version/tabdrawer.src.main.java.com.ashazar.tabdrawer.TabDrawer.java", "BodyUseAPI": [], "Fixed commit": "d2a4d326cc9b74d9e93c5f1159f306e8f78853d8", "Url": "https://api.github.com/repos/ashazar/TabDrawer", "Date": "2017-01-25T10:35:44Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isReadOnly())) { ensureGovernorHasField(new org.springframework.roo.classpath.details.FieldMetadataBuilder(getIterableToAddCantBeNullConstant())); ensureGovernorHasField(new org.springframework.roo.classpath.details.FieldMetadataBuilder(getIterableToRemoveCantBeNullConstant())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2699/buggy-version/addon-jpa.addon.src.main.java.org.springframework.roo.addon.jpa.addon.entity.JpaEntityMetadata.java", "BodyUseAPI": [], "Fixed commit": "97051e593832ee24eeea062c1019840eb0e76058", "Url": "https://api.github.com/repos/spring-projects/spring-roo", "Date": "2017-02-16T18:13:48Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result.hasErrors()) { com.rainasmoon.onepay.web.LoginController.LOGGER.warn(\"Login has error.\"); return \"login\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5572/buggy-version/onepay.src.main.java.com.rainasmoon.onepay.web.LoginController.java", "BodyUseAPI": [], "Fixed commit": "5f2866819a59390bb17bcc8222b8a2a80bd7b013", "Url": "https://api.github.com/repos/rainasmoon/online-application", "Date": "2016-06-24T08:03:09Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (file == null) { response.setStatus(response.SC_NO_CONTENT); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5572/buggy-version/onepay.src.main.java.com.rainasmoon.onepay.web.ImageController.java", "BodyUseAPI": [], "Fixed commit": "5f2866819a59390bb17bcc8222b8a2a80bd7b013", "Url": "https://api.github.com/repos/rainasmoon/online-application", "Date": "2016-06-24T08:03:09Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.dubbo.rpc.Invocation.getAttachments()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (attachments != null) { attachments.remove(com.yunxi.common.tracer.constants.TracerConstants.TRACE_ID); attachments.remove(com.yunxi.common.tracer.constants.TracerConstants.RPC_ID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8754/buggy-version/dubbo-cluster.src.main.java.com.alibaba.dubbo.rpc.cluster.support.FailoverClusterInvoker.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.remove(com.yunxi.common.tracer.constants.TracerConstants.RPC_ID)", "java.util.Map<java.lang.String, java.lang.String>.remove(com.yunxi.common.tracer.constants.TracerConstants.TRACE_ID)"], "Fixed commit": "6713d7b01207f60553d554072df713c84350667a", "Url": "https://api.github.com/repos/leukony/yxdubbo", "Date": "2017-03-02T03:30:46Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.lucene.util.Constants.WINDOWS) { basePath = basePath.replaceFirst(\"^/(.:/)\", \"$1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3390/buggy-version/solr.core.src.java.org.apache.solr.core.backup.repository.LocalFileSystemRepository.java", "BodyUseAPI": [], "Fixed commit": "d5a7ca79f3ac88d4de54c013eb6b29f72e52c907", "Url": "https://api.github.com/repos/gandhiramu/lucene-solr", "Date": "2016-08-04T16:43:05Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.anpmech.mpd.connection.CommandResult.AbstractResultIterator<T>.previousIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index != 0) { index += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2731/buggy-version/JMPDComm.src.main.java.com.anpmech.mpd.connection.CommandResult.java", "BodyUseAPI": [], "Fixed commit": "1c3ba22daa22f3cc6cc189905f7eb6f110d4d03a", "Url": "https://api.github.com/repos/abarisain/dmix", "Date": "2015-04-04T15:00:57Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vub.model.UserDao.findByUserName(user.getUserName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (user2 == null) { java.lang.System.out.println(\"User not detected. Redirecting to login/create\"); return \"redirect:/login?auth=fail\"; }else { if (user.getPassword().equals(user2.getPassword())) { return \"redirect:/profile/\" + (user2.getUserName()); }else { java.lang.System.out.println(\"Passwords don't match with username\"); return \"redirect:/login?auth=fail\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4623/buggy-version/JavaServer.calzone.src.main.java.com.vub.controller.LoginController.java", "BodyUseAPI": ["user.getPassword().equals(user2.getPassword())", "com.vub.model.User.getUserName()", "com.vub.model.User.getPassword()"], "Fixed commit": "9847b8cd42637d5a8a08bbd41e15fb03364f3e16", "Url": "https://api.github.com/repos/nicocarraggi/CalZone", "Date": "2013-12-09T04:04:29Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((Machine.gamedrv.name.equals(\"airwolf\")) || (Machine.gamedrv.name.equals(\"flashgal\"))) || (Machine.gamedrv.name.equals(\"skywolf\"))) || (Machine.gamedrv.name.equals(\"skywolf2\"))) { i = (i) + ((int) ((i) * 0.78)); }else { j = (j) + ((int) ((i) * 0.78)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6058/buggy-version/emulator.src.arcadeflex.MainApplet.java", "BodyUseAPI": [], "Fixed commit": "286204a573b9c6dcf6af075f374250087dcff10d", "Url": "https://api.github.com/repos/georgemoralis/arcadeflex036", "Date": "2014-12-24T10:27:18Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.egit.github.core.event.CommitCommentPayload.getComment()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (comment != null) { com.gh4a.utils.IntentUtils.openCommitInfoActivity(getActivity(), repoOwner, repoName, comment.getCommitId(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/522/buggy-version/src.com.gh4a.fragment.EventListFragment.java", "BodyUseAPI": ["org.eclipse.egit.github.core.CommitComment.getCommitId()", "com.gh4a.utils.IntentUtils.openCommitInfoActivity(getActivity(),java.lang.String,java.lang.String,comment.getCommitId(),int)"], "Fixed commit": "d581af394378759888ec6e7790b4b3bea0da1c68", "Url": "https://api.github.com/repos/slapperwan/gh4a", "Date": "2014-09-08T11:04:45Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.egit.github.core.event.PullRequestReviewCommentPayload.getComment()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (comment != null) { return res.getString(R.string.event_commit_comment_desc, comment.getCommitId().substring(0, 7), comment.getBody()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/522/buggy-version/src.com.gh4a.adapter.FeedAdapter.java", "BodyUseAPI": ["org.eclipse.egit.github.core.CommitComment.getCommitId()", "android.content.res.Resources.getString(R.string.event_commit_comment_desc,comment.getCommitId().substring(0, 7),comment.getBody())", "comment.getCommitId().substring(int,int)", "org.eclipse.egit.github.core.CommitComment.getBody()"], "Fixed commit": "d581af394378759888ec6e7790b4b3bea0da1c68", "Url": "https://api.github.com/repos/slapperwan/gh4a", "Date": "2014-09-08T11:04:45Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((ci.getRequestId()) + 1) >= (requestList.size())) && ((((java.lang.System.nanoTime()) - (ci.getStartTimeNS())) / 1000000000) < (org.asl.client.AbstractClient.DURATION_SEC))) { ci.setRequestId(2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7676/buggy-version/src.org.asl.client.completionHandlers.ClientReadCompletionHandler.java", "BodyUseAPI": ["org.asl.client.ClientInfo.setRequestId(int)"], "Fixed commit": "ec64c4e9ba8695bbf902e27e775516faf8467501", "Url": "https://api.github.com/repos/geischtli/ASL", "Date": "2015-11-04T08:43:11Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (changed) { long count = requestCount.incrementAndGet(); if (count > 2) { if (cx.ath.mancel01.webframework.compiler.HotSwapAgent.enabled) { try { cx.ath.mancel01.webframework.compiler.HotSwapAgent.reload(newDefinitions.toArray(new java.lang.instrument.ClassDefinition[newDefinitions.size()])); } catch (java.lang.Exception e) { e.printStackTrace(); stop(); start(); } }else { stop(); start(); } }else { stop(); start(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8745/buggy-version/core.src.main.java.cx.ath.mancel01.webframework.FrameworkHandler.java", "BodyUseAPI": [], "Fixed commit": "fc949c2a69b09948c854a04f0b964db68fe89614", "Url": "https://api.github.com/repos/mathieuancelin/web-framework", "Date": "2011-02-17T19:18:52Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == airports) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3858/buggy-version/src.com.ds.avare.storage.DataBaseHelper.java", "BodyUseAPI": [], "Fixed commit": "c9bb20bc1610b1ebf64ed721db1e2c987ed1dfcb", "Url": "https://api.github.com/repos/rasii/avare", "Date": "2014-07-13T14:59:45Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.ServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (str != null) { java.util.ArrayList<java.lang.String> list = new cn.edu.nju.apoc.helper.SplitMachine().split(str); java.lang.String r = \"\"; for (java.lang.String s : list) { r += db.getSynonym(s); } request.setAttribute(\"searchString\", r); java.lang.System.out.println(r); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3407/buggy-version/src.cn.edu.nju.apoc.infilter.synonymDetector.java", "BodyUseAPI": ["cn.edu.nju.apoc.helper.SplitMachine.split(java.lang.String)"], "Fixed commit": "3a64e7d95cdcfe9cb2b91181cd0b476ce8e4b569", "Url": "https://api.github.com/repos/kivinju/ProductCompare", "Date": "2014-04-04T14:15:03Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(extendedMap.containsKey(owner))) extendedMap.put(owner, new java.util.HashMap<>());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8443/buggy-version/Common.src.com.polydes.common.ext.ExtendableObjectRegistry.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.util.HashMap<java.lang.String, T>>.put(java.lang.String,java.util.HashMap<>)"], "Fixed commit": "3c276ba3c751a43cbaa1861f7b6411f11d1ed2fa", "Url": "https://api.github.com/repos/justin-espedal/polydes", "Date": "2015-11-26T11:30:22Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != job) { jobName = job.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6572/buggy-version/app.org.tdl.vireo.error.impl.ErrorLogImpl.java", "BodyUseAPI": ["org.tdl.vireo.job.JobMetadata.getName()"], "Fixed commit": "88c40549679cc28078a8d1a4761baf6c0c497e81", "Url": "https://api.github.com/repos/TAMULib/Vireo", "Date": "2014-01-21T16:02:10Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mFile.delete()) mAdapter.refresh(); else com.devspark.appmsg.AppMsg.makeText(getActivity(), R.string.cannot_delete, AppMsg.STYLE_ALERT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8170/buggy-version/src.com.andrew.apollo.ui.fragments.FileFragment.java", "BodyUseAPI": [], "Fixed commit": "a8408b5f9a11bcb32f4ef97da977fa4cd42e87df", "Url": "https://api.github.com/repos/elemir/Apollo", "Date": "2014-08-08T11:22:04Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.andrew.apollo.adapters.FileAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((file.canExecute()) && (file.canRead())) { mDirectory = file; mAdapter.changeDirectory(mDirectory); mListView.setSelection(0); }else com.devspark.appmsg.AppMsg.makeText(getActivity(), R.string.permission_denied, AppMsg.STYLE_ALERT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8170/buggy-version/src.com.andrew.apollo.ui.fragments.FileFragment.java", "BodyUseAPI": [], "Fixed commit": "a8408b5f9a11bcb32f4ef97da977fa4cd42e87df", "Url": "https://api.github.com/repos/elemir/Apollo", "Date": "2014-08-08T11:22:04Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jelena.ishrana.model.Recept.getListaNamirnica()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (namirniceRecept == null) java.lang.System.out.println(\"trtrtmrttraatrtert null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3817/buggy-version/ishrana.src.main.java.com.jelena.ishrana.controller.ReceptiController.java", "BodyUseAPI": [], "Fixed commit": "73d214765aebcc6878c15c6aa9741168827d7363", "Url": "https://api.github.com/repos/uranka/jdbcTemplate-ishrana", "Date": "2017-11-01T08:43:32Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jelena.ishrana.model.Recept.getListaNamirnica()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (namirniceRecept != null) { if (!(namirniceRecept.isEmpty())) { for (com.jelena.ishrana.model.Namirnica nRecept : namirniceRecept) { if (nRecept.equals(namirnica)) { inRecept = true; break; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3817/buggy-version/ishrana.src.main.java.com.jelena.ishrana.controller.ReceptiController.java", "BodyUseAPI": ["java.util.List<com.jelena.ishrana.model.Namirnica>.isEmpty()"], "Fixed commit": "73d214765aebcc6878c15c6aa9741168827d7363", "Url": "https://api.github.com/repos/uranka/jdbcTemplate-ishrana", "Date": "2017-11-01T08:43:32Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastCheckTime) == 0L) lastCheckTime = lastLoadTime;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2419/buggy-version/src.main.java.org.aeonbits.owner.PropertiesManager.java", "BodyUseAPI": [], "Fixed commit": "607a4975ef13292642a3c3d08c2fb9c16e6a2541", "Url": "https://api.github.com/repos/lviggiano/owner", "Date": "2013-06-14T19:29:11Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tc.oc.tracker.trackers.OwnedMobTracker.getOwner(org.bukkit.entity.LivingEntity)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mobOwner != null) return new tc.oc.tracker.damage.OwnedMobDamageInfo(mob, mobOwner);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7140/buggy-version/src.main.java.tc.oc.tracker.damage.resolvers.OwnedMobDamageResolver.java", "BodyUseAPI": [], "Fixed commit": "b4abbf7bcb82b0ced15eeb11be20622e258d635d", "Url": "https://api.github.com/repos/YukonAppleGeek/Tracker", "Date": "2013-05-31T03:39:00Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tc.oc.tracker.trackers.OwnedMobTracker.getOwner(org.bukkit.entity.LivingEntity)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mobOwner != null) return new tc.oc.tracker.damage.OwnedMobDamageInfo(mob, mobOwner);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7140/buggy-version/src.main.java.tc.oc.tracker.damage.resolvers.OwnedMobDamageResolver.java", "BodyUseAPI": [], "Fixed commit": "b4abbf7bcb82b0ced15eeb11be20622e258d635d", "Url": "https://api.github.com/repos/YukonAppleGeek/Tracker", "Date": "2013-05-31T03:39:00Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.axelby.podax.PlayerService._player) != null) com.axelby.podax.PlayerService._player.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7482/buggy-version/src.com.axelby.podax.PlayerService.java", "BodyUseAPI": [], "Fixed commit": "606af2015873ec8e5f890dca1c54930950df0be7", "Url": "https://api.github.com/repos/thasmin/Podax", "Date": "2012-04-14T02:05:59Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.axelby.podax.PlayerService._player) != null) com.axelby.podax.PlayerService._player.pause();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7482/buggy-version/src.com.axelby.podax.PlayerService.java", "BodyUseAPI": [], "Fixed commit": "606af2015873ec8e5f890dca1c54930950df0be7", "Url": "https://api.github.com/repos/thasmin/Podax", "Date": "2012-04-14T02:05:59Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.axelby.podax.PlayerService._player) != null) com.axelby.podax.PlayerService._player.pause();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7482/buggy-version/src.com.axelby.podax.PlayerService.java", "BodyUseAPI": [], "Fixed commit": "606af2015873ec8e5f890dca1c54930950df0be7", "Url": "https://api.github.com/repos/thasmin/Podax", "Date": "2012-04-14T02:05:59Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.wso2.carbon.registry.indexing.indexer.IndexDocumentCreator.log.isDebugEnabled()) { org.wso2.carbon.registry.indexing.indexer.IndexDocumentCreator.log.debug((((\"Indexed allowed roles for the resource: \" + (resourcePath)) + \" : \") + allowedRolesLowerCase)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8108/buggy-version/components.registry.org.wso2.carbon.registry.indexing.src.main.java.org.wso2.carbon.registry.indexing.indexer.IndexDocumentCreator.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)"], "Fixed commit": "7b8aa0e0820c8f7a7e8312d74aab562c58550d12", "Url": "https://api.github.com/repos/wso2/carbon-registry", "Date": "2016-02-28T08:00:05Z"},
{"Line": "=>553", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.example.henzoshimada.feeltrip.FeelTripApplication.getFrag().equals(\"map\")) { updateMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3080/buggy-version/app.src.main.java.com.example.henzoshimada.feeltrip.MainScreen.java", "BodyUseAPI": [], "Fixed commit": "035262ec0098cb38808a6223c951c73ef14ed5a2", "Url": "https://api.github.com/repos/CMPUT301W17T11/FeelTrip", "Date": "2017-04-04T21:37:46Z"},
{"Line": "=>626", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.example.henzoshimada.feeltrip.FeelTripApplication.getFrag().equals(\"map\")) { updateMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3080/buggy-version/app.src.main.java.com.example.henzoshimada.feeltrip.MainScreen.java", "BodyUseAPI": [], "Fixed commit": "035262ec0098cb38808a6223c951c73ef14ed5a2", "Url": "https://api.github.com/repos/CMPUT301W17T11/FeelTrip", "Date": "2017-04-04T21:37:46Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (amount > 0) balance += amount;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4662/buggy-version/src.banksccountpackage.BankAccount.java", "BodyUseAPI": [], "Fixed commit": "be660028e708604da9274687ad8c386114dbab6f", "Url": "https://api.github.com/repos/BougrineSander/BankAccountRepo", "Date": "2017-03-24T13:07:08Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entity instanceof net.minecraft.entity.player.EntityPlayerMP) { ((net.minecraft.entity.player.EntityPlayerMP) (entity)).connection.setPlayerLocation(x, y, z, entity.rotationYaw, entity.rotationPitch); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/9038/buggy-version/src.main.java.net.torocraft.teletoro.teleporter.TeletoryTeleporter.java", "BodyUseAPI": ["((net.minecraft.entity.player.EntityPlayerMP) (entity)).connection.setPlayerLocation(double,double,double,entity.rotationYaw,entity.rotationPitch)"], "Fixed commit": "a365c4f52c0ffa0f63b282c035dcf409d94fec6b", "Url": "https://api.github.com/repos/ToroCraft/TeleToro", "Date": "2016-06-22T19:56:52Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag) { first.reset(); second.reset(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2578/buggy-version/GeneticAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "c79efbd0c8489d83205439b707101ac8f6a35e8f", "Url": "https://api.github.com/repos/NUS-Anonymous/CS3243", "Date": "2017-04-04T14:25:14Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (o.getName().equals(org.apache.hadoop.hive.ql.exec.GroupByOperator.getOperatorName())) { org.apache.hadoop.hive.ql.exec.GroupByOperator gbyop = ((org.apache.hadoop.hive.ql.exec.GroupByOperator) (o)); gbyop.setForcedForward(false); if (!(this.bytesWritableGroupKey.equals(o.getBytesWritableGroupKey()))) { o.setBytesWritableGroupKey(this.bytesWritableGroupKey); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4895/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.exec.CorrelationReducerDispatchOperator.java", "BodyUseAPI": ["org.apache.hadoop.hive.ql.exec.Operator<? extends org.apache.hadoop.hive.ql.plan.OperatorDesc>.getBytesWritableGroupKey()", "this.bytesWritableGroupKey.equals(o.getBytesWritableGroupKey())", "org.apache.hadoop.hive.ql.exec.Operator<? extends org.apache.hadoop.hive.ql.plan.OperatorDesc>.setBytesWritableGroupKey(this.bytesWritableGroupKey)"], "Fixed commit": "cd6e3f6d590c89723e351075da79d27bee244bc5", "Url": "https://api.github.com/repos/yhuai/hive", "Date": "2012-09-24T15:28:32Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pipers[id].length) >= 4) denseStrategy(pipers, pipers_played, rats, moves);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1930/buggy-version/src.pppp.g9.Player.java", "BodyUseAPI": ["pppp.g9.Player.denseStrategy(pppp.sim.Point[][],boolean[][],pppp.sim.Point[],pppp.sim.Move[])"], "Fixed commit": "09623dbbec8e774bea066732ebb2fb7fd3b7b3f6", "Url": "https://api.github.com/repos/arturenault/pppp", "Date": "2015-09-22T20:41:17Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(multipart instanceof org.cyclops.integrateddynamics.modcompat.mcmultipart.PartPartType)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5699/buggy-version/src.main.java.org.cyclops.integrateddynamics.modcompat.mcmultipart.PartCable.java", "BodyUseAPI": [], "Fixed commit": "6d31043b0003d7bc2a25dd04d56429b3f9911ba9", "Url": "https://api.github.com/repos/CyclopsMC/IntegratedDynamics", "Date": "2016-01-12T18:27:24Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (identifier != null) { if (context.identifiers.contains(identifier)) { throw new java.lang.IllegalArgumentException((\"The query already uses identifier: \" + identifier)); } context.identifiers.add(identifier); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6341/buggy-version/src.main.java.org.tierlon.neo4j.query.support.querybuilder.NodeEdgeBuilder.java", "BodyUseAPI": [], "Fixed commit": "6d1cada92273bec3a215a1aa3655c7dcedd7cf8f", "Url": "https://api.github.com/repos/jmccune/neo4j-repository", "Date": "2015-07-28T21:37:58Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(model.containsAttribute(\"passwordRecoveryDTO\"))) { model.addAttribute(\"passwordRecoveryDTO\", new org.registrator.community.dto.PasswordRecoveryDTO()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3655/buggy-version/src.main.java.org.registrator.community.controller.PasswordRecoveryController.java", "BodyUseAPI": ["org.springframework.ui.Model.addAttribute(java.lang.String,org.registrator.community.dto.PasswordRecoveryDTO)"], "Fixed commit": "1037fff1007cd10703f6b55c8501026758ea6373", "Url": "https://api.github.com/repos/softservedata/resources", "Date": "2016-02-09T11:24:11Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (attempts >= (Constants.MAX_AUTH_ATTEMPTS)) { java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7189/buggy-version/Project.src.Transfer.java", "BodyUseAPI": [], "Fixed commit": "b87384fec67fcb52d120f48842684eb23eba5ac8", "Url": "https://api.github.com/repos/cthill/FileTransferCS380", "Date": "2016-11-28T05:39:36Z"},
{"Line": "=>1097", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"main\".equals(currentMethod.getName())) { java.lang.String signature = currentMethod.getSignature(); if (\"([Ljava/lang/String;)V\".equals(signature)) { java.lang.String className = currentMethod.getClassName(); java.lang.String entrypointClassName = config.getEntryPointClassName(); if (className.equals(entrypointClassName)) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1518/buggy-version/icecaptools.src.icecaptools.compiler.Compiler.java", "BodyUseAPI": ["icecaptools.MethodOrFieldDesc.getClassName()", "icecaptools.MethodOrFieldDesc.getSignature()"], "Fixed commit": "b5afb1703442901e7f66f84c3cee8a6fa1fc1887", "Url": "https://api.github.com/repos/scj-devel/hvm-scj", "Date": "2015-03-20T11:04:41Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (nameInput == null) { throw new java.lang.Exception(\"Cancel\"); }else if (((nameInput.length()) < 1) || ((nameInput.length()) > 50)) { throw new java.lang.Exception(\"Out Of Bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5363/buggy-version/abstractFactory.AbstractPlayerFactory.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.length()"], "Fixed commit": "5a23ba443df8b47ec9ef252e4d3a9d7936ea808a", "Url": "https://api.github.com/repos/captparis/TheChase", "Date": "2016-05-29T09:16:12Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e.getMessage().equals(\"Cancel\")) { throw e; }else { javax.swing.JOptionPane.showMessageDialog(null, (\"Your name must be between 1 \" + \"and 50 characters long.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5363/buggy-version/abstractFactory.AbstractPlayerFactory.java", "BodyUseAPI": [], "Fixed commit": "5a23ba443df8b47ec9ef252e4d3a9d7936ea808a", "Url": "https://api.github.com/repos/captparis/TheChase", "Date": "2016-05-29T09:16:12Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((titleId) == null) titleId = new it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap<java.lang.String>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4723/buggy-version/snapshots.cloud9-contrib.src.main.edu.umd.cloud9.collection.wikipedia.ExtractAnchor.java", "BodyUseAPI": [], "Fixed commit": "7b2cb9dc5c404b7c9101fe29b1236ba930e5c649", "Url": "https://api.github.com/repos/antoine-tran/maven-repo", "Date": "2013-09-16T18:08:37Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentChar()) == ((char) (de.mizapf.timt.basic.BasicCruncher.EOL))) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5809/buggy-version/src.de.mizapf.timt.basic.BasicCruncher.java", "BodyUseAPI": [], "Fixed commit": "74d87d1b9e6e453d5d9dd7469c66d2e5929c50b3", "Url": "https://api.github.com/repos/mizapf/tiimagetool", "Date": "2016-09-04T11:10:37Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(reviewsToBeSaved.containsKey(review.getName()))) reviewsToBeSaved.put(review.getName(), review); else reviewsNeedToResolve.put(review.getName(), review);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6443/buggy-version/src.main.java.com.anakinfoxe.reviewmonitor.service.CrawlerServiceImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.anakinfoxe.reviewmonitor.model.Review>.put(review.getName(),com.anakinfoxe.reviewmonitor.model.Review)", "java.util.Map<java.lang.String, com.anakinfoxe.reviewmonitor.model.Review>.put(review.getName(),com.anakinfoxe.reviewmonitor.model.Review)", "com.anakinfoxe.reviewmonitor.model.Review.getName()", "com.anakinfoxe.reviewmonitor.model.Review.getName()"], "Fixed commit": "8c746ba0562ce118d74537f6ec74112104ad8c96", "Url": "https://api.github.com/repos/AnakinFoxe/ReviewMonitor", "Date": "2015-05-20T08:20:48Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.faces.component.behavior.ClientBehavior.getRender()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((null != render) && (!(render.isEmpty()))) { update = \"\"; for (java.lang.String u : render) { update += u + \" \"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2539/buggy-version/src.main.java.net.bootsfaces.component.ajax.AJAXRenderer.java", "BodyUseAPI": [], "Fixed commit": "ee8326175a7b77fdb2dc997504a1268c65301f78", "Url": "https://api.github.com/repos/TheCoder4eu/BootsFaces-OSP", "Date": "2015-08-30T19:49:44Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dam < 21) arraylist.add(((net.minecraft.util.EnumChatFormatting.DARK_GRAY) + (TFC.API.Constant.Global.STONE_ALL[dam]))); else arraylist.add(((net.minecraft.util.EnumChatFormatting.DARK_RED) + \"Unknown\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8818/buggy-version/TFC_Shared.src.TFC.Items.ItemBlocks.ItemDirt.java", "BodyUseAPI": ["java.util.List.add(((net.minecraft.util.EnumChatFormatting.DARK_GRAY) + (TFC.API.Constant.Global.STONE_ALL[dam])))"], "Fixed commit": "0dea4bd02e8e2eabbf6b11b935a52e07eb94bec2", "Url": "https://api.github.com/repos/Deadrik/TFCraft", "Date": "2014-04-12T07:04:27Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((raum.getRaumart()) == (RaumArt.Ende)) { _endRaum = raum; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5964/buggy-version/src.de.uni_hamburg.informatik.sep.zuul.multiplayer.server.raum.RaumBauer.java", "BodyUseAPI": [], "Fixed commit": "7a158d98f6626d240d61bb05f2f79822cc6076e3", "Url": "https://api.github.com/repos/FlaShG/SEP12", "Date": "2012-09-20T13:40:22Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["HYPJSON.parseJSONArray(java.lang.String)", "HYPJSON.parseJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((arrayA.size()) != (arrayB.size())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6395/buggy-version/Java.HYPJSON.java", "BodyUseAPI": [], "Fixed commit": "816a0fe6c54793c8f17734f41d40158114967d4a", "Url": "https://api.github.com/repos/hyperassembler/Library", "Date": "2014-08-08T20:54:42Z"},
{"Line": "=>1020", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchProgress.getVisibility()) != (android.view.View.VISIBLE)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8291/buggy-version/library.src.main.java.com.arlib.floatingsearchview.FloatingSearchView.java", "BodyUseAPI": [], "Fixed commit": "cc945219141f9f13d4c4005a654c619469e3580c", "Url": "https://api.github.com/repos/Tengio/floatingsearchview", "Date": "2016-11-24T13:16:32Z"},
{"Line": "=>1006", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchProgress.getVisibility()) != (android.view.View.GONE)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8291/buggy-version/library.src.main.java.com.arlib.floatingsearchview.FloatingSearchView.java", "BodyUseAPI": [], "Fixed commit": "cc945219141f9f13d4c4005a654c619469e3580c", "Url": "https://api.github.com/repos/Tengio/floatingsearchview", "Date": "2016-11-24T13:16:32Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputFrom.getText().toString().equals(inputTo.getText().toString())) { android.widget.Toast.makeText(this, this.getResources().getString(R.string.field_validation_same_input), Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/217/buggy-version/src.com.app.getconnected.activities.TransportActivity2.java", "BodyUseAPI": [], "Fixed commit": "95640230527403c5e99c19d2dccc43b05d356f75", "Url": "https://api.github.com/repos/00stefan00/ITACT_GetConnected", "Date": "2013-11-01T10:41:20Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.limit) == 0) { ret = java.lang.String.format(\"%s | total: $%.2f | limit: none\", this.eventName, this.eventTotal); }else { ret = java.lang.String.format(\"%s | total: $%.2f | limit: $%d\", this.eventName, this.eventTotal, this.limit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5818/buggy-version/app.src.main.java.umbf16cs443.extrack.db.models.Event.java", "BodyUseAPI": [], "Fixed commit": "b320dda970d0ba2415b9c0b7b26813bdb275605a", "Url": "https://api.github.com/repos/kwokinou/ExTrack", "Date": "2016-12-17T19:40:30Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((placesAdapter) != null) { placesAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3330/buggy-version/app.src.main.java.blogr.vpm.fr.blogr.activity.PostPlacesFragment.java", "BodyUseAPI": [], "Fixed commit": "5df60d36baeb3a466254eeafd25f9c6173558ca7", "Url": "https://api.github.com/repos/vpmalley/tpblogr", "Date": "2015-03-23T00:12:19Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.googlecode.wicket.jquery.ui.plugins.wysiwyg.settings.WysiwygLibrarySettings.get()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((settings.getEditorJavaScriptResourceReference()) != null) { this.add(settings.getEditorJavaScriptResourceReference()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6806/buggy-version/wicket-jquery-ui-plugins.src.main.java.com.googlecode.wicket.jquery.ui.plugins.wysiwyg.WysiwygBehavior.java", "BodyUseAPI": ["com.googlecode.wicket.jquery.ui.plugins.wysiwyg.WysiwygBehavior.add(settings.getEditorJavaScriptResourceReference())", "com.googlecode.wicket.jquery.ui.plugins.wysiwyg.settings.WysiwygLibrarySettings.getEditorJavaScriptResourceReference()"], "Fixed commit": "e2ed846d4aeb7efc3afcebe8fa338890461a5962", "Url": "https://api.github.com/repos/sebfz1/wicket-jquery-ui", "Date": "2015-01-30T18:01:21Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (nextRenderableAndVisible == null) item = ((com.vaadin.ui.MenuBar.MenuItem) (parent.getWidget())).addItem(text, icon, command); else item = ((com.vaadin.ui.MenuBar.MenuItem) (parent.getWidget())).addItemBefore(text, icon, command, ((com.vaadin.ui.MenuBar.MenuItem) (nextRenderableAndVisible.getWidget())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5869/buggy-version/org.semanticsoft.vaaclipse.presentation.src.org.semanticsoft.vaaclipse.presentation.renderers.MenuItemRenderer.java", "BodyUseAPI": ["org.eclipse.e4.ui.model.application.ui.MUIElement.getWidget()", "((com.vaadin.ui.MenuBar.MenuItem) (parent.getWidget())).addItemBefore(java.lang.String,com.vaadin.terminal.Resource,com.vaadin.ui.MenuBar.Command,((com.vaadin.ui.MenuBar.MenuItem) (nextRenderableAndVisible.getWidget())))"], "Fixed commit": "2f0951f080ac1fe7428d78728234cb1f41ed8fdf", "Url": "https://api.github.com/repos/semanticsoft/vaaclipse", "Date": "2012-12-11T22:14:30Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(element.isToBeRendered())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5869/buggy-version/org.semanticsoft.vaaclipse.presentation.src.org.semanticsoft.vaaclipse.presentation.renderers.MenuItemRenderer.java", "BodyUseAPI": [], "Fixed commit": "2f0951f080ac1fe7428d78728234cb1f41ed8fdf", "Url": "https://api.github.com/repos/semanticsoft/vaaclipse", "Date": "2012-12-11T22:14:30Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (startX >= (mHeaderColumnWidth)) { canvas.drawLine(startX, startY, (startX + (mWidthPerDay)), startY, mCurrentTimeLinePaint); canvas.drawCircle(startX, startY, 6.0F, mCurrentTimeCirclePaint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7384/buggy-version/library.src.main.java.com.alamkanak.weekview.WeekView.java", "BodyUseAPI": ["android.graphics.Canvas.drawLine(float,float,float,float,android.graphics.Paint)", "android.graphics.Canvas.drawCircle(float,float,float,android.graphics.Paint)"], "Fixed commit": "70e462813605ebcf9c0d21a418e0e0b8a52810ac", "Url": "https://api.github.com/repos/antonkrasov/Android-Week-View", "Date": "2015-04-15T23:35:42Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (params != null) { int i = 0; for (java.lang.String key : params.keySet()) { sb.append(((i == 0) && (!(url.contains(\"?\"))) ? \"?\" : \"&\")); sb.append(key).append(\"=\").append(com.google.gwt.http.client.URL.encodeQueryString(params.get(key))); i++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1642/buggy-version/src.main.java.com.gmail.kompotik.gwtupld.client.UploadHandlerAbstract.java", "BodyUseAPI": ["com.google.gwt.http.client.URL.encodeQueryString(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.keySet()", "java.lang.StringBuilder.append(com.google.gwt.http.client.URL.encodeQueryString(params.get(key)))", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "fd1cad922935a79f44ee2e361cab76806b7983c4", "Url": "https://api.github.com/repos/kompot/gwtupld", "Date": "2011-11-22T19:25:49Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.biojava.nbio.structure.io.BondMaker.getAtomFromRecord(linkRecord.getName1(),linkRecord.getAltLoc1(),linkRecord.getResName1(),linkRecord.getChainID1(),linkRecord.getResSeq1(),linkRecord.getiCode1())", "org.biojava.nbio.structure.io.BondMaker.getAtomFromRecord(linkRecord.getName2(),linkRecord.getAltLoc2(),linkRecord.getResName2(),linkRecord.getChainID2(),linkRecord.getResSeq2(),linkRecord.getiCode2())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(a.get(i).equals(b.get(i)))) { new org.biojava.nbio.structure.io.BondImpl(a.get(i), b.get(i), 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2802/buggy-version/biojava-structure.src.main.java.org.biojava.nbio.structure.io.BondMaker.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, org.biojava.nbio.structure.io.Atom>.get(int)", "java.util.Map<java.lang.Integer, org.biojava.nbio.structure.io.Atom>.get(int)"], "Fixed commit": "636929bce3d2eab6dd2209a03b93f56aab22493d", "Url": "https://api.github.com/repos/heuermh/biojava", "Date": "2016-08-15T16:46:10Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(a1.get(i).equals(a2.get(i)))) { bond = new org.biojava.nbio.structure.io.BondImpl(a1.get(i), a2.get(i), 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2802/buggy-version/biojava-structure.src.main.java.org.biojava.nbio.structure.io.BondMaker.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, org.biojava.nbio.structure.io.Atom>.get(int)", "java.util.Map<java.lang.Integer, org.biojava.nbio.structure.io.Atom>.get(int)"], "Fixed commit": "636929bce3d2eab6dd2209a03b93f56aab22493d", "Url": "https://api.github.com/repos/heuermh/biojava", "Date": "2016-08-15T16:46:10Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.biojava.nbio.structure.io.BondMaker.getAtomFromRecord(java.lang.String,java.lang.String,java.lang.String,disulfideBond.getChainID2(),disulfideBond.getResnum2(),disulfideBond.getInsCode2())", "org.biojava.nbio.structure.io.BondMaker.getAtomFromRecord(java.lang.String,java.lang.String,java.lang.String,disulfideBond.getChainID1(),disulfideBond.getResnum1(),disulfideBond.getInsCode1())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(a.get(i).equals(b.get(i)))) { org.biojava.nbio.structure.io.Bond ssbond = new org.biojava.nbio.structure.io.BondImpl(a.get(i), b.get(i), 1); structure.addSSBond(ssbond); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2802/buggy-version/biojava-structure.src.main.java.org.biojava.nbio.structure.io.BondMaker.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, org.biojava.nbio.structure.io.Atom>.get(int)", "java.util.Map<java.lang.Integer, org.biojava.nbio.structure.io.Atom>.get(int)"], "Fixed commit": "636929bce3d2eab6dd2209a03b93f56aab22493d", "Url": "https://api.github.com/repos/heuermh/biojava", "Date": "2016-08-15T16:46:10Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((unmodifiedUrl_) != null) && (!(unmodifiedUrl_.equals(org.rstudio.studio.client.workbench.views.viewer.ViewerPane.ABOUT_BLANK)))) { frame_.getElement().getStyle().setBackgroundColor(\"#FFF\"); }else { frame_.getElement().getStyle().clearBackgroundColor(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1921/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.viewer.ViewerPane.java", "BodyUseAPI": [], "Fixed commit": "7c0e5a7b10444ad1a433295fd8c379376fb5a32e", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2017-08-17T16:05:26Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (LDAPConstants.LDAP_INVALID_CREDENTIALS.equals(ire.getLDAPErrorCode())) { throw org.forgerock.json.resource.ResourceException.newResourceException(401, \"Invalid user credentials.\"); }else { org.forgerock.openam.core.rest.IdentityRestUtils.debug.warning(((\"IdentityRestUtils.changePassword() :: IdRepoException occurred while \" + \"changing the password for user: \") + username), ire); throw new org.forgerock.json.resource.InternalServerErrorException(\"An error occurred while trying to change the password\", ire); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3694/buggy-version/openam-core-rest.src.main.java.org.forgerock.openam.core.rest.IdentityRestUtils.java", "BodyUseAPI": ["com.sun.identity.shared.debug.Debug.warning(java.lang.String,com.sun.identity.idm.IdRepoException)"], "Fixed commit": "3834c2f1c11a56c6e9579a350c79ade3546c40a0", "Url": "https://api.github.com/repos/OpenRock/OpenAM", "Date": "2015-12-15T12:07:00Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<org.tekkotsu.api.TransitionInstance>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((current.getNumOfTargets()) != 0) { if ((current.getNumOfTargets()) > 1) { transitions += \"{\"; for (int j = 0; j < (current.getNumOfTargets()); j++) { transitions += targets.get(j).getLabel(); if (j != ((current.getNumOfTargets()) - 1)) { transitions += \", \"; } } transitions += \"}\"; }else { transitions += (current.getTargets().get(0).getLabel()) + \" \"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3412/buggy-version/src.org.tekkotsu.api.BehaviorWriter.java", "BodyUseAPI": ["org.tekkotsu.api.TransitionInstance.getNumOfTargets()", "org.tekkotsu.api.TransitionInstance.getTargets()", "current.getTargets().get(int)", "current.getTargets().get(0).getLabel()", "org.tekkotsu.api.TransitionInstance.getNumOfTargets()", "org.tekkotsu.api.TransitionInstance.getNumOfTargets()"], "Fixed commit": "eecce92532aa2b0de099bc3916d877db0d96bdab", "Url": "https://api.github.com/repos/toledoalbert/composerapi", "Date": "2013-06-29T04:17:52Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (worldObj.isRemote) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/704/buggy-version/src.main.java.techreborn.powerSystem.RFProviderTile.java", "BodyUseAPI": [], "Fixed commit": "984b502dedb168bc6d9908a9dd8e53fa613ad31c", "Url": "https://api.github.com/repos/TechReborn/TechReborn", "Date": "2015-07-23T09:13:37Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m.getStock()) > 0) { android.content.Intent i = new android.content.Intent(this, es.unizar.aisolutions.aimovie.activity.UserInfo.class); long id = getIntent().getExtras().getLong(es.unizar.aisolutions.aimovie.activity.MovieInfo.EXTRA_MOVIE_ID); i.putExtra(UserInfo.EXTRA_MOVIE_ID, id); startActivity(i); }else { android.widget.Toast.makeText(getApplicationContext(), R.string.movie_not_available, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5600/buggy-version/app.src.main.java.es.unizar.aisolutions.aimovie.activity.MovieInfo.java", "BodyUseAPI": [], "Fixed commit": "387872bb801ab90ed6b76cb5271183ad6085fb5e", "Url": "https://api.github.com/repos/aiSolutions-unizar/aiMovie", "Date": "2015-06-01T20:14:02Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(input.getText().toString())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((m.getStock()) + add) < 0) { android.widget.Toast.makeText(getApplicationContext(), R.string.minimum_stock, Toast.LENGTH_SHORT).show(); m.setStock(0); }else { m.setStock(((m.getStock()) + add)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5600/buggy-version/app.src.main.java.es.unizar.aisolutions.aimovie.activity.MovieInfo.java", "BodyUseAPI": ["es.unizar.aisolutions.aimovie.data.Movie.setStock(int)", "es.unizar.aisolutions.aimovie.data.Movie.getStock()", "es.unizar.aisolutions.aimovie.data.Movie.setStock(((m.getStock()) + add))"], "Fixed commit": "387872bb801ab90ed6b76cb5271183ad6085fb5e", "Url": "https://api.github.com/repos/aiSolutions-unizar/aiMovie", "Date": "2015-06-01T20:14:02Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((outline) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8159/buggy-version/org.strategoxt.imp.runtime.src.org.strategoxt.imp.runtime.services.outline.SpoofaxOutlinePage.java", "BodyUseAPI": [], "Fixed commit": "78f5bc0534a9e916819bd2899d817b64fce92b29", "Url": "https://api.github.com/repos/metaborg/spoofax", "Date": "2013-08-08T00:52:54Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.lwjgl.input.Keyboard.getEventKey()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (keyToAction.containsKey(key)) notifyObservers(keyToAction.get(key));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5688/buggy-version/se.chalmers.roguelike.InputManager.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, se.chalmers.roguelike.InputManager.InputAction>.get(int)", "se.chalmers.roguelike.InputManager.notifyObservers(se.chalmers.roguelike.InputManager.InputAction)"], "Fixed commit": "67d65e11ba99589420f615333a17a823bdd45237", "Url": "https://api.github.com/repos/ravertass/KandidatRoguelike", "Date": "2014-03-19T12:25:39Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (keyToAction.containsKey(pressedKey)) notifyObservers(keyToAction.get(pressedKey));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5688/buggy-version/se.chalmers.roguelike.InputManager.java", "BodyUseAPI": ["se.chalmers.roguelike.InputManager.notifyObservers(se.chalmers.roguelike.InputManager.InputAction)", "java.util.HashMap<java.lang.Integer, se.chalmers.roguelike.InputManager.InputAction>.get(int)"], "Fixed commit": "67d65e11ba99589420f615333a17a823bdd45237", "Url": "https://api.github.com/repos/ravertass/KandidatRoguelike", "Date": "2014-03-19T12:25:39Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((balance) != 0) { balance = 0; isaac.bastion.Bastion.getBastionStorage().updated(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/233/buggy-version/src.main.java.isaac.bastion.BastionBlock.java", "BodyUseAPI": [], "Fixed commit": "6ded9f8b106535960d2fcb3bff0dc2915a8bc0b3", "Url": "https://api.github.com/repos/Aleksey-Terzi/Bastion", "Date": "2017-01-13T14:34:50Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.oscarehr.common.dao.AppointmentStatusDao.findAll(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((results.size()) >= 100) { org.oscarehr.managers.ScheduleManager.logger.error(\"We reached a hard coded limit, why >100 statuses?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5853/buggy-version/src.main.java.org.oscarehr.managers.ScheduleManager.java", "BodyUseAPI": [], "Fixed commit": "c6a960c68f320b969e29552de14d38742d5aa800", "Url": "https://api.github.com/repos/scoophealth/oscar", "Date": "2014-10-23T14:23:35Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mBuySellToggle.isEnabled())) { builder.setShareQuantity(mQuantity.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1653/buggy-version/StockExchange.src.com.dspit.stockExchange.uicomponents.TabPanel.java", "BodyUseAPI": [], "Fixed commit": "97861ef1e2dd23264e56d0eac34f77bd6a7603ca", "Url": "https://api.github.com/repos/DSpit/StockExchange", "Date": "2014-10-27T07:06:35Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vision.getTemplateImage()) == null) { throw new java.lang.Exception(\"Template image is required when vision is enabled.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6360/buggy-version/src.main.java.org.openpnp.machine.reference.feeder.ReferenceDragFeeder.java", "BodyUseAPI": [], "Fixed commit": "18ef6972fdf36c5872d7202ff4c840d902cb0ead", "Url": "https://api.github.com/repos/tracklogic/openpnp", "Date": "2017-08-19T18:57:33Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((vision.getAreaOfInterest().getWidth()) == 0) || ((vision.getAreaOfInterest().getHeight()) == 0)) { throw new java.lang.Exception(\"Area of Interest is required when vision is enabled.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6360/buggy-version/src.main.java.org.openpnp.machine.reference.feeder.ReferenceDragFeeder.java", "BodyUseAPI": [], "Fixed commit": "18ef6972fdf36c5872d7202ff4c840d902cb0ead", "Url": "https://api.github.com/repos/tracklogic/openpnp", "Date": "2017-08-19T18:57:33Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clearSchedule) { this.clear(); this.clearSchedule = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1679/buggy-version/src.main.java.abmutils.schedule.Schedule.java", "BodyUseAPI": [], "Fixed commit": "8af603c9cb5e5da71c4a2a521d0964813bf8d428", "Url": "https://api.github.com/repos/colinsheppard/abmutils", "Date": "2015-07-08T19:16:21Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (!(newValue == null)) { logger.info((\"changing content of tableView with content of \" + (newValue.getName()))); currentTable = newValue; fillTable(newValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1478/buggy-version/src.main.java.controllers.TableViewController.java", "BodyUseAPI": ["controllers.TableViewController.1.fillTable(model.data.DataTable)", "model.data.DataTable.getName()", "java.util.logging.Logger.info((\"changing content of tableView with content of \" + (newValue.getName())))"], "Fixed commit": "a6ac8d124ef70b8ed93f6c8f835ab4ba3b5059ec", "Url": "https://api.github.com/repos/clanghout/Health-Informatics-3", "Date": "2015-05-29T19:52:55Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eem.frame.gun.kdtreeGuessFactorGun.size()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (Nresults > 0) { neigbor = cluster.get((Nresults - 1)); bestDistance = java.lang.Math.max(neigbor.distance, distThreshold); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/557/buggy-version/gun.kdtreeGuessFactorGun.java", "BodyUseAPI": ["eem.frame.gun.kdtreeGuessFactorGun.get(int)"], "Fixed commit": "34eb66b49bb9d8088e3fa469baa7b0d4c39ea843", "Url": "https://api.github.com/repos/evgmik/robocode_bots.frame-lib", "Date": "2017-09-22T03:38:15Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((percent > 100) || (percent < 0)) throw new java.security.InvalidParameterException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6657/buggy-version/src.main.java.TimeDependentInterestCalculationStrategy.java", "BodyUseAPI": [], "Fixed commit": "80e2f095f4110437e10cbb2de70c6acc0be60257", "Url": "https://api.github.com/repos/PaulinaSadowska/BankLibrary", "Date": "2016-04-07T16:56:51Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pl.byd.wsg.promand.project5.model.ExpenseEntry.getPhoto()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (byteArray != null) { previewImageThumbnail = ((android.widget.ImageView) (findViewById(R.id.imageView2))); android.graphics.Bitmap photo = android.graphics.BitmapFactory.decodeByteArray(byteArray, 0, byteArray.length); previewImageThumbnail.setImageBitmap(photo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/189/buggy-version/app.src.main.java.pl.byd.wsg.promand.project5.dashboards.ExpenseEntryDetailActivity.java", "BodyUseAPI": ["android.graphics.BitmapFactory.decodeByteArray(byte[],int,int)"], "Fixed commit": "9fbebb1f4a9e7e999f76d307b08134e462aa0075", "Url": "https://api.github.com/repos/PROMAND/Project-5", "Date": "2014-03-18T20:02:42Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mUseTwoPaneLayout) { com.nanodegree.android.watchthemall.ShowsFragment.CustomRunnable customRunnable = new com.nanodegree.android.watchthemall.ShowsFragment.CustomRunnable(position); mShowPostersGridView.postDelayed(customRunnable, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3483/buggy-version/app.src.main.java.com.nanodegree.android.watchthemall.ShowsFragment.java", "BodyUseAPI": [], "Fixed commit": "8da93e86a0ab548509f370066573db06502b8caa", "Url": "https://api.github.com/repos/duqueGZ/Capstone-Project", "Date": "2016-06-30T22:24:14Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.context.i18n.LocaleContextHolder.getLocale()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (locale.toString().equals(\"nl\")) { message = \"Onjuiste gegevens!\"; }else { message = \"Invalid credentials!\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4627/buggy-version/src.main.java.com.bionic.controller.LoginController.java", "BodyUseAPI": [], "Fixed commit": "e6973e6df1542053160430111a6858372e4d0060", "Url": "https://api.github.com/repos/BU-git/rp16_engines", "Date": "2016-05-30T19:49:04Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.ibuildthecloud.gdapi.context.ApiContext.getContext().getPolicy()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (policy == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8644/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.dao.impl.AuthDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "3325853fefde4534373252c7a6c7a9a3893b3478", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-04-07T01:32:49Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((move.getSrc()) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6013/buggy-version/app.src.main.java.own.projects.lemiroapp.GameBoard.java", "BodyUseAPI": [], "Fixed commit": "ba6f3753c782c2c99e8d49566b213a26dcf43424", "Url": "https://api.github.com/repos/Aedge90/Nine-Mens-Morris-Android", "Date": "2016-12-19T11:07:28Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < 11) { sharingIntent.setPackage(\"com.android.bluetooth\"); }else { sharingIntent.setComponent(new android.content.ComponentName(\"com.android.bluetooth\", \"com.android.bluetooth.opp.BluetoothOppLauncherActivity\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7056/buggy-version/app.src.main.java.com.example.dell.filetransfer_bluetooth.bluetooth.BluetoothService.java", "BodyUseAPI": [], "Fixed commit": "d2117ff651e094bf622d43a92945422cd94b3318", "Url": "https://api.github.com/repos/xjchuan/FileTransfer_bluetooth", "Date": "2016-04-15T07:16:59Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((title == null) || (title.isEmpty())) { itemmetatag.remove(offlineplayerutils.internal.itemstack.meta.specific.WrappedBookMeta.AUTHOR_TAG); }else { itemmetatag.setString(offlineplayerutils.internal.itemstack.meta.specific.WrappedBookMeta.AUTHOR_TAG, title); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/9174/buggy-version/src.offlineplayerutils.internal.itemstack.meta.specific.WrappedBookMeta.java", "BodyUseAPI": ["offlineplayerutils.internal.itemstack.meta.specific.WrappedBookMeta.setString(java.lang.String,java.lang.String)"], "Fixed commit": "1abde962bfd517d710fd049a42a1fe1cd5c01aad", "Url": "https://api.github.com/repos/ShevchikUnsupportedProjects/OfflinePlayerUtils", "Date": "2015-03-09T19:17:36Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (minuten == 1) { timerText += \" minuut\"; }else { timerText += \" minuten\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1611/buggy-version/app.src.main.java.com.amaze.quit.app.HealthProgress.java", "BodyUseAPI": [], "Fixed commit": "2b7881a901cbec6280f9d980f5dfd99ce6801e67", "Url": "https://api.github.com/repos/A-Maze/Quit", "Date": "2014-06-22T17:59:55Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getHints()) == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2472/buggy-version/woServer.src.edu.umass.ckc.wo.content.Problem.java", "BodyUseAPI": [], "Fixed commit": "640e00557085e997c4b9b82d6e9bae03c080f8e5", "Url": "https://api.github.com/repos/marshall62/mathspring", "Date": "2015-01-23T22:20:36Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((allHints) != null) return ((java.util.List<edu.umass.ckc.wo.content.Hint>) (((java.util.ArrayList<edu.umass.ckc.wo.content.Hint>) (allHints)).clone())); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2472/buggy-version/woServer.src.edu.umass.ckc.wo.content.Problem.java", "BodyUseAPI": [], "Fixed commit": "640e00557085e997c4b9b82d6e9bae03c080f8e5", "Url": "https://api.github.com/repos/marshall62/mathspring", "Date": "2015-01-23T22:20:36Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(context instanceof android.app.Activity)) launchIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6895/buggy-version/VideoLocker.src.main.java.org.edx.mobile.view.Router.java", "BodyUseAPI": [], "Fixed commit": "3f4568a69b9ac0224e613641b1c186d32026ee9e", "Url": "https://api.github.com/repos/edx/edx-app-android", "Date": "2015-03-16T13:22:52Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context instanceof android.app.Activity) launchIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP); else launchIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6895/buggy-version/VideoLocker.src.main.java.org.edx.mobile.view.Router.java", "BodyUseAPI": [], "Fixed commit": "3f4568a69b9ac0224e613641b1c186d32026ee9e", "Url": "https://api.github.com/repos/edx/edx-app-android", "Date": "2015-03-16T13:22:52Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!colsShrinked) && (cmid < cend)) { if ((numbers[colMinRow][(cmid + 1)]) < colMin) { cstart = cmid + 1; colsShrinked = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/585/buggy-version/general.src.main.java.LocalMinima2D.java", "BodyUseAPI": [], "Fixed commit": "bb9c1874a48c99f1909419842da9c38365e942cf", "Url": "https://api.github.com/repos/nvijayv/programming", "Date": "2016-11-23T12:35:15Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (m.matches()) { zk.put(\"edge\", org.zkoss.web.servlet.Servlets.getVersion(m)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2451/buggy-version/zweb.src.org.zkoss.web.servlet.Servlets.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,double)", "org.zkoss.web.servlet.Servlets.getVersion(java.util.regex.Matcher)"], "Fixed commit": "c86ed12889772f5be47cfe7d00b69ea6928af3ed", "Url": "https://api.github.com/repos/wenninghsu/zk", "Date": "2016-06-20T04:50:26Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["be.vdab.servlets.LoginServlet.mergeMandjes(be.vdab.entities.Klant,((be.vdab.Mandje) (session.getAttribute(\"mandje\"))))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(mandje.getMandjelijnen().isEmpty())) { session.setAttribute(\"mandje\", mandje); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2581/buggy-version/src.main.java.be.vdab.servlets.LoginServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.setAttribute(java.lang.String,be.vdab.Mandje)"], "Fixed commit": "b7f4fb37dc534ef817c955ff17d8e8fe0315c8cb", "Url": "https://api.github.com/repos/VDAB-compententiecentrum-Heverlee-Java/Cultuurhuis-2015-09", "Date": "2015-10-10T05:39:54Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (!((card == null) && (isDeck))) { for (final magic.ui.ICardSelectionListener listener : cardSelectionListeners) { listener.newCardSelected(card); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4622/buggy-version/src.magic.ui.CardTable.java", "BodyUseAPI": ["magic.ui.ICardSelectionListener.newCardSelected(magic.model.MagicCardDefinition)"], "Fixed commit": "b472c9e821600412d6d007ac8bbc934983cba82f", "Url": "https://api.github.com/repos/magarena/magarena", "Date": "2014-08-29T07:56:46Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isDeck)) { reselectLastCards(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4622/buggy-version/src.magic.ui.CardTable.java", "BodyUseAPI": [], "Fixed commit": "b472c9e821600412d6d007ac8bbc934983cba82f", "Url": "https://api.github.com/repos/magarena/magarena", "Date": "2014-08-29T07:56:46Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.plugins.git.GitSCM.createClient(hudson.model.BuildListener,hudson.EnvVars,hudson.model.AbstractBuild<?, ?>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (git.tagExists(buildnumber)) git.deleteTag(buildnumber);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7441/buggy-version/src.main.java.hudson.plugins.git.GitPublisher.java", "BodyUseAPI": ["org.jenkinsci.plugins.gitclient.GitClient.deleteTag(java.lang.String)"], "Fixed commit": "6fb6c64ba4d2382cbe9ef7aa8a7ac6a2be25ba46", "Url": "https://api.github.com/repos/jenkinsci/git-plugin", "Date": "2013-06-27T19:10:03Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((layer.getCellCount()) > 0) { for (Uniplay.Kernel.NGGameEngineMemoryCell cell : layer.getCells()) { Uniplay.Kernel.NGGameEngineMemoryAddress address = cell.getAddress(); setPosition(address.getOffset(), address.getBase()); setProperty(this, \"Background.ImageNumber\", cell.getValueAsInteger()); super.InternalRender(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6231/buggy-version/src.Uniplay.Workbench.NG2DGameFieldDisplayController.java", "BodyUseAPI": ["Uniplay.Storage.NG2DGameFieldLayer.getCells()"], "Fixed commit": "8db22fa89265a8c4219d0708195f1fd6ae6c439d", "Url": "https://api.github.com/repos/bart4223/Uniplay", "Date": "2014-12-14T13:39:54Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.osmand.plus.views.controls.MapRoutePreferencesControl.2.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (rp.routingParameter.getId().equals(\"short_way\")) { ch.setChecked((!(settings.FAST_ROUTE_MODE.get()))); }else { ch.setChecked(rp.isSelected(settings)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/9062/buggy-version/OsmAnd.src.net.osmand.plus.views.controls.MapRoutePreferencesControl.java", "BodyUseAPI": ["android.widget.CheckBox.setChecked(boolean)", "net.osmand.plus.views.controls.MapRoutePreferencesControl.LocalRoutingParameter.isSelected(net.osmand.plus.OsmandSettings)"], "Fixed commit": "49387436054143a587ec14a6904fa40e02b70f62", "Url": "https://api.github.com/repos/Bars107/Osmand", "Date": "2014-07-01T09:56:40Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rp.routingParameter.getId().equals(\"short_way\")) { settings.FAST_ROUTE_MODE.set((!isChecked)); }else { rp.setSelected(settings, isChecked); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/9062/buggy-version/OsmAnd.src.net.osmand.plus.views.controls.MapRoutePreferencesControl.java", "BodyUseAPI": ["net.osmand.plus.views.controls.MapRoutePreferencesControl.LocalRoutingParameter.setSelected(net.osmand.plus.OsmandSettings,boolean)"], "Fixed commit": "49387436054143a587ec14a6904fa40e02b70f62", "Url": "https://api.github.com/repos/Bars107/Osmand", "Date": "2014-07-01T09:56:40Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (unprotected) opts.add(new javax.management.Attribute(\"unprotected\", \"true\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7900/buggy-version/src.com.redhat.qe.katello.base.obj.KatelloRepo.java", "BodyUseAPI": [], "Fixed commit": "db9cfce9b9c6a5d45764045e6cee927818473eba", "Url": "https://api.github.com/repos/tkolhar/katello-api", "Date": "2013-04-23T14:41:20Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.canadensys.dataportal.vascan.impl.PropertyMapHelper.getRankLabelRange(taxon.getRank().getId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (rankLabelRange != null) { classificationList.addAll(taxonomyDAO.getAcceptedChildrenListFromNestedSets(taxon.getId(), rankLabelRange)); }else { classificationList.addAll(taxonomyDAO.getAcceptedChildrenListFromNestedSets(taxon.getId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7448/buggy-version/src.main.java.net.canadensys.dataportal.vascan.impl.NameServiceImpl.java", "BodyUseAPI": ["net.canadensys.dataportal.vascan.dao.TaxonomyDAO.getAcceptedChildrenListFromNestedSets(taxon.getId(),java.lang.String[])", "java.util.List<net.canadensys.dataportal.vascan.model.TaxonLookupModel>.addAll(taxonomyDAO.getAcceptedChildrenListFromNestedSets(taxon.getId(), rankLabelRange))"], "Fixed commit": "a84cf4fc0bb5e1e2ef7b8fcf8067452b5796d7a9", "Url": "https://api.github.com/repos/Canadensys/vascan", "Date": "2013-07-12T18:38:13Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wifiList.get(i).level) < (-65)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1490/buggy-version/WifiLocator.src.com.BandC.wifilocator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7a65d34d3fc798faef58d884512637808133f07f", "Url": "https://api.github.com/repos/l3uri1993/WifiLocator", "Date": "2015-05-08T13:02:06Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (azan != null) { azan = this.getNextAzan(); logger.info(azan.toString()); }else { logger.warn(\"Azan is null.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4200/buggy-version/Azan.src.com.nasimeshomal.MainJob.java", "BodyUseAPI": [], "Fixed commit": "65c29fd2e9c8101a401b07203b8ff2c4adec9447", "Url": "https://api.github.com/repos/mhdr/SobhanAzan", "Date": "2016-03-11T20:35:04Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mText.getText().toString().toLowerCase(java.util.Locale)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((com.maxistar.textpad.EditorActivity.selectionStart) < (t.length())) { mText.setSelection(com.maxistar.textpad.EditorActivity.selectionStart, com.maxistar.textpad.EditorActivity.selectionStart); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1999/buggy-version/src.com.maxistar.textpad.EditorActivity.java", "BodyUseAPI": [], "Fixed commit": "23203f420279bcdfbc77bde5c276552fcab20f65", "Url": "https://api.github.com/repos/maxistar/TextPad", "Date": "2016-02-05T08:27:22Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fossa.rolp.util.KlassenstufenUtils.getKlassenstufe(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (klassenstufe == 0) { return klassenname; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3381/buggy-version/src.org.fossa.rolp.util.KlassenstufenUtils.java", "BodyUseAPI": [], "Fixed commit": "92e2addc78dbf79c5821e35409cb439d3dc8264f", "Url": "https://api.github.com/repos/fossaag/rolp", "Date": "2014-11-24T14:45:22Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.fossa.rolp.util.KlassenstufenUtils.keineKlassenstufeEnthalten(klassenstufe)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3381/buggy-version/src.org.fossa.rolp.util.KlassenstufenUtils.java", "BodyUseAPI": [], "Fixed commit": "92e2addc78dbf79c5821e35409cb439d3dc8264f", "Url": "https://api.github.com/repos/fossaag/rolp", "Date": "2014-11-24T14:45:22Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isMainOrConfig(f)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2050/buggy-version/de.peeeq.wurstscript.src.de.peeeq.wurstscript.translation.imtranslation.StackTraceInjector.java", "BodyUseAPI": [], "Fixed commit": "133dd33c07fd50f02cb992cd7c35a96cd0934bdd", "Url": "https://api.github.com/repos/peq/WurstScript", "Date": "2013-10-15T11:07:59Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (result != null) { try { xmlParser.parseXML(result); android.util.Log.i(\"RSS Parser \", \"RSS parsed correctly!\"); } catch (java.lang.Exception e) { e.printStackTrace(); onComplete.onError(); } }else onComplete.onError();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4573/buggy-version/rssparser.src.main.java.com.prof.rssparser.Parser.java", "BodyUseAPI": ["com.prof.rssparser.XMLParser.parseXML(java.lang.String)"], "Fixed commit": "8d04e4477b99cba622195280ddc8ff5c91477cc3", "Url": "https://api.github.com/repos/prof18/RSS-Parser", "Date": "2017-12-14T08:43:18Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (response.isSuccessful()) return response.body().string();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4573/buggy-version/rssparser.src.main.java.com.prof.rssparser.Parser.java", "BodyUseAPI": ["okhttp3.Response.body()", "response.body().string()"], "Fixed commit": "8d04e4477b99cba622195280ddc8ff5c91477cc3", "Url": "https://api.github.com/repos/prof18/RSS-Parser", "Date": "2017-12-14T08:43:18Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (blank == ((text.length()) - 1)) { after = \"\"; }else { after = text.substring((blank + 2), text.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8715/buggy-version/src.edu.lclark.language.questions.FillInTheBlankQuestion.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "b97c5555e7b9fa393c58d37154333bfef354f1eb", "Url": "https://api.github.com/repos/PeterDrake/Language", "Date": "2014-04-15T20:35:00Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectingWord.length()) >= 8) { pts = 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5278/buggy-version/app.src.main.java.com.example.mymac.boggle.MainBoard.java", "BodyUseAPI": [], "Fixed commit": "c6d10ea2036233c7620168f9d041686ae248c28c", "Url": "https://api.github.com/repos/huynguyencs/BoggleAndroidApp", "Date": "2017-02-16T19:37:10Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloud.network.dao.NetworkDao.listByPhysicalNetwork(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (networkList != null) { for (com.cloud.network.dao.NetworkVO network : networkList) { if ((network.getBroadcastDomainType()) == (Networks.BroadcastDomainType.OpenDaylight)) { if (((network.getState()) != (Network.State.Shutdown)) && ((network.getState()) != (Network.State.Destroy))) { throw new com.cloud.utils.exception.CloudRuntimeException(\"This Controller can not be deleted as there are one or more logical networks provisioned by cloudstack.\"); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1503/buggy-version/plugins.network-elements.opendaylight.src.main.java.org.apache.cloudstack.network.opendaylight.agent.OpenDaylightControllerResourceManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "16d333f06dfaa1eac1d0ab74ab33d98fe8ed2ccb", "Url": "https://api.github.com/repos/apache/cloudstack", "Date": "2014-01-13T10:58:51Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cloudstack.network.ExternalNetworkDeviceManager.NetworkDevice.getNetworkDevice(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (networkDevice == null) { throw new com.cloud.utils.exception.CloudRuntimeException((\"No network device found for name \" + deviceName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1503/buggy-version/plugins.network-elements.opendaylight.src.main.java.org.apache.cloudstack.network.opendaylight.agent.OpenDaylightControllerResourceManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "16d333f06dfaa1eac1d0ab74ab33d98fe8ed2ccb", "Url": "https://api.github.com/repos/apache/cloudstack", "Date": "2014-01-13T10:58:51Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPlaying) { startProgress(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8219/buggy-version/src.com.ideabag.playtunes.fragment.TrackProgressFragment.java", "BodyUseAPI": [], "Fixed commit": "22e5b4b6d83f336c0df2018bdab9d13ab99ea1c4", "Url": "https://api.github.com/repos/impeccabledigital/PlayTunes", "Date": "2014-11-10T07:21:50Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((position >= 0) && (position < (mSortedData.size()))) { return mSortedData.get(position); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1528/buggy-version/app.src.main.java.com.door43.translationstudio.ui.translate.ChooseSourceTranslationAdapter.java", "BodyUseAPI": ["java.util.List<com.door43.translationstudio.ui.translate.ChooseSourceTranslationAdapter.ViewItem>.get(int)"], "Fixed commit": "6488cb6a22ab3d9443554f7a9d935029835d0f58", "Url": "https://api.github.com/repos/unfoldingWord-dev/ts-android", "Date": "2017-03-23T23:08:04Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(startdir.exists())) { throw new com.consol.citrus.exceptions.CitrusRuntimeException(((\"Test directory \" + (startdir.getAbsolutePath())) + \" does not exist\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4698/buggy-version/modules.citrus-core.src.main.java.com.consol.citrus.util.FileUtils.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()"], "Fixed commit": "5fa95c9b43129b4802d657e5e0d01ad0250ab69f", "Url": "https://api.github.com/repos/citrusframework/citrus", "Date": "2011-09-05T11:52:44Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getInt(Helper.SET_TOOTS_PER_PAGE,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((tmpStatuses.size()) != tootPerPage) { if (((tmpStatuses.size()) > 0) && ((java.lang.Long.parseLong(tmpStatuses.get(((tmpStatuses.size()) - 1)).getId())) > (java.lang.Long.parseLong(bookmark)))) { tmpStatuses.get(((tmpStatuses.size()) - 1)).setFetchMore(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5128/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.fragments.DisplayStatusFragment.java", "BodyUseAPI": ["tmpStatuses.get(((tmpStatuses.size()) - 1)).getId()", "java.util.ArrayList<fr.gouv.etalab.mastodon.client.Entities.Status>.size()", "java.lang.Long.parseLong(tmpStatuses.get(((tmpStatuses.size()) - 1)).getId())", "java.util.ArrayList<fr.gouv.etalab.mastodon.client.Entities.Status>.get(((tmpStatuses.size()) - 1))", "java.util.ArrayList<fr.gouv.etalab.mastodon.client.Entities.Status>.size()", "java.util.ArrayList<fr.gouv.etalab.mastodon.client.Entities.Status>.size()", "java.util.ArrayList<fr.gouv.etalab.mastodon.client.Entities.Status>.get(((tmpStatuses.size()) - 1))", "tmpStatuses.get(((tmpStatuses.size()) - 1)).setFetchMore(boolean)"], "Fixed commit": "7adfe497cd51d44c9c30f51f482eb3c3cd677db8", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-12-16T07:26:17Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((position + (tmpStatuses.size())) > 1) lv_status.scrollToPosition((position + (tmpStatuses.size())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5128/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.fragments.DisplayStatusFragment.java", "BodyUseAPI": ["java.util.ArrayList<fr.gouv.etalab.mastodon.client.Entities.Status>.size()", "android.support.v7.widget.RecyclerView.scrollToPosition((position + (tmpStatuses.size())))"], "Fixed commit": "7adfe497cd51d44c9c30f51f482eb3c3cd677db8", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-12-16T07:26:17Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tag.isScriptBase()) throw new railo.transformer.cfml.evaluator.EvaluatorException(\"tag loop-condition is not supported within cfscrip, use instead a while statement.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5821/buggy-version/railo-java.railo-core.src.railo.transformer.cfml.evaluator.impl.Loop.java", "BodyUseAPI": [], "Fixed commit": "84b8969ee8a58f6a6be139386c601ed96813a7a6", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-08-26T14:26:19Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(acr.browser.lightning.utils.UrlUtils.isSpecialUrl(item.getUrl()))) { if (mBookmarkManager.addBookmark(item)) { mBookmarks.add(item); java.util.Collections.sort(mBookmarks, new acr.browser.lightning.database.BookmarkManager.SortIgnoreCase()); mBookmarkAdapter.notifyDataSetChanged(); mEventBus.post(new acr.browser.lightning.bus.BookmarkEvents.Added(item)); updateBookmarkIndicator(event.url); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5448/buggy-version/app.src.main.java.acr.browser.lightning.fragment.BookmarksFragment.java", "BodyUseAPI": ["acr.browser.lightning.database.BookmarkManager.addBookmark(acr.browser.lightning.database.HistoryItem)", "java.util.List<acr.browser.lightning.database.HistoryItem>.add(acr.browser.lightning.database.HistoryItem)", "com.squareup.otto.Bus.post(acr.browser.lightning.bus.BookmarkEvents.Added)"], "Fixed commit": "23dc83fb6a69a39c6b1070fd254968c0713bdd42", "Url": "https://api.github.com/repos/kuc/Lightning-Browser", "Date": "2015-11-01T21:00:28Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrent) != 0) { paint.setColor(mRingForeground); canvas.drawArc(oval, mStart, mSweep, useCenter, paint); paint.setColor(oldColor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/966/buggy-version/app.src.main.java.org.mazn.roundanim.ProgressRingView.java", "BodyUseAPI": [], "Fixed commit": "a2144e35659824f90d626af6332424247359d72a", "Url": "https://api.github.com/repos/ms03001620/RoundAnim", "Date": "2015-08-20T07:51:50Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (columnHasCards(i)) { models.Card checkCard = getTopCard(i); if ((java.util.Objects.equals(removableCard.suit, checkCard.suit)) && ((removableCard.value) < (checkCard.value))) { removeCardFromCol(columnNumber); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7772/buggy-version/src.main.java.models.Game.java", "BodyUseAPI": ["models.Game.getTopCard(int)"], "Fixed commit": "4a028e56fcf013282dd6cf170872f6c2881e3447", "Url": "https://api.github.com/repos/cs361fall2017/team27", "Date": "2017-10-27T22:15:49Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(study.getDOI())) { node.setProperty(Study.DOI, study.getDOI()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5213/buggy-version/eol-globi-data-tool.src.main.java.org.eol.globi.tool.ReportGenerator.java", "BodyUseAPI": ["org.neo4j.graphdb.Node.setProperty(Study.DOI,study.getDOI())", "org.eol.globi.domain.Study.getDOI()"], "Fixed commit": "96316a24528d6abe3016e88978d86689bae50195", "Url": "https://api.github.com/repos/jhpoelen/eol-globi-data", "Date": "2015-05-11T20:06:21Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(study.getExternalId())) { node.setProperty(PropertyAndValueDictionary.EXTERNAL_ID, study.getExternalId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5213/buggy-version/eol-globi-data-tool.src.main.java.org.eol.globi.tool.ReportGenerator.java", "BodyUseAPI": ["org.eol.globi.domain.Study.getExternalId()", "org.neo4j.graphdb.Node.setProperty(PropertyAndValueDictionary.EXTERNAL_ID,study.getExternalId())"], "Fixed commit": "96316a24528d6abe3016e88978d86689bae50195", "Url": "https://api.github.com/repos/jhpoelen/eol-globi-data", "Date": "2015-05-11T20:06:21Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key.equals(\"warmupPerWorld\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/7957/buggy-version/core.src.main.java.com.andune.minecraft.hsp.config.ConfigWarmup.java", "BodyUseAPI": [], "Fixed commit": "b48a73e442b02b1b34653e3ad69647aed40b1e94", "Url": "https://api.github.com/repos/andune/HomeSpawnPlus", "Date": "2013-02-18T21:50:44Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((synonymsFile) != null) && ((synonymsFile.getRootElement().getContentSize()) > 1)) { backupdoc = new org.jdom2.Document(new org.jdom2.Element(\"backup_synonyms\")); backupdoc.getRootElement().addContent(synonymsFile.getRootElement().cloneContent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/2878/buggy-version/src.de.danielluedecke.zettelkasten.database.Synonyms.java", "BodyUseAPI": ["org.jdom2.Document.getRootElement()", "synonymsFile.getRootElement().cloneContent()", "backupdoc.getRootElement().addContent(synonymsFile.getRootElement().cloneContent())"], "Fixed commit": "6ac5cdabcf768709990a193aecca332f6729b3a5", "Url": "https://api.github.com/repos/sjPlot/Zettelkasten", "Date": "2014-04-05T07:26:44Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isHost)) { commander.setCoords(new cards.MovePoint(13, 7)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8274/buggy-version/src.main.Game.java", "BodyUseAPI": [], "Fixed commit": "952e7f69f39ab38287c14ec7b2c1e5cb9967c4bd", "Url": "https://api.github.com/repos/EnderL-Corp/JavaFinal", "Date": "2017-06-18T22:49:47Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((textField) != null) textField.dim = new com.remote.remote2d.engine.logic.Vector2(((dim.x) - 20), 40);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/1644/buggy-version/Remote2D.src.com.remote.remote2d.editor.GuiWindowSaveMap.java", "BodyUseAPI": [], "Fixed commit": "3a6582ccbf81ed95c558054089a80f09918074d6", "Url": "https://api.github.com/repos/Flafla2/Remote2D-Engine", "Date": "2013-11-28T03:19:45Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((o1.getItem()) != (o2.getItem())) { return (net.minecraft.item.Item.getIdFromItem(o1.getItem())) - (net.minecraft.item.Item.getIdFromItem(o2.getItem())); }else { return (o1.getItemDamage()) - (o2.getItemDamage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8483/buggy-version/src.main.java.moze_intel.projecte.utils.Comparators.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.getItem()", "net.minecraft.item.Item.getIdFromItem(o2.getItem())", "net.minecraft.item.Item.getIdFromItem(o1.getItem())", "net.minecraft.item.ItemStack.getItem()", "net.minecraft.item.ItemStack.getItemDamage()", "net.minecraft.item.ItemStack.getItemDamage()"], "Fixed commit": "e03ea4d2992458ddbe4eaed0f8e084fb6e4e65d6", "Url": "https://api.github.com/repos/sinkillerj/ProjectE", "Date": "2015-05-24T15:26:49Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.web.util.UrlPathHelper.getSanitizedPath(java.lang.String)", "org.springframework.web.util.UrlPathHelper.getServletPath(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((servletPath.indexOf(sanitizedPathWithinApp)) != (-1)) { path = getRemainingPath(sanitizedPathWithinApp, servletPath, false); }else { path = getRemainingPath(pathWithinApp, servletPath, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5929/buggy-version/spring-web.src.main.java.org.springframework.web.util.UrlPathHelper.java", "BodyUseAPI": ["org.springframework.web.util.UrlPathHelper.getRemainingPath(java.lang.String,java.lang.String,boolean)", "org.springframework.web.util.UrlPathHelper.getRemainingPath(java.lang.String,java.lang.String,boolean)"], "Fixed commit": "e97e0076c768e94d6e9025dd004ff01fa8ce84d5", "Url": "https://api.github.com/repos/mokosd/spring-framework", "Date": "2016-06-15T04:13:02Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isEnableDisp) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/5929/buggy-version/spring-web.src.main.java.org.springframework.web.util.UrlPathHelper.java", "BodyUseAPI": [], "Fixed commit": "e97e0076c768e94d6e9025dd004ff01fa8ce84d5", "Url": "https://api.github.com/repos/mokosd/spring-framework", "Date": "2016-06-15T04:13:02Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["TConstruct.playerTracker.getPlayerStats(player.username)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (stats != null) { stats.armor.dropItems(); stats.knapsack.dropItems(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6423/buggy-version/mods.tinker.tconstruct.util.TEventHandler.java", "BodyUseAPI": ["stats.armor.dropItems()", "stats.knapsack.dropItems()"], "Fixed commit": "fd4396e56b7d232aec615d9a843e3bfbbc54b9c5", "Url": "https://api.github.com/repos/mDiyo/TinkersConstruct", "Date": "2013-09-12T08:38:58Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeOfFinalization) != null) { jsonObject.put(\"timeOfFinalization\", timeOfFinalization.toString(com.tesis.commonclasses.TesisTimeFormatter.getFormatter())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/6441/buggy-version/CommonClasses.src.com.tesis.commonclasses.data.CallMadeData.java", "BodyUseAPI": [], "Fixed commit": "ea5979802f14cfa1ddf9cf3d3921ab2b2ac0abf1", "Url": "https://api.github.com/repos/Urik/Tesis", "Date": "2014-04-29T21:35:32Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tempPoints.size()) == 0) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/640/buggy-version/src.main.java.cluster.Cluster.java", "BodyUseAPI": [], "Fixed commit": "2b24571e9541a41e014299d8fa33f1f7cf8dd679", "Url": "https://api.github.com/repos/thanhhaibka/wsns", "Date": "2017-01-08T06:59:36Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mParams.isMutiPick())) { mGridGallery.setFastScrollEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/8264/buggy-version/source.src.com.habzy.image.picker.GridViewPicker.java", "BodyUseAPI": [], "Fixed commit": "57edae8cdb972b1dadb2af5a7b5acbbb1f841470", "Url": "https://api.github.com/repos/habzy/GridImagePicker", "Date": "2014-10-08T08:25:24Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (serviceRequestSearchCriteria.getAnonymous())) { if (true == (serviceRequestSearchCriteria.getAnonymous())) { java.lang.Object receiptresponse = null; try { receiptresponse = collectionRepository.searchReceipt(requestInfo, serviceRequestSearchCriteria.getTenantId(), serviceRequestSearchCriteria.getServiceRequestId()); } catch (java.lang.Exception e) { org.egov.citizen.service.CitizenPersistService.LOGGER.info((\"Couldn't fetch receiptdetails for srn: \" + (serviceRequestSearchCriteria.getServiceRequestId()))); } responeMap.put(\"receiptDetails\", receiptresponse); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3539/buggy-version/citizen.citizen-services.src.main.java.org.egov.citizen.service.CitizenPersistService.java", "BodyUseAPI": ["org.egov.citizen.web.contract.ServiceRequestSearchCriteria.getServiceRequestId()", "org.slf4j.Logger.info((\"Couldn't fetch receiptdetails for srn: \" + (serviceRequestSearchCriteria.getServiceRequestId())))", "org.egov.citizen.web.contract.ServiceRequestSearchCriteria.getAnonymous()", "org.egov.citizen.repository.CollectionRepository.searchReceipt(org.egov.common.contract.request.RequestInfo,serviceRequestSearchCriteria.getTenantId(),serviceRequestSearchCriteria.getServiceRequestId())", "org.egov.citizen.web.contract.ServiceRequestSearchCriteria.getTenantId()", "org.egov.citizen.web.contract.ServiceRequestSearchCriteria.getServiceRequestId()"], "Fixed commit": "ebee42614e49f500a33ce1c623a9ae88d8df746b", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-10-31T11:09:22Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (closedChannel) { close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3316/buggy-version/src.java.voldemort.store.socket.clientrequest.ClientRequestExecutorFactory.java", "BodyUseAPI": [], "Fixed commit": "ce844d5da3c19f5f3bc3401f117c5fee233fcb17", "Url": "https://api.github.com/repos/ctasada/voldemort", "Date": "2012-03-15T16:10:27Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.technosales.mobitrack.DaysAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((item.charAt(((item.length()) - 1))) == ',') item = item.substring(0, ((item.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/3058/buggy-version/app.src.main.java.com.technosales.mobitrack.DaysAdapter.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "9a343a9f8b596fa91ec8894864fb0585ddfd151e", "Url": "https://api.github.com/repos/lohanidamodar/technosales-mobitrack", "Date": "2015-12-04T08:40:59Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.Acrobot.ChestShop.Configuration.Properties.TURN_OFF_CRAFTBUKKIT_TELEPORTATION_BUGFIX)) { registerEvent(new com.Acrobot.ChestShop.Listeners.TeleportFixListener()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V67/4280/buggy-version/com.Acrobot.ChestShop.ChestShop.java", "BodyUseAPI": [], "Fixed commit": "951a065493453372e6addbf41866e23446253feb", "Url": "https://api.github.com/repos/Acrobot/ChestShop-3", "Date": "2013-02-15T18:04:20Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7640/buggy-version/projects.copper-monitoring.copper-monitoring-core.src.main.java.org.copperengine.monitoring.core.debug.DataTool.java", "BodyUseAPI": [], "Fixed commit": "4423e74c8848579b2dbe0dfd55de3e1e61d27cc6", "Url": "https://api.github.com/repos/copper-engine/copper-engine", "Date": "2014-01-15T16:19:14Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fit) { fit = false; groupEditor.fit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8360/buggy-version/editor.core.src.main.java.es.eucm.ead.editor.view.widgets.scenes.SceneEditor.java", "BodyUseAPI": [], "Fixed commit": "254b533d6af55f2d95ad4682eec845d9515acaa5", "Url": "https://api.github.com/repos/RotaruDan/ead", "Date": "2014-07-09T18:38:58Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<android.bluetooth.BluetoothDevice>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((((connectDevice) != null) && (device.getAddress().equals(connectDevice.getAddress()))) && (device.getName().equals(connectDevice.getName()))) { setUIDisconnectFrom(device); btMbot.RequestDisconnect(); }else { setUIConnecting(device); btMbot.RequestConnectDevice(device); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2832/buggy-version/app.src.main.java.com.inker.mblockly.BluetoothListActivity.java", "BodyUseAPI": ["com.inker.mblockly.BluetoothListActivity.7.setUIConnecting(android.bluetooth.BluetoothDevice)", "com.inker.mblockly.BluetoothListActivity.7.setUIDisconnectFrom(android.bluetooth.BluetoothDevice)", "com.inker.mblockly.MBotServer.MBotServiceUtil.RequestConnectDevice(android.bluetooth.BluetoothDevice)"], "Fixed commit": "8f3066e5e82a2539efe0b56df47a4f413f4c7924", "Url": "https://api.github.com/repos/inker610566/MBlocky", "Date": "2017-04-30T15:53:42Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connectDevice) != null) setUIScanAddItem(connectDevice);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2832/buggy-version/app.src.main.java.com.inker.mblockly.BluetoothListActivity.java", "BodyUseAPI": [], "Fixed commit": "8f3066e5e82a2539efe0b56df47a4f413f4c7924", "Url": "https://api.github.com/repos/inker610566/MBlocky", "Date": "2017-04-30T15:53:42Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.appointext.regex.RecognizeTime.sms.endsWith(\",\")) com.appointext.regex.RecognizeTime.sms = com.appointext.regex.RecognizeTime.sms.substring(0, ((com.appointext.regex.RecognizeTime.sms.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6969/buggy-version/src.com.appointext.regex.RecognizeTime.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "d55a0e3ac9d77c1b550478a82aadb511858e7b73", "Url": "https://api.github.com/repos/CodeGood/AppoinText", "Date": "2014-05-04T09:45:50Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (replaceVertex) { for (org.eclipse.swt.custom.StyleRange sr : styles) { sr.fontStyle = org.eclipse.swt.SWT.BOLD; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2083/buggy-version/src.org.nschmidt.ldparteditor.text.SyntaxFormatter.java", "BodyUseAPI": [], "Fixed commit": "72f15ad10926c725cf7503a1896146af0f12625a", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2015-11-24T18:46:50Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((darkTheme) != (preferences.getBoolean(\"DarkTheme\", false))) { finish(); if ((startIntent) == null) { startIntent = new android.content.Intent(this, de.azapps.mirakel.main_activity.MainActivity.class); startIntent.setAction(de.azapps.mirakel.main_activity.MainActivity.SHOW_LISTS); de.azapps.mirakel.helper.Log.wtf(de.azapps.mirakel.main_activity.MainActivity.TAG, \"startIntent is null by switching theme\"); } startActivity(startIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1650/buggy-version/src.de.azapps.mirakel.main_activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e11b27bf075640cc05e6cc859fa955ca3072a762", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2013-08-03T15:23:58Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((uUsers.get(i).displayname) == null) { emails.add(uUsers.get(i).email); }else { emails.add(uUsers.get(i).displayname); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8167/buggy-version/MakeYourTeam.app.src.main.java.com.smile.makeyourteam.AddUsersToGroupActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(uUsers.get(i).email)", "java.util.List<com.smile.makeyourteam.models.User>.get(int)", "java.util.ArrayList<java.lang.String>.add(uUsers.get(i).displayname)", "java.util.List<com.smile.makeyourteam.models.User>.get(int)"], "Fixed commit": "b0d140781aa490d886b7a24fa22d6b7a284d3629", "Url": "https://api.github.com/repos/xquangdang/MakeYourTeam", "Date": "2016-11-03T15:50:38Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sw == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6504/buggy-version/src.main.java.net.floodlightcontroller.core.internal.RoleChanger.java", "BodyUseAPI": [], "Fixed commit": "3206efd6cdebd92dd04bd98c4777cb4203f9555b", "Url": "https://api.github.com/repos/mwfong/floodlight", "Date": "2013-01-02T19:33:17Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["longitudeEditText.getContext().getResources().getInteger(R.integer.valid_latitude_value_max)", "longitudeEditText.getContext().getResources().getInteger(R.integer.valid_latitude_value_min)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((minLat >= latitude) || (latitude > maxLat)) { latitudeEditText.setError(getView().getContext().getString(R.string.error_invalid_latitude)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5436/buggy-version/app.src.main.java.fiskinfoo.no.sintef.fiskinfoo.UtilityRows.LatLonRow.java", "BodyUseAPI": [], "Fixed commit": "c5faacb6e448d30498cd9575daa7c5a92ff9835d", "Url": "https://api.github.com/repos/PeterHaro/Fiskinfoo", "Date": "2017-01-11T16:44:25Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["longitudeEditText.getContext().getResources().getInteger(R.integer.valid_longitude_value_max)", "longitudeEditText.getContext().getResources().getInteger(R.integer.valid_longitude_value_min)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((minLon >= longitude) || (longitude > maxLon)) { longitudeEditText.setError(getView().getContext().getString(R.string.error_invalid_longitude)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5436/buggy-version/app.src.main.java.fiskinfoo.no.sintef.fiskinfoo.UtilityRows.LatLonRow.java", "BodyUseAPI": [], "Fixed commit": "c5faacb6e448d30498cd9575daa7c5a92ff9835d", "Url": "https://api.github.com/repos/PeterHaro/Fiskinfoo", "Date": "2017-01-11T16:44:25Z"},
{"Line": "=>558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (side == metaside) { return new int[]{ 1 }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7506/buggy-version/src.main.java.micdoodle8.mods.galacticraft.planets.mars.tile.TileEntityGasLiquefier.java", "BodyUseAPI": [], "Fixed commit": "9d4ada754f4c610b2ab7a7bbfb69eba67d54d816", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2014-08-21T22:20:24Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (side == (metaside ^ 1)) { return new int[]{ 2 }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7506/buggy-version/src.main.java.micdoodle8.mods.galacticraft.planets.mars.tile.TileEntityGasLiquefier.java", "BodyUseAPI": [], "Fixed commit": "9d4ada754f4c610b2ab7a7bbfb69eba67d54d816", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2014-08-21T22:20:24Z"},
{"Line": "=>553", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((7 - (metaside ^ (metaside > 3 ? 0 : 1))) == (side ^ 1)) { return new int[]{ 3 }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7506/buggy-version/src.main.java.micdoodle8.mods.galacticraft.planets.mars.tile.TileEntityGasLiquefier.java", "BodyUseAPI": [], "Fixed commit": "9d4ada754f4c610b2ab7a7bbfb69eba67d54d816", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2014-08-21T22:20:24Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (meta == 0) return micdoodle8.mods.galacticraft.core.util.GCCoreUtil.translate(((this.getUnlocalizedName()) + \".description\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7506/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.blocks.BlockLandingPad.java", "BodyUseAPI": [], "Fixed commit": "9d4ada754f4c610b2ab7a7bbfb69eba67d54d816", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2014-08-21T22:20:24Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (matcher.group(4).equals(\"]\")) maxLimit = maxLimit + 1.0E-10;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6374/buggy-version/bundles.core.org.openhab.core.transform.src.main.java.org.openhab.core.transform.internal.service.ScaleTransformationService.java", "BodyUseAPI": [], "Fixed commit": "5d46629fc965041571eb815517b5c3205e39d0ce", "Url": "https://api.github.com/repos/ichsteffen/openhab", "Date": "2015-01-22T14:08:29Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (matcher.group(4).equals(\"[\")) maxLimit = maxLimit - 1.0E-10;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6374/buggy-version/bundles.core.org.openhab.core.transform.src.main.java.org.openhab.core.transform.internal.service.ScaleTransformationService.java", "BodyUseAPI": [], "Fixed commit": "5d46629fc965041571eb815517b5c3205e39d0ce", "Url": "https://api.github.com/repos/ichsteffen/openhab", "Date": "2015-01-22T14:08:29Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.adiBlum.adiblum.myapplication.helpers.SaveDataHelper.isSameDay(end, new java.util.Date())) { return new java.util.Date(); }else { cal.add(java.util.Calendar.DAY_OF_YEAR, 1); return cal.getTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2125/buggy-version/app.src.main.java.com.adiBlum.adiblum.myapplication.SummaryActivity.java", "BodyUseAPI": [], "Fixed commit": "fd8609d426d92b41296c5b5bdc3000b442d66d30", "Url": "https://api.github.com/repos/didiBlum/MyApplication", "Date": "2016-11-19T16:56:16Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (decoders == null) { copy = new java.util.ArrayList(); }else { copy = new java.util.ArrayList(decoders); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4468/buggy-version/java-lib.src.main.java.com.wavefront.ingester.StringLineIngester.java", "BodyUseAPI": [], "Fixed commit": "21d486d36a60e79508393edc22261752ce7b560a", "Url": "https://api.github.com/repos/wavefront-mike/java", "Date": "2016-03-01T18:18:56Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((alias) == null) return super.toString(); else return (alias) + \" ()\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1258/buggy-version/Kayak-core.src.main.java.com.github.kayak.core.Bus.java", "BodyUseAPI": [], "Fixed commit": "50e21888576f37dbdb3d75022980b242a758105b", "Url": "https://api.github.com/repos/dschanoeh/Kayak", "Date": "2011-09-28T09:20:06Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isOptional(f)) { enumName = ((java.lang.Class) (extractClassFromOption(f.method().getGenericReturnType()))).getName(); }else { enumName = f.method().getReturnType().getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1120/buggy-version/parquet-scrooge.src.main.java.parquet.scrooge.ScroogeStructConverter.java", "BodyUseAPI": ["com.twitter.scrooge.ThriftStructField.method()", "java.lang.reflect.Type.getName()", "f.method().getGenericReturnType()", "f.method().getReturnType().getName()", "f.method().getReturnType()", "com.twitter.scrooge.ThriftStructField.method()", "parquet.scrooge.ScroogeStructConverter.extractClassFromOption(f.method().getGenericReturnType())"], "Fixed commit": "6417baede9f9e9b4cb711d7120ee31499a19b5ea", "Url": "https://api.github.com/repos/kozanitis/parquet-mr", "Date": "2014-04-11T00:35:23Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.children.isEmpty()) || (index < 0)) || (index >= (this.children.size()))) { throw new java.lang.IndexOutOfBoundsException(\"A child with this index does not exist.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/9076/buggy-version/src.de.SweetCode.e.routines.Task.java", "BodyUseAPI": [], "Fixed commit": "cf2c4deb26ecb6f7200cfc7636ebc67b2715eba4", "Url": "https://api.github.com/repos/sweetcode/e", "Date": "2016-10-26T16:47:02Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.child) == null) { throw new java.lang.IndexOutOfBoundsException(\"The task has no child.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/9076/buggy-version/src.de.SweetCode.e.routines.TaskDecorator.java", "BodyUseAPI": [], "Fixed commit": "cf2c4deb26ecb6f7200cfc7636ebc67b2715eba4", "Url": "https://api.github.com/repos/sweetcode/e", "Date": "2016-10-26T16:47:02Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cloneNode.getParent()) == null) { updatedSelectionList.add(cloneNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8015/buggy-version/src.ca.mcgill.cs.stg.jetuml.framework.CutPasteBehavior.java", "BodyUseAPI": ["ca.mcgill.cs.stg.jetuml.framework.SelectionList.add(ca.mcgill.cs.stg.jetuml.graph.Node)"], "Fixed commit": "246a5b97c0009d82ce5bda587082941806b9b3c4", "Url": "https://api.github.com/repos/prmr/JetUML", "Date": "2015-02-06T02:03:03Z"},
{"Line": "=>2276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((mN.getSmallIcon()) == null) && ((mN.icon) != 0)) { setSmallIcon(mN.icon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4688/buggy-version/core.java.android.app.Notification.java", "BodyUseAPI": [], "Fixed commit": "05e19bba3767cf3369e698abc7b2746e53188934", "Url": "https://api.github.com/repos/Citrus-CAF/frameworks_base", "Date": "2016-06-14T16:54:20Z"},
{"Line": "=>2280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((mN.getLargeIcon()) == null) && ((mN.largeIcon) != null)) { setLargeIcon(mN.largeIcon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4688/buggy-version/core.java.android.app.Notification.java", "BodyUseAPI": [], "Fixed commit": "05e19bba3767cf3369e698abc7b2746e53188934", "Url": "https://api.github.com/repos/Citrus-CAF/frameworks_base", "Date": "2016-06-14T16:54:20Z"},
{"Line": "=>1989", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context.getApplicationInfo().targetSdkVersion) < (Build.VERSION_CODES.N)) { extras.putBoolean(android.app.Notification.EXTRA_SHOW_WHEN, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4688/buggy-version/core.java.android.app.Notification.java", "BodyUseAPI": [], "Fixed commit": "05e19bba3767cf3369e698abc7b2746e53188934", "Url": "https://api.github.com/repos/Citrus-CAF/frameworks_base", "Date": "2016-06-14T16:54:20Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.jmatrix.jproperties.cli.JPropertiesCLI.debug) { net.jmatrix.jproperties.util.JDK14LogConfig.startup(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/180/buggy-version/src.main.java.net.jmatrix.jproperties.cli.JPropertiesCLI.java", "BodyUseAPI": [], "Fixed commit": "9059c52faac90f0fc3d1b9fbcafcd11d470e2117", "Url": "https://api.github.com/repos/bemowski/jproperties", "Date": "2014-07-03T15:27:08Z"},
{"Line": "=>962", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((start != null) && (end == null)) { throw new parser.InvalidParametersException(input); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3134/buggy-version/GetStuffDone.src.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "d4c0d10aade9067d205b7cc08b0695a8417df4a5", "Url": "https://api.github.com/repos/cs2103aug2015-w11-1j/main", "Date": "2015-11-09T11:49:24Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (binding.getParameterNames().isEmpty()) { return java.util.Collections.EMPTY_MAP; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8708/buggy-version/pippo-core.src.main.java.ro.pippo.core.route.DefaultRouter.java", "BodyUseAPI": [], "Fixed commit": "3395f07508139f0949da506549e3525068b2a3d9", "Url": "https://api.github.com/repos/pippo-java/pippo", "Date": "2015-01-23T17:59:38Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((url_ == null) || (url_.isEmpty())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5675/buggy-version/src.com.sheepit.client.network.Proxy.java", "BodyUseAPI": [], "Fixed commit": "9b3a3bf8136f20ced91bdc26700b0b81666a3433", "Url": "https://api.github.com/repos/AGSPhoenix/sheepit-client", "Date": "2015-07-06T17:56:55Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.talend.core.model.metadata.builder.connection.MetadataColumn.getTalendType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"id_Dynamic\".equals(tt)) { return ftb.nullType().noDefault(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8227/buggy-version/main.plugins.org.talend.core.runtime.src.main.java.org.talend.core.model.metadata.MetadataToolAvroHelper.java", "BodyUseAPI": [], "Fixed commit": "403655778686929ad8f5cd974a4738cd9266527e", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2016-03-18T02:43:34Z"},
{"Line": "=>753", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["db.selectDistinct(TAGREFERENCE.TAGINSTANCEID).from(de.catma.repository.db.TAGREFERENCE).where(TAGREFERENCE.USERMARKUPCOLLECTIONID.in(fullControlUmcCollIds)).fetch().map(de.catma.repository.db.mapper.IDFieldToIntegerMapper)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tagInstanceIds.isEmpty()) { tagInstanceIds = java.util.Collections.singletonList((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3064/buggy-version/src.de.catma.repository.db.SourceDocumentHandler.java", "BodyUseAPI": [], "Fixed commit": "2489fbca553be183bc9a7c1134e363abd2ee6d12", "Url": "https://api.github.com/repos/catmadevel/catma", "Date": "2014-01-13T22:02:59Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<V>.getInterfaces()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (java.util.Arrays.asList(interfaces).contains(interfaceType)) dictionary.put(interfaceType, implementType); else throw new java.lang.Exception();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7554/buggy-version/basic.ioc.1.src.container.Container.java", "BodyUseAPI": ["java.util.Map<java.lang.Class, java.lang.Class>.put(java.lang.Class<K>,java.lang.Class<V>)"], "Fixed commit": "14c11409446a6aefa8b618e3b95081c83247045c", "Url": "https://api.github.com/repos/SigridZhangSY/homework-zhangsiyue", "Date": "2016-12-15T10:00:35Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["wolfpacksMembersCache.get().get(il.technion.ewolf.ewolf.WolfPack)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (profiles != null) { for (il.technion.ewolf.socialfs.Profile p : profiles) { java.util.List<il.technion.ewolf.posts.Post> profilePosts = allPosts.get(p); if (profilePosts != null) { posts.addAll(profilePosts); }else { java.lang.System.out.println((\"No posts found for profile \" + (p.getUserId().toString()))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6083/buggy-version/src.il.technion.ewolf.server.jsonDataHandlers.NewsFeedFetcher.java", "BodyUseAPI": [], "Fixed commit": "42bd5636411d8070b59b7e56a60f06a4bbcd84a9", "Url": "https://api.github.com/repos/236371/ewolf-webgui", "Date": "2012-10-16T13:40:45Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (c == ';') { line.add(\"\"); }else { value.append(c); state = ch.thejp.plugin.game2048.storage.CSVReader.State.InUnescapedValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4617/buggy-version/src.ch.thejp.plugin.game2048.storage.CSVReader.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)"], "Fixed commit": "dd8db72b520215d07c5ed685b8324d11abcb5090", "Url": "https://api.github.com/repos/TheJP/Bukkit2048", "Date": "2014-05-25T14:00:35Z"},
{"Line": "=>608", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.branch) != null) && (!(this.branch.isEmpty()))) { preservePath = ((this.branch) + \"/\") + preservePath; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7579/buggy-version/src.main.java.com.crowdin.cli.commands.Commands.java", "BodyUseAPI": [], "Fixed commit": "7f263c4472a8e98a33fcc7e3552db287e99451ae", "Url": "https://api.github.com/repos/crowdin/crowdin-cli-2", "Date": "2017-10-31T12:44:34Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (soarAgent.getExpandedSourceMap().containsKey(procName)) { expSource = (soarAgent.getExpandedSourceMap().get(procName)) + \"\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2334/buggy-version/com.soartech.soar.ide.core.src.com.soartech.soar.ide.core.model.impl.SpInternalCommand.java", "BodyUseAPI": ["soarAgent.getExpandedSourceMap().get(java.lang.String)", "com.soartech.soar.ide.core.model.impl.SoarAgent.getExpandedSourceMap()"], "Fixed commit": "236c645de5969a3d8cec0dca36ef1e7c62442a22", "Url": "https://api.github.com/repos/soartech/soaride", "Date": "2016-01-11T19:57:52Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dataSnapshot.child(\"budget\").child(\"mPending\").getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null != pendingUsers) { for (java.lang.String pendingBase64 : pendingUsers.keySet()) { android.util.Log.d(\"\", java.lang.String.format(\"FirebaseBackend::leaveBudget: removing pending user: %s from budget %s \", pendingBase64, bidToLeave)); mDatabase.child(\"mails\").child(pendingBase64).child(\"pendingBudgets\").child(bidToLeave).removeValue(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6588/buggy-version/Mezu.app.src.main.java.money.mezu.mezu.FirebaseBackend.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.keySet()"], "Fixed commit": "a8c72ad907c11c6dd5dc98fa8076d5779ce6be33", "Url": "https://api.github.com/repos/Assafbs/Mezu", "Date": "2017-08-13T16:12:51Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.has(\"user\")) { user = ((com.parse.ParseUser) (get(\"user\"))); }else { user = new com.parse.ParseUser(); setUser(user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/861/buggy-version/app.src.main.java.dev.spocht.spocht.data.SpochtUser.java", "BodyUseAPI": [], "Fixed commit": "143a5df6712ee38dc189308d62893c1efa42d4ff", "Url": "https://api.github.com/repos/Spocht/mapprototype", "Date": "2015-09-15T09:35:01Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ae.getId()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4600/buggy-version/server.src.main.java.org.apache.kylin.rest.service.AccessService.java", "BodyUseAPI": [], "Fixed commit": "8eb289d52955b4ee7ae65acfbb7ba03f27e8f2d4", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2016-01-20T08:02:43Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fetchCollections) { userDetails.getAccounts().size(); userDetails.getCertifications().size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6827/buggy-version/eccles.src.main.java.au.edu.uq.cmm.eccles.UserDetailsManager.java", "BodyUseAPI": [], "Fixed commit": "36286fce6622e105c263e3c1483d8f2271aa97fe", "Url": "https://api.github.com/repos/UQ-CMM-Mirage/CMM-data-grabber", "Date": "2012-04-27T05:22:35Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m.reports_array.size()) != 0) { android.widget.Toast.makeText(context, \"Report Deleted\", Toast.LENGTH_SHORT).show(); android.content.Intent intent = new android.content.Intent(context, com.rzepka.hsiao.whipp.campusir.MyReports.class); startActivity(intent); }else { android.widget.Toast.makeText(context, \"No Reports Remaining\", Toast.LENGTH_SHORT).show(); android.content.Intent intent = new android.content.Intent(context, com.rzepka.hsiao.whipp.campusir.MenuActivity.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7880/buggy-version/app.src.main.java.com.rzepka.hsiao.whipp.campusir.FullReport.java", "BodyUseAPI": [], "Fixed commit": "bb27935b1b5acfc813d577c8fd022c640097d7c2", "Url": "https://api.github.com/repos/awhipp/CampusIR-MobileReportingPrototype", "Date": "2014-12-12T06:43:09Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vimeo.stag.processor.generators.model.SupportedTypesModel.getSupportedType(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == model) { model = mKnownInheritedTypesMap.get(outerClassType); if (null == model) { model = new com.vimeo.stag.processor.generators.model.AnnotatedClass(com.vimeo.stag.processor.utils.TypeUtils.getUtils().asElement(type)); mKnownInheritedTypesMap.put(outerClassType, model); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6082/buggy-version/stag-library-compiler.src.main.java.com.vimeo.stag.processor.generators.model.SupportedTypesModel.java", "BodyUseAPI": [], "Fixed commit": "371553499bbdcce6be079409902ab1522edc345a", "Url": "https://api.github.com/repos/Flipkart/stag-java", "Date": "2017-02-06T10:30:02Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < 3) { tempArr[0][i] = hScores[0][x]; tempArr[1][i] = hScores[1][x]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8352/buggy-version/app.src.main.java.com.cs245.cardguesser.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "7e1b9b0d6a8799e82676c16b6eb77ea50dc0f3a3", "Url": "https://api.github.com/repos/ffzhang2396/CS245-Android", "Date": "2017-12-05T00:06:53Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<loop.Context>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((context.thisFunction.children().get((i - 1))) instanceof loop.Assignment)) methodVisitor.visitInsn(loop.POP);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4870/buggy-version/src.loop.AsmCodeEmitter.java", "BodyUseAPI": [], "Fixed commit": "449d9684c882bf218a2794d47a4381bc3ca01b78", "Url": "https://api.github.com/repos/yohanbeschi/loop", "Date": "2012-08-20T07:02:24Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.ikamobile.ikasoa.core.utils.StringUtil.isEmpty(s)) || (c == null)) { objs[i] = null; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/981/buggy-version/ikasoa-rpc.src.com.ikamobile.ikasoa.rpc.handler.impl.JsonProtocolHandlerImpl.java", "BodyUseAPI": [], "Fixed commit": "9ac26dc110fe2ec5a62fa0d33738f99aa9dda10d", "Url": "https://api.github.com/repos/venwyhk/ikasoa", "Date": "2016-11-16T07:38:23Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dennouneko.mabistatus.ConnectivityManager.getActiveNetworkInfo()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (info == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/564/buggy-version/app.src.main.java.dennouneko.mabistatus.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ad4cffae5cb1cb1c9174e705ab0300cc7ba5aaf3", "Url": "https://api.github.com/repos/DennouNeko/MabiStatus", "Date": "2015-09-02T14:11:17Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dennouneko.mabistatus.Context.getSystemService(Context.CONNECTIVITY_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (connMgr == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/564/buggy-version/app.src.main.java.dennouneko.mabistatus.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ad4cffae5cb1cb1c9174e705ab0300cc7ba5aaf3", "Url": "https://api.github.com/repos/DennouNeko/MabiStatus", "Date": "2015-09-02T14:11:17Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (urlDest.endsWith(\"/\")) { fr.dr.http.Post.logger.warn(\"Url must not have a / at the end of the request !\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2407/buggy-version/src.main.java.fr.dr.http.Post.java", "BodyUseAPI": [], "Fixed commit": "bccddbfa956f626cc2c79f603714cbc951375a76", "Url": "https://api.github.com/repos/drieu/Tools", "Date": "2013-03-15T10:15:01Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((proxyUrl) == null) && (proxyUrl.isEmpty())) { java.net.Proxy proxy = new java.net.Proxy(java.net.Proxy.Type.HTTP, new java.net.InetSocketAddress(proxyUrl, java.lang.Integer.parseInt(proxyPort))); connection = ((java.net.HttpURLConnection) (url.openConnection(proxy))); }else { connection = ((java.net.HttpURLConnection) (url.openConnection())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2407/buggy-version/src.main.java.fr.dr.http.Post.java", "BodyUseAPI": [], "Fixed commit": "bccddbfa956f626cc2c79f603714cbc951375a76", "Url": "https://api.github.com/repos/drieu/Tools", "Date": "2013-03-15T10:15:01Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((artifactVersion.getMajorVersion()) == 0) & ((artifactVersion.getMinorVersion()) == 0)) && ((artifactVersion.getIncrementalVersion()) == 0)) { getLog().warn(\"Problem parsing version number occurred. Using fall back to determine version code. \"); verCode = verString.replaceAll(\"\\\\D\", \"\"); org.w3c.dom.Attr versionCodeAttr = manifestElement.getAttributeNode(com.jayway.maven.plugins.android.standalonemojos.ManifestUpdateMojo.ATTR_VERSION_CODE); int currentVersionCode = 0; if (versionCodeAttr != null) { currentVersionCode = org.apache.commons.lang.math.NumberUtils.toInt(versionCodeAttr.getValue(), 0); } if ((java.lang.Integer.parseInt(verCode)) < currentVersionCode) { getLog().info((((verCode + \" < \") + currentVersionCode) + \" so padding versionCode\")); verCode = org.apache.commons.lang.StringUtils.rightPad(verCode, versionCodeAttr.getValue().length(), \"0\"); } }else { verCode = ((java.lang.Integer.toString(artifactVersion.getMajorVersion())) + (java.lang.Integer.toString(artifactVersion.getMinorVersion()))) + (java.lang.Integer.toString(artifactVersion.getIncrementalVersion())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6027/buggy-version/src.main.java.com.jayway.maven.plugins.android.standalonemojos.ManifestUpdateMojo.java", "BodyUseAPI": ["java.lang.Integer.toString(artifactVersion.getMajorVersion())", "org.apache.maven.artifact.versioning.ArtifactVersion.getMajorVersion()", "org.apache.maven.artifact.versioning.ArtifactVersion.getIncrementalVersion()", "java.lang.Integer.toString(artifactVersion.getIncrementalVersion())", "java.lang.Integer.toString(artifactVersion.getMinorVersion())", "org.apache.maven.artifact.versioning.ArtifactVersion.getMinorVersion()"], "Fixed commit": "03e275df8a1b3801d4ed1f704b6b1619a3af682b", "Url": "https://api.github.com/repos/jayway/maven-android-plugin", "Date": "2012-06-15T17:50:52Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"\".equals(outputName)) { makeFile.append(org.apache.commons.io.FilenameUtils.removeExtension(libFile.getName())); }else { makeFile.append(outputName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5826/buggy-version/src.main.java.com.jayway.maven.plugins.android.phase05compile.MakefileHelper.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "e8894ef65ab275f1c54b2df0393a2adda8712992", "Url": "https://api.github.com/repos/leusonmario/android-maven-plugin", "Date": "2013-07-26T11:18:42Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fMappedByteBuffer.position()) == (fMappedByteBuffer.limit())) { if ((fMappedByteBuffer.limit()) == (com.seenu.tracecompass.example.csv.CSVTrace.CHUNK_SIZE)) { try { seekChunk((++(currentChunk))); fMappedByteBuffer.get(b); str = new java.lang.String(b); } catch (java.io.IOException e) { e.printStackTrace(); } }else { return null; } }else { fMappedByteBuffer.get(b); str = new java.lang.String(b); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7533/buggy-version/src.com.seenu.tracecompass.example.csv.CSVTrace.java", "BodyUseAPI": ["java.nio.MappedByteBuffer.limit()", "java.nio.MappedByteBuffer.get(byte[])", "java.nio.MappedByteBuffer.get(byte[])"], "Fixed commit": "b622ec7c7ca0d2094fdcd98d4c59f1518efe33ea", "Url": "https://api.github.com/repos/gsrinivas37/com.seenu.tracecompass.example", "Date": "2015-03-19T00:49:56Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((futureWays) != null) futureWays.cancel(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8001/buggy-version/src.server.CopyOfWayGetter.java", "BodyUseAPI": [], "Fixed commit": "27a13e84bd20006bf264e129ae16dd617f723f45", "Url": "https://api.github.com/repos/skortchmark9/riMap", "Date": "2014-04-08T20:51:04Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.huskehhh.code.tasks.ResponseList.listIterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(TwitterUtil.lastPost.equals(li.next().toString()))) { HuskyIRC.bot.sendMessage(\"#oresomecraft\", (((java.awt.Color.GREEN) + \"OresomeCraft Twitter: \") + (li.next().toString()))); com.huskehhh.code.util.TwitterUtil.lastPost = li.next().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2615/buggy-version/src.com.huskehhh.code.tasks.TwitterCheckTask.java", "BodyUseAPI": ["HuskyIRC.bot.sendMessage(java.lang.String,java.lang.String)", "java.lang.Object.toString()", "java.lang.Object.toString()", "java.util.ListIterator.next()", "java.util.ListIterator.next()"], "Fixed commit": "e38718a0f3632fc333829f7288e51c352c10d428", "Url": "https://api.github.com/repos/Huskehhh/HuskyIRC", "Date": "2014-01-21T02:27:15Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!newState) { final float timeLive = (stratos.graphics.solids.Rendering.activeTime()) - (topState.incept); final float timeLimit = (match.duration) * (stratos.graphics.solids.SolidSprite.ANIM_TIME_ENDPOINT); if (timeLive > timeLimit) newState = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2177/buggy-version/src.stratos.graphics.solids.SolidSprite.java", "BodyUseAPI": [], "Fixed commit": "ecc0cf566fe87ba3068bfce2410874ba4f827337", "Url": "https://api.github.com/repos/Morgan-Allen/Presidium-Graphics-Overhaul", "Date": "2015-12-16T02:29:30Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((args != null) && ((args.length) > 0)) console.fine(java.lang.String.format(\"Args: %s\", args));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4980/buggy-version/src.no.runsafe.warpdrive.commands.Teleport.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String[])", "no.runsafe.framework.output.IOutput.fine(java.lang.String)"], "Fixed commit": "c5a3f619d26411e3b07ad8b0a9a90b62650aa52e", "Url": "https://api.github.com/repos/Runsafe/WarpDrive", "Date": "2013-01-17T00:55:00Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((paragraph != null) && ((paragraph.length) > 0)) { for (int i = 0; i < (a.size()); i++) { paragraph[i] = a.get(i).getAsString(); } generateSnippets(jcas, paragraph, queryUrl, doc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8070/buggy-version/project.src.main.java.edu.cmu.lti.oaqa.preprocess.SnippetAnnotator.java", "BodyUseAPI": ["edu.cmu.lti.oaqa.preprocess.SnippetAnnotator.generateSnippets(org.apache.uima.jcas.JCas,java.lang.String[],java.lang.String,edu.cmu.lti.oaqa.type.retrieval.Document)"], "Fixed commit": "6d2f32d019e72c096d4c85af2f955292546154a1", "Url": "https://api.github.com/repos/11693-7/project-team7", "Date": "2014-12-01T17:36:00Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (DriverList != null) { for (int i = 0; i < (DriverList.size()); i++) { java.lang.System.out.println((\"staff name : \" + (DriverList.get(i).getStaff().getId()))); if ((DriverList.get(i).getId()) == null) { session.save(DriverList.get(i)); }else { session.update(DriverList.get(i)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/39/buggy-version/src.java.com.smi.travel.datalayer.dao.impl.TourOperationImpl.java", "BodyUseAPI": ["org.hibernate.Session.update(DriverList.get(i))", "java.util.List<com.smi.travel.datalayer.entity.TourOperationDriver>.get(int)", "java.util.List<com.smi.travel.datalayer.entity.TourOperationDriver>.size()", "DriverList.get(i).getStaff()", "java.util.List<com.smi.travel.datalayer.entity.TourOperationDriver>.get(int)", "DriverList.get(i).getId()", "java.util.List<com.smi.travel.datalayer.entity.TourOperationDriver>.get(int)", "java.io.PrintStream.println((\"staff name : \" + (DriverList.get(i).getStaff().getId())))", "java.util.List<com.smi.travel.datalayer.entity.TourOperationDriver>.get(int)", "org.hibernate.Session.save(DriverList.get(i))", "DriverList.get(i).getStaff().getId()"], "Fixed commit": "2aeaab16cdd7ae12c530526b250f6cde92b3e79a", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2016-05-09T09:16:35Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.kwstudios.play.ragemode.gameLogic.PlayerList.list[i]) != null) { if (org.kwstudios.play.ragemode.gameLogic.PlayerList.list[i].equals(game)) { n = i; while (n < (org.kwstudios.play.ragemode.toolbox.GetGames.getMaxPlayers(game, org.kwstudios.play.ragemode.gameLogic.PlayerList.fileConfiguration))) { players[n] = org.kwstudios.play.ragemode.gameLogic.PlayerList.list[n]; n++; } } i = i + playersPerGame; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8252/buggy-version/src.org.kwstudios.play.ragemode.gameLogic.PlayerList.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "eb3b867790ce87dba348e1b477c28673f7937cd4", "Url": "https://api.github.com/repos/KWStudios/RageMode", "Date": "2015-08-01T20:40:43Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((java.lang.System.getenv(\"SystemDrive\")) != null) { systemDrive = java.lang.System.getenv(\"SystemDrive\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8039/buggy-version/src.com.ibio8.view.Playlist.java", "BodyUseAPI": [], "Fixed commit": "074541de4cdf69c76fb57af9bcbe59c3bbe34dd2", "Url": "https://api.github.com/repos/ibio/mediaplayer", "Date": "2016-01-26T06:46:03Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ref.getThreadId()) == (java.lang.Thread.currentThread().getId())) { logger.debug(\"Lock re-entrant for current thread for: {}\\n\\n(Lock was requested by:\\n{})\", file, caller); break; }else { logger.debug(\"Lock still held by: {}\\n\\n(Lock was requested by:\\n{})\", ref, caller); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7699/buggy-version/src.main.java.org.commonjava.util.partyline.JoinableFileManager.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,org.commonjava.util.partyline.LockOwner,java.lang.String)"], "Fixed commit": "33336793aa17de24c0f49b25ef493c3ca2d450d8", "Url": "https://api.github.com/repos/ligangty/partyline", "Date": "2016-07-29T08:15:25Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["contact.getName().split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((firstAndLastName.length) > 1) { java.lang.String lastName = firstAndLastName[1]; contactListAdapterViewHolder.lastNameTextView.setText(lastName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6138/buggy-version/app.src.main.java.com.mog.kontax.kontax.ContactListAdapter.java", "BodyUseAPI": [], "Fixed commit": "3aa88754668b260ba7c00f88ac0be3e2ff6ddcd1", "Url": "https://api.github.com/repos/mog96/Kontax", "Date": "2017-07-25T08:30:38Z"},
{"Line": "=>1510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.idega.util.datastructures.map.MapUtil.isEmpty(activeVariables)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8742/buggy-version/src.java.com.idega.jbpm.data.impl.VariableInstanceQuerierImpl.java", "BodyUseAPI": [], "Fixed commit": "cd388581776a6e66b9f8d595cb84aca927ecc2b1", "Url": "https://api.github.com/repos/idega/org.jboss.jbpm", "Date": "2012-02-02T07:50:09Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((subscriberInterface) != null) subscriberInterface.onCompleted();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1964/buggy-version/domain.src.main.java.com.fernandocejas.android10.sample.domain.interactor.DefaultSubscriber.java", "BodyUseAPI": [], "Fixed commit": "228eed0915e6c2e0bc9327701044efa6151728c2", "Url": "https://api.github.com/repos/B-greg/Android-CleanArchitecture", "Date": "2015-05-14T14:51:15Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((subscriberInterface) != null) subscriberInterface.onNext(t);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1964/buggy-version/domain.src.main.java.com.fernandocejas.android10.sample.domain.interactor.DefaultSubscriber.java", "BodyUseAPI": [], "Fixed commit": "228eed0915e6c2e0bc9327701044efa6151728c2", "Url": "https://api.github.com/repos/B-greg/Android-CleanArchitecture", "Date": "2015-05-14T14:51:15Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((subscriberInterface) != null) subscriberInterface.onError(e);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1964/buggy-version/domain.src.main.java.com.fernandocejas.android10.sample.domain.interactor.DefaultSubscriber.java", "BodyUseAPI": [], "Fixed commit": "228eed0915e6c2e0bc9327701044efa6151728c2", "Url": "https://api.github.com/repos/B-greg/Android-CleanArchitecture", "Date": "2015-05-14T14:51:15Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sendLocal(receiverUri, message)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5205/buggy-version/transports.eve_transport_zmq.src.main.java.com.almende.eve.transport.zmq.ZmqTransport.java", "BodyUseAPI": [], "Fixed commit": "a47ad9c813f9251c861b28f455482559ffa9fd3f", "Url": "https://api.github.com/repos/almende/eve", "Date": "2014-04-25T11:08:30Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sendLocal(receiverUri, message)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5205/buggy-version/transports.eve_transport_zmq.src.main.java.com.almende.eve.transport.zmq.ZmqTransport.java", "BodyUseAPI": [], "Fixed commit": "a47ad9c813f9251c861b28f455482559ffa9fd3f", "Url": "https://api.github.com/repos/almende/eve", "Date": "2014-04-25T11:08:30Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, edu.wisc.cs.sdn.apps.loadbalancer.LoadBalancerInstance>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (loadBalancer == null) { return Command.CONTINUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2393/buggy-version/project3.src.edu.wisc.cs.sdn.apps.loadbalancer.LoadBalancer.java", "BodyUseAPI": [], "Fixed commit": "e7d4734492c9c9a1adbbb3ca40bf6fe8254d8903", "Url": "https://api.github.com/repos/DenisMedeiros/SDNRouterAndLoadBalancer", "Date": "2014-11-14T06:21:55Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(allOpenIssues.getString(\"total\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (totalNumberOfIssues > 1000) { for (int start = 1000; start < totalNumberOfIssues; start += totalNumberOfIssues % 1000) { responseIssues = jiraRest.invokeGetMethod(auth, (((((((BASE_URL + \"/rest/api/2/search?jql=project=\") + projectkey) + \"%20AND%20\") + \"(status=%22Open%22OR%20status=%22In%20Progress%22%20OR%20status=%22To%20Do%22)\") + \"+order+by+id&fields=key,summary,description,status&startAt=\") + start) + \"&maxResults=1000\")); tempJSON = new org.json.JSONObject(responseIssues); allOpenIssues.append(\"issues\", tempJSON.getJSONArray(\"issues\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7319/buggy-version/src.org.zaproxy.zap.extension.jiraIssueCreater.XmlDomParser.java", "BodyUseAPI": [], "Fixed commit": "1dc124db90714f6b34fd3ed29c9ffc89f5aa67f0", "Url": "https://api.github.com/repos/0xkasun/security-tools", "Date": "2015-12-16T04:56:27Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.api.services.bigquery.model.TableDataInsertAllResponse.getInsertErrors()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (errorsList != null) { for (com.google.api.services.bigquery.model.TableDataInsertAllResponse.InsertErrors errors : errorsList) { org.mule.modules.google.bigquery.GoogleBigQueryConnector.logger.error((\"Errors: \" + (errors.toPrettyString()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1807/buggy-version/src.main.java.org.mule.modules.google.bigquery.GoogleBigQueryConnector.java", "BodyUseAPI": [], "Fixed commit": "16b0b6dbace092605c79481273fb1e6c99e317b0", "Url": "https://api.github.com/repos/mulesoft-consulting/google-bigquery-connector", "Date": "2015-06-16T07:48:12Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (objectValue == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7600/buggy-version/bundles.es.core.connector.elexis.jpa.src.info.elexis.server.core.connector.elexis.jpa.model.annotated.converter.ElexisDBStoreToStringConverter.java", "BodyUseAPI": [], "Fixed commit": "efb9644cbc1f8f101e1c1e8e43826a736fa596db", "Url": "https://api.github.com/repos/elexis/elexis-server", "Date": "2016-02-24T10:41:54Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getSuperclass()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (superclass == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6006/buggy-version/src.main.java.com.rezzedup.metask.expressions.ExprJavaImplementations.java", "BodyUseAPI": [], "Fixed commit": "ebdc456be94cb2a050ea28999eaaf0ec68c6949a", "Url": "https://api.github.com/repos/RezzedUp/MetaSk", "Date": "2017-02-10T10:05:00Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getInterfaces()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((interfaces.length) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6006/buggy-version/src.main.java.com.rezzedup.metask.expressions.ExprJavaImplementations.java", "BodyUseAPI": [], "Fixed commit": "ebdc456be94cb2a050ea28999eaaf0ec68c6949a", "Url": "https://api.github.com/repos/RezzedUp/MetaSk", "Date": "2017-02-10T10:05:00Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dp.blackhole.rest.ApplicationResource.getTopicsByCmdb(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (topicSet != null) { topicSet = new java.util.HashSet<java.lang.String>(); com.dp.blackhole.rest.ApplicationResource.LOG.warn((\"Can not get topics from app: \" + app)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8091/buggy-version/blackhole-supervisor.src.main.java.com.dp.blackhole.rest.ApplicationResource.java", "BodyUseAPI": [], "Fixed commit": "e953fa3b8d9b370c8095c238463b545e53643270", "Url": "https://api.github.com/repos/dianping/blackhole", "Date": "2015-05-18T03:49:58Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ubic.gemma.model.common.auditAndSecurity.curation.AbstractCuratableDao<T>.findByParam(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((results.size()) < 1) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2108/buggy-version/gemma-mda.src.main.java.ubic.gemma.model.common.auditAndSecurity.curation.AbstractCuratableDao.java", "BodyUseAPI": [], "Fixed commit": "a86cfd4c2bac519090ccb602f0b4b064919c8c88", "Url": "https://api.github.com/repos/PavlidisLab/Gemma", "Date": "2017-03-14T20:18:03Z"},
{"Line": "=>1191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mobicents.ussdgateway.slee.http.HttpServerSbb.resumeHttpEventContext()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (httpEventContext != null) { net.java.slee.resource.http.events.HttpServletRequestEvent httpRequest = ((net.java.slee.resource.http.events.HttpServletRequestEvent) (httpEventContext.getEvent())); javax.servlet.http.HttpServletResponse response = httpRequest.getResponse(); response.setStatus(HttpServletResponse.SC_OK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2551/buggy-version/core.slee.sbbs.src.main.java.org.mobicents.ussdgateway.slee.http.HttpServerSbb.java", "BodyUseAPI": ["javax.slee.EventContext.getEvent()"], "Fixed commit": "4426e2d88fbc21ba785b420373138c24c1970eaa", "Url": "https://api.github.com/repos/vetss/ussdgateway", "Date": "2017-12-08T12:35:40Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((block.pos.y) > 0.0F) row = com.badlogic.gdx.math.MathUtils.ceil(block.pos.y);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4754/buggy-version/core.src.com.mygdx.tetris.Piece.java", "BodyUseAPI": ["com.badlogic.gdx.math.MathUtils.ceil(block.pos.y)"], "Fixed commit": "519d81805bb2d0f71aaa4b65d0f17ed79260f591", "Url": "https://api.github.com/repos/utv/tetris", "Date": "2016-10-11T04:58:18Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lib == null) return ul;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6110/buggy-version/plugins.org.opentravel.schemas.stl2Developer.src.org.opentravel.schemas.types.WhereUsedLibraryHandler.java", "BodyUseAPI": [], "Fixed commit": "7623b77a52ccb07819de4c10131b21bbc709aa43", "Url": "https://api.github.com/repos/OpenTravel/OTM-DE", "Date": "2016-03-29T20:23:23Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reader.eof()) throw new java.lang.IllegalStateException(\"no more tokens\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5825/buggy-version/java.argon.Lexer.java", "BodyUseAPI": [], "Fixed commit": "2a526f1d32369047d95fb394eeac700d1e4defce", "Url": "https://api.github.com/repos/hallgrimurhg/argon", "Date": "2016-09-03T10:26:47Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["marubinotto.util.time.DateTime.getCurrentTime()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (after(now)) return \"future time\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/954/buggy-version/src.main.java.marubinotto.util.time.DateTime.java", "BodyUseAPI": [], "Fixed commit": "e11bc865e80c7c22a028b56e64bf2d467ff31bb4", "Url": "https://api.github.com/repos/marubinotto/Piggydb", "Date": "2011-06-30T16:47:55Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<model.Product, java.util.List<model.Item>>.get(model.Product)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currentItems == null) { currentItems = new java.util.ArrayList<model.Item>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7239/buggy-version/src.model.reports.ProductStatisticsReportVisitor.java", "BodyUseAPI": [], "Fixed commit": "6e4b749d4a492c2bfac1c5fc5a74f9ee874b07f2", "Url": "https://api.github.com/repos/djhaskin987/snake", "Date": "2013-12-12T19:47:30Z"},
{"Line": "=>4154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f != 0) return f;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5760/buggy-version/src.main.java.com.astrazeneca.vardict.VarDict.java", "BodyUseAPI": [], "Fixed commit": "7ce4963272b94711ca433f03308c705bb4a63811", "Url": "https://api.github.com/repos/AstraZeneca-NGS/VarDictJava", "Date": "2015-04-15T17:26:20Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(messageReceiver.getEndpoint().getExchangePattern().hasResponse())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3/buggy-version/core.src.main.java.org.mule.transport.AbstractTransportMessageProcessTemplate.java", "BodyUseAPI": [], "Fixed commit": "f88954917c3989d2f1070aa773b9cac9c3e1373c", "Url": "https://api.github.com/repos/mulesoft/mule", "Date": "2015-06-04T14:34:48Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newState == (-2)) { throw new pl.rcebula.analysis.lexer.LexerError(generateErrorInfo((-1)), ((((\"Unexpected character \\\"\" + ch) + \"\\\" in token \\\"\") + (tokenValue.substring(0, ((tokenValue.length()) - 1)))) + \"\\\"\")); }else if (newState != (-1)) { retCh = false; state = newState; if (java.util.Arrays.asList(acceptedEndStates).contains(state)) { pl.rcebula.analysis.lexer.TokenType tokenType = stateTokenTypeMap.get(state); if (tokenType == null) { if (java.util.Objects.equals(state, commentState)) { token = null; }else { throw new java.lang.RuntimeException((\"Unknown accepted end state \" + (state))); } }else { switch (tokenType) { case CLOSE_BRACKET : case OPEN_BRACKET : case COMMA : case END : case EQUAL : token = new pl.rcebula.analysis.lexer.Token(tokenType, null, generateErrorInfoWithCurrentToken()); break; case EXPRESSION : java.lang.String tokVal = tokenValue.substring(1, ((tokenValue.length()) - 1)); token = new pl.rcebula.analysis.lexer.Token(TokenType.EXPRESSION, tokVal, generateErrorInfoWithCurrentToken(1)); break; case STRING : token = new pl.rcebula.analysis.lexer.Token(tokenType, parseString(tokenValue, currentTokenLine, currentTokenChNum), generateErrorInfoWithCurrentToken()); break; default : throw new java.lang.RuntimeException((\"Unknown accepted end token type \" + tokenType)); } } reset(); }else { token = null; } }else if ((java.util.Arrays.asList(allowSeparatorStates).contains(state)) && (java.util.Arrays.asList(Lexer.separators).contains(ch))) { if (!(java.util.Objects.equals(state, startState))) { retCh = true; if (ch == '\\n') { --(line); }else { --(chNum); } tokenValue = tokenValue.substring(0, ((tokenValue.length()) - 1)); pl.rcebula.analysis.lexer.TokenType tokenType = stateTokenTypeMap.get(state); if (tokenType == null) { token = recognizeStateID(state, tokenValue, generateErrorInfoWithCurrentToken()); }else { switch (tokenType) { case INT : try { int i = java.lang.Integer.parseInt(tokenValue); token = new pl.rcebula.analysis.lexer.Token(tokenType, i, generateErrorInfoWithCurrentToken()); } catch (java.lang.NumberFormatException ex) { java.lang.String msg = (\"Integer constant \" + (tokenValue)) + \" is too large or too small\"; throw new pl.rcebula.analysis.lexer.LexerError(generateErrorInfoWithCurrentToken(), msg); } break; case FLOAT : try { float f = java.lang.Float.parseFloat(tokenValue); token = new pl.rcebula.analysis.lexer.Token(tokenType, f, generateErrorInfoWithCurrentToken()); } catch (java.lang.NumberFormatException ex) { throw new pl.rcebula.analysis.lexer.LexerError(generateErrorInfoWithCurrentToken(), ex.getMessage()); } break; case ID : case ID_STRUCT : token = new pl.rcebula.analysis.lexer.Token(tokenType, tokenValue, generateErrorInfoWithCurrentToken()); break; default : throw new java.lang.RuntimeException((\"Unknown allow separator token type \" + tokenType)); } } }else { retCh = false; token = null; } reset(); }else { newState = transitionsTable[state][getEveryCharCol()]; if (newState != (-1)) { state = newState; retCh = false; token = null; }else { throw new pl.rcebula.analysis.lexer.LexerError(generateErrorInfo((-1)), ((((\"Unexpected character \\\"\" + ch) + \"\\\" in token \\\"\") + (tokenValue.substring(0, ((tokenValue.length()) - 1)))) + \"\\\"\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6114/buggy-version/impl.bioc.src.pl.rcebula.analysis.lexer.FiniteStateAutomata.java", "BodyUseAPI": [], "Fixed commit": "53881fc93979034a5920e58b5fa10183201cc513", "Url": "https://api.github.com/repos/drzazga888/BIO", "Date": "2016-11-03T15:43:48Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_boot.getNodeRole()) == (de.hhu.bsinfo.dxram.util.NodeRole.TERMINAL)) { try { m_history.flush(); } catch (final java.io.IOException ignored) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5075/buggy-version/src.de.hhu.bsinfo.dxram.term.TerminalService.java", "BodyUseAPI": [], "Fixed commit": "af93210bb8afb59a2ea8c486c4dc3e1ace36029e", "Url": "https://api.github.com/repos/hhu-bsinfo/dxram", "Date": "2017-04-12T14:09:27Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (arguments == null) { throw new java.lang.IllegalArgumentException(\"One argument is expected\"); }else if ((arguments.size()) == 0) { throw new java.lang.IllegalArgumentException(((\"Al most one argument was expected, \" + (arguments.size())) + \" were supplied\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2771/buggy-version/core-rules.src.main.java.org.hisp.dhis.rules.functions.RuleFunctionZpvc.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()"], "Fixed commit": "b9ea0bea5f01dc63112efa68dab02124d72967b9", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-sdk", "Date": "2017-12-21T10:12:15Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["za.co.scarlet.persistence.Impl.WeightDaoImpl.getAllClientWeights(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((weightMeasurementsEntityList.size()) != 0) { averageWeight = averageWeight.divide(new java.math.BigDecimal(weightMeasurementsEntityList.size()), 2, java.math.RoundingMode.CEILING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6774/buggy-version/persistence.src.main.java.za.co.scarlet.persistence.Impl.WeightDaoImpl.java", "BodyUseAPI": ["java.math.BigDecimal.divide(java.math.BigDecimal,int,java.math.RoundingMode)", "java.util.List<za.co.scarlet.domain.WeightMeasurementsEntity>.size()"], "Fixed commit": "7254a05779716e386c7bf0a91fb96c6e16a4f68d", "Url": "https://api.github.com/repos/candiceswarts/FitnessBBG", "Date": "2015-04-25T07:18:13Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (field.startsWith(\"_\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8357/buggy-version/documentdb.src.main.java.com.yahoo.ycsb.db.DocumentDBClient.java", "BodyUseAPI": [], "Fixed commit": "0fc585ef939d0dca4d0ea8dab2488776ac07e544", "Url": "https://api.github.com/repos/k1xme/YCSB", "Date": "2016-09-03T21:01:31Z"},
{"Line": "=>667", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (multilineCont.find()) { remIndex = lines.length; final java.lang.String lFin = multilineCont.group(1); if ((!(lFin.equals(com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.NEXT_TAG))) && (!(lFin.equals(com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.END_JAVADOC)))) { tags.add(new com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag(tagLine, col, param1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/9145/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)"], "Fixed commit": "9e9b817c6558d1141617e52444716c0f802c1417", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2015-10-21T06:22:53Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (create) { event.setCompany(eventCompany.getText().toString()); event.setPosition(eventPosition.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/654/buggy-version/app.src.main.java.edu.umd.cs.jobi.EnterEventFragment.java", "BodyUseAPI": [], "Fixed commit": "84196a23f3fdfcc2c4a79b6bb9e54e9f2d167b3f", "Url": "https://api.github.com/repos/LunaOak/Jobi_App", "Date": "2017-05-09T20:30:01Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Random.nextInt(int)", "java.util.Random.nextInt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(tilelayout[x][y].isbloqued())) { if (potiontype == 0) { availableconsumables.add_consumable(new com.game.roguelikeengine.Consumable(\"Blue potion\", 1, 1, 0, 2, x, y, \"img/potionblue.gif\")); } if (potiontype == 1) { availableconsumables.add_consumable(new com.game.roguelikeengine.Consumable(\"Red potion\", 0, 1, 1, 1, x, y, \"img/potionred.gif\")); } if (potiontype == 2) { availableconsumables.add_consumable(new com.game.roguelikeengine.Consumable(\"Yellow potion\", 2, 1, 0, 0, x, y, \"img/potionyellow.gif\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5820/buggy-version/com.game.roguelikeengine.GameEngine.java", "BodyUseAPI": ["com.game.roguelikeengine.Consumable_array.add_consumable(com.game.roguelikeengine.Consumable)", "com.game.roguelikeengine.Consumable_array.add_consumable(com.game.roguelikeengine.Consumable)", "com.game.roguelikeengine.Consumable_array.add_consumable(com.game.roguelikeengine.Consumable)"], "Fixed commit": "77862ec9d9821611d151c965acc4c2ed57a1f598", "Url": "https://api.github.com/repos/ferriman/explorerRPG", "Date": "2013-06-20T08:17:34Z"},
{"Line": "=>713", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["udtValueMapper.getMetadataCatalog().isPrimaryKey(data.getTablename(),entry.getKey())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isPrimaryKey) { update.with(com.datastax.driver.core.querybuilder.QueryBuilder.set(entry.getKey(), com.datastax.driver.core.querybuilder.QueryBuilder.bindMarker())); values.add(net.oneandone.troilus.WriteQueryDataImpl.toStatementValue(udtValueMapper, data.getTablename(), entry.getKey(), entry.getValue().orNull())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2993/buggy-version/troilus-core-java7.src.main.java.net.oneandone.troilus.WriteQueryDataImpl.java", "BodyUseAPI": [], "Fixed commit": "16466b8dbff4118c929bb02e6501136ea2d06ac1", "Url": "https://api.github.com/repos/kritek/Troilus", "Date": "2015-12-14T00:11:18Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (im.vector.view.VectorCircularImageView.mPendingConversion.containsKey(key)) { im.vector.view.VectorCircularImageView.mPendingConversion.get(key).add(new android.util.Pair(getTag(), this)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/401/buggy-version/vector.src.main.java.im.vector.view.VectorCircularImageView.java", "BodyUseAPI": ["im.vector.view.VectorCircularImageView.mPendingConversion.get(key).add(android.util.Pair)", "java.util.Map<java.lang.String, java.util.ArrayList<android.util.Pair<java.lang.Object, im.vector.view.VectorCircularImageView>>>.get(java.lang.String)"], "Fixed commit": "572083089aa21d6554149ff5617585ef5951a3e7", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2017-11-29T10:17:07Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (hasDesc && (descriptionView != null)) { descriptionView.setText(desc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8554/buggy-version/app.src.main.java.com.github.jmitchell38488.todo.app.data.TodoAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "796449bfb0b0f5618503181c86ef6e0b3883e8fe", "Url": "https://api.github.com/repos/jmitchell38488/android-todo-app", "Date": "2016-11-12T12:31:27Z"},
{"Line": "=>2488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (time == 0) { return getCurrentTimestamp(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7685/buggy-version/modules.registry.airavata-jpa-registry.src.main.java.org.apache.airavata.persistance.registry.jpa.impl.ExperimentRegistry.java", "BodyUseAPI": [], "Fixed commit": "3dd2bf00087589a3849d0db479c5c6b216017ad9", "Url": "https://api.github.com/repos/apache/airavata", "Date": "2014-03-07T16:04:15Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<edu.uci.ics.hyracks.algebricks.core.algebra.base.ILogicalExpression, edu.uci.ics.hyracks.algebricks.rewriter.rules.ExtractCommonExpressionsRule.ExprEquivalenceClass>.get(edu.uci.ics.hyracks.algebricks.core.algebra.expressions.AbstractLogicalExpression)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (exprEqClass.variableIsSet()) { if ((liveVars.isEmpty()) && (usedVars.isEmpty())) { edu.uci.ics.hyracks.algebricks.core.algebra.operators.logical.visitors.VariableUtilities.getLiveVariables(op, liveVars); edu.uci.ics.hyracks.algebricks.core.algebra.operators.logical.visitors.VariableUtilities.getUsedVariables(op, usedVars); } if (((liveVars.contains(exprEqClass.getVariable())) || (!(liveVars.containsAll(usedVars)))) || ((op) == (exprEqClass.getFirstOperator()))) { exprRef.setValue(new edu.uci.ics.hyracks.algebricks.core.algebra.expressions.VariableReferenceExpression(exprEqClass.getVariable())); return true; } }else { if (assignCommonExpression(exprEqClass, expr)) { edu.uci.ics.hyracks.algebricks.core.algebra.operators.logical.visitors.VariableUtilities.getLiveVariables(op, liveVars); if (liveVars.contains(exprEqClass.getVariable())) { exprRef.setValue(new edu.uci.ics.hyracks.algebricks.core.algebra.expressions.VariableReferenceExpression(exprEqClass.getVariable())); return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7398/buggy-version/algebricks.algebricks-rewriter.src.main.java.edu.uci.ics.hyracks.algebricks.rewriter.rules.ExtractCommonExpressionsRule.java", "BodyUseAPI": ["org.apache.commons.lang3.mutable.Mutable<edu.uci.ics.hyracks.algebricks.core.algebra.base.ILogicalExpression>.setValue(edu.uci.ics.hyracks.algebricks.core.algebra.expressions.VariableReferenceExpression)", "edu.uci.ics.hyracks.algebricks.rewriter.rules.ExtractCommonExpressionsRule.ExprEquivalenceClass.getVariable()", "edu.uci.ics.hyracks.algebricks.rewriter.rules.ExtractCommonExpressionsRule.ExprEquivalenceClass.getVariable()", "java.util.Set<edu.uci.ics.hyracks.algebricks.core.algebra.base.LogicalVariable>.contains(edu.uci.ics.hyracks.algebricks.core.algebra.base.LogicalVariable)", "org.apache.commons.lang3.mutable.Mutable<edu.uci.ics.hyracks.algebricks.core.algebra.base.ILogicalExpression>.setValue(edu.uci.ics.hyracks.algebricks.core.algebra.expressions.VariableReferenceExpression)", "edu.uci.ics.hyracks.algebricks.rewriter.rules.ExtractCommonExpressionsRule.ExprEquivalenceClass.getVariable()", "java.util.Set<edu.uci.ics.hyracks.algebricks.core.algebra.base.LogicalVariable>.contains(edu.uci.ics.hyracks.algebricks.core.algebra.base.LogicalVariable)", "edu.uci.ics.hyracks.algebricks.rewriter.rules.ExtractCommonExpressionsRule.CommonExpressionSubstitutionVisitor.assignCommonExpression(edu.uci.ics.hyracks.algebricks.rewriter.rules.ExtractCommonExpressionsRule.ExprEquivalenceClass,edu.uci.ics.hyracks.algebricks.core.algebra.expressions.AbstractLogicalExpression)", "edu.uci.ics.hyracks.algebricks.rewriter.rules.ExtractCommonExpressionsRule.ExprEquivalenceClass.getFirstOperator()", "edu.uci.ics.hyracks.algebricks.rewriter.rules.ExtractCommonExpressionsRule.ExprEquivalenceClass.getVariable()"], "Fixed commit": "a53269c4ad6b324d390c2312f45f5dbd72bf652e", "Url": "https://api.github.com/repos/parshimers/incubator-asterixdb", "Date": "2013-05-09T21:34:22Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((java.util.Vector) (tempObj)).contains(subscriber)) == false) ((java.util.Vector) (tempObj)).addElement(subscriber);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3940/buggy-version/BikeRental.src.impres.impresario.Registry.java", "BodyUseAPI": ["java.lang.Object.addElement(java.lang.Object)"], "Fixed commit": "6ee3eb3dee75aeeb85246c444c4a38a66361d365", "Url": "https://api.github.com/repos/rjoac1/CSC_429_GroupProj", "Date": "2015-05-06T18:18:50Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (phase >= 360) phase = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3815/buggy-version/VanishingPoint.src.pgmutilities.PgmUtilities.java", "BodyUseAPI": [], "Fixed commit": "3667bcc3ad02a7c16c2f71a026f28cd14c0e081d", "Url": "https://api.github.com/repos/GRausa/ComputerVision", "Date": "2016-11-24T09:57:50Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.mule.runtime.core.api.MuleContext.class.isAssignableFrom(dependencyType)) { field.set(object, muleContext); }else { java.lang.Object dependency = lookupObject(dependencyType); if (dependency != null) { field.set(object, dependency); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/40/buggy-version/core.src.main.java.org.mule.runtime.core.registry.SimpleRegistry.java", "BodyUseAPI": ["org.mule.runtime.core.registry.SimpleRegistry.lookupObject(java.lang.Class<?>)"], "Fixed commit": "592c81eb9fd4a4c19db69cad12f092c13e691c43", "Url": "https://api.github.com/repos/mulesoft/mule", "Date": "2017-01-09T23:55:36Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mGpsTracker.isHRConnected()) { hrVal = mGpsTracker.getCurrentHRValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2633/buggy-version/src.org.runnerup.view.StartActivity.java", "BodyUseAPI": ["org.runnerup.gpstracker.GpsTracker.getCurrentHRValue()"], "Fixed commit": "d2f13291bb099c3c0166eccebad0f93745de74e1", "Url": "https://api.github.com/repos/jonasoreland/runnerup", "Date": "2013-12-21T08:58:34Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((debug_log) != null) { dbg_zip = debug_log.replace(\"debug.log\", \"ums_dbg.zip\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2079/buggy-version/src.main.java.net.pms.newgui.DbgPacker.java", "BodyUseAPI": [], "Fixed commit": "98fddfd02db90eaa0fbb89ddbac4aebc8d0b50e1", "Url": "https://api.github.com/repos/UniversalMediaServer/UniversalMediaServer", "Date": "2015-06-15T20:28:04Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((children[i]) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4084/buggy-version/Urab.java", "BodyUseAPI": [], "Fixed commit": "34cefff1030ea037f1b28b9d0e2757c01ba6d7d2", "Url": "https://api.github.com/repos/LucidThought/JavaCommandInterpreter", "Date": "2015-03-13T22:01:18Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (head != null) { java.lang.System.out.println(head.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4084/buggy-version/Urab.java", "BodyUseAPI": ["ParseTreeNode.toString()", "java.io.PrintStream.println(head.toString())"], "Fixed commit": "34cefff1030ea037f1b28b9d0e2757c01ba6d7d2", "Url": "https://api.github.com/repos/LucidThought/JavaCommandInterpreter", "Date": "2015-03-13T22:01:18Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (indexOf == (-1)) return obj;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5302/buggy-version/app.src.main.java.it.unical.mat.andlv.mapper.ASPMapper.java", "BodyUseAPI": [], "Fixed commit": "eb81a9812bcff1ce95d82a0a880e509b88ea930e", "Url": "https://api.github.com/repos/dave90/ANDLV", "Date": "2015-04-20T10:59:45Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.unical.mat.andlv.mapper.ASPMapper.getClass(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cl == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5302/buggy-version/app.src.main.java.it.unical.mat.andlv.mapper.ASPMapper.java", "BodyUseAPI": [], "Fixed commit": "eb81a9812bcff1ce95d82a0a880e509b88ea930e", "Url": "https://api.github.com/repos/dave90/ANDLV", "Date": "2015-04-20T10:59:45Z"},
{"Line": "=>750", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((partsReservation) != null) partsReservation.release();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5125/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.job.GridJobWorker.java", "BodyUseAPI": [], "Fixed commit": "acd9efc5a6c967bc70d5957436e4d1a43ecc12fa", "Url": "https://api.github.com/repos/gridgain/apache-ignite", "Date": "2016-07-19T10:28:11Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.outputStream) != null) { final java.io.OutputStream outputStream = this.outputStream; updateWriter(outputStream, encoding); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/9223/buggy-version/src.main.java.org.jboss.logmanager.handlers.OutputStreamHandler.java", "BodyUseAPI": [], "Fixed commit": "fdf5f2b470eec1d81a5f496bde027664e13e4af0", "Url": "https://api.github.com/repos/jboss-logging/jboss-logmanager", "Date": "2013-08-09T09:27:45Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((line.trim().length()) <= 1) || (line.startsWith(\"#\"))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7471/buggy-version/src.main.java.com.flipkart.fdp.migration.distcp.utils.MirrorUtils.java", "BodyUseAPI": [], "Fixed commit": "caf84cc1e1835986fe249363ae25e5ccdb8542db", "Url": "https://api.github.com/repos/flipkart-incubator/BlueShift", "Date": "2015-08-27T19:54:23Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ln.isEmpty())) ls.add(ln);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5778/buggy-version/src.org.dyndns.fzoli.rccar.bridge.Config.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "d2e4c52e16d8510ba45a594e5d42081db5bb5176", "Url": "https://api.github.com/repos/fzoli/RemoteControlCar", "Date": "2012-09-29T23:12:19Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (NearbyActivity.mSelectedLocations.containsKey(getName(cursor))) { ckCheck.setChecked(true); }else { ckCheck.setChecked(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2487/buggy-version/app.src.main.java.com.example.idreams.dot.nearby.NearbyCursorAdapter.java", "BodyUseAPI": [], "Fixed commit": "a20e8b1d6a9f8f436cc8007a529884eee0733a59", "Url": "https://api.github.com/repos/idreamsintern/DiscoverOnTravel", "Date": "2015-07-21T15:05:57Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (syncMeta) { super.sync(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8131/buggy-version/src.openblocks.common.tileentity.NetworkedTileEntity.java", "BodyUseAPI": [], "Fixed commit": "8027d34d3271c5d1b4e1e8e770099920e85e087d", "Url": "https://api.github.com/repos/OpenMods/OpenBlocks", "Date": "2013-09-06T09:45:32Z"},
{"Line": "=>1089", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.api.context.Context.getVisitService().getActiveVisitsByPatient(org.openmrs.Patient)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(vis.isEmpty())) { for (org.openmrs.Visit v : vis) { o.setObsDatetime(v.getStartDatetime()); } }else { java.util.List<org.openmrs.Visit> visit = org.openmrs.api.context.Context.getVisitService().getVisitsByPatient(patient); if (visit != null) { if ((visit.size()) > 0) { org.openmrs.Visit v = visit.get(0); o.setObsDatetime(v.getStartDatetime()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6353/buggy-version/omod.src.main.java.org.openmrs.module.kenyaemr.fragment.controller.patient.EditPatientFragmentController.java", "BodyUseAPI": [], "Fixed commit": "9f46bb14bb5b5000e1da3b985cdf2e9e3b78f075", "Url": "https://api.github.com/repos/hispindia/his-tb-emr", "Date": "2017-02-27T06:00:22Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLastLocation) != null) { double longitude = mLastLocation.getLongitude(); double latitude = mLastLocation.getLatitude(); currentLocation = new com.google.android.gms.maps.model.LatLng(latitude, longitude); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6820/buggy-version/app.src.main.java.waterlogging.pilatus.in.datacollection.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "7e531836927d1a7eb4bff3d865098901c1f6a310", "Url": "https://api.github.com/repos/vumaasha/Waterlog", "Date": "2016-01-12T09:46:00Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((l.getWidth()) == 0) l.setWidth(1.0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/53/buggy-version/src.main.java.de.unihalle.informatik.MiToBo.core.imageJ.RoiManagerAdapter.java", "BodyUseAPI": ["de.unihalle.informatik.MiToBo.core.imageJ.MTBLineSegment2D.setWidth(double)"], "Fixed commit": "31af26948cb902ca4527f9301e0367c06d16d26a", "Url": "https://api.github.com/repos/mitobo-hub/mitobo", "Date": "2017-09-12T08:49:46Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((l.getWidth()) == 0) l.setWidth(1.0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/53/buggy-version/src.main.java.de.unihalle.informatik.MiToBo.core.imageJ.RoiManagerAdapter.java", "BodyUseAPI": ["de.unihalle.informatik.MiToBo.core.imageJ.MTBLineSegment2D.setWidth(double)"], "Fixed commit": "31af26948cb902ca4527f9301e0367c06d16d26a", "Url": "https://api.github.com/repos/mitobo-hub/mitobo", "Date": "2017-09-12T08:49:46Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(directory.exists())) { directory.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6867/buggy-version/app.src.main.java.com.example.charles.concentrationpalace.ScreenShot.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "05ccc915f0142cec40c4564584df8f426b00eacb", "Url": "https://api.github.com/repos/czycharles/ConcentrationPalace", "Date": "2017-10-24T05:48:00Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(directory.exists())) { directory.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6867/buggy-version/app.src.main.java.com.example.charles.concentrationpalace.MyPalaceActivity.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "05ccc915f0142cec40c4564584df8f426b00eacb", "Url": "https://api.github.com/repos/czycharles/ConcentrationPalace", "Date": "2017-10-24T05:48:00Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gpsDirectory.containsTag(GpsDirectory.TAG_GPS_ALTITUDE)) { gps.setAttribute(\"alt\", gpsDirectory.getRational(GpsDirectory.TAG_GPS_ALTITUDE).toSimpleString(true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3851/buggy-version/src.ru.pp.maxcom.ExifXsl.java", "BodyUseAPI": ["com.drew.metadata.Directory.getRational(GpsDirectory.TAG_GPS_ALTITUDE)", "org.w3c.dom.Element.setAttribute(java.lang.String,gpsDirectory.getRational(GpsDirectory.TAG_GPS_ALTITUDE).toSimpleString(true))", "gpsDirectory.getRational(GpsDirectory.TAG_GPS_ALTITUDE).toSimpleString(boolean)"], "Fixed commit": "38b7a5fbebfe6f21d3804f603342ee1247e5edc3", "Url": "https://api.github.com/repos/maxcom/exifxsl", "Date": "2013-05-09T07:47:09Z"},
{"Line": "=>1739", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((allTags) == null) { dialog.dismiss(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2646/buggy-version/src.com.ichi2.anki.StudyOptions.java", "BodyUseAPI": [], "Fixed commit": "6b372547759095740bd062cd0b56f9cee50af44f", "Url": "https://api.github.com/repos/nobnago/Anki-Android", "Date": "2011-10-25T08:09:00Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pageStack.size()) > 0) { if (page != (pageStack.peek())) { pageStack.add(currentPage); }else { pageStack.pop(); } }else { pageStack.add(currentPage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/33/buggy-version/Civilizations.src.main.java.com.kylantraynor.civilizations.menus.GroupMenu.java", "BodyUseAPI": ["java.util.Stack<com.kylantraynor.civilizations.menus.pages.MenuPage>.peek()", "java.util.Stack<com.kylantraynor.civilizations.menus.pages.MenuPage>.add(com.kylantraynor.civilizations.menus.pages.MenuPage)", "java.util.Stack<com.kylantraynor.civilizations.menus.pages.MenuPage>.add(com.kylantraynor.civilizations.menus.pages.MenuPage)", "java.util.Stack<com.kylantraynor.civilizations.menus.pages.MenuPage>.pop()"], "Fixed commit": "4545f5b4c6943860ff8a475441315a65623f0b03", "Url": "https://api.github.com/repos/KylanTraynor/Civilizations", "Date": "2017-02-28T13:06:34Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<double[]>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((res_ar[WK_HoughCircles.IVOTE]) < vt) { res_ar[WK_HoughCircles.IVOTE] = vt; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7092/buggy-version/WK_HoughCircles.java", "BodyUseAPI": [], "Fixed commit": "f52ea4ef8e1c8dfb2b1d5d0db0e307281b75d68d", "Url": "https://api.github.com/repos/WAKU-TAKE-A/IJToolsUsingOpenCV", "Date": "2016-07-23T13:19:01Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((choice) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/956/buggy-version/src.main.java.com.three_stack.maximum_alpha.backend.game.prompts.steps.ChooseStep.java", "BodyUseAPI": [], "Fixed commit": "a2b49048627489e6507553cbf47f828a5557d6ea", "Url": "https://api.github.com/repos/3StackGames/max-alpha-be", "Date": "2016-01-27T06:41:12Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index == (indexOfMarker.length)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8293/buggy-version/marker.src.main.java.com.flytxt.parser.marker.Marker.java", "BodyUseAPI": [], "Fixed commit": "023e9169ccf91a718e80009bd57597ddaa981d7b", "Url": "https://api.github.com/repos/arunsoman/text-processor", "Date": "2016-10-14T13:02:42Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mVisibility) != (android.view.View.VISIBLE)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/673/buggy-version/library.src.main.java.com.nicaiya.canvaslayout.library.BaseUIElement.java", "BodyUseAPI": [], "Fixed commit": "01941799456fd2fe9d9e2a50962119b9169771fb", "Url": "https://api.github.com/repos/nicai1900/CanvasLayout", "Date": "2015-06-12T09:20:29Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Class<? extends com.mygdx.game.component.Component>, com.badlogic.gdx.utils.Array<com.mygdx.game.component.Component>>.get(java.lang.Class<T>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (list != null) { for (com.mygdx.game.component.Component comp : ownedMap.get(cls)) if (predicate.test(((T) (comp)))) return ((T) (comp)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3540/buggy-version/core.src.com.mygdx.game.component.Colony.java", "BodyUseAPI": [], "Fixed commit": "7084a524635da79fda0e8d674fd4254064eff2db", "Url": "https://api.github.com/repos/Pahasz/ColonyGame", "Date": "2015-09-08T08:26:14Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isDirectory) { maxim.z.FSUtils.writeIntAsBytesToArray(result, FSConstants.FileHeaderOffsets.FILE_SIZE, size); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7627/buggy-version/src.main.java.maxim.z.FSUtils.java", "BodyUseAPI": [], "Fixed commit": "fedca59fea85db75c6f7ab4381e6e2f9fb296eb4", "Url": "https://api.github.com/repos/Dead-off/FSTestTask", "Date": "2017-08-07T18:16:44Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (background) { getLog().debug((\"Executing command line in background: \" + commandLine)); executeCommandLineInBackground(exec, commandLine, enviro, stdout, stderr); }else { getLog().debug((\"Executing command line: \" + commandLine)); int resultCode = executeCommandLine(exec, commandLine, enviro, stdout, stderr); if (isResultCodeAFailure(resultCode)) { throw new org.apache.maven.plugin.MojoExecutionException(((((\"Result of \" + commandLine) + \" execution is: '\") + resultCode) + \"'.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2648/buggy-version/src.main.java.org.codehaus.mojo.exec.ExecMojo.java", "BodyUseAPI": [], "Fixed commit": "0768dbd2f32a7cd237fb4dc2ddb74faa5b151034", "Url": "https://api.github.com/repos/ispringer/exec-maven-plugin", "Date": "2012-03-15T20:38:41Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["util.MappingThreadsToLamps.getInstance().get(java.lang.Long)", "rest.DTO.getLampId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((t.getListAdjustment().getMappingAdjustmentToLamps().get(id)) == null) { org.json.simple.JSONObject jo = new org.json.simple.JSONObject(); jo.put(\"responseCode\", \"UpdateError\"); org.springframework.http.ResponseEntity<org.json.simple.JSONObject> response = new org.springframework.http.ResponseEntity<org.json.simple.JSONObject>(jo, org.springframework.http.HttpStatus.NOT_FOUND); return response; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4429/buggy-version/src.main.java.rest.CRUDServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "26ecf92eb67b0e47d820e4df80fc9f9974fd76b1", "Url": "https://api.github.com/repos/calmar3/sensors-system", "Date": "2017-04-23T17:49:52Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (play.modules.redis.RedisCacheImpl.isRedisCacheCleanOnStop()) { play.modules.redis.RedisCacheImpl.getCacheConnection().flushAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/941/buggy-version/src.play.modules.redis.RedisCacheImpl.java", "BodyUseAPI": [], "Fixed commit": "15d0b8095f2e484dafac5145e3591bc0754eb7e7", "Url": "https://api.github.com/repos/coolgo/play-redis", "Date": "2017-02-14T08:17:21Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < ((members.size()) - 1)) { fw.append(\"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5942/buggy-version/src.com.company.DatabaseController.java", "BodyUseAPI": [], "Fixed commit": "b2d7f8760d2b5ebcdc5f5350deafa16269bd19bc", "Url": "https://api.github.com/repos/Jeaksen/Dolphin", "Date": "2017-11-29T15:40:06Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < ((dDTB.getSize()) - 1)) fw.append(\"\\n\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5942/buggy-version/src.com.company.DatabaseController.java", "BodyUseAPI": [], "Fixed commit": "b2d7f8760d2b5ebcdc5f5350deafa16269bd19bc", "Url": "https://api.github.com/repos/Jeaksen/Dolphin", "Date": "2017-11-29T15:40:06Z"},
{"Line": "=>594", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.util.TreeSet<org.wso2.andes.kernel.slot.Slot>>.remove(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (assignedOverlappedSlotList != null) { slotListToReturn.addAll(assignedOverlappedSlotList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8214/buggy-version/modules.andes-core.broker.src.main.java.org.wso2.andes.server.cluster.coordination.hazelcast.HazelcastAgent.java", "BodyUseAPI": ["java.util.TreeSet<org.wso2.andes.kernel.slot.Slot>.addAll(java.util.TreeSet<org.wso2.andes.kernel.slot.Slot>)"], "Fixed commit": "09e779002cb219044843d3673374692b7f0c94af", "Url": "https://api.github.com/repos/abeykoon/andes", "Date": "2015-07-11T04:39:43Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(getActivity())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(prefs.getBoolean(net.i2p.android.preferences.GraphsPreferenceFragment.GRAPH_PREFERENCES_SEEN, false))) prefs.edit().putBoolean(net.i2p.android.preferences.GraphsPreferenceFragment.GRAPH_PREFERENCES_SEEN, true).apply();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/239/buggy-version/app.src.main.java.net.i2p.android.preferences.GraphsPreferenceFragment.java", "BodyUseAPI": ["prefs.edit().putBoolean(net.i2p.android.preferences.GraphsPreferenceFragment.GRAPH_PREFERENCES_SEEN, true).apply()", "android.content.SharedPreferences.edit()", "prefs.edit().putBoolean(java.lang.String,boolean)"], "Fixed commit": "2e6ff0ac07ce3abe24c559d1c7dc9ccca62916a7", "Url": "https://api.github.com/repos/i2p/i2p.android.base", "Date": "2015-05-08T08:18:22Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (preferences.getBoolean(GraphsPreferenceFragment.GRAPH_PREFERENCES_SEEN, false)) routerProps.setProperty(\"stat.summaries\", \"\"); else toRemove.setProperty(\"stat.summaries\", \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/239/buggy-version/app.src.main.java.net.i2p.android.router.util.Util.java", "BodyUseAPI": [], "Fixed commit": "2e6ff0ac07ce3abe24c559d1c7dc9ccca62916a7", "Url": "https://api.github.com/repos/i2p/i2p.android.base", "Date": "2015-05-08T08:18:22Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (title != null) { list.add(new acr.browser.lightning.database.HistoryItem(url, title)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1025/buggy-version/app.src.main.java.acr.browser.lightning.database.BookmarkLocalSync.java", "BodyUseAPI": ["java.util.List<acr.browser.lightning.database.HistoryItem>.add(acr.browser.lightning.database.HistoryItem)"], "Fixed commit": "7f4cab1e2eee9e268dd6ab41c4065da86471799a", "Url": "https://api.github.com/repos/DF1E/Lightning-Browser", "Date": "2016-02-07T03:06:24Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (title != null) { list.add(new acr.browser.lightning.database.HistoryItem(url, title)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1025/buggy-version/app.src.main.java.acr.browser.lightning.database.BookmarkLocalSync.java", "BodyUseAPI": ["java.util.List<acr.browser.lightning.database.HistoryItem>.add(acr.browser.lightning.database.HistoryItem)"], "Fixed commit": "7f4cab1e2eee9e268dd6ab41c4065da86471799a", "Url": "https://api.github.com/repos/DF1E/Lightning-Browser", "Date": "2016-02-07T03:06:24Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.wso2.carbon.bpmn.core.mgt.services.BPMNDeploymentService.log.isDebugEnabled()) { org.wso2.carbon.bpmn.core.mgt.services.BPMNDeploymentService.log.debug((\"Maximum Delete count : \" + (maximumDeleteCount))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/9089/buggy-version/components.bpmn.org.wso2.carbon.bpmn.src.main.java.org.wso2.carbon.bpmn.core.mgt.services.BPMNDeploymentService.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)"], "Fixed commit": "38ded52d51724900db9f9e596776bef00b42f79c", "Url": "https://api.github.com/repos/milindaperera/carbon-business-process", "Date": "2015-09-10T10:14:08Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endpoints.isEmpty()) { endpoints = getEndpoints(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5351/buggy-version/semagrow-stack-modules-querydecomp.src.main.java.eu.semagrow.stack.modules.querydecomp.selector.VOIDSourceSelector.java", "BodyUseAPI": [], "Fixed commit": "b1261b990bfabc629517cb2686d1322facfba5a5", "Url": "https://api.github.com/repos/semagrow/semagrow-stack-modules", "Date": "2015-03-05T11:41:20Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isGroupFiles())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/491/buggy-version/components.formats-bsd.src.loci.formats.in.MicromanagerReader.java", "BodyUseAPI": [], "Fixed commit": "397f81914820762af24a737c63757df586b4837e", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-03-25T17:34:35Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["loci.formats.FormatReader.isThisType(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (valid && (!(isGroupFiles()))) { try { return isSingleFile(metaFile); } catch (java.lang.Exception e) { loci.formats.in.LOGGER.debug(\"\", e); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/491/buggy-version/components.formats-bsd.src.loci.formats.in.OMETiffReader.java", "BodyUseAPI": [], "Fixed commit": "397f81914820762af24a737c63757df586b4837e", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-03-25T17:34:35Z"},
{"Line": "=>615", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ucar.unidata.idv.control.DerivedDataChoice.getChoices()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((choices0.size()) == 1) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4725/buggy-version/src.ucar.unidata.idv.control.GridTrajectoryControl.java", "BodyUseAPI": [], "Fixed commit": "81fb071261b7b86508cde87d2a562a894a0bb85f", "Url": "https://api.github.com/repos/mhiley/IDV", "Date": "2013-02-15T20:26:02Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["clojure.lang.Var.invoke(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null != o) { o.hashCode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5659/buggy-version/plugin.clojure.src.main.java.com.twosigma.beaker.clojure.util.ClojureEvaluator.java", "BodyUseAPI": ["java.lang.Object.hashCode()"], "Fixed commit": "b7cccbab1c1c41d06c5880a9405298b586e343dc", "Url": "https://api.github.com/repos/twosigma/beakerx", "Date": "2015-11-30T22:09:47Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((t.inner) == 0) return l;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4452/buggy-version/src.main.java.il.org.spartan.spartanizer.utils.tdd.getAll.java", "BodyUseAPI": [], "Fixed commit": "9630ae5cb376a345ac90a1b638f001e28751ef81", "Url": "https://api.github.com/repos/SpartanRefactoring/Main", "Date": "2016-11-03T19:52:31Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ($ == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4452/buggy-version/src.main.java.il.org.spartan.spartanizer.utils.tdd.getAll.java", "BodyUseAPI": [], "Fixed commit": "9630ae5cb376a345ac90a1b638f001e28751ef81", "Url": "https://api.github.com/repos/SpartanRefactoring/Main", "Date": "2016-11-03T19:52:31Z"},
{"Line": "=>1834", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.dynamicItems) == null) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8/buggy-version/modules.uipage.src.main.java.org.shaolin.uimaster.page.cache.UIFormObject.java", "BodyUseAPI": [], "Fixed commit": "598f805edbfe50903f135eec20582fad947cdb72", "Url": "https://api.github.com/repos/shaolinwu/uimaster", "Date": "2016-03-13T14:29:22Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uri.indexOf(\"access_token=\")) != (-1)) { throw new java.lang.IllegalArgumentException((\"uri\u53c2\u6570\u4e2d\u4e0d\u5141\u8bb8\u6709access_token: \" + uri)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7483/buggy-version/weixin-java-cp.src.main.java.me.chanjar.weixin.cp.api.WxCpServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "cf9ccbc54dae3e90b7f285fb7b5793f39b089515", "Url": "https://api.github.com/repos/ukid/weixin-java-tools", "Date": "2015-08-03T09:30:28Z"},
{"Line": "=>651", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uri.indexOf(\"access_token=\")) != (-1)) { throw new java.lang.IllegalArgumentException((\"uri\u53c2\u6570\u4e2d\u4e0d\u5141\u8bb8\u6709access_token: \" + uri)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7483/buggy-version/weixin-java-mp.src.main.java.me.chanjar.weixin.mp.api.WxMpServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "cf9ccbc54dae3e90b7f285fb7b5793f39b089515", "Url": "https://api.github.com/repos/ukid/weixin-java-tools", "Date": "2015-08-03T09:30:28Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.apps.analytics.GoogleAnalyticsTracker.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (tracker != null) tracker.trackEvent(\"Weather\", e.getMessage(), (\"\" + (gotsPreferences.getWeatherApiKey())), 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8508/buggy-version/gardening-manager-android.src.org.gots.weather.provider.previmeteo.PrevimeteoWeatherProvider.java", "BodyUseAPI": ["com.google.android.apps.analytics.GoogleAnalyticsTracker.trackEvent(java.lang.String,java.lang.String,(\"\" + (gotsPreferences.getWeatherApiKey())),int)"], "Fixed commit": "3de67c26a4749189b28c64bbdd7735e0d37668cb", "Url": "https://api.github.com/repos/artmoni/gardening-manager-android", "Date": "2015-08-02T12:59:11Z"},
{"Line": "=>972", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNotNull(dossier.getEstimateDatetime())) { if (dossier.getEstimateDatetime().before(now)) { statusLabel = com.liferay.portal.kernel.language.LanguageUtil.get(locale, \"status-toosoon\"); }else if (dossier.getEstimateDatetime().after(now)) { statusLabel = com.liferay.portal.kernel.language.LanguageUtil.get(locale, \"status-toolate\"); } }else { if ((com.liferay.portal.kernel.util.Validator.isNull(dossier.getEstimateDatetime())) && (com.liferay.portal.kernel.util.Validator.isNotNull(dossier.getFinishDatetime()))) { statusLabel = com.liferay.portal.kernel.language.LanguageUtil.get(locale, \"status-ontime\"); }else { if ((com.liferay.portal.kernel.util.Validator.isNull(dossier.getEstimateDatetime())) && (com.liferay.portal.kernel.util.Validator.isNull(dossier.getFinishDatetime()))) { statusLabel = com.liferay.portal.kernel.language.LanguageUtil.get(locale, \"status-toosoon\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/961/buggy-version/portlets.opencps-portlet.docroot.WEB-INF.src.org.opencps.util.PortletUtil.java", "BodyUseAPI": ["com.liferay.portal.kernel.util.Validator.isNotNull(dossier.getFinishDatetime())", "org.opencps.dossiermgt.model.Dossier.getEstimateDatetime()", "com.liferay.portal.kernel.util.Validator.isNull(dossier.getEstimateDatetime())", "org.opencps.dossiermgt.model.Dossier.getEstimateDatetime()", "org.opencps.dossiermgt.model.Dossier.getEstimateDatetime()", "org.opencps.dossiermgt.model.Dossier.getFinishDatetime()", "org.opencps.dossiermgt.model.Dossier.getEstimateDatetime()", "dossier.getEstimateDatetime().after(java.util.Date)", "dossier.getEstimateDatetime().before(java.util.Date)", "org.opencps.dossiermgt.model.Dossier.getFinishDatetime()", "com.liferay.portal.kernel.util.Validator.isNull(dossier.getEstimateDatetime())", "com.liferay.portal.kernel.util.Validator.isNull(dossier.getFinishDatetime())"], "Fixed commit": "6f310fac89e1a085f23ed3b1568483351c56bcc8", "Url": "https://api.github.com/repos/nvp191/opencps", "Date": "2016-10-11T02:06:31Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(files.isEmpty())) { cache.writeToFile(cacheFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/9125/buggy-version/OsmAndMapCreator.src.net.osmand.swing.OsmExtractionUI.java", "BodyUseAPI": [], "Fixed commit": "77ecd5e2894b1261891977f97543fa689157fe03", "Url": "https://api.github.com/repos/osmandapp/OsmAnd-tools", "Date": "2016-10-11T08:39:14Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((profile.getUsername()) == null) { profile.setUsername(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2142/buggy-version/app.src.main.java.edu.tufts.cs.comp150.youin.DatabaseManager.java", "BodyUseAPI": ["edu.tufts.cs.comp150.youin.Profile.setUsername(java.lang.String)"], "Fixed commit": "a677e50e3929cd8b62533a1b3eca9c366ca5e29c", "Url": "https://api.github.com/repos/fhattl01/youin", "Date": "2017-12-07T01:02:57Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Document.getDocumentElement()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (docElem != null) doc.removeChild(docElem);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6816/buggy-version/sweble-wom3-swc-adapter.src.main.java.org.sweble.wom3.swcadapter.AstToWomConverter.java", "BodyUseAPI": ["org.w3c.dom.Document.removeChild(org.w3c.dom.Element)"], "Fixed commit": "0f9167b30a58c2dfabc7fbf293c543d3e27b6edb", "Url": "https://api.github.com/repos/sweble/sweble-wom3", "Date": "2015-05-13T10:47:54Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.inceptai.dobby.expert.ExpertChatService.parse(com.google.firebase.database.DataSnapshot)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.inceptai.dobby.expert.ExpertChatUtil.isDisplayableMessageType(expertChat)) { chatCallback.onMessageAvailable(expertChat); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3754/buggy-version/Dobby.app.src.main.java.com.inceptai.dobby.expert.ExpertChatService.java", "BodyUseAPI": ["com.inceptai.dobby.expert.ExpertChatService.ChatCallback.onMessageAvailable(com.inceptai.dobby.expert.ExpertChat)"], "Fixed commit": "bc2e29576261eec4940b75bd209a7088c5860b32", "Url": "https://api.github.com/repos/InceptAi/dobby-android", "Date": "2017-06-14T23:42:07Z"},
{"Line": "=>496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(globalIndex1.getProvisionedThroughput().getWriteCapacityUnits().equals(globalIndex2.getProvisionedThroughput().getWriteCapacityUnits()))) { throw new org.sagebionetworks.bridge.exceptions.BridgeInitializationException(((((\"Table \" + tableName) + \" global index \") + indexName) + \" is changing the provisioned write capacity.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/335/buggy-version/app.org.sagebionetworks.bridge.dynamodb.DynamoInitializer.java", "BodyUseAPI": [], "Fixed commit": "fb09525499cf5b010b66f2a0fc9d1e7c852f1375", "Url": "https://api.github.com/repos/alxdarksage/BridgePF", "Date": "2015-01-13T22:54:08Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(org.apache.commons.lang3.StringUtils.isEmpty(ownerName))) && (!(org.apache.commons.lang3.StringUtils.isEmpty(kind)))) { entities = bucketRepository.findByOwnerIsInContainingKind(owners, kind); }else if (!(org.apache.commons.lang3.StringUtils.isEmpty(ownerName))) { entities = bucketRepository.findByOwner(ownerName); }else if (!(org.apache.commons.lang3.StringUtils.isEmpty(kind))) { entities = bucketRepository.findContainingKind(kind); }else { entities = bucketRepository.findAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5641/buggy-version/src.main.java.org.ow2.proactive.catalog.service.BucketService.java", "BodyUseAPI": ["org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)", "org.ow2.proactive.catalog.repository.BucketRepository.findByOwnerIsInContainingKind(java.util.List<java.lang.String>,java.lang.String)", "org.ow2.proactive.catalog.repository.BucketRepository.findByOwner(java.lang.String)", "org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)", "org.ow2.proactive.catalog.repository.BucketRepository.findContainingKind(java.lang.String)"], "Fixed commit": "88c94b88b4347b832eddc6d675c80ea97aaae016", "Url": "https://api.github.com/repos/yinan-liu/catalog", "Date": "2017-08-24T10:04:18Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(path.startsWith(\"file:/\"))) && (path.startsWith(\"file:\"))) { path = \"file:/\" + (path.substring(5, path.length())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/972/buggy-version/portal-impl.src.com.liferay.portal.module.framework.RuntimeServiceLoaderCondition.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "972c0ba826a48d49d462d9e4ee9ff15e46ed9cf1", "Url": "https://api.github.com/repos/brianwulbern/liferay-portal", "Date": "2015-09-24T21:18:42Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["T.unwrap()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(getCollectionItems().contains(unwrappedEntity))) { getCollectionItems().add(unwrappedEntity); notifyOnAddEvent(unwrappedEntity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7813/buggy-version/database-provider.src.main.java.org.jboss.pressgang.ccms.wrapper.collection.DBCollectionWrapper.java", "BodyUseAPI": ["java.util.Collection<U>.add(U)", "org.jboss.pressgang.ccms.wrapper.collection.DBCollectionWrapper<T, U>.notifyOnAddEvent(U)"], "Fixed commit": "10743bedcd9f3f3ab062c6ba61b82d7f8bcda9d7", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSDatasourceProviders", "Date": "2013-08-07T02:39:19Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<symposium.model.Panel>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((p.get(j).getVenueTime()) != null) { if (p.get(j).getVenueTime().TIME.doesIntersect(vt.TIME)) { panelistOverlap = true; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6868/buggy-version/src.symposium.model.ScheduleData.java", "BodyUseAPI": ["java.util.List<symposium.model.Panel>.get(int)", "p.get(j).getVenueTime()", "p.get(j).getVenueTime().TIME.doesIntersect(vt.TIME)"], "Fixed commit": "2c880d6aa1ca02a89b392df31640943222c8bf10", "Url": "https://api.github.com/repos/SymposiumScheduler/Symposium", "Date": "2015-12-05T01:21:47Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<symposium.model.Panel>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((appear.getVenueTime()) != null) { if (appear.getVenueTime().TIME.doesIntersect(day)) { assigned++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6868/buggy-version/src.symposium.model.ScheduleData.java", "BodyUseAPI": ["symposium.model.Panel.getVenueTime()", "appear.getVenueTime().TIME.doesIntersect(symposium.model.Range)"], "Fixed commit": "2c880d6aa1ca02a89b392df31640943222c8bf10", "Url": "https://api.github.com/repos/SymposiumScheduler/Symposium", "Date": "2015-12-05T01:21:47Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.barteksc.pdfviewer.RenderingTaskQueue<com.github.barteksc.pdfviewer.RenderingHandler.RenderingTask>.pollTask()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (task == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/117/buggy-version/android-pdf-viewer.src.main.java.com.github.barteksc.pdfviewer.RenderingHandler.java", "BodyUseAPI": [], "Fixed commit": "ee770a50a30ff33aee0333c2a0d30dd51f092a16", "Url": "https://api.github.com/repos/leixin525/AndroidPdfViewer", "Date": "2017-12-22T07:51:18Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(operandStack.isEmpty())) o = operandStack.removeFirst();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3163/buggy-version/src.com.laneve.deadlock.models.Environment.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.String>.removeFirst()"], "Fixed commit": "11c1017dd92de1c5c5c4d76f4696449d7539595e", "Url": "https://api.github.com/repos/abelunibo/JDA_students-version", "Date": "2015-05-23T09:17:48Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (command.getName().equalsIgnoreCase(\"cmsg\")) { if (sender instanceof org.bukkit.entity.Player) { getServer().broadcastMessage(((((((\"<\" + (org.bukkit.ChatColor.GREEN)) + (sender.getName())) + (org.bukkit.ChatColor.BLACK)) + \"> \") + (org.bukkit.ChatColor.GREEN)) + (Join(args, 0)))); }else { sender.sendMessage(((org.bukkit.ChatColor.RED) + \"Needs to be run as a player\")); } }else if (command.getName().equalsIgnoreCase(\"me\")) { if (sender instanceof org.bukkit.entity.Player) { getServer().broadcastMessage((((\"* \" + (org.bukkit.ChatColor.stripColor(sender.getName()))) + \" \") + (Join(args, 0)))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6279/buggy-version/src.nu.nerd.nerdmessage.NerdMessage.java", "BodyUseAPI": ["command.getName().equalsIgnoreCase(java.lang.String)", "org.bukkit.command.Command.getName()"], "Fixed commit": "66f9d4b704b527b390e71a0cbf5bc7c1bd0ad214", "Url": "https://api.github.com/repos/NerdNu/NerdMessage", "Date": "2012-08-21T22:35:39Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (user == null) { if (args[0].equalsIgnoreCase(\"console\")) { receiver = getServer().getConsoleSender(); }else { receiver = getServer().getPlayer(args[0]); } user = getOrCreateUser(sender.getName()); }else { if (user.getReplyTo().equalsIgnoreCase(\"console\")) { receiver = getServer().getConsoleSender(); }else { receiver = getServer().getPlayer(user.getReplyTo()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6279/buggy-version/src.nu.nerd.nerdmessage.NerdMessage.java", "BodyUseAPI": ["nu.nerd.nerdmessage.NMUser.getReplyTo()", "user.getReplyTo().equalsIgnoreCase(java.lang.String)", "nu.nerd.nerdmessage.NMUser.getReplyTo()", "getServer().getPlayer(user.getReplyTo())"], "Fixed commit": "66f9d4b704b527b390e71a0cbf5bc7c1bd0ad214", "Url": "https://api.github.com/repos/NerdNu/NerdMessage", "Date": "2012-08-21T22:35:39Z"},
{"Line": "=>763", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((visualInboundEndpoint.getSocketTimeoutMs()) != (-1)) { addParameterForConfig(inboundEndpoint, InboundEndpointConstants.SOCKET_TIMEOUT_MS, java.lang.Integer.toString(visualInboundEndpoint.getSocketTimeoutMs())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3414/buggy-version/plugins.org.wso2.developerstudio.eclipse.gmf.esb.persistence.src.org.wso2.developerstudio.eclipse.gmf.esb.internal.persistence.InboundEndpointTransformer.java", "BodyUseAPI": ["java.lang.Integer.toString(visualInboundEndpoint.getSocketTimeoutMs())", "org.apache.synapse.inbound.InboundEndpoint.getSocketTimeoutMs()", "org.wso2.developerstudio.eclipse.gmf.esb.internal.persistence.InboundEndpointTransformer.addParameterForConfig(org.apache.synapse.inbound.InboundEndpoint,InboundEndpointConstants.SOCKET_TIMEOUT_MS,java.lang.String)"], "Fixed commit": "70b37e75684d96aa986fc1d25a33738ea34053c6", "Url": "https://api.github.com/repos/sumuditha-viraj/devstudio-tooling-esb", "Date": "2017-02-28T05:49:58Z"},
{"Line": "=>1081", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.imag.adele.apam.apamMavenPlugin.ApamCapability.getDcl(own.getComponent()).getReference()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(own.getComponent().getClass().isAssignableFrom(foundReference.getClass()))) { fr.imag.adele.apam.apamMavenPlugin.CheckObr.error((((\"Component in own expression is of the wrong type, expecting \" + (own.getComponent())) + \" found \") + foundReference)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2075/buggy-version/plugins.apam-maven-plugin.src.main.java.fr.imag.adele.apam.apamMavenPlugin.CheckObr.java", "BodyUseAPI": ["fr.imag.adele.apam.apamMavenPlugin.CheckObr.error((((\"Component in own expression is of the wrong type, expecting \" + (own.getComponent())) + \" found \") + foundReference))", "fr.imag.adele.apam.declarations.OwnedComponentDeclaration.getComponent()"], "Fixed commit": "ca208987c61821e4a3515d8d8ff75e3b8289d0c4", "Url": "https://api.github.com/repos/AdeleResearchGroup/ApAM", "Date": "2013-04-25T16:02:40Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mUpdater) != null) { mUpdater.updateNow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7516/buggy-version/src.com.hoccer.api.android.LinccLocationManager.java", "BodyUseAPI": [], "Fixed commit": "11de22ec90f82f8e1887861b1a68616533959bda", "Url": "https://api.github.com/repos/hoccer/android-api", "Date": "2011-05-05T15:36:34Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.resources.IResource.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (iResource == null) { iResource = ((org.eclipse.che.core.internal.resources.Workspace) (workspace)).newResource(resource.getFullPath().removeLastSegments(1), IResource.FOLDER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/196/buggy-version/plugin-java.che-plugin-java-ext-jdt.org-eclipse-core-resources.src.main.java.org.eclipse.che.core.internal.resources.mapping.ResourceChangeDescriptionFactory.java", "BodyUseAPI": [], "Fixed commit": "23e47d61669cc8e77953c49947cd0d7276daad4f", "Url": "https://api.github.com/repos/codenvy-legacy/che-plugins", "Date": "2015-11-30T15:48:05Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getData()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (imageUri != null) { originalImagePath = imageUri.getPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3336/buggy-version/catroid.src.org.catrobat.catroid.ui.controller.LookController.java", "BodyUseAPI": ["android.net.Uri.getPath()"], "Fixed commit": "e5ad635d9bf75f639a589a65b60977be1dc77e8d", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2014-10-29T11:12:46Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (AnimeIndex.appProp.getProperty(\"List_to_visualize_at_start\").equalsIgnoreCase(\"Daily\")) { util.Filters.setFilter(8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5900/buggy-version/src.util.task.LoadingTask.java", "BodyUseAPI": [], "Fixed commit": "0b452bf40b2c379f94ab18e25d1b63efd0c7ba97", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-11-15T19:32:36Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.startsWith(org.yawlfoundation.yawl.util.XNodeParser.UTF8_BOM)) s = s.substring(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4090/buggy-version/src.org.yawlfoundation.yawl.util.XNodeParser.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "60d7f05a1e67dbb5bc2489c7a80f3bc1e75a1b60", "Url": "https://api.github.com/repos/yawlfoundation/yawl", "Date": "2016-05-20T02:49:44Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.leonslegion.casino.InputHandler.getStringInput(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(org.apache.commons.lang3.math.NumberUtils.isParsable(stringID))) { java.lang.System.out.println(\"I don't recognize that as an account number.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7777/buggy-version/src.main.java.com.leonslegion.casino.Lobby.java", "BodyUseAPI": [], "Fixed commit": "a9b5b06cdf32c755f85fb56fbe5e74f5c621d1bd", "Url": "https://api.github.com/repos/jstamatelos/LeonsLegion", "Date": "2017-05-12T14:36:38Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["client.facade.Facade.getPoints(userCookie.getPlayerIndex())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (points > 10) { points = 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/827/buggy-version/java.src.client.points.PointsController.java", "BodyUseAPI": [], "Fixed commit": "ad9f13c654890753e81fa783da31faaf0198f958", "Url": "https://api.github.com/repos/CaptBoscho/Settlers-of-Catan", "Date": "2016-03-23T18:25:01Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jayway.jsonpath.JsonPath.read(java.lang.Object,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (val != null) list.add(((java.lang.String) (val.toString()))); else list.add(\"null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8165/buggy-version/src.main.java.be.ugent.mmlab.rml.processor.concrete.JSONPathProcessor.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.add(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "2d0b48d8c22eac0ed34a307750b5527bccc9553c", "Url": "https://api.github.com/repos/LinkedEOData/GeoTriples", "Date": "2015-05-29T00:53:54Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((moveListFactoryClass) == null) { throw new java.lang.IllegalArgumentException(((((\"The moveListFactoryConfig (\" + (this)) + \") lacks a moveListFactoryClass (\") + (moveListFactoryClass)) + \").\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/854/buggy-version/optaplanner-core.src.main.java.org.optaplanner.core.config.heuristic.selector.move.factory.MoveListFactoryConfig.java", "BodyUseAPI": [], "Fixed commit": "d378a1a55bcefaa683e7c0542ec199c43c9932c5", "Url": "https://api.github.com/repos/baldimir/optaplanner", "Date": "2015-01-21T15:00:36Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((moveIteratorFactoryClass) == null) { throw new java.lang.IllegalArgumentException(((((\"The moveIteratorFactoryConfig (\" + (this)) + \") lacks a moveListFactoryClass (\") + (moveIteratorFactoryClass)) + \").\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/854/buggy-version/optaplanner-core.src.main.java.org.optaplanner.core.config.heuristic.selector.move.factory.MoveIteratorFactoryConfig.java", "BodyUseAPI": [], "Fixed commit": "d378a1a55bcefaa683e7c0542ec199c43c9932c5", "Url": "https://api.github.com/repos/baldimir/optaplanner", "Date": "2015-01-21T15:00:36Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((iq.getElement().elements().size()) > 1) { errorElement = ((org.dom4j.Element) (iq.getElement().elements().get(1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3206/buggy-version/platform-infrastructure.comms-frwk.XCCommunicationMgr.src.main.java.org.societies.comm.xmpp.xc.impl.CommManagerHelper.java", "BodyUseAPI": ["iq.getElement().elements()", "iq.getElement().elements().get(int)", "org.xmpp.packet.IQ.getElement()"], "Fixed commit": "a9323f221ca4c5a2bf971de7c97ca98f24fc6b7c", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2013-02-27T14:00:40Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (strType.equals(\"Color\")) { strType = \"Vector4\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6644/buggy-version/proto.src.main.java.spix.swing.materialEditor.controller.DataHandler.java", "BodyUseAPI": [], "Fixed commit": "032c9349563d603d308124dc4d3026e3ee1e71eb", "Url": "https://api.github.com/repos/Simsilica/Spix", "Date": "2016-05-29T07:49:22Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((client.getState()) == (ru.sincore.adc.State.IDENTIFY)) { client.loadInfo(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1547/buggy-version/jdchub-core.src.main.java.ru.sincore.adc.action.handlers.INFHandler.java", "BodyUseAPI": ["ru.sincore.adc.action.handlers.INFHandler.loadInfo()"], "Fixed commit": "80ef64aed878ac25658880462697d662bd5502ea", "Url": "https://api.github.com/repos/ValorVl/jDcHub", "Date": "2012-06-13T02:15:25Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selStart <= selEnd) { currentSelection = getText().toString().substring(selStart, selEnd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/932/buggy-version/app.src.main.java.org.connectbot.TerminalView.java", "BodyUseAPI": ["getText().toString().substring(int,int)"], "Fixed commit": "173a3549b48ce94256857eeafdae580e693b56fa", "Url": "https://api.github.com/repos/rhansby/connectbot", "Date": "2015-10-05T19:10:02Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((stopData.getLon()) == null) || ((stopData.getLat()) == null)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8067/buggy-version/components.client-service-impl.src.main.java.pl.ptm.client.service.impl.VehicleStopServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "94fb559fc6f91db71dca80d5228d08dc5df8182f", "Url": "https://api.github.com/repos/lukaszbarc/wptm", "Date": "2016-04-11T12:09:43Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((installedV != null) && ((installedV.length) > 1)) { if ((installedV[1]) != null) { remoteV[0] = (remoteV[0]) + \".1\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2345/buggy-version/src.main.java.de.pixart.messenger.ui.UpdaterActivity.java", "BodyUseAPI": [], "Fixed commit": "9a91b80593e327e2ece19755f3c54b7b897ad60a", "Url": "https://api.github.com/repos/kriztan/Pix-Art-Messenger", "Date": "2017-03-27T19:09:00Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.energyos.espi.datacustodian.repositories.jpa.UsagePointRepositoryImpl.findByUUID(usagePoint.getUUID())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((existingUsagePoint.getLocalTimeParameters()) != null) { usagePoint.setLocalTimeParameters(existingUsagePoint.getLocalTimeParameters()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7359/buggy-version/src.main.java.org.energyos.espi.datacustodian.repositories.jpa.UsagePointRepositoryImpl.java", "BodyUseAPI": ["org.energyos.espi.datacustodian.domain.UsagePoint.setLocalTimeParameters(existingUsagePoint.getLocalTimeParameters())", "org.energyos.espi.datacustodian.domain.UsagePoint.getLocalTimeParameters()"], "Fixed commit": "fce4ab82244b693ee4317dd18266df6425a1c40f", "Url": "https://api.github.com/repos/energyos/OpenESPI-DataCustodian-java", "Date": "2013-10-09T22:05:43Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.app.util.SearchQueryUtil.getSearchQuery(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((searchQuery.getUserId()) == (com.app.util.UserUtil.getCurrentUserId())) { com.app.util.SearchQueryUtil.deleteSearchQuery(searchQueryIdInteger); com.app.util.SearchResultUtil.deleteSearchQueryResults(searchQueryIdInteger); com.app.util.SearchQueryPreviousResultUtil.deleteSearchQueryPreviousResults(searchQueryIdInteger); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5639/buggy-version/src.java.com.app.controller.SearchQueryController.java", "BodyUseAPI": [], "Fixed commit": "ec3c2f1f2844e672465ddc914b7eac84a18ece92", "Url": "https://api.github.com/repos/jonathanmccann/auction-alert", "Date": "2016-05-16T18:55:56Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((equippedWeapon.getArtifactID()) == 17) { this.statusConditions.add(StatusCondition.TENGU_FAN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2353/buggy-version/AnEndlessNight.src.main.CombatSystem.Hero.java", "BodyUseAPI": [], "Fixed commit": "8cea4e8e2aa607e0cb12cd0f8b449ea32563a450", "Url": "https://api.github.com/repos/aknobloch/An-Endless-Night", "Date": "2016-11-11T10:47:49Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((equippedWeapon.getArtifactID()) == 18) { this.statusConditions.add(StatusCondition.KITSUNE_TAIL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2353/buggy-version/AnEndlessNight.src.main.CombatSystem.Hero.java", "BodyUseAPI": [], "Fixed commit": "8cea4e8e2aa607e0cb12cd0f8b449ea32563a450", "Url": "https://api.github.com/repos/aknobloch/An-Endless-Night", "Date": "2016-11-11T10:47:49Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((equippedWeapon.getArtifactID()) == 18) { this.statusConditions.remove(StatusCondition.KITSUNE_TAIL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2353/buggy-version/AnEndlessNight.src.main.CombatSystem.Hero.java", "BodyUseAPI": [], "Fixed commit": "8cea4e8e2aa607e0cb12cd0f8b449ea32563a450", "Url": "https://api.github.com/repos/aknobloch/An-Endless-Night", "Date": "2016-11-11T10:47:49Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((equippedWeapon.getArtifactID()) == 17) { this.statusConditions.remove(StatusCondition.TENGU_FAN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2353/buggy-version/AnEndlessNight.src.main.CombatSystem.Hero.java", "BodyUseAPI": [], "Fixed commit": "8cea4e8e2aa607e0cb12cd0f8b449ea32563a450", "Url": "https://api.github.com/repos/aknobloch/An-Endless-Night", "Date": "2016-11-11T10:47:49Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o instanceof java.lang.String) { return java.lang.Integer.parseInt(((java.lang.String) (o))); }else { throw new java.lang.IllegalArgumentException(((\"Don't know how to convert \" + o) + \" + to int\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6702/buggy-version/jstorm-client.src.main.java.backtype.storm.utils.Utils.java", "BodyUseAPI": [], "Fixed commit": "673bbb773507a235bcdb3d55feee070f76dc3de5", "Url": "https://api.github.com/repos/alibaba/jstorm", "Date": "2014-01-24T08:33:40Z"},
{"Line": "=>703", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.example.fantasyfootballrankings.Pages.Rankings.adapter.getItem(i).contains(namePlayer)) { index = i; java.lang.System.out.println((\"SETTING: \" + index)); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7875/buggy-version/FFR.src.com.example.fantasyfootballrankings.Pages.Rankings.java", "BodyUseAPI": [], "Fixed commit": "f383fe47e5d3f63ab3b62255ac2a1f338058a71c", "Url": "https://api.github.com/repos/jbailey2010/FFR", "Date": "2013-06-20T22:50:34Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((strategies.isEmpty()) && strategyFound) { return blockLink; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3048/buggy-version/core.src.net.zomis.connblocks.gdx.mapload.MapLoader.java", "BodyUseAPI": [], "Fixed commit": "08c7c46c778b864fe316f1b505facd1d3c872f7b", "Url": "https://api.github.com/repos/Zomis/Connecting-Blocks", "Date": "2014-12-17T18:55:38Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.exercises) != null) { for (int i = 0; i < (this.exercises.size()); i++) { if ((this.exercises.get(i)) != null) { ret = (ret + \"\\t\") + (this.exercises.get(i).toString()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/995/buggy-version/WorkoutBuddy.src.helperClasses.Workout.java", "BodyUseAPI": [], "Fixed commit": "1eb18280c6b784caf443e5225a74ec8d829ba3b0", "Url": "https://api.github.com/repos/rafaelangelucci/WorkoutBuddy", "Date": "2014-04-24T20:37:51Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.exercises.get(i)) != null) { ret = (ret + \"\\t\") + (this.exercises.get(i).toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/995/buggy-version/WorkoutBuddy.src.helperClasses.Workout.java", "BodyUseAPI": ["this.exercises.get(i).toString()", "java.util.ArrayList<helperClasses.Exercise>.get(int)"], "Fixed commit": "1eb18280c6b784caf443e5225a74ec8d829ba3b0", "Url": "https://api.github.com/repos/rafaelangelucci/WorkoutBuddy", "Date": "2014-04-24T20:37:51Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.net.yto.ui.menu.SignListAdapter.getSelectedSignedLog()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((signedLogs.size()) > 0) { updateSignedLog(mAdapter.getSelectedSignedLog().get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/195/buggy-version/src.cn.net.yto.ui.SignScanActivity.java", "BodyUseAPI": [], "Fixed commit": "cb62e3489ef3e5b18e0385801110be68fed6f8eb", "Url": "https://api.github.com/repos/kit-team/xuebao", "Date": "2013-01-02T09:47:16Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.zcu.yafmt.model.fm.Attribute.getDefaultValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((defaultValue == null) || (defaultValue.isEmpty())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8813/buggy-version/DM.components.eu.supersede.dynadapt.dm.feature.builder.src.eu.supersede.dynadapt.poc.feature.builder.FeatureConfigurationBuilder.java", "BodyUseAPI": [], "Fixed commit": "9b16d992c7e25af98a56e4124e5355fbc78f6dc8", "Url": "https://api.github.com/repos/supersede-project/dyn_adapt", "Date": "2017-01-31T16:38:25Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFirstSunday) { x = x - 1; if (x < 0) { x = 7; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6823/buggy-version/src.com.example.mqtt_app.ConfigActivity.java", "BodyUseAPI": [], "Fixed commit": "7657d42f41e6a7b9fd6edfbc14df76e33a0ac89b", "Url": "https://api.github.com/repos/mly-zju/mqtt_app", "Date": "2016-12-05T10:54:16Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((complete) == true) { complete = true; }else { complete = toCopyFrom.complete; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8930/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.planningpoker.game.models.Game.java", "BodyUseAPI": [], "Fixed commit": "e7dcaaeac558a7801e7da845b36c2adc64b17dac", "Url": "https://api.github.com/repos/cs3733bdt/wpi-suite", "Date": "2014-04-30T00:07:10Z"},
{"Line": "=>785", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newPathOnly.equals(fromPathOnly)) && (!targetPathExistsPriorToOp)) { org.craftercms.studio.impl.v1.service.content.ContentServiceImpl.logger.info(\"A-A1 RENAME\"); proposedDestPath = ((newPathOnly + \"/\") + newFileNameOnly) + \"/index.xml\"; }else { org.craftercms.studio.impl.v1.service.content.ContentServiceImpl.logger.info(\"A-A2 MOVE LOCATION\"); proposedDestPath = ((((newPathOnly + \"/\") + newFileNameOnly) + \"/\") + fromFileNameOnly) + \"/index.xml\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7558/buggy-version/src.main.java.org.craftercms.studio.impl.v1.service.content.ContentServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "cac7a28f97907dfede08c42e5b6ddb2ad2c43b56", "Url": "https://api.github.com/repos/vestrada/studio", "Date": "2017-01-22T02:51:14Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((entries.length) > 8) { equipment = entries[8].split(\" \"); }else { equipment = new java.lang.String[]{ \"NA\" }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/759/buggy-version/src.externalDB.Routes.java", "BodyUseAPI": [], "Fixed commit": "fbe507ac0ed2a0b31a995c96b127e85d06d205fd", "Url": "https://api.github.com/repos/Maverick283/WDWVARouteEditor", "Date": "2015-06-07T12:06:45Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (title.endsWith(\"-\")) { title = title.substring(0, ((title.length()) - 1)); title = title.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1905/buggy-version/app.src.main.java.com.erakk.lnreader.parser.CommonParser.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "99e1bce4e6fd365acbfa912ec3ceebbbd28b4b8f", "Url": "https://api.github.com/repos/calvinaquino/LNReader-Android", "Date": "2016-10-15T15:25:05Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((txt_no_learning) != null) { if ((learningModules.size()) == 0) { txt_no_learning.setVisibility(View.VISIBLE); }else { txt_no_learning.setVisibility(View.GONE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4650/buggy-version/parent.src.main.java.com.xptschool.parent.ui.wallet.WalletActivity.java", "BodyUseAPI": [], "Fixed commit": "1f69a97c9e9abf601a372fdcf24265c754a7d27a", "Url": "https://api.github.com/repos/kongdexing/XPTSchool", "Date": "2017-09-06T07:30:58Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((txt_no_learning) != null) { txt_no_learning.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4650/buggy-version/parent.src.main.java.com.xptschool.parent.ui.wallet.WalletActivity.java", "BodyUseAPI": [], "Fixed commit": "1f69a97c9e9abf601a372fdcf24265c754a7d27a", "Url": "https://api.github.com/repos/kongdexing/XPTSchool", "Date": "2017-09-06T07:30:58Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((txt_no_learning) != null) { txt_no_learning.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4650/buggy-version/parent.src.main.java.com.xptschool.parent.ui.wallet.WalletActivity.java", "BodyUseAPI": [], "Fixed commit": "1f69a97c9e9abf601a372fdcf24265c754a7d27a", "Url": "https://api.github.com/repos/kongdexing/XPTSchool", "Date": "2017-09-06T07:30:58Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (what != (Op.COUNT)) { throw new java.lang.IllegalArgumentException(\"op MUST BE count\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8896/buggy-version/src.java.simpledb.StringAggregator.java", "BodyUseAPI": [], "Fixed commit": "8b2c38421b8d8b84abc87171bc6d66dbb269541a", "Url": "https://api.github.com/repos/ybsatnu/simpledb", "Date": "2017-10-12T22:49:53Z"},
{"Line": "=>540", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((position + spanStart) - 1) >= (this.getText().length())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6520/buggy-version/Diary.src.com.diary.goal.setting.richtext.RichTextEditView.java", "BodyUseAPI": [], "Fixed commit": "f9d9bdbdb44adcb190d1dc189f5fdf4cfa9af28e", "Url": "https://api.github.com/repos/spidermandl/Diary", "Date": "2014-05-25T16:06:44Z"},
{"Line": "=>845", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.zkoss.lang.Strings.isBlank(tags)) { tags = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3349/buggy-version/zul.src.org.zkoss.zul.Listbox.java", "BodyUseAPI": [], "Fixed commit": "ecd82f98eb2e1f09badd9a312af5fe935305a956", "Url": "https://api.github.com/repos/shenliow/zk", "Date": "2015-12-28T06:56:21Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getView().getUseScanner()) == true) { enableAction = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2916/buggy-version/src.gui.batches.AddItemBatchController.java", "BodyUseAPI": [], "Fixed commit": "77818e9ab6035f1d0d555f98f06212dc3ea48774", "Url": "https://api.github.com/repos/caseymonc/hit", "Date": "2012-11-07T23:13:19Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((body) != null) { body.generateCode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5454/buggy-version/WINDOWS_COMMAND_LINE.FOLDER_3_src.IR.IR_STMT_WHILE.java", "BodyUseAPI": [], "Fixed commit": "8e08ababdaa554e0580ddc26047335667ca2b1a5", "Url": "https://api.github.com/repos/DanielleTab/Compilation", "Date": "2017-02-28T15:27:41Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((body) != null) { body.generateCode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5454/buggy-version/WINDOWS_COMMAND_LINE.FOLDER_3_src.IR.IR_STMT_IF.java", "BodyUseAPI": [], "Fixed commit": "8e08ababdaa554e0580ddc26047335667ca2b1a5", "Url": "https://api.github.com/repos/DanielleTab/Compilation", "Date": "2017-02-28T15:27:41Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["emDAO.getEM().createQuery(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((query.getSingleResult()) != null) { return query.getSingleResult(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4917/buggy-version/src.dtDAO.DeliveryTrackerDAO.java", "BodyUseAPI": ["javax.persistence.TypedQuery<model.DeliveryTracker>.getSingleResult()"], "Fixed commit": "debb36e3c2418ce183ed4b3226f6306d2b6b6cf3", "Url": "https://api.github.com/repos/jdschulz1/SE2-5", "Date": "2017-06-14T22:54:14Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.skiwi.ogameplanner.Building.getUpgradeCost(com.skiwi.ogameplanner.PlayerSnapshot)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((upgradeCost.getDeuterium()) > 0) { minimumWaitHours = java.lang.Math.max(minimumWaitHours, deuteriumWaitHours); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/749/buggy-version/src.main.java.com.skiwi.ogameplanner.Building.java", "BodyUseAPI": [], "Fixed commit": "ee5c713aca8a6e4f3f7edf1bc6492cb99185ae96", "Url": "https://api.github.com/repos/skiwi2/OGamePlanner", "Date": "2016-01-30T15:36:10Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.skiwi.ogameplanner.Building.getUpgradeCost(com.skiwi.ogameplanner.PlayerSnapshot)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((upgradeCost.getMetal()) > 0) { minimumWaitHours = java.lang.Math.max(minimumWaitHours, metalWaitHours); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/749/buggy-version/src.main.java.com.skiwi.ogameplanner.Building.java", "BodyUseAPI": [], "Fixed commit": "ee5c713aca8a6e4f3f7edf1bc6492cb99185ae96", "Url": "https://api.github.com/repos/skiwi2/OGamePlanner", "Date": "2016-01-30T15:36:10Z"},
{"Line": "=>1105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vars.vect2.set(Vector3f.NEGATIVE_INFINITY)", "vars.vect1.set(Vector3f.POSITIVE_INFINITY)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(min.equals(Vector3f.POSITIVE_INFINITY))) && (!(max.equals(Vector3f.NEGATIVE_INFINITY)))) { com.jme3.bounding.BoundingBox bbox = ((com.jme3.bounding.BoundingBox) (this.getMesh().getBound())); bbox.setMinMax(min, max); this.setBoundRefresh(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4764/buggy-version/jme3-core.src.main.java.com.jme3.effect.ParticleEmitter.java", "BodyUseAPI": ["com.jme3.bounding.BoundingBox.setMinMax(com.jme3.math.Vector3f,com.jme3.math.Vector3f)"], "Fixed commit": "69cd160956c67709e8a67f483d63949fe88628bb", "Url": "https://api.github.com/repos/jMonkeyEngine/jmonkeyengine", "Date": "2017-01-26T20:09:02Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((joueur.getGameEngine().gameOver()) == true) { joueur.reset(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8500/buggy-version/src.main.LemmingMainGUI.java", "BodyUseAPI": ["services.IJoueur.reset()"], "Fixed commit": "d8daa6b75eba2e5c54e2c580d3104c02185219d6", "Url": "https://api.github.com/repos/JulienMrgrd/Lemmings", "Date": "2016-05-03T20:53:43Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (team.hasPlayer(plugin.util.getOfflinePlayer(playerName))) { team.removePlayer(plugin.getServer().getPlayer(playerName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6492/buggy-version/src.main.java.at.junction.pvp.Team.java", "BodyUseAPI": ["plugin.getServer().getPlayer(java.lang.String)", "at.junction.pvp.JunctionPVP.getServer()", "org.bukkit.scoreboard.Team.removePlayer(plugin.getServer().getPlayer(playerName))"], "Fixed commit": "97153950320e01e521d5fa72f603176bc7e3729e", "Url": "https://api.github.com/repos/JunctionAt/JunctionPVP", "Date": "2014-01-26T08:03:32Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.h6ah4i.android.tablayouthelper.TabLayoutHelper.Internal.safeGetTabAt(android.support.design.widget.TabLayout,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (tab != null) { com.h6ah4i.android.tablayouthelper.TabLayoutHelper.Internal.selectTab(mTabLayout, tab); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7821/buggy-version/library.src.main.java.com.h6ah4i.android.tablayouthelper.TabLayoutHelper.java", "BodyUseAPI": ["com.h6ah4i.android.tablayouthelper.TabLayoutHelper.Internal.selectTab(android.support.design.widget.TabLayout,TabLayout.Tab)"], "Fixed commit": "3ac6e83da9e77ab1d2c647b3fb5e0b5a35ad1570", "Url": "https://api.github.com/repos/h6ah4i/android-tablayouthelper", "Date": "2015-09-11T05:53:48Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ceilRound) { k = java.lang.Math.ceil(k); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5072/buggy-version/src.main.java.net.epsilony.tb.analysis.LogicalHeaviside.java", "BodyUseAPI": [], "Fixed commit": "6182b11604ebb1927b558cba741d9daee47c75f2", "Url": "https://api.github.com/repos/epsilony/tb", "Date": "2013-06-03T07:20:35Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.netty.channel.socket.DatagramChannel.write(java.lang.String,java.net.InetSocketAddress)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(f.isSuccess())) { f.getCause().printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2481/buggy-version/monitor.src.main.java.edu.uchicago.monitor.Collector.java", "BodyUseAPI": ["f.getCause().printStackTrace()", "org.jboss.netty.channel.ChannelFuture.getCause()"], "Fixed commit": "cdcc3b80ac76389c77086e84cd66e21e360513fa", "Url": "https://api.github.com/repos/ivukotic/plugins", "Date": "2012-10-25T20:10:01Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.netty.channel.socket.DatagramChannel.write(org.jboss.netty.buffer.ChannelBuffer,java.net.InetSocketAddress)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(f.isSuccess())) { f.getCause().printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2481/buggy-version/monitor.src.main.java.edu.uchicago.monitor.Collector.java", "BodyUseAPI": ["f.getCause().printStackTrace()", "org.jboss.netty.channel.ChannelFuture.getCause()"], "Fixed commit": "cdcc3b80ac76389c77086e84cd66e21e360513fa", "Url": "https://api.github.com/repos/ivukotic/plugins", "Date": "2012-10-25T20:10:01Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(java.nio.file.Files.isDirectory(extracted.getParent()))) { java.nio.file.Files.createDirectory(extracted.getParent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7609/buggy-version/src.main.java.me.nallar.modpatcher.LaunchClassLoaderUtil.java", "BodyUseAPI": ["java.nio.file.Files.createDirectory(java.nio.file.Path)", "java.nio.file.Path.getParent()"], "Fixed commit": "2c2671d5edf5c6c2caa21f0268df8ed2d85c59f5", "Url": "https://api.github.com/repos/MinimallyCorrect/ModPatcher", "Date": "2017-05-08T00:24:55Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.util.List<java.lang.String>>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (fieldValues != null) { result[(i++)] = new com.atlassian.jira.rpc.soap.beans.RemoteCustomFieldValue(customeFieldId, org.mule.module.jira.api.AxisJiraClientHelper.EMPTY_PARENT_KEY, ((java.lang.String[]) (fieldValues.toArray()))); }else { result[(i++)] = new com.atlassian.jira.rpc.soap.beans.RemoteCustomFieldValue(customeFieldId, org.mule.module.jira.api.AxisJiraClientHelper.EMPTY_PARENT_KEY, new java.lang.String[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7202/buggy-version/src.main.java.org.mule.module.jira.api.AxisJiraClientHelper.java", "BodyUseAPI": ["java.util.List<java.lang.String>.toArray()"], "Fixed commit": "b516326de06538c049643a7b290d7c29ce895896", "Url": "https://api.github.com/repos/mulesoft/jira-connector", "Date": "2011-10-31T20:45:01Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.util.List<java.lang.String>>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (fieldValues != null) { result[(i++)] = new com.atlassian.jira.rpc.soap.beans.RemoteFieldValue(customeFieldId, ((java.lang.String[]) (fieldValues.toArray()))); }else { result[(i++)] = new com.atlassian.jira.rpc.soap.beans.RemoteFieldValue(customeFieldId, new java.lang.String[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7202/buggy-version/src.main.java.org.mule.module.jira.api.AxisJiraClientHelper.java", "BodyUseAPI": ["java.util.List<java.lang.String>.toArray()"], "Fixed commit": "b516326de06538c049643a7b290d7c29ce895896", "Url": "https://api.github.com/repos/mulesoft/jira-connector", "Date": "2011-10-31T20:45:01Z"},
{"Line": "=>1882", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.shaolin.uimaster.page.widgets.HTMLPreNextPanelType.class) == htmlClass) { return org.shaolin.uimaster.page.ajax.PreNextPanel.class.getSimpleName(); }else if ((org.shaolin.uimaster.page.widgets.HTMLEmptyType.class) == htmlClass) { return org.shaolin.uimaster.page.ajax.Empty.class.getSimpleName(); }else if ((org.shaolin.uimaster.page.widgets.HTMLMatrixType.class) == htmlClass) { return org.shaolin.uimaster.page.ajax.Matrix.class.getSimpleName(); }else if ((org.shaolin.uimaster.page.widgets.HTMLCheckBoxType.class) == htmlClass) { return org.shaolin.uimaster.page.ajax.CheckBox.class.getSimpleName(); }else if ((org.shaolin.uimaster.page.widgets.HTMLRadioButtonType.class) == htmlClass) { return org.shaolin.uimaster.page.ajax.RadioButton.class.getSimpleName(); }else if ((org.shaolin.uimaster.page.widgets.HTMLTableType.class) == htmlClass) { return org.shaolin.uimaster.page.ajax.Table.class.getSimpleName(); }else if ((org.shaolin.uimaster.page.widgets.HTMLButtonType.class) == htmlClass) { return org.shaolin.uimaster.page.ajax.Button.class.getSimpleName(); }else if ((org.shaolin.uimaster.page.widgets.HTMLLinkType.class) == htmlClass) { return org.shaolin.uimaster.page.ajax.Link.class.getSimpleName(); }else if ((org.shaolin.uimaster.page.widgets.HTMLLabelType.class) == htmlClass) { return org.shaolin.uimaster.page.ajax.Label.class.getSimpleName(); }else if ((org.shaolin.uimaster.page.widgets.HTMLPasswordFieldType.class) == htmlClass) { return org.shaolin.uimaster.page.ajax.PasswordField.class.getSimpleName(); }else if ((org.shaolin.uimaster.page.widgets.HTMLHiddenType.class) == htmlClass) { return org.shaolin.uimaster.page.ajax.Hidden.class.getSimpleName(); }else if ((org.shaolin.uimaster.page.widgets.HTMLImageType.class) == htmlClass) { return org.shaolin.uimaster.page.ajax.Image.class.getSimpleName(); }else if ((org.shaolin.uimaster.page.widgets.HTMLTextAreaType.class) == htmlClass) { return org.shaolin.uimaster.page.ajax.TextArea.class.getSimpleName(); }else if ((org.shaolin.uimaster.page.widgets.HTMLTextFieldType.class) == htmlClass) { return org.shaolin.uimaster.page.ajax.TextField.class.getSimpleName(); }else if ((org.shaolin.uimaster.page.widgets.HTMLDateType.class) == htmlClass) { return org.shaolin.uimaster.page.ajax.Calendar.class.getSimpleName(); }else if ((org.shaolin.uimaster.page.widgets.HTMLWebTreeType.class) == htmlClass) { return org.shaolin.uimaster.page.ajax.Tree.class.getSimpleName(); }else if (htmlClass.isAssignableFrom(org.shaolin.uimaster.page.widgets.HTMLChartSuper.class)) { return org.shaolin.uimaster.page.ajax.Chart.class.getSimpleName(); }else { return htmlClass.getSimpleName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2148/buggy-version/modules.uipage.src.main.java.org.shaolin.uimaster.page.ajax.Widget.java", "BodyUseAPI": ["java.lang.Class.getSimpleName()", "java.lang.Class.isAssignableFrom(java.lang.Class)"], "Fixed commit": "01ac5ae91df23c7fcdcc74480aae40181b5d2da9", "Url": "https://api.github.com/repos/shaolinwu/uimaster", "Date": "2017-09-13T15:19:36Z"},
{"Line": "=>878", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (attrJson.has(\"createdRefEntities\")) { attrJson.remove(\"createdRefEntities\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2148/buggy-version/modules.uipage.src.main.java.org.shaolin.uimaster.page.widgets.HTMLWidgetType.java", "BodyUseAPI": ["org.shaolin.bmdp.json.JSONObject.remove(java.lang.String)"], "Fixed commit": "01ac5ae91df23c7fcdcc74480aae40181b5d2da9", "Url": "https://api.github.com/repos/shaolinwu/uimaster", "Date": "2017-09-13T15:19:36Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.currentClip.isOpen()) { this.currentClip.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/554/buggy-version/src.JExplodomatica.java", "BodyUseAPI": ["javax.sound.sampled.Clip.close()"], "Fixed commit": "43c3fedaabbdbfef208c48490e7ae4cffc30b83f", "Url": "https://api.github.com/repos/finnkuusisto/JExplodomatica", "Date": "2011-11-08T02:29:35Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentClip.isOpen()) { currentClip.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/554/buggy-version/src.JExplodomatica.java", "BodyUseAPI": ["javax.sound.sampled.Clip.close()"], "Fixed commit": "43c3fedaabbdbfef208c48490e7ae4cffc30b83f", "Url": "https://api.github.com/repos/finnkuusisto/JExplodomatica", "Date": "2011-11-08T02:29:35Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((destinations.size()) == 2) && (origin.equals(destinations.get(0)))) { final java.util.List<com.github.rinde.rinsim.geom.Point> theOnlyPath = com.github.rinde.rinsim.geom.Graphs.shortestPathEuclideanDistance(graph, origin, destinations.get(1)); if ((theOnlyPath.size()) == 2) { paths.add(new multistage.garagemodel.delegatemas.Path(theOnlyPath)); return paths; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5240/buggy-version/AgentWiseAGV.src.main.java.multistage.garagemodel.delegatemas.PathSampling.java", "BodyUseAPI": ["com.github.rinde.rinsim.geom.Graphs.shortestPathEuclideanDistance(com.github.rinde.rinsim.geom.ListenableGraph<?>,com.github.rinde.rinsim.geom.Point,destinations.get(1))", "java.util.List<com.github.rinde.rinsim.geom.Point>.get(int)"], "Fixed commit": "13a7f20a0c60c291ed7acb7eb3ac8ca2e8600525", "Url": "https://api.github.com/repos/hoangtungdinh/AgentWiseAGV", "Date": "2015-09-17T15:35:51Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eigenaar) { s = c.prepareStatement(\"UPDATE DOCUMENT SET WijzigingStatus='Gewijzigd' WHERE WijzigingVanDocument=? AND WijzigingStatus='Actief'\"); s.setInt(1, doc.getId()); s.executeUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6777/buggy-version/sprint3.src.controllers.Databank.java", "BodyUseAPI": [], "Fixed commit": "da85236ee509a1df4966b3193bb1d4db1bd747da", "Url": "https://api.github.com/repos/taskforce2B/TaskForce", "Date": "2012-05-19T10:33:32Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) == null) { startPlayBack(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/828/buggy-version/app.src.main.java.com.sparshik.yogicapple.ui.player.ExoPlayerActivity.java", "BodyUseAPI": [], "Fixed commit": "70002a7ae3218d1e73bb1e0b8c2820b3bb54a396", "Url": "https://api.github.com/repos/navenduagarwal/capstone2", "Date": "2017-06-19T12:33:52Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.jstakun.gms.android.config.ConfigurationManager.getInstance().isOn(ConfigurationManager.RECORDING_ROUTE)) { com.jstakun.gms.android.ui.IntentsHelper.getInstance().unbindRouteTrackingService(mConnection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7702/buggy-version/GMSClientNew.src.com.jstakun.gms.android.ui.GMSClient2OSMMainActivity.java", "BodyUseAPI": [], "Fixed commit": "3ebc248de018d14d432e2b69b03134552019d0be", "Url": "https://api.github.com/repos/jstakun/gms-world-client", "Date": "2016-09-21T12:54:49Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.jstakun.gms.android.config.ConfigurationManager.getInstance().isOn(ConfigurationManager.RECORDING_ROUTE)) { com.jstakun.gms.android.ui.IntentsHelper.getInstance().unbindRouteTrackingService(mConnection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7702/buggy-version/GMSClientNew.src.com.jstakun.gms.android.ui.GMSClient3MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3ebc248de018d14d432e2b69b03134552019d0be", "Url": "https://api.github.com/repos/jstakun/gms-world-client", "Date": "2016-09-21T12:54:49Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (profiles != null) { for (java.lang.String p : profiles) { dictionary.put(p, (((url + '@') + p) + \".m3u8\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3212/buggy-version/src.com.pili.API.java", "BodyUseAPI": [], "Fixed commit": "4ec0cd773c515472201c59bff9819ae5b0739baf", "Url": "https://api.github.com/repos/jpxiong/pili-sdk-java", "Date": "2015-07-15T09:29:38Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (profiles != null) { for (java.lang.String p : profiles) { dictionary.put(p, ((((url + '@') + p) + \".m3u8\") + queryPara)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3212/buggy-version/src.com.pili.API.java", "BodyUseAPI": [], "Fixed commit": "4ec0cd773c515472201c59bff9819ae5b0739baf", "Url": "https://api.github.com/repos/jpxiong/pili-sdk-java", "Date": "2015-07-15T09:29:38Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (profiles != null) { for (java.lang.String p : profiles) { dictionary.put(p, ((url + '@') + p)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3212/buggy-version/src.com.pili.API.java", "BodyUseAPI": [], "Fixed commit": "4ec0cd773c515472201c59bff9819ae5b0739baf", "Url": "https://api.github.com/repos/jpxiong/pili-sdk-java", "Date": "2015-07-15T09:29:38Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((contents.getSlug().length()) < 5) { throw new com.tale.exception.TipException(\"\u8def\u5f84\u592a\u77ed\u4e86\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5794/buggy-version/src.main.java.com.tale.service.impl.ContentsServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "ecd6d8aa9a7719395b6caa6335f31779547b1ae7", "Url": "https://api.github.com/repos/pkwenda/tale", "Date": "2017-02-26T18:23:47Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((manufacturerId) > 0) && ((productId) > 0)) { loadDefinition(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5592/buggy-version/src.main.java.me.legrange.panstamp.core.PanStampImpl.java", "BodyUseAPI": [], "Fixed commit": "eff3461519659f427c6e4b4522da6f6751f2167f", "Url": "https://api.github.com/repos/GideonLeGrange/panstamp-java", "Date": "2015-02-08T13:33:29Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((setup) == null) { setup = new me.legrange.swap.ModemSetup(0, 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5592/buggy-version/src.main.java.me.legrange.swap.tcp.TcpModem.java", "BodyUseAPI": [], "Fixed commit": "eff3461519659f427c6e4b4522da6f6751f2167f", "Url": "https://api.github.com/repos/GideonLeGrange/panstamp-java", "Date": "2015-02-08T13:33:29Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.opengamma.analytics.util.time.TimeCalculator.getTimeBetween(org.threeten.bp.ZonedDateTime,org.threeten.bp.LocalDate)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (timeToSettlement == 0) { timeToSettlement = 0.0015; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8680/buggy-version/projects.OG-Analytics.src.main.java.com.opengamma.analytics.financial.equity.option.EquityOptionDefinition.java", "BodyUseAPI": [], "Fixed commit": "ff26767455a2803ebb58d4207b53b59918519b26", "Url": "https://api.github.com/repos/OpenGamma/OG-Platform", "Date": "2013-03-28T13:12:56Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.hhu.bsinfo.dxterm.TerminalCommandString.getArgNodeId(int,NodeID.INVALID_ID)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nid == (de.hhu.bsinfo.dxram.data.ChunkID.INVALID_ID)) { p_stdout.printlnErr(\"No nid specified\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2285/buggy-version/src.de.hhu.bsinfo.dxterm.cmd.TcmdChunkput.java", "BodyUseAPI": [], "Fixed commit": "11f21fc242f0a7079b6c2ede49158b7e3a5300ce", "Url": "https://api.github.com/repos/hhu-bsinfo/dxram", "Date": "2017-05-26T06:36:11Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_args.length) <= p_pos) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2285/buggy-version/src.de.hhu.bsinfo.dxterm.TerminalCommandString.java", "BodyUseAPI": [], "Fixed commit": "11f21fc242f0a7079b6c2ede49158b7e3a5300ce", "Url": "https://api.github.com/repos/hhu-bsinfo/dxram", "Date": "2017-05-26T06:36:11Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((!exists) && ((driver.getPortName()) != null)) { comboBoxPort.addItem(driver.getPortName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3804/buggy-version/src.main.java.org.openpnp.machine.reference.driver.wizards.AbstractSerialPortDriverConfigurationWizard.java", "BodyUseAPI": [], "Fixed commit": "72e8b208a23d77a0c5817e228d321a1b3ecb0849", "Url": "https://api.github.com/repos/openpnp/openpnp", "Date": "2015-06-22T03:24:27Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (portName.equals(driver.getPortName())) { exists = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3804/buggy-version/src.main.java.org.openpnp.machine.reference.driver.wizards.AbstractSerialPortDriverConfigurationWizard.java", "BodyUseAPI": [], "Fixed commit": "72e8b208a23d77a0c5817e228d321a1b3ecb0849", "Url": "https://api.github.com/repos/openpnp/openpnp", "Date": "2015-06-22T03:24:27Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (msg instanceof org.zstack.compute.vm.APIGetInterdependentL3NetworksImagesMsg) { validate(((org.zstack.compute.vm.APIGetInterdependentL3NetworksImagesMsg) (msg))); }else if (msg instanceof org.zstack.compute.vm.APIUpdateVmInstanceMsg) { validate(((org.zstack.compute.vm.APIUpdateVmInstanceMsg) (msg))); }else if (msg instanceof org.zstack.compute.vm.APISetVmConsolePasswordMsg) { validate(((org.zstack.compute.vm.APISetVmConsolePasswordMsg) (msg))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8822/buggy-version/compute.src.main.java.org.zstack.compute.vm.VmInstanceApiInterceptor.java", "BodyUseAPI": [], "Fixed commit": "e2f56e958d81d907a5beebc1892e114dab3f50e0", "Url": "https://api.github.com/repos/quarkonics/zstack", "Date": "2017-03-13T06:33:38Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cb.getSelectedIndex()) != (-1)) cb.setSelectedIndex(cb.getSelectedIndex());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/9160/buggy-version/src.ui.SuggestionPanel.java", "BodyUseAPI": ["javax.swing.JComboBox.getSelectedIndex()", "javax.swing.JComboBox.setSelectedIndex(int)"], "Fixed commit": "c50f92cddd8df24564a286562d0a4095a36a143f", "Url": "https://api.github.com/repos/fredseadroid/se", "Date": "2013-11-28T18:23:25Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((subQuery) != null) result.append((\" UNION \" + (subQuery.debugString())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8489/buggy-version/src.internal.containers.query.Query.java", "BodyUseAPI": [], "Fixed commit": "2e6bdcf9c7d2fc598a5d20086676aa0e658e4aae", "Url": "https://api.github.com/repos/okennedy/worldtree", "Date": "2013-06-06T16:19:11Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((selection.start) < 0) || ((selection.end) >= (model.getBufferSize()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2226/buggy-version/java.jutils.src.org.jutils.ui.hex.HexTable.java", "BodyUseAPI": [], "Fixed commit": "4529cc12d4dd41f5e7d4b43a644bc7c7d788664f", "Url": "https://api.github.com/repos/joesgordon/gordoza-code", "Date": "2016-01-29T03:32:43Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastClicked) != null) { unhideMarkers(); lastClicked = null; }else if ((lastClicked) == null) { de.fhpotsdam.unfolding.marker.Marker marker = findMarker(); if (marker != null) { lastClicked = ((module5.CommonMarker) (marker)); hideMarkers(marker); }else { unhideMarkers(); lastClicked = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2396/buggy-version/src.module5.EarthquakeCityMap.java", "BodyUseAPI": [], "Fixed commit": "4904f4b041011192f2b531abf56efb3ebfa916f8", "Url": "https://api.github.com/repos/JinhaiZ/UCSDUnfoldingMaps", "Date": "2016-03-28T19:53:48Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageFile) != null) { try { saveImage(); } catch (javax.mail.MessagingException e) { java.util.logging.Logger.getLogger(getClass().getName()).log(java.util.logging.Level.SEVERE, \"exception caught\", e); throw new java.lang.RuntimeException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/783/buggy-version/web_guitar_official.src.java.beans.CalendarInputBean.java", "BodyUseAPI": [], "Fixed commit": "9bbcb738638799835043567e10cce2df8ea83d64", "Url": "https://api.github.com/repos/raho1501/skolprojekt", "Date": "2017-10-14T22:13:39Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((effect.cycle) > 0) { disconsented.anssrpg.data.PerkStore.putPerk(effect); disconsented.anssrpg.data.PerkStore.addPerk(effect); }else { disconsented.anssrpg.common.Logging.error(((effect.name) + \"'s cycle is to low (must be above 0)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3747/buggy-version/src.main.java.disconsented.anssrpg.config.PerkContainer.java", "BodyUseAPI": ["disconsented.anssrpg.data.PerkStore.putPerk(disconsented.anssrpg.config.PotionSelfPerk)", "disconsented.anssrpg.data.PerkStore.addPerk(disconsented.anssrpg.config.PotionSelfPerk)", "disconsented.anssrpg.common.Logging.error(((effect.name) + \"'s cycle is to low (must be above 0)\"))"], "Fixed commit": "250710a68a70087aca1d9834714484d02f0d7522", "Url": "https://api.github.com/repos/disconsented/ANSSRPG", "Date": "2015-06-13T07:54:38Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["instruction.getAnchor().getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parent.getParent().getClass()) != (com.jetbrains.php.lang.psi.elements.impl.StatementImpl.class)) { ++intCountReadAccesses; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5180/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.OnlyWritesOnParameterInspector.java", "BodyUseAPI": [], "Fixed commit": "4a48c336e183776019d1e17fa84796e6fc50becc", "Url": "https://api.github.com/repos/kalessil/phpinspectionsea", "Date": "2017-05-27T20:32:21Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((study == null) || ((study.getResultDirectory()) == null)) || (study.getResultDirectory().isEmpty())) { this.disabledOption = \"disabled: [1]\"; }else { this.disabledOption = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6682/buggy-version/memi.memi-web.src.main.java.uk.ac.ebi.interpro.metagenomics.memi.springmvc.model.study.StudyViewModel.java", "BodyUseAPI": [], "Fixed commit": "5de847aaf30fec4c33986bc16b7efc02da82084f", "Url": "https://api.github.com/repos/ProteinsWebTeam/ebi-metagenomics", "Date": "2015-08-27T12:48:53Z"},
{"Line": "=>2102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Iterator<java.util.Map.Entry<java.lang.String, java.lang.String>>.next()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((availableValue != null) && (availableValue.equals(entry.getValue()))) { continue; }else { availableClaims.put(claimURI, entry.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/9213/buggy-version/core.org.wso2.carbon.user.core.src.main.java.org.wso2.carbon.user.core.jdbc.JDBCUserStoreManager.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "57b20655e3991eb4c5e84a273ba0d77eb9f71fce", "Url": "https://api.github.com/repos/Pushpalanka/carbon4-kernel", "Date": "2017-06-09T10:20:42Z"},
{"Line": "=>603", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fileName == null) { logger.error(\"Set the directory containing config files as -Dfiles.json=path\"); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2470/buggy-version/src.main.java.org.symphonyoss.examples.hashtagbot.HashtagBot.java", "BodyUseAPI": [], "Fixed commit": "dbff93bcf45bb4643be5bb3accf18883794f9c12", "Url": "https://api.github.com/repos/symphonyoss/symphony-java-sample-bots", "Date": "2017-06-14T18:58:45Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((transactionBean.getTargetBankAccount()) != null) this.targetIBAN = transactionBean.getTargetBankAccount().getIban().getIban();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2527/buggy-version/src.main.java.nl.springbank.objects.TransactionObject.java", "BodyUseAPI": [], "Fixed commit": "d8119f4ee589340a5fbc3020b671bd478475efb2", "Url": "https://api.github.com/repos/tristandb/springbank-spring", "Date": "2017-08-10T12:36:48Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((transactionBean.getSourceBankAccount()) != null) this.sourceIBAN = transactionBean.getSourceBankAccount().getIban().getIban();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2527/buggy-version/src.main.java.nl.springbank.objects.TransactionObject.java", "BodyUseAPI": [], "Fixed commit": "d8119f4ee589340a5fbc3020b671bd478475efb2", "Url": "https://api.github.com/repos/tristandb/springbank-spring", "Date": "2017-08-10T12:36:48Z"},
{"Line": "=>551", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (direction.equals(\"bear\")) { grossProfitClause = \"actualentryprice - ?\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7707/buggy-version/src.dbio.IBQueryManager.java", "BodyUseAPI": [], "Fixed commit": "67770b152c68ddb0ccd7fc872a9c37a0b7677b1c", "Url": "https://api.github.com/repos/MatthewPDingle/CSCSPMonitor", "Date": "2015-12-16T22:40:12Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (BenchmarkCriterion.K_ANONYMITY.equals(privacyModel.getCriterion())) { criteria = new org.deidentifier.arx.BenchmarkSetup.BenchmarkCriterion[]{ org.deidentifier.arx.BenchmarkSetup.BenchmarkCriterion.K_ANONYMITY }; }else { criteria = new org.deidentifier.arx.BenchmarkSetup.BenchmarkCriterion[]{ org.deidentifier.arx.BenchmarkSetup.BenchmarkCriterion.K_ANONYMITY, privacyModel.getCriterion() }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8814/buggy-version/src.org.deidentifier.arx.BenchmarkDriver.java", "BodyUseAPI": ["org.deidentifier.arx.PrivacyModel.getCriterion()"], "Fixed commit": "6a5c3c0dd62d9fb90678c5af6b3ba0b94cdd290f", "Url": "https://api.github.com/repos/ElMuto/anonbench", "Date": "2017-03-23T10:45:18Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (codes != null) { for (int i = 0; i < (codes.length()); i++) { postalCodes.add(com.doomonafireball.umbee.util.JsonParser.parseGnpc(((org.json.JSONObject) (codes.get(i))))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5928/buggy-version/src.com.doomonafireball.umbee.util.JsonParser.java", "BodyUseAPI": ["org.json.JSONArray.get(int)", "org.json.JSONArray.length()", "com.doomonafireball.umbee.util.JsonParser.parseGnpc(((org.json.JSONObject) (codes.get(i))))", "java.util.ArrayList<com.doomonafireball.umbee.model.GeoNamesPostalCode>.add(com.doomonafireball.umbee.model.GeoNamesPostalCode)"], "Fixed commit": "35c2abe85067a2f4419c1dde8d8f64ece8e9ff32", "Url": "https://api.github.com/repos/derekbrameyer/umbee", "Date": "2013-02-09T23:06:24Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((surfaceHolder.getSurface()) != null) && (surfaceHolder.getSurface().isValid()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7145/buggy-version/src.rpisdd.rpgme.gamelogic.dungeon.viewcontrol.ViewThread.java", "BodyUseAPI": [], "Fixed commit": "6d3d5e81e0c1cf4a3277a706f6c29a4a872f8c27", "Url": "https://api.github.com/repos/benstreb/RPGme", "Date": "2013-11-20T03:39:37Z"},
{"Line": "=>610", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(kmelia.getPublicationAccessController().isUserAuthorized(kmelia.getUserId(), kmeliaPublication.getPk()))) { return \"/admin/jsp/accessForbidden.jsp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1364/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.servlets.KmeliaRequestRouter.java", "BodyUseAPI": [], "Fixed commit": "e5b6f1493c07f9b1498ca53992d1c5e92c0934f9", "Url": "https://api.github.com/repos/ebonnet/Silverpeas-Components", "Date": "2015-07-07T11:45:50Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.jms.MessageConsumer.receive(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (msg instanceof javax.jms.TextMessage) { messageList.add(((javax.jms.TextMessage) (msg))); }else if (msg instanceof team.soa.cms.msgUtil.ObjectMessage) { messageList.add(((team.soa.cms.msgUtil.ObjectMessage) (msg))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3172/buggy-version/CourseManagementSystem.src.java.team.soa.cms.msgUtil.MsgQueueReceiver.java", "BodyUseAPI": [], "Fixed commit": "e0701525fa244485b025076c444464691a9453e2", "Url": "https://api.github.com/repos/Rianddy/CourseRegistration", "Date": "2014-11-24T21:38:41Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (d3 > 0) { d3 = java.lang.Math.sqrt(d3); if (!(worldObj.isRemote)) { this.motionX += (xDist / d3) * ((this.targetedEntity) != null ? 0.02 : 0.01); this.motionY += (yDist / d3) * ((this.targetedEntity) != null ? 0.02 : 0.01); this.motionZ += (zDist / d3) * ((this.targetedEntity) != null ? 0.02 : 0.01); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2440/buggy-version/src.main.java.kihira.minicreatures.common.entity.EntityMiniShark.java", "BodyUseAPI": ["java.lang.Math.sqrt(double)"], "Fixed commit": "01156b2f24307d16906afb971f47a3c52e7a8ec1", "Url": "https://api.github.com/repos/kihira/MiniCreatures", "Date": "2015-10-31T22:22:24Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasNext()) { currentGroup.add(nextFeature); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1210/buggy-version/src.main.java.org.openstreetmap.josm.plugins.ods.geotools.GroupByFeatureIterator.java", "BodyUseAPI": [], "Fixed commit": "cecb32fa7cd49fc92089248334d25f342631a1f5", "Url": "https://api.github.com/repos/gidema/josm-openservices", "Date": "2016-09-07T12:17:20Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.kuros.random.jpa.types.CreationOrder.getTableNode(java.lang.Class<?>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (tableNode != null) { final java.util.List<com.github.kuros.random.jpa.mapper.Relation> relations = tableNode.getRelations(); for (com.github.kuros.random.jpa.mapper.Relation relation : relations) { createRelation(relation, random); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7231/buggy-version/src.main.java.com.github.kuros.random.jpa.resolver.CreationPlanResolver.java", "BodyUseAPI": ["com.github.kuros.random.jpa.definition.TableNode.getRelations()"], "Fixed commit": "8eaca729a7f3523c8e78089bc4e058da070b3944", "Url": "https://api.github.com/repos/kuros/random-jpa", "Date": "2015-06-12T19:30:40Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (message.getAuthor().equalsIgnoreCase(\"nyan-cat\")) { java.lang.String str = ((message.getAuthor()) + \" : \") + (message.getMessage()); java.util.List<java.awt.Color> rainbow = fr.alma.middleware.loki.client.ColorGenerator.rainbow(str.length()); this.display.appendToHistory(\"\\n\"); for (int i = 0; i < (str.length()); i++) { this.display.appendToHistory(java.lang.Character.toString(str.charAt(i)), rainbow.get(i)); } }else { this.display.appendToHistory((((\"\\n\" + (message.getAuthor())) + \" : \") + (message.getMessage())), this.parent.getUserColor(message.getAuthor())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/873/buggy-version/client.src.main.java.fr.alma.middleware.loki.client.ClientTopic.java", "BodyUseAPI": ["fr.alma.middleware.loki.common.Message.getMessage()", "fr.alma.middleware.loki.common.Message.getAuthor()", "fr.alma.middleware.loki.common.Message.getAuthor()", "fr.alma.middleware.loki.common.Message.getMessage()", "fr.alma.middleware.loki.client.gui.TopicWindow.appendToHistory((((\"\\n\" + (message.getAuthor())) + \" : \") + (message.getMessage())),this.parent.getUserColor(message.getAuthor()))", "fr.alma.middleware.loki.common.Message.getAuthor()", "fr.alma.middleware.loki.client.Client.getUserColor(message.getAuthor())"], "Fixed commit": "d08a51c415cae8d5723f5abf633c01bf94fc8dcc", "Url": "https://api.github.com/repos/masters-info-nantes/loki", "Date": "2015-10-20T15:09:11Z"},
{"Line": "=>523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (params == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1993/buggy-version/src.main.java.tigase.server.amp.JDBCMsgRepository.java", "BodyUseAPI": [], "Fixed commit": "2aaf7a413fefccaa6ec91998450fd73fb05b02b6", "Url": "https://api.github.com/repos/kontalk/tigase-server", "Date": "2015-02-06T16:28:14Z"},
{"Line": "=>579", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (params == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1993/buggy-version/src.main.java.tigase.server.amp.JDBCMsgRepository.java", "BodyUseAPI": [], "Fixed commit": "2aaf7a413fefccaa6ec91998450fd73fb05b02b6", "Url": "https://api.github.com/repos/kontalk/tigase-server", "Date": "2015-02-06T16:28:14Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (actionFuture == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3420/buggy-version/src.main.java.io.github.cantido.qlearner.agent.Agent.java", "BodyUseAPI": [], "Fixed commit": "3967048f3cad293ba861a129ee36f0b3d1b4aec9", "Url": "https://api.github.com/repos/Cantido/qlearner", "Date": "2016-06-12T05:18:13Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Set<java.lang.String>.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (it.hasNext()) { buf.append(com.icegreen.greenmail.store.SimpleMessageAttributes.SP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6432/buggy-version/src.main.java.com.icegreen.greenmail.store.SimpleMessageAttributes.java", "BodyUseAPI": [], "Fixed commit": "44b2086c841d66aad3ae0011c2db675513cf3c8e", "Url": "https://api.github.com/repos/linagora/Greenmail", "Date": "2012-03-30T12:34:51Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.inventory.InventoryClickEvent.getWhoClicked()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((event.getClickedInventory().getType().equals(InventoryType.PLAYER)) && (event.getSlotType().equals(SlotType.QUICKBAR))) && ((event.getSlot()) == (player.getInventory().getHeldItemSlot()))) itemNotInHand(player, event.getCurrentItem(), HandType.MAIN);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1234/buggy-version/src.main.java.adx.audioxd.customenchantmentapi.listeners.onItemInHandChange.java", "BodyUseAPI": ["org.bukkit.event.inventory.InventoryClickEvent.getCurrentItem()", "adx.audioxd.customenchantmentapi.listeners.onItemInHandChange.itemNotInHand(org.bukkit.entity.Player,event.getCurrentItem(),HandType.MAIN)"], "Fixed commit": "3a2e6b52d736dea0e11e702ea6959f3ee6adc121", "Url": "https://api.github.com/repos/audioXD/CustomEnchantmentAPI", "Date": "2016-05-01T21:42:28Z"},
{"Line": "=>577", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getResources().getConfiguration().orientation) == (android.content.res.Configuration.ORIENTATION_PORTRAIT)) { viewHeight = (device_height) - 134; viewWidth = device_width; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8078/buggy-version/app.src.main.java.com.ron.ctrlable.ctrlable.activities.ControlPanelActivity.java", "BodyUseAPI": [], "Fixed commit": "2f485e8779829ea050de99e29087c17d9eb25b67", "Url": "https://api.github.com/repos/sergeyturov/ctrlable-android", "Date": "2017-02-28T11:22:47Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_glm.family) == (hex.glm.GLMParams.Family.gaussian)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6097/buggy-version/src.main.java.hex.glm.GLM2.java", "BodyUseAPI": [], "Fixed commit": "10c00fa8d526f68238be2242e5cb7d263dd017d9", "Url": "https://api.github.com/repos/0xdata/h2o", "Date": "2014-08-22T22:24:36Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((word.length()) == 1) { writer_2.write((((word + \"\\t\") + \"S\") + \"\\n\")); writer_4.write((((word + \"\\t\") + \"S\") + \"\\n\")); writer_5.write((((word + \"\\t\") + \"S\") + \"\\n\")); }else { for (int pos = 0; pos < (word.length()); pos++) { char current = word.charAt(pos); if (pos == 0) { writer_2.write((((current + \"\\t\") + \"B\") + \"\\n\")); writer_4.write((((current + \"\\t\") + \"B\") + \"\\n\")); writer_5.write((((current + \"\\t\") + \"B\") + \"\\n\")); }else if ((pos == 1) && (pos != ((word.length()) - 1))) { writer_2.write((((current + \"\\t\") + \"E\") + \"\\n\")); writer_4.write((((current + \"\\t\") + \"M\") + \"\\n\")); writer_5.write((((current + \"\\t\") + \"B2\") + \"\\n\")); }else if (pos == ((word.length()) - 1)) { writer_2.write((((current + \"\\t\") + \"E\") + \"\\n\")); writer_4.write((((current + \"\\t\") + \"E\") + \"\\n\")); writer_5.write((((current + \"\\t\") + \"E\") + \"\\n\")); }else { writer_2.write((((current + \"\\t\") + \"E\") + \"\\n\")); writer_4.write((((current + \"\\t\") + \"M\") + \"\\n\")); writer_5.write((((current + \"\\t\") + \"M\") + \"\\n\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3523/buggy-version/src.TrainingParser.TrainingParser.java", "BodyUseAPI": ["java.lang.String.length()", "java.io.BufferedWriter.write(java.lang.String)", "java.lang.String.length()", "java.io.BufferedWriter.write(java.lang.String)", "java.lang.String.length()", "java.io.BufferedWriter.write(java.lang.String)", "java.lang.String.charAt(int)"], "Fixed commit": "a4991cc153ea9ad8447aad722b8dcbb98e9f4e4e", "Url": "https://api.github.com/repos/Min-Guo/NLP_Project", "Date": "2016-04-21T13:42:37Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bodyDecorator.getOdeDefinition().isPresent()) { if ((bodyDecorator.getOdeDefinition().get().getODEs().size()) > 1) { return root; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/9035/buggy-version/src.main.java.org.nest.codegeneration.NESTML2NESTCodeGenerator.java", "BodyUseAPI": ["bodyDecorator.getOdeDefinition().get().getODEs()", "bodyDecorator.getOdeDefinition().get().getODEs().size()", "org.nest.nestml._ast.ASTBodyDecorator.getOdeDefinition()", "bodyDecorator.getOdeDefinition().get()"], "Fixed commit": "c6eeca2f22c62c4e3761ec4675a7cfe9228350e2", "Url": "https://api.github.com/repos/DimitriPlotnikov/nestml", "Date": "2015-11-24T19:55:35Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.sql.Types.TIME) == (sourceResultSet.getMetaData().getColumnType((i + 1)))) { rowData[i] = sourceResultSet.getTimestamp((i + 1)); }else { rowData[i] = sourceResultSet.getObject((i + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3142/buggy-version/src.main.java.com.microsoft.sqlserver.jdbc.TVP.java", "BodyUseAPI": ["java.sql.ResultSet.getObject(int)", "java.sql.ResultSet.getTimestamp(int)"], "Fixed commit": "ae6587abc8ace4cc2319173628b1e7513fbe68c1", "Url": "https://api.github.com/repos/v-PATHngs/mssql-jdbc-PATHngs", "Date": "2017-05-26T00:07:56Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.pantas.billsplitter.model.Currency.convertToString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (amount.isEmpty()) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7521/buggy-version/app.src.main.java.ch.pantas.billsplitter.model.Currency.java", "BodyUseAPI": [], "Fixed commit": "fd75f7c0c9d4878c8eb457bc392a5d1938172226", "Url": "https://api.github.com/repos/ybonjour/BillSplitter", "Date": "2014-10-21T18:20:39Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (unit.isMorphing()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/9187/buggy-version/eisbw.src.main.java.eisbw.debugger.draw.DrawUnitInfo.java", "BodyUseAPI": [], "Fixed commit": "1a248c52b68404dc7aef5fae8d08c7df83028e20", "Url": "https://api.github.com/repos/eishub/Starcraft", "Date": "2017-07-19T18:09:55Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pluginName == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7917/buggy-version/src.main.java.com.darkzek.autoreload.AutoReload.java", "BodyUseAPI": [], "Fixed commit": "9c58d7d58c0152690fbd8dcb6d040c824a31515c", "Url": "https://api.github.com/repos/DarkZek/AutoReload", "Date": "2017-12-18T08:51:34Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (indice != (-1)) { liste[i] = mot.substring((indice + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8198/buggy-version/CMB-maven.src.main.java.CMB.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "2e4b07c37cda2e8fe4a24825883fc3a534c95142", "Url": "https://api.github.com/repos/FrancoisDuchene/CMB", "Date": "2017-08-26T13:37:24Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((routes[i]) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3205/buggy-version/CTC.CTC.java", "BodyUseAPI": [], "Fixed commit": "f57eedff8a31903cfd54d265ee2fea6d5e37bb92", "Url": "https://api.github.com/repos/bennieandthejets/SoftwareEngineering", "Date": "2015-04-14T23:42:17Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFinishing())) { android.support.v4.app.DialogFragment newFragment = im.tny.segvault.disturbances.HtmlDialogFragment.newInstance(s, false); newFragment.show(getSupportFragmentManager(), \"debugtext\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6394/buggy-version/app.src.main.java.im.tny.segvault.disturbances.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "159bd2946579182c3c4450bd04550607dbc43872", "Url": "https://api.github.com/repos/underlx/underlx", "Date": "2017-10-03T22:41:13Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(nl.hanze.db.io.BaseIO.openFiles.containsKey(fileName))) { nl.hanze.db.io.BaseIO.openFile(fileName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4206/buggy-version/src.nl.hanze.db.io.BaseIO.java", "BodyUseAPI": ["nl.hanze.db.io.BaseIO.openFile(java.lang.String)"], "Fixed commit": "e404c5d8a9c372a9ea8174e9c398e5cbe3f5ccc6", "Url": "https://api.github.com/repos/krisbuist/Databases", "Date": "2011-12-02T10:30:55Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((dataRespuesta.getIdCandidato()) == 0) && ((dataRespuesta.getIdPartido()) == 0)) { }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2449/buggy-version/Votapp.src.negocio.implementacion.EncuestaHandler.java", "BodyUseAPI": [], "Fixed commit": "ed8bb2ed66b8caa9e91dc9b9c0aecf425ce1248f", "Url": "https://api.github.com/repos/UsuarioCristian/Votapp", "Date": "2015-09-23T11:18:06Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.address.logic.parser.ArgumentTokenizer.tokenize(java.lang.String,seedu.address.logic.parser.CliSyntax.PREFIX_CLASS_TYPE,seedu.address.logic.parser.CliSyntax.PREFIX_VENUE,seedu.address.logic.parser.CliSyntax.PREFIX_GROUP,seedu.address.logic.parser.CliSyntax.PREFIX_TIME_SLOT,seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_CODE,seedu.address.logic.parser.CliSyntax.PREFIX_LECTURER)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_LECTURER).get().isEmpty()) { throw new seedu.address.commons.exceptions.IllegalValueException(seedu.address.model.lecturer.Lecturer.MESSAGE_LECTURER_CONSTRAINTS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5564/buggy-version/src.main.java.seedu.address.logic.parser.EditCommandParser.java", "BodyUseAPI": [], "Fixed commit": "a52b29fc8fb9d6343642ff5204fb6aa2a43c1dee", "Url": "https://api.github.com/repos/CS2103AUG2017-W13-B4/main", "Date": "2017-10-24T03:26:21Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.joda.time.DateTime.now()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((now.getHourOfDay()) < (me.gurinderhans.today.app.Utils.NotificationAlarmTimes.MORNING.getHourOfDay())) return me.gurinderhans.today.app.Utils.NotificationAlarmTimes.MORNING;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/607/buggy-version/android.Today.app.src.main.java.me.gurinderhans.today.app.Utils.java", "BodyUseAPI": [], "Fixed commit": "02cce0add610dff8f726698d3197009f3cfc1eaa", "Url": "https://api.github.com/repos/gurinderhans/Today", "Date": "2015-11-29T21:25:52Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(((bikeStation.stationName.equalsIgnoreCase(\"emil isac\")) || (bikeStation.stationName.equalsIgnoreCase(\"statie training 6\"))) || (bikeStation.stationName.equalsIgnoreCase(\"statie virtuala\")))) { stationsArray.add(bikeStation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3527/buggy-version/app.src.main.java.com.doruchidean.clujbikemap.helpers.Factory.java", "BodyUseAPI": ["java.util.ArrayList<com.doruchidean.clujbikemap.models.BikeStation>.add(com.doruchidean.clujbikemap.models.BikeStation)"], "Fixed commit": "a7d9cad9e02a08bfc4e7a8dfb878dd48332651d6", "Url": "https://api.github.com/repos/doruchidean/clujbikemap", "Date": "2016-06-06T08:45:59Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.avseredyuk.carrental.web.util.wrapper.RequestWrapper.getParameter(ConstantClass.USEREMAIL)", "com.avseredyuk.carrental.web.util.wrapper.RequestWrapper.getParameter(ConstantClass.USERSURNAME)", "com.avseredyuk.carrental.web.util.wrapper.RequestWrapper.getParameter(ConstantClass.USERNAME)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(com.avseredyuk.carrental.web.util.ParametersVerifier.checkAllNotEmpty(email, name, surname))) { throw new com.avseredyuk.carrental.web.exception.CommandExecutionException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6889/buggy-version/src.main.java.com.avseredyuk.carrental.web.command.impl.auth.CommandUpdateProfile.java", "BodyUseAPI": [], "Fixed commit": "e2e86c4fc1bbb0da8c83491bdc89172b6dae06cc", "Url": "https://api.github.com/repos/avseredyuk/car-rental", "Date": "2017-02-01T17:23:07Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((occurenceCalendar.get(java.util.Calendar.MONTH)) == (startDate.get(java.util.Calendar.MONTH))) { if ((occurenceCalendar.get(java.util.Calendar.DAY_OF_MONTH)) < (startDate.get(java.util.Calendar.DAY_OF_MONTH))) { occurenceCalendar.set(java.util.Calendar.DAY_OF_MONTH, ((occurenceCalendar.get(java.util.Calendar.DAY_OF_MONTH)) + 7)); } android.util.Log.e(\"after change\", java.lang.String.valueOf(occurenceCalendar.getTime())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7993/buggy-version/app.src.main.java.devs.erasmus.epills.controller.AddPillSetTime.java", "BodyUseAPI": ["java.util.Calendar.get(int)", "java.util.Calendar.get(int)", "java.lang.String.valueOf(java.util.Date)", "java.util.Calendar.set(int,int)", "java.util.Calendar.getTime()", "java.util.Calendar.get(int)", "android.util.Log.e(java.lang.String,java.lang.String)"], "Fixed commit": "724d86dfa4d5915f3b59d2469410339582276a9d", "Url": "https://api.github.com/repos/jcolladosp/ePills", "Date": "2017-11-26T00:22:19Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isSnackbarShow) <= 0) { isSnackbarShow = 0; mFAB.animate().translationY(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8347/buggy-version/app.src.main.java.com.catchingnow.tinyclipboardmanager.ActivityMain.java", "BodyUseAPI": [], "Fixed commit": "34fab1754db4289ab6ace3335055e69f1309b11a", "Url": "https://api.github.com/repos/heruoxin/Clip-Stack", "Date": "2015-02-08T14:15:17Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (opponent != null) opponent.setOpponent(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1101/buggy-version/src.threeInARow.AdvancedPlayer.java", "BodyUseAPI": [], "Fixed commit": "7532580876041068043b0fd641c88f81b36af086", "Url": "https://api.github.com/repos/bobscoe/CS4750_HW4", "Date": "2016-10-05T01:55:01Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (opponent != null) opponent.setOpponent(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1101/buggy-version/src.threeInARow.MasterPlayer.java", "BodyUseAPI": [], "Fixed commit": "7532580876041068043b0fd641c88f81b36af086", "Url": "https://api.github.com/repos/bobscoe/CS4750_HW4", "Date": "2016-10-05T01:55:01Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.akrolsmir.bakegami.SettingsActivity.allowData(context)) activeNetworkInfo = connectivityManager.getActiveNetworkInfo(); else activeNetworkInfo = connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_WIFI);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7107/buggy-version/src.com.akrolsmir.bakegami.ConnectReceiver.java", "BodyUseAPI": [], "Fixed commit": "e9e138a6d04d9069c76bde56f94931720573a513", "Url": "https://api.github.com/repos/akrolsmir/Bakegami", "Date": "2014-09-20T09:15:08Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((timeLikelihoods.size()) == 0) { timeMax = java.lang.Double.NEGATIVE_INFINITY; timeMin = java.lang.Double.NEGATIVE_INFINITY; }else { timeMax = timeLikelihoods.max(); timeMin = timeLikelihoods.min(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8453/buggy-version/PDTTA-core.src.sadl.detectors.featureCreators.SmallFeatureCreator.java", "BodyUseAPI": ["gnu.trove.list.TDoubleList.max()", "gnu.trove.list.TDoubleList.min()"], "Fixed commit": "4dab1f2f3fcf9cfca5e25931ffb7aba3d20012b5", "Url": "https://api.github.com/repos/TKlerx/SADL", "Date": "2015-05-18T08:38:48Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.Si.equals(\"\")) this.Si = Si; else this.Si = (Si + \" , \") + (this.Si);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4029/buggy-version/src.java.methods.policy.java", "BodyUseAPI": [], "Fixed commit": "0ae45c1dd109457591417d9f7925c18b947a619e", "Url": "https://api.github.com/repos/axenaki/paretoService", "Date": "2014-10-21T12:15:02Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mLoaded.size()) != 0) { counter = 1; publishProgress(); wait(); mLoaded.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6499/buggy-version/app.src.main.java.net.razysoft.production.SaleFragment.java", "BodyUseAPI": ["java.util.ArrayList<Contract.Sale.Wrapper>.clear()"], "Fixed commit": "40c80d97ba4ed32d5f8e4e08f091ae71a7595d7a", "Url": "https://api.github.com/repos/Gr3Kidd3r/production-android", "Date": "2016-12-12T13:15:27Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.rubychina.app.util.TopApp.mInstance) == null) { com.rubychina.app.util.TopApp.mInstance = this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4047/buggy-version/app.src.main.java.com.rubychina.app.util.TopApp.java", "BodyUseAPI": [], "Fixed commit": "e26d65b12215d7caef5d0fd3eeab416ef6428dfd", "Url": "https://api.github.com/repos/RobotJiang/TechForumOnAndroid", "Date": "2014-09-24T14:39:29Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.ssteffanus.feelingsdiary.JournalClass.getEntries()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (moods != null) { java.lang.String emotion = findEmotion(moods); android.content.Intent intent = new android.content.Intent(this, com.example.ssteffanus.feelingsdiary.Summary.class); android.util.Log.i(TAG, (\"setting up Intent in MainActivity and the emotion is \" + emotion)); intent.putExtra(\"mood\", emotion); startActivity(intent); }else { android.widget.Toast.makeText(getApplicationContext(), \"No entries exist yet\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6659/buggy-version/app.src.main.java.com.example.ssteffanus.feelingsdiary.MainActivity.java", "BodyUseAPI": ["com.example.ssteffanus.feelingsdiary.MainActivity.findEmotion(java.util.HashMap<java.lang.String, java.util.ArrayList<com.example.ssteffanus.feelingsdiary.EntryClass>>)"], "Fixed commit": "781e99907c3626469754ebdd86cc57f200e85fa6", "Url": "https://api.github.com/repos/Truckle12/FeelingsDiary", "Date": "2015-12-05T21:28:59Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((battleMemberList.size()) >= 2) { highlightImage[((i + 1) % (battleMemberList.size()))].setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5253/buggy-version/core.src.com.mygdx.stage.CharacterUiStage.java", "BodyUseAPI": ["highlightImage[((i + 1) % (battleMemberList.size()))].setVisible(boolean)", "java.util.List<com.mygdx.model.unit.Hero>.size()"], "Fixed commit": "7295d7116f766d3d717dc85df38330aaa5055235", "Url": "https://api.github.com/repos/CienProject2014/OneLevelHero", "Date": "2015-09-30T09:26:24Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((battleMemberList.size()) >= 3) { highlightImage[((i + 2) % (battleMemberList.size()))].setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5253/buggy-version/core.src.com.mygdx.stage.CharacterUiStage.java", "BodyUseAPI": ["highlightImage[((i + 2) % (battleMemberList.size()))].setVisible(boolean)", "java.util.List<com.mygdx.model.unit.Hero>.size()"], "Fixed commit": "7295d7116f766d3d717dc85df38330aaa5055235", "Url": "https://api.github.com/repos/CienProject2014/OneLevelHero", "Date": "2015-09-30T09:26:24Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ubcsolar.common.GeoCoord.haversine(endForecast.getLatitude(),endForecast.getLongitude(),currentLoc.getLat(),currentLoc.getLon())", "com.ubcsolar.common.GeoCoord.haversine(startForecast.getLatitude(),startForecast.getLongitude(),currentLoc.getLat(),currentLoc.getLon())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((java.lang.Math.abs(endDistance)) < 1.0E-4) && ((java.lang.Math.abs(startDistance)) < 1.0E-4)) { endWeight = 0; }else { endWeight = (1 / (endDistance + startDistance)) * startDistance; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4169/buggy-version/src.com.ubcsolar.weather.WeatherController.java", "BodyUseAPI": [], "Fixed commit": "7988f43f4c83c7d9b8ec41fcefc4605fc204807f", "Url": "https://api.github.com/repos/UBC-Solar/Simulator", "Date": "2016-07-16T20:21:28Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startForecast == null) { startForecast = endForecast; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4169/buggy-version/src.com.ubcsolar.weather.WeatherController.java", "BodyUseAPI": [], "Fixed commit": "7988f43f4c83c7d9b8ec41fcefc4605fc204807f", "Url": "https://api.github.com/repos/UBC-Solar/Simulator", "Date": "2016-07-16T20:21:28Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (settings.getAutoAnnotateMapped()) drawer.copyToLocallyMappedVariables();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2508/buggy-version/src.semgen.annotation.annotatorpane.subpanels.CompositeAnnotationPanel.java", "BodyUseAPI": [], "Fixed commit": "d66b83054306d159ec5e080c662b62e5b56412cb", "Url": "https://api.github.com/repos/SemBioProcess/SemGen", "Date": "2015-07-20T17:15:57Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (price_min > 0) { queryString += \" WHERE\"; whereAdded = true; queryString += \" price >= :price_min\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2466/buggy-version/src.main.java.de.fau.cs.mad.wanthavers.server.dao.DesireDAO.java", "BodyUseAPI": [], "Fixed commit": "d9ac7c798299ad95192c246fd7ed74a0682c15fd", "Url": "https://api.github.com/repos/FAU-Inf2/wanthavers-server", "Date": "2016-06-06T13:43:22Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(end)) { builder.append(\"\\n\").append(end); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4099/buggy-version/src.main.java.app.workspace.format.Prettifier.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "adc79c52555ceefe86944c063bcf799a1be9e759", "Url": "https://api.github.com/repos/murphd40/prettify-bot", "Date": "2017-02-21T19:08:00Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (osId == null) { osId = server.getTag(\"guestosid\").toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6512/buggy-version/src.main.java.org.dasein.cloud.cloudstack.compute.Templates.java", "BodyUseAPI": [], "Fixed commit": "6751fe6aa592b5f71a9f4d196eae8aa94254f306", "Url": "https://api.github.com/repos/daniellemayne/dasein-cloud-cloudstack", "Date": "2013-12-18T15:23:44Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((contentType.getCharset()) == null) { contentType = contentType.withCharset(request.charset()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4551/buggy-version/httpclient.src.main.java.feign.httpclient.ApacheHttpClient.java", "BodyUseAPI": ["org.apache.http.entity.ContentType.withCharset(request.charset())"], "Fixed commit": "8c54e3aa09ad329ee315231b3c31cc3f8fb18cb4", "Url": "https://api.github.com/repos/OpenFeign/feign", "Date": "2017-06-12T12:47:40Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (decimalPlaces == 0) { return format(((double) ((long) (number)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6377/buggy-version/CodenameOne.src.com.codename1.l10n.L10NManager.java", "BodyUseAPI": [], "Fixed commit": "bff9ac349bee96ee7c83c377758ece3020be100b", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-08-03T16:37:23Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activityRequestCode) != (CalendarActivity.CALENDAR_ACTIVITY_ID_REQUEST)) { setAmountsSaved(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3752/buggy-version/app.src.main.java.com.jabarasca.financial_app.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ae9ecd37246d59c93746f0a686129144e1b46638", "Url": "https://api.github.com/repos/filipeborges/Financial-App", "Date": "2016-03-11T13:19:56Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNfcAdapter) != null) { com.where.monthonprogramming.where.activity.LandingActivity.stopForegroundDispatch(this, mNfcAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4574/buggy-version/app.src.main.java.com.where.monthonprogramming.where.activity.LandingActivity.java", "BodyUseAPI": [], "Fixed commit": "94128a1e4bd00efbc82202149fa506ac501175d8", "Url": "https://api.github.com/repos/ipoobest/Where", "Date": "2016-11-11T11:10:10Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((size) != (-1)) && ((size) > (data.size()))) { size = data.size(); for (FXPresentation.UserController userController : userControllers) { userController.refreshPlays(data); userController.refreshSeats(); } }else { size = data.size(); for (FXPresentation.UserController userController : userControllers) { userController.refreshPlays(data); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5643/buggy-version/src.FXPresentation.ScreenLoader.java", "BodyUseAPI": ["javafx.collections.ObservableList<model.Play>.size()", "javafx.collections.ObservableList<model.Play>.size()", "FXPresentation.UserController.refreshPlays(javafx.collections.ObservableList<model.Play>)", "FXPresentation.UserController.refreshPlays(javafx.collections.ObservableList<model.Play>)"], "Fixed commit": "3ebe0c82bac74df62c8ceddbb9812864feb426ee", "Url": "https://api.github.com/repos/mikevd92/javafx", "Date": "2016-06-08T17:22:32Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Hashtable<java.lang.String, org.denevell.droidnatch.SeenThreadsSaver.ThreadModification>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (modification > (thread.visitedModificationDate)) { thread.visitedModificationDate = modification; org.denevell.droidnatch.SeenThreadsSaver.seenThreads.put(id, thread); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6086/buggy-version/src.org.denevell.droidnatch.SeenThreadsSaver.java", "BodyUseAPI": ["java.util.Hashtable<java.lang.String, org.denevell.droidnatch.SeenThreadsSaver.ThreadModification>.put(java.lang.String,org.denevell.droidnatch.SeenThreadsSaver.ThreadModification)"], "Fixed commit": "2105d5db7b1feda8db0125d17c2adefa9628ae24", "Url": "https://api.github.com/repos/denevell/Natch-Android", "Date": "2014-03-19T07:26:46Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getMultiBlock()) != null) { if ((getMultiBlock().node) != (node)) { getMultiBlock().node = node; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/159/buggy-version/src.main.java.RebornStorage.tiles.TileMultiCrafter.java", "BodyUseAPI": [], "Fixed commit": "0cd8aa7375db671ba3de86fb92bd15d4a29600a4", "Url": "https://api.github.com/repos/TechReborn/RebornStorage", "Date": "2017-02-24T14:35:33Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["WPI.CampusMap.Recording.Serialization.Serializer.proxyLoad(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (map == null) { map = new WPI.CampusMap.Backend.Core.Map.ProxyMap(mapKey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1377/buggy-version/src.main.java.WPI.CampusMap.Backend.Core.Map.AllMaps.java", "BodyUseAPI": [], "Fixed commit": "84e1dd6847cdbf0ec4a124a9a51249b0cd3db9b0", "Url": "https://api.github.com/repos/Team11b/CampusMap", "Date": "2015-12-08T23:12:46Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (command instanceof scfd.Victory) { this.gameThread = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5544/buggy-version/src.scfd.PlayerThread.java", "BodyUseAPI": [], "Fixed commit": "2e53904918a4807e6bf2da80e4353140dc88815b", "Url": "https://api.github.com/repos/paddya/scf", "Date": "2014-01-14T12:31:23Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files != null) { for (java.io.File file : files) { com.europa.filehelper.bean.FileItem item = new com.europa.filehelper.bean.FileItem(); item.setFile(file); item.setType(getFileType(item)); fileItemList.add(item); allFileItems.add(item); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4998/buggy-version/FileHelper.src.com.europa.filehelper.ui.fragment.MainFragment.java", "BodyUseAPI": [], "Fixed commit": "a6f3f71a3172cd633d1490267f78f8a4817598ba", "Url": "https://api.github.com/repos/europa/europa", "Date": "2014-02-16T07:36:40Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((properties.getConfig()) == null) { properties.setConfig(new java.util.Properties()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5839/buggy-version/jetbrick-template-springmvc.src.main.java.jetbrick.template.web.springboot.JetTemplateAutoConfiguration.java", "BodyUseAPI": ["jetbrick.template.web.springboot.JetTemplateProperties.setConfig(java.util.Properties)"], "Fixed commit": "2af06a2261233cdf6aa4af99ef3544abf8989e71", "Url": "https://api.github.com/repos/yingzhuo/jetbrick-template-2x", "Date": "2016-02-07T00:28:44Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.crowsofwar.avatar.common.entity.FloatingBlockBehavior.PlayerControlled.getControllingPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (controller == null) return this;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5327/buggy-version/src.main.java.com.crowsofwar.avatar.common.entity.FloatingBlockBehavior.java", "BodyUseAPI": [], "Fixed commit": "ac05aae0ea636db4e1650e10639014057319c6d0", "Url": "https://api.github.com/repos/CrowsOfWar/AvatarMod", "Date": "2016-10-09T16:01:52Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,token.getType())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (events != null) { fcfm.psm.psm_app.Database.EventCRUD eventCRUD = new fcfm.psm.psm_app.Database.EventCRUD(this); for (fcfm.psm.psm_app.Model.Event event : events) { eventCRUD.createEvent(event); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7766/buggy-version/app.src.main.java.fcfm.psm.psm_app.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "0dc03363ee649671466eaca8bed303088502c512", "Url": "https://api.github.com/repos/rVillegasr/PSM-App", "Date": "2016-11-08T21:07:18Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["info.bluefoot.fileutilities.operation.support.CopyToDestination.getSetting(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(path)) { logger.warn(((info.bluefoot.fileutilities.operation.support.CopyToDestination.DEFAULT_PATH_SETTING) + \" setting is blank, copying to home directory\")); path = java.lang.System.getProperty(\"user.home\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1548/buggy-version/src.main.java.info.bluefoot.fileutilities.operation.support.CopyToDestination.java", "BodyUseAPI": [], "Fixed commit": "9248cfb3891de6c7df01db82387d09d874a63624", "Url": "https://api.github.com/repos/bluefoot/fileutilities", "Date": "2017-09-24T13:28:03Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((l.length()) > 0) count++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3081/buggy-version/src.MR.Coordinator.java", "BodyUseAPI": [], "Fixed commit": "d4b4f0039590c90c046ef89accc3eaac3be322ca", "Url": "https://api.github.com/repos/anurgali/DistributedSystems", "Date": "2015-07-24T10:31:32Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((line.length()) == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3081/buggy-version/src.MR.Coordinator.java", "BodyUseAPI": [], "Fixed commit": "d4b4f0039590c90c046ef89accc3eaac3be322ca", "Url": "https://api.github.com/repos/anurgali/DistributedSystems", "Date": "2015-07-24T10:31:32Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((reconnectionSchedule) != null) && (!(reconnectionSchedule.isCancelled()))) { reconnectTask.cancel(); reconnectionSchedule.cancel(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3748/buggy-version/jar.src.main.java.org.mobicents.tools.smpp.multiplexer.UserSpace.java", "BodyUseAPI": ["java.util.concurrent.ScheduledFuture<?>.cancel(boolean)"], "Fixed commit": "69d9386f318d55ea67d13f90c4bf30d64ef26a73", "Url": "https://api.github.com/repos/RestComm/load-balancer", "Date": "2017-02-24T17:49:59Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((endpoint != null) && (!(\"\".equals(endpoint)))) { sdb.setEndpoint(endpoint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6433/buggy-version/grails-datastore-simpledb.src.main.groovy.org.grails.datastore.mapping.simpledb.util.SimpleDBTemplateImpl.java", "BodyUseAPI": [], "Fixed commit": "f2dc0c8a6d4dba2d4117011a4f1d25d5e1fd9060", "Url": "https://api.github.com/repos/lhotari/grails-data-mapping", "Date": "2013-05-05T01:43:09Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (vollbild) { this.setVisible(false); this.setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2070/buggy-version/src.ea.internal.gui.Fenster.java", "BodyUseAPI": [], "Fixed commit": "8d641eb82801c1681e6cf1845083deebb1778e1c", "Url": "https://api.github.com/repos/engine-alpha/engine-alpha", "Date": "2017-04-10T20:36:04Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(hasInformationControlReplacer())) || (!(canMoveIntoInformationControl(getCurrentInformationControl())))) { if (!(fSubjectArea.contains(event.x, event.y))) { hideInformationControl(); } }else if (((getCurrentInformationControl()) != null) && (!(getCurrentInformationControl().isFocusControl()))) { if (!(inKeepUpZone(event.x, event.y, fSubjectControl, fSubjectArea, true))) { hideInformationControl(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1872/buggy-version/plugins.org.jboss.tools.windup.ui.src.org.jboss.tools.windup.ui.internal.rules.delegate.AbstractHoverInformationControlManager.java", "BodyUseAPI": [], "Fixed commit": "ce7cb7e4f9ffc5f2962e69a0441fd8335e43d96d", "Url": "https://api.github.com/repos/windup/windup-eclipse-plugin", "Date": "2017-08-09T01:09:34Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.pachouri.transportsolution.util.CommonUtil.isValidEmail(editTextEmail.getText()))) com.pachouri.transportsolution.activity.MessageUtils.showToast(getApplicationContext(), \"Invalid email\"); else { com.pachouri.transportsolution.models.UserModel userModel = com.pachouri.transportsolution.models.UserModel.getInstance(getApplicationContext()); userModel.setFirstName(editTextFirstName.getText().toString()); userModel.setLastName(editTextLastName.getText().toString()); userModel.setEmail(editTextEmail.getText().toString()); if ((profilePic) != null) userModel.setImageUrl(profilePic.getAbsolutePath()); userModel.setMobileNumber(mobilePhone); com.pachouri.transportsolution.models.UserModel.setUpInstance(getApplicationContext(), userModel); android.content.Intent intent = new android.content.Intent(this, com.pachouri.transportsolution.activity.AadharVerification.class); startActivity(intent); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1862/buggy-version/app.src.main.java.com.pachouri.transportsolution.activity.PersonalProfile.java", "BodyUseAPI": ["editTextEmail.getText().toString()", "android.widget.EditText.getText()", "com.pachouri.transportsolution.models.UserModel.setEmail(editTextEmail.getText().toString())"], "Fixed commit": "9649ec0d0767cf74dc319299d50ed9d3f098a393", "Url": "https://api.github.com/repos/Pachouri-Sikandar/TransportSolution", "Date": "2016-12-25T04:04:28Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((model) == null) || ((model.getObject()) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1311/buggy-version/gui.admin-gui.src.main.java.com.evolveum.midpoint.web.component.wizard.resource.SchemaStep.java", "BodyUseAPI": [], "Fixed commit": "b5bb35882ed0782da1dd76ea163d3d44732e8014", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2015-01-31T16:01:50Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.isSuccess()) { com.evolveum.midpoint.web.component.wizard.resource.SchemaStep.LOGGER.info(getString(\"SchemaStep.message.reload.ok\", com.evolveum.midpoint.web.util.WebMiscUtil.getName(resource))); result.recordSuccess(); }else { com.evolveum.midpoint.web.component.wizard.resource.SchemaStep.LOGGER.error(getString(\"SchemaStep.message.reload.fail\", com.evolveum.midpoint.web.util.WebMiscUtil.getName(resource))); result.recordFatalError(getString(\"SchemaStep.message.reload.fail\", com.evolveum.midpoint.web.util.WebMiscUtil.getName(resource))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1311/buggy-version/gui.admin-gui.src.main.java.com.evolveum.midpoint.web.component.wizard.resource.SchemaStep.java", "BodyUseAPI": ["com.evolveum.midpoint.schema.result.OperationResult.recordSuccess()", "com.evolveum.midpoint.schema.result.OperationResult.recordFatalError(getString(\"SchemaStep.message.reload.fail\", com.evolveum.midpoint.web.util.WebMiscUtil.getName(resource)))"], "Fixed commit": "b5bb35882ed0782da1dd76ea163d3d44732e8014", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2015-01-31T16:01:50Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (bundle.containsKey(IntentExtraAttribute.CLASS_INFO)) classInfo = bundle.getString(IntentExtraAttribute.CLASS_INFO);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2520/buggy-version/src.com.boding.app.TicketSearchResultActivity.java", "BodyUseAPI": ["android.os.Bundle.getString(IntentExtraAttribute.CLASS_INFO)"], "Fixed commit": "94c44cd40a98bba14a0070a5a7521d85944cc566", "Url": "https://api.github.com/repos/Sgarlic/Pigging", "Date": "2014-07-17T14:37:16Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"/avtors\".equals(request.getServletPath())) { editAvtor(request, response, 2); }else if ((request.getParameter(\"add_book\")) != null) { addBook(request, response, 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7967/buggy-version/src.server.WebDbServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "server.WebDbServlet.editAvtor(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,int)", "server.WebDbServlet.addBook(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,int)"], "Fixed commit": "28d5b3dbd646022d19e17b4065ff3d5c35e1eedd", "Url": "https://api.github.com/repos/belogod/web2012", "Date": "2016-02-24T20:25:01Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.intalker.borrow.util.DeviceUtil.isFroyo()) { mShelfView.setOnTouchListener(new com.intalker.borrow.ui.book.OnTouchListener() { @java.lang.Override public boolean onTouch(android.view.View v, android.view.MotionEvent event) { return true; } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6424/buggy-version/src.com.intalker.borrow.ui.book.BookGallery.java", "BodyUseAPI": [], "Fixed commit": "2772a506fe764ea59e9f91e817f3287f7d9955af", "Url": "https://api.github.com/repos/tomdong/borrow", "Date": "2013-01-31T13:21:18Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasSend) { java.lang.Thread.sleep(15000); hasSend = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7818/buggy-version/src.main.java.be.maximvdw.spigotar.SpigotAutoReply.java", "BodyUseAPI": [], "Fixed commit": "126d79375d7aedf4d5cd31ca508cb10ae6306a6b", "Url": "https://api.github.com/repos/Maximvdw/SpigotAutoReply", "Date": "2015-01-27T23:45:09Z"},
{"Line": "=>642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orange.game.zjh.model.ZjhGameSession.findUser(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (loserUser != null) { loserUser.setLoseGame(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2903/buggy-version/src.com.orange.game.zjh.model.ZjhGameSession.java", "BodyUseAPI": ["com.orange.game.traffic.model.dao.GameUser.setLoseGame(boolean)"], "Fixed commit": "73c256e64c6643a3ca4c018e1f5e2e59f8dba3d5", "Url": "https://api.github.com/repos/gckjdev/ZJHTrafficServer", "Date": "2013-01-14T08:33:03Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj != null) return new GImage(((GImage) (obj)).getImage()); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4411/buggy-version/src.LevelDesigner.java", "BodyUseAPI": [], "Fixed commit": "89313e416a61ef3b85b8aad06a5d6ab22ebc9b22", "Url": "https://api.github.com/repos/MicahAndWill/FruitFever", "Date": "2014-08-10T17:56:12Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((order.getShop()) != null) { orderDto.setShop(com.github.handioq.diber.utils.Converter.toShopDto(order.getShop())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1170/buggy-version/src.main.java.com.github.handioq.diber.utils.Converter.java", "BodyUseAPI": ["com.github.handioq.diber.utils.Converter.toShopDto(order.getShop())", "com.github.handioq.diber.utils.Order.getShop()", "com.github.handioq.diber.utils.OrderDto.setShop(com.github.handioq.diber.utils.ShopDto)"], "Fixed commit": "e1fcd7143e542c309f3c6957bc1a25674db0edde", "Url": "https://api.github.com/repos/atereshkov/Diber-backend", "Date": "2017-04-09T10:00:03Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((order.getAddress()) != null) { orderDto.setAddress(com.github.handioq.diber.utils.Converter.toAddressDto(order.getAddress())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1170/buggy-version/src.main.java.com.github.handioq.diber.utils.Converter.java", "BodyUseAPI": ["com.github.handioq.diber.utils.Converter.toAddressDto(order.getAddress())", "com.github.handioq.diber.utils.Order.getAddress()", "com.github.handioq.diber.utils.OrderDto.setAddress(com.github.handioq.diber.utils.AddressDto)"], "Fixed commit": "e1fcd7143e542c309f3c6957bc1a25674db0edde", "Url": "https://api.github.com/repos/atereshkov/Diber-backend", "Date": "2017-04-09T10:00:03Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((unitSprites[unitTiles[x][y].ID]) != null) { if ((unitTiles[x][y].Name.contains(\"Human\")) || (unitTiles[x][y].Name.contains(\"Orc\"))) g2d.drawImage(unitSprites[unitTiles[x][y].ID], ((cameraOffsetX) + (x * 32)), ((cameraOffsetY) + (y * 32)), this); else { java.awt.Point truepos = calculateUnitDrawingPosition(x, y, 1, unitSprites[unitTiles[x][y].ID]); g2d.drawImage(unitSprites[unitTiles[x][y].ID], ((cameraOffsetX) + (truepos.x)), ((cameraOffsetY) + (truepos.y)), this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8581/buggy-version/src.MapViewPanel.java", "BodyUseAPI": ["MapViewPanel.calculateUnitDrawingPosition(int,int,int,java.awt.image.BufferedImage)", "unitTiles[x][y].Name.contains(java.lang.String)", "java.awt.Graphics2D.drawImage(java.awt.image.BufferedImage,int,int,MapViewPanel)", "unitTiles[x][y].Name.contains(java.lang.String)", "java.awt.Graphics2D.drawImage(java.awt.image.BufferedImage,int,int,MapViewPanel)"], "Fixed commit": "e7db01e754204ed745bd8c714ecfde16f8927814", "Url": "https://api.github.com/repos/smoke11/pudviewer", "Date": "2013-03-14T09:15:52Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<android.graphics.PointF>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (p != null) { if (vertexPaint != null) { canvas.drawPoint(p.x, p.y, vertexPaint); } if (pointLabeler != null) { canvas.drawText(pointLabeler.getLabel(series, i), ((p.x) + (plf.hOffset)), ((p.y) + (plf.vOffset)), plf.getTextPaint()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1421/buggy-version/androidplot-core.src.main.java.com.androidplot.xy.LineAndPointRenderer.java", "BodyUseAPI": ["android.graphics.Canvas.drawText(pointLabeler.getLabel(series, i),((p.x) + (plf.hOffset)),((p.y) + (plf.vOffset)),plf.getTextPaint())", "android.graphics.Canvas.drawPoint(p.x,p.y,android.graphics.Paint)"], "Fixed commit": "40baa0ed1cd1b0632d41099fa068df232fb9c7a5", "Url": "https://api.github.com/repos/halfhp/androidplot", "Date": "2017-01-05T14:18:34Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (parameters != null) { prepStatement = connectie.prepareStatement(query); for (int i = 1; i <= (parameters.size()); i++) { prepStatement.setString(i, parameters.get((i - 1))); } inhoudQuery = prepStatement.executeQuery(); }else { statement = connectie.createStatement(); inhoudQuery = statement.executeQuery(query); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2376/buggy-version/Project_Groep2-master.ProjectGroep2.src.java.Databank.Connectie_Databank.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.get(int)", "java.sql.PreparedStatement.setString(int,java.lang.String)"], "Fixed commit": "0aed1904f7b2a8e83602ccee5ea8c9aa68ce0a66", "Url": "https://api.github.com/repos/jeroenv2/Project_Groep2", "Date": "2013-04-04T09:47:23Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(java.util.Objects.isNull(users))) && (!(users.isEmpty()))) { getUserDao().confirm(users); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/293/buggy-version/src.main.java.com.zhytnik.library.service.UserService.java", "BodyUseAPI": ["com.zhytnik.library.dao.UserDao.confirm(java.util.List<java.lang.Integer>)"], "Fixed commit": "7c41a5232928b25a2a9ed85238be421e2217ba3b", "Url": "https://api.github.com/repos/Alexey911/Library", "Date": "2015-12-09T14:03:31Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opendatakit.tables.fragments.WebFragment.getView()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (vw == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5779/buggy-version/tables_app.src.main.java.org.opendatakit.tables.fragments.WebFragment.java", "BodyUseAPI": [], "Fixed commit": "9505694e031a9205d0cc154b58429573dcee0317", "Url": "https://api.github.com/repos/opendatakit/tables", "Date": "2015-10-26T06:29:13Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (webView != null) { webView.loadUrl(\"javascript:datarsp.responseAvailable();\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5779/buggy-version/tables_app.src.main.java.org.opendatakit.tables.fragments.WebFragment.java", "BodyUseAPI": ["android.webkit.WebView.loadUrl(java.lang.String)"], "Fixed commit": "9505694e031a9205d0cc154b58429573dcee0317", "Url": "https://api.github.com/repos/opendatakit/tables", "Date": "2015-10-26T06:29:13Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isInCreateMode())) { this.inner().withServicePrincipalProfile(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6536/buggy-version/azure-mgmt-compute.src.main.java.com.microsoft.azure.management.compute.implementation.ContainerServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "0710e4f293d755ae9ad4610a27156d9fb830ced5", "Url": "https://api.github.com/repos/martinsawicki/azure-sdk-for-java", "Date": "2017-06-06T17:20:35Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (out != null) { this.flushAndCloseOutStream(out); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/469/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.PropertyCacheFile.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.PropertyCacheFile.flushAndCloseOutStream(java.io.FileOutputStream)"], "Fixed commit": "547fb51b1db4533e6e1a03aa528a2fed5de828e9", "Url": "https://api.github.com/repos/liscju/checkstyle", "Date": "2015-04-07T23:15:15Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (machineToGetStateFrom == implementationName) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8579/buggy-version/ReplicaManager.src.ReplicaManagerService.java", "BodyUseAPI": [], "Fixed commit": "e076844bc3628b383240b8951c8e2b13515998bb", "Url": "https://api.github.com/repos/erkkiperkele/6231-Project", "Date": "2015-12-07T06:18:18Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(locale.getLanguage().equals(language))) { logger.info((\"New language: \" + language)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/265/buggy-version/src.main.java.org.agoncal.application.petstore.web.LocaleBean.java", "BodyUseAPI": ["java.util.logging.Logger.info(java.lang.String)"], "Fixed commit": "cbfcf45ee5096bb9846fc516d3d756d26ee49512", "Url": "https://api.github.com/repos/stephanrauh/agoncal-petstore-JSE7-ajax", "Date": "2014-02-28T19:09:57Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (buf == null) { java.lang.String t = (\"Error_Include_file (\" + originalFileName) + \") not_found\"; AddLine(t); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7365/buggy-version/src.com.rfo.basic.AddProgramLine.java", "BodyUseAPI": [], "Fixed commit": "a6ec5fa2ae868d24b9f9ec99da683ce641f57008", "Url": "https://api.github.com/repos/RFO-BASIC/Basic", "Date": "2015-01-10T17:44:31Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(context.getString(R.string.pref_client_ip_address_key),context.getString(R.string.pref_client_default_ip_address))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((ipAdd == null) || ((ipAdd.trim().length()) == 0)) { ipAdd = context.getString(R.string.pref_client_default_ip_address); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1941/buggy-version/app.src.main.java.com.radioyps.doorcontroller.Utils.java", "BodyUseAPI": [], "Fixed commit": "268801a552694d30cd099f5d2e0678eb4e22bf3c", "Url": "https://api.github.com/repos/PeishengYE/DoorController", "Date": "2016-10-24T22:38:50Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(context.getString(R.string.pref_client_ip_port_key),context.getString(R.string.pref_client_default_ip_port))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((port == null) || ((port.trim().length()) == 0)) { port = context.getString(R.string.pref_client_default_ip_port); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1941/buggy-version/app.src.main.java.com.radioyps.doorcontroller.Utils.java", "BodyUseAPI": [], "Fixed commit": "268801a552694d30cd099f5d2e0678eb4e22bf3c", "Url": "https://api.github.com/repos/PeishengYE/DoorController", "Date": "2016-10-24T22:38:50Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"0.0.0.0\".equals(CoreGlobalProperty.CONSOLE_PROXY_OVERRIDDEN_IP))) { cmd.setProxyHostname(CoreGlobalProperty.CONSOLE_PROXY_OVERRIDDEN_IP); }else { cmd.setProxyHostname(self.getProxyHostname()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/871/buggy-version/console.src.main.java.org.zstack.console.ConsoleProxyBase.java", "BodyUseAPI": [], "Fixed commit": "1d36635ee5bb4f9f724f55fb5182b8c550890790", "Url": "https://api.github.com/repos/zstackio/zstack", "Date": "2015-06-25T07:45:06Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (json.has(\"cf\")) { com.door43.translationstudio.core.Util.jsonArrayToString(json.getJSONArray(\"cf\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1298/buggy-version/app.src.main.java.com.door43.translationstudio.core.TranslationWord.java", "BodyUseAPI": ["com.door43.translationstudio.core.Util.jsonArrayToString(json.getJSONArray(\"cf\"))", "org.json.JSONObject.getJSONArray(java.lang.String)"], "Fixed commit": "a1a802c99498e3314eaebcfda106beff0ed347bd", "Url": "https://api.github.com/repos/jshuma/ts-android", "Date": "2015-10-14T21:29:43Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (json.has(\"aliases\")) { aliases = com.door43.translationstudio.core.Util.jsonArrayToString(json.getJSONArray(\"aliases\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1298/buggy-version/app.src.main.java.com.door43.translationstudio.core.TranslationWord.java", "BodyUseAPI": ["com.door43.translationstudio.core.Util.jsonArrayToString(json.getJSONArray(\"aliases\"))", "org.json.JSONObject.getJSONArray(java.lang.String)"], "Fixed commit": "a1a802c99498e3314eaebcfda106beff0ed347bd", "Url": "https://api.github.com/repos/jshuma/ts-android", "Date": "2015-10-14T21:29:43Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<org.modelcc.language.factory.ModelElement>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((el.getPrefix()) != null) for (int i = 0; i < (el.getPrefix().size()); i++) rers2.add(deltore.get(el.getPrefix().get(i)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4657/buggy-version/ModelCC.src.org.modelcc.language.factory.LanguageSpecificationFactory.java", "BodyUseAPI": ["java.util.List<org.modelcc.language.syntax.RuleElement>.add(deltore.get(el.getPrefix().get(i)))", "java.util.Map<org.modelcc.lexer.recognizer.PatternRecognizer, org.modelcc.language.syntax.RuleElement>.get(el.getPrefix().get(i))", "org.modelcc.language.factory.ModelElement.getPrefix()", "el.getPrefix().size()", "org.modelcc.language.factory.ModelElement.getPrefix()", "el.getPrefix().get(int)"], "Fixed commit": "565c9442d0bffdbf16becb0f16cd8100284de97d", "Url": "https://api.github.com/repos/lquesada/ModelCC", "Date": "2013-11-29T16:28:12Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<org.modelcc.language.factory.ModelElement>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((el.getSuffix()) != null) for (int i = 0; i < (el.getSuffix().size()); i++) rers2.add(deltore.get(el.getSuffix().get(i)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4657/buggy-version/ModelCC.src.org.modelcc.language.factory.LanguageSpecificationFactory.java", "BodyUseAPI": ["el.getSuffix().size()", "java.util.List<org.modelcc.language.syntax.RuleElement>.add(deltore.get(el.getSuffix().get(i)))", "org.modelcc.language.factory.ModelElement.getSuffix()", "org.modelcc.language.factory.ModelElement.getSuffix()", "el.getSuffix().get(int)", "java.util.Map<org.modelcc.lexer.recognizer.PatternRecognizer, org.modelcc.language.syntax.RuleElement>.get(el.getSuffix().get(i))"], "Fixed commit": "565c9442d0bffdbf16becb0f16cd8100284de97d", "Url": "https://api.github.com/repos/lquesada/ModelCC", "Date": "2013-11-29T16:28:12Z"},
{"Line": "=>672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (building == 12) { java.lang.System.out.printf(\"rEnd: %d cEnd: %d\\n\", rEnd, cEnd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7296/buggy-version/src.FeatureExtractor.java", "BodyUseAPI": [], "Fixed commit": "6888b08543a420c3d66b617e429302e287447db0", "Url": "https://api.github.com/repos/qingPATHng-jia/visual_relations", "Date": "2015-04-10T04:06:23Z"},
{"Line": "=>724", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (building == 12) { java.lang.System.out.println((((\"NW \" + NWIsSquare) + \" NE \") + NEIsSquare)); java.lang.System.out.println((((\"SW \" + SWIsSquare) + \" SE \") + SEIsSquare)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7296/buggy-version/src.FeatureExtractor.java", "BodyUseAPI": [], "Fixed commit": "6888b08543a420c3d66b617e429302e287447db0", "Url": "https://api.github.com/repos/qingPATHng-jia/visual_relations", "Date": "2015-04-10T04:06:23Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(message.equals(\"\"))) && ((message.length()) < 60)) mNotifTools.sendSimpleNotification(getApplicationContext(), message, \"\u70b9\u51fb\u67e5\u770b\u8be6\u60c5\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7093/buggy-version/app.src.main.java.org.bitnp.netcheckin2.service.LoginService.java", "BodyUseAPI": ["org.bitnp.netcheckin2.util.NotifTools.sendSimpleNotification(getApplicationContext(),java.lang.String,java.lang.String)"], "Fixed commit": "8a002a6c8825247c43064e215a0d233c1478f14e", "Url": "https://api.github.com/repos/zhehuaz/BIT_NetCheckin2", "Date": "2015-03-21T03:36:33Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["loadoutPart.getLoadout().getUpgrades().getArmor().getArmorMass(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (armorTons > (loadoutPart.getLoadout().getFreeMass())) { int freed = 0; while (freed < armorDiff) { for (lisong_mechlab.model.loadout.part.LoadoutPart otherPart : loadoutPart.getLoadout().getPartLoadOuts()) { if (((loadoutPart) != otherPart) && (otherPart.allowAutomaticArmor())) { freed += otherPart.getArmorTotal(); if (otherPart.getInternalPart().getType().isTwoSided()) { otherPart.setArmor(ArmorSide.FRONT, 0, true); otherPart.setArmor(ArmorSide.BACK, 0, true); }else { otherPart.setArmor(ArmorSide.ONLY, 0, true); } } } } if (freed < armorDiff) { throw new java.lang.IllegalArgumentException(\"Not enough tonnage to add more armor!\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4336/buggy-version/src.lisong_mechlab.model.loadout.part.SetArmorOperation.java", "BodyUseAPI": ["loadoutPart.getLoadout().getPartLoadOuts()", "lisong_mechlab.model.loadout.part.LoadoutPart.getLoadout()"], "Fixed commit": "42632475f94c6b8d534e72ff1ef0b89737d41dd3", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2014-04-22T13:44:09Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input.length()) < 1) return new java.util.HashSet<java.lang.String>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/820/buggy-version/src.net.clonecomputers.lab.AtomicWords.java", "BodyUseAPI": [], "Fixed commit": "457dd72534a83805af31c758fcb898e12146401a", "Url": "https://api.github.com/repos/LAB-Programming/Atomic-Words", "Date": "2013-12-09T20:46:37Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.scottkillen.mod.koresample.common.block.SlabBlock.mask(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((index < 0) || (index >= (subBlocks.size()))) index = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5140/buggy-version/src.main.java.com.scottkillen.mod.koresample.common.block.SlabBlock.java", "BodyUseAPI": [], "Fixed commit": "3e9f22c49025f259828b9eb4bd353637373adb7c", "Url": "https://api.github.com/repos/MinecraftModArchive/KoreSample", "Date": "2015-10-25T18:13:20Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPosOnEdge(i, direction.checkBoardEdges)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1264/buggy-version/src.nl.hanze2017e4.gameclient.model.games.reversi.ReversiBoard.java", "BodyUseAPI": [], "Fixed commit": "c43d4764e4076a1b35c0603b558ae0b1141913ed", "Url": "https://api.github.com/repos/HanzehogeschoolSICT/E4-PROJECT-AI", "Date": "2017-04-14T17:52:47Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (indexDefinition instanceof com.orientechnologies.orient.core.sql.OIndexDefinitionMultiValue) return ((com.orientechnologies.orient.core.sql.OIndexDefinitionMultiValue) (indexDefinition)).createSingleValue(com.orientechnologies.orient.core.sql.OSQLHelper.getValue(value)); else return indexDefinition.createValue(com.orientechnologies.orient.core.sql.OSQLHelper.getValue(value));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3749/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.OCommandExecutorSQLSelect.java", "BodyUseAPI": ["com.orientechnologies.orient.core.sql.OIndexDefinition.createValue(com.orientechnologies.orient.core.sql.OSQLHelper.getValue(value))"], "Fixed commit": "19dabf60b5b0cb1142ea0ecccf406238f97f7e80", "Url": "https://api.github.com/repos/micha-nerdlichter/orientdb", "Date": "2015-09-18T10:39:44Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(inet.CalculationNetworkEditor.Storage.StackingEdge.containsResources(phy))) { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8927/buggy-version/CalculationNetworkEditor_git.src.inet.CalculationNetworkEditor.Storage.StackingEdge.java", "BodyUseAPI": [], "Fixed commit": "f6aa00ed61c03703201e4c9357ed00d71c73eb87", "Url": "https://api.github.com/repos/andreGitHub/CalculationNetworkEditor", "Date": "2015-01-11T09:31:01Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isMarked) { in.reset(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6522/buggy-version/src.main.java.com.tagtraum.perf.gcviewer.imp.AbstractDataReaderSun.java", "BodyUseAPI": [], "Fixed commit": "0a61ebaeb56de83e8feba2bc6e97aa6e5b5d3647", "Url": "https://api.github.com/repos/chewiebug/GCViewer", "Date": "2011-12-03T16:27:22Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.TipoDocumento.find(\"select tipo from TipoDocumento tipo where tipo.uri\", doc.tipo).first()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tipoDocAux != null) { vDoc.identificadorMultiple = tipoDocAux.cardinalidad; }else { play.Logger.error(((\"No existe el tipo de documento para el tipo: \" + (doc.tipo)) + \". Se setear\u00e1 por defecto a UNICO.\")); vDoc.identificadorMultiple = \"UNICO\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/9017/buggy-version/fap.app.verificacion.VerificacionUtils.java", "BodyUseAPI": [], "Fixed commit": "1998cb50e240bc6f59f7631e42cdc6cf08d633f9", "Url": "https://api.github.com/repos/FAP-Team/Fap-Module", "Date": "2012-09-21T07:53:41Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.yockie.CrimeListFragment.CrimeAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((crime.getPhoto()) != null) { getActivity().deleteFile(crime.getPhoto().getFilename()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1515/buggy-version/app.src.main.java.com.android.yockie.CrimeListFragment.java", "BodyUseAPI": ["getActivity().deleteFile(crime.getPhoto().getFilename())", "crime.getPhoto().getFilename()", "com.android.yockie.Crime.getPhoto()"], "Fixed commit": "21463f4ba9fec975bc388fefc9e266b6a432e581", "Url": "https://api.github.com/repos/yockiehub/CriminalIntent", "Date": "2016-08-22T11:39:32Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.yockie.CrimeListFragment.1.getListAdapter()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((adapter.getItem(i).getPhoto()) != null) { getActivity().deleteFile(adapter.getItem(i).getPhoto().getFilename()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1515/buggy-version/app.src.main.java.com.android.yockie.CrimeListFragment.java", "BodyUseAPI": ["com.android.yockie.CrimeListFragment.CrimeAdapter.getItem(int)", "adapter.getItem(i).getPhoto()", "adapter.getItem(i).getPhoto().getFilename()", "getActivity().deleteFile(adapter.getItem(i).getPhoto().getFilename())"], "Fixed commit": "21463f4ba9fec975bc388fefc9e266b6a432e581", "Url": "https://api.github.com/repos/yockiehub/CriminalIntent", "Date": "2016-08-22T11:39:32Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.yockie.CrimeFragment.getThisCrime()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((c.getPhoto()) != null) { getActivity().deleteFile(c.getPhoto().getFilename()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1515/buggy-version/app.src.main.java.com.android.yockie.CrimeFragment.java", "BodyUseAPI": ["com.android.yockie.Crime.getPhoto()", "getActivity().deleteFile(c.getPhoto().getFilename())", "c.getPhoto().getFilename()"], "Fixed commit": "21463f4ba9fec975bc388fefc9e266b6a432e581", "Url": "https://api.github.com/repos/yockiehub/CriminalIntent", "Date": "2016-08-22T11:39:32Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3473/buggy-version/basic_algo.BinaryTree.java", "BodyUseAPI": [], "Fixed commit": "90c604d87070e51dd0218f3009f3a1b23ec76508", "Url": "https://api.github.com/repos/xljiang/cc150", "Date": "2015-10-15T00:53:05Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getPlayer().isOnline()) { if ((silentMode) && (((type.getUses(name)) % 4) != 0)) { return false; }else { (level)++; if ((level) == (med)) { net.h31ix.anticheat.Anticheat.getManager().getUserManager().alertMed(this, type); }else if ((level) == (high)) { net.h31ix.anticheat.Anticheat.getManager().getUserManager().alertHigh(this, type); level = (high) - 10; } return true; } }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3541/buggy-version/src.main.java.net.h31ix.anticheat.manage.User.java", "BodyUseAPI": [], "Fixed commit": "6d611b905fb3bc5dc8efc6544d9bad2a10c0055d", "Url": "https://api.github.com/repos/h31ix/AntiCheat", "Date": "2012-10-13T17:16:14Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["LocationServices.FusedLocationApi.getLastLocation(com.google.android.gms.common.api.GoogleApiClient)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (location == null) { LocationServices.FusedLocationApi.requestLocationUpdates(mGoogleApiClient, mLocationRequest, this); }else { handleNewLocation(location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3524/buggy-version/app.src.main.java.basaraba.andrii.nearestparking.SplashActivity.java", "BodyUseAPI": ["basaraba.andrii.nearestparking.SplashActivity.handleNewLocation(android.location.Location)"], "Fixed commit": "9903e19c851b956c85a2fc21cbfd7b22696def82", "Url": "https://api.github.com/repos/AndrewAln/NearestParking", "Date": "2017-06-07T19:20:08Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((++(tail)) >= (data.length)) tail %= data.length;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7234/buggy-version/src.queues.Deque.java", "BodyUseAPI": [], "Fixed commit": "8262dcbc8777f85100a1b40bf0c87a7687fe6219", "Url": "https://api.github.com/repos/kgeneral/princeton-algs4", "Date": "2016-03-22T02:26:52Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tail) < 0) tail += data.length;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7234/buggy-version/src.queues.Deque.java", "BodyUseAPI": [], "Fixed commit": "8262dcbc8777f85100a1b40bf0c87a7687fe6219", "Url": "https://api.github.com/repos/kgeneral/princeton-algs4", "Date": "2016-03-22T02:26:52Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.larpovadatabaze.calendar.component.panel.Form<?>.getModelObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((event.getGames()) != null) { previous = new java.util.ArrayList(event.getGames()); }else { previous = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5489/buggy-version/src.main.java.cz.larpovadatabaze.calendar.component.panel.CreateEventPanel.java", "BodyUseAPI": ["cz.larpovadatabaze.calendar.model.Event.getGames()"], "Fixed commit": "2b17c24ab51cfd4ce9d1e90bf806f96314295b04", "Url": "https://api.github.com/repos/CSLD/CSLD", "Date": "2017-01-17T07:23:32Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((enode.getDaughters().size()) == 0) writer.write(((\"\\\"size\\\": \" + (enode.getNumOfSequencesAtTips())) + \"\\n\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4803/buggy-version/src.bottomUpTree.BuildJSONDataStructure.java", "BodyUseAPI": ["java.io.BufferedWriter.write(((\"\\\"size\\\": \" + (enode.getNumOfSequencesAtTips())) + \"\\n\"))", "eTree.ENode.getNumOfSequencesAtTips()"], "Fixed commit": "f5b643eb3a609a983963089b209da34676ffca43", "Url": "https://api.github.com/repos/afodor/metagenomicsTools", "Date": "2013-12-11T04:15:25Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getNumOfSequencesAtTips()) >= 500) { node.setParent(rootNode); rootNode.getDaughters().add(node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4803/buggy-version/src.bottomUpTree.BuildJSONDataStructure.java", "BodyUseAPI": ["rootNode.getDaughters().add(eTree.ENode)", "eTree.ENode.setParent(eTree.ENode)"], "Fixed commit": "f5b643eb3a609a983963089b209da34676ffca43", "Url": "https://api.github.com/repos/afodor/metagenomicsTools", "Date": "2013-12-11T04:15:25Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapter) != null) { mAdapter.updateTheme(isColorTheme); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8279/buggy-version/app.src.main.java.io.github.leibnik.zhihu.ui.fragment.DayNewsFragment.java", "BodyUseAPI": [], "Fixed commit": "b56e9e043b3c4fb46edc4a35aa786cbcb2f29847", "Url": "https://api.github.com/repos/nyakokishi/ZhihuDaily", "Date": "2016-03-31T17:24:20Z"},
{"Line": "=>686", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestCode == (INSERT_CONTACT_REQUEST)) { if (data != null) { android.net.Uri da = data.getData(); android.util.Log.v(\"DATA...\", (\"DATA;;;....\" + da)); android.net.Uri contactData = data.getData(); android.database.Cursor c = getActivity().managedQuery(contactData, null, null, null, null); if (c.moveToFirst()) { java.lang.String id = c.getString(c.getColumnIndexOrThrow(ContactsContract.Contacts._ID)); java.lang.String hasPhone = c.getString(c.getColumnIndex(ContactsContract.Contacts.HAS_PHONE_NUMBER)); if (hasPhone.equalsIgnoreCase(\"1\")) { android.database.Cursor phones = getActivity().getContentResolver().query(ContactsContract.CommonDataKinds.Phone.CONTENT_URI, null, (((ContactsContract.CommonDataKinds.Phone.CONTACT_ID) + \" = \") + id), null, null); phones.moveToFirst(); java.lang.String cNumber = phones.getString(phones.getColumnIndex(\"data1\")); java.lang.System.out.println((\"number is:\" + cNumber)); } java.lang.String name = c.getString(c.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME)); java.lang.System.out.println((\"number is:\" + name)); } android.util.Log.v(\"DATA...\", (\"Cursor;;;....\" + c)); }else { android.util.Log.v(\"DATA...\", \"Error;;;....\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7174/buggy-version/KutumbLink.app.src.main.java.kutumblink.appants.com.kutumblink.fragments.AddGroupFragment.java", "BodyUseAPI": [], "Fixed commit": "091c69a701c2ada650413327fcb0835a6aca5727", "Url": "https://api.github.com/repos/RajesMca008/KutCon", "Date": "2017-05-04T11:01:00Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isSupported) { desktop = java.awt.Desktop.getDesktop(); }else { desktop = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3710/buggy-version/src.main.java.de.ad.tools.redmine.cli.command.OpenCommand.java", "BodyUseAPI": [], "Fixed commit": "10908221e9141973e4979cc49f0d02669075efb2", "Url": "https://api.github.com/repos/a11n/RedmineJavaCLI", "Date": "2015-03-14T16:21:26Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((desktop) != null) { desktop.browse(uri); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3710/buggy-version/src.main.java.de.ad.tools.redmine.cli.command.OpenCommand.java", "BodyUseAPI": [], "Fixed commit": "10908221e9141973e4979cc49f0d02669075efb2", "Url": "https://api.github.com/repos/a11n/RedmineJavaCLI", "Date": "2015-03-14T16:21:26Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ev.isNull(\"duration\"))) { durationValue = ((long) (ev.getInt(\"duration\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7140/buggy-version/src.main.java.com.denbestegrupp.mewap.model.EventListResource.java", "BodyUseAPI": ["javax.json.JsonObject.getInt(java.lang.String)"], "Fixed commit": "dd296fed9ddf29a1c153dbd9c727f88be2b77cba", "Url": "https://api.github.com/repos/raksooo/meWap", "Date": "2014-10-23T13:03:40Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tech.tablesaw.api.DateColumn.MISSING_VALUE) != aData) { if (min == null) { min = aData; }else { min = (min < aData) ? min : aData; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6495/buggy-version/core.src.main.java.tech.tablesaw.api.DateColumn.java", "BodyUseAPI": [], "Fixed commit": "1aea649f9f5a59d84b2fb188e08a8e320361bde3", "Url": "https://api.github.com/repos/jtablesaw/tablesaw", "Date": "2017-12-08T04:24:25Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tech.tablesaw.api.DateColumn.MISSING_VALUE) != aData) { if (max == null) { max = aData; }else { max = (max > aData) ? max : aData; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6495/buggy-version/core.src.main.java.tech.tablesaw.api.DateColumn.java", "BodyUseAPI": [], "Fixed commit": "1aea649f9f5a59d84b2fb188e08a8e320361bde3", "Url": "https://api.github.com/repos/jtablesaw/tablesaw", "Date": "2017-12-08T04:24:25Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((meta.isIgnoreEmptyFile()) && ((file.getContent().getSize()) == 0)) { logBasic(org.pentaho.di.i18n.BaseMessages.getString(org.pentaho.di.trans.steps.getxmldata.GetXMLData.PKG, \"GetXMLData.Error.FileSizeZero\", (\"\" + (file.getName())))); return ReadNextString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3229/buggy-version/plugins.kettle-xml-plugin.src.org.pentaho.di.trans.steps.getxmldata.GetXMLData.java", "BodyUseAPI": ["org.pentaho.di.trans.steps.getxmldata.GetXMLData.logBasic(org.pentaho.di.i18n.BaseMessages.getString(org.pentaho.di.trans.steps.getxmldata.GetXMLData.PKG, \"GetXMLData.Error.FileSizeZero\", (\"\" + (file.getName()))))", "org.pentaho.di.i18n.BaseMessages.getString(java.lang.Class<?>,java.lang.String,(\"\" + (file.getName())))", "org.apache.commons.vfs2.FileObject.getName()"], "Fixed commit": "1a3c417ec6dfa32cf55a2dcba7e0a716db6ba957", "Url": "https://api.github.com/repos/stepanovdg/pentaho-kettle", "Date": "2016-03-07T19:01:52Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["listData.get(position).getHomepage()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(url)) { url = listData.get(position).getUrl(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/890/buggy-version/app.src.main.java.com.jayfeng.androiddigest.activity.ToolListActivity.java", "BodyUseAPI": [], "Fixed commit": "613996208d4192f9b39fdc49a4b41632f1473ed2", "Url": "https://api.github.com/repos/cloud1105/AndroidDigest", "Date": "2015-04-19T11:37:53Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.google.cloud.tools.intellij.appengine.cloud.AppEngineDeployable) (source)).getEnvironment().equals(AppEngineEnvironment.APP_ENGINE_FLEX)) { return new com.google.cloud.tools.intellij.appengine.cloud.flexible.AppEngineFlexibleDeploymentEditor(project); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6872/buggy-version/google-cloud-tools-plugin.src.com.google.cloud.tools.intellij.appengine.cloud.AppEngineDeploymentConfigurator.java", "BodyUseAPI": [], "Fixed commit": "c4c44b5d23ebd1557272ef3f86bc4f6f26f0bc25", "Url": "https://api.github.com/repos/GoogleCloudPlatform/google-cloud-intellij", "Date": "2016-12-23T15:59:47Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isMyTurn)) { pieceSelected = null; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3835/buggy-version/src.Checkers.controller.CheckersController.java", "BodyUseAPI": [], "Fixed commit": "871737dc888e43b30a138760bc7249e825663953", "Url": "https://api.github.com/repos/blinebau/inf122-game-server", "Date": "2016-03-17T22:35:05Z"},
{"Line": "=>577", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!escape) && ((c == '\"') || (c == '\\''))) { insideQuote = !insideQuote; buffer.append(c); }else { if (((!escape) && (c == '\\\\')) && ((currentPos + 1) <= maxPos)) { final char nextChar = iText.charAt((currentPos + 1)); if (nextChar == 'u') { currentPos = com.orientechnologies.common.parser.OStringParser.readUnicode(iText, (currentPos + 2), buffer); }else if (nextChar == 'n') { buffer.append(\"\\n\"); currentPos++; }else if (nextChar == 'r') { buffer.append(\"\\r\"); currentPos++; }else if (nextChar == 't') { buffer.append(\"\\t\"); currentPos++; }else if (nextChar == 'f') { buffer.append(\"\\f\"); currentPos++; }else escape = true; continue; } escape = false; buffer.append(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7303/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.serializer.OStringSerializerHelper.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(char)"], "Fixed commit": "5120ff3ab8be8d96881953c588ed2b47a1dbc2a1", "Url": "https://api.github.com/repos/fabriziofortino/orientdb", "Date": "2015-01-09T07:06:26Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (actFmPreferenceService.isLoggedIn()) { welcomeScreen.putExtra(WelcomeGraphic.START_SYNC, true); noSync = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2336/buggy-version/astrid.src.com.todoroo.astrid.welcome.WelcomeLogin.java", "BodyUseAPI": [], "Fixed commit": "d45d844b77a55c018475b272925e5ee3ec535548", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2011-10-01T02:27:52Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.embulk.config.ConfigSource.loadConfig(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (task.getHeaderLine().get()) { task.setSkipHeaderLines(1); }else { task.setSkipHeaderLines(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5938/buggy-version/embulk-standards.src.main.java.org.embulk.standards.CsvParserPlugin.java", "BodyUseAPI": ["org.embulk.standards.CsvParserPlugin.PluginTask.setSkipHeaderLines(int)", "org.embulk.standards.CsvParserPlugin.PluginTask.setSkipHeaderLines(int)"], "Fixed commit": "496c9266d259131d74fe7b884220595ccf4b57d9", "Url": "https://api.github.com/repos/embulk/embulk", "Date": "2015-03-07T08:15:46Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.aimas.consert.ide.views.TreeObject.getResource()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (model == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5709/buggy-version/CONSERT-IDE.src.org.aimas.consert.ide.views.TreeViewerNew.java", "BodyUseAPI": [], "Fixed commit": "56b3455a710e215a2472f2aa1deab4ee86d6804e", "Url": "https://api.github.com/repos/ami-lab/CONSERT-IDE", "Date": "2017-09-23T11:35:20Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.md_5.bungee.api.ProxyServer.getInstance().getPlayers()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((connections.size()) > 0) { for (final net.md_5.bungee.api.connection.ProxiedPlayer con : connections) { users.append(con.getName()); users.append(\", \"); } users.setLength(((users.length()) - 2)); sender.sendMessage(((((((net.md_5.bungee.api.ChatColor.BLUE) + \"Currently online across all servers (\") + (connections.size())) + \"): \") + (net.md_5.bungee.api.ChatColor.RESET)) + users)); }else { sender.sendMessage(((net.md_5.bungee.api.ChatColor.RED) + \"Nobody home.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6246/buggy-version/src.main.java.to.joe.bungee.commands.CommandList.java", "BodyUseAPI": ["java.util.Collection<net.md_5.bungee.api.connection.ProxiedPlayer>.size()", "net.md_5.bungee.api.CommandSender.sendMessage(((((((net.md_5.bungee.api.ChatColor.BLUE) + \"Currently online across all servers (\") + (connections.size())) + \"): \") + (net.md_5.bungee.api.ChatColor.RESET)) + users))"], "Fixed commit": "6fa9974df015bdc3fe3a8595b512cd463a6ff6f6", "Url": "https://api.github.com/repos/joeto/BunJ2", "Date": "2013-03-20T00:46:43Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pendingAuthorisationService.findByPaymentReference(paymentReference)) == null) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4776/buggy-version/src.main.java.com.kryptoeuro.accountmapper.rest.AccountMapperController.java", "BodyUseAPI": [], "Fixed commit": "101caceef6d2f416c3bea23a179395b028ec1acb", "Url": "https://api.github.com/repos/cryptofiat/account-identity", "Date": "2016-10-02T10:07:43Z"},
{"Line": "=>997", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<Player>.get(rule.getTurn())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((playerTurn.getPosition()) == 10) { playerTurn.setJailCounter(3); TurnDisplay.setText((((((\"It is now \" + (playerName[rule.getTurn()])) + \"'s Turn. \") + (playerName[rule.getTurn()])) + \" is on \") + (Name[playerTurn.getPosition()]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1104/buggy-version/Cards.Board.java", "BodyUseAPI": ["Player.getPosition()", "javax.swing.JTextArea.setText(java.lang.String)", "Player.setJailCounter(int)"], "Fixed commit": "471bc4f06b4a5c72dc6285a14700e0a2529f5370", "Url": "https://api.github.com/repos/jlin22/Monopoly", "Date": "2017-01-16T22:41:58Z"},
{"Line": "=>812", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.github.sarxos.webcam.Webcam.driver) != null) { return com.github.sarxos.webcam.Webcam.driver; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4032/buggy-version/webcam-capture.src.main.java.com.github.sarxos.webcam.Webcam.java", "BodyUseAPI": [], "Fixed commit": "ac4d46e0d6adfad919915fbb45c4a5e0b6a92b95", "Url": "https://api.github.com/repos/sarxos/webcam-capture", "Date": "2013-05-10T20:16:02Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((track.filePath) == null) || ((track.filePath.length()) == 0)) { track = com.awaker.data.DbManager.getTrack(track.title, track.artist); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/70/buggy-version/src.com.awaker.audio.PlayerMaster.java", "BodyUseAPI": ["com.awaker.data.DbManager.getTrack(track.title,track.artist)"], "Fixed commit": "385d94cc8ee2d3548364bac5ee867634be252613", "Url": "https://api.github.com/repos/caleron/awaker", "Date": "2016-04-11T10:57:32Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tracks.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/70/buggy-version/src.com.awaker.data.DbManager.java", "BodyUseAPI": [], "Fixed commit": "385d94cc8ee2d3548364bac5ee867634be252613", "Url": "https://api.github.com/repos/caleron/awaker", "Date": "2016-04-11T10:57:32Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["idsEntry.getParameters().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((paramPos >= 0) && (paramPos < (paramDefs.length))) { definition = paramDefs[paramPos]; }else { definition = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4349/buggy-version/src.infinity.gui.ScriptTextArea.java", "BodyUseAPI": [], "Fixed commit": "1c16c3c0c18280d2f1433f343739e59c29b34a06", "Url": "https://api.github.com/repos/Argent77/NearInfinity", "Date": "2015-04-18T18:03:25Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getView()) != null) { getView().setBackgroundColor(Color.WHITE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1780/buggy-version/src.br.brunodea.goclock.ClockFragment.java", "BodyUseAPI": [], "Fixed commit": "b1dda237ee5111712fdd56ebd6b9733ced2bb672", "Url": "https://api.github.com/repos/brunodea/goclock", "Date": "2013-08-07T05:23:44Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getView()) != null) { getView().setBackgroundColor(Color.BLACK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1780/buggy-version/src.br.brunodea.goclock.ClockFragment.java", "BodyUseAPI": [], "Fixed commit": "b1dda237ee5111712fdd56ebd6b9733ced2bb672", "Url": "https://api.github.com/repos/brunodea/goclock", "Date": "2013-08-07T05:23:44Z"},
{"Line": "=>529", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((side == 2) || (side == 3)) { return mekanism.common.util.MekanismUtils.getRight(side).ordinal(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7032/buggy-version/common.mekanism.common.util.MekanismUtils.java", "BodyUseAPI": ["mekanism.common.util.MekanismUtils.getRight(int)", "net.minecraftforge.common.ForgeDirection.ordinal()"], "Fixed commit": "96d2a1294890d241d5af687a0380b663d7d7853c", "Url": "https://api.github.com/repos/aidancbrady/Mekanism", "Date": "2013-11-30T18:06:44Z"},
{"Line": "=>518", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (blockFacing == 2) { if ((side == 2) || (side == 3)) { return side; } return net.minecraftforge.common.ForgeDirection.getOrientation(side).getOpposite().ordinal(); }else if (blockFacing == 4) { if ((side == 2) || (side == 3)) { return mekanism.common.util.MekanismUtils.getRight(side).ordinal(); } return mekanism.common.util.MekanismUtils.getLeft(side).ordinal(); }else if (blockFacing == 5) { if ((side == 2) || (side == 3)) { return mekanism.common.util.MekanismUtils.getLeft(side).ordinal(); } return mekanism.common.util.MekanismUtils.getRight(side).ordinal(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7032/buggy-version/common.mekanism.common.util.MekanismUtils.java", "BodyUseAPI": [], "Fixed commit": "96d2a1294890d241d5af687a0380b663d7d7853c", "Url": "https://api.github.com/repos/aidancbrady/Mekanism", "Date": "2013-11-30T18:06:44Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (moviesViewHolder.favouriteButton.isPressed()) { if (isChecked) { com.melegy.movies.moviesapp.Utility.Utility.addToFavourites(movie, null, null); }else { if (com.melegy.movies.moviesapp.Utility.Utility.isFavoured(movie.getId())) { com.melegy.movies.moviesapp.Utility.Utility.removeFromFavourites(movie.getId()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8873/buggy-version/app.src.main.java.com.melegy.movies.moviesapp.Adapters.MoviesAdapter.java", "BodyUseAPI": [], "Fixed commit": "9cbd580456fcbd57ee4d251bf4f39ddb444d2358", "Url": "https://api.github.com/repos/mlegy/Popular-Movies-App", "Date": "2015-09-20T21:25:16Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((countStickItem) >= 3) && (item != '.')) { item = tranformItem(item); if (item != '.') { update(r, c, item); } }else { MAP[r] = ((MAP[r].substring(0, c)) + item) + (MAP[r].substring((c + 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6798/buggy-version/core.src.com.mygdx.game.Board.java", "BodyUseAPI": ["com.mygdx.game.Board.tranformItem(char)"], "Fixed commit": "d9045dcaba12ae06979438819baf2c419c134c03", "Url": "https://api.github.com/repos/komcal/oop-triple-frog", "Date": "2016-11-01T08:39:59Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tiledMap.getProperties().containsKey(\"background\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/221/buggy-version/core.src.com.tendersaucer.collector.world.room.TiledMapRoomLoadable.java", "BodyUseAPI": [], "Fixed commit": "ff2d0b7e65afd8d4bc57c1af2913a2d618ae8656", "Url": "https://api.github.com/repos/alexschimpf/Collector_V2", "Date": "2016-05-14T06:48:10Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Model.Skill.getSCTArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((SCTArray.get(j)) != null) { java.lang.System.out.println(SCTArray.get(j).getPlayerName()); }else { java.lang.System.out.println(\"SUX\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5588/buggy-version/src.Model.PlayerModel.java", "BodyUseAPI": ["SCTArray.get(j).getPlayerName()", "java.util.ArrayList<Model.Timers.SkillCheckingTimer>.get(int)", "java.io.PrintStream.println(SCTArray.get(j).getPlayerName())"], "Fixed commit": "cc9f5db1abbbd777a8aae0729816cfff7ca1dc04", "Url": "https://api.github.com/repos/Maestro1337/ssha", "Date": "2013-05-26T21:19:22Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.replacement.size()) == 0) { this.replacement.add(at.jku.weiner.c.preprocess.utils.macros.TokenUtils.getIDTokenForText(\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3257/buggy-version/workspace.at.jku.weiner.c.preprocess.src.at.jku.weiner.c.preprocess.utils.macros.DefinitionObjectMacro.java", "BodyUseAPI": [], "Fixed commit": "c5b5c849d3ad4d3bf816114fd3c8c96d1156da3b", "Url": "https://api.github.com/repos/timeraider4u/kefax", "Date": "2016-02-14T21:00:00Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((face.getDate()) != null) { titleText.setText(java.lang.String.format(getString(R.string.main_fragment_title), sdf.format(face.getDate()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6835/buggy-version/devhack2016.src.main.java.osmo.devweekhack2016.com.fragments.MainFragment.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(face.getDate())", "osmo.devweekhack2016.com.model.Face.getDate()", "java.lang.String.format(getString(R.string.main_fragment_title),java.lang.String)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "daa39e765bc13eaf2b27ce803240f5220aac0428", "Url": "https://api.github.com/repos/huhx0015/Emotolize", "Date": "2016-02-14T22:08:44Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (list.toString().endsWith(\",\")) { list.setCharAt(((list.length()) - 1), ')'); }else { list.append(\"null\").append(\")\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4613/buggy-version/lib-core.src.main.java.com.stratelia.webactiv.beans.admin.dao.UserSearchCriteriaForDAO.java", "BodyUseAPI": ["java.lang.StringBuilder.setCharAt(int,char)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.length()"], "Fixed commit": "6053f53253e1cf23a347a0ca3467ab55913cbbb5", "Url": "https://api.github.com/repos/auroreallibe/Silverpeas-Core", "Date": "2012-03-20T14:13:58Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((responseMessage.rawData) != null) { responseMessage.messageType = jazmin.server.msg.codec.DefaultCodecFactory.FORMAT_RAW; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4350/buggy-version/JazminServer.src.jazmin.server.msg.Session.java", "BodyUseAPI": [], "Fixed commit": "691d6e358b9d6140acf24a0fa72a695aa97d958f", "Url": "https://api.github.com/repos/ginkosen/JazminServer", "Date": "2017-09-08T03:18:52Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((idxList) != null) { idxList.remove(java.lang.Integer.valueOf(currentPuzzle)); scoreView.setText(((\"Progress: \" + (3 - (idxList.size()))) + \"/3\")); if (idxList.isEmpty()) { resetBtn.setActivated(true); resetBtn.setVisibility(View.VISIBLE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4188/buggy-version/app.src.main.java.javamn.ispy11.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a593080851b3d7ade3113e11707dcf94342151f2", "Url": "https://api.github.com/repos/javamn/ispy", "Date": "2017-05-17T02:06:56Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openl.rules.common.ArtefactPath.getStringValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (path.startsWith(\"/\")) { path = path.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7964/buggy-version/STUDIO.org.openl.rules.workspace.src.org.openl.rules.project.abstraction.AProject.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "7f647a1b843a056a14d181f9a3b545e68f32cacf", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2016-12-15T16:57:46Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getArtefactsInternal().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (artefact == null) { throw new org.openl.rules.common.ProjectException(\"Cannot find project artefact ''{0}''\", null, path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7964/buggy-version/STUDIO.org.openl.rules.workspace.src.org.openl.rules.project.abstraction.AProject.java", "BodyUseAPI": [], "Fixed commit": "7f647a1b843a056a14d181f9a3b545e68f32cacf", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2016-12-15T16:57:46Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.dmulloy2.swornrpg.util.Util.random(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rand == 0) { if ((player.getHealth()) < 20.0) { player.setHealth(((player.getHealth()) + 1.0)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4309/buggy-version/src.main.java.net.dmulloy2.swornrpg.listeners.EntityListener.java", "BodyUseAPI": [], "Fixed commit": "eebc557730ca5a442cf47101f942e6c90183e7e5", "Url": "https://api.github.com/repos/dmulloy2/SwornRPG", "Date": "2013-07-02T22:36:56Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraft.server.MinecraftServer.getServer().getConfigurationManager().playerEntityList) != null) { for (net.minecraft.entity.player.EntityPlayerMP p : ((java.util.List<net.minecraft.entity.player.EntityPlayerMP>) (net.minecraft.server.MinecraftServer.getServer().getConfigurationManager().playerEntityList))) { if (s.matches(\"[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}\")) { if ((p.getUniqueID().compareTo(java.util.UUID.fromString(s))) == 0) { return p; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5412/buggy-version/aj.Java.Nullvoid.Utils.java", "BodyUseAPI": [], "Fixed commit": "ac790acc81ad90b3117dce3b1512a87dcfb73aaa", "Url": "https://api.github.com/repos/Nimbleguy/The-Void", "Date": "2014-07-23T16:47:12Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"\".equals(name)) name = eu.trentorise.smartcampus.widget.shortcuts.WidgetHelper.ctx.getString(eu.trentorise.smartcampus.jp.helper.RoutesHelper.getRouteDescriptorByRouteId(route).getNameResource());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1682/buggy-version/src.eu.trentorise.smartcampus.widget.shortcuts.WidgetHelper.java", "BodyUseAPI": [], "Fixed commit": "473fab6a7ad7953fbb59504371a4c86f0cd2f133", "Url": "https://api.github.com/repos/smartcampuslab/android.widget", "Date": "2013-11-11T11:13:19Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index == 1) { ListNode oldRoot = root; root = oldRoot.getNext(); return oldRoot.getData(); }else { ListNode beforeRemove = root; for (int i = 0; i < (index - 2); i++) { beforeRemove = beforeRemove.getNext(); } ListNode toRemove = beforeRemove.getNext(); beforeRemove.setNextNode(toRemove.getNext()); (length)--; return toRemove.getData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8041/buggy-version/HomeWork5.src.ListLinked.java", "BodyUseAPI": [], "Fixed commit": "50511ae72202dc35dc027260a61fe13741bce512", "Url": "https://api.github.com/repos/mandress64/fall_2015_assignments", "Date": "2015-12-08T19:15:38Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((world.getTileEntity(x, y, z)) == null) || (!((world.getTileEntity(x, y, z)) instanceof net.minecraft.tileentity.TileEntityMobSpawner))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2890/buggy-version/java.ec3.common.item.ItemSpawnerCollector.java", "BodyUseAPI": [], "Fixed commit": "9366d889bfe7a8c017f9560bc4e20e3f813b2eb6", "Url": "https://api.github.com/repos/Modbder/EssentialCraft3", "Date": "2015-08-01T21:45:53Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bank.jms.request.GetAccountRequest.getOwner()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (owner == null) { return null; }else { return new bank.jms.ClientBank.ClientAccount(number, r.getOwner(), sender, receiver, queue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1443/buggy-version/src.bank.jms.ClientBank.java", "BodyUseAPI": [], "Fixed commit": "318141fce2471ba70942de4aa065acd77a4fc9a7", "Url": "https://api.github.com/repos/florintiefenauer/vesys", "Date": "2014-06-23T16:38:47Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends org.eclipse.january.metadata.MetadataType>.getSuperclass()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (c != null) { return org.eclipse.january.dataset.LazyDatasetBase.findMetadataTypeSubInterfaces(((java.lang.Class<? extends org.eclipse.january.metadata.MetadataType>) (c))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7943/buggy-version/org.eclipse.january.src.org.eclipse.january.dataset.LazyDatasetBase.java", "BodyUseAPI": [], "Fixed commit": "fc268b6da06bcc038f9b3816662a10deac94d39e", "Url": "https://api.github.com/repos/eclipse/dawnsci", "Date": "2016-09-21T16:37:27Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof java.lang.Number) { string.append(value); }else if (value instanceof java.lang.Boolean) { string.append(value); }else { string.append(org.restsql.core.impl.JsonUtil.quote(value.toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8840/buggy-version/src.org.restsql.core.impl.JsonResponseSerializer.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.Object)", "org.restsql.core.impl.JsonUtil.quote(java.lang.String)", "java.lang.StringBuilder.append(org.restsql.core.impl.JsonUtil.quote(value.toString()))", "java.lang.Object.toString()", "java.lang.StringBuilder.append(java.lang.Object)"], "Fixed commit": "1f9a9fe90c09d2833d2b1b62ad7a8a1a68f3310a", "Url": "https://api.github.com/repos/mooreds/restsql", "Date": "2012-10-01T22:21:42Z"},
{"Line": "=>572", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((rhoSamplingTimes.get()) != null) && ((rhoSamplingChangeTimes.size()) > (rhoSamplingTimes.get().getDimension()))) rhoSamplingChangeTimes.remove(((rhoSamplingChangeTimes.size()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6350/buggy-version/src.beast.evolution.speciation.BirthDeathSkylineModel.java", "BodyUseAPI": ["java.util.List<java.lang.Double>.remove(int)", "java.util.List<java.lang.Double>.size()"], "Fixed commit": "12411fcd4a5059951f26d20ece5cef75659d8c74", "Url": "https://api.github.com/repos/BEAST2-Dev/bdsky", "Date": "2017-04-12T15:38:50Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!escapedEnclosureFlag) || ((data.enclosure[0]) == (data.escapeCharacter[0]))) { escapedEnclosureFound++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3745/buggy-version/processing.src.main.java.org.carbondata.processing.csvreaderstep.BlockDataHandler.java", "BodyUseAPI": [], "Fixed commit": "58132fad719ca52b610681e8068fd4359c4de2b4", "Url": "https://api.github.com/repos/eason-lyx/carbondata-1", "Date": "2016-06-27T15:02:19Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((this.endBuffer) - 1) >= 0) && (data.escapeCharMatcher.matchesPattern(this.byteBuffer, ((this.endBuffer) - 1), data.escapeCharacter))) { escapedEnclosureFlag = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3745/buggy-version/processing.src.main.java.org.carbondata.processing.csvreaderstep.BlockDataHandler.java", "BodyUseAPI": [], "Fixed commit": "58132fad719ca52b610681e8068fd4359c4de2b4", "Url": "https://api.github.com/repos/eason-lyx/carbondata-1", "Date": "2016-06-27T15:02:19Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mockit.internal.expectations.mocking.TypeRedefinition.getClassType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mockit.internal.expectations.mocking.MockingFilters.isSubclassOfUnmockable(classToMock)) { java.lang.String mockSource = ((typeMetadata.field) == null) ? \"mock parameter\" : \"mock field\"; throw new java.lang.IllegalArgumentException((((((classToMock + \" is not mockable (\") + mockSource) + \" \\\"\") + (typeMetadata.getName())) + \"\\\")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/484/buggy-version/main.src.mockit.internal.expectations.mocking.TypeRedefinition.java", "BodyUseAPI": [], "Fixed commit": "ea818282f7bee0844a9e2c91cec6c2e4a5c5b9ea", "Url": "https://api.github.com/repos/neich/jmockit1", "Date": "2017-09-15T01:41:51Z"},
{"Line": "=>1080", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((composerExtension) != null) { ((de.ovgu.featureide.core.builder.ComposerExtensionClass) (composerExtension)).initialize(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6221/buggy-version/plugins.de.ovgu.featureide.core.src.de.ovgu.featureide.core.internal.FeatureProject.java", "BodyUseAPI": [], "Fixed commit": "86743aeaa77b81efacd0b10cd070f686a9b3d88d", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2015-02-26T09:08:14Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (leftCount == 0) result += \", Take the first left\"; else if (leftCount == 1) result += (\". After \" + rightCount) + \" left, take a left and go straight\"; else { if (leftCount != 0) result += (\". After \" + leftCount) + \" lefts, take a left and go straight\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8223/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "211838b5f7f0e23188276c2dca90b5e209f57377", "Url": "https://api.github.com/repos/snrao310/IndoorNavigation", "Date": "2016-11-22T04:46:08Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rightCount == 0) result += \", Take the first right\"; else if (rightCount == 1) result += (\". After \" + rightCount) + \" right, take a right and go straight\"; else { if (rightCount != 0) result += (\". After \" + rightCount) + \" rights, take a right and go straight\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8223/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "211838b5f7f0e23188276c2dca90b5e209f57377", "Url": "https://api.github.com/repos/snrao310/IndoorNavigation", "Date": "2016-11-22T04:46:08Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((editable.length()) == 2) && ((editable + \"\").substring(1).equals(\" \"))) { sendMessageToServer(\"keyboard_space\"); }else { sendMessageToServer((\"keyboard \" + ((editable + \"\").substring(1)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/704/buggy-version/app.src.main.java.de.pro_open.remotecontrol.MainActivity.java", "BodyUseAPI": ["(editable + \"\").substring(int)", "de.pro_open.remotecontrol.MainActivity.5.sendMessageToServer((\"keyboard \" + ((editable + \"\").substring(1))))"], "Fixed commit": "1e17af6a5152287c5dedd9baedde144ff8c206a7", "Url": "https://api.github.com/repos/ZyronLP/RemoteControlAndroid", "Date": "2016-11-18T16:34:53Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.block.Block.getRelative(org.bukkit.block.BlockFace,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((moved.getType()) == (org.bukkit.Material.WOODEN_DOOR)) || ((moved.getType()) == (org.bukkit.Material.IRON_DOOR_BLOCK))) { org.bukkit.block.Block below = moved.getRelative(BlockFace.DOWN).getRelative(direction.getOppositeFace()); if ((lwc.findProtection(below)) != null) { event.setCancelled(true); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2018/buggy-version/src.main.java.com.griefcraft.listeners.LWCBlockListener.java", "BodyUseAPI": ["moved.getRelative(BlockFace.DOWN).getRelative(direction.getOppositeFace())", "org.bukkit.block.Block.getRelative(BlockFace.DOWN)"], "Fixed commit": "1e97f58638f320294a8f9328fc4c8b9b5f0e6fb1", "Url": "https://api.github.com/repos/Hidendra/LWC", "Date": "2011-12-23T16:25:43Z"},
{"Line": "=>1868", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (protection == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2018/buggy-version/src.main.java.com.griefcraft.sql.PhysDB.java", "BodyUseAPI": [], "Fixed commit": "1e97f58638f320294a8f9328fc4c8b9b5f0e6fb1", "Url": "https://api.github.com/repos/Hidendra/LWC", "Date": "2011-12-23T16:25:43Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.forsuredb.annotationprocessor.FSAnnotationProcessor.orderByClassesCreated)) { createOrderByClasses(pc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1065/buggy-version/src.main.java.com.forsuredb.annotationprocessor.FSAnnotationProcessor.java", "BodyUseAPI": [], "Fixed commit": "0aa9f076bc7fa038b76893e5a93251001db151bb", "Url": "https://api.github.com/repos/ryansgot/forsuredbcompiler", "Date": "2016-04-03T06:04:58Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (tools != null) { for (int j = 0; j < (tools.tools.length); j++) { if (((tools.tools[j]) != null) && (tools.tools[j].isItemEnchanted())) { addApToItem(tools.tools[j]); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2119/buggy-version/net.minecraft.src.EnchantChanger.EcEntityApOrb.java", "BodyUseAPI": ["tools.tools[j].isItemEnchanted()", "net.minecraft.src.EnchantChanger.EcEntityApOrb.addApToItem(tools.tools[j])"], "Fixed commit": "bac1701d645ce9583881d1c7a7dcad635d679037", "Url": "https://api.github.com/repos/aksource/EnchantChanger125", "Date": "2013-10-28T04:29:00Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bean.getAssociationId()) != null) { chemAssociation.setId(bean.getAssociationId()); chemAssociation.setCreatedBy(bean.getCreatedBy()); chemAssociation.setCreatedDate(bean.getCreatedDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1958/buggy-version/software.cananolab-webapp.src.gov.nih.nci.cananolab.restful.sample.ChemicalAssociationBO.java", "BodyUseAPI": ["gov.nih.nci.cananolab.domain.particle.ChemicalAssociation.setId(bean.getAssociationId())", "gov.nih.nci.cananolab.domain.particle.ChemicalAssociation.setCreatedDate(bean.getCreatedDate())", "gov.nih.nci.cananolab.restful.view.edit.SimpleChemicalAssociationBean.getCreatedDate()", "gov.nih.nci.cananolab.restful.view.edit.SimpleChemicalAssociationBean.getCreatedBy()", "gov.nih.nci.cananolab.restful.view.edit.SimpleChemicalAssociationBean.getAssociationId()", "gov.nih.nci.cananolab.domain.particle.ChemicalAssociation.setCreatedBy(bean.getCreatedBy())"], "Fixed commit": "9d273721d2c773fe5a049487fcc05d7724f069a0", "Url": "https://api.github.com/repos/CBIIT/cananolab", "Date": "2014-09-12T16:52:19Z"},
{"Line": "=>581", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN_MR1)) { org.wordpress.android.WordPress.mDefaultUserAgent = android.webkit.WebSettings.getDefaultUserAgent(org.wordpress.android.WordPress.getContext()); }else { org.wordpress.android.WordPress.mDefaultUserAgent = new android.webkit.WebView(org.wordpress.android.WordPress.getContext()).getSettings().getUserAgentString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8793/buggy-version/WordPress.src.main.java.org.wordpress.android.WordPress.java", "BodyUseAPI": [], "Fixed commit": "fbea6283ad4a3aa81ea9cadb13b8ba234c209db3", "Url": "https://api.github.com/repos/khaykov/WordPress-Android", "Date": "2016-01-12T22:35:17Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.redhat.ceylon.compiler.java.codegen.Decl.isValueTypeDecl(qmte.getPrimary().getTypeModel())) { primaryType = qmte.getPrimary().getTypeModel(); }else { primaryType = qmte.getTarget().getQualifyingType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1299/buggy-version/src.com.redhat.ceylon.compiler.java.codegen.CallableBuilder.java", "BodyUseAPI": ["Tree.QualifiedMemberOrTypeExpression.getTarget()", "qmte.getPrimary().getTypeModel()", "qmte.getTarget().getQualifyingType()", "Tree.QualifiedMemberOrTypeExpression.getPrimary()"], "Fixed commit": "bc2e44e50a58876b90d7e2b5ceb24706e4f8a83b", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2015-09-02T11:14:31Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((button_selector.getMapType()) == (controllers.GameController.LOAD_MAP)) { if ((savedMapsDropdown.getSelectedItem()) == null) { button_selector.setStartGame(false); return; } }else { card_layout.show(controllers.Application.getCardContainer(), controllers.GameController.CARD_MAIN_GAME); audio.MusicPlayer.playInBetweenWavesBGM(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/233/buggy-version/src.controllers.GameController.java", "BodyUseAPI": ["controllers.ButtonSelector.setStartGame(boolean)"], "Fixed commit": "cdd3afb5609f1281d3baee842b30eedeb9b5a85c", "Url": "https://api.github.com/repos/justinasfour04/Tower-Defense", "Date": "2015-04-06T22:51:21Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.swagger.codegen.CodegenConfig.fromSecurity(swagger.getSecurityDefinitions())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(authMethods.isEmpty())) { bundle.put(\"authMethods\", authMethods); bundle.put(\"hasAuthMethods\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/925/buggy-version/modules.swagger-codegen.src.main.java.io.swagger.codegen.DefaultGenerator.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.util.List<io.swagger.codegen.CodegenSecurity>)"], "Fixed commit": "5228fee55822a1405111ceb279496942d45c20f8", "Url": "https://api.github.com/repos/abcsun/swagger-codegen", "Date": "2015-07-09T02:48:16Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list.size()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5683/buggy-version/src.main.java.owl.core.structure.ChainInterfaceList.java", "BodyUseAPI": [], "Fixed commit": "f84a71c879f8af34a94c17ce18a2a277c8fdae0c", "Url": "https://api.github.com/repos/eppic-team/owl", "Date": "2014-06-30T14:56:26Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(returnPath.substring(((returnPath.length()) - 1)).equals(\"/\"))) returnPath += \"/\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2674/buggy-version/src.edu.stanford.nlp.coref.CorefProperties.java", "BodyUseAPI": [], "Fixed commit": "f2a04fad2da418ca0986157bac3a1e73be890d37", "Url": "https://api.github.com/repos/stanfordnlp/CoreNLP", "Date": "2016-11-30T04:18:20Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enabled) { virtualFrequency = source.getFrequency(); virtualSampleRate = source.getSampleRate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1907/buggy-version/app.src.main.java.com.mantz_it.rfanalyzer.AnalyzerSurface.java", "BodyUseAPI": [], "Fixed commit": "be83354cde151ddff70c29b8d5fd1a88a9f669c8", "Url": "https://api.github.com/repos/bratwurzt/RFAnalyzer", "Date": "2015-01-03T23:25:42Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xtreemfs.common.KeyValuePairs.getValue(osd.getData().getDataList(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (smartTestResult == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/862/buggy-version/java.servers.src.org.xtreemfs.mrc.osdselection.FilterDefaultPolicy.java", "BodyUseAPI": [], "Fixed commit": "0c8d1f21201566bbd2890ec94a5ee2d8e4dcb531", "Url": "https://api.github.com/repos/kleingeist/xtreemfs", "Date": "2014-08-11T11:43:20Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bdconsistency.state.tpch.TpchState.getTable(java.lang.String)", "bdconsistency.state.tpch.TpchState.getTable(java.lang.String)", "bdconsistency.state.tpch.TpchState.getTable(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (((orders != null) && (customer != null)) && (lineItem != null)) { filterCustomers(customer); filterOrders(orders); filterLineItems(lineItem); computeIntermediateJoinResults(results, orders, customer, lineItem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4643/buggy-version/src.jvm.storm.bdconsistency.bolt.trident.query.TpchQuery.java", "BodyUseAPI": ["bdconsistency.bolt.trident.query.TpchQuery.Query3.computeIntermediateJoinResults(java.util.List<bdconsistency.bolt.trident.query.TpchQuery.Query3IntermediateResult>,bdconsistency.state.tpch.ITpchTable,bdconsistency.state.tpch.ITpchTable,bdconsistency.state.tpch.ITpchTable)", "bdconsistency.bolt.trident.query.TpchQuery.Query3.filterLineItems(bdconsistency.state.tpch.ITpchTable)", "bdconsistency.bolt.trident.query.TpchQuery.Query3.filterOrders(bdconsistency.state.tpch.ITpchTable)", "bdconsistency.bolt.trident.query.TpchQuery.Query3.filterCustomers(bdconsistency.state.tpch.ITpchTable)"], "Fixed commit": "b9c4622f3c85be584618867bcf54a1225a75d6de", "Url": "https://api.github.com/repos/lbhat1/BDConsistency", "Date": "2013-11-08T01:34:48Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count < 1) { count = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8644/buggy-version/src.me.cakenggt.CakesMinerApocalypse.CakesMinerApocalypseVaultCreator.java", "BodyUseAPI": [], "Fixed commit": "7a54f10daff5dda979908ff605c75f398afbeff9", "Url": "https://api.github.com/repos/mushroomhostage/CakesMinerApocalypse", "Date": "2012-03-12T02:48:47Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count < 1) { count = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8644/buggy-version/src.me.cakenggt.CakesMinerApocalypse.CakesMinerApocalypseVaultCreator.java", "BodyUseAPI": [], "Fixed commit": "7a54f10daff5dda979908ff605c75f398afbeff9", "Url": "https://api.github.com/repos/mushroomhostage/CakesMinerApocalypse", "Date": "2012-03-12T02:48:47Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mPoints.isEmpty())) { mListener.onEndPoint(setEndPoint()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/9128/buggy-version/app.src.main.java.ru.sukharev.pathtracker.utils.MapHelper.java", "BodyUseAPI": [], "Fixed commit": "c90e691b63b13188bc1954f3401e4914f4f1e488", "Url": "https://api.github.com/repos/SukharevPavel/PathTracker", "Date": "2016-01-15T18:42:02Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mPoints.isEmpty())) { setEndPoint(); ru.sukharev.pathtracker.utils.orm.MapPath mapPath = new ru.sukharev.pathtracker.utils.orm.MapPath(name, mPoints.get(0).getTime(), mPoints.get(((mPoints.size()) - 1)).getTime(), distance, avgSpeed); new ru.sukharev.pathtracker.utils.MapHelper.AsynkSaveToDatabaseTask().execute(mapPath); }else mSQLListener.onFail();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/9128/buggy-version/app.src.main.java.ru.sukharev.pathtracker.utils.MapHelper.java", "BodyUseAPI": ["java.util.List<ru.sukharev.pathtracker.utils.orm.MapPoint>.get(int)", "mPoints.get(((mPoints.size()) - 1)).getTime()", "java.util.List<ru.sukharev.pathtracker.utils.orm.MapPoint>.size()", "mPoints.get(0).getTime()", "java.util.List<ru.sukharev.pathtracker.utils.orm.MapPoint>.get(((mPoints.size()) - 1))"], "Fixed commit": "c90e691b63b13188bc1954f3401e4914f4f1e488", "Url": "https://api.github.com/repos/SukharevPavel/PathTracker", "Date": "2016-01-15T18:42:02Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDbType.equals(com.ds.avare.place.Destination.GPS)) || (mDbType.equals(com.ds.avare.place.Destination.MAPS))) { }else { if (mFound) { mDbType = mParams.get(DataBaseHelper.TYPE); try { mLond = java.lang.Double.parseDouble(mParams.get(DataBaseHelper.LONGITUDE)); mLatd = java.lang.Double.parseDouble(mParams.get(DataBaseHelper.LATITUDE)); } catch (java.lang.Exception e) { mFound = false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/917/buggy-version/src.com.ds.avare.place.Destination.java", "BodyUseAPI": [], "Fixed commit": "f96b81ef03d83c08478890db273d6e8d809098ec", "Url": "https://api.github.com/repos/postalservice14/avare", "Date": "2014-02-02T20:36:00Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newUrls.isEmpty()) { throw new java.lang.IllegalArgumentException(\"Initial links are invalid\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2204/buggy-version/src.main.java.CrawlerImpl.java", "BodyUseAPI": [], "Fixed commit": "a5099675029a2b2a2bde5d6f9003dd1a79b99928", "Url": "https://api.github.com/repos/diverfd/crawler", "Date": "2015-01-19T12:29:55Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.support.v4.content.ContextCompat.checkSelfPermission(context, Manifest.permission.CAMERA)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { android.util.Log.i(\"LocationStatus\", \"Requesting permission\"); requestCameraPermission(); }else { android.content.Intent intent = new android.content.Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE); startActivityForResult(intent, com.csahmad.moodcloud.AddOrEditPostActivity.TAKE_IMAGE_REQUEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/737/buggy-version/app.src.main.java.com.csahmad.moodcloud.AddOrEditPostActivity.java", "BodyUseAPI": [], "Fixed commit": "40aeb0aec9038d67fcc85ae9a06285fd121c8aaf", "Url": "https://api.github.com/repos/CMPUT301W17T13/MoodCloud", "Date": "2017-04-03T20:37:56Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.jtrfp.trcl.gui.SwingMenuSystem.MenuNode>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (node == null) throw new java.lang.IllegalArgumentException((((\"Failed to find node: `\" + (path[index])) + \"` at index \") + index));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1979/buggy-version/src.main.java.org.jtrfp.trcl.gui.SwingMenuSystem.java", "BodyUseAPI": [], "Fixed commit": "5c32fdc45e09c0fb4a8abb86e28875eff9d652e1", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2015-12-10T06:16:57Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tmp[0].equals(\"InputFile\")) de.ipbhalle.phenomenal.main.MetFragParameterExporter.InputFile = tmp[1]; else if (tmp[0].equals(\"OutputFolder\")) de.ipbhalle.phenomenal.main.MetFragParameterExporter.OutputFolder = tmp[1]; else if (tmp[0].equals(\"OutputFile\")) de.ipbhalle.phenomenal.main.MetFragParameterExporter.OutputFile = tmp[1]; else if (tmp[0].equals(\"MaximumSpectrumLimit\")) de.ipbhalle.phenomenal.main.MetFragParameterExporter.maximumSpectrumLimit = java.lang.Integer.parseInt(tmp[1]); else if (tmp[0].equals(\"IgnoreEmptyParameters\")) continue; else { de.ipbhalle.phenomenal.main.MetFragParameterExporter.parameters.put(tmp[0], tmp[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7858/buggy-version/src.main.java.de.ipbhalle.phenomenal.main.MetFragParameterExporter.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.util.Hashtable<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "cc3c56351f8cab42bcc84320a06076e4111ca40d", "Url": "https://api.github.com/repos/c-ruttkies/MetFragParameterExport", "Date": "2017-02-10T15:25:57Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uri.endsWith(\"/login\")) { request.setAttribute(\"facade\", new gpago.view.ViewFacade(facade)); response.sendRedirect(((request.getContextPath()) + (gpago.view.servlet.ControllerServlet.ADDRESS_ADMIN_PAGE_URI))); }else if (uri.endsWith(\"/image\")) { gpago.model.entity.Greyhound greyhound = getGreyhound(getLongParameter(request, \"id\")); if ((greyhound != null) && ((greyhound.getFirstImage()) != null)) { java.awt.image.BufferedImage img = javax.imageio.ImageIO.read(new java.io.ByteArrayInputStream(greyhound.getFirstImage())); if (img != null) { response.setContentType(\"image/jpeg\"); java.io.OutputStream out = response.getOutputStream(); javax.imageio.ImageIO.write(img, \"jpg\", out); out.close(); } return; }else response.setStatus(HttpServletResponse.SC_BAD_REQUEST); }else if (uri.endsWith(\"/view-greyhounds\")) { request.setAttribute(\"facade\", new gpago.view.ViewFacade(facade)); forward(request, response, gpago.view.servlet.ControllerServlet.ADDRESS_LIST_GREYHOUNDS_URI); }else if (uri.endsWith(\"/admin/manage-greyhounds\")) { request.setAttribute(\"facade\", new gpago.view.ViewFacade(facade)); forward(request, response, gpago.view.servlet.ControllerServlet.ADDRESS_MANAGE_GREYHOUNDS_URI); }else if (uri.endsWith(\"/admin/new-greyhound\")) { gpago.view.GreyhoundFormBean bean = new gpago.view.GreyhoundFormBean(new gpago.model.entity.Greyhound()); request.setAttribute(\"greyhound\", bean); forward(request, response, gpago.view.servlet.ControllerServlet.ADDRESS_NEW_GREYHOUND_URI); }else if (uri.endsWith(\"/admin/update-greyhound\")) { gpago.model.entity.Greyhound greyhound = getGreyhound(getLongParameter(request, \"id\")); if (greyhound != null) { gpago.view.GreyhoundFormBean bean = new gpago.view.GreyhoundFormBean(greyhound); request.setAttribute(\"greyhound\", bean); forward(request, response, gpago.view.servlet.ControllerServlet.ADDRESS_EDIT_GREYHOUND_URI); }else { request.setAttribute(\"facade\", new gpago.view.ViewFacade(facade)); forward(request, response, gpago.view.servlet.ControllerServlet.ADDRESS_MANAGE_GREYHOUNDS_URI); } }else if (uri.endsWith(\"/admin/manage-sponsors\")) { request.setAttribute(\"facade\", new gpago.view.ViewFacade(facade)); forward(request, response, gpago.view.servlet.ControllerServlet.ADDRESS_MANAGE_SPONSORS_URI); }else if (uri.endsWith(\"/admin/new-sponsor\")) { gpago.view.SponsorFormBean bean = new gpago.view.SponsorFormBean(request, new gpago.model.entity.Sponsor()); request.setAttribute(\"sponsor\", bean); forward(request, response, gpago.view.servlet.ControllerServlet.ADDRESS_NEW_SPONSOR_URI); }else if (uri.endsWith(\"/admin/update-sponsor\")) { gpago.model.entity.Sponsor sponsor = getSponsor(getLongParameter(request, \"id\")); if (sponsor != null) { gpago.view.SponsorFormBean bean = new gpago.view.SponsorFormBean(request, sponsor); request.setAttribute(\"sponsor\", bean); forward(request, response, gpago.view.servlet.ControllerServlet.ADDRESS_EDIT_SPONSOR_URI); }else { request.setAttribute(\"facade\", new gpago.view.ViewFacade(facade)); forward(request, response, gpago.view.servlet.ControllerServlet.ADDRESS_MANAGE_SPONSORS_URI); } }else { forward(request, response, gpago.view.servlet.ControllerServlet.ADDRESS_NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/542/buggy-version/GPAGO.src.gpago.view.servlet.ControllerServlet.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "8bbe423b8feaec24b537fddec60bf8af8402d4df", "Url": "https://api.github.com/repos/phillipbess/Greyhound-Rescue", "Date": "2014-04-04T05:47:00Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.g) != null) { this.a((this.g.equalsIgnoreCase(opacket2clientprotocol.f()) ? \"Quit repeating yourself.\" : \"You just told me something else!\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5029/buggy-version/src.ONetLoginHandler.java", "BodyUseAPI": [], "Fixed commit": "5fd208aa91837bf38495ae48c4a2dfa07e844811", "Url": "https://api.github.com/repos/FallenMoonNetwork/CanaryMod", "Date": "2013-09-04T18:18:37Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, CustomWeightedEdge>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (pq.remove(edge)) { pq.add(edge); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6839/buggy-version/src.Cycles.java", "BodyUseAPI": ["java.util.PriorityQueue<CustomWeightedEdge>.add(CustomWeightedEdge)"], "Fixed commit": "f67c20048d3e608f4ec2162b31e95261002a3f95", "Url": "https://api.github.com/repos/crisscrosskao/JGraphT-Cycle-Edge-Perturbation", "Date": "2015-06-13T03:43:50Z"},
{"Line": "=>2203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rstudio.studio.client.workbench.views.source.editors.text.ace.TokenIterator.stepBackward()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (token != null) { boolean isRoxygen = (token.hasType(\"keyword\")) && (token.hasType(\"virtual-comment\")); if (!isRoxygen) currentToken = token; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/179/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.console.shell.assist.RCompletionManager.java", "BodyUseAPI": ["org.rstudio.studio.client.workbench.views.source.editors.text.ace.Token.hasType(java.lang.String)", "org.rstudio.studio.client.workbench.views.source.editors.text.ace.Token.hasType(java.lang.String)"], "Fixed commit": "6b1416d23db630288360c060a4a7513f617b8432", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2017-07-17T20:29:09Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((message) != null) { this.message = name; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1797/buggy-version/src.main.java.de.codeshelf.consoleui.prompt.builder.ListPromptBuilder.java", "BodyUseAPI": [], "Fixed commit": "1a78fb024c719a14584dcdb66cae35aefc043558", "Url": "https://api.github.com/repos/awegmann/consoleui", "Date": "2016-02-25T14:20:27Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name) == null) { name = message; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1797/buggy-version/src.main.java.de.codeshelf.consoleui.prompt.builder.ListPromptBuilder.java", "BodyUseAPI": [], "Fixed commit": "1a78fb024c719a14584dcdb66cae35aefc043558", "Url": "https://api.github.com/repos/awegmann/consoleui", "Date": "2016-02-25T14:20:27Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.eventHandler) != null) this.eventHandler.playerUp(this.gameTeams.get(this.activeTeam).getPlayerUp());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7814/buggy-version/HW3.Logic.java", "BodyUseAPI": [], "Fixed commit": "b0b3223f16afbd11e58e20f26ee2b90b9192d9dd", "Url": "https://api.github.com/repos/jgillham/CS390I", "Date": "2012-10-04T05:53:20Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (cell != null) { cast(chr, cell); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2431/buggy-version/PixelDungeon.src.main.java.com.nyrds.pixeldungeon.mechanics.spells.Spell.java", "BodyUseAPI": ["com.nyrds.pixeldungeon.mechanics.spells.Spell.1.cast(com.watabou.pixeldungeon.actors.Char,java.lang.Integer)"], "Fixed commit": "ff2daea337cd483134ba8f8f4c23c09dcb1a707b", "Url": "https://api.github.com/repos/NYRDS/pixel-dungeon-remix", "Date": "2017-09-21T16:09:55Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sb.toString().contains(\"<state>true</state>\")) { GGApp.GG_APP.activity.runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { android.widget.Toast.makeText(GGApp.GG_APP.activity.getApplicationContext(), \"Abmeldung erfolgreich\", Toast.LENGTH_LONG).show(); } }); }else { GGApp.GG_APP.activity.runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { android.widget.Toast.makeText(GGApp.GG_APP.activity.getApplicationContext(), \"Abmeldefehler\", Toast.LENGTH_LONG).show(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7195/buggy-version/app.src.main.java.de.gebatzens.ggvertretungsplan.GGProvider.java", "BodyUseAPI": [], "Fixed commit": "5138f41da29a730a3579d5d24a6bd3462e0eb369", "Url": "https://api.github.com/repos/Cedgetec/SchulinfoApp-android", "Date": "2015-02-21T20:41:52Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isPrimitive) { return expression.is(Kind.NULL_LITERAL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/666/buggy-version/java-checks.src.main.java.org.sonar.java.checks.DefaultInitializedFieldCheck.java", "BodyUseAPI": [], "Fixed commit": "325d9f1fc33ce6ce08a3ff7305aa8d3c811c8642", "Url": "https://api.github.com/repos/SonarSource/sonar-java", "Date": "2015-12-04T11:04:29Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.firstTick)) { org.lwjgl.input.Mouse.setCursorPosition(mouseX, mouseY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8470/buggy-version/src.main.java.com.gildedgames.util.menu.client.MenuClientEvents.java", "BodyUseAPI": [], "Fixed commit": "9d0997e0114031399c3a0995fdd4ce3b5fe2212a", "Url": "https://api.github.com/repos/gildedgames/gilded-games-util", "Date": "2015-11-05T12:21:06Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.firstTick) { this.firstTick = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8470/buggy-version/src.main.java.com.gildedgames.util.menu.client.MenuClientEvents.java", "BodyUseAPI": [], "Fixed commit": "9d0997e0114031399c3a0995fdd4ce3b5fe2212a", "Url": "https://api.github.com/repos/gildedgames/gilded-games-util", "Date": "2015-11-05T12:21:06Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (wordList == null) { return suggestions = generateAlternate(string, suggestions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4210/buggy-version/Predictor.java", "BodyUseAPI": [], "Fixed commit": "cab54c3ac731bb4839e372d599ae3eff425e2c8d", "Url": "https://api.github.com/repos/yueyangz/Simple-Word-Suggestion", "Date": "2016-09-16T19:57:49Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.upenn.cis573.predict.Predictor.processing(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (alternate == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4210/buggy-version/Predictor.java", "BodyUseAPI": [], "Fixed commit": "cab54c3ac731bb4839e372d599ae3eff425e2c8d", "Url": "https://api.github.com/repos/yueyangz/Simple-Word-Suggestion", "Date": "2016-09-16T19:57:49Z"},
{"Line": "=>855", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(companyData[3].contains(\"N/A\"))) { company.yahooEstNextEPS_ = java.lang.Float.parseFloat(companyData[3]); company.hasForecasts_ = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5791/buggy-version/src.main.java.mjc.Valuable.java", "BodyUseAPI": ["java.lang.Float.parseFloat(java.lang.String)"], "Fixed commit": "e690e5b51c437b1818e63805ee0a34a6ce4cc886", "Url": "https://api.github.com/repos/matches-brisvegas/valuable", "Date": "2014-12-30T04:56:23Z"},
{"Line": "=>851", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(companyData[2].contains(\"N/A\"))) { company.yahooEstEPS_ = java.lang.Float.parseFloat(companyData[2]); company.hasForecasts_ = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5791/buggy-version/src.main.java.mjc.Valuable.java", "BodyUseAPI": ["java.lang.Float.parseFloat(java.lang.String)"], "Fixed commit": "e690e5b51c437b1818e63805ee0a34a6ce4cc886", "Url": "https://api.github.com/repos/matches-brisvegas/valuable", "Date": "2014-12-30T04:56:23Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.rocVecs) != null) { copy.rocVecs = new java.util.ArrayList<jsat.linear.Vec>(this.rocVecs.size()); for (jsat.linear.Vec v : this.rocVecs) copy.rocVecs.add(v.clone()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7059/buggy-version/JSAT.src.jsat.classifiers.Rocchio.java", "BodyUseAPI": [], "Fixed commit": "920ef50cf6d6d33633c7a53ca08a07cc6671a801", "Url": "https://api.github.com/repos/EdwardRaff/JSAT", "Date": "2015-04-04T17:24:03Z"},
{"Line": "=>634", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tracks.isEmpty()) { return new java.util.ArrayList<de.felixbruns.jotify.Track>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3343/buggy-version/commons.src.main.java.de.felixbruns.jotify.JotifyConnection.java", "BodyUseAPI": [], "Fixed commit": "0969e316fa5eb89a9b9bf8ed0293ab8f85d3d6f1", "Url": "https://api.github.com/repos/jkwatson/jotify", "Date": "2011-09-03T06:20:39Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.containingItems[1].stackSize) < 12) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3291/buggy-version/src.main.java.com.mjr.extraplanets.tile.machines.TileEntityBasicSolarEvaporationChamber.java", "BodyUseAPI": [], "Fixed commit": "9e0c19ad823ea12bcdab8341743cf8d5227172c2", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2017-09-03T00:33:54Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.containingItems[1].stackSize) < 3) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3291/buggy-version/src.main.java.com.mjr.extraplanets.tile.machines.TileEntityBasicChemicalInjector.java", "BodyUseAPI": [], "Fixed commit": "9e0c19ad823ea12bcdab8341743cf8d5227172c2", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2017-09-03T00:33:54Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.containingItems[2].stackSize) < 6) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3291/buggy-version/src.main.java.com.mjr.extraplanets.tile.machines.TileEntityBasicChemicalInjector.java", "BodyUseAPI": [], "Fixed commit": "9e0c19ad823ea12bcdab8341743cf8d5227172c2", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2017-09-03T00:33:54Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(objectListing.getCommonPrefixes().isEmpty())) { for (java.lang.String commonPrefix : objectListing.getCommonPrefixes()) { buf.append(((((org.springframework.shell.support.util.StringUtils.repeat(\"-.\", 14)) + \"- \") + commonPrefix) + (org.springframework.shell.support.util.StringUtils.LINE_SEPARATOR))); } buf.append(((objectListing.getCommonPrefixes().size()) + \" virtual directories found!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5734/buggy-version/src.main.java.org.mvnsearch.ali.oss.spring.shell.commands.OssOperationCommands.java", "BodyUseAPI": ["objectListing.getCommonPrefixes().size()", "org.mvnsearch.ali.oss.spring.shell.commands.ObjectListing.getCommonPrefixes()", "java.lang.StringBuilder.append(((objectListing.getCommonPrefixes().size()) + \" virtual directories found!\"))", "org.mvnsearch.ali.oss.spring.shell.commands.ObjectListing.getCommonPrefixes()"], "Fixed commit": "f30e466ad64d3c004a381f971deb49043aa4a269", "Url": "https://api.github.com/repos/linux-china/ali-oss-java-cli", "Date": "2012-09-20T01:45:04Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (exception.getErrorCode().equals(ErrorCategoryConstants.MANDATORY_PARAMETER_MISSING)) { responseJson = (\"{\\\"failureReason\\\":\\\"\" + (exception.getErroneousField())) + \":Mandatory Parameter Missing\\\"}\"; }else { responseJson = (\"{\\\"failureReason\\\":\\\"\" + (exception.getErroneousField())) + \":Invalid Value\\\"}\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/223/buggy-version/kilkari.src.main.java.org.motechproject.nms.kilkari.web.BaseController.java", "BodyUseAPI": ["org.motechproject.nms.util.helper.DataValidationException.getErroneousField()", "org.motechproject.nms.util.helper.DataValidationException.getErroneousField()"], "Fixed commit": "702fa8218007dccbf879de5a5dcc1e9fc3adea1a", "Url": "https://api.github.com/repos/motech-implementations/bbc-nms", "Date": "2015-04-13T07:28:23Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.futsal.manager.DefineManager.EMBEDDED_SYSTEM_DEVICE_SOCKET) != null) { java.io.OutputStream bluetoothSendMessage = com.futsal.manager.DefineManager.EMBEDDED_SYSTEM_DEVICE_SOCKET.getOutputStream(); bluetoothSendMessage.write(params[0].getBytes()); bluetoothSendMessage.flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8314/buggy-version/app.src.main.java.com.futsal.manager.MakeNewMemoryModule.MakeNewMemoryBluetoothManager.java", "BodyUseAPI": [], "Fixed commit": "9d9806a028e8b17c09d793b08fff5a8811ac987a", "Url": "https://api.github.com/repos/Futsal-Manager/android-client", "Date": "2017-06-16T10:16:48Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.UserInterface.ask(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((answer.length()) > 0) { if (((answer.charAt(0)) == 'Y') || ((answer.charAt(0)) == 'y')) { return true; } if (((answer.charAt(0)) == 'N') || ((answer.charAt(0)) == 'n')) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5979/buggy-version/CardGame.game.UserInterface.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)"], "Fixed commit": "dc823ec826b1c76418bf32722c10a2ad228d2b73", "Url": "https://api.github.com/repos/Sunlorhic/VSWE-Course2-CardGame", "Date": "2014-01-20T05:38:36Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (java.util.Objects.equals(splitPos2[1], \"\")) { tri.vtb = 0; }else { tri.vtb = java.lang.Integer.valueOf(splitPos2[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2597/buggy-version/src.main.java.craftedcart.smbworkshopexporter.ModelData.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "1bccd585a2c687b34a81f27f3ff18913be746690", "Url": "https://api.github.com/repos/CraftedCart/SMBWorkshopExporter", "Date": "2016-10-03T19:30:23Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (java.util.Objects.equals(splitPos3[1], \"\")) { tri.vtc = 0; }else { tri.vtc = java.lang.Integer.valueOf(splitPos3[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2597/buggy-version/src.main.java.craftedcart.smbworkshopexporter.ModelData.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "1bccd585a2c687b34a81f27f3ff18913be746690", "Url": "https://api.github.com/repos/CraftedCart/SMBWorkshopExporter", "Date": "2016-10-03T19:30:23Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (java.util.Objects.equals(splitPos1[1], \"\")) { tri.vta = 0; }else { tri.vta = java.lang.Integer.valueOf(splitPos1[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2597/buggy-version/src.main.java.craftedcart.smbworkshopexporter.ModelData.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "1bccd585a2c687b34a81f27f3ff18913be746690", "Url": "https://api.github.com/repos/CraftedCart/SMBWorkshopExporter", "Date": "2016-10-03T19:30:23Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cmucreatelab.flutter_android.helpers.GlobalHandler.getInstance(getApplicationContext())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((globalHandler.melodySmartDeviceHandler.isConnected()) && (!(dataPopulated))) { runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { globalHandler.sessionHandler.createProgressDialog(org.cmucreatelab.flutter_android.activities.AppLandingActivity.this); globalHandler.sessionHandler.updateProgressDialogMessage(getResources().getString(R.string.reading_data)); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5681/buggy-version/app.src.main.java.org.cmucreatelab.flutter_android.activities.AppLandingActivity.java", "BodyUseAPI": ["globalHandler.sessionHandler.updateProgressDialogMessage(getResources().getString(R.string.reading_data))", "globalHandler.sessionHandler.createProgressDialog(org.cmucreatelab.flutter_android.activities.AppLandingActivity)", "org.cmucreatelab.flutter_android.activities.AppLandingActivity.runOnUiThread(java.lang.Runnable)"], "Fixed commit": "337b98e1a0683a629f115e65c4b49c9b8475d935", "Url": "https://api.github.com/repos/CMU-CREATE-Lab/flutter-app-android", "Date": "2017-03-21T23:08:01Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sshexmap.MapView.dip_instance) != null) { return sshexmap.MapView.dip_instance; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6587/buggy-version/src.client.sshexmap.MapView.java", "BodyUseAPI": [], "Fixed commit": "de3aa8249f8da20e389aa8879e8eb87bad03a7a2", "Url": "https://api.github.com/repos/cjeffery/sworsorc", "Date": "2014-04-22T01:02:46Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof com.zestedesavoir.zdsnotificateur.internal.exceptions.AuthenticationException) { if ((listener) != null) { listener.goToLoginScreen(); } }else { showProgress(false); android.support.design.widget.Snackbar.make(flContainer, R.string.alert_server_error, Snackbar.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5162/buggy-version/Android.app.src.main.java.com.zestedesavoir.zdsnotificateur.ui.notifications.NotificationsFragment.java", "BodyUseAPI": [], "Fixed commit": "63f5ecad52c969ffe674e71e484ead61bff1c2fd", "Url": "https://api.github.com/repos/GerardPaligot/extensions-notificateurs", "Date": "2016-08-21T12:59:28Z"},
{"Line": "=>1011", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (namingClass == (com.fasterxml.jackson.databind.introspect.PropertyNamingStrategy.class)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2050/buggy-version/src.main.java.com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.java", "BodyUseAPI": [], "Fixed commit": "6aaa38baa757e1e58dca85df21be99a6db83e6a6", "Url": "https://api.github.com/repos/aryehpro/jackson-databind", "Date": "2015-11-10T03:09:36Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(receivers.containsKey(key))) { receivers.put(key, new java.util.LinkedList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/6131/buggy-version/src.main.java.org.thewdj.telecom.Processor.java", "BodyUseAPI": ["java.util.LinkedHashMap<KeyType, java.util.LinkedList<org.thewdj.telecom.IReceiver>>.put(KeyType,java.util.LinkedList)"], "Fixed commit": "08529891206cfdf6c4ec84c08613f7936dada579", "Url": "https://api.github.com/repos/NSDN/NyaSamaTelecom", "Date": "2016-10-08T15:06:12Z"},
{"Line": "=>714", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node.deterministic) { for (int i = 0; i != (nchildren.length); ++i) { nchildren[i] = rmap[ochildren[i]]; } }else { java.util.BitSet visited = new java.util.BitSet(rmap.length); int diff = 0; for (int i = 0; i != (nchildren.length); ++i) { int nchild = rmap[ochildren[i]]; if (!(visited.get(nchild))) { visited.set(nchild); nchildren[(i - diff)] = nchild; }else { diff = diff + 1; } } if (diff > 0) { nchildren = java.util.Arrays.copyOf(nchildren, ((nchildren.length) - diff)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4126/buggy-version/src.wyautl.lang.Automatas.java", "BodyUseAPI": [], "Fixed commit": "eb1777d7d67e31d000536a5393af269a27bd7557", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-09-02T06:12:30Z"},
{"Line": "=>958", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (trans != null) trans.rollback();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8526/buggy-version/src.main.java.eu.musesproject.server.db.handler.DBManager.java", "BodyUseAPI": ["org.hibernate.Transaction.rollback()"], "Fixed commit": "63b2253ca4a1b12e72cb740de97b1e0acd37c6b8", "Url": "https://api.github.com/repos/MusesProject/MusesServer", "Date": "2015-09-11T12:23:29Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((startImage == null) || ((startImage.getCreatives()) == null)) || ((startImage.getCreatives().size()) < 1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2517/buggy-version/app.src.main.java.com.wl.dudian.framework.repository.DiskRepository.java", "BodyUseAPI": [], "Fixed commit": "31690841bb5bb9bef435b2f6100673760c244fe8", "Url": "https://api.github.com/repos/wl9739/DuDian", "Date": "2017-03-30T09:09:09Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!jvmError) { dirtyFlag.clearDirty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/765/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.impl.local.paginated.OLocalPaginatedStorage.java", "BodyUseAPI": [], "Fixed commit": "1f3a923c430bde2b9a199bda0c7fa6ac35853e02", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-12-01T08:05:17Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((value.startsWith(\"\\\"\")) && (value.endsWith(\"\\\"\"))) { value = value.substring(1, ((value.length()) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4219/buggy-version/core.core.src.main.java.imagej.script.ScriptInfo.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "70950fb3b2b932c4de9b602de90161e7f1d4a6b0", "Url": "https://api.github.com/repos/imagej/imagej", "Date": "2014-01-28T23:46:17Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["core.FitnessCalculator.calculateFitnessOfMutation(engine.Genome)", "core.FitnessCalculator.calculateFitnessOfMutation(engine.Genome)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newFitness < oldFitness) { weightDistribution[mutation] *= 1 + percentageDeltaFitness; while (newFitness < oldFitness) { if (percentageFitness > (engine.Genome.best_fitness)) { engine.Genome.best_fitness = percentageFitness; engine.Genome.fitnessPlot.add(engine.Genome.best_fitness); } if (((engine.Genome.index) % 25) == 0) { engine.Genome.indexPlot.add(engine.Genome.index); (engine.Genome.index)++; }else (engine.Genome.index)++; counter *= adaptiveRate; oldFitness = newFitness; triangleList.get(currentTriangle).mutate(triangleList.get(currentTriangle).lastMutation, counter); newFitness = fitCalc.calculateFitnessOfMutation(this); } counter = 1; if (((generationCount) % 10) == 0) { main.currFitness = percentageFitness; setMainImage(); if ((main.greatestFitness) < percentageFitness) { main.greatestFitness = percentageFitness; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8219/buggy-version/GeneticAlgorithm.src.engine.Genome.java", "BodyUseAPI": [], "Fixed commit": "d0c8031257ce5bfc50c8b92e6bc3bcbd52d7480a", "Url": "https://api.github.com/repos/atle95/GeneticAlgorithm", "Date": "2016-04-12T18:01:38Z"},
{"Line": "=>830", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((order.getMeal()) != null) && ((order.getMeal().getId()) == (meal.getId()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2182/buggy-version/tiffinapp.src.main.java.com.rns.tiffeat.web.bo.impl.CustomerBoImpl.java", "BodyUseAPI": [], "Fixed commit": "93a9ccd27dd6aa1eee9f06848cb8d5f0d8b73bb3", "Url": "https://api.github.com/repos/ajaxkulkarni/dabbaweb", "Date": "2016-02-12T03:53:22Z"},
{"Line": "=>742", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mealTypeDates.get(MealType.LUNCH)) != null) && ((mealTypeDates.get(MealType.DINNER)) != null)) { mealTypeDates.put(MealType.BOTH, mealTypeDates.get(MealType.LUNCH)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2182/buggy-version/tiffinapp.src.main.java.com.rns.tiffeat.web.bo.impl.CustomerBoImpl.java", "BodyUseAPI": ["java.util.Map<com.rns.tiffeat.web.bo.domain.MealType, java.util.Date>.get(MealType.LUNCH)", "java.util.Map<com.rns.tiffeat.web.bo.domain.MealType, java.util.Date>.put(MealType.BOTH,mealTypeDates.get(MealType.LUNCH))"], "Fixed commit": "93a9ccd27dd6aa1eee9f06848cb8d5f0d8b73bb3", "Url": "https://api.github.com/repos/ajaxkulkarni/dabbaweb", "Date": "2016-02-12T03:53:22Z"},
{"Line": "=>753", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rns.tiffeat.web.util.CommonUtil.getMealType(meal.getType())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(type.equals(mealType))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2182/buggy-version/tiffinapp.src.main.java.com.rns.tiffeat.web.bo.impl.CustomerBoImpl.java", "BodyUseAPI": [], "Fixed commit": "93a9ccd27dd6aa1eee9f06848cb8d5f0d8b73bb3", "Url": "https://api.github.com/repos/ajaxkulkarni/dabbaweb", "Date": "2016-02-12T03:53:22Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jidesoft.plaf.UIDefaultsLookup.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (string != null) { return string; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1523/buggy-version/src.com.jidesoft.plaf.aqua.AquaPreferences.java", "BodyUseAPI": [], "Fixed commit": "b04f58668dbede6b8d911a8ba825de0cb6b4972c", "Url": "https://api.github.com/repos/jidesoft/jide-oss", "Date": "2013-11-21T17:52:19Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerMob) == null) return \"AUTH:\" + (getAuthentication());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/883/buggy-version/src.engine.network.server.ServerClient.java", "BodyUseAPI": [], "Fixed commit": "39b23e75a46729a158f112b1bf829c2e515803bf", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-05-01T13:11:17Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((game.players[3].hand[indexToPlay].getValue()) == 44) { game.players[3].hand[indexToPlay].setSuit(game.trumpColor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4759/buggy-version/RookAndroid.src.com.plnu.koorgame.GameBoard.java", "BodyUseAPI": ["game.players[3].hand[indexToPlay].setSuit(game.trumpColor)"], "Fixed commit": "470a99c5384a1e5a9fcbe6c54a4a0c4e541aaa64", "Url": "https://api.github.com/repos/kendallhwilson/KoorAndroid", "Date": "2015-04-27T21:20:22Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newpotential == (java.lang.Double.NEGATIVE_INFINITY)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7117/buggy-version/JavaChainMaven.src.main.java.javachains.CoreRun.java", "BodyUseAPI": [], "Fixed commit": "bc25010e903c672833b9d9e2a674639eef15b6e6", "Url": "https://api.github.com/repos/atopology/ColloidalChains", "Date": "2017-08-16T10:56:14Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((common.spring.Context.CONTEXT) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2822/buggy-version/src.common.spring.Context.java", "BodyUseAPI": [], "Fixed commit": "7b8c5bba8d2a3675a3cbe51c7a024ec0259a72de", "Url": "https://api.github.com/repos/pavelvpster/CommonSpring", "Date": "2014-06-12T13:18:44Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((common.spring.Context.CONTEXT) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2822/buggy-version/src.common.spring.Context.java", "BodyUseAPI": [], "Fixed commit": "7b8c5bba8d2a3675a3cbe51c7a024ec0259a72de", "Url": "https://api.github.com/repos/pavelvpster/CommonSpring", "Date": "2014-06-12T13:18:44Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.jpush.api.JPushClient.sendNotificationWithAppKey(long,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (messageResult != null) { if ((ErrorCodeEnum.NOERROR.value()) == (messageResult.getErrcode())) { return true; }else { com.appfactory.service.impl.JPushService.LOG.error(java.lang.String.format(\"push failed: %s\", messageResult.getErrmsg())); return false; } }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7772/buggy-version/core.src.main.java.com.appfactory.service.impl.JPushService.java", "BodyUseAPI": ["org.apache.log4j.Logger.error(java.lang.String)", "java.lang.String.format(java.lang.String,messageResult.getErrmsg())", "cn.jpush.api.MessageResult.getErrcode()", "cn.jpush.api.MessageResult.getErrmsg()"], "Fixed commit": "5621ece1da6d9ea96362c3f243144abb7f46cd2d", "Url": "https://api.github.com/repos/liweinan0423/DemoSite", "Date": "2013-10-30T08:44:30Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (audioFile != null) { setMusicFileInfo(audioFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1425/buggy-version/app.src.main.java.com.fesskiev.player.ui.player.PlaybackControlFragment.java", "BodyUseAPI": ["com.fesskiev.player.ui.player.PlaybackControlFragment.setMusicFileInfo(com.fesskiev.player.model.AudioFile)"], "Fixed commit": "ece6a609a826dad4563ca7d835a9aece788d6ed6", "Url": "https://api.github.com/repos/fesskiev/MediaCenter", "Date": "2016-02-18T14:27:32Z"},
{"Line": "=>628", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fileOutput.exists()) { org.apache.commons.io.FileUtils.forceDelete(fileOutput); fileOutput = new java.io.File(com.stratelia.webactiv.util.FileRepositoryManager.getTemporaryPath(), ((getComponentId()) + (com.stratelia.silverpeas.infoLetter.control.InfoLetterSessionController.EXPORT_CSV_NAME))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/306/buggy-version/infoletter.infoletter-war.src.main.java.com.stratelia.silverpeas.infoLetter.control.InfoLetterSessionController.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.forceDelete(java.io.File)"], "Fixed commit": "1feebc27f8dd7f06ff21deabfdc29b541e5513f9", "Url": "https://api.github.com/repos/CecileBONIN/Silverpeas-Components", "Date": "2015-01-13T15:24:41Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((usernameAlert) != null) { usernameAlert.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1288/buggy-version/app.src.main.java.com.example.mercury.nearbysample.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "74b800a9334399837540b1e9cd533283f4856751", "Url": "https://api.github.com/repos/GregDick/nearby-sample", "Date": "2017-11-29T21:21:03Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((temp.length()) < 3) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7362/buggy-version/CaliforniumServer.src.main.com.punyal.medusaserver.californiumServer.utils.UnitConversion.java", "BodyUseAPI": [], "Fixed commit": "40731decc8f7b052481462f776d7612701c97a93", "Url": "https://api.github.com/repos/punyal/MedusaServer-CaliforniumServer", "Date": "2015-04-30T18:59:58Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof org.parse4j.ParseQuery.RelationConstraint) { return ((org.parse4j.ParseQuery.RelationConstraint) (value)).encode(objectEncoder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/4229/buggy-version/src.main.java.org.parse4j.util.ParseEncoder.java", "BodyUseAPI": [], "Fixed commit": "f89ee36bf0c912738a750dae86a8400ccd01c2c6", "Url": "https://api.github.com/repos/thiagolocatelli/parse4j", "Date": "2014-03-10T21:31:13Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (createTableViewEnable) { this.createViewsForPrimaryKey(typeName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/543/buggy-version/sql-importer-lib.src.main.java.com.couchbase.util.SqlImporter.java", "BodyUseAPI": [], "Fixed commit": "d8a94161ab7f2e5600738066f7e630245f7adf77", "Url": "https://api.github.com/repos/tgrall/couchbase-sql-importer", "Date": "2013-06-29T20:34:37Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<com.mygdx.game.engine.tweening.EngineTweener.ChannelTween>.pop()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ct.Tween.isCleaned()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7738/buggy-version/core.src.com.mygdx.game.engine.tweening.EngineTweener.java", "BodyUseAPI": [], "Fixed commit": "5656b1099376c065a28b1cfa4aeaa32d69595365", "Url": "https://api.github.com/repos/Darkfafi/PvB", "Date": "2017-05-02T13:33:09Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasTransfer) { canvas.drawCircle(midCircleStart, topMargin, 20, new android.graphics.Paint()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/8264/buggy-version/src.edu.berkeley.cs160.clairetuna.prog3.Ticket.java", "BodyUseAPI": [], "Fixed commit": "7a610aa6d728403661c13a67f01e49b2a0f76c82", "Url": "https://api.github.com/repos/ctuna/bart", "Date": "2013-03-24T07:45:25Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((getEnteredNumberString().length()) < (getDigitCount(mMinNumber))) && ((mMinNumber) != 0)) { loopStart = (getDigitCount(mMinNumber)) - (getEnteredNumberString().length()); }else { loopStart = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3539/buggy-version/library.src.main.java.com.doomonafireball.betterpickers.numberpicker.NumberPicker.java", "BodyUseAPI": ["com.doomonafireball.betterpickers.numberpicker.NumberPicker.getDigitCount(java.lang.Integer)"], "Fixed commit": "a331c75fad4431a48f75f6389e4dc729eb9a75f4", "Url": "https://api.github.com/repos/vork/android-betterpickers", "Date": "2013-10-09T11:41:15Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.JSONObject.getLong(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (((audienceAliasId != null) && (audienceName != null)) && (money != null)) { pays.put(audienceAliasId, new com.zhubo.task.parsepage.task.ParseAppRoomPageWithTopAudienceIdentifyTask.Pay(audienceAliasId, audienceName, money)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2941/buggy-version/complete.src.main.java.com.zhubo.task.parsepage.task.ParseAppRoomPageWithTopAudienceIdentifyTask.java", "BodyUseAPI": ["java.util.Map<java.lang.Long, com.zhubo.task.parsepage.task.ParseAppRoomPageWithTopAudienceIdentifyTask.Pay>.put(java.lang.Long,com.zhubo.task.parsepage.task.ParseAppRoomPageWithTopAudienceIdentifyTask.Pay)"], "Fixed commit": "4164281f742174c28e70024a234f218018e8bc98", "Url": "https://api.github.com/repos/expPATHoli/zhubo_backend", "Date": "2017-01-23T17:44:03Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lengthOfList) == (sortingPosition)) { isSorted = true; }else { for (int i = 0; i < (sortingPosition); i++) { int temp = listToSort.get(sortingPosition); if (temp < (listToSort.get(i))) { listToSort.remove(sortingPosition); listToSort.add(i, temp); break; } } (sortingPosition)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7591/buggy-version/src.main.java.model.InsertionSort.java", "BodyUseAPI": [], "Fixed commit": "4ab3eb3fbd2db2f8a17877372e97657ef016ec18", "Url": "https://api.github.com/repos/HanzehogeschoolSICT/OOP3-Sorting-HB", "Date": "2017-03-15T13:10:36Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((messageSource) != null) messageSource.incomingResponse(this, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/3037/buggy-version/jactor2-core.src.main.java.org.agilewiki.jactor2.core.messages.RequestBase.java", "BodyUseAPI": [], "Fixed commit": "f79e1459812f1c7d55d48d57d1086472cc074dc3", "Url": "https://api.github.com/repos/laforge49/JActor2", "Date": "2013-11-28T11:15:21Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((backupManager) == null) backupManager = me.neatmonster.spacertk.utilities.BackupManager.getInstance();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/1320/buggy-version/src.me.neatmonster.spacertk.SpaceRTK.java", "BodyUseAPI": [], "Fixed commit": "4cbc1a7a815e90781374286aa812bbe359f8597b", "Url": "https://api.github.com/repos/SpaceDev/SpaceRTK", "Date": "2012-07-03T18:31:38Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uTaskFilePath) == null) { return \"data/utask.xml\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/2328/buggy-version/src.main.java.utask.commons.core.Config.java", "BodyUseAPI": [], "Fixed commit": "28fb7b45612caf8bc9e5dc176eb0ce5ee10469d6", "Url": "https://api.github.com/repos/CS2103JAN2017-W13-B1/main", "Date": "2017-03-29T04:19:41Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(was_pressed_a)) { bypass_a = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7871/buggy-version/FtcRobotController.src.main.java.com.qualcomm.ftcrobotcontroller.opmodes.Team7104TeleOp.java", "BodyUseAPI": [], "Fixed commit": "889010e8cda19a608c168aefbf0cbac5b947f301", "Url": "https://api.github.com/repos/thesynergists/Team7104App", "Date": "2016-02-03T04:10:36Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(was_pressed_y)) { bypass_y = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/7871/buggy-version/FtcRobotController.src.main.java.com.qualcomm.ftcrobotcontroller.opmodes.Team7104TeleOp.java", "BodyUseAPI": [], "Fixed commit": "889010e8cda19a608c168aefbf0cbac5b947f301", "Url": "https://api.github.com/repos/thesynergists/Team7104App", "Date": "2016-02-03T04:10:36Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b.equals(getSink())) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V68/5215/buggy-version/soottocfg.src.main.java.soottocfg.cfg.method.Method.java", "BodyUseAPI": [], "Fixed commit": "b7a4b432533b39f59cf21bbcc9d36522050a962c", "Url": "https://api.github.com/repos/jayhorn/jayhorn", "Date": "2016-10-06T22:33:01Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == (cliente.TipoPersonaje.DESCONOCIDO)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1105/buggy-version/src.cliente.TipoPersonaje.java", "BodyUseAPI": [], "Fixed commit": "3e03ba44fe7fd8447564d05ad9122692741e9e13", "Url": "https://api.github.com/repos/pleonex/NiKate-Origins", "Date": "2014-05-14T02:42:53Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(context.containsBeanDefinition(interpolationType))) { interpolationType = \"cube\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1713/buggy-version/src.main.java.net.sergey.diplom.services.stlgenerators.cubespline.AirfoilStlGenerator.java", "BodyUseAPI": [], "Fixed commit": "03d5500645d195ba2bb547a3bc0e518be3ffc943", "Url": "https://api.github.com/repos/Sergey34/diplom", "Date": "2017-02-18T06:23:59Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mozilla.mozstumbler.service.core.http.ILocationService.submit(batch.data,java.util.HashMap<java.lang.String, java.lang.String>,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (result != null) { logMsg = \"HTTP non-success code: \" + (result.httpResponse()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1304/buggy-version/android.src.main.java.org.mozilla.mozstumbler.service.uploadthread.AsyncUploader.java", "BodyUseAPI": ["org.mozilla.mozstumbler.service.core.http.IResponse.httpResponse()"], "Fixed commit": "e4a53014b2e7acfeeaf490629f570d0ee458f2e7", "Url": "https://api.github.com/repos/garvankeeley/MozStumbler", "Date": "2014-10-06T17:50:00Z"},
{"Line": "=>535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((org.openflexo.foundation.resource.FileFlexoIODelegate) (org.openflexo.foundation.resource.FlexoResourceImpl.getFlexoIODelegate())).getFile()) != null) { return ((org.openflexo.foundation.resource.FileFlexoIODelegate) (org.openflexo.foundation.resource.FlexoResourceImpl.getFlexoIODelegate())).getFile().toURI().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2967/buggy-version/flexo-foundation.src.main.java.org.openflexo.foundation.resource.FlexoResourceImpl.java", "BodyUseAPI": [], "Fixed commit": "a5df49ca8f551064c0c8dfb05a12178218b63d82", "Url": "https://api.github.com/repos/openflexo-team/openflexo-core", "Date": "2016-01-29T10:03:21Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ex.getError().get()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (apiError.getDetails().isPresent()) { com.urbanairship.APIErrorDetails apiErrorDetails = apiError.getDetails().get(); com.urbanairship.PushExample.logger.error((\"Error details \" + (apiErrorDetails.getError()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5228/buggy-version/example.src.main.java.com.urbanairship.PushExample.java", "BodyUseAPI": ["com.urbanairship.APIError.getDetails()", "apiError.getDetails().get()"], "Fixed commit": "5a0aed7eee5b4aa0c0690f0690ca2733a8b5b504", "Url": "https://api.github.com/repos/urbanairship/java-library", "Date": "2013-08-30T03:32:46Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentRunningJob) != null) && ((currentRunningJob) instanceof net.osmand.plus.routing.RoutingHelper.RouteRecalculationThread)) { net.osmand.plus.routing.RoutingHelper.RouteRecalculationThread thread = ((net.osmand.plus.routing.RoutingHelper.RouteRecalculationThread) (currentRunningJob)); thread.stopCalculation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8167/buggy-version/OsmAnd.src.net.osmand.plus.routing.RoutingHelper.java", "BodyUseAPI": [], "Fixed commit": "1b164d786c5661d54916536bfb03e2ed64a9cdbf", "Url": "https://api.github.com/repos/Bars107/Osmand", "Date": "2014-06-26T16:18:34Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((percentageEditText.getText().length()) > 0) && ((mLastEdited) == (percentageEditText.getId()))) { recalculate(1); }else if (((downPaymentEditText.getText().length()) > 0) && ((mLastEdited) == (downPaymentEditText.getId()))) { recalculate(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3659/buggy-version/src.com.kalei.android.yoneko.MortgageCalculator.Main.java", "BodyUseAPI": [], "Fixed commit": "89e01b14a32bbb3127e118dbb232983a70ddf8a6", "Url": "https://api.github.com/repos/reidisaki/pitimortgage", "Date": "2016-03-20T01:13:36Z"},
{"Line": "=>628", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (ghash == null) { net.wagstrom.research.github.BlueprintsDriver.log.warn(\"Unable to determine gravatar hash for [{}]\", gravatarHash); }else { returnVertex = getOrCreateGravatar(ghash); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6523/buggy-version/src.main.java.net.wagstrom.research.github.BlueprintsDriver.java", "BodyUseAPI": ["net.wagstrom.research.github.BlueprintsDriver.getOrCreateGravatar(java.lang.String)"], "Fixed commit": "9c454148713870b0a8529db9b822386c485b51b5", "Url": "https://api.github.com/repos/pridkett/gitminer", "Date": "2012-05-01T14:51:11Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.wagstrom.research.github.BlueprintsDriver.saveGravatar(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (gravatarVtx != null) { createEdgeIfNotExist(emailVtx, gravatarVtx, EdgeType.GRAVATARHASH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6523/buggy-version/src.main.java.net.wagstrom.research.github.BlueprintsDriver.java", "BodyUseAPI": ["net.wagstrom.research.github.BlueprintsDriver.createEdgeIfNotExist(com.tinkerpop.blueprints.pgm.Vertex,com.tinkerpop.blueprints.pgm.Vertex,EdgeType.GRAVATARHASH)"], "Fixed commit": "9c454148713870b0a8529db9b822386c485b51b5", "Url": "https://api.github.com/repos/pridkett/gitminer", "Date": "2012-05-01T14:51:11Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Double.parseDouble(java.lang.String)", "java.util.HashMap<java.lang.String, umcg.genetica.io.trityper.EQTL>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((aseZ * (eQtl.getZscore())) > 0) { ++sameDirection; }else { ++oppositeDirection; java.lang.System.out.println((((((((((((\"Opposite: \" + (eQtl.getRsChr())) + \":\") + (eQtl.getRsChrPos())) + \"\\t\") + (elements[7])) + \"\\t\") + (eQtl.getAlleleAssessed())) + \"\\t\") + aseZ) + \"\\t\") + (eQtl.getZscore()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7860/buggy-version/eqtl-mapping-pipeline.src.main.java.eqtlmappingpipeline.ase.CompareAseToEqtl.java", "BodyUseAPI": ["java.io.PrintStream.println((((((((((((\"Opposite: \" + (eQtl.getRsChr())) + \":\") + (eQtl.getRsChrPos())) + \"\\t\") + (elements[7])) + \"\\t\") + (eQtl.getAlleleAssessed())) + \"\\t\") + aseZ) + \"\\t\") + (eQtl.getZscore())))", "umcg.genetica.io.trityper.EQTL.getRsChr()", "umcg.genetica.io.trityper.EQTL.getRsChrPos()", "umcg.genetica.io.trityper.EQTL.getAlleleAssessed()", "umcg.genetica.io.trityper.EQTL.getZscore()"], "Fixed commit": "06bcad37bdbdd0e2ec8a3a6bfc68c4734f630942", "Url": "https://api.github.com/repos/Bonder-MJ/systemsgenetics", "Date": "2014-05-05T19:38:46Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.pms.util.StringUtil.hasValue(tagInfo.year)) { if ((tagInfo.year.length()) > 4) { result.updateString(\"YEAR\", tagInfo.year.substring(0, 4)); }else { result.updateString(\"YEAR\", tagInfo.year); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6728/buggy-version/src.main.java.net.pms.database.TableMusicBrainzReleases.java", "BodyUseAPI": ["tagInfo.year.length()", "java.sql.ResultSet.updateString(java.lang.String,tagInfo.year.substring(0, 4))", "java.sql.ResultSet.updateString(java.lang.String,tagInfo.year)", "tagInfo.year.substring(int,int)"], "Fixed commit": "3b1d53dd81c550f6fb38be192701693398051cad", "Url": "https://api.github.com/repos/UniversalMediaServer/UniversalMediaServer", "Date": "2016-12-18T06:28:01Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((discussers.size()) > i) { deleteItems.add(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/318/buggy-version/src.org.teachothers.fishwatchr.DiscusserSettingPanel.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.add(int)"], "Fixed commit": "c68c29ecfc8b8fb867c903ec9cd8c07b09b63dde", "Url": "https://api.github.com/repos/himawari-san/FishWatchr", "Date": "2015-05-26T04:05:04Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parser) != null) e = parser.getSsmlOffset(e, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6504/buggy-version/Android.MygodSpeechSynthesizer.src.main.java.tk.mygod.speech.synthesizer.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "089c69fe4375442d70f4ce73b3977a1947236ef3", "Url": "https://api.github.com/repos/Mygod/MygodSpeechSynthesizer", "Date": "2014-12-13T14:45:10Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (engine.isDevMode()) { engine.render(response.getOutputStream(), \"errors/500.html\", e); }else { org.rythmengine.spring.web.RythmExceptionHandler.getInternalServerErrorVisitor().visit(e); java.util.Map<java.lang.String, java.lang.Object> args = new java.util.HashMap<java.lang.String, java.lang.Object>(); args.put(\"message\", \"Internal server error\"); args.put(\"attachment\", e); java.lang.String s = engine.render(\"errors/prod/500.html\", args); org.rythmengine.utils.IO.writeContent(s, response.getWriter()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4290/buggy-version/src.main.java.org.rythmengine.spring.web.RythmView.java", "BodyUseAPI": ["org.rythmengine.RythmEngine.render(response.getOutputStream(),java.lang.String,org.rythmengine.exception.RythmException)", "org.rythmengine.RythmEngine.render(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "53610b617f876fad455b03123412cced2b361874", "Url": "https://api.github.com/repos/greenlaw110/spring-rythm", "Date": "2014-08-31T00:17:16Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (highScore == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6420/buggy-version/HospitalGame_Business.src.business.BusinessHighScore.java", "BodyUseAPI": [], "Fixed commit": "91d14967a79473398877f67c3fcfd510f75acc99", "Url": "https://api.github.com/repos/Frede175/HospitalGame", "Date": "2017-12-05T20:28:23Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.retrieve().clone()", "game.retrieve().clone()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(java.util.Arrays.equals(ar, ar2))) { game.getBoard().setBoard(ar); update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6028/buggy-version/src.controller.GameController.java", "BodyUseAPI": ["game.getBoard().setBoard(int[])"], "Fixed commit": "b92b9292f5764e44cc2ddd6003f253a944fbf1b0", "Url": "https://api.github.com/repos/sfostine/2048", "Date": "2015-05-22T03:33:52Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Objects.equals(query, \"exit\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3153/buggy-version/src.main.java.com.ClientMongoApplication.java", "BodyUseAPI": [], "Fixed commit": "d5676a3467ca88a3cd7e85a3724723e9fd44312b", "Url": "https://api.github.com/repos/ZavertalyukVadim/custom-mongodb-client", "Date": "2017-07-09T23:51:55Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (energy > 0) { double rf = energy * (CompatibilityType.THERMAL_EXPANSION.ratio); if ((rf > 0) && (rf <= 1)) { rf = 1; } return ((long) ((((cofh.api.energy.IEnergyHandler) (handler)).extractEnergy(direction, ((int) (rf)), (!doExtract))) * (CompatibilityType.THERMAL_EXPANSION.reciprocal_ratio))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2095/buggy-version/src.main.java.universalelectricity.compatibility.ModuleThermalExpansion.java", "BodyUseAPI": [], "Fixed commit": "d24025f59fe63ad6041cd9c2b55368f14fe27db0", "Url": "https://api.github.com/repos/Universal-Electricity/Universal-Electricity", "Date": "2014-06-06T13:54:05Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.angelsl.bukkit.jxpl.JxplPlugin.loadedPlugins.size()) > 0) { org.angelsl.bukkit.jxpl.JxplPlugin.l.log(java.util.logging.Level.INFO, \"jxpl was reloaded. Clearing loaded scripts...\"); org.angelsl.bukkit.jxpl.JxplPlugin.loadedPlugins.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2607/buggy-version/jxpl.src.org.angelsl.bukkit.jxpl.JxplPlugin.java", "BodyUseAPI": ["java.util.ArrayList<org.angelsl.bukkit.jxpl.ScriptPlugin>.clear()"], "Fixed commit": "040c7e3c36866a18e8ab5e25de1e71a7ea40f334", "Url": "https://api.github.com/repos/angelsl/jxpl", "Date": "2011-03-06T02:19:18Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (thumb == null) { mThumb.recycle(); mThumb = null; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1630/buggy-version/src.com.tzapps.tzpalette.data.PaletteData.java", "BodyUseAPI": [], "Fixed commit": "762be56476925f4f45bab9b8f817b6b401aa1401", "Url": "https://api.github.com/repos/TianziHou/tzPalette", "Date": "2013-10-02T16:51:37Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getModifiers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.reflect.Modifier.isFinal(mod)) || (java.lang.reflect.Modifier.isStatic(mod))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3970/buggy-version/runtimes.client-runtime.src.main.java.com.microsoft.rest.Validator.java", "BodyUseAPI": [], "Fixed commit": "19421e30b586a54d1c7bfe4ac983a55fb6e4b760", "Url": "https://api.github.com/repos/martinsawicki/azure-sdk-for-java", "Date": "2016-09-21T18:56:31Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i == 166) && (j == 166)) { r = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4107/buggy-version/src.RayTracer.java", "BodyUseAPI": [], "Fixed commit": "ab3d47e8aa34b1c563fe0bff5c81d8b50d495d74", "Url": "https://api.github.com/repos/itaiyifrach/RayCasting", "Date": "2017-06-03T14:04:07Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i == 166) && (j == 167)) { r = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4107/buggy-version/src.RayTracer.java", "BodyUseAPI": [], "Fixed commit": "ab3d47e8aa34b1c563fe0bff5c81d8b50d495d74", "Url": "https://api.github.com/repos/itaiyifrach/RayCasting", "Date": "2017-06-03T14:04:07Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<com.github.devnied.emvnfccard.iso7816emv.ITag, com.github.devnied.emvnfccard.parser.apdu.annotation.AnnotationData>.get(tal.getTag())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (ann != null) { ann.setSize(((tal.getLength()) * (fr.devnied.bitlib.BitUtils.BYTE_SIZE))); ret.add(ann); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3508/buggy-version/library.src.main.java.com.github.devnied.emvnfccard.parser.apdu.impl.AbstractByteBean.java", "BodyUseAPI": ["com.github.devnied.emvnfccard.parser.apdu.annotation.AnnotationData.setSize(((tal.getLength()) * (fr.devnied.bitlib.BitUtils.BYTE_SIZE)))", "java.util.Collection<com.github.devnied.emvnfccard.parser.apdu.annotation.AnnotationData>.add(com.github.devnied.emvnfccard.parser.apdu.annotation.AnnotationData)"], "Fixed commit": "e82ce6d4c6097ea783b7847fba926a0ecd84388c", "Url": "https://api.github.com/repos/devnied/EMV-NFC-Paycard-Enrollment", "Date": "2014-08-31T22:23:33Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.devnied.emvnfccard.adapter.TransactionsAdapter.getChild(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((transaction.getTransactionType()) != null) { type.setText(com.github.devnied.emvnfccard.utils.ViewUtils.getStringRessourceByName(parent.getContext(), (\"transaction_type_\" + (transaction.getTransactionType().getKey())))); }else { type.setText(parent.getContext().getString(R.string.transaction_unknown)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3508/buggy-version/sample.src.main.java.com.github.devnied.emvnfccard.adapter.TransactionsAdapter.java", "BodyUseAPI": ["com.github.devnied.emvnfccard.model.EmvTransactionRecord.getTransactionType()", "android.widget.TextView.setText(com.github.devnied.emvnfccard.utils.ViewUtils.getStringRessourceByName(parent.getContext(), (\"transaction_type_\" + (transaction.getTransactionType().getKey()))))", "transaction.getTransactionType().getKey()", "com.github.devnied.emvnfccard.utils.ViewUtils.getStringRessourceByName(parent.getContext(),(\"transaction_type_\" + (transaction.getTransactionType().getKey())))"], "Fixed commit": "e82ce6d4c6097ea783b7847fba926a0ecd84388c", "Url": "https://api.github.com/repos/devnied/EMV-NFC-Paycard-Enrollment", "Date": "2014-08-31T22:23:33Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((merchantDialog) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1955/buggy-version/illaclient.src.illarion.client.world.Player.java", "BodyUseAPI": [], "Fixed commit": "044509d59feb86a5c6b96364121bb853d35d83cd", "Url": "https://api.github.com/repos/mkaring/Illarion-Java", "Date": "2012-08-09T21:32:41Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (originalLog != null) { java.lang.System.setProperty(org.perfcake.maven.ScenarioRunMojo.LOG4J2_CONFIG_PROPERTY, originalLog); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/9169/buggy-version/perfcake-maven-plugin.src.main.java.org.perfcake.maven.ScenarioRunMojo.java", "BodyUseAPI": ["java.lang.System.setProperty(java.lang.String,java.lang.String)"], "Fixed commit": "d53a624b1504c74655476de24d9aebd33ae48cd4", "Url": "https://api.github.com/repos/PerfCake/PerfCake", "Date": "2016-09-16T20:30:55Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (token == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6079/buggy-version/src.main.java.ge.edu.freeuni.sdp.xo.rooms.service.RoomsService.java", "BodyUseAPI": [], "Fixed commit": "95dc43edb0a6a17613d39a1ddfcd4f0f6d80eda2", "Url": "https://api.github.com/repos/freeuni-sdp/xo-rooms", "Date": "2015-06-28T20:16:52Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.group(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((charge == 0) && (!(com.google.common.base.Strings.isNullOrEmpty(chargeSign)))) charge = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5750/buggy-version/msdk-spectra.msdk-spectra-isotopepatterns.src.main.java.io.github.msdk.spectra.isotopepattern.IsotopePatternGeneratorAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "ab449ffeca050b6289cbea1039e83d423cd95893", "Url": "https://api.github.com/repos/dyrlund/msdk", "Date": "2016-02-16T00:05:04Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (missing.isEmpty()) { try { callback.start(); } catch (java.lang.Exception e) { ActiveMQOsgiLogger.LOGGER.errorStartingBroker(e, name); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8963/buggy-version/artemis-server-osgi.src.main.java.org.apache.activemq.artemis.osgi.ProtocolTracker.java", "BodyUseAPI": [], "Fixed commit": "59ec22962bc73a361009d62c8975a0c8acad77cc", "Url": "https://api.github.com/repos/tabish121/activemq-artemis", "Date": "2017-09-29T23:43:25Z"},
{"Line": "=>1018", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((prefix != null) && ((prefix.length()) == 0)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4688/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.reasoner-impl.src.main.java.com.ge.research.sadl.reasoner.ConfigurationManager.java", "BodyUseAPI": [], "Fixed commit": "a59c818cd4c954dc7dc4193a5a8488501e89de18", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2017-02-15T19:16:58Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((-120) < (mCurrentDegree)) && ((mCurrentDegree) < (-60))) { if (!isReverse) { cv.next(); }else { cv.prev(); } }else if (((mCurrentDegree) < (-150)) || ((mCurrentDegree) > 150)) { if (!isReverse) { cv.back(); }else { cv.front(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6003/buggy-version/KyoroTextViewer.src.info.kyorohiro.helloworld.textviewer.manager.MyCircleControllerEvent.java", "BodyUseAPI": [], "Fixed commit": "521223de6ddd9942ae9d312b71975ec7fc72cf8a", "Url": "https://api.github.com/repos/kyorohiro/KyoroHelloAndroid", "Date": "2012-11-08T16:00:04Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((secretAlphabet.length()) != 30) { throw new java.lang.IllegalArgumentException(\"Ung\u00fcltiges Alphabet\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5468/buggy-version/A12.src.hambergerkalaunerorosz.MonoalphabeticCipher.java", "BodyUseAPI": [], "Fixed commit": "30fd67f6f05bf96b4b074ef5fc1c01789d8a75ed", "Url": "https://api.github.com/repos/TGMpkalauner/SEW_A12", "Date": "2014-02-19T14:06:54Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mode.equals(Constants.MODE_ADD)) { com.praszapps.owetracker.ui.fragment.DueFragment.cld = java.util.Calendar.getInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5783/buggy-version/OweTracker-TrackYourDues.src.com.praszapps.owetracker.ui.fragment.DueFragment.java", "BodyUseAPI": [], "Fixed commit": "d9d1f63639d9d7e875431afc7ee45b3d76956e7a", "Url": "https://api.github.com/repos/PraszApps/praszapps-duetracker", "Date": "2013-09-03T08:55:34Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jsonArray.getJSONObject(i).getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (filename.contains(com.darrelld.simpleglacier.Main._BASE64_STRIP_TEXT)) { filename = filename.substring(com.darrelld.simpleglacier.Main._BASE64_FIX_POSITION, filename.indexOf(\"</p>\")); filename = new java.lang.String(org.apache.commons.codec.binary.Base64.decodeBase64(filename.getBytes())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/574/buggy-version/com.darrelld.simpleglacier.Main.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "55a9ac5206bb5c492876580163f65edab664ba3b", "Url": "https://api.github.com/repos/darrell-d/freeze", "Date": "2015-05-12T19:01:29Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parity.equals(\"0 + 0\")) { tableParity.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3644/buggy-version/src.ie.teamchile.smartapp.activities.ServiceUserActivity.java", "BodyUseAPI": [], "Fixed commit": "045efe02c5fc3899e4039986e0119953f5109073", "Url": "https://api.github.com/repos/otormaigh/SMART", "Date": "2015-03-30T11:38:56Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((choreographer) != null) { choreographer.postFrameCallbackDelayed(this, com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper.CHOREOGRAPHER_SAMPLE_DELAY_MILLIS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5549/buggy-version/library.core.src.main.java.com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper.java", "BodyUseAPI": [], "Fixed commit": "b11f7fa9d87f16eb8abff6f1e53b496d0fa2dc87", "Url": "https://api.github.com/repos/michalliu/Google_ExoPlayer", "Date": "2017-07-12T11:11:30Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentWeight < 0) { this.currentWeight = 0; }else { this.currentWeight = currentWeight; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7837/buggy-version/src.src.Scale.java", "BodyUseAPI": [], "Fixed commit": "3afb0cb929f389702df2db5a09a7cae78d65a7c6", "Url": "https://api.github.com/repos/biharygergo/Pooortal", "Date": "2016-05-16T17:41:35Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ai.Board.getAllReachablePositions(ai.PositionType)", "ai.Board.findTreasure(gameState.getTreasure())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((treasurePosition != null) && (reachablePositions.contains(new ai.Position(treasurePosition)))) && (!(curPosition.equals(new ai.Position(treasurePosition))))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2623/buggy-version/src.ai.AlphaMazeLevel2.java", "BodyUseAPI": [], "Fixed commit": "ab420f4fb338527fa165a38a87764db8381421a6", "Url": "https://api.github.com/repos/cxan96/MazeNet", "Date": "2017-07-03T06:08:58Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((requestDoc.getAuthnRequest().getNameIDPolicy()) != null) { request.setAttribute(\"NameIDFormat\", requestDoc.getAuthnRequest().getNameIDPolicy().getFormat()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4647/buggy-version/src.main.java.org.guanxi.idp.service.saml2.WebBrowserSSOAuthHandler.java", "BodyUseAPI": ["requestDoc.getAuthnRequest().getNameIDPolicy()", "requestDoc.getAuthnRequest().getNameIDPolicy().getFormat()", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,requestDoc.getAuthnRequest().getNameIDPolicy().getFormat())", "org.guanxi.xal.saml_2_0.protocol.AuthnRequestDocument.getAuthnRequest()"], "Fixed commit": "9e9fe283b483f280f90f09308d765ed75d0ebf6a", "Url": "https://api.github.com/repos/guanxi/guanxi-idp", "Date": "2011-03-24T11:08:34Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((table.getState()) == (mage.constants.TableState.SIDEBOARDING)) && ((table.getMatch()) != null)) { mage.game.match.MatchPlayer mPlayer = table.getMatch().getPlayer(playerId); if (mPlayer != null) { deck.setName(mPlayer.getDeck().getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4439/buggy-version/Mage.Server.src.main.java.mage.server.TableController.java", "BodyUseAPI": ["mage.game.Table.getMatch()", "table.getMatch().getPlayer(java.util.UUID)"], "Fixed commit": "78df43fd30850568c6494fb12c1f9d8415ef850f", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2015-03-18T23:54:04Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataScreenPager) == null) { android.util.Log.v(com.vegnab.vegnab.DataEntryContainerFragment.LOG_TAG, \"dataScreenPager is null\"); }else { android.util.Log.v(com.vegnab.vegnab.DataEntryContainerFragment.LOG_TAG, (\"dataScreenPager: \" + (dataScreenPager.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2584/buggy-version/src.com.vegnab.vegnab.DataEntryContainerFragment.java", "BodyUseAPI": [], "Fixed commit": "687a45da7393f8976142b3e7124d3e74491820e2", "Url": "https://api.github.com/repos/rickshory/VegNab", "Date": "2015-03-15T18:50:21Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (cm.containsKey(\"minWriteBufferNumberToMerge\")) { cfOptions.setMinWriteBufferNumberToMerge(org.yamcs.YConfiguration.getInt(cm, \"minWriteBufferNumberToMerge\")); options.setMinWriteBufferNumberToMerge(org.yamcs.YConfiguration.getInt(cm, \"minWriteBufferNumberToMerge\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7622/buggy-version/yamcs-core.src.main.java.org.yamcs.yarch.rocksdb.RdbConfig.java", "BodyUseAPI": [], "Fixed commit": "6a1764a25f773e824782106bbc41409e247ed9ce", "Url": "https://api.github.com/repos/yamcs/yamcs", "Date": "2016-07-26T22:15:37Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (fsId == null) { options.add(new com.emc.vipr.model.catalog.AssetOption(policyRestRep.getId(), policyRestRep.getName())); }else if (((policyRestRep.getAssignedResources()) != null) && (!(policyRestRep.getAssignedResources().isEmpty()))) { for (com.emc.storageos.model.NamedRelatedResourceRep resource : policyRestRep.getAssignedResources()) { if (resource.getId().equals(fsId)) { options.add(new com.emc.vipr.model.catalog.AssetOption(policyRestRep.getId(), policyRestRep.getName())); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3170/buggy-version/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.asset.providers.FileProvider.java", "BodyUseAPI": ["resource.getId().equals(java.net.URI)"], "Fixed commit": "a8d06e1ba71cfe7ccb4935f269839290e93de321", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-03-31T06:29:31Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.danfickle.cpptojavasourceconverter.ExpressionModels.getPlainString(com.github.danfickle.cpptojavasourceconverter.ExpressionModels.MExpression)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (plain != null) { return java.lang.String.format(\"%s.addressOf()\", plain); }else { java.lang.String lhs = com.github.danfickle.cpptojavasourceconverter.ExpressionModels.getStringLhs(this.operand); java.lang.String rhs = com.github.danfickle.cpptojavasourceconverter.ExpressionModels.getStringRhs(this.operand); return java.lang.String.format(\"%s.%s.addressOf()\", lhs, rhs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4667/buggy-version/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String)"], "Fixed commit": "9bb452e3d86447a2d9e0c6db6876a51ffa70ea1e", "Url": "https://api.github.com/repos/danfickle/cpp-to-java-source-converter", "Date": "2014-01-24T07:56:22Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (artistId == (-1)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7510/buggy-version/apollo.src.com.andrew.apollo.loaders.ArtistAlbumLoader.java", "BodyUseAPI": [], "Fixed commit": "863da7712ffc70835b2323d35a51d51b148abc7c", "Url": "https://api.github.com/repos/gubatron/frostwire-android", "Date": "2015-01-05T18:28:03Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((statement) instanceof salsa_lite.compiler.definitions.CBlock)) code += \";\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8826/buggy-version/compiler.definitions.CForStatement.java", "BodyUseAPI": [], "Fixed commit": "c1dda4cb7a9872fa1884d630ccaed4e5c1e3140d", "Url": "https://api.github.com/repos/travisdesell/salsa_lite", "Date": "2012-03-28T19:49:22Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (match) { event.setCommand(\"commandhelper null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6837/buggy-version/src.main.java.com.sk89q.commandhelper.CommandHelperServerListener.java", "BodyUseAPI": [], "Fixed commit": "834b23629e59174dc84bb2a5cd9773cb098af995", "Url": "https://api.github.com/repos/EngineHub/CommandHelper", "Date": "2011-09-03T02:38:20Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((govsystem.controller.User) (httpSession.getAttribute(\"user\"))).getIdentityCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(\"1\".equals(identityFlag))) { mav.setViewName(\"/front-end/error\"); return mav; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2350/buggy-version/src.govsystem.controller.FrontEndController.java", "BodyUseAPI": [], "Fixed commit": "ce450efd48daacd5fc6f9f10da594c8bfd5c092c", "Url": "https://api.github.com/repos/caipengbo/GovSystem", "Date": "2017-04-27T03:19:42Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!newTimestamp) { newEntries.addAll(entityList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3123/buggy-version/nifi-nar-bundles.nifi-standard-bundle.nifi-standard-processors.src.main.java.org.apache.nifi.processors.standard.AbstractListProcessor.java", "BodyUseAPI": [], "Fixed commit": "d39067ede6b7ef03b211e2d040db244018fc510f", "Url": "https://api.github.com/repos/apache/nifi", "Date": "2016-01-13T18:30:05Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (appVariantContext.getAtlasExtension().getTBuildConfig().isFastProguard()) { return com.android.build.gradle.internal.pipeline.TransformManager.CONTENT_CLASS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8666/buggy-version/atlas-gradle-plugin.atlas-plugin.src.main.java.com.taobao.android.builder.tasks.transform.AtlasProguardTransform.java", "BodyUseAPI": [], "Fixed commit": "23336e52de2fc9c85dd4afd40aa3a1768542d798", "Url": "https://api.github.com/repos/alibaba/atlas", "Date": "2017-06-20T01:52:49Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["visitor.IndexExprVisitor.getHighkey()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (upperBound != null) { if ((indexVisitor.isHighopen()) == false) upperBound = upperBound + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5159/buggy-version/src.visitor.PhysicalPlanBuilder.java", "BodyUseAPI": [], "Fixed commit": "6f289f8943e1820350d70f16e0323c3b8e7eec25", "Url": "https://api.github.com/repos/linitan/CS5321-database-Practicum", "Date": "2017-12-02T16:46:35Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["visitor.IndexExprVisitor.getLowkey()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (lowerBound != null) { if ((indexVisitor.isLowopen()) == false) lowerBound = lowerBound - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5159/buggy-version/src.visitor.PhysicalPlanBuilder.java", "BodyUseAPI": [], "Fixed commit": "6f289f8943e1820350d70f16e0323c3b8e7eec25", "Url": "https://api.github.com/repos/linitan/CS5321-database-Practicum", "Date": "2017-12-02T16:46:35Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.highopen) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5159/buggy-version/src.visitor.IndexExprVisitor.java", "BodyUseAPI": [], "Fixed commit": "6f289f8943e1820350d70f16e0323c3b8e7eec25", "Url": "https://api.github.com/repos/linitan/CS5321-database-Practicum", "Date": "2017-12-02T16:46:35Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.lowopen) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5159/buggy-version/src.visitor.IndexExprVisitor.java", "BodyUseAPI": [], "Fixed commit": "6f289f8943e1820350d70f16e0323c3b8e7eec25", "Url": "https://api.github.com/repos/linitan/CS5321-database-Practicum", "Date": "2017-12-02T16:46:35Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Major.dpLookup(java.lang.String,int[][])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bestCode != 0) { dpTable[j][i] = bestCode + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4539/buggy-version/Major.java", "BodyUseAPI": [], "Fixed commit": "cd1783712867c1c23aa4ec27628af85265f67c72", "Url": "https://api.github.com/repos/dmdque/major-system", "Date": "2015-03-17T03:46:33Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (min == (java.lang.Integer.MAX_VALUE)) { return 0; }else { return min; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4539/buggy-version/Major.java", "BodyUseAPI": [], "Fixed commit": "cd1783712867c1c23aa4ec27628af85265f67c72", "Url": "https://api.github.com/repos/dmdque/major-system", "Date": "2015-03-17T03:46:33Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (errorMessage != null) { req.setAttribute(\"errorMessage\", errorMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3788/buggy-version/src.edu.ycp.cs320.groupProject.servlet.LoginServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "6d9926658261514c0ed0c70acb61032de3515d5b", "Url": "https://api.github.com/repos/bruser15/CS320VoiceChat", "Date": "2017-04-25T16:29:07Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["im.tox.antox.ToxSingleton.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(toxSingleton.db.isOpen())) toxSingleton.db = toxSingleton.mDbHelper.getWritableDatabase();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5398/buggy-version/app.src.main.java.im.tox.antox.ToxService.java", "BodyUseAPI": ["toxSingleton.mDbHelper.getWritableDatabase()"], "Fixed commit": "4a1b8ad090e8c636da8bd8e1f84f95072d3e27e9", "Url": "https://api.github.com/repos/ollieh/Antox", "Date": "2014-03-04T19:43:25Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["im.tox.antox.ToxSingleton.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(toxSingleton.db.isOpen())) toxSingleton.db = toxSingleton.mDbHelper.getWritableDatabase();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5398/buggy-version/app.src.main.java.im.tox.antox.ToxService.java", "BodyUseAPI": ["toxSingleton.mDbHelper.getWritableDatabase()"], "Fixed commit": "4a1b8ad090e8c636da8bd8e1f84f95072d3e27e9", "Url": "https://api.github.com/repos/ollieh/Antox", "Date": "2014-03-04T19:43:25Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["handlers.KeyHandler.convertToKey(java.awt.event.KeyEvent)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (key != null) { handleKeyRelease(handlers.KeyHandler.convertToKey(keyEvent)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/564/buggy-version/src.main.java.layers.HeadLayer.java", "BodyUseAPI": [], "Fixed commit": "070b1c30639da3189ad0c3d650ea43d54777c6eb", "Url": "https://api.github.com/repos/tcbaars/TI2206_Group0", "Date": "2015-09-10T18:59:53Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["handlers.KeyHandler.convertToKey(java.awt.event.KeyEvent)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (key != null) { handleKeyPress(handlers.KeyHandler.convertToKey(keyEvent)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/564/buggy-version/src.main.java.layers.HeadLayer.java", "BodyUseAPI": [], "Fixed commit": "070b1c30639da3189ad0c3d650ea43d54777c6eb", "Url": "https://api.github.com/repos/tcbaars/TI2206_Group0", "Date": "2015-09-10T18:59:53Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((resultOpenSearch) == null) || ((resultOpenSearch.size()) == 0)) return java.util.Collections.emptyList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5566/buggy-version/initial.src.main.java.pt.archive.controller.ImageSearchResultsController.java", "BodyUseAPI": [], "Fixed commit": "6b50b02d1eb1757591fff689291a2c1d76755ef4", "Url": "https://api.github.com/repos/arquivo/getimagesWS", "Date": "2016-11-29T19:00:50Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rss.errorCount) == 5) bot.msg(rss.channel, ((\"RSS News \" + (rss.tag)) + \" has failed 5 times in a row!\")); else if ((rss.errorCount) == 72) bot.msg(rss.channel, ((\"RSS News \" + (rss.tag)) + \" has failed the last 6h!\")); else if (((rss.errorCount) % 288) == 0) bot.msg(rss.channel, ((\"RSS News \" + (rss.tag)) + \" has failed all day!\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6339/buggy-version/src.main.java.no.kvikshaug.gh.modules.RssNews.java", "BodyUseAPI": ["no.kvikshaug.gh.Grouphug.msg(java.lang.String,java.lang.String)", "no.kvikshaug.gh.Grouphug.msg(java.lang.String,java.lang.String)", "no.kvikshaug.gh.Grouphug.msg(java.lang.String,java.lang.String)"], "Fixed commit": "8869af64d01b8826e9a9463a7d9a3811acc5f1fe", "Url": "https://api.github.com/repos/kenborge/grouphugs", "Date": "2011-10-11T17:00:02Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((costMatrix.length) < row) && ((costMatrix[row].length) < col)) { distanceMatrix[row][col] = newValue; theProblemHasBeenModified = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2615/buggy-version/jmetalsp-problem.src.main.java.org.uma.jmetalsp.problem.tsp.DynamicMultiobjectiveTSP.java", "BodyUseAPI": [], "Fixed commit": "955d4bfcf68f60342753ae87ce8859c8d2e81f98", "Url": "https://api.github.com/repos/jMetal/jMetalSP", "Date": "2017-09-19T11:07:21Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((costMatrix.length) < row) && ((costMatrix[row].length) < col)) { costMatrix[row][col] = newValue; theProblemHasBeenModified = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2615/buggy-version/jmetalsp-problem.src.main.java.org.uma.jmetalsp.problem.tsp.DynamicMultiobjectiveTSP.java", "BodyUseAPI": [], "Fixed commit": "955d4bfcf68f60342753ae87ce8859c8d2e81f98", "Url": "https://api.github.com/repos/jMetal/jMetalSP", "Date": "2017-09-19T11:07:21Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((messageRelation) == null) { relatedMessages = java.util.Collections.emptyMap(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7775/buggy-version/intelligence.src.main.java.de.spektrumprojekt.i.ranker.MessageFeatureContext.java", "BodyUseAPI": [], "Fixed commit": "5a5d3bf9c38fd3b8825c700a0cc61c6518711b9c", "Url": "https://api.github.com/repos/spektrumprojekt/spektrum", "Date": "2013-06-03T11:08:45Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState != null) { recipesPresenter.getRecipesFromDatabase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3213/buggy-version/app.src.main.java.com.rustwebdev.sweetsuite.ui.recipes.RecipesActivity.java", "BodyUseAPI": [], "Fixed commit": "fab389a19b09cbc8668ad1936cec1c0c4d27ce1d", "Url": "https://api.github.com/repos/danielrust/SweetSuite", "Date": "2017-11-06T17:44:43Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.aayaffe.sailingracecoursemanager.activities.GoogleMapsActivity.users.getCurrentUser()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8070/buggy-version/app.src.main.java.com.aayaffe.sailingracecoursemanager.activities.GoogleMapsActivity.java", "BodyUseAPI": [], "Fixed commit": "e279a98e53b7f94bc216fb40e34bde85f363ec8e", "Url": "https://api.github.com/repos/aayaffe/SailingRaceCourseManager", "Date": "2017-01-06T18:45:31Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (state instanceof org.gatein.portal.mop.layout.ElementState.Window<?>) { org.gatein.portal.impl.mop.ram.Node customization = current.getNode(targetId); org.gatein.portal.mop.layout.ElementState.Window windowState = ((org.gatein.portal.mop.layout.ElementState.Window) (customization.getState())); state = ((org.gatein.portal.mop.layout.ElementState.Window) (state)).builder().state(windowState.state).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6943/buggy-version/component.portal.src.main.java.org.gatein.portal.impl.mop.ram.RamLayoutStore.java", "BodyUseAPI": [], "Fixed commit": "8a099e7353a31df64988926c53bf0dccc2ad6e77", "Url": "https://api.github.com/repos/nttuyen/gatein-portal", "Date": "2013-10-08T22:24:12Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count > 0) { while ((rsp.token().length()) > 0) { rsp = client.get(Client.QueryType.GreaterEqual, rsp.token(), 500); count += rsp.count(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3777/buggy-version/examples.XEventPerf.java", "BodyUseAPI": [], "Fixed commit": "1e55d442c7cb58e0f10e5ebd2ce602984e4df492", "Url": "https://api.github.com/repos/sand-stone/kdb", "Date": "2016-11-08T01:48:07Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((expirationStatus != null) && (expirationStatus.equals(\"Expiration Needed\"))) { exitReason = \"Expiration\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7318/buggy-version/src.trading.engines.OKCoinLiveStrict.java", "BodyUseAPI": [], "Fixed commit": "6aa2e87c30b84316ca724815fc68ccda4c7a35aa", "Url": "https://api.github.com/repos/MatthewPDingle/CSCSPMonitor", "Date": "2015-11-14T18:02:32Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((serviceClass.getName()) != null) && ((service.service.getClassName()) != null)) { if (serviceClass.getName().equals(service.service.getClassName())) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3298/buggy-version/app.src.main.java.net.svglol.autobright.service.WindowChangeService.java", "BodyUseAPI": ["service.service.getClassName()", "java.lang.String.equals(service.service.getClassName())", "java.lang.Class<?>.getName()"], "Fixed commit": "26737057abbdb528adf16bfa696a941cbbaa10ab", "Url": "https://api.github.com/repos/svglol/AutoBright", "Date": "2015-11-05T02:44:50Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mainFragment.getActivity().getPackageManager()", "MainActivity.MainFragment.findAppInfo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((packageInfo.loadIcon(pm)) != null) holder.icon.setImageDrawable(packageInfo.loadIcon(pm));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3298/buggy-version/app.src.main.java.net.svglol.autobright.other.MyRecyclerAdapter.java", "BodyUseAPI": ["android.content.pm.ApplicationInfo.loadIcon(android.content.pm.PackageManager)", "android.widget.ImageView.setImageDrawable(packageInfo.loadIcon(pm))"], "Fixed commit": "26737057abbdb528adf16bfa696a941cbbaa10ab", "Url": "https://api.github.com/repos/svglol/AutoBright", "Date": "2015-11-05T02:44:50Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.N)) { android.os.StrictMode.VmPolicy.Builder builder = new android.os.StrictMode.VmPolicy.Builder(); android.os.StrictMode.setVmPolicy(builder.build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5223/buggy-version/app.src.main.java.com.onelio.myuacloud.Apps.MaterialActivity.java", "BodyUseAPI": [], "Fixed commit": "01605caf47b506234c745a690cb4a5906ac5d5fb", "Url": "https://api.github.com/repos/Onelio/MyUACloud", "Date": "2017-02-20T22:53:01Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((url != null) && (!(url.startsWith(\"http://\")))) && (!(url.startsWith(\"https://\")))) { url = \"http://\" + url; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2701/buggy-version/src.main.com.wingedsoft.portmonitor.data.Target.java", "BodyUseAPI": [], "Fixed commit": "598206bd4c3bfba15bdd841e14c604d16c4d1e25", "Url": "https://api.github.com/repos/javiyu/portmonitor", "Date": "2013-06-30T07:52:04Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nextChapter) != null) { if (!(nextChapter.isDownloaded())) { if (pm.getBoolean(\"download_next_chapter_automatically\", false)) { try { ar.rulosoft.mimanganu.services.DownloadPoolService.addChapterDownloadPool(this, nextChapter, false); } catch (java.lang.Exception e) { android.util.Log.e(\"ServB\", \"Download add pool error\", e); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3373/buggy-version/app.src.main.java.ar.rulosoft.mimanganu.ActivityReader.java", "BodyUseAPI": [], "Fixed commit": "ffd02d58bde4eac4f4d1737093fb4d69eac1c52b", "Url": "https://api.github.com/repos/xtj-9182/MiMangaNu", "Date": "2016-06-03T11:59:59Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nextChapter) != null) { if (!(nextChapter.isDownloaded())) { if (pm.getBoolean(\"download_next_chapter_automatically\", false)) { try { ar.rulosoft.mimanganu.services.DownloadPoolService.addChapterDownloadPool(this, nextChapter, false); } catch (java.lang.Exception e) { android.util.Log.e(\"ServB\", \"Download add pool error\", e); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3373/buggy-version/app.src.main.java.ar.rulosoft.mimanganu.ActivityPagedReader.java", "BodyUseAPI": [], "Fixed commit": "ffd02d58bde4eac4f4d1737093fb4d69eac1c52b", "Url": "https://api.github.com/repos/xtj-9182/MiMangaNu", "Date": "2016-06-03T11:59:59Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.shiro.SecurityUtils.getSubject()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((subject.isAuthenticated()) || (subject.isRemembered())) { subject.logout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6435/buggy-version/src.main.java.com.teardowall.controllers.AccountController.java", "BodyUseAPI": ["org.apache.shiro.subject.Subject.logout()"], "Fixed commit": "8c826064f1d2476cdbb51ff56b4d2f3da4e878b7", "Url": "https://api.github.com/repos/liyang1069/teardowall", "Date": "2017-01-11T06:24:42Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((partyInformation.firstName.equals(\"\")) && (partyInformation.lastName.equals(\"\"))) { name = partyInformation.companyName; }else { name = (((((partyInformation.prefix.equals(\"\") ? \"\" : (partyInformation.prefix) + \" \") + (partyInformation.firstName.equals(\"\") ? \"\" : (partyInformation.firstName) + \" \")) + (partyInformation.middleInitial.equals(\"\") ? \"\" : (partyInformation.middleInitial) + \". \")) + (partyInformation.lastName.equals(\"\") ? \"\" : partyInformation.lastName)) + (partyInformation.suffix.equals(\"\") ? \"\" : \" \" + (partyInformation.suffix))) + (partyInformation.nameTitle.equals(\"\") ? \"\" : \", \" + (partyInformation.nameTitle)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2342/buggy-version/src.main.java.parker.serb.REP.REPHeaderPanel.java", "BodyUseAPI": ["partyInformation.firstName.equals(java.lang.String)", "partyInformation.middleInitial.equals(java.lang.String)", "partyInformation.prefix.equals(java.lang.String)", "partyInformation.lastName.equals(java.lang.String)", "partyInformation.nameTitle.equals(java.lang.String)", "partyInformation.suffix.equals(java.lang.String)"], "Fixed commit": "1b411b50a892530eb59bd3e91b5ebe69c7f771cf", "Url": "https://api.github.com/repos/CurrentlyNotSet/SERB", "Date": "2016-12-15T21:44:23Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s == 0) { R.data[indexRgb] = v; G.data[indexRgb] = v; B.data[indexRgb] = v; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4505/buggy-version/main.ip.src.boofcv.alg.color.ColorHsv.java", "BodyUseAPI": [], "Fixed commit": "3ecf17b06051acf9e158795f2e65369c2a790c1d", "Url": "https://api.github.com/repos/lessthanoptimal/BoofCV", "Date": "2014-08-25T21:13:36Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((discoveryURI) == null) { throw new java.lang.RuntimeException(\"Discovery URI unexpectedly null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6605/buggy-version/qpid-jms-discovery.src.main.java.org.apache.qpid.jms.provider.discovery.multicast.MulticastDiscoveryAgent.java", "BodyUseAPI": [], "Fixed commit": "84045ed6d76bd434369cd8822dc7823934ecc7d8", "Url": "https://api.github.com/repos/apache/qpid-jms", "Date": "2014-10-02T22:44:50Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (MealFormat.SCHEDULED.equals(order.getMealFormat())) { result = org.apache.commons.lang3.StringUtils.replace(result, \"${price}\", java.lang.String.valueOf(order.getMeal().getPrice())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5205/buggy-version/tiffinapp.src.main.java.com.rns.tiffeat.web.util.MailUtil.java", "BodyUseAPI": ["org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String)", "order.getMeal().getPrice()", "com.rns.tiffeat.web.bo.domain.CustomerOrder.getMeal()", "java.lang.String.valueOf(order.getMeal().getPrice())"], "Fixed commit": "4e578ba9d6fa8751a7d0c8c148bf260d62f08be0", "Url": "https://api.github.com/repos/ajaxkulkarni/dabbaweb", "Date": "2016-03-21T19:51:38Z"},
{"Line": "=>671", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (alreadyDone.contains(ontology)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/95/buggy-version/flexodesktop.model.flexofoundation.src.main.java.org.openflexo.foundation.ontology.OntologyObject.java", "BodyUseAPI": [], "Fixed commit": "3bfa0cec85cccbfbfec62e6ab3ee8c6921badf1e", "Url": "https://api.github.com/repos/bluepimento/openflexo", "Date": "2011-10-12T12:46:11Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(distributed_fs.utils.Utils.testing)) distributed_fs.net.NetworkMonitor.LOGGER.setLevel(Utils.logLevel);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8618/buggy-version/src.distributed_fs.net.NetworkMonitor.java", "BodyUseAPI": [], "Fixed commit": "32ebe9d46e7a10c4e9f7b643af6eda25d11c8595", "Url": "https://api.github.com/repos/sceccotti89/Distributed-File-System", "Date": "2016-05-11T17:13:01Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.imagej.ops.filter.phasecorrelation.PhaseCorrelationPeak.getPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((peakPosition.length) <= i) { translationArray[i][j] = 0; }else { translationArray[i][j] = peakPosition[i]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6788/buggy-version/src.main.java.net.imagej.ops.filter.phasecorrelation.ImgPhaseCorrelationOp.java", "BodyUseAPI": [], "Fixed commit": "8865d026f141e564e642fa0df903d73b39355740", "Url": "https://api.github.com/repos/gab1one/imagej-ops", "Date": "2015-08-17T09:47:51Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (size < 3) { size = 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6788/buggy-version/src.main.java.net.imagej.ops.filter.phasecorrelation.ImgPhaseCorrelationOp.java", "BodyUseAPI": [], "Fixed commit": "8865d026f141e564e642fa0df903d73b39355740", "Url": "https://api.github.com/repos/gab1one/imagej-ops", "Date": "2015-08-17T09:47:51Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(this.isValidToken(charValue))) && (!(this.canGrown(charValue)))) ++(this.currentColumnNumber);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2799/buggy-version/src.main.java.br.ufal.ic.JCAM.LexicalAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "53843c9c982304794966a2d2e3c8a6194813a721", "Url": "https://api.github.com/repos/moabson/JCAM", "Date": "2017-03-07T03:38:45Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (boolReif.isInstantiatedTo(1)) { this.post(); }else if (boolReif.isInstantiatedTo(0)) { this.opposite.post(); }else { new org.chocosolver.solver.constraints.ReificationConstraint(boolReif, this, opposite).post(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1121/buggy-version/src.main.java.org.chocosolver.solver.constraints.Constraint.java", "BodyUseAPI": ["org.chocosolver.solver.variables.BoolVar.isInstantiatedTo(int)", "org.chocosolver.solver.constraints.ReificationConstraint.post()"], "Fixed commit": "200f04c119ae9970dfc5113a8c7b20c6851305f6", "Url": "https://api.github.com/repos/kaktus40/choco3", "Date": "2016-06-29T09:27:17Z"},
{"Line": "=>798", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jkiss.dbeaver.ui.controls.resultset.DBDRowIdentifier.getAttributes()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (idAttributes.isEmpty()) { return org.eclipse.core.runtime.Status.OK_STATUS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2551/buggy-version/plugins.org.jkiss.dbeaver.core.src.org.jkiss.dbeaver.ui.controls.resultset.ResultSetPersister.java", "BodyUseAPI": [], "Fixed commit": "9e2894f0ac57b20afd9156ef75b7a852c4801fee", "Url": "https://api.github.com/repos/dbeaver/dbeaver", "Date": "2017-03-02T12:48:35Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (updatedExtIds.isEmpty()) { org.orcid.pojo.ajaxForm.WorkExternalIdentifier wei = new org.orcid.pojo.ajaxForm.WorkExternalIdentifier(); updatedExtIds.add(wei); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6476/buggy-version/orcid-web.src.main.java.org.orcid.frontend.web.controllers.PeerReviewsController.java", "BodyUseAPI": ["java.util.List<org.orcid.pojo.ajaxForm.WorkExternalIdentifier>.add(org.orcid.pojo.ajaxForm.WorkExternalIdentifier)"], "Fixed commit": "f7bf72f8a1af34e3da34d3f84df9c1a8c17dc5ca", "Url": "https://api.github.com/repos/ORCID/ORCID-Source", "Date": "2015-04-13T21:08:22Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (updatedExtIds.isEmpty()) { org.orcid.pojo.ajaxForm.WorkExternalIdentifier wei = new org.orcid.pojo.ajaxForm.WorkExternalIdentifier(); updatedExtIds.add(wei); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6476/buggy-version/orcid-web.src.main.java.org.orcid.frontend.web.controllers.PeerReviewsController.java", "BodyUseAPI": ["java.util.List<org.orcid.pojo.ajaxForm.WorkExternalIdentifier>.add(org.orcid.pojo.ajaxForm.WorkExternalIdentifier)"], "Fixed commit": "f7bf72f8a1af34e3da34d3f84df9c1a8c17dc5ca", "Url": "https://api.github.com/repos/ORCID/ORCID-Source", "Date": "2015-04-13T21:08:22Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(shouldShowCloseBtn)) closeBtn.setVisibility(View.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6186/buggy-version/src.com.wb.nextgen.fragment.AbstractECGalleryViewFragment.java", "BodyUseAPI": [], "Fixed commit": "3316c6e4d71aac2fe50f13bcd5ce32567d73cc3b", "Url": "https://api.github.com/repos/warnerbros/cpe-manifest-android-experience", "Date": "2016-08-03T18:14:26Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.mdsimmo.bomberman.PlayerRep.getPlayerRep(org.bukkit.command.CommandSender)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(rep.switchStates(new io.github.mdsimmo.bomberman.playerstates.GamePlayingState(rep, team)))) { if ((rep.getState()) != null) { io.github.mdsimmo.bomberman.messaging.Message message = Text.PLAYER_BUSY.getMessage(rep); message.put(\"game\", game); io.github.mdsimmo.bomberman.messaging.Chat.sendMessage(message); return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3845/buggy-version/src.main.java.io.github.mdsimmo.bomberman.commands.game.Join.java", "BodyUseAPI": ["io.github.mdsimmo.bomberman.PlayerRep.getState()", "Text.PLAYER_BUSY.getMessage(io.github.mdsimmo.bomberman.PlayerRep)"], "Fixed commit": "a3c9913f02ed77145d69fda45b3b561fb5363fe7", "Url": "https://api.github.com/repos/mdsimmo/Bomberman", "Date": "2015-04-16T05:34:21Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<ais.koutroulis.gr.model.Message>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (elementCounter <= skipElementsNumber) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/954/buggy-version/app.src.main.java.ais.koutroulis.gr.ui.ContentFragment.java", "BodyUseAPI": [], "Fixed commit": "cfedab3fdb423db43d14bebcf638c61e32273376", "Url": "https://api.github.com/repos/chriskoutroulis/MoodleCompanion", "Date": "2016-11-02T16:52:29Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((info.status) == (BatteryInfo.STATUS_UNKNOWN)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4543/buggy-version/src.com.darshancomputing.BatteryIndicatorPro.PredictorCore.java", "BodyUseAPI": [], "Fixed commit": "ce8a949502d10d9f2ac43a2a333a0474647df205", "Url": "https://api.github.com/repos/darshan-/Battery-Indicator-Pro", "Date": "2016-07-18T21:20:00Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLoadingCount) > 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5761/buggy-version/app.src.main.java.com.sewar.hackernews.CommentsFragment.java", "BodyUseAPI": [], "Fixed commit": "8b0ce415c7e5c3553a60a99f5da2653a38a29967", "Url": "https://api.github.com/repos/sewar/hacker-news-browser", "Date": "2015-04-27T03:51:23Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.collections.CollectionUtils.isNotEmpty(persons)) { addPersonRolesToGroup(persons, groupId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6081/buggy-version/coin-api-external-groups.src.main.java.nl.surfnet.coin.teams.service.impl.ApiGrouperDaoImpl.java", "BodyUseAPI": ["nl.surfnet.coin.teams.service.impl.ApiGrouperDaoImpl.addPersonRolesToGroup(java.util.List<nl.surfnet.coin.api.client.domain.Person>,java.lang.String)"], "Fixed commit": "d68144aad01e393162905f237d3444b38a378267", "Url": "https://api.github.com/repos/OpenConext/OpenConext-api", "Date": "2012-09-05T13:37:20Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hexString.matches(\"^[0-9a-fA-F]+$\"))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4241/buggy-version/src.main.java.com.binhex.converter.Converter.java", "BodyUseAPI": [], "Fixed commit": "1dcd87b08385a511c083ef8731e0effd2edfba0e", "Url": "https://api.github.com/repos/sdugene/binhex.converter.java", "Date": "2017-09-02T16:15:28Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (groups.isEmpty()) { clearIncoming(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3700/buggy-version/sandbox.prototype.exec.java-exec.src.main.java.org.apache.drill.exec.physical.impl.SegmentBatch.java", "BodyUseAPI": [], "Fixed commit": "38b37328880c67b34b57956d5014215563181f09", "Url": "https://api.github.com/repos/XingCloud/incubator-drill", "Date": "2013-08-19T09:24:34Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((domainModelXML) != null) { domainModel = new de.uni_potsdam.hpi.bpt.bp2014.jcomparser.xml.DomainModel(processeditorServerUrl); domainModel.initializeInstanceFromXML(domainModelXML); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7214/buggy-version/src.main.java.de.uni_potsdam.hpi.bpt.bp2014.jcomparser.xml.Scenario.java", "BodyUseAPI": [], "Fixed commit": "98dbb35592beb084e68c55b09eebdff71c60bbe1", "Url": "https://api.github.com/repos/BP2014W1/JEngine", "Date": "2015-03-09T16:42:32Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tempWord != null) { java.lang.String tmp = (list.get(((list.size()) - 1))) + tempWord; list.add(tmp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8920/buggy-version/dependency-check-core.src.main.java.org.owasp.dependencycheck.data.cpe.CPEAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "51b554bd335ae3634caae995a79dedb6d3b1eee4", "Url": "https://api.github.com/repos/jeremylong/DependencyCheck", "Date": "2013-08-16T11:15:10Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((d.score) >= 0.08) { final org.apache.lucene.document.Document doc = cpe.getDocument(d.doc); final org.owasp.dependencycheck.data.cpe.IndexEntry entry = new org.owasp.dependencycheck.data.cpe.IndexEntry(); entry.setVendor(doc.get(Fields.VENDOR)); entry.setProduct(doc.get(Fields.PRODUCT)); entry.setSearchScore(d.score); if (!(ret.contains(entry))) { ret.add(entry); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8920/buggy-version/dependency-check-core.src.main.java.org.owasp.dependencycheck.data.cpe.CPEAnalyzer.java", "BodyUseAPI": ["org.owasp.dependencycheck.data.cpe.IndexEntry.setSearchScore(d.score)", "org.owasp.dependencycheck.data.cpe.Index.getDocument(d.doc)"], "Fixed commit": "51b554bd335ae3634caae995a79dedb6d3b1eee4", "Url": "https://api.github.com/repos/jeremylong/DependencyCheck", "Date": "2013-08-16T11:15:10Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (\"N\".equals(nextDirec)) { nextDirect = 1; }else if (\"E\".equals(nextDirec)) { nextDirect = 2; }else if (\"S\".equals(nextDirec)) { nextDirect = 3; }else if (\"W\".equals(nextDirec)) { nextDirect = 4; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7865/buggy-version/src.assignment6.MainGame.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "4eb563bf5b8f94ecce7b65acb63181eba63a8754", "Url": "https://api.github.com/repos/stahc1596/Assignment-6", "Date": "2017-12-12T13:53:09Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(asset.getFormat().equals(\"bpmn2\"))) && (!(asset.getFormat().equals(\"bpmn\")))) { org.jbpm.ruleflow.core.RuleFlowProcess process = readProcess(new java.io.ByteArrayInputStream(content.getXml().getBytes())); if (process != null) { org.drools.guvnor.server.builder.RuleFlowProcessBuilder.updateProcess(process, content.getNodes()); org.jbpm.compiler.xml.XmlRuleFlowProcessDumper dumper = org.jbpm.compiler.xml.XmlRuleFlowProcessDumper.INSTANCE; java.lang.String out = dumper.dump(process); repoAsset.updateContent(out); }else { repoAsset.updateContent(content.getXml()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8035/buggy-version/guvnor-webapp.src.main.java.org.drools.guvnor.server.contenthandler.BPMN2ProcessHandler.java", "BodyUseAPI": [], "Fixed commit": "5a725ceade5d0ecef45a104420085c109ec94236", "Url": "https://api.github.com/repos/droolsjbpm/guvnor", "Date": "2012-06-18T15:44:43Z"},
{"Line": "=>1507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (ic != null) { ic.commitText(mComposing, mComposing.length()); if (!(mEnglishOnly)) clearComposing(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3781/buggy-version/LimeStudio.app.src.main.java.net.toload.main.hd.LIMEService.java", "BodyUseAPI": ["android.view.inputmethod.InputConnection.commitText(java.lang.StringBuilder,int)"], "Fixed commit": "ec93998bdcff68b5878e4a27e99e04e237d4a681", "Url": "https://api.github.com/repos/lime-ime/limeime", "Date": "2015-07-23T14:55:16Z"},
{"Line": "=>1365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedCandidate) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3781/buggy-version/LimeStudio.app.src.main.java.net.toload.main.hd.LIMEService.java", "BodyUseAPI": [], "Fixed commit": "ec93998bdcff68b5878e4a27e99e04e237d4a681", "Url": "https://api.github.com/repos/lime-ime/limeime", "Date": "2015-07-23T14:55:16Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAccount) == null) mAccount = com.fsck.k9.activity.setup.Preferences.getPreferences(this).newAccount();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/9259/buggy-version/src.com.fsck.k9.activity.setup.AccountSetupBasics.java", "BodyUseAPI": [], "Fixed commit": "aa92cd03a103f1092c8ff52cb8f349d6a2121d94", "Url": "https://api.github.com/repos/Uni-/k-9", "Date": "2013-03-05T17:01:54Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAccount) == null) mAccount = com.fsck.k9.activity.setup.Preferences.getPreferences(this).newAccount();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/9259/buggy-version/src.com.fsck.k9.activity.setup.AccountSetupBasics.java", "BodyUseAPI": [], "Fixed commit": "aa92cd03a103f1092c8ff52cb8f349d6a2121d94", "Url": "https://api.github.com/repos/Uni-/k-9", "Date": "2013-03-05T17:01:54Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.System.getProperty(\"os.name\").contains(\"indow\")) { path = path.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4021/buggy-version/src.main.java.com.torrenttunes.client.tools.DataSources.java", "BodyUseAPI": [], "Fixed commit": "7f04674d84ad29e96eefacd981fa5659f57add5d", "Url": "https://api.github.com/repos/dessalines/torrenttunes-client", "Date": "2015-09-07T19:02:50Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((commandName) == \"canceledit\") { operation.Modify.taskBeingEdited = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/532/buggy-version/CS2103.src.Operation.Modify.java", "BodyUseAPI": [], "Fixed commit": "85a2e39f4e3eae2338b543b758157cc325897ee6", "Url": "https://api.github.com/repos/jaejaejae/ramonCS2103", "Date": "2012-06-09T16:46:22Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((prevState) == (gui.MainJFrame.STATE.EDIT)) && ((curState) != (prevState))) && ((edit) == true)) { gui.MainJFrame.logger.debug(\"canceledit\"); logic.JIDLogic.executeCommand(\"canceledit\"); edit = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/532/buggy-version/CS2103.src.gui.MainJFrame.java", "BodyUseAPI": [], "Fixed commit": "85a2e39f4e3eae2338b543b758157cc325897ee6", "Url": "https://api.github.com/repos/jaejaejae/ramonCS2103", "Date": "2012-06-09T16:46:22Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index < 4) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7892/buggy-version/src.no.ntnu.ai.hands.PowerRating.java", "BodyUseAPI": [], "Fixed commit": "49d338b62b79d0e1bad185acbbbecc57510d672a", "Url": "https://api.github.com/repos/nordmoen/IT3105-poker", "Date": "2012-08-23T12:38:34Z"},
{"Line": "=>1269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.peeeq.wurstscript.attributes.names.NameLink.getNameDef()", "de.peeeq.wurstscript.attributes.names.NameLink.getNameDef()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((func.attrIsStatic()) && (!(func2.attrIsStatic()))) { func2.addError(\"Cannot override static function with nonstatic function.\"); }else if ((!(func.attrIsStatic())) && (func2.attrIsStatic())) { func2.addError(\"Cannot override nonstatic function with static function.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7188/buggy-version/de.peeeq.wurstscript.src.de.peeeq.wurstscript.validation.WurstValidator.java", "BodyUseAPI": ["de.peeeq.wurstscript.ast.FuncDef.addError(java.lang.String)", "de.peeeq.wurstscript.ast.FuncDef.attrIsStatic()", "de.peeeq.wurstscript.ast.FuncDef.addError(java.lang.String)", "de.peeeq.wurstscript.ast.FuncDef.attrIsStatic()"], "Fixed commit": "e0d03f64984226ec5b3c5d71c0ed446f00f0e0a0", "Url": "https://api.github.com/repos/peq/WurstScript", "Date": "2013-09-10T22:31:57Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(userData.hasBuildTypeAndFlavor())) { return com.inceptai.expertchat.Utils.EMPTY_STRING; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8956/buggy-version/ExpertChat.app.src.main.java.com.inceptai.expertchat.ExpertChatService.java", "BodyUseAPI": [], "Fixed commit": "dfa55d71ac3caeb5dcbd84194e474aad0232eac2", "Url": "https://api.github.com/repos/InceptAi/dobby-android", "Date": "2017-06-27T00:21:59Z"},
{"Line": "=>864", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((org.ednovo.gooru.client.mvp.shelf.ShelfView.collectionDo.getCollectionItems()) != null) && ((org.ednovo.gooru.client.mvp.shelf.ShelfView.collectionDo.getCollectionItems().size()) != 0)) { resourcesCount = org.ednovo.gooru.client.mvp.shelf.ShelfView.collectionDo.getCollectionItems().size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4137/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.shelf.ShelfView.java", "BodyUseAPI": ["org.ednovo.gooru.shared.model.content.CollectionDo.getCollectionItems()", "org.ednovo.gooru.client.mvp.shelf.ShelfView.collectionDo.getCollectionItems().size()"], "Fixed commit": "72b19f645a0ca5cc707aaefb69c1e7c70f62ea5a", "Url": "https://api.github.com/repos/ssushma/Gooru-Web", "Date": "2014-10-31T06:32:25Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (inputString == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3472/buggy-version/src.com.team7.view.View.java", "BodyUseAPI": [], "Fixed commit": "23fb318517db47d3f2c073ac59991cf64d4c25a2", "Url": "https://api.github.com/repos/COP4331-Team7/Sprint2", "Date": "2017-02-28T03:48:45Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.citygml4j.util.xml.SAXEventBuffer.nextString(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (nsPrefix == null) nsPrefix = javax.xml.XMLConstants.DEFAULT_NS_PREFIX;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6892/buggy-version/src.org.citygml4j.util.xml.SAXEventBuffer.java", "BodyUseAPI": [], "Fixed commit": "89c9a8f9c3e591f58f69a186ee22290aeafa2f47", "Url": "https://api.github.com/repos/citygml4j/citygml4j", "Date": "2017-01-14T12:38:00Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((2 * dims) > (org.tinspin.index.qthypercube2.QuadTreeKD2.DEFAULT_MAX_NODE_SIZE)) { maxNodeSize = 2 * dims; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2770/buggy-version/src.main.java.org.tinspin.index.qthypercube2.QuadTreeKD2.java", "BodyUseAPI": [], "Fixed commit": "d167704ac59ca99cafc1622420f0c518e5dfbc2b", "Url": "https://api.github.com/repos/tzaeschke/tinspin-indexes", "Date": "2017-12-05T14:09:42Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player.getBurstEnabled()) { playerFinish = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2090/buggy-version/src.game.GameScreenState.java", "BodyUseAPI": [], "Fixed commit": "eb94f3fdccf51d807a32c97f6941d1f7373f0415", "Url": "https://api.github.com/repos/geenux/StartRacing", "Date": "2012-05-16T15:18:10Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null == batch_id) || (batch_id.isEmpty())) { return new java.util.ArrayList<com.classapp.db.fees.BatchFees>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5304/buggy-version/ClassDatabase.src.main.java.com.classapp.db.fees.FeesDB.java", "BodyUseAPI": [], "Fixed commit": "0cf4028c223c92b9256d6d478b3f0b59b5659da5", "Url": "https://api.github.com/repos/pundliksarafdar/code", "Date": "2016-03-28T21:05:26Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(values.isEmpty())) { max = java.util.Collections.max(values); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1602/buggy-version/de.bund.bfr.knime.gis.src.de.bund.bfr.knime.gis.views.canvas.highlighting.ValueHighlightCondition.java", "BodyUseAPI": ["java.util.Collections.max(java.util.List<java.lang.Double>)"], "Fixed commit": "e2467f9abbf2a6aa3569f5ae0690dc79f4649a7a", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2014-10-13T11:42:41Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(zeroAsMinimum)) && (!(values.isEmpty()))) { min = java.util.Collections.min(values); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1602/buggy-version/de.bund.bfr.knime.gis.src.de.bund.bfr.knime.gis.views.canvas.highlighting.ValueHighlightCondition.java", "BodyUseAPI": ["java.util.Collections.min(java.util.List<java.lang.Double>)"], "Fixed commit": "e2467f9abbf2a6aa3569f5ae0690dc79f4649a7a", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2014-10-13T11:42:41Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(valueCondition.isZeroAsMinimum())) && (!(values.isEmpty()))) { min = java.util.Collections.min(values); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1602/buggy-version/de.bund.bfr.knime.gis.src.de.bund.bfr.knime.gis.views.canvas.highlighting.LogicalValueHighlightCondition.java", "BodyUseAPI": ["java.util.Collections.min(java.util.List<java.lang.Double>)"], "Fixed commit": "e2467f9abbf2a6aa3569f5ae0690dc79f4649a7a", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2014-10-13T11:42:41Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(values.isEmpty())) { max = java.util.Collections.max(values); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1602/buggy-version/de.bund.bfr.knime.gis.src.de.bund.bfr.knime.gis.views.canvas.highlighting.LogicalValueHighlightCondition.java", "BodyUseAPI": ["java.util.Collections.max(java.util.List<java.lang.Double>)"], "Fixed commit": "e2467f9abbf2a6aa3569f5ae0690dc79f4649a7a", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2014-10-13T11:42:41Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cfs.dao.FundDAO.match(org.genericdao.MatchArg.equalsIgnoreCase(\"symbol\", form.getSymbol()))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((temp.length) != 0) { errors.add(\"Fund Already exist\"); return \"createFund.jsp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7470/buggy-version/src.com.cfs.controller.CreateFund.java", "BodyUseAPI": [], "Fixed commit": "65736a68a46dc2670b6a0291349b0dd34d2f567a", "Url": "https://api.github.com/repos/yuanhsh/cfsweb", "Date": "2015-01-28T04:55:05Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["SteensDS.getResultGraph().getNodeMap().get(xtc.tree.Node)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((NH == null) || (NH.isNull())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6061/buggy-version/c.src.main.java.edu.nyu.cascade.c.pass.alias.dsa.RegionPassImpl.java", "BodyUseAPI": [], "Fixed commit": "bceb5243bb337c91c3053267580877f46f423846", "Url": "https://api.github.com/repos/wei-wang-523/cascade", "Date": "2016-04-22T02:13:36Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.getBytes()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((bytes.length) >= 3) if ((((bytes[0]) == ((byte) (63))) && ((bytes[1]) == ((byte) (67)))) && ((bytes[2]) == ((byte) (82)))) zeile = zeile.substring(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4152/buggy-version/CrazyCore.src.de.st_ddt.crazyutil.locales.CrazyLocale.java", "BodyUseAPI": [], "Fixed commit": "795b96b6e27225b559621435e65798dbc53a2b06", "Url": "https://api.github.com/repos/ST-DDT/Crazy", "Date": "2012-04-04T18:09:08Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (zeile == null) throw new java.lang.NullPointerException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4152/buggy-version/CrazyCore.src.de.st_ddt.crazyutil.locales.CrazyLocale.java", "BodyUseAPI": [], "Fixed commit": "795b96b6e27225b559621435e65798dbc53a2b06", "Url": "https://api.github.com/repos/ST-DDT/Crazy", "Date": "2012-04-04T18:09:08Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.apache.atlas.typesystem.Referenceable>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (artificialRef == null) { artificialRef = org.talend.lineage.atlas.TalendModelFactory.buildProcess(artificialName, inputsIds, outputsIds); }else { java.util.List<org.apache.atlas.typesystem.persistence.Id> artificialRefInputsIds = ((java.util.List) (artificialRef.get(\"inputs\"))); if (artificialRefInputsIds != null) { artificialRefInputsIds.addAll(inputsIds); artificialRef.set(\"inputs\", artificialRefInputsIds); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6787/buggy-version/main.components_lib.talend-cloudera-navigator-api.src.main.java.org.talend.lineage.atlas.TalendModelFactory.java", "BodyUseAPI": ["org.apache.atlas.typesystem.Referenceable.set(java.lang.String,java.util.List<org.apache.atlas.typesystem.persistence.Id>)", "org.apache.atlas.typesystem.Referenceable.get(java.lang.String)"], "Fixed commit": "33606cabdfdec07cd3cf5ca3e478fc378bd15ac8", "Url": "https://api.github.com/repos/imejia/tbd-studio-se", "Date": "2016-06-09T05:18:38Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mondo.token.ITokenizer.getNext()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (next instanceof mondo.token.NewLineToken) next.setText(\" \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/87/buggy-version/src.mondo.token.BracketToken.java", "BodyUseAPI": ["mondo.token.Token.setText(java.lang.String)"], "Fixed commit": "30e85025b40ee0db08f19e405d3eb06bc2cb2f62", "Url": "https://api.github.com/repos/oprogramador/plezuro_js", "Date": "2015-08-17T17:43:13Z"},
{"Line": "=>627", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((poolDrone) == null) || (!(poolDrone.isExists()))) { poolDrone = getBestNUnits(builderType, 1).get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2714/buggy-version/java.bot.protossClient.java", "BodyUseAPI": [], "Fixed commit": "7a3a32727422a7e3154a99e8381b681f3952ab14", "Url": "https://api.github.com/repos/mp6867a/StarCraft568", "Date": "2016-12-06T22:16:19Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((userInfo.size()) == 0) || ((movieInfo.size()) == 0)) { java.lang.System.out.println(\"No record\"); return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7108/buggy-version/src.movieRecommendation.TendencyQuery.java", "BodyUseAPI": [], "Fixed commit": "7f250b0ea87f83dee2a822a47073e4f8ffc9d596", "Url": "https://api.github.com/repos/UCSBGauchos/MovieLensRecommendation", "Date": "2014-04-28T06:33:13Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Class._classCache) == null) java.lang.Class._classCache = new com.jtransc.ds.FastStringMap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5350/buggy-version/jtransc-rt.src.java.lang.Class.java", "BodyUseAPI": [], "Fixed commit": "c0e6f9332d9f910cd5eea9ea3f8ed7fa600c80b7", "Url": "https://api.github.com/repos/wiltonlazary/jtransc", "Date": "2017-01-14T14:29:23Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (deltaY != 0) { computeScroll(deltaY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3884/buggy-version/hideabletoolbar.src.main.java.com.robdich.hideabletoolbar.view.ObserveableListView.java", "BodyUseAPI": ["com.robdich.hideabletoolbar.view.ObserveableListView.computeScroll(int)"], "Fixed commit": "b5d16736db19e17f32d67258572272bddc7fae11", "Url": "https://api.github.com/repos/robdich/Wanderlust", "Date": "2015-03-11T09:19:19Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((param == null) || (param.isEmpty())) { return new it.unibo.alchemist.model.implementations.timedistributions.ExponentialTime(1.0, rand); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2646/buggy-version/alchemist.alchemist-incarnation-biochemistry.src.main.java.it.unibo.alchemist.model.BiochemistryIncarnation.java", "BodyUseAPI": [], "Fixed commit": "92cbf672cff5372243f9370ce6624474786292a3", "Url": "https://api.github.com/repos/ggraffieti/Alchemist", "Date": "2016-05-19T15:21:06Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((ch) == '.') || ((ch) == 'e')) || ((ch) == 'E')) { if ((ch) == '.') { do { number += ch; ch = in.next(); } while (((ch) >= '0') && ((ch) <= '9') ); } if (((ch) == 'e') || ((ch) == 'E')) { number += ch; ch = in.next(); if (((ch) == '+') || ((ch) == '-')) { number += ch; ch = in.next(); } if (((ch) >= '0') && ((ch) <= '9')) { do { number += ch; ch = in.next(); } while (((ch) >= '0') && ((ch) <= '9') ); }else { sym = Constant.error; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4599/buggy-version/SimpleJSONParser.src.org.julien.simplejsonparser.Scanner.java", "BodyUseAPI": [], "Fixed commit": "87c71422e200998d825beccb1574653bbe5d6c2d", "Url": "https://api.github.com/repos/julien-klaus/simpleJSONParser", "Date": "2015-12-20T12:20:32Z"},
{"Line": "=>489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((call.getTopLevelPhenotypeTerms()) != null) { java.lang.String topLevelName = call.getTopLevelPhenotypeTerms().get(0).getName(); if (!(phenotypeGroups.containsKey(topLevelName))) { phenotypeGroups.put(topLevelName, new java.util.ArrayList<java.lang.String>()); } if (!(phenotypeGroups.get(topLevelName).contains(call.getPhenotypeTerm().getName()))) { phenotypeGroups.get(topLevelName).add(call.getPhenotypeTerm().getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5394/buggy-version/web.src.main.java.uk.ac.ebi.phenotype.chart.PhenomeChartProvider.java", "BodyUseAPI": ["org.mousephenotype.cda.solr.web.dto.PhenotypeCallSummaryDTO.getTopLevelPhenotypeTerms()", "call.getPhenotypeTerm().getName()", "org.mousephenotype.cda.solr.web.dto.PhenotypeCallSummaryDTO.getPhenotypeTerm()", "call.getTopLevelPhenotypeTerms().get(0).getName()", "java.util.List<java.lang.String>.add(call.getPhenotypeTerm().getName())", "call.getTopLevelPhenotypeTerms().get(int)", "java.util.List<java.lang.String>.contains(call.getPhenotypeTerm().getName())", "call.getPhenotypeTerm().getName()", "org.mousephenotype.cda.solr.web.dto.PhenotypeCallSummaryDTO.getPhenotypeTerm()"], "Fixed commit": "655041a3dc24a9f4b6755b9054d76003c60a0987", "Url": "https://api.github.com/repos/mpi2/PhenotypeData", "Date": "2016-02-02T15:57:47Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((end - start) > 2) && (s.startsWith(\"0b\", start))) { radix = 2; start += 2; }else if ((((end - start) > 1) && (s.startsWith(\"0\", start))) && ((s.length()) > 1)) { radix = 8; start++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4689/buggy-version/dynamicjava.src.koala.dynamicjava.tree.IntegerLiteral.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.startsWith(java.lang.String,int)"], "Fixed commit": "a3cc8d10bea1813233c67c1a2567ce5446658f42", "Url": "https://api.github.com/repos/kauffman77/drjava", "Date": "2017-01-10T19:21:32Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (tagCompound != null) { for (java.lang.Object o : tagCompound.getKeySet()) { java.lang.String tag = ((java.lang.String) (o)); if (((!(\"childDamage\".equals(tag))) && (!(\"Energy\".equals(tag)))) && (!(\"grid\".equals(tag)))) { newtag.setTag(tag, tagCompound.getTag(tag)); } } childDamage = tagCompound.getInteger(\"childDamage\"); if (childDamage == (META_FOR_SCANNER)) { childDamage = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2855/buggy-version/src.main.java.mcjty.rftools.crafting.ContainerToItemRecipeFactory.java", "BodyUseAPI": ["net.minecraft.nbt.NBTTagCompound.getTag(java.lang.String)", "net.minecraft.nbt.NBTTagCompound.getInteger(java.lang.String)", "net.minecraft.nbt.NBTTagCompound.setTag(java.lang.String,tagCompound.getTag(tag))", "net.minecraft.nbt.NBTTagCompound.getKeySet()"], "Fixed commit": "a228c8a12ec5e4858b888adb6047e06c711f803e", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2017-08-15T04:22:55Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((param.getConvertPageType()) == (jp.crwdev.app.constant.Constant.PAGETYPE_COLOR)) { if (param.isColorPageCrop()) { topLine = param.getColorPageCropTop(); leftLine = param.getColorPageCropLeft(); subWidth = (width - (param.getColorPageCropLeft())) - (param.getColorPageCropRight()); subHeight = (height - (param.getColorPageCropTop())) - (param.getColorPageCropBottom()); if (((param.isPreview()) && (param.isDrawCropAreaInPreview())) && (param.isFullPageCrop())) { topLine += param.getFullPageCropTop(); leftLine += param.getFullPageCropLeft(); subWidth -= (param.getFullPageCropLeft()) + (param.getFullPageCropRight()); subHeight -= (param.getFullPageCropTop()) + (param.getFullPageCropBottom()); } }else { return image; } }else { if (param.isTextPageCrop()) { topLine = param.getTextPageCropTop(); leftLine = param.getTextPageCropLeft(); subWidth = (width - (param.getTextPageCropLeft())) - (param.getTextPageCropRight()); subHeight = (height - (param.getTextPageCropTop())) - (param.getTextPageCropBottom()); if (((param.isPreview()) && (param.isDrawCropAreaInPreview())) && (param.isFullPageCrop())) { topLine += param.getFullPageCropTop(); leftLine += param.getFullPageCropLeft(); subWidth -= (param.getFullPageCropLeft()) + (param.getFullPageCropRight()); subHeight -= (param.getFullPageCropTop()) + (param.getFullPageCropBottom()); } }else { return image; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7524/buggy-version/ComicEPUB.src.jp.crwdev.app.imagefilter.CropFilter.java", "BodyUseAPI": ["jp.crwdev.app.imagefilter.ImageFilterParam.isPreview()", "jp.crwdev.app.imagefilter.ImageFilterParam.getFullPageCropLeft()", "jp.crwdev.app.imagefilter.ImageFilterParam.getTextPageCropBottom()", "jp.crwdev.app.imagefilter.ImageFilterParam.getColorPageCropBottom()", "jp.crwdev.app.imagefilter.ImageFilterParam.getTextPageCropLeft()", "jp.crwdev.app.imagefilter.ImageFilterParam.getTextPageCropRight()", "jp.crwdev.app.imagefilter.ImageFilterParam.getTextPageCropTop()", "jp.crwdev.app.imagefilter.ImageFilterParam.isDrawCropAreaInPreview()", "jp.crwdev.app.imagefilter.ImageFilterParam.getFullPageCropLeft()", "jp.crwdev.app.imagefilter.ImageFilterParam.getFullPageCropBottom()", "jp.crwdev.app.imagefilter.ImageFilterParam.isColorPageCrop()", "jp.crwdev.app.imagefilter.ImageFilterParam.getFullPageCropRight()", "jp.crwdev.app.imagefilter.ImageFilterParam.isFullPageCrop()", "jp.crwdev.app.imagefilter.ImageFilterParam.getTextPageCropTop()", "jp.crwdev.app.imagefilter.ImageFilterParam.getColorPageCropRight()", "jp.crwdev.app.imagefilter.ImageFilterParam.getFullPageCropTop()", "jp.crwdev.app.imagefilter.ImageFilterParam.getColorPageCropLeft()", "jp.crwdev.app.imagefilter.ImageFilterParam.isFullPageCrop()", "jp.crwdev.app.imagefilter.ImageFilterParam.getFullPageCropTop()", "jp.crwdev.app.imagefilter.ImageFilterParam.getColorPageCropTop()", "jp.crwdev.app.imagefilter.ImageFilterParam.getFullPageCropRight()", "jp.crwdev.app.imagefilter.ImageFilterParam.getFullPageCropLeft()", "jp.crwdev.app.imagefilter.ImageFilterParam.getFullPageCropTop()", "jp.crwdev.app.imagefilter.ImageFilterParam.getFullPageCropLeft()", "jp.crwdev.app.imagefilter.ImageFilterParam.isTextPageCrop()", "jp.crwdev.app.imagefilter.ImageFilterParam.getColorPageCropLeft()", "jp.crwdev.app.imagefilter.ImageFilterParam.getTextPageCropLeft()", "jp.crwdev.app.imagefilter.ImageFilterParam.getFullPageCropTop()", "jp.crwdev.app.imagefilter.ImageFilterParam.isPreview()", "jp.crwdev.app.imagefilter.ImageFilterParam.isDrawCropAreaInPreview()", "jp.crwdev.app.imagefilter.ImageFilterParam.getColorPageCropTop()", "jp.crwdev.app.imagefilter.ImageFilterParam.getFullPageCropBottom()"], "Fixed commit": "b80c7efd7df08f80546809b2876fea1676dd8047", "Url": "https://api.github.com/repos/crw-dev/ComicEPUB", "Date": "2013-03-12T13:04:23Z"},
{"Line": "=>498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFilterIndex) == (jp.crwdev.app.setting.ImageFilterParamSet.FILTER_INDEX_TEXT)) { param.setUnificationTextPage(isUnificationTextPage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7524/buggy-version/ComicEPUB.src.jp.crwdev.app.gui.SettingTabPanel.java", "BodyUseAPI": [], "Fixed commit": "b80c7efd7df08f80546809b2876fea1676dd8047", "Url": "https://api.github.com/repos/crw-dev/ComicEPUB", "Date": "2013-03-12T13:04:23Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.startsWith(\"#\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7627/buggy-version/src.uet.nlp.resource.Dictionary.java", "BodyUseAPI": [], "Fixed commit": "c44507a776af9ad5471b5c5b9d39e4d0761e7bbd", "Url": "https://api.github.com/repos/zatcsc/word-segmentation", "Date": "2015-11-02T07:36:00Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasNewCuts) continue; else break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/458/buggy-version/jorlib-core.src.main.java.org.jorlib.frameworks.columnGeneration.colgenMain.ColGen.java", "BodyUseAPI": [], "Fixed commit": "2c009cd618995689b3132c1f47c24466dcff39b1", "Url": "https://api.github.com/repos/jkinable/jorlib", "Date": "2016-02-11T07:34:03Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bartabs.ws.order.model.Order.getOrderItems()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((orderItems != null) && (!(orderItems.isEmpty()))) { for (com.bartabs.ws.menu.model.MenuItem oi : orderItems) { dao.linkOrderItem(orderID, oi); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1063/buggy-version/src.main.java.com.bartabs.ws.order.service.OrderService.java", "BodyUseAPI": [], "Fixed commit": "5833dae558722dc07f9715b12f10e34e0bb14507", "Url": "https://api.github.com/repos/BarTabs/bartabs-ws", "Date": "2017-03-22T04:54:23Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.egov.service.AssetService.getAsset(revaluationRequest.getRevaluation().getTenantId(),revaluationRequest.getRevaluation().getAssetId(),revaluationRequest.getRequestInfo())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (asset != null) { java.math.BigDecimal positiveTransaction = asset.getCurrentValue().add(revaluation.getRevaluationAmount()); java.math.BigDecimal negativeTransaction = asset.getCurrentValue().add(revaluation.getRevaluationAmount()); if (revaluation.getTypeOfChange().equals(TypeOfChange.DECREASED)) if (!(((asset.getCurrentValue().subtract(revaluation.getRevaluationAmount()).doubleValue()) - (revaluation.getValueAfterRevaluation().doubleValue())) == 0)) errorMap.put(\"EGASSET_REVALUATION_VALUATION_AMOUNT\", \"THE Valuation Amount Calculation Is Wrong\"); if (revaluation.getTypeOfChange().equals(TypeOfChange.INCREASED)) if (!(((asset.getCurrentValue().add(revaluation.getRevaluationAmount()).doubleValue()) - (revaluation.getValueAfterRevaluation().doubleValue())) == 0)) errorMap.put(\"EGASSET_REVALUATION_VALUATION_AMOUNT\", \"THE Valuation Amount Calculation Is Wrong\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2818/buggy-version/asset.asset-services-maha.src.main.java.org.egov.web.validator.AssetValidator.java", "BodyUseAPI": ["org.egov.model.Asset.getCurrentValue()", "asset.getCurrentValue().add(revaluation.getRevaluationAmount()).doubleValue()", "asset.getCurrentValue().add(revaluation.getRevaluationAmount())", "org.egov.model.Asset.getCurrentValue()", "asset.getCurrentValue().subtract(revaluation.getRevaluationAmount()).doubleValue()", "org.egov.model.Asset.getCurrentValue()", "org.egov.model.Asset.getCurrentValue()", "asset.getCurrentValue().subtract(revaluation.getRevaluationAmount())", "asset.getCurrentValue().add(revaluation.getRevaluationAmount())", "asset.getCurrentValue().add(revaluation.getRevaluationAmount())"], "Fixed commit": "197abdb38a8fcf1a232fff1bcebd12c70d8bc7d6", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-11-17T13:39:14Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.pathState) == (at.jku.weiner.c.preprocess.utils.IncludeUtils.PathState.Unresolved)) { fileName = at.jku.weiner.c.preprocess.utils.macros.DefinitionTable.fullResolve(fileName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/244/buggy-version/workspace.at.jku.weiner.c.preprocess.src.at.jku.weiner.c.preprocess.utils.IncludeUtils.java", "BodyUseAPI": [], "Fixed commit": "6e9212f72207d11ecb2595eb184beaa3f6c67745", "Url": "https://api.github.com/repos/timeraider4u/kefax", "Date": "2016-01-04T00:15:28Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((batch.size()) == 0) se.lth.cs.nlp.pipeline.Filter.output(batch);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5976/buggy-version/src.main.java.se.lth.cs.nlp.pipeline.Filter.java", "BodyUseAPI": ["se.lth.cs.nlp.pipeline.Filter.output(java.util.List<T>)"], "Fixed commit": "f7435c1c0c722b8b545b5c994c0821c984001cdd", "Url": "https://api.github.com/repos/marcusklang/wikiforia", "Date": "2014-12-11T11:55:32Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jtrfp.trcl.core.TR.twosComplimentSubtract(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((player2NavVectorXY.getNorm()) == 0) player2NavVectorXY = org.apache.commons.math3.geometry.euclidean.threed.Vector3D.PLUS_I;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5079/buggy-version/src.main.java.org.jtrfp.trcl.obj.NavArrow.java", "BodyUseAPI": [], "Fixed commit": "d87aaa4ebd4aa2fa47da1193e6214cb11b87a10f", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2015-07-05T07:37:42Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((fields[0].length()) > 0) && ((fields[0].charAt(0)) == '-')) || (argNum < 0)) { throw new java.lang.NumberFormatException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5209/buggy-version/src.ru.fizteh.fivt.students.fedyuninV.format.StringFormatter.java", "BodyUseAPI": [], "Fixed commit": "65d317b09e309c1bb5408077d8d5ba6dbeeeec80", "Url": "https://api.github.com/repos/dkomanov/fizteh-java-task", "Date": "2012-11-16T07:07:27Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((player != null) && ((material) == (org.bukkit.Material.PORTAL))) { float yaw = player.getPlayer().getLocation().getYaw(); block.setData((((yaw >= (-135)) & (yaw < (-45))) || ((yaw >= (-315)) & (yaw < (-225))) ? ((byte) (2)) : 1), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/9030/buggy-version/core.src.main.java.io.github.dre2n.dungeonsxl.global.DPortal.java", "BodyUseAPI": ["player.getPlayer().getLocation().getYaw()", "player.getPlayer().getLocation()", "io.github.dre2n.dungeonsxl.player.DGlobalPlayer.getPlayer()"], "Fixed commit": "b0397cd0c0f942a8202ad27d883e7a5d9b862eaa", "Url": "https://api.github.com/repos/DRE2N/DungeonsXL", "Date": "2016-08-01T18:20:17Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.mNetworkRoleSelected)) { this.mNetworkRole.show(this.mParent.getSupportFragmentManager(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2667/buggy-version/src.com.niffy.IsometricWorld.GeneralManager.java", "BodyUseAPI": [], "Fixed commit": "5ee88079c6812405b27f974cbad995974315be47", "Url": "https://api.github.com/repos/Niffy/IsometricWorldExample", "Date": "2013-04-04T15:04:32Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canChangeParent) { org.eclipse.swt.widgets.TreeItem newItem = new org.eclipse.swt.widgets.TreeItem(item, org.eclipse.swt.SWT.NONE); data.update(newItem); }else { org.eclipse.swt.widgets.TreeItem newItem = new org.eclipse.swt.widgets.TreeItem(parent, org.eclipse.swt.SWT.NONE, (index + 1)); data.update(newItem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5797/buggy-version/plugins.org.python.pydev.src.org.python.pydev.tree.EnabledTreeDragReorder.java", "BodyUseAPI": [], "Fixed commit": "43b13abf980e5c4b852db8633746d80025fabfdb", "Url": "https://api.github.com/repos/rgom/Pydev", "Date": "2017-09-05T15:54:32Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (testOutcome.getFeatureTag().isPresent()) { return requirementWithMatchingFeatureTag(testOutcome.getFeatureTag().get()); }else if ((testOutcome.getPath()) != null) { java.util.List<java.lang.String> storyPathElements = stripStorySuffixFrom(stripRootFrom(net.thucydides.core.requirements.RequirementsPath.pathElements(stripRootPathFrom(testOutcome.getPath())))); return lastRequirementFrom(storyPathElements); }else { return mostSpecificTagRequirementFor(testOutcome); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4674/buggy-version/serenity-core.src.main.java.net.thucydides.core.requirements.FileSystemRequirementsTagProvider.java", "BodyUseAPI": ["net.thucydides.core.requirements.FileSystemRequirementsTagProvider.mostSpecificTagRequirementFor(net.thucydides.core.model.TestOutcome)", "net.thucydides.core.model.TestOutcome.getFeatureTag()", "testOutcome.getFeatureTag().get()", "net.thucydides.core.requirements.FileSystemRequirementsTagProvider.stripStorySuffixFrom(java.util.List<java.lang.String>)", "net.thucydides.core.model.TestOutcome.getPath()", "net.thucydides.core.model.TestOutcome.getPath()", "net.thucydides.core.requirements.RequirementsPath.pathElements(java.lang.String)", "net.thucydides.core.requirements.FileSystemRequirementsTagProvider.stripRootPathFrom(testOutcome.getPath())", "net.thucydides.core.requirements.FileSystemRequirementsTagProvider.requirementWithMatchingFeatureTag(testOutcome.getFeatureTag().get())", "net.thucydides.core.requirements.FileSystemRequirementsTagProvider.stripRootFrom(net.thucydides.core.requirements.RequirementsPath.pathElements(stripRootPathFrom(testOutcome.getPath())))"], "Fixed commit": "0dd7d28dbc0a2556bd72b59fcbcd8315b2bd91e1", "Url": "https://api.github.com/repos/AlexeyDybov/serenity-core", "Date": "2015-06-01T05:52:06Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.agg.application.service.ProgramService.getProgram(java.lang.Long,getAccountDetails(request))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((programDO != null) && ((programDO.getManufacturerDO()) != null)) { model.put(\"machineInfoList\", machineService.getManfModel(programDO.getManufacturerDO().getId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/882/buggy-version/src.main.java.com.agg.application.controller.ProgramController.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,machineService.getManfModel(programDO.getManufacturerDO().getId()))", "programDO.getManufacturerDO().getId()", "com.agg.application.model.ProgramDO.getManufacturerDO()", "com.agg.application.service.MachineService.getManfModel(programDO.getManufacturerDO().getId())"], "Fixed commit": "9cd90ad9d63906cc7d3a8c756c6531f4beac0b9b", "Url": "https://api.github.com/repos/bidnfix/agg", "Date": "2017-01-09T15:53:18Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTable.getValueAt(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (\"\u7f8e\u56e2\".equals(source)) { source = com.giot.om.swing.util.MyConstants.MEITUAN_STR; }else if (\"\u5fae\u4fe1\".equals(source)) { source = com.giot.om.swing.util.MyConstants.WEICHAR_STR; }else { source = com.giot.om.swing.util.MyConstants.ELEME_STR; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6292/buggy-version/src.com.giot.om.listenner.MyActionListener.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "0b2dc49804f3963961ac9a8135df97bfe48cf60d", "Url": "https://api.github.com/repos/jiangmalone/fusion_client", "Date": "2016-04-21T08:34:25Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFirst) { mPath.moveTo((deltaX * i), ((mHeight) - ((mHeight) * value))); isFirst = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3612/buggy-version/common.src.main.java.com.aidangrabe.common.views.SimpleGraph.java", "BodyUseAPI": [], "Fixed commit": "ba6d3be27e4b4b4e9162d2327e56eb648143e6a8", "Url": "https://api.github.com/repos/aidangrabe/student-wear-app", "Date": "2015-02-13T14:13:35Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (throwable instanceof org.elasticsearch.ElasticsearchException) { restStatus = ((org.elasticsearch.ElasticsearchException) (throwable)).status(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1968/buggy-version/src.main.java.alexanderc.tweek.es.plugin.kas.RestError.java", "BodyUseAPI": [], "Fixed commit": "931afbddcef19d7a0d6c1de63efdd4bb885e08a9", "Url": "https://api.github.com/repos/AlexanderC/elasticsearch-key-aware-search", "Date": "2015-02-19T16:50:45Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (to.isEmpty()) { if (cc.isEmpty()) throw new java.lang.IllegalArgumentException(\"Must specify at least one valid recipient.\"); for (final zinger.secsan.server.Address ccRecipient : cc) outgoingMessage.addRecipient(Message.RecipientType.TO, ccRecipient); }else { for (final zinger.secsan.server.Address toRecipient : to) outgoingMessage.addRecipient(Message.RecipientType.TO, toRecipient); if (!(cc.isEmpty())) { for (final zinger.secsan.server.Address ccRecipient : cc) outgoingMessage.addRecipient(Message.RecipientType.CC, ccRecipient); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/993/buggy-version/src.zinger.secsan.server.MailListServlet.java", "BodyUseAPI": [], "Fixed commit": "562e05d19cfa12e6899633fe2c0698acaf2b6282", "Url": "https://api.github.com/repos/azinger/easysanta", "Date": "2013-11-27T02:50:50Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jnibwapi.JNIBWAPI.getUnit(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((unit.getType().getRaceID()) == (RaceType.RaceTypes.Terran.getID())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5966/buggy-version/eisbw.src.main.java.eisbw.BwapiListener.java", "BodyUseAPI": [], "Fixed commit": "39368249b1b67d2673ceb104cea362e7eaf1e25b", "Url": "https://api.github.com/repos/eishub/Starcraft", "Date": "2017-06-06T10:13:15Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (enumeration.isMultiSelection()) { map.put(inputOrOutput.getIdentifier(), enumeration.getDefaultValues()); }else { map.put(inputOrOutput.getIdentifier(), enumeration.getDefaultValues()[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4587/buggy-version/bundles.orbistoolbox.src.main.java.org.orbisgis.orbistoolbox.view.ui.dataui.EnumerationUI.java", "BodyUseAPI": ["java.util.Enumeration.getDefaultValues()", "java.util.Map<java.net.URI, java.lang.Object>.put(inputOrOutput.getIdentifier(),enumeration.getDefaultValues())", "java.util.Enumeration.getDefaultValues()", "java.util.Map<java.net.URI, java.lang.Object>.put(inputOrOutput.getIdentifier(),enumeration.getDefaultValues()[0])"], "Fixed commit": "f43e4cf8fba7551f2a1601d264caf472c25db7ea", "Url": "https://api.github.com/repos/ebocher/orbisgis", "Date": "2016-01-19T16:56:55Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (minTime != (-1)) { dpd.getDatePicker().setMinDate(minTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6026/buggy-version/app.src.main.java.com.extenprise.mapp.util.Utility.java", "BodyUseAPI": ["dpd.getDatePicker().setMinDate(long)"], "Fixed commit": "edae49cb812ee60ccc46d243a74cc6dcaa7112d7", "Url": "https://api.github.com/repos/ambey/MobApp", "Date": "2015-11-09T12:14:35Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (maxTime != (-1)) { dpd.getDatePicker().setMaxDate(maxTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6026/buggy-version/app.src.main.java.com.extenprise.mapp.util.Utility.java", "BodyUseAPI": ["dpd.getDatePicker().setMaxDate(long)"], "Fixed commit": "edae49cb812ee60ccc46d243a74cc6dcaa7112d7", "Url": "https://api.github.com/repos/ambey/MobApp", "Date": "2015-11-09T12:14:35Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bspkrs.util.CommonUtils.getHighestGroundBlock(net.minecraft.world.World,int,int,int)", "world.getWorldInfo().getTerrainType()", "bspkrs.floatingruins.FloatingRuins.getWeightedInt(int,int,int,int,java.util.Random)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (depth > (yGround - (wt == (net.minecraft.world.WorldType.FLAT) ? 1 : 5))) depth = yGround - (wt == (net.minecraft.world.WorldType.FLAT) ? 1 : 5);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4231/buggy-version/src.main.java.bspkrs.floatingruins.FloatingRuins.java", "BodyUseAPI": [], "Fixed commit": "2a014349545dab14a4789beab9789300f030f96f", "Url": "https://api.github.com/repos/bspkrs/FloatingRuins", "Date": "2014-05-17T06:12:20Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.readings.containsKey(station))) { this.readings.put(station, new java.util.ArrayList<com.grp8.weatherapp.Entities.DataReading>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4591/buggy-version/app.src.main.java.com.grp8.weatherapp.Data.DataRepository.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.util.List<com.grp8.weatherapp.Entities.DataReading>>.put(int,java.util.ArrayList<com.grp8.weatherapp.Entities.DataReading>)"], "Fixed commit": "99240200ecfa298108db0cea79cadaeeea3685b0", "Url": "https://api.github.com/repos/LasseOnTheHub/WeatherApp", "Date": "2017-01-11T21:14:51Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.block.Furnace.getInventory()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (inv == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/111/buggy-version/src.ro.thehunters.digi.recipeManager.Furnaces.java", "BodyUseAPI": [], "Fixed commit": "de3e171f5c5115b1139f5f6ac3928a89feb08b5f", "Url": "https://api.github.com/repos/THDigi/RecipeManager2", "Date": "2013-06-11T10:32:02Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (session.isClosed()) { org.eclipse.moquette.spi.impl.ProtocolProcessor.LOG.warn(\"channel was closed. client <{}>\", msg.getClientID()); session.close(false); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2158/buggy-version/broker.src.main.java.org.eclipse.moquette.spi.impl.ProtocolProcessor.java", "BodyUseAPI": ["org.eclipse.moquette.server.ServerChannel.close(boolean)"], "Fixed commit": "14f6752b22def4b958c35a2bdbef50b16b597007", "Url": "https://api.github.com/repos/runafter/moquette", "Date": "2015-09-21T12:24:34Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.blackducksoftware.integration.hub.teamcity.agent.scan.HubBuildProcess.getScanConfig(java.io.File,java.io.File,java.lang.String,java.lang.String,com.blackducksoftware.integration.hub.teamcity.agent.HubAgentBuildLogger,com.blackducksoftware.integration.util.CIEnvironmentVariables)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (hubScanConfig == null) { logger.error(\"Please verify the Black Duck Hub Runner configuration is correct.\"); result = jetbrains.buildServer.agent.BuildFinishedStatus.FINISHED_FAILED; return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2792/buggy-version/agent.src.main.java.com.blackducksoftware.integration.hub.teamcity.agent.scan.HubBuildProcess.java", "BodyUseAPI": [], "Fixed commit": "6acd64d36ee31fe01b649191edfeec6be58f9781", "Url": "https://api.github.com/repos/blackducksoftware/hub-teamcity", "Date": "2017-01-24T22:32:28Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((req.getParams()) instanceof org.apache.solr.common.params.ModifiableSolrParams)) { req.setParams(new org.apache.solr.common.params.ModifiableSolrParams(req.getParams())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8859/buggy-version/src.main.java.com.s24.search.solr.query.bmax.BmaxQParserPlugin.java", "BodyUseAPI": ["org.apache.solr.request.SolrQueryRequest.getParams()", "org.apache.solr.request.SolrQueryRequest.setParams(org.apache.solr.common.params.ModifiableSolrParams)"], "Fixed commit": "8c5a87df2564b992b762de6b5773fa82cf6bb718", "Url": "https://api.github.com/repos/shopping24/solr-bmax-queryparser", "Date": "2014-11-04T08:12:05Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(parser.isComplete())) { buffer.compact(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1663/buggy-version/api.src.main.java.org.xnio.http.HttpUpgrade.java", "BodyUseAPI": [], "Fixed commit": "f3cfa74cce8d175a8d5ef30dc2d1e151addfb0b1", "Url": "https://api.github.com/repos/dmlloyd/xnio", "Date": "2014-09-15T04:14:35Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getDeclaredFields()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.lang.reflect.Modifier.isStatic(fields[i].getModifiers())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5706/buggy-version/Database-Helper.src.murilo.libs.relational.ObjectRelational.java", "BodyUseAPI": [], "Fixed commit": "a24bb19ba120ba16691e7e15861330040888c18a", "Url": "https://api.github.com/repos/MuriloACQ/Database-Helper-MySQL", "Date": "2014-09-23T22:29:50Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(mEmailEditText.getText())) { mEmailEditText.requestFocus(); }else { mPasswordEditText.requestFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2142/buggy-version/app.src.main.java.com.zaske.about_steve.aboutsteve.ui.login.LoginActivity.java", "BodyUseAPI": ["android.widget.EditText.requestFocus()"], "Fixed commit": "6019a6d1d07dcab1972ae185b8184c58e2e45c0f", "Url": "https://api.github.com/repos/Epicodus-SZ/animate", "Date": "2017-09-28T23:45:40Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((b) == null) { return \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/934/buggy-version/src.de.avdclan.arma2mapconverter.Item.java", "BodyUseAPI": [], "Fixed commit": "d90faa5621956e0d64fa1514ad15dac7e9bb6fdb", "Url": "https://api.github.com/repos/lotherk/Arma2MapConverter", "Date": "2012-11-10T23:53:17Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((a) == null) { return \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/934/buggy-version/src.de.avdclan.arma2mapconverter.Item.java", "BodyUseAPI": [], "Fixed commit": "d90faa5621956e0d64fa1514ad15dac7e9bb6fdb", "Url": "https://api.github.com/repos/lotherk/Arma2MapConverter", "Date": "2012-11-10T23:53:17Z"},
{"Line": "=>1756", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((resourceTagsList.size()) > 3) { org.ednovo.gooru.client.uc.DownToolTipWidgetUc toolTipUc = new org.ednovo.gooru.client.uc.DownToolTipWidgetUc(new com.google.gwt.user.client.ui.Label((\"+\" + ((resourceTagsList.size()) - 3))), toolTipwidgets); toolTipUc.setStyleName(org.ednovo.gooru.client.mvp.play.resource.body.ResourcePlayerMetadataView.playerStyle.educationalUseMoretags()); org.ednovo.gooru.client.mvp.play.resource.body.ResourcePlayerMetadataView.tagsContainer.add(toolTipUc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6452/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.play.resource.body.ResourcePlayerMetadataView.java", "BodyUseAPI": ["java.util.List<org.ednovo.gooru.shared.model.content.ResourceTagsDo>.size()"], "Fixed commit": "ffec4711c73f7243e20529653c637285e1deb99f", "Url": "https://api.github.com/repos/shivalinga/Gooru-Web", "Date": "2014-07-25T11:38:01Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.prefs.Preferences.getInt(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (port < 0) throw new java.lang.Exception();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1954/buggy-version/src.main.java.de.onyxbits.scenepainter.ScenePainter.java", "BodyUseAPI": [], "Fixed commit": "98931dc94358d8a9c5f4db73916637e118f3606e", "Url": "https://api.github.com/repos/onyxbits/ScenePainter", "Date": "2011-09-04T16:18:00Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportFragmentManager().findFragmentByTag(io.craigmiller160.contacts5.activity.TABS_FRAGMENT_TAG)) == null) { getSupportFragmentManager().beginTransaction().add(new io.craigmiller160.contacts5.fragment.TabsFragment(), io.craigmiller160.contacts5.activity.TABS_FRAGMENT_TAG).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8753/buggy-version/app.src.main.java.io.craigmiller160.contacts5.activity.ContactsActivity.java", "BodyUseAPI": [], "Fixed commit": "3fd786ddfb1dbd88cd1805de391c1a5ed7da5552", "Url": "https://api.github.com/repos/craigmiller160/Contacts-5", "Date": "2016-06-06T02:10:19Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (found) { if (!good) { player.sendMessage(permissionMessage); return false; } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/23/buggy-version/src.main.java.me.olivervscreeper.networkutilities.command.CommandManager.java", "BodyUseAPI": [], "Fixed commit": "7ad3073987c4c259f3b29eafd9a86c27f47a5ba5", "Url": "https://api.github.com/repos/olivervscreeper/NetworkUtilities", "Date": "2014-11-29T19:01:33Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((game.getStartingPlayerId()) != null) { playerList.setCurrent(game.getStartingPlayerId()); currentPlayer = game.getPlayer(game.getStartingPlayerId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6874/buggy-version/Mage.src.mage.game.match.MatchImpl.java", "BodyUseAPI": ["mage.game.Game.getStartingPlayerId()", "mage.game.Game.getPlayer(game.getStartingPlayerId())", "mage.game.Game.getStartingPlayerId()", "mage.players.PlayerList.setCurrent(game.getStartingPlayerId())"], "Fixed commit": "581df41ae76dc3e2e1eeeb90961d6353b230be0b", "Url": "https://api.github.com/repos/jlin14/mage", "Date": "2014-10-08T22:50:35Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (currentPlayer == null) { currentPlayer = playerList.getCurrent(game); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6874/buggy-version/Mage.src.mage.game.match.MatchImpl.java", "BodyUseAPI": [], "Fixed commit": "581df41ae76dc3e2e1eeeb90961d6353b230be0b", "Url": "https://api.github.com/repos/jlin14/mage", "Date": "2014-10-08T22:50:35Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((args.length) == 3)) { net.jp.minecraft.plugins.Commands.Command_RailwayInfo.help(cmd, sender); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7816/buggy-version/src.main.java.net.jp.minecraft.plugins.Commands.Command_RailwayInfo.java", "BodyUseAPI": [], "Fixed commit": "aa44e28f31848cf1230f3a0495c96ff2e5bbaa17", "Url": "https://api.github.com/repos/syokkendesuyo/TeisyokuPlugin2", "Date": "2016-05-04T09:16:30Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hashProvider().output()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(checksumEqual(checksum, cksum))) { throw new org.apache.kerberos.kerb.KrbException(org.apache.kerberos.kerb.KrbErrorCode.KRB_AP_ERR_BAD_INTEGRITY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4044/buggy-version/haox-kerb.kerb-crypto.src.main.java.org.apache.kerberos.kerb.crypto.enc.DesCbcEnc.java", "BodyUseAPI": [], "Fixed commit": "a8d6b62142e169d23d0c308ce2728e614d3258c1", "Url": "https://api.github.com/repos/deepika087/haox", "Date": "2017-10-28T23:34:30Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getContentResolver().query(android.net.Uri,java.lang.String[],<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (c.moveToFirst()) de.tubs.ibr.android.ldap.core.ContactManager.loadSyncData(contact, c, 1, 2, 3, 4, 5, 6, 7);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7324/buggy-version/src.src.de.tubs.ibr.android.ldap.core.ContactManager.java", "BodyUseAPI": ["de.tubs.ibr.android.ldap.core.ContactManager.loadSyncData(android.os.Bundle,android.database.Cursor,int,int,int,int,int,int,int)"], "Fixed commit": "84f5f8430c4c22f26a590de43ece8f7177506829", "Url": "https://api.github.com/repos/soneyworld/AndroidLab", "Date": "2011-07-07T00:12:05Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (guessedLet == (guess.length())) { num = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3230/buggy-version/HangMan.java", "BodyUseAPI": [], "Fixed commit": "7d5c06ec58ae46547acb0402e2a44ca89b5b69b2", "Url": "https://api.github.com/repos/CHmSID/HangMan", "Date": "2015-02-08T18:34:39Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (j == 4) { j = (rand.nextInt(3)) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3230/buggy-version/HangMan.java", "BodyUseAPI": [], "Fixed commit": "7d5c06ec58ae46547acb0402e2a44ca89b5b69b2", "Url": "https://api.github.com/repos/CHmSID/HangMan", "Date": "2015-02-08T18:34:39Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cord.length) < 2) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4335/buggy-version/java.com.ece251.gongxl.transcanner.CanvasView.java", "BodyUseAPI": [], "Fixed commit": "777803a258fc5b8239067e5e81a1eefcd55f5d41", "Url": "https://api.github.com/repos/Gongxl/Transcanner", "Date": "2015-03-17T04:28:05Z"},
{"Line": "=>898", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (at != null) { java.lang.String var = lessa.EvalVisitor.getInstance(at); if (var != null) lessa.EvalVisitor.setDirty(var); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1516/buggy-version/src.lessa.EvalVisitor.java", "BodyUseAPI": ["lessa.EvalVisitor.getInstance(java.lang.String)"], "Fixed commit": "0c51e6535a689b32c962c2526a03f62a91f9468a", "Url": "https://api.github.com/repos/giddens9527/Lessa", "Date": "2015-05-09T20:38:35Z"},
{"Line": "=>871", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lessa.EvalVisitor.visit(ctx.trailer(0))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (trailerStr != null) { java.lang.String var = lessa.EvalVisitor.getInstance(trailerStr); if (var != null) lessa.EvalVisitor.setDirty(var); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1516/buggy-version/src.lessa.EvalVisitor.java", "BodyUseAPI": ["lessa.EvalVisitor.getInstance(java.lang.String)"], "Fixed commit": "0c51e6535a689b32c962c2526a03f62a91f9468a", "Url": "https://api.github.com/repos/giddens9527/Lessa", "Date": "2015-05-09T20:38:35Z"},
{"Line": "=>840", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (atomStr != null) { java.lang.String var = lessa.EvalVisitor.getInstance(atomStr); if (var != null) lessa.EvalVisitor.setDirty(var); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1516/buggy-version/src.lessa.EvalVisitor.java", "BodyUseAPI": ["lessa.EvalVisitor.getInstance(java.lang.String)"], "Fixed commit": "0c51e6535a689b32c962c2526a03f62a91f9468a", "Url": "https://api.github.com/repos/giddens9527/Lessa", "Date": "2015-05-09T20:38:35Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.openapi.roots.impl.RootModelImpl.getSourceModel()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(com.intellij.openapi.util.Comparing.equal(myCurrentLayerName, sourceModel.myCurrentLayerName))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7003/buggy-version/platform.projectModel-impl.src.com.intellij.openapi.roots.impl.RootModelImpl.java", "BodyUseAPI": [], "Fixed commit": "cc4d0d98bf2aa01170d0f97f3e9b52a59253a45e", "Url": "https://api.github.com/repos/consulo/consulo", "Date": "2014-07-30T12:54:02Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value.matches(\"[0-9]+.[0-9]+\")) { value = value + \"f\"; }else if ((value.startsWith(\"@+id/\")) || (value.startsWith(\"@id/\"))) { value = value.substring(((value.indexOf('/')) + 1)); value = \"R.id.\" + value; }else if (value.contains(\"@string/\")) { value = value.substring(((value.indexOf('/')) + 1)); value = \"strings.\" + value; }else if (attr.getQualifiedName().equals(\"android:text\")) { value = (\"\\\"\" + value) + \"\\\"\"; }else if (value.matches(\"#[0-9a-fA-F]+\")) { value = (\"Color.parseColor(\\\"\" + value) + \"\\\")\"; }else if (((value.equals(\"gone\")) || (value.equals(\"visibile\"))) || (value.equals(\"invisibile\"))) { value = \"View.\" + (value.toUpperCase()); }else if (value.startsWith(\"@drawable/\")) { value = value.substring(((value.indexOf('/')) + 1)); value = (\"\" + value) + \".get(context)\"; }else if (value.equals(\"vertical\")) { value = \"LinearLayout.VERTICAL\"; }else if (value.equals(\"horizontal\")) { value = \"LinearLayout.HORIZONTAL\"; }else if ((attr.getQualifiedName().equals(\"android:gravity\")) || (attr.getQualifiedName().equals(\"android:layout_gravity\"))) { value = com.excelsecu.axml.Utils.devideParams(value, \"Gravity\"); }else if (attrName.equals(\"android:password\")) { value = \"new PasswordTransformationMethod()\"; }else if (attrName.equals(\"android:singleLine\")) { value = \"new SingleLineTransformationMethod()\"; }else if (attrName.equals(\"android:inputType\")) { java.lang.String error = value; value = Config.INPUT_TYPE_MAP.get(value); if (value == null) { throw new com.excelsecu.axml.AXMLException(AXMLException.ATTRIBUTE_VALUE_ERROR, error); } value = com.excelsecu.axml.Utils.devideParams(value, \"InputType\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3336/buggy-version/src.com.excelsecu.axml.LayoutTranslater.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.indexOf(char)"], "Fixed commit": "223282fa243003e234e097b03e9efe5475aff611", "Url": "https://api.github.com/repos/sickworm/AndroidXMLToJava", "Date": "2015-01-20T11:41:51Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sothis.mvc.ActionContext.getResponse()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(response.headers().contains(HttpConstants.HeaderNames.CONTENT_TYPE))) { java.lang.Object contentType = template.getCustomAttribute(\"content_type\"); if (null == contentType) { contentType = \"text/html; charset=\" + (context.getRequest().getCharset()); }else { contentType = template.getCustomAttribute(\"content_type\").toString(); } response.headers().setString(HttpConstants.HeaderNames.CONTENT_TYPE, contentType.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6692/buggy-version/sothis-mvc.src.main.java.org.sothis.mvc.http.views.freemarker.FreemarkerView.java", "BodyUseAPI": ["response.headers().setString(HttpConstants.HeaderNames.CONTENT_TYPE,java.lang.String)", "org.sothis.mvc.Response.headers()"], "Fixed commit": "c77a293a6c61d8e05f24b2ef01c811e9cadc57b3", "Url": "https://api.github.com/repos/velna/sothis", "Date": "2016-01-15T02:36:58Z"},
{"Line": "=>608", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dependency instanceof com.robopupu.api.dependency.Scopeable) { ((com.robopupu.api.dependency.Scopeable) (dependency)).setScope(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4128/buggy-version/robopupu-api.src.main.java.com.robopupu.api.dependency.DependencyScope.java", "BodyUseAPI": [], "Fixed commit": "a9adde55f226cf9cf191582ffa941f6723ed4091", "Url": "https://api.github.com/repos/Fuusio/Robopupu", "Date": "2016-10-23T22:48:12Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dependency instanceof com.robopupu.api.dependency.Scopeable) { final com.robopupu.api.dependency.Scopeable scopeable = ((com.robopupu.api.dependency.Scopeable) (dependency)); if ((scopeable.getScope()) == null) { scopeable.setScope(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4128/buggy-version/robopupu-api.src.main.java.com.robopupu.api.dependency.DependencyScope.java", "BodyUseAPI": [], "Fixed commit": "a9adde55f226cf9cf191582ffa941f6723ed4091", "Url": "https://api.github.com/repos/Fuusio/Robopupu", "Date": "2016-10-23T22:48:12Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dependency instanceof com.robopupu.api.dependency.Scopeable) { final com.robopupu.api.dependency.Scopeable scopeable = ((com.robopupu.api.dependency.Scopeable) (dependency)); if ((scopeable.getScope()) == null) { scopeable.setScope(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4128/buggy-version/robopupu-api.src.main.java.com.robopupu.api.dependency.DependencyScope.java", "BodyUseAPI": [], "Fixed commit": "a9adde55f226cf9cf191582ffa941f6723ed4091", "Url": "https://api.github.com/repos/Fuusio/Robopupu", "Date": "2016-10-23T22:48:12Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.scope) == null) || (scope == null)) { this.scope = scope; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4128/buggy-version/robopupu-api.src.main.java.com.robopupu.api.dependency.ScopedObject.java", "BodyUseAPI": [], "Fixed commit": "a9adde55f226cf9cf191582ffa941f6723ed4091", "Url": "https://api.github.com/repos/Fuusio/Robopupu", "Date": "2016-10-23T22:48:12Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nbReadParams > nbArgs) { reportIssue(mit, \"Not enough arguments.\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5536/buggy-version/java-checks.src.main.java.org.sonar.java.checks.PrintfFailCheck.java", "BodyUseAPI": [], "Fixed commit": "964295924e82c0c8e4bb669ae75a2b989ae028ea", "Url": "https://api.github.com/repos/SonarSource/sonar-java", "Date": "2017-05-01T07:59:36Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jhj.expandablerecyclerview.model.ParentWrapper.getChildItemList()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (childItemList != null) { mItemList.addAll((parentWrapperPosition + insertedItemCount), childItemList); insertedItemCount += childItemList.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/799/buggy-version/expandablerecyclerview.src.main.java.com.jhj.expandablerecyclerview.adapter.ExpandableRecyclerViewAdapter.java", "BodyUseAPI": ["java.util.List<?>.size()", "java.util.List<java.lang.Object>.addAll(int,java.util.List<?>)"], "Fixed commit": "29539f3549d6080c1e7ade17cfb4503f17e3666f", "Url": "https://api.github.com/repos/huajianjiang/ExpandableRecyclerView", "Date": "2016-09-01T10:35:53Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jsonnables.isEmpty()) { putJson(json); }else { for (sfs.concatenable.Concatenable jsonnable : jsonnables) { jsonnable.putJson(json); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2837/buggy-version/src.main.java.sfs.concatenable.Concatenable.java", "BodyUseAPI": [], "Fixed commit": "98d99494063834c743c38cce1745a13a4aa2b244", "Url": "https://api.github.com/repos/seiyak/SFS---Seiya-File-System", "Date": "2013-04-12T10:21:22Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!found) && (org.totschnig.myexpenses.BuildConfig.DEBUG)) { android.util.Log.d(\"MyExpenses\", ((\"Character \" + c) + \" was not found in any fonts\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5598/buggy-version/myExpenses.src.main.java.org.totschnig.myexpenses.util.LazyFontSelector.java", "BodyUseAPI": [], "Fixed commit": "ce8272d4ae334a68874d8f78564dc1f0d8a7d8ef", "Url": "https://api.github.com/repos/mtotschnig/MyExpenses", "Date": "2017-02-25T13:24:00Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(flagDragged)) { return; }else { flagDragged = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/932/buggy-version/src.org.teachothers.fishwatchr.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "f68fc9d1f04ca010ccc3218d0ad8fef7d6f49b41", "Url": "https://api.github.com/repos/himawari-san/FishWatchr", "Date": "2017-12-29T13:08:25Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (java.lang.Character.isISOControl(chr)) { sb.append(\"&#x\"); sb.append(java.lang.Integer.toHexString(chr)); sb.append(';'); }else { sb.append(chr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1560/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.XMLLogger.java", "BodyUseAPI": ["java.lang.Integer.toHexString(char)", "java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "591746829f07e213ec9dae33c450d9bb8a409181", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2017-09-29T14:32:46Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRootPath) { in.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/398/buggy-version/app.src.main.java.com.osama.cryptofmroot.tasks.DecryptTask.java", "BodyUseAPI": [], "Fixed commit": "828c2873973affe32ca232cb0a4682a265246a18", "Url": "https://api.github.com/repos/mosamabinomar/RootPGPExplorer", "Date": "2017-05-14T10:17:30Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 11) { de.nico.ha_manager.helper.Utils.setupActionBar(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5480/buggy-version/app.src.main.java.de.nico.ha_manager.activities.Subjects.java", "BodyUseAPI": [], "Fixed commit": "00c9fc49513bc0e3cdbae2e07145c686ac29051b", "Url": "https://api.github.com/repos/hw-manager/android", "Date": "2015-01-12T12:41:12Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (prefActivity) { actionBar = ((android.preference.PreferenceActivity) (context)).getActionBar(); }else { actionBar = ((android.support.v4.app.FragmentActivity) (context)).getActionBar(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5480/buggy-version/app.src.main.java.de.nico.ha_manager.helper.ActionBarWrapper.java", "BodyUseAPI": [], "Fixed commit": "00c9fc49513bc0e3cdbae2e07145c686ac29051b", "Url": "https://api.github.com/repos/hw-manager/android", "Date": "2015-01-12T12:41:12Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.pms.util.StringUtil.hasValue(tagInfo.year)) { if ((tagInfo.year.length()) > 4) { result.updateString(\"YEAR\", tagInfo.year.substring(0, 4)); }else { result.updateString(\"YEAR\", tagInfo.year); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5960/buggy-version/src.main.java.net.pms.database.TableMusicBrainzReleases.java", "BodyUseAPI": ["java.sql.ResultSet.updateString(java.lang.String,tagInfo.year.substring(0, 4))", "tagInfo.year.substring(int,int)", "tagInfo.year.length()", "java.sql.ResultSet.updateString(java.lang.String,tagInfo.year)"], "Fixed commit": "12f50170f295f2593eaeaf86b2948978d24a12bd", "Url": "https://api.github.com/repos/UniversalMediaServer/UniversalMediaServer", "Date": "2016-12-18T06:28:01Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.mayo.bsi.cts.cts2connector.cts2search.RESTContext.getUserParameterValue(CTS2Config.REQUIRES_CREDENTIALS)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (existingValue != null) context.setUserParameter(CTS2Config.REQUIRES_CREDENTIALS, existingValue);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1726/buggy-version/cts2Viewer.src.edu.mayo.cts2Viewer.server.CTS2DownloadServlet.java", "BodyUseAPI": ["edu.mayo.bsi.cts.cts2connector.cts2search.RESTContext.setUserParameter(CTS2Config.REQUIRES_CREDENTIALS,java.lang.String)"], "Fixed commit": "ffd4957871b71ae0931b9df5e770aece18ecc951", "Url": "https://api.github.com/repos/cts2/cts2-viewer", "Date": "2013-01-29T19:56:27Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (existingFormat != null) context.outputFormat = existingFormat;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1726/buggy-version/cts2Viewer.src.edu.mayo.cts2Viewer.server.CTS2DownloadServlet.java", "BodyUseAPI": [], "Fixed commit": "ffd4957871b71ae0931b9df5e770aece18ecc951", "Url": "https://api.github.com/repos/cts2/cts2-viewer", "Date": "2013-01-29T19:56:27Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((list.size()) > 0) { int nn = (list.size()) - (randomGenerator.nextInt(list.size())); if (nn < (list.size())) { node = \"*\" + (list.get(nn)); }else node = \"*\" + (list.peek()); java.util.Collection<java.lang.String> c = graph.getSuccessors(root_); if (!(c.contains(node.substring(1)))) graph.addLeaf(root_, node); nd = ENTITY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/220/buggy-version/prov-generator.src.main.java.org.openprovenance.prov.generator.GraphGenerator.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.String>.size()", "java.util.LinkedList<java.lang.String>.size()", "java.util.LinkedList<java.lang.String>.get(int)", "java.util.Random.nextInt(int)", "java.util.LinkedList<java.lang.String>.peek()", "java.util.LinkedList<java.lang.String>.size()"], "Fixed commit": "e60da4b58c34ffd631df0575d5d274602422ce75", "Url": "https://api.github.com/repos/lucmoreau/ProvToolbox", "Date": "2014-05-08T10:48:22Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getLocation) != null) { getLocation.onStop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8735/buggy-version/app.src.main.java.in.foodtalk.privilege.fragment.OutletList.SelectOutletFrag.java", "BodyUseAPI": [], "Fixed commit": "f9dd6a88e550f8807808b76120f429ce5e293d47", "Url": "https://api.github.com/repos/Foodtalkin/android_ft_privilege", "Date": "2017-09-27T13:05:11Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.lgallardo.qbittorrentclient.NotifierService.httpStatusCode) == 403) || ((com.lgallardo.qbittorrentclient.NotifierService.httpStatusCode) == 404)) { if (com.lgallardo.qbittorrentclient.NotifierService.qb_version.equals(\"3.2.x\")) { com.lgallardo.qbittorrentclient.NotifierService.cookie = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/541/buggy-version/app.src.main.java.com.lgallardo.qbittorrentclient.NotifierService.java", "BodyUseAPI": [], "Fixed commit": "122188846191adb019695f9768fcc7b627048e27", "Url": "https://api.github.com/repos/lgallard/qBittorrent-Controller", "Date": "2015-11-03T04:39:27Z"},
{"Line": "=>622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!foundContainer) { throw new org.opencms.main.CmsException(org.opencms.ade.sitemap.Messages.get().container(Messages.ERR_NO_FUNCTION_DETAIL_CONTAINER_1, pageRes.getRootPath())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3350/buggy-version/src.org.opencms.ade.sitemap.CmsVfsSitemapService.java", "BodyUseAPI": [], "Fixed commit": "45cfa739eb0a8ed2222275b7f5da5a05d0963ade", "Url": "https://api.github.com/repos/alkacon/opencms-core", "Date": "2011-08-29T10:26:03Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.opengis.swe.v20.ScalarComponent.getData()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (data == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7727/buggy-version/swe-common-core.src.main.java.org.vast.swe.SWEDataTypeUtils.java", "BodyUseAPI": [], "Fixed commit": "adda4b812224825bda4f88e94a2996b03eed6748", "Url": "https://api.github.com/repos/sensiasoft/lib-swe-common", "Date": "2014-12-14T20:45:11Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.unitsOnServer.get(userID)) == null) { this.unitsOnServer.put(userID, new java.util.HashMap<java.lang.String, java.util.Map<java.lang.String, com.btechconsulting.wein.cumulus.initialization.Initializer.wUStatus>>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5922/buggy-version/com.btechconsulting.wein.cumulus.src.com.btechconsulting.wein.cumulus.initialization.Initializer.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.Map<java.lang.String, com.btechconsulting.wein.cumulus.initialization.Initializer.wUStatus>>>.put(java.lang.String,java.util.HashMap<java.lang.String, java.util.Map<java.lang.String, com.btechconsulting.wein.cumulus.initialization.Initializer.wUStatus>>)"], "Fixed commit": "ec08dcf26ac12f1f986dded2119097ce023d597b", "Url": "https://api.github.com/repos/poshul/Cumulus", "Date": "2011-12-07T15:53:35Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user) != null) { intent.putExtra(\"isParkAdmin\", ((park.getAdmin().equals(user.getUid())) || (park.getAdmin().equals(\"\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8933/buggy-version/app.src.main.java.de.uulm.dbis.coaster2go.activities.ParkDetailViewActivity.java", "BodyUseAPI": [], "Fixed commit": "67f3bcfdb429d152624b2a130a655308b9b67118", "Url": "https://api.github.com/repos/lb28/Coaster2Go", "Date": "2017-06-28T14:12:28Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((layout.getChildCount()) == 2) { layout.getChildAt(1).setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7751/buggy-version/src.main.java.com.sarality.validation.error.TextInputErrorRenderer.java", "BodyUseAPI": ["android.support.design.widget.TextInputLayout.getChildAt(int)", "layout.getChildAt(1).setVisibility(View.GONE)"], "Fixed commit": "854a49757611ff0e826d2d8ffd90e322b7345071", "Url": "https://api.github.com/repos/sarality/blocks-validation", "Date": "2017-01-07T23:58:46Z"},
{"Line": "=>748", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jpaColumnName.equals(((com.impetus.kundera.metadata.model.attributes.AbstractAttribute) (this.getIdAttribute())).getJPAColumnName())) { return this.getIdAttribute().getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5924/buggy-version/src.kundera-core.src.main.java.com.impetus.kundera.metadata.model.EntityMetadata.java", "BodyUseAPI": [], "Fixed commit": "263ed45926a63d8aedd35605cba26aaa5ff38268", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2013-10-15T06:03:29Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index) != null) { edu.cmu.sv.flight.rescheduler.entities.rescheduler.CurrentRoute.getInstance().setStartingIndex(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4377/buggy-version/app.src.main.java.edu.cmu.sv.flight.rescheduler.ui.listener.IntentToActivityOnClickListener.java", "BodyUseAPI": [], "Fixed commit": "fac9fd6e68f7f3f171f9bca0a6df767ec2256585", "Url": "https://api.github.com/repos/jerry771210/FlightRescheduler", "Date": "2015-05-03T07:51:09Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (frg instanceof com.app.restfulapp.FrgLogin) { android.support.v4.app.FragmentManager fm = getSupportFragmentManager(); for (int i = 0; i < (fm.getBackStackEntryCount()); ++i) { fm.popBackStack(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4911/buggy-version/app.src.main.java.com.app.restfulapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8b61eaea25d3e5b7d24d04f03ce1feca50fa8657", "Url": "https://api.github.com/repos/duyminhbk/RESTfulApp_demo", "Date": "2016-03-10T04:44:54Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.inventory.InventoryClickEvent.getWhoClicked()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((player.getItemInHand()) == null) && ((!(event.isRightClick())) && (!(event.isShiftClick())))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8570/buggy-version/src.main.java.com.griefcraft.listeners.LWCPlayerListener.java", "BodyUseAPI": [], "Fixed commit": "3bd8ca3559a5bbe3174d30ecda0cbdca19c4cbeb", "Url": "https://api.github.com/repos/Hidendra/LWC", "Date": "2013-04-03T10:59:19Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.ItemStack.getEnchantments()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(enchantments2.containsKey(enchantment))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8570/buggy-version/src.main.java.com.griefcraft.listeners.LWCPlayerListener.java", "BodyUseAPI": [], "Fixed commit": "3bd8ca3559a5bbe3174d30ecda0cbdca19c4cbeb", "Url": "https://api.github.com/repos/Hidendra/LWC", "Date": "2013-04-03T10:59:19Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getContext()) != null) { com.sapuseven.untis.utils.Timetable timetable = new com.sapuseven.untis.utils.Timetable(data, android.preference.PreferenceManager.getDefaultSharedPreferences(getContext())); new com.sapuseven.untis.fragment.FragmentTimetable.TableSetup(this).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, timetable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5196/buggy-version/app.src.main.java.com.sapuseven.untis.fragment.FragmentTimetable.java", "BodyUseAPI": [], "Fixed commit": "3f380e90f9f2673279f2892519c2c786e62bffe4", "Url": "https://api.github.com/repos/SapuSeven/BetterUntis", "Date": "2017-12-04T10:21:15Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.nbt.NBTTagCompound.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (uuid.contains(\":\")) { cpw.mods.fml.common.registry.GameRegistry.UniqueIdentifier uniqueId = new cpw.mods.fml.common.registry.GameRegistry.UniqueIdentifier(uuid); itemStack = cpw.mods.fml.common.registry.GameRegistry.findItemStack(uniqueId.modId, uniqueId.name, 1); if (itemStack != null) { int dmg = nbt.getShort(\"Damage\"); itemStack.setItemDamage(dmg); com.carpentersblocks.util.ModLogger.log(Level.WARN, ((\"Invalid Id for attribute '\" + (uniqueId.toString())) + \"' corrected.\")); }else { com.carpentersblocks.util.ModLogger.log(Level.WARN, ((\"Block attribute '\" + (uniqueId.toString())) + \"' was unable to be recovered. Was a mod removed?\")); } }else { com.carpentersblocks.util.ModLogger.log(Level.WARN, ((\"Unable to resolve attribute '\" + uuid) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1346/buggy-version/src.main.java.com.carpentersblocks.util.Attribute.java", "BodyUseAPI": ["com.carpentersblocks.util.ModLogger.log(Level.WARN,java.lang.String)"], "Fixed commit": "c9745cedd3c772d7b850e7f6ee778c513a639305", "Url": "https://api.github.com/repos/Mineshopper/carpentersblocks", "Date": "2017-06-01T01:38:56Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(param.getAttributes().containsKey(CustomServicesConstants.BODY))) { builder.put(CustomServicesConstants.BODY, StringUtils.EMPTY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6266/buggy-version/vipr-portal.com.emc.sa.common.src.java.com.emc.sa.catalog.primitives.CustomServicesRESTApiPrimitiveDAO.java", "BodyUseAPI": [], "Fixed commit": "7628e913f80f63abfdc410c0ba52625711da6794", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-05-15T21:05:28Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value == null) { value = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3770/buggy-version/src.main.java.ca.q0r.mchat.variables.VariableManager.java", "BodyUseAPI": [], "Fixed commit": "da5e254b3c5dac49b8e95e5e9f4725ecc00b6f91", "Url": "https://api.github.com/repos/Q0rDev/MChat", "Date": "2014-09-10T19:13:21Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((d.getField(fieldName)) != null) { cachedInstance.setByteArrayRepresentation(d.getField(fieldName).binaryValue().bytes, d.getField(fieldName).binaryValue().offset, d.getField(fieldName).binaryValue().length); featureCache.put(i, cachedInstance.getByteArrayRepresentation()); for (int j = 0; j < (cachedInstance.getFeatureVector().length); j++) { if ((cachedInstance.getFeatureVector()[j]) > 0.0) (idfValues[j])++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4696/buggy-version/src.main.java.net.semanticmetadata.lire.searchers.ImageSearcherUsingWSs.java", "BodyUseAPI": ["net.semanticmetadata.lire.searchers.ImageSearcherUsingWSs.setByteArrayRepresentation(d.getField(fieldName).binaryValue().bytes,d.getField(fieldName).binaryValue().offset,d.getField(fieldName).binaryValue().length)", "org.apache.lucene.document.Document.getField(net.semanticmetadata.lire.searchers.ImageSearcherUsingWSs)", "d.getField(fieldName).binaryValue()", "org.apache.lucene.document.Document.getField(net.semanticmetadata.lire.searchers.ImageSearcherUsingWSs)", "d.getField(fieldName).binaryValue()", "org.apache.lucene.document.Document.getField(net.semanticmetadata.lire.searchers.ImageSearcherUsingWSs)", "d.getField(fieldName).binaryValue()"], "Fixed commit": "e0c3f511db3563739105929fe03b8aaea770106e", "Url": "https://api.github.com/repos/zelle7/LIRE", "Date": "2016-05-09T09:45:31Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((face == (org.bukkit.block.BlockFace.UP)) || (face == (org.bukkit.block.BlockFace.DOWN))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8639/buggy-version/src.main.java.com.evilco.bukkit.locker.LockerPlugin.java", "BodyUseAPI": [], "Fixed commit": "35ff06f97c05b38af4c965a6016cb5336c43561f", "Url": "https://api.github.com/repos/Evil-Co/Locker", "Date": "2014-04-08T01:54:42Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((myFields[1].trim().length()) != 0) { aDocument.setField(FieldNames.AUTHORORG, myFields[1].trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6256/buggy-version/edu.buffalo.cse.irf14.document.Parser.java", "BodyUseAPI": ["edu.buffalo.cse.irf14.document.Document.setField(FieldNames.AUTHORORG,java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "39bfdfbe516abcb38cf118017cd5268c2598fce6", "Url": "https://api.github.com/repos/manikish/newsindexer", "Date": "2014-09-26T01:55:32Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(itemTags.getString(j).equals(\"null\"))) itemTagString += (itemTags.getString(j)) + \" \";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4624/buggy-version/FindersKeepers.app.src.main.java.cse403.finderskeepers.HomePage.java", "BodyUseAPI": ["org.json.JSONArray.getString(int)"], "Fixed commit": "2d4eba4ab0f1c6bb7e564c524bb1c16ab50e79d2", "Url": "https://api.github.com/repos/CSE403FindersKeepers/finders-keepers", "Date": "2016-11-12T06:10:15Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(itemTags.getString(((itemTags.length()) - 1)).equals(\"null\"))) itemTagString += itemTags.getString(((itemTags.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4624/buggy-version/FindersKeepers.app.src.main.java.cse403.finderskeepers.HomePage.java", "BodyUseAPI": ["org.json.JSONArray.length()", "org.json.JSONArray.getString(((itemTags.length()) - 1))"], "Fixed commit": "2d4eba4ab0f1c6bb7e564c524bb1c16ab50e79d2", "Url": "https://api.github.com/repos/CSE403FindersKeepers/finders-keepers", "Date": "2016-11-12T06:10:15Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.batfish.representation.Edge.getNode2()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (node2Name.equals(Synthesizer.NODE_NONE_NAME)) { interface2 = new org.codehaus.jettison.json.JSONObject(); interface2.put(\"name\", int2Name); java.lang.String int2Type; switch (int2Name) { case org.batfish.z3.Synthesizer.FLOW_SINK_TERMINATION_NAME : int2Type = \"FLOW_SINK_TERMINATION\"; break; default : int2Type = \"UNKNOWN\"; } interface2.put(\"type\", int2Type); interface2.put(\"node\", node2Name); }else { org.batfish.representation.Configuration node2 = currentConfigurations.get(node2Name); org.batfish.representation.Interface int2 = node2.getInterfaces().get(int2Name); interface2 = int2.toJSONObject(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4503/buggy-version/projects.batfish.src.org.batfish.representation.FlowHistory.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.batfish.representation.Configuration>.get(java.lang.String)", "org.codehaus.jettison.json.JSONObject.put(java.lang.String,java.lang.String)"], "Fixed commit": "c83c2553b9452bd856e8934e5d19e70c723ac913", "Url": "https://api.github.com/repos/batfish/batfish", "Date": "2016-01-03T03:09:40Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input >= (-deadzoneVal)) && (input < 0)) input = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/9100/buggy-version/src.org.usfirst.frc1073.robot17.subsystems.DriveTrain.java", "BodyUseAPI": [], "Fixed commit": "17bc3313999b16019142c92b87490e38fca78cc3", "Url": "https://api.github.com/repos/FRCTeam1073-TheForceTeam/robot17", "Date": "2017-01-29T23:34:39Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (lastState.containsKey(eventId)) { if (!(lastState.get(eventId).equals(status))) { if (status.equals(\"Active\")) { lastActive.put(eventId, date); }else if ((status.equals(\"Success\")) || (status.equals(\"Fail\"))) { lastSuccess.put(eventId, date); } } }else { lastState.put(eventId, status); if (status.equals(\"Active\")) { lastActive.put(eventId, date); }else if ((status.equals(\"Success\")) || (status.equals(\"Fail\"))) { lastSuccess.put(eventId, date); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8527/buggy-version/src.main.java.ca.bsolomon.gw2events.quick.QuickEventJob.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.joda.time.DateTime>.put(java.lang.String,org.joda.time.DateTime)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, org.joda.time.DateTime>.put(java.lang.String,org.joda.time.DateTime)", "java.util.Map<java.lang.String, org.joda.time.DateTime>.put(java.lang.String,org.joda.time.DateTime)", "java.util.Map<java.lang.String, org.joda.time.DateTime>.put(java.lang.String,org.joda.time.DateTime)", "java.lang.String.equals(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "2eaa65be658473508ac760a90958941563ef5eb5", "Url": "https://api.github.com/repos/bogsolomon/gw2eventsapi_quickevents", "Date": "2013-07-18T14:12:42Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gbif.checklistbank.cli.normalizer.Normalizer.getLinneanRankParent(org.neo4j.graphdb.Node)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (p == null) { parent = n; parentRank = hr; found = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/513/buggy-version/checklistbank-cli.src.main.java.org.gbif.checklistbank.cli.normalizer.Normalizer.java", "BodyUseAPI": [], "Fixed commit": "960e4d98a8b331b470a3d58f0b699e6608124c47", "Url": "https://api.github.com/repos/gbif/checklistbank", "Date": "2016-11-21T15:50:43Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (samplecnt < 0) samplecnt = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1577/buggy-version/src.org.hackyourlife.gcn.dsp.RS03.java", "BodyUseAPI": [], "Fixed commit": "69a96934260630bb0800eb878aa06cd5f495903e", "Url": "https://api.github.com/repos/hackyourlife/brstm", "Date": "2017-02-26T17:51:33Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (orderDetail == null) { orderDetail = new com.subang.bean.OrderDetail(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/9165/buggy-version/src.main.java.com.subang.controller.app.OrderController.java", "BodyUseAPI": [], "Fixed commit": "cbdc9e71c1dd5ceb4838e18209f2c7166e96083d", "Url": "https://api.github.com/repos/qiangstrong/SuBang", "Date": "2015-12-21T13:45:09Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["rootNode.get(\"_links\").get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (next == null) { next = rootNode.get(\"_links\").get(\"self\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1720/buggy-version/ontology-converter.src.main.java.uk.ac.ebi.spot.diachron.crawler.OLSCrawler.java", "BodyUseAPI": [], "Fixed commit": "51b631ca0fc098d3829e3fb58b41030c3e539ce2", "Url": "https://api.github.com/repos/EBISPOT/diachron_ols", "Date": "2016-03-30T10:57:39Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((list[i]) == null) && (sampleSet.contains(samples[i]))) list[i] = java.util.Collections.emptyList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8444/buggy-version/src.main.java.org.panda.resource.tcga.MutationReader.java", "BodyUseAPI": [], "Fixed commit": "ba254eb584288c03efeb6bf658897246f25e7e80", "Url": "https://api.github.com/repos/PathwayAndDataAnalysis/resource", "Date": "2016-07-07T23:37:28Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.ListModel<java.io.File>.getElementAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (clicked.isFile()) { try { this.desktop.open(clicked); } catch (java.io.IOException exception) { } }else { if (this.tree.isCollapsed(new javax.swing.tree.TreePath(((application.git_tool.filebrowser.FileBrowser.MyTreeNode) (this.tree.getModel().getRoot())).getPath()))) { this.openPath(new java.io.File(\"/\")); } this.openPath(clicked); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5396/buggy-version/src.application.git_tool.filebrowser.FileBrowser.java", "BodyUseAPI": ["java.awt.Desktop.open(java.io.File)", "application.git_tool.filebrowser.FileBrowser.openPath(java.io.File)"], "Fixed commit": "f7d350315d2157cbe6fc4c3534475f8273f6baee", "Url": "https://api.github.com/repos/cxan96/GIT-Tool", "Date": "2016-11-17T09:42:30Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mPasswordView.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(password)) { mPasswordView.setError(getString(R.string.error_field_required)); focusView = mPasswordView; cancel = true; }else if (!(isPasswordValid(password))) { mPasswordView.setError(getString(R.string.error_invalid_password)); focusView = mPasswordView; cancel = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/837/buggy-version/app.src.main.java.dk.au.cs.nicolai.pvc.littlebigbrother.LoginActivity.java", "BodyUseAPI": ["dk.au.cs.nicolai.pvc.littlebigbrother.LoginActivity.isPasswordValid(java.lang.String)"], "Fixed commit": "5e31a3817a852786cb70f91e9fbd8c4ab8b8a45a", "Url": "https://api.github.com/repos/nicolai-agersbaek/little-big-brother", "Date": "2015-09-15T14:02:20Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mResolvingError) { return; }else if (result.hasResolution()) { try { mResolvingError = true; result.startResolutionForResult(this, dk.au.cs.nicolai.pvc.littlebigbrother.MapsActivity.REQUEST_RESOLVE_ERROR); } catch (android.content.IntentSender e) { mGoogleApiClient.connect(); } }else { mResolvingError = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/837/buggy-version/app.src.main.java.dk.au.cs.nicolai.pvc.littlebigbrother.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "5e31a3817a852786cb70f91e9fbd8c4ab8b8a45a", "Url": "https://api.github.com/repos/nicolai-agersbaek/little-big-brother", "Date": "2015-09-15T14:02:20Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.laytonsmith.aliasengine.Static.getAliasCore().hasPlayerReference(env.GetCommandSender()))) { doRemoval = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4903/buggy-version/src.main.java.com.laytonsmith.aliasengine.functions.Meta.java", "BodyUseAPI": [], "Fixed commit": "43b1e8d06e7aa75e340847ca0c6b1ad696829e33", "Url": "https://api.github.com/repos/EngineHub/CommandHelper", "Date": "2011-12-05T06:53:27Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (doRemoval) { com.laytonsmith.aliasengine.Static.getAliasCore().removePlayerReference(env.GetCommandSender()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4903/buggy-version/src.main.java.com.laytonsmith.aliasengine.functions.Meta.java", "BodyUseAPI": [], "Fixed commit": "43b1e8d06e7aa75e340847ca0c6b1ad696829e33", "Url": "https://api.github.com/repos/EngineHub/CommandHelper", "Date": "2011-12-05T06:53:27Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (doRemoval) { com.laytonsmith.aliasengine.Static.getAliasCore().addPlayerReference(env.GetCommandSender()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4903/buggy-version/src.main.java.com.laytonsmith.aliasengine.functions.Meta.java", "BodyUseAPI": [], "Fixed commit": "43b1e8d06e7aa75e340847ca0c6b1ad696829e33", "Url": "https://api.github.com/repos/EngineHub/CommandHelper", "Date": "2011-12-05T06:53:27Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((listOfFields.size()) > 0) { return listOfFields; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/9237/buggy-version/src.main.java.com.mulesoft.lookuptable.rest.resource.LookupTableResource.java", "BodyUseAPI": [], "Fixed commit": "c201e8a5e412b41a303005f1dca09776b127f711", "Url": "https://api.github.com/repos/damiansima/lookupmanager-rest-mule", "Date": "2012-04-25T19:34:47Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gootara.ios.image.util.ui.ImagePanel.getPreferredSize()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((size.width) != (size.height)) { double p2 = ((size.width) < (size.height)) ? ((double) (this.getHeight())) / (size.getHeight()) : ((double) (this.getWidth())) / (size.getWidth()); if (p2 < p) { p = p2; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/9261/buggy-version/ios-image-util.src.org.gootara.ios.image.util.ui.ImagePanel.java", "BodyUseAPI": ["java.awt.Dimension.getHeight()", "java.awt.Dimension.getWidth()"], "Fixed commit": "f2ad3fc3db99a2ce66425f5a36ce06d541f27886", "Url": "https://api.github.com/repos/gootara-org/ios-image-util", "Date": "2014-02-24T01:12:12Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.springframework.util.StringUtils.hasText(value))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1575/buggy-version/application.src.main.java.com.changhong.common.utils.CHStringUtils.java", "BodyUseAPI": [], "Fixed commit": "f778bcea67141aaccc684a4299a4c97696975d1c", "Url": "https://api.github.com/repos/kunkun39/UPDATE", "Date": "2014-10-21T09:18:03Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((totalFramesSkipped) > 0) { avgFramesSkipped = ((int) (totalFrameCount)) / (totalFramesSkipped); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7808/buggy-version/src.kaban.iklan.GameInfo.java", "BodyUseAPI": [], "Fixed commit": "a511eff023f7e558ca1541b03b36817900fbfae8", "Url": "https://api.github.com/repos/aboichev/gLoop", "Date": "2012-08-09T02:54:09Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fullContact.isFormDefined()) { fullContact.saveForm(); createInfoModel(contact.getPK(), fullContact.getModelId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8185/buggy-version/ejb-core.contact.src.main.java.com.stratelia.webactiv.util.contact.control.ContactBmEJB.java", "BodyUseAPI": ["com.stratelia.webactiv.util.contact.model.CompleteContact.getModelId()", "com.stratelia.webactiv.util.contact.control.ContactBmEJB.createInfoModel(contact.getPK(),fullContact.getModelId())", "com.stratelia.webactiv.util.contact.model.CompleteContact.saveForm()"], "Fixed commit": "663f17b0426463c6089bdb680cbd2bdf76d94903", "Url": "https://api.github.com/repos/CecileBONIN/Silverpeas-Core", "Date": "2015-11-20T00:34:09Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.erikleeness.concurrency.sudoku.Sudoku.get(com.erikleeness.concurrency.sudoku.Pair<java.lang.Integer, java.lang.Integer>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (cellValue.isPresent()) { return !(cellValue.get().equals(n)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/621/buggy-version/src.com.erikleeness.concurrency.sudoku.Sudokus.java", "BodyUseAPI": ["cellValue.get().equals(java.lang.Integer)", "com.google.common.base.Optional<java.lang.Integer>.get()"], "Fixed commit": "f1b279ef5c04de61cbf447606f6f59b13231e881", "Url": "https://api.github.com/repos/erikness/sudokumaker", "Date": "2013-07-10T20:36:47Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.persistence.Query.getResultList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (subscriptionList.isEmpty()) throw new org.votingsystem.throwable.ValidationExceptionVS(\"the group has no active users\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/688/buggy-version/CurrencyServer.src.main.java.org.votingsystem.web.currency.ejb.TransactionVSGroupVSBean.java", "BodyUseAPI": [], "Fixed commit": "e29b197dc5cc2cae5de493eb694fde53a7f511e3", "Url": "https://api.github.com/repos/votingsystem/votingsystem", "Date": "2015-05-07T18:47:07Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entry.getValue().getLives()) == 0) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7885/buggy-version/src.main.java.general.GameState.java", "BodyUseAPI": [], "Fixed commit": "3edf460fc132893ae927ec490fbb0b0591b3c36d", "Url": "https://api.github.com/repos/L1nde/Project-Escape", "Date": "2017-05-01T12:11:49Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((user != null) && ((user.email) != null)) { user.avatar = com.willshex.blogwt.server.helper.UserHelper.emailAvatar(user.email); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/12/buggy-version/src.main.java.com.willshex.blogwt.server.service.user.UserService.java", "BodyUseAPI": ["com.willshex.blogwt.server.helper.UserHelper.emailAvatar(user.email)"], "Fixed commit": "42cf13809b6377b305479a390d5d63c08f080a42", "Url": "https://api.github.com/repos/billy1380/blogwt", "Date": "2017-05-04T16:11:16Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mInjectedViewList.size()) > 0) { return com.emreeran.erecyclerview.ERecyclerView.ITEM_INJECTED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6946/buggy-version/erecyclerview.src.main.java.com.emreeran.erecyclerview.ERecyclerView.java", "BodyUseAPI": [], "Fixed commit": "c65ee824e5c75efa15f3ce32e315be3187325615", "Url": "https://api.github.com/repos/emreeran/ERecyclerView", "Date": "2015-12-15T00:41:16Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (speechRate < (org.buildmlearn.toolkit.learnspelling.SpellingActivity.MIN_SPEECH_RATE)) speechRate = org.buildmlearn.toolkit.learnspelling.SpellingActivity.MIN_SPEECH_RATE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3901/buggy-version/source-code.app.src.main.java.org.buildmlearn.toolkit.learnspelling.SpellingActivity.java", "BodyUseAPI": [], "Fixed commit": "557ea17ce7ada5d1f2497100dca9f3d093020fae", "Url": "https://api.github.com/repos/BuildmLearn/BuildmLearn-Toolkit-Android", "Date": "2016-07-02T15:39:19Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (resultSet.next()) { if ((resultSet.getInt(\"ID\")) == 0) { flag = false; }else flag = true; }else { logger.error(\"User not found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1697/buggy-version/src.main.java.com.epam.library.datasource.mysql.MySQLUsersDAO.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(java.lang.String)"], "Fixed commit": "0ec15cab702278b4876c10531ba7317b3ed371ec", "Url": "https://api.github.com/repos/iurgamy/MyLibrary", "Date": "2014-09-16T12:57:01Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(permissions.hasGroupSupport())) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8089/buggy-version/src.main.java.org.nunnerycode.bukkit.mobbountyreloaded.groups.GroupHandler.java", "BodyUseAPI": [], "Fixed commit": "995ede145e2ead220301dec0e290e8b2c8d6f656", "Url": "https://api.github.com/repos/Nunnery/MobBountyReloaded", "Date": "2014-10-14T00:52:29Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (splits[0].equals(\"PING\")) { de.greenrobot.event.EventBus.getDefault().post(new com.chaincloud.chaincloudv.event.SmsPing(phoneNo)); }else if (splits[0].equals(\"TIME\")) { com.chaincloud.chaincloudv.util.SMSUtil.sendSMS(phoneNo, com.chaincloud.chaincloudv.util.SMSCommandUtil.getVTime(com.chaincloud.chaincloudv.util.DateTimeUtil.getDateTimeString(new java.util.Date())), sendIntent, backIntent); }else { java.lang.String msg = \"sms format is error\"; com.chaincloud.chaincloudv.service.SMSServiceBase.log.error(msg); com.chaincloud.chaincloudv.util.SMSUtil.sendSMS(phoneNo, msg, null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/851/buggy-version/chaincloud-v.src.main.java.com.chaincloud.chaincloudv.service.SMSServiceBase.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "a05a328714301c981eb4af969e3ab006c4bc21d6", "Url": "https://api.github.com/repos/chaincloud-dot-com/chaincloud-v", "Date": "2016-10-09T02:47:02Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getLong(cursor.getColumnIndex(org.totschnig.myexpenses.activity.KEY_ROWID))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(org.totschnig.myexpenses.model.Account.isInstanceCached(accountId))) new org.totschnig.myexpenses.model.Account(accountId, cursor);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5345/buggy-version/src.org.totschnig.myexpenses.activity.MyExpenses.java", "BodyUseAPI": [], "Fixed commit": "1fb2c07d984c4d23cbeced0b7407aedfefb84b87", "Url": "https://api.github.com/repos/mtotschnig/MyExpenses", "Date": "2013-08-30T13:17:36Z"},
{"Line": "=>1028", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((splitDiffBundle) != null) { for (com.android.utils.Pair<com.taobao.android.tpatch.model.BundleBO, com.taobao.android.tpatch.model.BundleBO> bundle : splitDiffBundle) { awbBundleMap.put(bundle.getSecond().getBundleName(), bundle.getSecond().getBundleFile()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5864/buggy-version/atlas-gradle-plugin.dexpatch.src.main.java.com.taobao.android.TPatchTool.java", "BodyUseAPI": [], "Fixed commit": "210e2e46beadc0f2bd12f2c76d2463fd724b56a8", "Url": "https://api.github.com/repos/alibaba/atlas", "Date": "2017-07-17T02:56:11Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((y - dist) > 2) chunkPrimerIn.setBlockState(x, (y - dist), z, Blocks.AIR.getDefaultState());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/9160/buggy-version/src.main.java.zmaster587.advancedRocketry.world.decoration.MapGenCrater.java", "BodyUseAPI": ["net.minecraft.world.chunk.ChunkPrimer.setBlockState(int,int,int,Blocks.AIR.getDefaultState())"], "Fixed commit": "44011c5ebfa095fe140217bf65d0753f3ad5ba53", "Url": "https://api.github.com/repos/zmaster587/AdvancedRocketry", "Date": "2017-04-08T23:34:02Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (outside != 1) { ret[0] = ((((x + \"\u00b1\") + outside) + \"\u221a(\") + inside) + \")\"; }else { ret[0] = ((x + \"\u00b1\u221a(\") + inside) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2870/buggy-version/app.src.main.java.jp.kosuke.quadraticequation.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "06f379f7202c4255fb93ceef293571fc555f0bdc", "Url": "https://api.github.com/repos/KosukeTakahashi/QuadraticEquationForAndroid", "Date": "2016-04-01T00:59:49Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jobInfo == null) { throw new com.netflix.genie.common.exceptions.CloudServiceException(java.net.HttpURLConnection.HTTP_BAD_REQUEST, \"Missing jobInfo object\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6752/buggy-version/genie-server.src.main.java.com.netflix.genie.server.services.impl.GenieExecutionServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "34e76ea5aae24537d01dc7602da6290c792b17c5", "Url": "https://api.github.com/repos/Netflix/genie", "Date": "2013-10-31T02:02:16Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (title.substring(0, 2).equals(\"PR\")) { courseInfo = edu.ccbcmd.pathwayguide.DatabaseWrapper.getClassInfo(\"PRELECT\"); }else if ((courseInfo.length) == 0) { android.util.Log.e(\"WEHAVEERROR\", title); courseInfo = edu.ccbcmd.pathwayguide.DatabaseWrapper.getClassInfo(\"GENMATH\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/9112/buggy-version/app.src.main.java.edu.ccbcmd.pathwayguide.CourseClassLoader.java", "BodyUseAPI": [], "Fixed commit": "0d3767fa09a7e560ef9cd291a2f8517fa9468b17", "Url": "https://api.github.com/repos/DevaDixon/Pathway_Guide", "Date": "2016-07-15T20:23:03Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.univocity.parsers.common.DataProcessingException.getRow()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (row != null) { row = row.clone(); for (int i = 0; i < (row.length); i++) { row[i] = restrictContent(row[i]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1076/buggy-version/src.main.java.com.univocity.parsers.common.DataProcessingException.java", "BodyUseAPI": ["java.lang.Object[].clone()"], "Fixed commit": "491ab3bb952384ee914c48b6d95cc69853f35acd", "Url": "https://api.github.com/repos/uniVocity/univocity-parsers", "Date": "2016-07-28T07:30:41Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1800/buggy-version/src.org.jgroups.util.Owner.java", "BodyUseAPI": [], "Fixed commit": "ed620039475754cb46b5c00bebf2566d5fa71442", "Url": "https://api.github.com/repos/vblagoje/JGroups", "Date": "2012-06-20T13:59:50Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.minitoolbox.reflection.typewrapper.TypeWrapper.wrap(java.lang.reflect.Type)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (wrappedBestType instanceof org.minitoolbox.reflection.typewrapper.VariableTypeWrapper) { java.lang.reflect.Type[] upperBounds = ((org.minitoolbox.reflection.typewrapper.VariableTypeWrapper) (wrappedBestType)).getUpperBounds(); if ((upperBounds.length) == 1) bestTypeForConverter = upperBounds[0]; else throw new org.jconverter.converter.ConversionException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1569/buggy-version/src.main.java.org.jconverter.converter.ConverterEvaluator.java", "BodyUseAPI": [], "Fixed commit": "a269e3845e22b8dd9b6c23c57dc82027841a98b7", "Url": "https://api.github.com/repos/jconverter/jconverter", "Date": "2013-12-15T19:32:29Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["icy.gui.menu.MainRibbon.createRibbonTask(icy.workspace.Workspace.TaskDefinition)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ribbonTask == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7165/buggy-version/icy.gui.menu.MainRibbon.java", "BodyUseAPI": [], "Fixed commit": "4aae5cfd5479047aeff72428d0247a35cfd9a759", "Url": "https://api.github.com/repos/Icy-imaging/Icy-Kernel", "Date": "2013-01-10T14:46:13Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<alluxio.AlluxioURI>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (mFileSystem.exists(inconsistentUri)) { mFileSystem.listStatus(inconsistentUri, alluxio.client.file.options.ListStatusOptions.defaults().setLoadMetadataType(LoadMetadataType.Always)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3997/buggy-version/shell.src.main.java.alluxio.shell.command.CheckConsistencyCommand.java", "BodyUseAPI": ["alluxio.shell.command.CheckConsistencyCommand.listStatus(alluxio.AlluxioURI,alluxio.client.file.options.ListStatusOptions.defaults().setLoadMetadataType(LoadMetadataType.Always))"], "Fixed commit": "4db7c23c982a75f74952a9f30f34e98681ed514c", "Url": "https://api.github.com/repos/gjhkael/alluxio", "Date": "2017-02-22T09:38:02Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) { if ((org.eyeseetea.malariacare.EyeSeeTeaApplication.permissions) == null) { org.eyeseetea.malariacare.EyeSeeTeaApplication.permissions = org.eyeseetea.malariacare.utils.Permissions.getInstance(mActivity); } if ((EyeSeeTeaApplication.permissions.getPermission(Permissions.PHONE_STATE_REQUEST_CODE)) != null) { org.eyeseetea.malariacare.utils.Permissions.Permission permission = EyeSeeTeaApplication.permissions.getPermission(Permissions.PHONE_STATE_REQUEST_CODE); EyeSeeTeaApplication.permissions.requestPermission(permission.getDefinition(), permission.getCode()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3869/buggy-version/app.src.cnm.java.org.eyeseetea.malariacare.strategies.SplashActivityStrategy.java", "BodyUseAPI": [], "Fixed commit": "daaa8118cc2228e5871d1c8e19aa1eb0239290b3", "Url": "https://api.github.com/repos/EyeSeeTea/pictureapp", "Date": "2017-10-24T12:46:12Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.ggp.base.util.symbol.grammar.SymbolAtom>.get(int)", "org.ggp.base.util.symbol.grammar.SymbolPool.getAtom(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((org.apache.commons.lang.StringUtils.isNumeric(lGDLAtom.toString())) && (!(lGDLAtom.equals(lStoredAtom)))) { org.ggp.base.util.game.GDLTranslator.LOGGER.debug(((\"Not \" + lGameName) + \": Numeric constants differ\")); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/9158/buggy-version/src.org.ggp.base.util.game.GDLTranslator.java", "BodyUseAPI": [], "Fixed commit": "c5a4dee8b1563bddfa6e5d2c2caaeaa0de98e79f", "Url": "https://api.github.com/repos/SanchoGGP/ggp-base", "Date": "2015-06-15T20:52:22Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (slimeknights.tconstruct.library.utils.TinkerUtil.getModifierTag(event.tag, TinkerToolLeveling.modToolLeveling.getModifierIdentifier()).hasNoTags()) { TinkerToolLeveling.modToolLeveling.apply(event.tag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2475/buggy-version/src.main.java.slimeknights.toolleveling.EventHandler.java", "BodyUseAPI": ["TinkerToolLeveling.modToolLeveling.apply(event.tag)"], "Fixed commit": "6544f71a13a74bb479cd556ec7c90e8b0801b507", "Url": "https://api.github.com/repos/SlimeKnights/TinkersToolLeveling", "Date": "2016-10-18T09:23:52Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((metadata) == null) metadata = new com.orientechnologies.orient.object.metadata.OMetadataObject(underlying.getMetadata());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4153/buggy-version/object.src.main.java.com.orientechnologies.orient.object.db.OObjectDatabaseTx.java", "BodyUseAPI": [], "Fixed commit": "ea725f74bb10b27d2457885e1fe4914553fdf18e", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2013-09-12T16:03:15Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (edu.cornell.mannlib.vitro.webapp.dao.jena.ObjectPropertyStatementDaoJena.log.isDebugEnabled()) { edu.cornell.mannlib.vitro.webapp.dao.jena.ObjectPropertyStatementDaoJena.log.debug(((\"Constructed model has \" + (constructedModel.size())) + \" statements.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5277/buggy-version/webapp.src.edu.cornell.mannlib.vitro.webapp.dao.jena.ObjectPropertyStatementDaoJena.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(((\"Constructed model has \" + (constructedModel.size())) + \" statements.\"))"], "Fixed commit": "43c47d0a558092ee28f15c544cd64a8d82c82d50", "Url": "https://api.github.com/repos/vivo-project/Vitro", "Date": "2013-08-27T19:46:15Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getIntent().getAction()) != null) { if (getIntent().getAction().equals(\"android.intent.action.VIEW\")) { urlintent(); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7683/buggy-version/src.de.geeksfactory.opacclient.FrontpageActivity.java", "BodyUseAPI": [], "Fixed commit": "ea915fc16c81bd7fb828b87c68720a2cf6544873", "Url": "https://api.github.com/repos/raphaelm/opacclient", "Date": "2012-07-15T21:23:12Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start) { start = false; scheduledFuture.cancel(true); FIXED_EXECUTOR_SERVICE.shutdown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/739/buggy-version/job-tracker.src.main.java.com.lts.job.tracker.support.DeadJobChecker.java", "BodyUseAPI": [], "Fixed commit": "5ef32ec6fdf70c9f33ba8da1043d5854010a1c38", "Url": "https://api.github.com/repos/ltsopensource/light-task-scheduler", "Date": "2015-03-20T07:57:19Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/739/buggy-version/job-tracker.src.main.java.com.lts.job.tracker.support.DeadJobChecker.java", "BodyUseAPI": [], "Fixed commit": "5ef32ec6fdf70c9f33ba8da1043d5854010a1c38", "Url": "https://api.github.com/repos/ltsopensource/light-task-scheduler", "Date": "2015-03-20T07:57:19Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (spawnFileList != null) { for (java.io.File file : spawnFolder.listFiles()) { file.delete(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8665/buggy-version/src.main.java.jas.common.WorldSettings.java", "BodyUseAPI": [], "Fixed commit": "77c4cecdfae209f8780702b38a60800445442646", "Url": "https://api.github.com/repos/Crudedragos/JustAnotherSpawner", "Date": "2014-04-14T19:53:17Z"}]}
