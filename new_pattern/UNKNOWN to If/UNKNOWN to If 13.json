{"UNKNOWN to If":[{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (entityFileList != null) { for (java.io.File file : entityFolder.listFiles()) { file.delete(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8665/buggy-version/src.main.java.jas.common.WorldSettings.java", "BodyUseAPI": [], "Fixed commit": "77c4cecdfae209f8780702b38a60800445442646", "Url": "https://api.github.com/repos/Crudedragos/JustAnotherSpawner", "Date": "2014-04-14T19:53:17Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isMostOuterScope) { isAccessibleFromPublic = hasPublicModifier; }else { final com.puppycrawl.tools.checkstyle.api.DetailAST parentClassAst = ast.getParent().getParent(); if (((parentClassAst.getType()) == (com.puppycrawl.tools.checkstyle.api.TokenTypes.INTERFACE_DEF)) || hasPublicModifier) { isAccessibleFromPublic = com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck.isClassPublic(parentClassAst); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6044/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck.java", "BodyUseAPI": [], "Fixed commit": "22afc53c382473d0a5127700a3bc3bf579fd90c8", "Url": "https://api.github.com/repos/liscju/checkstyle", "Date": "2015-09-05T14:43:57Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sgcib.kata.meetings.domain.MeetingRoomRepository.findOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (meetingRoom == null) { throw new org.sgcib.kata.meetings.service.RoomNotExistException(\"Room not found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5402/buggy-version/src.main.java.org.sgcib.kata.meetings.controller.RoomController.java", "BodyUseAPI": [], "Fixed commit": "d2fcf5e03317c199cf8e827aa61f714ea97776d1", "Url": "https://api.github.com/repos/abderrazak-bouadma/kata-meetings-api", "Date": "2016-09-10T21:55:04Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hideController)) super.show(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3572/buggy-version/app.src.main.java.free.rm.skytube.gui.businessobjects.MediaControllerEx.java", "BodyUseAPI": [], "Fixed commit": "b06d3152c7faa5661973e94ba3cc81c3a68b6623", "Url": "https://api.github.com/repos/ram-on/SkyTube", "Date": "2017-04-09T15:13:02Z"},
{"Line": "=>3045", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ViewManager.Stream.getReverseJoinDeleteNewRow()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(newRJRow.getMap(\"list_item1\").isEmpty())) && (newRJRow.getMap(\"list_item2\").isEmpty())) { if (!(leftJoinAggTable.equals(\"false\"))) { while (!(ViewManager.JoinAggGroupByHelper.deleteElementFromRow(stream, json, leftJoinAggTable, aggkey, aggKeyValue, aggColValue, identifier))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1061/buggy-version/src.java.ViewManager.ViewManager.java", "BodyUseAPI": [], "Fixed commit": "5370a7616a901be34ed5e880a2f6adcd9aea0e07", "Url": "https://api.github.com/repos/abdelrahmanbadawy/Cassandra-VMS", "Date": "2015-10-26T19:12:05Z"},
{"Line": "=>3125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ViewManager.Stream.getReverseJoinDeleteNewRow()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(newRJRow.getMap(\"list_item2\").isEmpty())) && (newRJRow.getMap(\"list_item1\").isEmpty())) { if (!(rightJoinAggTable.equals(\"false\"))) { while (!(ViewManager.JoinAggGroupByHelper.deleteElementFromRow(stream, json, rightJoinAggTable, aggKey, aggKeyValue, aggColValue, identifier))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1061/buggy-version/src.java.ViewManager.ViewManager.java", "BodyUseAPI": [], "Fixed commit": "5370a7616a901be34ed5e880a2f6adcd9aea0e07", "Url": "https://api.github.com/repos/abdelrahmanbadawy/Cassandra-VMS", "Date": "2015-10-26T19:12:05Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.flowable.engine.impl.identity.Authentication.getAuthenticatedUserId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (authenticatedUserId != null) { org.flowable.engine.impl.util.IdentityLinkUtil.createProcessInstanceIdentityLink(subProcessInstance, authenticatedUserId, null, IdentityLinkType.STARTER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7714/buggy-version/modules.flowable-engine.src.main.java.org.flowable.engine.impl.persistence.entity.ExecutionEntityManagerImpl.java", "BodyUseAPI": ["org.flowable.engine.impl.util.IdentityLinkUtil.createProcessInstanceIdentityLink(org.flowable.engine.impl.persistence.entity.ExecutionEntity,java.lang.String,<nulltype>,IdentityLinkType.STARTER)"], "Fixed commit": "ab723a4d97f3bb53f08389486e731d20365f85d8", "Url": "https://api.github.com/repos/yvoswillens/flowable-engine", "Date": "2017-08-18T12:10:25Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(currentGameData.getBoard().hasChars(word))) { return engine.GameEngine.WordCheck.CHARS_NOT_PRESENT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8169/buggy-version/GameEngine.src.engine.GameEngine.java", "BodyUseAPI": [], "Fixed commit": "f66a26ab63cc46aa5abfb805051dc59d37a559d0", "Url": "https://api.github.com/repos/DjLegolas/Wordiada", "Date": "2017-05-02T19:26:30Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((noti.date) != null) && (!(noti.date.isEmpty()))) { java.util.Date date = null; java.text.SimpleDateFormat old_date_format = new java.text.SimpleDateFormat(\"yyyyMMdd'T'HHmmss\"); java.text.SimpleDateFormat new_date_format = new java.text.SimpleDateFormat(\"hh:mm a\"); try { date = old_date_format.parse(noti.date); } catch (java.text.ParseException e) { e.printStackTrace(); } mLiveCardView.setTextViewText(R.id.notif_time, new_date_format.format(date)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/101/buggy-version/src.jz.ios.ancs.BLEservice.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(noti.date)"], "Fixed commit": "c1861176e9c5bc5990ff09d82b8e3829cbcb3f4b", "Url": "https://api.github.com/repos/longzheng/glass_ble_ancs", "Date": "2014-06-14T08:34:34Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((guards.size()) > 0) && ((noncompletion.size()) > 0)) { sb.append(\"\\n\\t[]\"); sb.append(((\"\\n\\t[\" + (elseguard.toString())) + \"] & \")); translateNonCompletionTransitions(sb, noncompletion); sb.append(\")\"); }else if ((noncompletion.size()) > 0) { sb.append(\"\\n\\t[]\"); sb.append(\"\\n\\t[false] & \"); translateNonCompletionTransitions(sb, noncompletion); sb.append(\")\"); }else { sb.append(\")\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6393/buggy-version/core.s2c.src.main.java.eu.compassresearch.core.s2c.SysMlToCmlTranslator.java", "BodyUseAPI": ["java.util.List<eu.compassresearch.core.s2c.dom.Transition>.size()", "eu.compassresearch.core.s2c.SysMlToCmlTranslator.translateNonCompletionTransitions(java.lang.StringBuilder,java.util.List<eu.compassresearch.core.s2c.dom.Transition>)", "eu.compassresearch.core.s2c.SysMlToCmlTranslator.translateNonCompletionTransitions(java.lang.StringBuilder,java.util.List<eu.compassresearch.core.s2c.dom.Transition>)"], "Fixed commit": "2b2188d1b2dc1c77e473f20f2948f2814009d0ce", "Url": "https://api.github.com/repos/symphonytool/symphony", "Date": "2014-08-27T14:42:58Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(inList.isEmpty())) { minHeap.add(new org.xcolab.utils.ListUtil.ListContainer<>(inList, comparator)); size += inList.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8485/buggy-version/services.plansProposalsFacade.plansProposalsFacade-portlet-service.src.main.java.org.xcolab.utils.ListUtil.java", "BodyUseAPI": ["java.util.List<T>.size()", "java.util.PriorityQueue<org.xcolab.utils.ListUtil.ListContainer<T>>.add(org.xcolab.utils.ListUtil.ListContainer<>)"], "Fixed commit": "44b2573eb6753e03a54ab8d954db0c6d244f8522", "Url": "https://api.github.com/repos/CCI-MIT/XCoLab", "Date": "2015-12-09T05:08:30Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xcolab.jspTags.discussion.wrappers.DiscussionCategoryGroupWrapper.getCategories(org.xcolab.jspTags.discussion.ThreadSortColumn,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (categories != null) { for (org.xcolab.jspTags.discussion.wrappers.CategoryWrapper category : categories) { threadsList.add(new java.util.ArrayList(category.getThreads())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8485/buggy-version/portlets.discussions-portlet.src.main.java.org.xcolab.portlets.discussions.views.CategoryController.java", "BodyUseAPI": [], "Fixed commit": "44b2573eb6753e03a54ab8d954db0c6d244f8522", "Url": "https://api.github.com/repos/CCI-MIT/XCoLab", "Date": "2015-12-09T05:08:30Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((capture.length()) > (ProcessOutputStream.ERROR_TEXT_MAX_LENGTH)) { com.emc.storageos.systemservices.impl.util.ProcessRunner.log.warn(\"Current error text length {} exceeds maximum error text length {}. Discard further errors\", capture.length(), ProcessOutputStream.ERROR_TEXT_MAX_LENGTH); return; }else { capture.append(line); capture.append(\"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8624/buggy-version/syssvc.src.main.java.com.emc.storageos.systemservices.impl.util.ProcessRunner.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "org.slf4j.Logger.warn(java.lang.String,int,ProcessOutputStream.ERROR_TEXT_MAX_LENGTH)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.length()"], "Fixed commit": "f5df51a807066e853dcaa4733f44e0e54be93e9a", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-10-23T15:40:50Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (input.startsWith(\".\")) { out(\"You cannot search for a query that starts with an extension.\"); }else if ((input.length()) < 3) { out(\"You cannot search for a query shorter than 3 characters.\"); }else { if (!(searchMode)) { removeColumnAndData(searchRes, 0); searchModel.addColumn(\"Filename\"); searchModel.addColumn(\"Size\"); searchModel.addColumn(\"Checksum\"); searchRes.getColumnModel().getColumn(2).setMinWidth(0); searchRes.getColumnModel().getColumn(2).setMaxWidth(0); searchRes.getColumnModel().getColumn(2).setWidth(0); searchMode = true; } atrium.NetHandler.doSearch(input); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1295/buggy-version/src.gui.MainWindow.java", "BodyUseAPI": ["atrium.NetHandler.doSearch(java.lang.String)", "java.lang.String.length()"], "Fixed commit": "bbd5e69b8ff1e111da02b1a22e604f469169c12c", "Url": "https://api.github.com/repos/djkazic/gemini", "Date": "2015-12-14T17:05:34Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mekanism.common.block.BlockTransmitter.getDefaultForTile(((mekanism.common.tile.transmitter.TileEntitySidedPipe) (world.getTileEntity(pos))))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bounding == null) return super.getSelectedBoundingBox(state, world, pos);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7095/buggy-version/src.main.java.mekanism.common.block.BlockTransmitter.java", "BodyUseAPI": [], "Fixed commit": "ed9140ce043d57555146748077e9895d8d1cf6ed", "Url": "https://api.github.com/repos/thiakil/Mekanism", "Date": "2017-06-08T07:02:44Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.floodlightcontroller.packet.Ethernet.getPayload()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (ip.getProtocol().equals(IpProtocol.UDP)) { net.floodlightcontroller.packet.UDP udp = ((net.floodlightcontroller.packet.UDP) (ip.getPayload())); mb.setExact(MatchField.IP_PROTO, IpProtocol.UDP).setExact(MatchField.UDP_SRC, udp.getSourcePort()).setExact(MatchField.UDP_DST, udp.getDestinationPort()); }else if (ip.getProtocol().equals(IpProtocol.ICMP)) { mb.setExact(MatchField.IP_PROTO, IpProtocol.ICMP); }else if (ip.getProtocol().equals(IpProtocol.IGMP)) { mb.setExact(MatchField.IP_PROTO, IpProtocol.IGMP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8428/buggy-version/src.main.java.net.floodlightcontroller.forwarding.Forwarding.java", "BodyUseAPI": ["ip.getProtocol().equals(IpProtocol.ICMP)", "net.floodlightcontroller.packet.IPv4.getProtocol()", "net.floodlightcontroller.packet.IPv4.getProtocol()", "ip.getProtocol().equals(IpProtocol.IGMP)", "net.floodlightcontroller.packet.IPv4.getPayload()"], "Fixed commit": "c47fb78c17f8c92dbdb92b969ce89a2aa6e953fa", "Url": "https://api.github.com/repos/rizard/SOSForFloodlight", "Date": "2015-07-07T15:22:52Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSourceAgent) { actions.add(factory.actions().output(org.projectfloodlight.openflow.types.OFPort.of(1), -1)); }else { actions.add(factory.actions().output(OFPort.LOCAL, -1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8428/buggy-version/src.main.java.net.floodlightcontroller.sos.SOS.java", "BodyUseAPI": [], "Fixed commit": "c47fb78c17f8c92dbdb92b969ce89a2aa6e953fa", "Url": "https://api.github.com/repos/rizard/SOSForFloodlight", "Date": "2015-07-07T15:22:52Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list != null) { for (imatproject.ShoppingItem item : list) { if ((i % 2) == 0) { mainFrame.getJpListDetailsPanel().add(new imatproject.ShoppingCartEntry(item.getProduct(), item.getAmount(), 200, 200, 200, new imatproject.IMatController.RemoveFromListButtonListener(), new imatproject.IMatController.ListPriceListener())); }else { mainFrame.getJpListDetailsPanel().add(new imatproject.ShoppingCartEntry(item.getProduct(), item.getAmount(), 230, 230, 230, new imatproject.IMatController.RemoveFromListButtonListener(), new imatproject.IMatController.ListPriceListener())); } i++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4052/buggy-version/iMatProject.src.imatproject.IMatController.java", "BodyUseAPI": [], "Fixed commit": "11eac6fad747006e38a436b984a7c9cfac15b141", "Url": "https://api.github.com/repos/Matpan/GUIProjekt", "Date": "2015-03-11T17:24:11Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (winner.equals(9999)) { if ((((answer) - (java.lang.Integer.parseInt(responses.get(counter)))) < (winner)) && (((answer) - (java.lang.Integer.parseInt(responses.get(counter)))) >= 0)) { winner = java.lang.Integer.parseInt(responses.get(counter)); } }else { if ((((answer) - (java.lang.Integer.parseInt(responses.get(counter)))) > (winner)) && (((answer) - (java.lang.Integer.parseInt(responses.get(counter)))) >= 0)) { winner = java.lang.Integer.parseInt(responses.get(counter)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2966/buggy-version/app.src.main.java.com.example.admin.guestimation.ScoreActivity.java", "BodyUseAPI": [], "Fixed commit": "ff7ff86edd2839bc8ed76317832feb8780890f9f", "Url": "https://api.github.com/repos/llambertosu/Guestimation", "Date": "2017-12-14T00:48:44Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fromSwitch.getId().equals(toSwitch.getId()))) { bundles.add(new de.tuberlin.cit.sdn.middleware.flowSwitching.model.TaskFlowBundle(fromSwitch, toSwitch)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7454/buggy-version/sdn-data-process-engine-middleware.sdn-middleware.src.main.java.de.tuberlin.cit.sdn.middleware.flowSwitching.LoadBalancer.java", "BodyUseAPI": ["java.util.LinkedList<de.tuberlin.cit.sdn.middleware.flowSwitching.model.TaskFlowBundle>.add(de.tuberlin.cit.sdn.middleware.flowSwitching.model.TaskFlowBundle)"], "Fixed commit": "ddcbacb2d9651ddcd4915ebd787458b10c1d0b6c", "Url": "https://api.github.com/repos/citlab/vs.msc.ws14", "Date": "2015-02-26T20:13:43Z"},
{"Line": "=>708", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (size != longSize) { throw new java.lang.ArrayIndexOutOfBoundsException((\"Required array size too large: \" + (java.lang.String.valueOf(longSize)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4428/buggy-version/commons.org.beangle.commons.core.src.main.java.org.beangle.commons.lang.Strings.java", "BodyUseAPI": ["java.lang.String.valueOf(long)"], "Fixed commit": "fcef1eb3dc8d323c4dec13d9b19d2dd229ae6bbf", "Url": "https://api.github.com/repos/beangle/library", "Date": "2012-07-14T12:55:25Z"},
{"Line": "=>701", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (repeat <= 1) { org.beangle.commons.lang.Assert.isTrue((repeat >= 0), \"invalid count: %s\", repeat); return repeat == 0 ? \"\" : str; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4428/buggy-version/commons.org.beangle.commons.core.src.main.java.org.beangle.commons.lang.Strings.java", "BodyUseAPI": ["org.beangle.commons.lang.Assert.isTrue(boolean,java.lang.String,int)"], "Fixed commit": "fcef1eb3dc8d323c4dec13d9b19d2dd229ae6bbf", "Url": "https://api.github.com/repos/beangle/library", "Date": "2012-07-14T12:55:25Z"},
{"Line": "=>700", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4428/buggy-version/commons.org.beangle.commons.core.src.main.java.org.beangle.commons.lang.Strings.java", "BodyUseAPI": [], "Fixed commit": "fcef1eb3dc8d323c4dec13d9b19d2dd229ae6bbf", "Url": "https://api.github.com/repos/beangle/library", "Date": "2012-07-14T12:55:25Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (parent != null) { parent.removeView(org.dronix.android.unisannio.fragments.MapFragment.view); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5507/buggy-version/unisannio.src.main.java.org.dronix.android.unisannio.fragments.MapFragment.java", "BodyUseAPI": ["android.view.ViewGroup.removeView(android.view.View)"], "Fixed commit": "67babcea0944b92068c3121bdaca20b8e66ec734", "Url": "https://api.github.com/repos/hamen/unisannio-android", "Date": "2014-08-02T12:35:36Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parts.length) == 1) { parts = temporaryParts.split(\"\u2013\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7988/buggy-version/ComicBookRouteBrussels.app.src.main.java.com.kristofcolpaert.comicbookroutebrussels.data.ComicDataLoader.java", "BodyUseAPI": [], "Fixed commit": "6aab878388397636b3dae0af762194d0f9ca557a", "Url": "https://api.github.com/repos/KristofColpaert/nmct.2NMCT_project2015_colpaert_kristof", "Date": "2015-07-25T17:29:45Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != classLoader) { enhancer.setClassLoader(classLoader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7598/buggy-version/src.main.java.com.p6spy.engine.proxy.ProxyFactory.java", "BodyUseAPI": ["net.sf.cglib.proxy.Enhancer.setClassLoader(java.lang.ClassLoader)"], "Fixed commit": "a67420b33223a896362a6b1905667e4c8fecb0f3", "Url": "https://api.github.com/repos/quintonm/p6spy", "Date": "2014-05-01T09:34:32Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.github.ucchyocean.ct.ColorTeamingConfig.showJapanizeGlobalChat) { event.setMessage(addJapanize(event.getMessage())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2369/buggy-version/src.main.java.com.github.ucchyocean.ct.listener.PlayerChatListener.java", "BodyUseAPI": [], "Fixed commit": "9546acc2f947171d8fd1a23dd5a9fa6b8e36098b", "Url": "https://api.github.com/repos/ucchyocean/ColorTeaming", "Date": "2013-05-22T17:17:13Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.restlet.engine.converter.DefaultConverter.VARIANT_OBJECT_BINARY_SUPPORTED) { updatePreferences(preferences, MediaType.APPLICATION_JAVA_OBJECT, 1.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/928/buggy-version/modules.org.restlet.src.org.restlet.engine.converter.DefaultConverter.java", "BodyUseAPI": [], "Fixed commit": "3234cf68962aac41ab1ee80129a85f90607faca6", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2013-08-22T09:50:19Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.restlet.engine.converter.DefaultConverter.VARIANT_OBJECT_BINARY_SUPPORTED) { result = addVariant(result, org.restlet.engine.converter.DefaultConverter.VARIANT_OBJECT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/928/buggy-version/modules.org.restlet.src.org.restlet.engine.converter.DefaultConverter.java", "BodyUseAPI": [], "Fixed commit": "3234cf68962aac41ab1ee80129a85f90607faca6", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2013-08-22T09:50:19Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["play.mvc.Http.MultipartFormData.FilePart.getFile()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(file.renameTo(newFile))) { play.Logger.debug(\"Was unable to move uploaded file to the upload directory, will try to copy it instead...\"); try { utils.Files.copy(file, newFile); } catch (java.io.IOException e) { play.Logger.error(\"Was unable to copy uploaded file to new file\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/741/buggy-version/app.models.Upload.java", "BodyUseAPI": ["utils.Files.copy(java.io.File,java.io.File)"], "Fixed commit": "e86f601cc29efb64b8a482f79b52f7f59a29f68b", "Url": "https://api.github.com/repos/daisy-consortium/pipeline-webui", "Date": "2012-11-19T15:23:47Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((items.length()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/471/buggy-version/src.minicraft.entity.Inventory.java", "BodyUseAPI": [], "Fixed commit": "7123b316de17e9f7e6e6eaa029f6662f66d490c8", "Url": "https://api.github.com/repos/chrisj42/minicraft-plus-revived", "Date": "2017-07-06T21:44:42Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (minicraft.Game.debug) java.lang.System.out.println((((((minicraft.Game.onlinePrefix()) + \"updating inventory \") + (this)) + \" with itemstring: \") + items));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/471/buggy-version/src.minicraft.entity.Inventory.java", "BodyUseAPI": [], "Fixed commit": "7123b316de17e9f7e6e6eaa029f6662f66d490c8", "Url": "https://api.github.com/repos/chrisj42/minicraft-plus-revived", "Date": "2017-07-06T21:44:42Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (registrantType == (RegistrantType.PREGNANT_MOTHER)) { ancRegDate = decideANCRegistrationDate(ancRegToday, ancRegDate); org.motechproject.server.model.Facility ancFacility = decideFacility(facilityId, errors, ancRegToday); registrarBean.registerANCMother(staff, ancFacility.getLocation(), ancRegDate, patient, ancRegNumber, expDeliveryDate, height, gravida, parity, enroll, consent, ownership, phoneNumber, format, language, dayOfWeek, timeOfDay, howLearned); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3739/buggy-version/motech-server-core.src.main.java.org.motechproject.server.ws.RegistrarWebService.java", "BodyUseAPI": [], "Fixed commit": "25131a2902935d1e993ac1a60f4612dbca6b9489", "Url": "https://api.github.com/repos/motech/MOTECH-Ghana", "Date": "2011-05-19T12:23:27Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { com.google.firebase.database.FirebaseDatabase.getInstance().setPersistenceEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/923/buggy-version/app.src.main.java.com.example.sjors.sjors_witteveen_pset6.SignInActivity.java", "BodyUseAPI": [], "Fixed commit": "8b18ddfedd787a8ca676f7489e23613b6f7c4867", "Url": "https://api.github.com/repos/SjorsWitt/Sjors_Witteveen-pset6", "Date": "2016-10-27T15:46:27Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (list == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4267/buggy-version/src.net.raysforge.commons.Json.java", "BodyUseAPI": [], "Fixed commit": "2c5fc1d84b50ea82af52531ca28b9ca3a815aa7b", "Url": "https://api.github.com/repos/rhulha/RaysCommons", "Date": "2016-11-02T20:39:31Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getSession(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((session != null) && ((session.getAttribute(\"name\")) != null)) { response.sendRedirect(\"secure/Menu\"); }else { request.getRequestDispatcher(\"Register.jsp\").forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7350/buggy-version/src.java.RegisterServlet.java", "BodyUseAPI": [], "Fixed commit": "ca923a8cb0464ae1a2d59d8dae59e7d7355f84f9", "Url": "https://api.github.com/repos/MaximusPrimeForever/AMaze-Web", "Date": "2016-05-23T16:58:01Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.bcel.classfile.Constant.getBytes()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (utf8String.startsWith(\"java/lang/Runtime\")) { return true; }else if (utf8String.startsWith(\"java/lang/ProcessBuilder\")) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1798/buggy-version/plugin.src.main.java.com.h3xstream.findsecbugs.injection.command.CommandInjectionSource.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "e919c5ce6e2687bdabe2071f412f72543549ac4c", "Url": "https://api.github.com/repos/h3xstream/find-sec-bugs", "Date": "2015-08-24T15:48:51Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.apache.camel.component.facebook.data.FacebookMethodsType>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((candidates.size()) > nGetMethods) { nameStyle = org.apache.camel.component.facebook.config.FacebookNameStyle.GET_AND_SEARCH; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6624/buggy-version/components.camel-facebook.src.main.java.org.apache.camel.component.facebook.FacebookEndpoint.java", "BodyUseAPI": [], "Fixed commit": "47742fbb4020367c09380f6a6d172c1be10342c1", "Url": "https://api.github.com/repos/apache/camel", "Date": "2013-10-09T03:33:44Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (speechRate < (org.buildmlearn.toolkit.learnspelling.SpellingActivity.MIN_SPEECH_RATE)) speechRate = org.buildmlearn.toolkit.learnspelling.SpellingActivity.MIN_SPEECH_RATE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3114/buggy-version/source-code.app.src.main.java.org.buildmlearn.toolkit.learnspelling.SpellingActivity.java", "BodyUseAPI": [], "Fixed commit": "7eca22fc69d8c40a081e691f503b5f643a914222", "Url": "https://api.github.com/repos/chiragw15/BuildmLearn-Toolkit-Android", "Date": "2016-03-02T13:33:49Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (transform.isGlobal) { com.blazeloader.bl.obf.BLOBF obf = com.blazeloader.bl.obf.BLOBF.getOBF(transform.mcpTarget, TargetType.CLASS, OBFLevel.MCP); name = \"*\"; clName = obf.getValue(); }else { com.blazeloader.bl.obf.BLOBF obf = com.blazeloader.bl.obf.BLOBF.getOBF(transform.mcpTarget, transform.targetType, OBFLevel.MCP); name = obf.getValue(); int lastDot = name.lastIndexOf('.'); clName = name.substring(0, lastDot); name = name.substring((lastDot + 1), name.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3009/buggy-version/src.main.com.blazeloader.util.transformers.ONFTransformer.java", "BodyUseAPI": ["com.blazeloader.bl.obf.BLOBF.getOBF(transform.mcpTarget,transform.targetType,OBFLevel.MCP)", "com.blazeloader.bl.obf.BLOBF.getOBF(transform.mcpTarget,TargetType.CLASS,OBFLevel.MCP)"], "Fixed commit": "34d2683871dea2f797dde978fa1b0a298a569b58", "Url": "https://api.github.com/repos/Sollace/BlazeLoader", "Date": "2016-03-16T17:10:01Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck.getLine(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(line.isEmpty())) { final int start = getLineStart(line); if (indentLevel.isGreaterThan(start)) { logChildError(lineNum, start, indentLevel); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3456/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.indentation.AbstractExpressionHandler.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.checks.indentation.AbstractExpressionHandler.getLineStart(java.lang.String)"], "Fixed commit": "4291e08da033178b90fc181599aa9dfff3adb7af", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2015-12-17T21:59:15Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((messages) != null) messages.debugUser((\"R:\" + arg0), getClass());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/9258/buggy-version/genlab.r.src.genlab.r.execs.ExecuteRExec.java", "BodyUseAPI": [], "Fixed commit": "3bbbbdd88d00ea2d24abd4d771911caf5ffd3f7a", "Url": "https://api.github.com/repos/samthiriot/genlab", "Date": "2016-07-25T12:51:38Z"},
{"Line": "=>496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsMoveAccept) { moveToEdge(mParams.x, mParams.y, false); }else { final int newX = ((int) ((((mParams.x) * (mPositionLimitRect.width())) / ((float) (oldPositionLimitWidth))) + 0.5F)); final int goalPositionX = java.lang.Math.min(java.lang.Math.max(mPositionLimitRect.left, newX), mPositionLimitRect.right); final int newY = ((int) ((((mParams.y) * (mPositionLimitRect.height())) / ((float) (oldPositionLimitHeight))) + 0.5F)); final int goalPositionY = java.lang.Math.min(java.lang.Math.max(mPositionLimitRect.top, newY), mPositionLimitRect.bottom); moveTo(mParams.x, mParams.y, goalPositionX, goalPositionY, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7760/buggy-version/library.src.main.java.jp.co.recruit_lifestyle.android.floatingview.FloatingView.java", "BodyUseAPI": [], "Fixed commit": "69ce3dddcc4c376d32ed6dd5c0ba4ce5f5c12dad", "Url": "https://api.github.com/repos/recruit-lifestyle/FloatingView", "Date": "2017-07-19T07:30:59Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((null != hashId) && (!(hashId.isEmpty()))) indexRequest.setId(hashId.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3738/buggy-version/src.main.java.com.gigya.flume.ExtendedElasticSearchIndexRequestBuilderFactory.java", "BodyUseAPI": ["java.lang.String.toString()", "org.elasticsearch.action.index.IndexRequestBuilder.setId(java.lang.String)"], "Fixed commit": "4fa2ab88f747a40a5fa72315bf26d4bbb9bd62f8", "Url": "https://api.github.com/repos/gigya/flume-ng-elasticsearch-ser-ex", "Date": "2014-09-07T08:21:34Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRecordingCountView) != null) { mRecordingCountView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8835/buggy-version/app.src.main.java.org.fasola.fasolaminutes.CursorListFragment.java", "BodyUseAPI": [], "Fixed commit": "76e6bb6cb8c5383cb260b48b05c5a26313e12712", "Url": "https://api.github.com/repos/mrichards42/fasola_android", "Date": "2016-01-28T20:59:23Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((beforePayment && ((paymentRequestConfig.getDaysBeforePayment()) < 0)) || ((!beforePayment) && ((paymentRequestConfig.getDaysAfterPayment()) < 0))) { result.put(queryDefinitionDTO, 0); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1885/buggy-version/src.main.java.org.iabako.server.serviceimpl.business.PaymentRequestServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "946ce0d020c5d5f6482b139ce2347205121fb6a8", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2015-11-22T07:55:35Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ibm.json.java.JSONObject.get(java.lang.String)", "com.ibm.json.java.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((streamViewability != null) || ((colocationTag != null) && (!(colocationTag.isEmpty())))) { sb.append(\" config\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8021/buggy-version/java.src.com.ibm.streamsx.topology.generator.spl.OperatorGenerator.java", "BodyUseAPI": [], "Fixed commit": "4cbdbe7a3120110ed57d153535376c2b1767ae61", "Url": "https://api.github.com/repos/wmarshall484/streamsx.topology", "Date": "2015-07-07T19:28:25Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.Dimension.getHeight()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((25 * i) + (height / 8)) < ((7 * height) / 8)) { g2d.drawString(parts[i], (width / 5), ((25 * i) + (height / 8))); }else { g2d.setColor(java.awt.Color.gray); g2d.setFont(new java.awt.Font(\"Verdana\", java.awt.Font.PLAIN, 12)); g2d.drawString(parts[i], ((4 * width) / 5), ((25 * i) - ((5 * height) / 8))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5503/buggy-version/src.curtis.toaster.Main.java", "BodyUseAPI": ["java.awt.Graphics2D.drawString(java.lang.String,int,int)", "java.awt.Graphics2D.drawString(java.lang.String,int,int)"], "Fixed commit": "7d8d0b3b90bea7f858a85d9b5508791920ea7288", "Url": "https://api.github.com/repos/cwlowder/CodeDesktopGenerator", "Date": "2017-01-03T11:00:47Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((offset) == (-1)) { offset = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7321/buggy-version/src.main.java.org.mvel2.ast.ImportNode.java", "BodyUseAPI": [], "Fixed commit": "c43c4840679f7398f8cfd5fa3fc9444d996507bb", "Url": "https://api.github.com/repos/etirelli/mvel", "Date": "2011-02-08T22:46:32Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (keyStr.startsWith(\"-Dproject.dev.\")) { enforceDeveloperVersion(getString(keyStr, httpParams)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1917/buggy-version/src.main.java.org.jvnet.hudson.plugins.m2release.M2ReleaseAction.java", "BodyUseAPI": ["org.jvnet.hudson.plugins.m2release.M2ReleaseAction.getString(java.lang.String,java.util.Map<?, ?>)", "org.jvnet.hudson.plugins.m2release.M2ReleaseAction.enforceDeveloperVersion(java.lang.String)"], "Fixed commit": "37b0ce18b494b1d2c4ad542027a09aa44a1da86a", "Url": "https://api.github.com/repos/jenkinsci/m2release-plugin", "Date": "2011-03-04T20:50:40Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cxf.rs.security.jose.jwk.KeyType.getKeyType(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (kt == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5814/buggy-version/rt.rs.security.jose.src.main.java.org.apache.cxf.rs.security.jose.jwk.JsonWebKeys.java", "BodyUseAPI": [], "Fixed commit": "a727d21fa73bd8d5753782eb20f01034e7e4ea48", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2015-08-06T14:43:55Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.relationField.isRequired())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6995/buggy-version/src.main.java.burrito.client.crud.input.SearchListField.java", "BodyUseAPI": [], "Fixed commit": "6772876930096bd9785b8afb341fc43848cfa7dc", "Url": "https://api.github.com/repos/henricpersson/Burrito", "Date": "2012-04-30T09:14:15Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((joinTable.getJoinColumns()) != null) { for (org.telosys.tools.generic.model.JoinColumn jc : joinTable.getJoinColumns()) { _joinColumns.add(new org.telosys.tools.generator.context.JoinColumnInContext(jc)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/656/buggy-version/src.main.java.org.telosys.tools.generator.context.JoinTableInContext.java", "BodyUseAPI": [], "Fixed commit": "4f0259ddd7c472dfadc16fd3508ba86ebc829166", "Url": "https://api.github.com/repos/telosys-tools-bricks/telosys-tools-generator", "Date": "2015-08-20T17:50:50Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((joinTable.getInverseJoinColumns()) != null) { for (org.telosys.tools.generic.model.JoinColumn jc : joinTable.getInverseJoinColumns()) { _inverseJoinColumns.add(new org.telosys.tools.generator.context.JoinColumnInContext(jc)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/656/buggy-version/src.main.java.org.telosys.tools.generator.context.JoinTableInContext.java", "BodyUseAPI": [], "Fixed commit": "4f0259ddd7c472dfadc16fd3508ba86ebc829166", "Url": "https://api.github.com/repos/telosys-tools-bricks/telosys-tools-generator", "Date": "2015-08-20T17:50:50Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["math.geom2d.conic.Point2D.distance(math.geom2d.conic.Point2D,math.geom2d.conic.Point2D)", "math.geom2d.conic.Circle2D.radius()", "math.geom2d.conic.Circle2D.radius()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((d == (java.lang.Math.abs((r1 - r2)))) || (d == (r1 + r2))) { java.util.Collection<math.geom2d.conic.Point2D> r = new java.util.ArrayList<>(1); r.add(math.geom2d.conic.Point2D.createPolar(center1, (d / 2.0), angle)); return r; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6200/buggy-version/src.main.java.math.geom2d.conic.Circle2D.java", "BodyUseAPI": ["math.geom2d.conic.Point2D.createPolar(math.geom2d.conic.Point2D,double,double)", "java.util.Collection<math.geom2d.conic.Point2D>.add(math.geom2d.conic.Point2D.createPolar(center1, (d / 2.0), angle))"], "Fixed commit": "7df08e6a4bb4a4fbd6239e80a1c1af4e0ab413b0", "Url": "https://api.github.com/repos/AidanDelaney/javaGeom-1", "Date": "2015-11-24T13:37:07Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (DOMUtil.XSD_STRING.equals(propDef.getTypeName())) { java.lang.String text = ((java.lang.String) (searchValue.getValue())); return com.evolveum.midpoint.web.component.search.SubstringFilter.createSubstring(path, propDef, null, text); }else if (SchemaConstants.T_POLY_STRING_TYPE.equals(propDef.getTypeName())) { java.lang.String text = ((java.lang.String) (searchValue.getValue())); com.evolveum.midpoint.prism.polystring.PolyStringNormalizer normalizer = ctx.getDefaultPolyStringNormalizer(); java.lang.String value = normalizer.normalize(text); return com.evolveum.midpoint.web.component.search.SubstringFilter.createSubstring(path, propDef, PolyStringNormMatchingRule.NAME, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/904/buggy-version/gui.admin-gui.src.main.java.com.evolveum.midpoint.web.component.search.Search.java", "BodyUseAPI": ["com.evolveum.midpoint.web.component.search.PrismPropertyDefinition.getTypeName()", "SchemaConstants.T_POLY_STRING_TYPE.equals(propDef.getTypeName())", "com.evolveum.midpoint.web.component.search.SubstringFilter.createSubstring(com.evolveum.midpoint.prism.path.ItemPath,com.evolveum.midpoint.web.component.search.PrismPropertyDefinition,PolyStringNormMatchingRule.NAME,java.lang.String)", "com.evolveum.midpoint.web.component.search.SubstringFilter.createSubstring(com.evolveum.midpoint.prism.path.ItemPath,com.evolveum.midpoint.web.component.search.PrismPropertyDefinition,<nulltype>,java.lang.String)"], "Fixed commit": "76ebfc11795375f996bf54b2b598ed7ddd491363", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2016-01-07T11:04:51Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/756/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "1ce6f0abd3f4d4d25e63a0f81a3805afd926f7b7", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((event.gui) instanceof com.dyn.betterachievements.handler.GuiCommandBlock) && (!(ServerMod.opped))) { event.setCanceled(true); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6659/buggy-version/handler.GuiOpenHandler.java", "BodyUseAPI": ["net.minecraftforge.client.event.GuiOpenEvent.setCanceled(boolean)"], "Fixed commit": "c760e17d4753dadf7c8233056c5be18ad29ca7da", "Url": "https://api.github.com/repos/CityOfLearning/BetterAchievements", "Date": "2016-05-14T06:27:41Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stackmob.example.SMInt.getValue()", "com.stackmob.example.SMInt.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((typeUser.longValue()) < 2L) && ((typeFriend.longValue()) < 2L)) { java.util.List<com.stackmob.example.SMObject> eventsList = new java.util.ArrayList<com.stackmob.example.SMObject>(); if (relObject.getValue().containsKey(\"events_by_owner\")) { com.stackmob.example.SMList<com.stackmob.example.SMObject> eventsValue = ((com.stackmob.example.SMList<com.stackmob.example.SMObject>) (relObject.getValue().get(\"events_by_owner\"))); eventsList = eventsValue.getValue(); } friendMap.put(\"events\", eventsList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/493/buggy-version/java.src.main.java.com.stackmob.example.GetDatabase.java", "BodyUseAPI": [], "Fixed commit": "6659170269a034826a28ce1e66a49023d98da80f", "Url": "https://api.github.com/repos/natapong-th/stackmob-customcode-example", "Date": "2013-03-26T11:08:38Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stackmob.example.SMInt.getValue()", "com.stackmob.example.SMInt.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((typeUser.longValue()) < 2L) && ((typeFriend.longValue()) < 2L)) { java.util.List<com.stackmob.example.SMObject> eventsList = new java.util.ArrayList<com.stackmob.example.SMObject>(); if (relObject.getValue().containsKey(\"events_by_receiver\")) { com.stackmob.example.SMList<com.stackmob.example.SMObject> eventsValue = ((com.stackmob.example.SMList<com.stackmob.example.SMObject>) (relObject.getValue().get(\"events_by_receiver\"))); eventsList = eventsValue.getValue(); } friendMap.put(\"events\", eventsList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/493/buggy-version/java.src.main.java.com.stackmob.example.GetDatabase.java", "BodyUseAPI": [], "Fixed commit": "6659170269a034826a28ce1e66a49023d98da80f", "Url": "https://api.github.com/repos/natapong-th/stackmob-customcode-example", "Date": "2013-03-26T11:08:38Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((input.length()) == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8628/buggy-version/SubScreen.src.main.java.com.subscreen.Subtitles.VTTFormat.java", "BodyUseAPI": [], "Fixed commit": "69566327290d2d52099c6658957ea6b5f7dba3df", "Url": "https://api.github.com/repos/smitnich/Subscreen", "Date": "2016-09-14T05:20:37Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tmpNum == (-1)) tmpNum = input.length();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8628/buggy-version/SubScreen.src.main.java.com.subscreen.Subtitles.VTTFormat.java", "BodyUseAPI": [], "Fixed commit": "69566327290d2d52099c6658957ea6b5f7dba3df", "Url": "https://api.github.com/repos/smitnich/Subscreen", "Date": "2016-09-14T05:20:37Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((customerId.isEmpty()) || (postId.isEmpty())) { java.lang.Throwable throwable = new java.lang.Throwable(\"CustomerId or PostId is empty\"); callback.onError(throwable); callback.onFinally(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6630/buggy-version/app.src.main.java.com.orthopg.snaphy.orthopg.Fragment.CaseFragment.CasePresenter.java", "BodyUseAPI": [], "Fixed commit": "722d8f526e3d1af4b13f31ae7371c7ea979884f9", "Url": "https://api.github.com/repos/SnaphyClients/OrthoPG", "Date": "2016-10-18T21:48:37Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["thngService.thngReader(sensorId).execute()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (result != null) { thng = java.util.Optional.of(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2242/buggy-version/src.main.java.com.github.mgt6.weatherstation.repository.impl.evrythng.EvrythngSensorRepository.java", "BodyUseAPI": ["java.util.Optional.of(com.evrythng.thng.resource.model.store.Thng)"], "Fixed commit": "8d4fd2e133c9ad5e4e88c8178434f4b1d1727a5b", "Url": "https://api.github.com/repos/mgt6/weatherstation", "Date": "2014-07-14T22:50:25Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.oStream) != null) { this.oStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6272/buggy-version/fileformat.src.main.java.org.zuinnote.hadoop.office.format.common.writer.MSExcelWriter.java", "BodyUseAPI": [], "Fixed commit": "e79cce483412ac739ef0fb1cea35529934e9c059", "Url": "https://api.github.com/repos/ZuInnoTe/hadoopoffice", "Date": "2017-03-18T20:37:57Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((holder.itemView) instanceof android.widget.AdapterView)) { holder.itemView.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { if ((mOnItemClickListener) != null) { mOnItemClickListener.onItemClick(v, viewType, holder.getLayoutPosition()); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5068/buggy-version/superadapter.src.main.java.com.chenenyu.superadapter.recycler.SuperAdapter.java", "BodyUseAPI": ["com.chenenyu.superadapter.recycler.BaseViewHolder.getLayoutPosition()", "com.chenenyu.superadapter.recycler.OnItemClickListener.onItemClick(android.view.View,int,holder.getLayoutPosition())", "holder.itemView.setOnClickListener(android.view.View.OnClickListener)"], "Fixed commit": "f284fe0e1713bbd7260285bab6b5763493d23c62", "Url": "https://api.github.com/repos/byteam/SuperAdapter", "Date": "2016-01-15T06:14:27Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.getStatus()) >= 300) ack(response); else org.cipango.server.transaction.ClientTransactionImpl.LOG.debug(\"Unexpected response {} in Completed state\", response);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3752/buggy-version/cipango-server.src.main.java.org.cipango.server.transaction.ClientTransactionImpl.java", "BodyUseAPI": ["org.cipango.server.transaction.ClientTransactionImpl.ack(org.cipango.server.SipResponse)", "org.eclipse.jetty.util.log.Logger.debug(java.lang.String,org.cipango.server.SipResponse)"], "Fixed commit": "8c1c082e60dcaaa456782bae842a6eae20882e5b", "Url": "https://api.github.com/repos/tleseney/cipango", "Date": "2015-10-30T16:34:19Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.timurstrekalov.saga.core.AstNode.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parent.getClass()) == (com.github.timurstrekalov.saga.core.LabeledStatement.class)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8584/buggy-version/saga-core.src.main.java.com.github.timurstrekalov.saga.core.ScriptInstrumenter.java", "BodyUseAPI": [], "Fixed commit": "0e970165a89a6b9dfb77f1c99dd5378988a388df", "Url": "https://api.github.com/repos/timurstrekalov/saga", "Date": "2012-09-29T11:58:41Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result) { treeSet.remove(element); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5372/buggy-version/src.main.java.com.queue.impl.AbstractQueueImpl.java", "BodyUseAPI": [], "Fixed commit": "b579d10d711d63449cc60d962be0e5d1c98f9a0e", "Url": "https://api.github.com/repos/ahamouda88/workorder-rest-webservice", "Date": "2015-07-29T17:49:08Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (element != null) { treeSet.remove(element); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5372/buggy-version/src.main.java.com.queue.impl.AbstractQueueImpl.java", "BodyUseAPI": ["java.util.Set<E>.remove(E)"], "Fixed commit": "b579d10d711d63449cc60d962be0e5d1c98f9a0e", "Url": "https://api.github.com/repos/ahamouda88/workorder-rest-webservice", "Date": "2015-07-29T17:49:08Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openl.extension.xmlrules.model.single.node.expression.ExpressionResolverFactory.getExpressionResolver(expressionNode.getOperator())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((expressionResolver instanceof org.openl.extension.xmlrules.model.single.node.expression.RangeExpressionResolver) && (((org.openl.extension.xmlrules.model.single.node.expression.RangeExpressionResolver) (expressionResolver)).isRangeReturnsArray())) { return toString(node); }else if (expressionResolver instanceof org.openl.extension.xmlrules.model.single.node.expression.ArithmeticExpressionResolver) { return toString(node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4998/buggy-version/STUDIO.org.openl.extension.xmlrules.src.org.openl.extension.xmlrules.model.single.node.expression.ArithmeticExpressionResolver.java", "BodyUseAPI": [], "Fixed commit": "91ce3dd19ad6879185f96a415cff9ea8ffad6827", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2016-02-17T07:51:42Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isJobBackup())) { if (mCustomIMG.toString().endsWith(Device.EXT_IMG)) { if (!(isImageValid(mCustomIMG))) { throw new de.mkrtchyan.recoverytools.FlashUtil.ImageNotValidException(mCustomIMG); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/384/buggy-version/RashrApp.src.main.java.de.mkrtchyan.recoverytools.FlashUtil.java", "BodyUseAPI": [], "Fixed commit": "2186d237d3bfd19aac5f98bcec4d00d7846fb203", "Url": "https://api.github.com/repos/DsLNeXuS/Rashr", "Date": "2016-02-19T09:54:25Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((podcast.getDescription()) != null) _descriptionView.setText(android.text.Html.fromHtml(podcast.getDescription(), new com.axelby.podax.URLImageGetter(_descriptionView), new com.axelby.podax.IgnoreTagHandler()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6032/buggy-version/src.main.java.com.axelby.podax.ui.PodcastDetailFragment.java", "BodyUseAPI": ["com.axelby.podax.PodcastCursor.getDescription()", "android.text.Html.fromHtml(podcast.getDescription(),com.axelby.podax.URLImageGetter,com.axelby.podax.IgnoreTagHandler)", "android.widget.TextView.setText(android.text.Html.fromHtml(podcast.getDescription(), new com.axelby.podax.URLImageGetter(_descriptionView), new com.axelby.podax.IgnoreTagHandler()))"], "Fixed commit": "a98550a6808b6fa2851dd7895fca5abc42481b78", "Url": "https://api.github.com/repos/thasmin/Podax", "Date": "2014-05-11T18:25:36Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"50\".equalsIgnoreCase(number)) { java.lang.System.out.println(\"debug\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6527/buggy-version/preprocessor.src.main.java.edu.insight.finlaw.xml.LawXmlHandler.java", "BodyUseAPI": [], "Fixed commit": "014a7a533045e56e09ab2b16134f3cdc09e2ce7e", "Url": "https://api.github.com/repos/kasooja/finlaw", "Date": "2014-07-16T15:11:05Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentP2.p2number) == null) || (currentP2.p2number.equalsIgnoreCase(\"\"))) currentP2.p2number = tagStringValue.trim();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6527/buggy-version/preprocessor.src.main.java.edu.insight.finlaw.xml.LawXmlHandler.java", "BodyUseAPI": [], "Fixed commit": "014a7a533045e56e09ab2b16134f3cdc09e2ce7e", "Url": "https://api.github.com/repos/kasooja/finlaw", "Date": "2014-07-16T15:11:05Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newState) && (!(eps.getLastViewed().isEquals(date)))) { eps.setLastViewed(date); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/9047/buggy-version/src.de.jClipCorn.gui.frames.parseWatchDataFrame.EpisodeWatchDataChangedSet.java", "BodyUseAPI": ["de.jClipCorn.database.databaseElement.CCEpisode.setLastViewed(de.jClipCorn.util.CCDate)"], "Fixed commit": "92395e252eee20767deb7c504766696020468310", "Url": "https://api.github.com/repos/Mikescher/jClipCorn", "Date": "2014-05-16T21:10:31Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ref.WeakReference.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (o instanceof net.rim.device.api.browser.field2.BrowserField) { return ((net.rim.device.api.browser.field2.BrowserField) (o)); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3748/buggy-version/framework.ext.src.com.phonegap.PhoneGapExtension.java", "BodyUseAPI": [], "Fixed commit": "571aed21e1f5cec9129908638c5cfbaefbffe924", "Url": "https://api.github.com/repos/gtanner/callback-blackberry", "Date": "2011-11-30T18:48:47Z"},
{"Line": "=>850", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m == null) { ret.a = in; ret.o = owner; ret.m = m; return ret; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8678/buggy-version/Phosphor.src.edu.columbia.cs.psl.phosphor.runtime.ReflectionMasker.java", "BodyUseAPI": [], "Fixed commit": "66e52c959041f903b3734f80a4e3e245666c30a7", "Url": "https://api.github.com/repos/gmu-swe/phosphor", "Date": "2015-07-22T16:12:18Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mUpdates.get(projectId)) != null) && ((mUpdates.get(projectId).get(sourceLanguageId)) != null)) { numSourceTranslationUpdates -= mUpdates.get(projectId).get(sourceLanguageId).size(); mUpdates.get(projectId).remove(sourceLanguageId); if ((mUpdates.get(projectId).size()) == 0) { mUpdates.remove(projectId); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6427/buggy-version/app.src.main.java.com.door43.translationstudio.core.LibraryUpdates.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<java.lang.String>>>.get(java.lang.String)", "java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<java.lang.String>>>.remove(java.lang.String)", "java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<java.lang.String>>>.get(java.lang.String)", "java.util.Map<java.lang.String, java.util.List<java.lang.String>>.remove(java.lang.String)", "java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<java.lang.String>>>.get(java.lang.String)", "java.util.Map<java.lang.String, java.util.List<java.lang.String>>.size()", "java.util.List<java.lang.String>.size()"], "Fixed commit": "fa031b3d447d4fb65657b5a4637c6b372fbb25fc", "Url": "https://api.github.com/repos/unfoldingWord-dev/ts-android", "Date": "2016-02-10T17:52:03Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getWhitespaceFollowedNode(com.puppycrawl.tools.checkstyle.api.DetailAST)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((whitespaceFollowedAst.getNextSibling()) == null) || ((whitespaceFollowedAst.getNextSibling().getType()) != (com.puppycrawl.tools.checkstyle.api.TokenTypes.ANNOTATIONS))) { final int whitespaceColumnNo = com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(whitespaceFollowedAst); final int whitespaceLineNo = whitespaceFollowedAst.getLineNo(); if (hasTrailingWhitespace(ast, whitespaceColumnNo, whitespaceLineNo)) { log(whitespaceLineNo, whitespaceColumnNo, com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.MSG_KEY, whitespaceFollowedAst.getText()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1203/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getLineNo()", "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.log(int,int,java.lang.String,whitespaceFollowedAst.getText())", "com.puppycrawl.tools.checkstyle.api.DetailAST.getText()", "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(com.puppycrawl.tools.checkstyle.api.DetailAST)"], "Fixed commit": "38106667d0bc6479a6795d2960712ec75f5272e0", "Url": "https://api.github.com/repos/sergileon/checkstyle", "Date": "2017-09-05T11:43:02Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (mHandlerThread.getLooper())) { mFileStoreHandler = new org.matrix.androidsdk.util.MXOsHandler(mHandlerThread.getLooper()); }else { return new org.matrix.androidsdk.util.MXOsHandler(android.os.Looper.getMainLooper()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6511/buggy-version/matrix-sdk.src.main.java.org.matrix.androidsdk.data.cryptostore.MXFileCryptoStore.java", "BodyUseAPI": ["android.os.HandlerThread.getLooper()"], "Fixed commit": "d2c6b414071643dc9f1e39864bd5494ecbf3e597", "Url": "https://api.github.com/repos/matrix-org/matrix-android-sdk", "Date": "2016-11-28T07:55:17Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.laytonsmith.aliasengine.Static.getPersistance().getValue(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (obj == null) { return new com.laytonsmith.aliasengine.Constructs.CNull(line_num, f); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7778/buggy-version/src.main.java.com.laytonsmith.aliasengine.functions.Persistance.java", "BodyUseAPI": [], "Fixed commit": "d6a435f730061e3d4c253b824d6516ab7ef01f16", "Url": "https://api.github.com/repos/EngineHub/CommandHelper", "Date": "2011-09-13T04:02:48Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7778/buggy-version/src.main.java.com.laytonsmith.PureUtilities.SerializedPersistance.java", "BodyUseAPI": [], "Fixed commit": "d6a435f730061e3d4c253b824d6516ab7ef01f16", "Url": "https://api.github.com/repos/EngineHub/CommandHelper", "Date": "2011-09-13T04:02:48Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (prologue.explicitlySetBaseURI()) { summaryQuery.setBaseURI(prologue.getBaseURI()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3944/buggy-version/core.src.main.java.net.sf.sparql.benchmarking.util.QueryUtils.java", "BodyUseAPI": ["org.apache.jena.query.Query.setBaseURI(prologue.getBaseURI())", "org.apache.jena.sparql.core.Prologue.getBaseURI()"], "Fixed commit": "9a92c6013f4bf8c7c9d7b0924e898411548080dc", "Url": "https://api.github.com/repos/rvesse/sparql-query-bm", "Date": "2015-11-13T20:27:54Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (raceEvent.getRace(participant).getLapStartTime(i).equals(raceEvent.getRace(participant).getFinish())) { sb.append(((new models.Time()) + \"; \")); }else { sb.append(raceEvent.getRace(participant).getLapStartTime(i)); sb.append(\"; \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4217/buggy-version/src.main.java.utils.Formatter.java", "BodyUseAPI": ["java.lang.StringBuilder.append(raceEvent.getRace(participant).getLapStartTime(i))", "raceEvent.getRace(participant).getLapStartTime(int)", "models.RaceEvent.getRace(models.Participant)"], "Fixed commit": "3fa976b59015cd8cec0bc7ac56b12821ef86c2a8", "Url": "https://api.github.com/repos/buren/enduro", "Date": "2014-02-10T13:43:35Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.get(java.lang.Object)", "java.lang.reflect.Field.get(java.lang.Object)", "java.lang.reflect.Field.getType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((((fieldType.isArray()) || (java.util.Collection.class.isAssignableFrom(fieldType))) && (origValue != null)) && (modValue != null)) { if (java.util.Collection.class.isAssignableFrom(fieldType)) { org.springframework.sync.Diff.diffList(operations, ((path + \"/\") + (field.getName())), ((java.util.List<?>) (origValue)), ((java.util.List<?>) (modValue))); }else if (fieldType.isArray()) { org.springframework.sync.Diff.diffList(operations, ((path + \"/\") + (field.getName())), java.util.Arrays.asList(((java.lang.Object[]) (origValue))), java.util.Arrays.asList(((java.lang.Object[]) (modValue)))); } }else { org.springframework.sync.Diff.diffNonList(operations, ((path + \"/\") + (field.getName())), origValue, modValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7603/buggy-version/spring-sync-core.src.main.java.org.springframework.sync.Diff.java", "BodyUseAPI": ["java.lang.Class<?>.isArray()", "org.springframework.sync.Diff.diffNonList(java.util.List<org.springframework.sync.PatchOperation>,java.lang.String,java.lang.Object,java.lang.Object)", "java.lang.Class.isAssignableFrom(java.lang.Class<?>)"], "Fixed commit": "f952758111c2214a975d95ae57073660a45befc7", "Url": "https://api.github.com/repos/spring-projects/spring-sync", "Date": "2014-10-30T19:34:57Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.toFile().exists()) { java.lang.System.out.format(\"Reading %s\", p.toAbsolutePath()); final java.io.FileInputStream fis = new java.io.FileInputStream(p.toFile()); java.lang.System.out.format(\" writing to %s\", destination.toAbsolutePath()); com.google.common.io.ByteStreams.copy(fis, fos); java.lang.System.out.println(); }else { java.lang.System.err.format(\"%s does not exist skipping\", p.toAbsolutePath()); java.lang.System.err.println(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/231/buggy-version/src.main.java.com.stackoverflow.Q33846584.java", "BodyUseAPI": ["java.nio.file.Path.toFile()", "java.nio.file.Path.toAbsolutePath()", "java.io.PrintStream.format(java.lang.String,java.nio.file.Path)", "java.nio.file.Path.toAbsolutePath()", "java.io.PrintStream.format(java.lang.String,java.nio.file.Path)"], "Fixed commit": "60b2e1cb213a4dffa299a06987c4650356ace806", "Url": "https://api.github.com/repos/jarrodhroberson/Stack-Overflow", "Date": "2015-11-21T19:17:51Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteQueryBuilder.query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(cursor.moveToFirst())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3767/buggy-version/src.github.daneren2005.dsub.util.CacheUtil.java", "BodyUseAPI": [], "Fixed commit": "338568ffb86d211816d5cbc21d380f60db93ad0d", "Url": "https://api.github.com/repos/daneren2005/Subsonic", "Date": "2014-05-03T05:28:07Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value < 0) { throw new java.lang.IllegalArgumentException(\"value >= 0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/506/buggy-version/src.main.java.com.googlecode.mgwt.ui.client.widget.MSlider.java", "BodyUseAPI": [], "Fixed commit": "59584b163e1a08a702edd881aba5ad2ae44d78bb", "Url": "https://api.github.com/repos/dankurka/mgwt", "Date": "2011-12-01T10:00:05Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (level > 0) { level += level; while (level > (com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Lf2SpacesIndenter.SPACE_COUNT)) { jg.writeRaw(com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Lf2SpacesIndenter.SPACES, 0, com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Lf2SpacesIndenter.SPACE_COUNT); level -= com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Lf2SpacesIndenter.SPACES.length; } jg.writeRaw(com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Lf2SpacesIndenter.SPACES, 0, level); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5392/buggy-version/src.main.java.com.fasterxml.jackson.core.util.DefaultPrettyPrinter.java", "BodyUseAPI": [], "Fixed commit": "6c77ca3997906b9f01160132ec5fefef6120cdc3", "Url": "https://api.github.com/repos/christophercurrie/jackson-core", "Date": "2012-09-28T17:49:15Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.witch) == null) || ((this.linkedWorldObj) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2425/buggy-version/src.main.java.com.MadokaMagica.mod_madokaMagica.entities.EntityPMWitchLabrynthEntrance.java", "BodyUseAPI": [], "Fixed commit": "ef90aca8ea0c50919923ec2cf7029cf4ebb35a7f", "Url": "https://api.github.com/repos/AFlyingCar/PMMM-Minecraft-Mod", "Date": "2016-06-21T20:23:15Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((firstGroupDates.size()) == 1) { temp1.setTime(firstGroupDates.get(0)); setDateTime(temp1, (-1), (-1), (-1), 0, 0, 0); dates.add(temp1.getTime()); }else { for (int i = 0; i < (firstGroupDates.size()); i++) { dates.add(firstGroupDates.get(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5766/buggy-version/src.main.parser.Parser.java", "BodyUseAPI": ["java.util.Calendar.setTime(java.util.Date)", "java.util.List<java.util.Date>.get(int)", "java.util.List<java.util.Date>.size()", "java.util.List<java.util.Date>.get(int)", "java.util.List<java.util.Date>.add(java.util.Date)"], "Fixed commit": "70689cf9d6faa9a2bb89bb98c00d572b0317d7df", "Url": "https://api.github.com/repos/cs2103aug2015-t09-1j/main", "Date": "2015-11-04T10:14:31Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((noOldProcesses) > 0) { waitSemaphore.acquireUninterruptibly(); waitSemaphore.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6718/buggy-version/src.main.java.com.softwire.it.cjo.parallelresources.ResourceGraph.java", "BodyUseAPI": [], "Fixed commit": "d71db872cf5729c6e2487049e5afdd374cd2dbc2", "Url": "https://api.github.com/repos/michaelbradley91/CJO", "Date": "2014-03-14T17:51:59Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vg.civcraft.mc.namelayer.NameAPI.getUUID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (oPlayer == null) { p.sendMessage(((org.bukkit.ChatColor.RED) + \"This player has never played before and cannot be given the group.\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/930/buggy-version/src.vg.civcraft.mc.namelayer.command.commands.TransferGroup.java", "BodyUseAPI": [], "Fixed commit": "01ff0500f8d2759f755dbce4a1880799ea1a8e3f", "Url": "https://api.github.com/repos/Civcraft/NameLayer", "Date": "2015-01-23T22:37:41Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mhyhre.zone_1024.utils.Position.addVector(dir.getVector())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((size.inRange(neighborPos)) == false) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7365/buggy-version/src.com.mhyhre.zone_1024.game.logic.Grid.java", "BodyUseAPI": [], "Fixed commit": "423477455a8fa84e5a2897df4f76adfd155979a1", "Url": "https://api.github.com/repos/mhyhre/Zone-1024", "Date": "2014-04-16T06:43:48Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.akaza.openclinica.bean.service.StudyParameter.getHandle()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (handle.equalsIgnoreCase(\"eventLocationRequired\")) { spc.setEventLocationRequired(spv.getValue()); }else if (handle.equalsIgnoreCase(\"participantPortal\")) { spc.setParticipantPortal(spv.getValue()); }else if (handle.equalsIgnoreCase(\"randomization\")) { spc.setRandomization(spv.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3484/buggy-version/core.src.main.java.org.akaza.openclinica.dao.service.StudyConfigService.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "bf6f4e9569b89365a3c1f9c4cc428d97e1a005b1", "Url": "https://api.github.com/repos/sdibona/OpenClinica", "Date": "2015-12-22T20:47:48Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (text.contains(\"(\")) { text = text.replace(\"(\", \"\").replace(\")\", \"\"); }else { text = \"0000\" + text; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7093/buggy-version/src.main.java.me.legrange.swap.serial.SerialMessage.java", "BodyUseAPI": [], "Fixed commit": "703ad051e4454c421a1fab09c95e3cb243176fa7", "Url": "https://api.github.com/repos/GideonLeGrange/panstamp-java", "Date": "2015-01-29T19:04:47Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.authentication.AccountUtils.getOwnCloudAccountByName(com.owncloud.android.ui.activity.FileActivity,upload.getAccountName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (account != null) { accountNameTextView.setText(com.owncloud.android.utils.DisplayUtils.getAccountNameDisplayText(mParentActivity, account, account.name, upload.getAccountName())); }else { accountNameTextView.setText(upload.getAccountName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3236/buggy-version/src.com.owncloud.android.ui.adapter.ExpandableUploadListAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(com.owncloud.android.utils.DisplayUtils.getAccountNameDisplayText(mParentActivity, account, account.name, upload.getAccountName()))", "com.owncloud.android.utils.DisplayUtils.getAccountNameDisplayText(com.owncloud.android.ui.activity.FileActivity,android.accounts.Account,account.name,upload.getAccountName())"], "Fixed commit": "7efae88a5de8f5eb7611daa72911b2a546eca3fb", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-09-26T15:49:45Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sdmlib.codegen.SymTabEntry.getMemberName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (memberName.startsWith(\"_\")) { memberName = memberName.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6910/buggy-version/src.main.java.org.sdmlib.models.classes.logic.GenEnumeration.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "617638fc51729bf087cd2902661b404941cf84c5", "Url": "https://api.github.com/repos/fujaba/SDMLib", "Date": "2016-02-26T14:15:49Z"},
{"Line": "=>636", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_ErrorMsg) != null) { org.spinsuite.util.Msg.toastMsg(v_activity, m_ErrorMsg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4413/buggy-version/client.org.spinsuite.fta.view.V_AddSuggestedProduct.java", "BodyUseAPI": [], "Fixed commit": "ab5bdd1e04de27b9150469e6695acb09832bb52b", "Url": "https://api.github.com/repos/adempiere/spin-suite", "Date": "2015-07-24T23:51:27Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((keyParts.length) < (isBlock ? 3 : 4)) { plugin.getLogger().warning((((\"INVALID \" + (isBlock ? \"BLOCK\" : \"ENTITY\")) + \" FILE: \") + (file.getName()))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1350/buggy-version/src.main.java.com.turt2live.antishare.storage.BlockManager.java", "BodyUseAPI": ["plugin.getLogger().warning(java.lang.String)"], "Fixed commit": "83100c2a076d5f5dd32cc8a84474abaac46ed596", "Url": "https://api.github.com/repos/turt2live/AntiShare", "Date": "2013-01-04T22:43:34Z"},
{"Line": "=>864", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (value != null) { java.lang.String[] vals = value.split(\"x\"); if ((vals.length) == 2) { int w = java.lang.Integer.parseInt(vals[0]); int h = java.lang.Integer.parseInt(vals[1]); org.broad.igv.ui.IGV.getMainFrame().setSize(w, h); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3715/buggy-version/src.org.broad.igv.ui.IGVMenuBar.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "ea0b79d71e1d20d30bc0d4a8bc120c82b75d2e87", "Url": "https://api.github.com/repos/broadinstitute/IGV", "Date": "2012-11-25T02:52:14Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(transformer.isPresent())) { transformer = java.util.Optional.of(newTransformer.get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8395/buggy-version/src.main.java.ch.mab.tc.Transform.java", "BodyUseAPI": [], "Fixed commit": "b2855829872a4ea144e706d6af114999efceea60", "Url": "https://api.github.com/repos/mbgt/testcase", "Date": "2017-10-15T07:02:40Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Location.clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(placementLoc.getBlock().getType().equals(Material.AIR))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/9189/buggy-version/src.main.java.nu.nerd.zombageddon.ZombieMotivator.java", "BodyUseAPI": [], "Fixed commit": "4ae4d1c258e08fdf54417102f24f76256681c0ad", "Url": "https://api.github.com/repos/NerdNu/Zombageddon", "Date": "2017-11-10T05:28:11Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hm.orz.chaos114.android.tumekyouen.TitleActivity.findViewById(R.id.adView)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (mAdView != null) { com.google.android.gms.ads.AdRequest adRequest = new com.google.android.gms.ads.AdRequest.Builder().build(); mAdView.loadAd(adRequest); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1282/buggy-version/app.src.main.java.hm.orz.chaos114.android.tumekyouen.TitleActivity.java", "BodyUseAPI": ["com.google.android.gms.ads.AdView.loadAd(com.google.android.gms.ads.AdRequest)"], "Fixed commit": "4f9b68824baa14ed5206537e43eda6bc5388aebb", "Url": "https://api.github.com/repos/noboru-i/kyouen-android", "Date": "2015-10-13T09:58:54Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashSet<java.lang.String>.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i.hasNext()) writer.write(net.styleguise.tools.DatastoreExporter.FieldSeparator);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7119/buggy-version/src.main.java.net.styleguise.tools.DatastoreExporter.java", "BodyUseAPI": [], "Fixed commit": "94528dae6327c12e9f8f6e01fc76b5d4db5c4fe5", "Url": "https://api.github.com/repos/bpossolo/gae-datastore-migrator", "Date": "2013-11-14T09:25:56Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashSet<java.lang.String>.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i.hasNext()) writer.write(net.styleguise.tools.DatastoreExporter.FieldSeparator);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7119/buggy-version/src.main.java.net.styleguise.tools.DatastoreExporter.java", "BodyUseAPI": [], "Fixed commit": "94528dae6327c12e9f8f6e01fc76b5d4db5c4fe5", "Url": "https://api.github.com/repos/bpossolo/gae-datastore-migrator", "Date": "2013-11-14T09:25:56Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sc.hasNextLine()) { while (sc.hasNextLine()) { controllers.Stage stage = new controllers.Stage(sc.nextLine().trim()); stage.game = game; stage.sortOrder = index; stage.save(); index++; } }else { controllers.Stage stage = new controllers.Stage(\" \"); stage.game = game; stage.sortOrder = index; stage.save(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5236/buggy-version/app.controllers.GameController.java", "BodyUseAPI": ["java.lang.String.trim()", "java.util.Scanner.nextLine()", "java.util.Scanner.hasNextLine()"], "Fixed commit": "2f677ec675ba9647e13e090860ecaab57a8f19a4", "Url": "https://api.github.com/repos/jsmadja/shmuphiscores", "Date": "2014-11-06T19:59:18Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sc.hasNextLine()) { while (sc.hasNextLine()) { controllers.Platform platform = new controllers.Platform(sc.nextLine().trim()); platform.game = game; platform.save(); } }else { controllers.Platform platform = new controllers.Platform(\" \"); platform.game = game; platform.save(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5236/buggy-version/app.controllers.GameController.java", "BodyUseAPI": ["java.util.Scanner.hasNextLine()", "java.util.Scanner.nextLine()", "java.lang.String.trim()"], "Fixed commit": "2f677ec675ba9647e13e090860ecaab57a8f19a4", "Url": "https://api.github.com/repos/jsmadja/shmuphiscores", "Date": "2014-11-06T19:59:18Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getEmailAddress().getText().isEmpty()) { buttonOK.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6389/buggy-version/src.gui.DialogEmailForm.java", "BodyUseAPI": [], "Fixed commit": "ff1bf7f620ab76fd4ed7757c8981468596a397d5", "Url": "https://api.github.com/repos/20111375/-20111375", "Date": "2013-11-22T08:22:18Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((device) != null) { message = \" connection=\" + (device.getConnection().getDescription()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8259/buggy-version/NFCommunicator.nfcommunicator.src.main.java.com.neofect.communicator.CommunicationController.java", "BodyUseAPI": [], "Fixed commit": "afda9d0fcc57a71f8fa38e11b4076fa5d92bfc03", "Url": "https://api.github.com/repos/Neofect/Communicator", "Date": "2017-10-20T13:18:40Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) == 1) { if (args[0].equalsIgnoreCase(\"reconnect\")) { com.forgeessentials.chat.irc.IRCHelper.reconnect(sender); }else if (args[0].equalsIgnoreCase(\"disconnect\")) { com.forgeessentials.chat.irc.IRCHelper.shutdown(); } }else { com.forgeessentials.chat.irc.IRCHelper.status(sender); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8026/buggy-version/src.main.java.com.forgeessentials.chat.commands.CommandIRC.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "eb8fa4d4e25cb18b3c2edac74cc19005c1719661", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentials", "Date": "2015-03-28T09:56:27Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((foodID) != (-1)) TFC.Food.ItemFoodTFC.FoodList[foodID] = this.itemID;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6058/buggy-version/TFC_Shared.src.TFC.Food.ItemFoodTFC.java", "BodyUseAPI": [], "Fixed commit": "be1118def4192b0654504cb7f8ff99950a64065e", "Url": "https://api.github.com/repos/Deadrik/TFCraft", "Date": "2014-02-11T23:27:23Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (index > (-1)) { chineseKeyWord.append(baseData.substring(index, (index + (search.length())))); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/522/buggy-version/PinyinSearch.src.com.pinyinsearch.util.QwertyMatchPinyinUnits.java", "BodyUseAPI": ["java.lang.StringBuffer.append(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "90923ce1aa2a5b95498341fd1d82754621ad34a9", "Url": "https://api.github.com/repos/handsomezhou/PinyinSearchLibrary", "Date": "2014-11-26T11:01:59Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.craftolution.craftoplugin.utility.Utility.getPlayerPair(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (pair.getFirst().getGameMode().equals(GameMode.ADVENTURE)) { pair.getFirst().setGameMode(GameMode.SURVIVAL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/562/buggy-version/src.de.craftolution.craftoplugin.modules.general.FreezeComponent.java", "BodyUseAPI": ["pair.getFirst().setGameMode(GameMode.SURVIVAL)", "de.craftolution.craftolibrary.Pair<org.bukkit.entity.Player, de.craftolution.craftoplugin.core.database.CraftoPlayer>.getFirst()"], "Fixed commit": "5847897bc494896cea507d0706bc8e0edb3cdbc3", "Url": "https://api.github.com/repos/Craftolution/CraftoPlugin", "Date": "2015-11-30T19:23:23Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<Meeting>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (auxMeeting instanceof FutureMeeting) { result = ((FutureMeeting) (auxMeeting)); return result; }else { throw new java.lang.RuntimeException(\"auxMeeting MUST BE a FutureMeeting\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3461/buggy-version/ContactManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "22d8484ac084c202d3a86d81c399d0fa8a33984e", "Url": "https://api.github.com/repos/RightyHo/ContactManager", "Date": "2014-02-25T21:34:47Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((desc.isNotFixe()) && (isSolid())) && (!(desc.isPushable()))) { }else { zildo.monde.collision.Collision collision = getCollision(); if (((((vx) != 0) || ((vy) != 0)) || ((vz) != 0)) || (collision != null)) { manageCollision(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7623/buggy-version/zildo.src.zildo.monde.sprites.elements.Element.java", "BodyUseAPI": [], "Fixed commit": "3bd772c4e4f00d34476c3f49ddd2fa989d24a8c3", "Url": "https://api.github.com/repos/tchegito/zildo", "Date": "2016-12-29T13:12:36Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controls.TypeInstance.ListWithIndex.getList()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (list == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7904/buggy-version/src.main.controls.TypeInstance.TypeInstanceController.java", "BodyUseAPI": [], "Fixed commit": "90eeb491a8d22b2a508b4db5bdd3dcbf34c796b2", "Url": "https://api.github.com/repos/COP4331-OOP-Project/TBS-Game-For-COP4331", "Date": "2017-02-05T19:28:01Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controls.TypeInstance.ListWithIndex.getList()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (list == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7904/buggy-version/src.main.controls.TypeInstance.TypeInstanceController.java", "BodyUseAPI": [], "Fixed commit": "90eeb491a8d22b2a508b4db5bdd3dcbf34c796b2", "Url": "https://api.github.com/repos/COP4331-OOP-Project/TBS-Game-For-COP4331", "Date": "2017-02-05T19:28:01Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<org.geppetto.core.services.registry.ServicesRegistry.ConversionServiceKey, java.util.List<org.geppetto.core.conversion.IConversion>>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((supportedModelFormat.toString()) == (conversionServiceKey.getOutputModelFormat().toString())) { iModelsConverted.add(entry.getValue().get(0).convert(iModels.get(0), conversionServiceKey.getInputModelFormat(), conversionServiceKey.getOutputModelFormat())); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3073/buggy-version/src.main.java.org.geppetto.simulation.visitor.LoadSimulationVisitor.java", "BodyUseAPI": ["entry.getValue().get(0).convert(iModels.get(0),conversionServiceKey.getInputModelFormat(),conversionServiceKey.getOutputModelFormat())", "java.util.List<org.geppetto.core.model.IModel>.add(entry.getValue().get(0).convert(iModels.get(0), conversionServiceKey.getInputModelFormat(), conversionServiceKey.getOutputModelFormat()))", "org.geppetto.core.services.registry.ServicesRegistry.ConversionServiceKey.getOutputModelFormat()", "org.geppetto.core.services.registry.ServicesRegistry.ConversionServiceKey.getInputModelFormat()"], "Fixed commit": "0f00f19d943a4063f3f2afe7a9b2c9eeac0d064a", "Url": "https://api.github.com/repos/openworm/org.geppetto.simulation", "Date": "2015-03-16T15:04:44Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((mContext) instanceof com.ritwik.android.madfbla201415.HomepageActivity)) { android.content.Intent intent = new android.content.Intent(mContext, com.ritwik.android.madfbla201415.HomepageActivity.class); intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP); mContext.startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6197/buggy-version/app.src.main.java.com.ritwik.android.madfbla201415.DrawerItemClickListener.java", "BodyUseAPI": [], "Fixed commit": "4c26f5958e8270e8d12227d3f8985d37a5cb7080", "Url": "https://api.github.com/repos/ritwikdixit/Chronology", "Date": "2015-01-02T23:46:00Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((mContext) instanceof com.ritwik.android.madfbla201415.AllEventsActivity)) { android.content.Intent intent = new android.content.Intent(mContext, com.ritwik.android.madfbla201415.AllEventsActivity.class); mContext.startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6197/buggy-version/app.src.main.java.com.ritwik.android.madfbla201415.DrawerItemClickListener.java", "BodyUseAPI": [], "Fixed commit": "4c26f5958e8270e8d12227d3f8985d37a5cb7080", "Url": "https://api.github.com/repos/ritwikdixit/Chronology", "Date": "2015-01-02T23:46:00Z"},
{"Line": "=>1523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.util.TypeUtils.isJSONTypeIgnore(java.lang.Class<?>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ignore) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/9191/buggy-version/src.main.java.com.alibaba.fastjson.util.TypeUtils.java", "BodyUseAPI": [], "Fixed commit": "c5c48345eb44538d80408d1cb252394e63af1040", "Url": "https://api.github.com/repos/GulajavaMinistudio/fastjson", "Date": "2017-04-14T09:39:09Z"},
{"Line": "=>719", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stack == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5832/buggy-version/src.main.java.com.forgeessentials.protection.ProtectionEventHandler.java", "BodyUseAPI": [], "Fixed commit": "2f08fcb8b5be0ba652b10a616b91c3205991a9a3", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentials", "Date": "2015-07-08T12:34:55Z"},
{"Line": "=>733", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stack == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5832/buggy-version/src.main.java.com.forgeessentials.protection.ProtectionEventHandler.java", "BodyUseAPI": [], "Fixed commit": "2f08fcb8b5be0ba652b10a616b91c3205991a9a3", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentials", "Date": "2015-07-08T12:34:55Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.beanu.arad.base.ToolBarFragment.getView()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (view != null) { mToolbar = view.findViewById(R.id.toolbar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3895/buggy-version/arad.src.main.java.com.beanu.arad.base.ToolBarFragment.java", "BodyUseAPI": ["android.view.View.findViewById(R.id.toolbar)"], "Fixed commit": "db2f6d37feceb31f8629912bf92c45c349d99be8", "Url": "https://api.github.com/repos/beanu/Arad", "Date": "2017-11-03T00:44:33Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.codecool.yo.DBHandler.findUserIdByUserName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.lang.Long.toString(userId).equals(req.params(\"userId\"))) { com.codecool.yo.controller.Controller.isItMyProfile = true; params.put(\"isItMyProfile\", com.codecool.yo.controller.Controller.isItMyProfile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5804/buggy-version/src.main.java.com.codecool.yo.controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "704e30d8c97d7490544ef9ce4af23c41aa725606", "Url": "https://api.github.com/repos/kelliartamas/yo", "Date": "2017-11-09T11:01:30Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["solitaire.GameBoard.stackClicked(java.awt.event.MouseEvent)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((stackPressed.size()) > 0) { stackPressed.peek().setFaceUp(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5827/buggy-version/src.solitaire.GameBoard.java", "BodyUseAPI": ["stackPressed.peek().setFaceUp(boolean)", "solitaire.Stack.peek()"], "Fixed commit": "6e3767d7ba0761cc41301bb9f15f83e35e38b7ff", "Url": "https://api.github.com/repos/GaryLChew/solitaire", "Date": "2017-09-10T00:17:13Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["solitaire.GameBoard.stackClicked(java.awt.event.MouseEvent)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((stackPressed.size()) > 0) { stackPressed.peek().setFaceUp(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5827/buggy-version/src.solitaire.GameBoard.java", "BodyUseAPI": ["stackPressed.peek().setFaceUp(boolean)", "solitaire.Stack.peek()"], "Fixed commit": "6e3767d7ba0761cc41301bb9f15f83e35e38b7ff", "Url": "https://api.github.com/repos/GaryLChew/solitaire", "Date": "2017-09-10T00:17:13Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) == null) { throw new com.fathomdb.cli.CliException(\"Value is required (if not using -stdin)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/92/buggy-version/bindings.cli.src.main.java.org.platformlayer.client.cli.commands.SetProperty.java", "BodyUseAPI": [], "Fixed commit": "21e8aa8c53ee70c2379060e4c534f91d371dba7e", "Url": "https://api.github.com/repos/platformlayer/platformlayer", "Date": "2012-07-11T23:55:31Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (kolicina < 0) { javax.swing.JOptionPane.showMessageDialog(null, \"Kolicina ne moze biti negativna!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3871/buggy-version/Projekat.src.main.java.ba.unsa.etf.si.app.Inventura.GUI.izlazniDokument.java", "BodyUseAPI": [], "Fixed commit": "c6a22c0b5d04e12ba28ecbbd7d1b01b6245dc427", "Url": "https://api.github.com/repos/SoftverInzenjeringETFSA/Si2015Tim4", "Date": "2016-05-17T02:28:30Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.imagej.Dataset.typedImg(net.imglib2.type.numeric.integer.UnsignedByteType)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (img == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/523/buggy-version/src.main.java.gui.postprocessing.Postprocessing.java", "BodyUseAPI": [], "Fixed commit": "b01c753630ee4cef4044f790d2693e3ac31f9bcd", "Url": "https://api.github.com/repos/PreibischLab/RadialSymmetryLocalization", "Date": "2017-12-18T10:13:03Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == other) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3599/buggy-version/components.patient-access-rules.api.src.main.java.org.phenotips.data.permissions.internal.DefaultCollaborator.java", "BodyUseAPI": [], "Fixed commit": "7c333d741578e2837513f97239cbd79dd6a45d8c", "Url": "https://api.github.com/repos/phenotips/phenotips", "Date": "2017-09-27T20:19:24Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shutdownable == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3790/buggy-version/artemis-threads.src.main.java.com.spinn3r.artemis.threads.Shutdownables.java", "BodyUseAPI": [], "Fixed commit": "46a4ee263257b501dbca015bdaaeae63a1d5fc1d", "Url": "https://api.github.com/repos/spinn3r/artemis-framework", "Date": "2016-06-08T01:24:56Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, ? extends com.spinn3r.artemis.threads.Shutdownable>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (shutdownable == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3790/buggy-version/artemis-threads.src.main.java.com.spinn3r.artemis.threads.Shutdownables.java", "BodyUseAPI": [], "Fixed commit": "46a4ee263257b501dbca015bdaaeae63a1d5fc1d", "Url": "https://api.github.com/repos/spinn3r/artemis-framework", "Date": "2016-06-08T01:24:56Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spreadSheet.getSheetCount()) == 1) { throw new cz.muni.fi.pb138.odskart.backend.KartException(\"Removing last category\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3835/buggy-version/ODSKart.src.main.java.cz.muni.fi.pb138.odskart.backend.KartManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "bca64265b2077b5bf115629d124e6fda2d8858a5", "Url": "https://api.github.com/repos/Sachji/ODSKartW", "Date": "2015-04-30T21:23:25Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((reminders.peek().getReTime().compareTo(cal)) == (-1)) { java.lang.System.out.println(\"Pop Reminder!\"); reminderList.add(reminders.poll()); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/545/buggy-version/src.carelender.model.ReminderManager.java", "BodyUseAPI": ["carelender.model.ReminderList.add(reminders.poll())", "java.util.PriorityQueue<carelender.model.Reminder>.poll()"], "Fixed commit": "af1f8239b1c6b4012e899c05836f618bd4be2b1c", "Url": "https://api.github.com/repos/cs2103aug2015-t10-4j/main", "Date": "2015-10-28T11:06:51Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (curPos < ((de.leonhardt.sbm.gui.newGui.worker.PopulateListWorker.CHUNK_SIZE) - 1)) { publish(java.util.Arrays.copyOf(chunks, (curPos + 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1696/buggy-version/src.de.leonhardt.sbm.gui.newGui.worker.PopulateListWorker.java", "BodyUseAPI": ["de.leonhardt.sbm.gui.newGui.worker.PopulateListWorker.publish(byte[])", "java.util.Arrays.copyOf(de.leonhardt.sbm.gui.common.MessagePM[],int)"], "Fixed commit": "b225dda27f92fd5be62a5af4f92c2812fe33ed61", "Url": "https://api.github.com/repos/fkleon/sms-backup-manager", "Date": "2013-02-16T21:54:39Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i) > 0) map.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4586/buggy-version/app.src.main.java.com.example.babadaryoush.atm_finder.Map_fragment.java", "BodyUseAPI": [], "Fixed commit": "3bfcf8fa66efe83ef9c7ec57fce91ab254e3cd5e", "Url": "https://api.github.com/repos/alexpouget/AtmFinder", "Date": "2016-07-18T02:05:12Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isValidChar) { linkEndPos++; }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5405/buggy-version/src.main.java.org.quantumbadger.redreader.reddit.prepared.MarkdownTokenizer.java", "BodyUseAPI": [], "Fixed commit": "09c62f6820978fa92ebb39eb881a514ad5670663", "Url": "https://api.github.com/repos/Rroia/RedReader", "Date": "2013-07-06T12:45:12Z"},
{"Line": "=>939", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.sip.SipServletMessage.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (externalSipUri != null) { externalIp = externalSipUri.toString(); }else { externalIp = sipMessage.getInitialRemoteAddr(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4037/buggy-version/restcomm.restcomm.telephony.src.main.java.org.mobicents.servlet.restcomm.telephony.Call.java", "BodyUseAPI": ["javax.servlet.sip.SipURI.toString()"], "Fixed commit": "8f30bfc7b7e008358bd9b9803e2654173398778d", "Url": "https://api.github.com/repos/RestComm/Restcomm-Connect", "Date": "2016-04-01T12:57:05Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isClient()) { return (a != null) && (org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(a.getAuthorities()).contains(\"uaa.admin\")); }else if (isUser()) { if (a instanceof org.springframework.security.oauth2.provider.OAuth2Authentication) { org.springframework.security.oauth2.provider.OAuth2Authentication oa = ((org.springframework.security.oauth2.provider.OAuth2Authentication) (a)); return (a != null) && (org.springframework.security.oauth2.provider.expression.OAuth2ExpressionUtils.hasAnyScope(oa, new java.lang.String[]{ \"uaa.admin\" })); }else { return (a != null) && (org.springframework.security.core.authority.AuthorityUtils.authorityListToSet(a.getAuthorities()).contains(\"uaa.admin\")); } }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2513/buggy-version/common.src.main.java.org.cloudfoundry.identity.uaa.security.DefaultSecurityContextAccessor.java", "BodyUseAPI": [], "Fixed commit": "d783ee7fde49929e60119a3cc6612c84051156a7", "Url": "https://api.github.com/repos/X-Plat/uaa", "Date": "2014-04-04T20:16:08Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((errorHandling) == (SQLScriptErrorHandling.STOP_ROLLBACK)) { monitor.beginTask(\"Rollback data\", 1); txnManager.rollback(session, null); monitor.done(); }else { org.jkiss.dbeaver.runtime.sql.SQLQueryJob.log.info(\"Script executed with errors. Changes were not commmitted.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8066/buggy-version/plugins.org.jkiss.dbeaver.core.src.org.jkiss.dbeaver.runtime.sql.SQLQueryJob.java", "BodyUseAPI": [], "Fixed commit": "4914bea7de483392268dc3695ee36953d84aade8", "Url": "https://api.github.com/repos/dbeaver/dbeaver", "Date": "2017-09-21T05:01:17Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof io.hasura.sdk.exception.HasuraException) { return ((io.hasura.sdk.exception.HasuraException) (e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4776/buggy-version/sdk.src.main.java.io.hasura.sdk.responseConverter.BaseResponseConverter.java", "BodyUseAPI": [], "Fixed commit": "7925e4849555b677f8aa694b4d3342d732e6fe71", "Url": "https://api.github.com/repos/hasura/android-sdk", "Date": "2017-07-28T13:57:24Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (field.getName().equals(value)) { result = field.get(this); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1104/buggy-version/AppConfigLib.src.com.crescentflare.appconfig.model.AppConfigBaseModel.java", "BodyUseAPI": ["java.lang.reflect.Field.get(com.crescentflare.appconfig.model.AppConfigBaseModel)"], "Fixed commit": "ab75ff08ac3e17ed4402b9562c8f0ec43cb98f78", "Url": "https://api.github.com/repos/crescentflare/DynamicAppConfigAndroid", "Date": "2015-12-10T21:34:18Z"},
{"Line": "=>963", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCaptureSession) != null) { mCaptureSession.capture(captureRequest, mCaptureCallback, backgroundhandler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8869/buggy-version/app.src.main.java.tech.picktime.ageCompute.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "da4aadc93c446ecc4cead924419fa2101e5011e9", "Url": "https://api.github.com/repos/diskrooms/pickAge", "Date": "2017-09-13T15:42:02Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((score) > (hgsc)) cl.makinolas.atk.utils.SaveManager.getInstance().setHighscore(((int) (score)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5276/buggy-version/core.src.cl.makinolas.atk.minigames.MinigameStage.java", "BodyUseAPI": [], "Fixed commit": "306587d15d6c64e8ea6cb0932bfbc68e3c87c49e", "Url": "https://api.github.com/repos/juakotorres/Makinolas", "Date": "2016-10-06T02:17:25Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.tenmax.poppy.DataRow.get(spec.getColumn())", "io.tenmax.poppy.DataRow.get(spec.getColumn())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((v1 == null) || (v2 == null)) { if (v1 == null) { if (v2 != null) { return -1; }else { continue; } }else { return 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3210/buggy-version/src.main.java.io.tenmax.poppy.dataframes.SortDataFrame.java", "BodyUseAPI": [], "Fixed commit": "e626753b7cfff4bce8aeaa1e73d322d2f2fdd67c", "Url": "https://api.github.com/repos/tenmax/poppy", "Date": "2016-07-30T00:48:00Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.apache.flink.api.table.explain.Node>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tempNode.getPact().equals(\"Data Source\")) content = \"collect elements with CollectionInputFormat\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8699/buggy-version/flink-staging.flink-table.src.main.scala.org.apache.flink.api.table.explain.PlanJsonParser.java", "BodyUseAPI": [], "Fixed commit": "c62e3ffdb5f51b3c07357cfc0dbec648a280b91b", "Url": "https://api.github.com/repos/gallenvara/flink", "Date": "2016-01-08T11:06:24Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.sticky) { if (this.stuck) { net.minecraft.entity.Entity stuckEntity = this.worldObj.getEntityByID(this.stuckEntityID); if (((this.stuckEntityID) != 0) && (stuckEntity == null)) { this.stuck = false; this.stuckEntityID = 0; }else if (((this.stuckEntityID) != 0) && (stuckEntity != null)) { this.setPosition(stuckEntity.posX, ((stuckEntity.posY) + (stuckEntity.yOffset)), stuckEntity.posZ); } }else { super.onUpdate(); } }else { this.prevPosX = this.posX; this.prevPosY = this.posY; this.prevPosZ = this.posZ; this.motionY -= 0.03999999910593033; this.moveEntity(this.motionX, this.motionY, this.motionZ); this.motionX *= 0.9800000190734863; this.motionY *= 0.9800000190734863; this.motionZ *= 0.9800000190734863; if (this.onGround) { this.motionX *= 0.699999988079071; this.motionZ *= 0.699999988079071; this.motionY *= -0.5; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1743/buggy-version/src.main.java.building_rails.entity.EntityThrownDynamite.java", "BodyUseAPI": [], "Fixed commit": "63296aad557cea81a19e77be26011d1409d97180", "Url": "https://api.github.com/repos/Katalliaan/Building-Rails", "Date": "2016-04-18T22:31:57Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (availableCoins < 0) throw new exception.UnrealAmountException(\"Amount of coins in the inventory cannot be negative\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/232/buggy-version/src.main.java.repository.InventoryRepository.java", "BodyUseAPI": [], "Fixed commit": "4e690cdb7cf9deb7951fa261bd983727c1371403", "Url": "https://api.github.com/repos/sorinaccio/VendingMachine", "Date": "2017-01-15T20:06:03Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (denomination <= 0) throw new exception.UnrealAmountException((\"Coin denomination should be positive. Current value: \" + denomination));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/232/buggy-version/src.main.java.repository.InventoryRepository.java", "BodyUseAPI": [], "Fixed commit": "4e690cdb7cf9deb7951fa261bd983727c1371403", "Url": "https://api.github.com/repos/sorinaccio/VendingMachine", "Date": "2017-01-15T20:06:03Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sad.isPlaying()) { sad.pause(); sad.seekTo(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8575/buggy-version/Sample.app.src.main.java.com.microsoft.projectoxford.emotionsample.RecognizeActivity.java", "BodyUseAPI": ["android.media.MediaPlayer.pause()", "android.media.MediaPlayer.seekTo(int)"], "Fixed commit": "25d45ab42d680881933f85c8c2763fb9f015f983", "Url": "https://api.github.com/repos/nfsz/Emotion-Recognizer", "Date": "2016-03-06T14:02:01Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (happy.isPlaying()) { happy.pause(); happy.seekTo(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8575/buggy-version/Sample.app.src.main.java.com.microsoft.projectoxford.emotionsample.RecognizeActivity.java", "BodyUseAPI": ["android.media.MediaPlayer.pause()", "android.media.MediaPlayer.seekTo(int)"], "Fixed commit": "25d45ab42d680881933f85c8c2763fb9f015f983", "Url": "https://api.github.com/repos/nfsz/Emotion-Recognizer", "Date": "2016-03-06T14:02:01Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getStringExtra(getString(R.string.app_intent_extra_login))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (resultdata == null) { finish(); }else { if (resultdata.equals(getString(R.string.app_intent_extra_login_language))) { cc.pchospital.app.util.ChangeLocale.Change(this); restart(); }else { finish(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6103/buggy-version/app.src.main.java.cc.pchospital.app.TicketActivity.java", "BodyUseAPI": ["java.lang.String.equals(getString(R.string.app_intent_extra_login_language))"], "Fixed commit": "79329fbff1bdf41af92d5a36fa697575e5764dde", "Url": "https://api.github.com/repos/ikesnowy/PC_Hospital_Android", "Date": "2017-12-07T12:36:44Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (freedays.util.ValidationUtils.checkRomanianLegalHoliday(start)) { init++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7366/buggy-version/Sts.freeday.src.main.java.freedays.util.DateUtils.java", "BodyUseAPI": [], "Fixed commit": "f827312fb3539b34947adc414605f5864915569f", "Url": "https://api.github.com/repos/fmacicasan/FreeDaysIntern", "Date": "2011-09-29T08:15:05Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentMenuItemId) == (R.id.nav_schedule)) addShadowToAppBar(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3853/buggy-version/android.app.src.main.java.org.fossasia.openevent.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c7544e1b2ffa6f7b5747aece36bc288dcd3709ea", "Url": "https://api.github.com/repos/geeteshk/open-event-android", "Date": "2016-08-23T15:59:59Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (score <= 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6947/buggy-version/main.java.com.androidgame.jingfu.turtlegame.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "756ad3ab34e35afe4571c237903c3e631112b48d", "Url": "https://api.github.com/repos/liwangjing/FJturtle", "Date": "2016-07-03T06:39:32Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.androidgame.jingfu.fjturtle.framework.FileIO.getIntegerFromPref(java.lang.String,int)", "com.androidgame.jingfu.fjturtle.framework.FileIO.getIntegerFromPref(java.lang.String,int)", "com.androidgame.jingfu.fjturtle.framework.FileIO.getIntegerFromPref(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((score == first) || (score == second)) || (score == third)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6947/buggy-version/main.java.com.androidgame.jingfu.turtlegame.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "756ad3ab34e35afe4571c237903c3e631112b48d", "Url": "https://api.github.com/repos/liwangjing/FJturtle", "Date": "2016-07-03T06:39:32Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.sqrt(((java.lang.Math.pow((xB - (this.x)), 2)) + (java.lang.Math.pow((yB - (this.y)), 2))))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (distance > ((this.perception) + 1)) { distance = java.lang.Math.abs(((this.environment.gridWidth) - distance)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2427/buggy-version/src.Zombie.java", "BodyUseAPI": ["java.lang.Math.abs(((this.environment.gridWidth) - distance))"], "Fixed commit": "c0ebb83972f0eee40f1d1bb5590d827f3bc9e9dc", "Url": "https://api.github.com/repos/ducreyna/zombie-simulator", "Date": "2013-06-11T09:29:08Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.neighboursArray.get(0).size()) != 0) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2427/buggy-version/src.Zombie.java", "BodyUseAPI": [], "Fixed commit": "c0ebb83972f0eee40f1d1bb5590d827f3bc9e9dc", "Url": "https://api.github.com/repos/ducreyna/zombie-simulator", "Date": "2013-06-11T09:29:08Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getCmdletId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (dispatches.containsKey(cmdletId)) { dispatches.get(cmdletId).tell(message, getSelf()); getSender().tell(\"Succeed\", getSelf()); }else { getSender().tell(\"NotFound\", getSelf()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8238/buggy-version/smart-engine.src.main.java.org.smartdata.server.engine.cmdlet.agent.AgentMaster.java", "BodyUseAPI": ["java.util.Map<java.lang.Long, akka.actor.ActorRef>.get(long)", "dispatches.get(cmdletId).tell(java.lang.Object,getSelf())"], "Fixed commit": "2cc104e8eac69a9112dde5f858fe0ddbd6fdc1e9", "Url": "https://api.github.com/repos/qiyuangong/SSM", "Date": "2017-12-01T09:08:18Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(moduleList.isEmpty())) { pool.execute(((java.util.List<edu.usf.micronsl.exec.DependencyRunnable>) ((java.util.List<?>) (moduleList)))); try { pool.awaitTermination(1000, java.util.concurrent.TimeUnit.SECONDS); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7488/buggy-version/micronsl.src.edu.usf.micronsl.ModuleSetRunner.java", "BodyUseAPI": [], "Fixed commit": "9a03fb11d9c12753f814d6cda8fa53f4381f2c80", "Url": "https://api.github.com/repos/biorobaw/scs", "Date": "2017-06-22T20:51:28Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(edgeMap.containsKey(connectedTo))) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5139/buggy-version/src.notTheWitness.board.NodeGraph.java", "BodyUseAPI": [], "Fixed commit": "bb251818e0e700761e4df1190cee644eefa8dc96", "Url": "https://api.github.com/repos/rk1024/NotTheWitness", "Date": "2016-05-26T01:10:13Z"},
{"Line": "=>1416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zstack.storage.ceph.backup.CephBackupStorageVO.getFsid()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((org.zstack.core.db.Q.New(org.zstack.storage.ceph.primary.CephPrimaryStorageVO.class).eq(CephPrimaryStorageVO_.fsid, fsid).find()) == null) { dbf.removeByPrimaryKey(fsid, org.zstack.storage.ceph.backup.CephCapacityVO.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4869/buggy-version/plugin.ceph.src.main.java.org.zstack.storage.ceph.backup.CephBackupStorageBase.java", "BodyUseAPI": ["org.zstack.storage.ceph.backup.CephBackupStorageBase.removeByPrimaryKey(java.lang.String,java.lang.Class)"], "Fixed commit": "f5988dcafe4aedbbc662a5c71522cb9be0b5d161", "Url": "https://api.github.com/repos/MaJin1996/zstack", "Date": "2017-03-20T01:34:58Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((me.planetguy.remaininmotion.base.TileEntityCamouflageable) (te)).DecorationMeta) != 0) throw new java.lang.Exception(\"This method will almost always attempt to get metadata from world, resulting in the wrong texture.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3277/buggy-version/src.main.java.me.planetguy.remaininmotion.base.BlockCamouflageable.java", "BodyUseAPI": [], "Fixed commit": "6fa5e9a0a87021c1485d4f791cc5a2568d15a330", "Url": "https://api.github.com/repos/planetguy32/RemainInMotion", "Date": "2015-03-11T22:11:33Z"},
{"Line": "=>570", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MotionDirection.DeltaY) != 0) { entity.onGround = capture.WasOnGround; entity.isAirBorne = capture.WasAirBorne; capture.SetPosition(motionX, 0, motionZ); capture.SetYPosition(((netMotionY) + 0.0625)); }else { capture.SetPosition(motionX, motionY, motionZ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3277/buggy-version/src.main.java.me.planetguy.remaininmotion.spectre.TileEntityMotiveSpectre.java", "BodyUseAPI": [], "Fixed commit": "6fa5e9a0a87021c1485d4f791cc5a2568d15a330", "Url": "https://api.github.com/repos/planetguy32/RemainInMotion", "Date": "2015-03-11T22:11:33Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, com.cs110.lit.adventour.StartTourActivity.LOCATION_REFRESH_TIME, com.cs110.lit.adventour.StartTourActivity.LOCATION_REFRESH_DISTANCE, locationListener); java.lang.String locationNetworkProvider = android.location.LocationManager.GPS_PROVIDER; android.location.Location lastKnownLocation = locationManager.getLastKnownLocation(locationNetworkProvider); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3703/buggy-version/app.src.main.java.com.cs110.lit.adventour.StartTourActivity.java", "BodyUseAPI": [], "Fixed commit": "bf68ce7cad2828b2cf6320a9f2e03e681c2b275e", "Url": "https://api.github.com/repos/purag/cse110sp16", "Date": "2016-05-20T07:41:05Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (endOfLastSection != null) { endOfLastSection.prev = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/199/buggy-version/State.java", "BodyUseAPI": [], "Fixed commit": "1da570f60e17a801a62e380b90d490f512066592", "Url": "https://api.github.com/repos/fictionic/SiteswapSuite", "Date": "2017-09-22T15:19:19Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (lastNonZero != null) { lastNonZero.prev = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/199/buggy-version/State.java", "BodyUseAPI": [], "Fixed commit": "1da570f60e17a801a62e380b90d490f512066592", "Url": "https://api.github.com/repos/fictionic/SiteswapSuite", "Date": "2017-09-22T15:19:19Z"},
{"Line": "=>716", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nextDirection.size()) < 2) nextDirection.add(d);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1149/buggy-version/src.gameActions.Control.java", "BodyUseAPI": ["java.util.ArrayList<gameActions.Control.Direction>.add(gameActions.Control.Direction)"], "Fixed commit": "f7bfd25e41a6c4df812f18ab2b61cd55055c3c2b", "Url": "https://api.github.com/repos/BinEP/SnakeUsingFramework", "Date": "2015-02-19T02:52:12Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((line) != null) { unreadLines.add(line); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2748/buggy-version/embulk-standards.src.main.java.org.embulk.standards.CsvTokenizer.java", "BodyUseAPI": [], "Fixed commit": "863d0598ac87399676157a6478c4b4f0e60ae440", "Url": "https://api.github.com/repos/cosmo0920/embulk", "Date": "2015-08-20T19:06:47Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tools.URLParser.parseOnToken(request.getPathInfo(),int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (url.matches(api.UserServlet.USER_DECK_URL)) { tools.JSONConverter.sendObjectAsJson(response, user.getInventories()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8736/buggy-version/src.api.UserServlet.java", "BodyUseAPI": [], "Fixed commit": "eb440f1bf71779f15af241ae9dc2640350e47df7", "Url": "https://api.github.com/repos/Yamihoshi/MiDARe", "Date": "2017-11-11T20:30:07Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (content != null) { for (org.jsoup.nodes.Node childNode : org.jsoup.Jsoup.parse(content).body().childNodes()) { if (childNode.nodeName().equals(\"p\")) { page.addPagelet(PageletType.TEXT, ((org.jsoup.nodes.Element) (childNode)).text()); }else if (childNode.nodeName().equals(\"img\")) { page.addPagelet(PageletType.IMAGE, childNode.attr(\"src\")); }else if (childNode.nodeName().equals(\"blockquote\")) { page.addPagelet(PageletType.BLOCKQUOTE, ((org.jsoup.nodes.Element) (childNode)).text()); } } this.pages.set(0, page); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7210/buggy-version/src.main.java.com.pratilipi.data.type.doc.PratilipiContentDocImpl.java", "BodyUseAPI": ["org.jsoup.Jsoup.parse(java.lang.String)", "org.jsoup.Jsoup.parse(content).body()", "org.jsoup.Jsoup.parse(content).body().childNodes()"], "Fixed commit": "012d7f94c944bd65f5958fbdd041cd57482f2662", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-09-23T11:38:15Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message == null) { message = \"unknown exception.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5615/buggy-version/mhttp.src.main.java.im.wangchao.mhttp.Response.java", "BodyUseAPI": [], "Fixed commit": "3490da6b5053514f570db0ad074bb828a69947b0", "Url": "https://api.github.com/repos/motcwang/MHttp", "Date": "2017-05-24T04:50:20Z"},
{"Line": "=>2092", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (length == 0) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/9039/buggy-version/src.main.java.com.fasterxml.jackson.dataformat.smile.SmileGenerator.java", "BodyUseAPI": [], "Fixed commit": "a030bccc5c5f0473d0027becc90d6b6836acbeba", "Url": "https://api.github.com/repos/FasterXML/jackson-dataformat-smile", "Date": "2013-02-26T22:58:57Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.yydcdut.note.utils.LollipopCompat.AFTER_LOLLIPOP) { getWindow().setNavigationBarColor(getResources().getColor(ThemeHelper.THEME.get(index).getColorPrimary())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7283/buggy-version/app.src.main.java.com.yydcdut.note.controller.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "fba0e783bc6769089482ab72c24f9e8cd27a846f", "Url": "https://api.github.com/repos/yydcdut/PhotoNoter", "Date": "2015-11-10T05:47:34Z"},
{"Line": "=>703", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getChunkFromChunkCoords(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((chunk.getBlockID(((x & 127) >> 3), (y >> 3), ((z & 127) >> 3))) != (slimevoid.littleblocks.core.lib.ConfigurationLib.littleChunkID)) && (this.isAirBlock(x, y, z))) { this.getRealWorld().setBlock((x >> 3), (y >> 3), (z >> 3), ConfigurationLib.littleChunkID); }else if ((chunk.getBlockID(((x & 127) >> 3), (y >> 3), ((z & 127) >> 3))) != (slimevoid.littleblocks.core.lib.ConfigurationLib.littleChunkID)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7946/buggy-version/LB-source.slimevoid.littleblocks.world.LittleWorld.java", "BodyUseAPI": ["net.minecraft.world.chunk.Chunk.getBlockID(int,int,int)", "net.minecraft.world.World.setBlock(int,int,int,ConfigurationLib.littleChunkID)"], "Fixed commit": "87c4fd34eacd128e894dfd2db6bd439b3572ae31", "Url": "https://api.github.com/repos/SlimeVoid/LittleBlocks-FML", "Date": "2013-10-16T16:13:38Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getChunkFromChunkCoords(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((chunk.getBlockID(((x & 127) >> 3), (y >> 3), ((z & 127) >> 3))) != (slimevoid.littleblocks.core.lib.ConfigurationLib.littleChunkID)) && (this.isAirBlock(x, y, z))) { this.getRealWorld().setBlock((x >> 3), (y >> 3), (z >> 3), ConfigurationLib.littleChunkID); }else if ((chunk.getBlockID(((x & 127) >> 3), (y >> 3), ((z & 127) >> 3))) != (slimevoid.littleblocks.core.lib.ConfigurationLib.littleChunkID)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7946/buggy-version/LB-source.slimevoid.littleblocks.world.LittleWorld.java", "BodyUseAPI": ["net.minecraft.world.World.setBlock(int,int,int,ConfigurationLib.littleChunkID)", "net.minecraft.world.chunk.Chunk.getBlockID(int,int,int)"], "Fixed commit": "87c4fd34eacd128e894dfd2db6bd439b3572ae31", "Url": "https://api.github.com/repos/SlimeVoid/LittleBlocks-FML", "Date": "2013-10-16T16:13:38Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (action.toString().equalsIgnoreCase(\"delete\")) { java.lang.System.out.println(\"Delete\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1299/buggy-version/src.main.java.com.logical.colissimos.servlet.PackageListServlet.java", "BodyUseAPI": [], "Fixed commit": "6d3d80eed45b9013dc661f9ac8d4f1c4b871b9ea", "Url": "https://api.github.com/repos/Yirou/Colissimo-Jpa", "Date": "2015-12-17T08:21:48Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (variable_bytelength <= 0) throw new java.lang.Exception(((\" **** ASSEMBLER ERROR: The variable '\" + variable_name) + \"' must have more than 0 bytes of size.\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6212/buggy-version/src.com.core.qassembler.memory.properties.Variable.java", "BodyUseAPI": [], "Fixed commit": "d22b0da4420a7c8e2cdf84ab29f8b7972fb2b054", "Url": "https://api.github.com/repos/miguelangelo78/QEPU-Assembler-V2", "Date": "2014-10-11T03:49:41Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.items.contains(item))) { this.items.add(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1467/buggy-version/src.io.teamelite.menu_controller.system.json.ItemHandler.java", "BodyUseAPI": ["java.util.List<io.teamelite.menu_controller.system.menu.MenuItem>.add(io.teamelite.menu_controller.system.menu.MenuItem)"], "Fixed commit": "87e0939a8e6093da2b6b6074c3ea023ba8b2e3cd", "Url": "https://api.github.com/repos/Teamelite/MenuController", "Date": "2015-04-19T01:50:12Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.ds.avare.place.Destination) (arg0)) != (mDestination)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5853/buggy-version/src.com.ds.avare.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "01420c6aea6fa4986592b75682d3d542d7ba8f1a", "Url": "https://api.github.com/repos/apps4av/avare", "Date": "2013-05-17T18:34:04Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ScanRunning) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3363/buggy-version/app.src.main.java.tech.iodev.fissh.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "349cecc6436c3c88dc1a66f822190cb9eb95b709", "Url": "https://api.github.com/repos/ioanmoldovan/FiSSH-App", "Date": "2017-10-30T13:52:58Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dominators.contains(v))) dominators.add(v);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5153/buggy-version/structures.Vertex.java", "BodyUseAPI": ["java.util.LinkedList<structures.Vertex>.add(structures.Vertex)"], "Fixed commit": "b3b78d9d147d43f883e8b7b4c52fae5bcf3a0ecf", "Url": "https://api.github.com/repos/gastonscilingo/static-analysis", "Date": "2013-10-04T17:04:38Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.mzmine.datamodel.PeakListRow.getPeak(net.sf.mzmine.datamodel.RawDataFile)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (standardPeak == null) { normalizationFactors[0] = 1.0; }else { if ((peakMeasurementType) == (net.sf.mzmine.util.PeakMeasurementType.HEIGHT)) { normalizationFactors[0] = standardPeak.getHeight(); }else { normalizationFactors[0] = standardPeak.getArea(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2044/buggy-version/src.main.java.net.sf.mzmine.modules.peaklistmethods.normalization.standardcompound.StandardCompoundNormalizerTask.java", "BodyUseAPI": ["net.sf.mzmine.datamodel.Feature.getArea()", "net.sf.mzmine.datamodel.Feature.getHeight()"], "Fixed commit": "3204ea4597d9bb894142504ca21e1c89c26218fc", "Url": "https://api.github.com/repos/mzmine/mzmine2", "Date": "2015-07-21T06:54:47Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (resource instanceof org.springframework.core.io.UrlResource) { if ((filesModifyCheckMap.containsKey(resource)) && ((filesModifyCheckMap.get(resource)) == 0)) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8630/buggy-version/src.main.java.org.springframework.conf.config.ConfMonitorMain.java", "BodyUseAPI": ["java.util.Map<org.springframework.core.io.Resource, java.lang.Long>.get(org.springframework.core.io.Resource)", "java.util.Map<org.springframework.core.io.Resource, java.lang.Long>.containsKey(org.springframework.core.io.Resource)"], "Fixed commit": "38a8ac58efdeef54ff6fb6df1bfb486bc0e1db2c", "Url": "https://api.github.com/repos/blackshadowwalker/spring-conf", "Date": "2015-07-14T12:44:52Z"},
{"Line": "=>1535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fenixedu.academic.domain.CurricularCourse.getExecutionCoursesByExecutionPeriod(org.fenixedu.academic.domain.ExecutionSemester)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (courses.isEmpty()) { return new pt.utl.ist.fenix.tools.util.i18n.MultiLanguageString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/557/buggy-version/src.main.java.org.fenixedu.academic.domain.CurricularCourse.java", "BodyUseAPI": [], "Fixed commit": "6c759192bd6e66ba9e5b0a751aa63c08f42eece8", "Url": "https://api.github.com/repos/FenixEdu/fenixedu-academic", "Date": "2015-03-04T17:27:05Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLastJsonWeatherData) == null) { android.widget.Toast.makeText(this, getString(R.string.sorry_no_weather_data_available), Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7576/buggy-version/DataWeather.app.src.main.java.com.mcmu.juanjesus.dataweather.activities.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "8c54b3c08d2a06ec7246d2a07529dc86c94f35cc", "Url": "https://api.github.com/repos/JuanIzquierdoDomenech/DataWeather", "Date": "2015-10-31T15:06:03Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (window.getSelectedCourses().contains(unsortedResults.get(0))) { javax.swing.JOptionPane.showMessageDialog(null, ((unsortedResults.get(0).getNumber()) + \" has already been selected\"), \"Error\", javax.swing.JOptionPane.ERROR_MESSAGE, null); }else { window.getSelectedCourses().addElement(unsortedResults.get(0)); if (searchMethod == (com.github.beijingstrongbow.userinterface.managers.ScheduleBuilderManager.SearchMethod.COURSE_NAME)) { window.setCourseNameSearchText(\"\"); }else { window.setCourseNumSearchText(\"\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8935/buggy-version/Universal.src.com.github.beijingstrongbow.userinterface.managers.ScheduleBuilderManager.java", "BodyUseAPI": ["com.github.beijingstrongbow.userinterface.ScheduleBuilderWindow.getSelectedCourses()", "unsortedResults.get(0).getNumber()", "javax.swing.JOptionPane.showMessageDialog(<nulltype>,((unsortedResults.get(0).getNumber()) + \" has already been selected\"),java.lang.String,int,<nulltype>)", "com.github.beijingstrongbow.userinterface.ScheduleBuilderWindow.setCourseNameSearchText(java.lang.String)", "com.github.beijingstrongbow.userinterface.ScheduleBuilderWindow.setCourseNumSearchText(java.lang.String)", "java.util.ArrayList<com.github.beijingstrongbow.Course>.get(int)", "java.util.ArrayList<com.github.beijingstrongbow.Course>.get(int)", "window.getSelectedCourses().addElement(unsortedResults.get(0))"], "Fixed commit": "637f4a323f645ecf5efb4d676bd7bf29eefc29c7", "Url": "https://api.github.com/repos/ehiggins98/CourseScheduleScraper", "Date": "2017-08-11T03:01:07Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((a instanceof java.lang.String) && (b instanceof ilarkesto.gwt.client.AGwtEntity)) { return a.equals(((ilarkesto.gwt.client.AGwtEntity) (b)).getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5897/buggy-version/ilarkesto2.src.main.java.ilarkesto.core.base.Utl.java", "BodyUseAPI": ["java.lang.Object.equals(((ilarkesto.gwt.client.AGwtEntity) (b)).getId())"], "Fixed commit": "401cc8c6aa7490d607c299e937f8c1f560e31f10", "Url": "https://api.github.com/repos/ErikVerheul/kunagi2", "Date": "2016-07-12T20:06:49Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mockit.internal.state.MockingFilters.isSubclassOfUnmockable(returnType)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7269/buggy-version/main.src.mockit.internal.state.MockedTypeCascade.java", "BodyUseAPI": [], "Fixed commit": "f70141468875532f7f2919750d2699681d0c7954", "Url": "https://api.github.com/repos/jmockit/jmockit1", "Date": "2017-07-29T16:11:56Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gamelab.world.World.getChunkFromTileCoords(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (c != null) return c.getTileAt((x / (gamelab.tile.Tile.TILE_WIDTH)), (y / (gamelab.tile.Tile.TILE_HEIGHT)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6304/buggy-version/src.gamelab.world.World.java", "BodyUseAPI": ["gamelab.world.chunk.Chunk.getTileAt((x / (gamelab.tile.Tile.TILE_WIDTH)),(y / (gamelab.tile.Tile.TILE_HEIGHT)))"], "Fixed commit": "12b004609d4b29abe5508843b9fbec0d1a69bb6f", "Url": "https://api.github.com/repos/Snakybo/GameLab", "Date": "2014-06-11T13:07:59Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (movieInformationFounded && (movie[searchMovieInformationCounter].equals(movieInformationTitle, movieInformationMediumType))) { java.lang.System.out.println((\"Movie Title: \" + (movie[searchMovieInformationCounter].movieTitle))); java.lang.System.out.println((\"Medium Type: \" + (movie[searchMovieInformationCounter].getClass().getName()))); java.lang.System.out.println((\"Movie Length: \" + (movie[searchMovieInformationCounter].lengthOfMovie))); java.lang.System.out.println((\"Movie Status: \" + (movie[searchMovieInformationCounter].status ? \"IN\" : \"OUT\"))); java.lang.System.out.println((\"Price of the movie: \" + (movie[searchMovieInformationCounter].priceOfVideo))); if (movie[searchMovieInformationCounter].getClass().getName().equals(\"DVD\")) { java.lang.System.out.println((\"Director: \" + (movie[searchMovieInformationCounter].director))); } if (movie[searchMovieInformationCounter].getClass().getName().equals(\"VCD\")) { java.lang.System.out.println((\"Movie Rating: \" + (movie[searchMovieInformationCounter].movieRating))); java.lang.System.out.println((\"Year Made: \" + (movie[searchMovieInformationCounter].yearMade))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3117/buggy-version/src.Store.java", "BodyUseAPI": ["java.io.PrintStream.println((\"Movie Status: \" + (movie[searchMovieInformationCounter].status ? \"IN\" : \"OUT\")))", "movie[searchMovieInformationCounter].getClass().getName().equals(java.lang.String)", "movie[searchMovieInformationCounter].getClass().getName()", "java.io.PrintStream.println((\"Medium Type: \" + (movie[searchMovieInformationCounter].getClass().getName())))", "movie[searchMovieInformationCounter].getClass()", "java.io.PrintStream.println((\"Year Made: \" + (movie[searchMovieInformationCounter].yearMade)))", "movie[searchMovieInformationCounter].getClass().getName()", "movie[searchMovieInformationCounter].getClass().getName()", "movie[searchMovieInformationCounter].getClass()", "movie[searchMovieInformationCounter].getClass()", "movie[searchMovieInformationCounter].getClass().getName().equals(java.lang.String)", "java.io.PrintStream.println((\"Price of the movie: \" + (movie[searchMovieInformationCounter].priceOfVideo)))", "java.io.PrintStream.println((\"Director: \" + (movie[searchMovieInformationCounter].director)))", "java.io.PrintStream.println((\"Movie Length: \" + (movie[searchMovieInformationCounter].lengthOfMovie)))", "java.io.PrintStream.println((\"Movie Title: \" + (movie[searchMovieInformationCounter].movieTitle)))", "java.io.PrintStream.println((\"Movie Rating: \" + (movie[searchMovieInformationCounter].movieRating)))"], "Fixed commit": "eaa113868432bc548eb7949e084a1e247db8bd7e", "Url": "https://api.github.com/repos/leeliwei930/object-oriented-programming-using-java-sem-4", "Date": "2017-10-01T09:34:49Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((f1.getRegion()) != null) && ((f2.getRegion()) != null)) return java.lang.Integer.compare(org.nextprot.api.core.service.impl.FamilyServiceImpl.REGION_SORT_INDEX.get(f1.getRegion()), org.nextprot.api.core.service.impl.FamilyServiceImpl.REGION_SORT_INDEX.get(f2.getRegion()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2788/buggy-version/core.src.main.java.org.nextprot.api.core.service.impl.FamilyServiceImpl.java", "BodyUseAPI": ["java.lang.Integer.compare(java.lang.Integer,java.lang.Integer)", "java.util.Map<java.lang.String, java.lang.Integer>.get(f2.getRegion())", "java.util.Map<java.lang.String, java.lang.Integer>.get(f1.getRegion())", "org.nextprot.api.core.domain.Family.getRegion()", "org.nextprot.api.core.domain.Family.getRegion()"], "Fixed commit": "942032a1a705b9ef772b2ade430ae07128558620", "Url": "https://api.github.com/repos/calipho-sib/nextprot-api", "Date": "2015-08-12T16:42:31Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (result != null) { android.support.v4.app.NotificationManagerCompat.from(context).notify(0, new android.support.v4.app.NotificationCompat.Builder(context).setSmallIcon(R.drawable.ic_notification).setLargeIcon(android.graphics.BitmapFactory.decodeResource(context.getResources(), R.mipmap.ic_launcher)).setContentTitle(result.getTitle()).setContentText(result.getDescription()).setContentIntent(android.app.PendingIntent.getActivity(context, 0, new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(result.getLink())), 0)).setStyle(new android.support.v4.app.NotificationCompat.BigTextStyle().bigText(result.getDescription())).setVisibility(NotificationCompat.VISIBILITY_PUBLIC).setPriority(NotificationCompat.PRIORITY_MAX).build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8828/buggy-version/app.src.main.java.com.artemohanjanyan.nest.io.AsyncYandexer.java", "BodyUseAPI": ["new android.support.v4.app.NotificationCompat.Builder(context).setSmallIcon(R.drawable.ic_notification).setLargeIcon(android.graphics.BitmapFactory.decodeResource(context.getResources(), R.mipmap.ic_launcher)).setContentTitle(result.getTitle()).setContentText(result.getDescription()).setContentIntent(android.app.PendingIntent.getActivity(context, 0, new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(result.getLink())), 0)).setStyle(new android.support.v4.app.NotificationCompat.BigTextStyle().bigText(result.getDescription())).setVisibility(NotificationCompat.VISIBILITY_PUBLIC).setPriority(NotificationCompat.PRIORITY_MAX)", "new android.support.v4.app.NotificationCompat.Builder(context).setSmallIcon(R.drawable.ic_notification).setLargeIcon(android.graphics.BitmapFactory.decodeResource(context.getResources(), R.mipmap.ic_launcher)).setContentTitle(result.getTitle()).setContentText(result.getDescription())", "android.support.v4.app.NotificationCompat.BigTextStyle.bigText(result.getDescription())", "android.app.PendingIntent.getActivity(android.content.Context,int,android.content.Intent,int)", "android.support.v4.app.NotificationManagerCompat.from(context).notify(int,new android.support.v4.app.NotificationCompat.Builder(context).setSmallIcon(R.drawable.ic_notification).setLargeIcon(android.graphics.BitmapFactory.decodeResource(context.getResources(), R.mipmap.ic_launcher)).setContentTitle(result.getTitle()).setContentText(result.getDescription()).setContentIntent(android.app.PendingIntent.getActivity(context, 0, new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(result.getLink())), 0)).setStyle(new android.support.v4.app.NotificationCompat.BigTextStyle().bigText(result.getDescription())).setVisibility(NotificationCompat.VISIBILITY_PUBLIC).setPriority(NotificationCompat.PRIORITY_MAX).build())", "new android.support.v4.app.NotificationCompat.Builder(context).setSmallIcon(R.drawable.ic_notification).setLargeIcon(android.graphics.BitmapFactory.decodeResource(context.getResources(), R.mipmap.ic_launcher)).setContentTitle(result.getTitle()).setContentText(result.getDescription()).setContentIntent(android.app.PendingIntent.getActivity(context, 0, new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(result.getLink())), 0)).setStyle(new android.support.v4.app.NotificationCompat.BigTextStyle().bigText(result.getDescription())).setVisibility(NotificationCompat.VISIBILITY_PUBLIC).setPriority(NotificationCompat.PRIORITY_MAX).build()", "new android.support.v4.app.NotificationCompat.Builder(context).setSmallIcon(R.drawable.ic_notification).setLargeIcon(android.graphics.BitmapFactory.decodeResource(context.getResources(), R.mipmap.ic_launcher)).setContentTitle(result.getTitle())", "com.artemohanjanyan.nest.io.SearchResult.getDescription()", "com.artemohanjanyan.nest.io.SearchResult.getDescription()", "new android.support.v4.app.NotificationCompat.Builder(context).setSmallIcon(R.drawable.ic_notification).setLargeIcon(android.graphics.BitmapFactory.decodeResource(context.getResources(), R.mipmap.ic_launcher)).setContentTitle(result.getTitle()).setContentText(result.getDescription()).setContentIntent(android.app.PendingIntent.getActivity(context, 0, new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(result.getLink())), 0)).setStyle(new android.support.v4.app.NotificationCompat.BigTextStyle().bigText(result.getDescription())).setVisibility(NotificationCompat.VISIBILITY_PUBLIC)", "com.artemohanjanyan.nest.io.SearchResult.getLink()", "new android.support.v4.app.NotificationCompat.Builder(context).setSmallIcon(R.drawable.ic_notification).setLargeIcon(android.graphics.BitmapFactory.decodeResource(context.getResources(), R.mipmap.ic_launcher)).setContentTitle(result.getTitle()).setContentText(result.getDescription()).setContentIntent(android.app.PendingIntent.getActivity(context, 0, new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(result.getLink())), 0))", "android.net.Uri.parse(result.getLink())", "new android.support.v4.app.NotificationCompat.Builder(context).setSmallIcon(R.drawable.ic_notification).setLargeIcon(android.graphics.BitmapFactory.decodeResource(context.getResources(), R.mipmap.ic_launcher)).setContentTitle(result.getTitle()).setContentText(result.getDescription()).setContentIntent(android.app.PendingIntent.getActivity(context, 0, new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(result.getLink())), 0)).setStyle(new android.support.v4.app.NotificationCompat.BigTextStyle().bigText(result.getDescription()))", "com.artemohanjanyan.nest.io.SearchResult.getTitle()"], "Fixed commit": "253e6cd8cd2ae7050114db667fe699d1ccfd91b5", "Url": "https://api.github.com/repos/artemohanjanyan/nest_caller_yandexer", "Date": "2016-07-24T14:06:08Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((place.getPrefLocation().getCoordinates().length) > 0) { heatmapCoordinates.add(java.lang.String.valueOf(place.getPrefLocation().getLat())); heatmapCoordinates.add(java.lang.String.valueOf(place.getPrefLocation().getLng())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3974/buggy-version/src.main.java.org.dainst.gazetteer.controller.SearchController.java", "BodyUseAPI": ["java.lang.String.valueOf(place.getPrefLocation().getLat())", "java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.String.valueOf(place.getPrefLocation().getLng())", "place.getPrefLocation().getLng()", "org.dainst.gazetteer.domain.Place.getPrefLocation()", "java.util.List<java.lang.String>.add(java.lang.String)", "place.getPrefLocation().getLat()", "org.dainst.gazetteer.domain.Place.getPrefLocation()"], "Fixed commit": "b7055655b12b2f490d9ab6c4c11e1e846267560f", "Url": "https://api.github.com/repos/dainst/gazetteer", "Date": "2015-02-24T12:43:20Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isValidLoc(x, y))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8115/buggy-version/src.ImagePanel.java", "BodyUseAPI": [], "Fixed commit": "eafd8bf71f37fc5c87a91d7d853851e852851035", "Url": "https://api.github.com/repos/thomas1242/Path-Finding", "Date": "2017-05-08T19:27:18Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isValidLoc(x, y))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8115/buggy-version/src.ImagePanel.java", "BodyUseAPI": [], "Fixed commit": "eafd8bf71f37fc5c87a91d7d853851e852851035", "Url": "https://api.github.com/repos/thomas1242/Path-Finding", "Date": "2017-05-08T19:27:18Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isValidLoc(x, y))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8115/buggy-version/src.ImagePanel.java", "BodyUseAPI": [], "Fixed commit": "eafd8bf71f37fc5c87a91d7d853851e852851035", "Url": "https://api.github.com/repos/thomas1242/Path-Finding", "Date": "2017-05-08T19:27:18Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isValidLoc(x, y))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8115/buggy-version/src.ImagePanel.java", "BodyUseAPI": [], "Fixed commit": "eafd8bf71f37fc5c87a91d7d853851e852851035", "Url": "https://api.github.com/repos/thomas1242/Path-Finding", "Date": "2017-05-08T19:27:18Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (keywordsData != null) { initKeywordsTable(keywordsData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8269/buggy-version/src.com.elance.gui.ResultTablePanel.java", "BodyUseAPI": ["com.elance.gui.ResultTablePanel.initKeywordsTable(java.lang.Object[][])"], "Fixed commit": "e09f19e53f9670faf64d8b6244dd62ddfc1748d4", "Url": "https://api.github.com/repos/lopushen/newFreeGit", "Date": "2014-08-30T19:49:27Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (indexLinkedBroker != (-1)) { it.trade.android.sdk.TradeItSDK.getLinkedBrokerManager().getLinkedBrokers().remove(indexLinkedBroker); it.trade.android.sdk.TradeItSDK.getLinkedBrokerManager().getLinkedBrokers().add(indexLinkedBroker, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/819/buggy-version/tradeit-android-sdk.src.main.java.it.trade.android.sdk.model.TradeItLinkedBrokerParcelable.java", "BodyUseAPI": [], "Fixed commit": "663cdf50eef41e0505ce4e73b4158f16da437ee9", "Url": "https://api.github.com/repos/tradingticket/AndroidSDK", "Date": "2017-08-29T15:14:26Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (color == null) { color = defaultColor; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7056/buggy-version/app.src.main.java.com.cle.ambientnotifications.ControlActivity.java", "BodyUseAPI": [], "Fixed commit": "eece8dd679ce2352595ad988408de7604c639fb3", "Url": "https://api.github.com/repos/cle1994/AmbientNotifications", "Date": "2015-01-01T21:35:15Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.fierdecoder.ajaxcrawlsimulator.crawl.connector.PageReader.readPage(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (page.isRedirection()) { fr.fierdecoder.ajaxcrawlsimulator.crawl.page.RedirectionWebPage redirection = page.asRedirection(); fr.fierdecoder.ajaxcrawlsimulator.crawl.NetworkCrawler.LOGGER.info(\"Url {} returned a redirection to {}\", url, redirection.getTargetUrl()); return java.util.Arrays.asList(redirection.getTargetUrl()); }else if (page.isUnreachable()) { fr.fierdecoder.ajaxcrawlsimulator.crawl.NetworkCrawler.LOGGER.info(\"Url {} is unreachable\", url); return java.util.Collections.emptyList(); }else if (page.isBinary()) { fr.fierdecoder.ajaxcrawlsimulator.crawl.NetworkCrawler.LOGGER.info(\"Url {} returned a binary file\"); return java.util.Collections.emptyList(); }else if (page.isText()) { fr.fierdecoder.ajaxcrawlsimulator.crawl.NetworkCrawler.LOGGER.info(\"Url {} returned a text file\"); return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5836/buggy-version/crawler.src.main.java.fr.fierdecoder.ajaxcrawlsimulator.crawl.NetworkCrawler.java", "BodyUseAPI": ["fr.fierdecoder.ajaxcrawlsimulator.crawl.page.WebPage.asRedirection()", "fr.fierdecoder.ajaxcrawlsimulator.crawl.page.WebPage.isText()", "fr.fierdecoder.ajaxcrawlsimulator.crawl.page.WebPage.isBinary()", "fr.fierdecoder.ajaxcrawlsimulator.crawl.page.WebPage.isUnreachable()"], "Fixed commit": "a47e07559472fc7fe9f6773162fa93e6371eecae", "Url": "https://api.github.com/repos/bsautel/ajax-crawl-simulator", "Date": "2014-06-29T16:08:02Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kj.scotlyard.game.model.GameState.getMove(kj.scotlyard.game.model.DetectivePlayer,move.getRoundNumber(),GameState.MoveAccessMode.ROUND_NUMBER)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (m != null) detectiveStationSet.add(m.getStation());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3120/buggy-version/ScotlYard.src.kj.scotlyard.game.util.MrXTracker.java", "BodyUseAPI": ["java.util.Set<kj.scotlyard.game.graph.StationVertex>.add(m.getStation())", "kj.scotlyard.game.model.Move.getStation()"], "Fixed commit": "c4dd39e9ae85bf1149e96d3234f6d27adaeecbed", "Url": "https://api.github.com/repos/jakob190590/ScotlYard", "Date": "2012-05-09T09:48:33Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (status.hasResolution()) { try { status.startResolutionForResult(activity, 100); } catch (android.content.IntentSender e) { mGoogleApiClient.connect(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3411/buggy-version/app.src.main.java.ink.utils.SocialSignIn.java", "BodyUseAPI": ["com.google.android.gms.common.api.Status.startResolutionForResult(android.app.Activity,int)"], "Fixed commit": "cb12949193d94544ff3ada387fbfeedd4a62bb78", "Url": "https://api.github.com/repos/vladimirarevshatyan/Ink", "Date": "2016-08-26T21:00:14Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.bukkit.Bukkit.getServer().getPlayer(name)) != null) { org.bukkit.entity.Player player = org.bukkit.Bukkit.getServer().getPlayer(name); player.teleport(com.tyzoid.jailr.api.JailAPI.getUnJailPoint()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3973/buggy-version/src.main.java.com.tyzoid.jailr.api.JailAPI.java", "BodyUseAPI": ["org.bukkit.Bukkit.getServer().getPlayer(java.lang.String)"], "Fixed commit": "865942be70ce667e5ce908d4ec032df3111d81ed", "Url": "https://api.github.com/repos/UltimateDev/jailr", "Date": "2012-12-09T18:22:52Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mobi.parchment.widget.adapterview.AdapterView.isLayoutRequested()) { mobi.parchment.widget.adapterview.AdapterView.post(mRequestLayout); }else { final mobi.parchment.widget.adapterview.AdapterAnimator.State state = childTouchListener.getState(); switch (state) { case animatingTo : case flinging : case jumpingTo : case snapingTo : mobi.parchment.widget.adapterview.AdapterView.post(mRequestLayout); break; case scrolling : case notMoving : default : break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8915/buggy-version/library.src.main.java.mobi.parchment.widget.adapterview.AdapterView.java", "BodyUseAPI": [], "Fixed commit": "1b08f8fcd8aaa0eb18c330a94c1910fa951a826d", "Url": "https://api.github.com/repos/EmirWeb/parchment", "Date": "2014-03-24T21:36:17Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((reward) == null) || ((reward.getAmount()) == 0)) || ((reward.getType()) == (org.bukkit.Material.AIR))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5590/buggy-version/src.quester.net.citizensnpcs.questers.rewards.ItemReward.java", "BodyUseAPI": [], "Fixed commit": "8719509c2ada8b269c150f146489e0a8c382f326", "Url": "https://api.github.com/repos/CitizensDev/Citizens", "Date": "2011-08-25T09:56:31Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { com.readystatesoftware.systembartint.SystemBarTintManager.SystemBarConfig config = mTintManager.getConfig(); android.widget.FrameLayout.LayoutParams params = ((android.widget.FrameLayout.LayoutParams) (mDrawerLayout.getLayoutParams())); params.topMargin = config.getStatusBarHeight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2331/buggy-version/app.src.main.java.io.bxbxbai.zhuanlan.ui.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "90129b134d1f6de7fcb10d0100aee7871b9ef060", "Url": "https://api.github.com/repos/bxbxbai/ZhuanLan", "Date": "2015-04-20T12:29:46Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lineNum >= (loaded.getTheLines().size())) { loaded.addLine(st); }else { loaded.setLine(lineNum, st); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4972/buggy-version/src.smp.components.general.Utilities.java", "BodyUseAPI": ["smp.components.staff.sequences.StaffSequence.setLine(int,smp.components.staff.sequences.StaffNoteLine)", "smp.components.staff.sequences.StaffSequence.addLine(smp.components.staff.sequences.StaffNoteLine)"], "Fixed commit": "c7e5dfa15f4a71b5a58a622376b156f60c16d363", "Url": "https://api.github.com/repos/DC37/Super-Mario-Paint", "Date": "2016-06-10T03:50:25Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(config.isAbsolute())) { final java.io.File homeDir = new java.io.File(java.lang.System.getProperty(\"user.home\")); config = new java.io.File(homeDir, filename); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1948/buggy-version/net.sourceforge.vrapper.core.src.net.sourceforge.vrapper.vim.DefaultEditorAdaptor.java", "BodyUseAPI": [], "Fixed commit": "1b41e5cc419108319324724ed7a3d3ec1d4d6e11", "Url": "https://api.github.com/repos/vrapper/vrapper", "Date": "2013-08-16T02:30:54Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (textField.isEnabled()) { textField.requestFocusInWindow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4407/buggy-version/src.main.java.org.dungeon.gui.GameWindow.java", "BodyUseAPI": ["javax.swing.JTextField.requestFocusInWindow()"], "Fixed commit": "d3f9e4ed4e03ac5445a4a0e6624d998693c1d621", "Url": "https://api.github.com/repos/bernardosulzbach/dungeon", "Date": "2015-06-07T22:52:16Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.ednovo.gooru.client.gin.AppClientFactory.getCurrentPlaceToken().equals(PlaceTokens.COLLECTION_PLAY)) { this.setStyleName(\"reviewPopup\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/179/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.play.resource.body.ThankYouResourceStarRatings.java", "BodyUseAPI": [], "Fixed commit": "b25710d40e01845879e880e2b091a943f1678a01", "Url": "https://api.github.com/repos/mitraj/Gooru-Web", "Date": "2015-05-12T07:38:47Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(criteria.getValue(\"offset\").toString())", "getSimpleJdbcTemplate().queryForInt(java.lang.String,org.talend.esb.sam.server.ui.CriteriaAdapter)", "java.lang.Integer.parseInt(criteria.getValue(\"limit\").toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((rowCount - offset) < limit) limit = rowCount - offset;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1387/buggy-version/sam.sam-service-common.src.main.java.org.talend.esb.sam.service.SAMProviderImpl.java", "BodyUseAPI": [], "Fixed commit": "cb499b5910ab1bba723f010623c8462f465897bd", "Url": "https://api.github.com/repos/Talend/tesb-rt-se", "Date": "2013-07-15T13:56:21Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["config.bHasPartitionsInput.get().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (type.equals(\"SiteModel\")) { partition = ((beast.core.BEASTObject) (((beast.evolution.likelihood.GenericTreeLikelihood) (partition)).siteModelInput.get())); }else if (type.equals(\"ClockModel\")) { partition = ((beast.core.BEASTObject) (((beast.evolution.likelihood.GenericTreeLikelihood) (partition)).branchRateModelInput.get())); }else if (type.equals(\"Tree\")) { partition = ((beast.core.BEASTObject) (((beast.evolution.likelihood.GenericTreeLikelihood) (partition)).treeInput.get())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8541/buggy-version/src.beast.app.beauti.BeautiPanel.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "e229a687484a2f76ac293259289bbd7b951952dc", "Url": "https://api.github.com/repos/CompEvol/beast2", "Date": "2014-02-24T05:17:19Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((sPartition.length()) > 1) && ((sPartition.charAt(1)) == ':')) { sPartition = sPartition.substring(2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8541/buggy-version/src.beast.app.beauti.BeautiPanel.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "e229a687484a2f76ac293259289bbd7b951952dc", "Url": "https://api.github.com/repos/CompEvol/beast2", "Date": "2014-02-24T05:17:19Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((etud.getListeDiplomes().get(positionDip).getListeAnnees().get(positionAnn).getListeUE().get(s).getMoyenne()) != (-1.0)) { if (etud.getListeDiplomes().get(positionDip).getListeAnnees().get(positionAnn).getListeUE().get(s).isValid(ann.getListeRegles())) { items.add(new org.gl.jmd.view.list.Footer(\"L'UE est valid\ufffde.\")); }else if ((etud.getListeDiplomes().get(positionDip).getListeAnnees().get(positionAnn).getListeUE().get(s).getMoyenne()) != (-1.0)) { items.add(new org.gl.jmd.view.list.Footer(\"L'UE n'est pas valid\ufffde.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5531/buggy-version/src.org.gl.jmd.view.etudiant.listing.ListeUEE.java", "BodyUseAPI": ["etud.getListeDiplomes().get(positionDip).getListeAnnees()", "etud.getListeDiplomes().get(positionDip).getListeAnnees()", "etud.getListeDiplomes().get(positionDip).getListeAnnees().get(positionAnn).getListeUE().get(s).isValid(ann.getListeRegles())", "org.gl.jmd.view.etudiant.listing.Etudiant.getListeDiplomes()", "etud.getListeDiplomes().get(positionDip).getListeAnnees().get(positionAnn).getListeUE().get(int)", "etud.getListeDiplomes().get(positionDip).getListeAnnees().get(positionAnn).getListeUE()", "etud.getListeDiplomes().get(int)", "etud.getListeDiplomes().get(int)", "etud.getListeDiplomes().get(positionDip).getListeAnnees().get(int)", "etud.getListeDiplomes().get(positionDip).getListeAnnees().get(positionAnn).getListeUE()", "etud.getListeDiplomes().get(positionDip).getListeAnnees().get(positionAnn).getListeUE().get(int)", "org.gl.jmd.view.etudiant.listing.Etudiant.getListeDiplomes()", "etud.getListeDiplomes().get(positionDip).getListeAnnees().get(positionAnn).getListeUE().get(s).getMoyenne()", "etud.getListeDiplomes().get(positionDip).getListeAnnees().get(int)"], "Fixed commit": "3afaa41725f5780cd84c8d9314366d48cff9178b", "Url": "https://api.github.com/repos/jordiC91/JMD-Android", "Date": "2014-11-24T23:26:20Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numOfRobis == 1) { for (main.Robot robot : robots) { if (!(\"Robi\".equals(robot.getClass().getSimpleName()))) { robot.killRobot(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3759/buggy-version/Phobos.src.main.SafeZone.java", "BodyUseAPI": [], "Fixed commit": "b8c6c29f12707cabbfbd9182975a91b99c08f36f", "Url": "https://api.github.com/repos/pety0711/Phoebe-CodeIt2Night", "Date": "2015-04-22T00:04:51Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isFirstExchange)) && (!(java.lang.Boolean.TRUE.toString().equals(controller.getModel().getUserPreference(MultiBitModel.TICKER_SHOW_SECOND_ROW))))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7232/buggy-version/src.main.java.org.multibit.exchange.TickerTimerTask.java", "BodyUseAPI": [], "Fixed commit": "dd2d22494160a9e87770a3efd50d69a9a943557b", "Url": "https://api.github.com/repos/jim618/multibit", "Date": "2013-03-04T20:36:16Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i < 10) hourOfDayTxt.setText((\"0\" + (java.lang.String.valueOf(i)))); else hourOfDayTxt.setText(java.lang.String.valueOf(i));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/9088/buggy-version/app.src.main.java.dk.siteimprove.internship.atanasiu.andrei.analyticapplication.Visits.VisitsFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "java.lang.String.valueOf(int)", "android.widget.TextView.setText(java.lang.String)", "java.lang.String.valueOf(int)"], "Fixed commit": "b6b6da329dca9143e21199b1b5f52fb235a06e51", "Url": "https://api.github.com/repos/AndreiAta/AnalyticApplication", "Date": "2016-08-11T19:39:07Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(dk.siteimprove.internship.atanasiu.andrei.analyticapplication.MainActivity.API_EMAIL.equals(\"\"))) && (!(dk.siteimprove.internship.atanasiu.andrei.analyticapplication.MainActivity.API_KEY.equals(\"\")))) { writeToFile(dk.siteimprove.internship.atanasiu.andrei.analyticapplication.MainActivity.totalString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/9088/buggy-version/app.src.main.java.dk.siteimprove.internship.atanasiu.andrei.analyticapplication.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b6b6da329dca9143e21199b1b5f52fb235a06e51", "Url": "https://api.github.com/repos/AndreiAta/AnalyticApplication", "Date": "2016-08-11T19:39:07Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i < 10) hourOfDayTxt.setText((\"0\" + (java.lang.String.valueOf(i)))); else hourOfDayTxt.setText(java.lang.String.valueOf(i));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/9088/buggy-version/app.src.main.java.dk.siteimprove.internship.atanasiu.andrei.analyticapplication.Page_Views.PageViewsFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "java.lang.String.valueOf(int)", "java.lang.String.valueOf(int)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "b6b6da329dca9143e21199b1b5f52fb235a06e51", "Url": "https://api.github.com/repos/AndreiAta/AnalyticApplication", "Date": "2016-08-11T19:39:07Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (matcher.group(org.jboss.narayana.txvis.logparsing.handlers.LOG_CLASS).equals(\"com.arjuna.ats.jtax\")) service.enlistResourceManagerByThreadID(matcher.group(org.jboss.narayana.txvis.logparsing.handlers.THREAD_ID), matcher.group(org.jboss.narayana.txvis.logparsing.handlers.RM_JNDI_NAME), matcher.group(org.jboss.narayana.txvis.logparsing.handlers.RM_PRODUCT_NAME), matcher.group(org.jboss.narayana.txvis.logparsing.handlers.RM_PRODUCT_VERSION), parseTimestamp(matcher.group(org.jboss.narayana.txvis.logparsing.handlers.TIMESTAMP)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4175/buggy-version/txvis-core.src.main.java.org.jboss.narayana.txvis.logparsing.handlers.TransactionImpleHandler.java", "BodyUseAPI": ["java.util.regex.Matcher.group(org.jboss.narayana.txvis.logparsing.handlers.RM_PRODUCT_NAME)", "java.util.regex.Matcher.group(org.jboss.narayana.txvis.logparsing.handlers.THREAD_ID)", "java.util.regex.Matcher.group(org.jboss.narayana.txvis.logparsing.handlers.RM_PRODUCT_VERSION)", "java.util.regex.Matcher.group(org.jboss.narayana.txvis.logparsing.handlers.TIMESTAMP)", "org.jboss.narayana.txvis.logparsing.handlers.TransactionImpleHandler.parseTimestamp(java.lang.String)", "java.util.regex.Matcher.group(org.jboss.narayana.txvis.logparsing.handlers.RM_JNDI_NAME)", "org.jboss.narayana.txvis.logparsing.handlers.TransactionImpleHandler.enlistResourceManagerByThreadID(java.lang.String,java.lang.String,java.lang.String,java.lang.String,parseTimestamp(matcher.group(org.jboss.narayana.txvis.logparsing.handlers.TIMESTAMP)))"], "Fixed commit": "f61a8342bde06b5a933ae75fbf05d099ebf55212", "Url": "https://api.github.com/repos/alexcreasy/txvis", "Date": "2013-06-23T19:33:07Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((n.messageText) != null) && ((n.titleText) != null)) { n.finalTitle = n.titleText.toString(); n.finalDesc = n.messageText.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2986/buggy-version/app.src.main.java.com.brucetoo.expandrecyclerview.intercept.Extractor.java", "BodyUseAPI": ["n.titleText.toString()"], "Fixed commit": "00eccbee22dcc89c4453b9e2df4ed581477fb0e4", "Url": "https://api.github.com/repos/brucetoo/ExpandRecyclerView", "Date": "2017-06-27T13:04:55Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(android.text.TextUtils.isEmpty(notification.finalTitle))) && (!(android.text.TextUtils.isEmpty(notification.finalDesc)))) { com.brucetoo.expandrecyclerview.intercept.NotificationManager.sNotification.add(notification); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2986/buggy-version/app.src.main.java.com.brucetoo.expandrecyclerview.intercept.NotificationManager.java", "BodyUseAPI": ["java.util.ArrayList<com.brucetoo.expandrecyclerview.intercept.NotificationBean>.add(com.brucetoo.expandrecyclerview.intercept.NotificationBean)"], "Fixed commit": "00eccbee22dcc89c4453b9e2df4ed581477fb0e4", "Url": "https://api.github.com/repos/brucetoo/ExpandRecyclerView", "Date": "2017-06-27T13:04:55Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.grarak.kerneladiutor.utils.kernel.LMK.getMinFrees()) != null) com.grarak.kerneladiutor.ITEMS.add(new com.grarak.kerneladiutor.elements.ListAdapter.Item(getString(R.string.low_memory_killer), new com.grarak.kerneladiutor.fragments.kernel.LMKFragment()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2237/buggy-version/app.src.main.java.com.grarak.kerneladiutor.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5ac8937adbe8b5c56499f3dde06fe27856a00de9", "Url": "https://api.github.com/repos/Grarak/KernelAdiutor", "Date": "2015-04-07T16:35:06Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mColorCalibrationCard) != null) for (com.grarak.kerneladiutor.elements.SeekBarCardView.DSeekBarCardView seekBarCardView : mColorCalibrationCard) if (dSeekBarCardView == seekBarCardView) { if ((mColorCalibrationMinCard) != null) if (position < (mColorCalibrationMinCard.getProgress())) mColorCalibrationMinCard.setProgress(position); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2237/buggy-version/app.src.main.java.com.grarak.kerneladiutor.fragments.kernel.ScreenFragment.java", "BodyUseAPI": [], "Fixed commit": "5ac8937adbe8b5c56499f3dde06fe27856a00de9", "Url": "https://api.github.com/repos/Grarak/KernelAdiutor", "Date": "2015-04-07T16:35:06Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((world.isAirBlock(x, y, z)) || (net.minecraft.block.Block.blocksList[blockID].isBlockReplaceable(world, x, y, z))) { world.setBlock(x, y, z, Block.torchWood.blockID, getMetaForTorch(world, x, y, z, side), 2); net.minecraft.block.Block.blocksList[Block.torchWood.blockID].onBlockAdded(world, x, y, z); andrew.powersuits.common.AddonUtils.setTorchLevel(itemStack, ((andrew.powersuits.common.AddonUtils.getTorchLevel(itemStack)) - 1)); net.machinemuse.utils.ElectricItemUtils.drainPlayerEnergy(player, net.machinemuse.api.ModuleManager.computeModularProperty(itemStack, andrew.powersuits.modules.TorchPlacerModule.TORCH_ENERGY_CONSUMPTION)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/402/buggy-version/src.minecraft.andrew.powersuits.modules.TorchPlacerModule.java", "BodyUseAPI": ["net.minecraft.block.Block.blocksList[Block.torchWood.blockID].onBlockAdded(net.minecraft.world.World,int,int,int)", "andrew.powersuits.modules.TorchPlacerModule.getMetaForTorch(net.minecraft.world.World,int,int,int,int)", "net.minecraft.world.World.setBlock(int,int,int,Block.torchWood.blockID,int,int)"], "Fixed commit": "f818ec9c9f4c983be6820fec2bb9719ed0b9ce54", "Url": "https://api.github.com/repos/Andrew2448/Andrew2448PowersuitAddons", "Date": "2013-05-04T04:26:49Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.equals(\"\")) { playerName.setFocus(true); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3291/buggy-version/EliteEngine.src.main.Hauptmenue.java", "BodyUseAPI": [], "Fixed commit": "788adda154d923816e74f513a4bd5fe74fab2404", "Url": "https://api.github.com/repos/Silverjust/Elite-Engine", "Date": "2015-06-03T11:50:36Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((eventFactoryClassName == null) || (eventFactoryClassName.isEmpty())) { org.irods.jargon.dataone.configuration.PluginDiscoveryService.log.error(\"cannot find appropriate plugin class name config in properties\"); throw new org.irods.jargon.dataone.configuration.PluginNotFoundException(\"cannot find event factory plugin class name in properties\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1431/buggy-version/dataone-node.src.main.java.org.irods.jargon.dataone.configuration.PluginDiscoveryService.java", "BodyUseAPI": [], "Fixed commit": "24573e95c73751651a9a50cab23f5708431f5b8d", "Url": "https://api.github.com/repos/slr71/dfc-dataone", "Date": "2017-06-21T15:44:16Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs((rank - (this.rank)))) > 1) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4993/buggy-version/src.Pawn.java", "BodyUseAPI": [], "Fixed commit": "63e022853ce948522d373fc406cf2a3a7a0e3286", "Url": "https://api.github.com/repos/ArtemTitoulenko/chess", "Date": "2013-03-26T01:16:27Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diff == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7258/buggy-version/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.cache.OWOWCache.java", "BodyUseAPI": [], "Fixed commit": "e2e033d3458acb95dd513bb17337fe2bb0665649", "Url": "https://api.github.com/repos/kowalot/orientdb", "Date": "2014-10-07T16:47:12Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i != 10) && (i != 13)) { com.lwink.javashell.terminal.TermInfo.known.put(java.lang.String.valueOf(((char) (i))), com.lwink.javashell.terminal.api.KeyPress.builder().ch(((char) (i + 96))).type(Type.CONTROL).ctrl(true).build()); com.lwink.javashell.terminal.TermInfo.known.put(java.lang.String.valueOf(((char) (i + 128))), com.lwink.javashell.terminal.api.KeyPress.builder().ch(((char) (i + 96))).type(Type.NORMAL).shift(true).ctrl(true).build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/449/buggy-version/com.lwink.javashell.src.com.lwink.javashell.terminal.TermInfo.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.lwink.javashell.terminal.api.KeyPress>.put(java.lang.String,com.lwink.javashell.terminal.api.KeyPress.builder().ch(((char) (i + 96))).type(Type.CONTROL).ctrl(true).build())", "com.lwink.javashell.terminal.api.KeyPress.builder().ch(((char) (i + 96))).type(Type.CONTROL).ctrl(true).build()", "com.lwink.javashell.terminal.api.KeyPress.builder().ch(((char) (i + 96))).type(Type.NORMAL)", "java.lang.String.valueOf(int)", "com.lwink.javashell.terminal.api.KeyPress.builder().ch(((char) (i + 96))).type(Type.NORMAL).shift(true).ctrl(boolean)", "com.lwink.javashell.terminal.api.KeyPress.builder().ch(int)", "com.lwink.javashell.terminal.api.KeyPress.builder().ch(int)", "java.util.Map<java.lang.String, com.lwink.javashell.terminal.api.KeyPress>.put(java.lang.String,com.lwink.javashell.terminal.api.KeyPress.builder().ch(((char) (i + 96))).type(Type.NORMAL).shift(true).ctrl(true).build())", "com.lwink.javashell.terminal.api.KeyPress.builder().ch(((char) (i + 96))).type(Type.NORMAL).shift(true).ctrl(true).build()", "com.lwink.javashell.terminal.api.KeyPress.builder().ch(((char) (i + 96))).type(Type.CONTROL)", "com.lwink.javashell.terminal.api.KeyPress.builder().ch(((char) (i + 96))).type(Type.CONTROL).ctrl(boolean)", "com.lwink.javashell.terminal.api.KeyPress.builder().ch(((char) (i + 96))).type(Type.NORMAL).shift(boolean)"], "Fixed commit": "922fedba237495736f07167196d4cdbe23032576", "Url": "https://api.github.com/repos/lukewink/javashell", "Date": "2017-08-21T06:51:15Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(file.exists())) { log.debug(java.lang.String.format(\"Storing page [%s] to path [%s]\", pageName, pagePath)); generateFile(pageContext, ((getCodegenTemplatePath()) + \"DerivedPageTemplate.vm\"), pagePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5060/buggy-version/src.main.java.com.tastymonster.automation.codegen.PageGenerator.java", "BodyUseAPI": [], "Fixed commit": "2051270ed35f8fd5003d07dc3246d88b0a8d9df0", "Url": "https://api.github.com/repos/mmerrell/tastymonster", "Date": "2012-07-25T14:47:53Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gameIsOver)) { paused = false; }else if ((gameIsOver) && ((gameOverTimer) <= 0)) { gameIsOver = false; paused = false; playing = true; setupGame(screenX, screenY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8700/buggy-version/app.src.main.java.com.example.bhurt7771.shieldknight.GameView.java", "BodyUseAPI": [], "Fixed commit": "3e94b18f27beb36f063c70e8eff73f798dd6702e", "Url": "https://api.github.com/repos/be-hurt/ShieldKnight", "Date": "2017-06-10T16:04:14Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mContext.getContentResolver().query(InfoProvider.CONTENT_URI_APP_DETAIL,<nulltype>,java.lang.String,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (cursor != null) { cursor.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2107/buggy-version/src.com.android.settings.net.UidDetailProvider.java", "BodyUseAPI": ["android.database.Cursor.close()"], "Fixed commit": "a9158908171e1a571f6596d738f52944e5c588b7", "Url": "https://api.github.com/repos/jtbuaa/iReaderHome", "Date": "2015-12-08T13:50:54Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mWeightEditText.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(android.text.TextUtils.isEmpty(weightString))) { weight = java.lang.Integer.parseInt(weightString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2564/buggy-version/app.src.main.java.com.example.android.pets.activity.EditorActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "44f1c7cf1e75f725606a5aef4aeaf91d05e6ed80", "Url": "https://api.github.com/repos/VolodymyrH/Pets", "Date": "2017-03-15T08:41:41Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mNameEditText.getText().toString().trim()", "mWeightEditText.getText().toString().trim()", "mBreedEditText.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((((mCurrentPetUri) == null) && (android.text.TextUtils.isEmpty(nameString))) && (android.text.TextUtils.isEmpty(breedString))) && (android.text.TextUtils.isEmpty(weightString))) && ((mGender) == (com.example.android.pets.data.PetContract.PetEntry.GENDER_UNKNOWN))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2564/buggy-version/app.src.main.java.com.example.android.pets.activity.EditorActivity.java", "BodyUseAPI": [], "Fixed commit": "44f1c7cf1e75f725606a5aef4aeaf91d05e6ed80", "Url": "https://api.github.com/repos/VolodymyrH/Pets", "Date": "2017-03-15T08:41:41Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (date != null) { cal = java.util.Calendar.getInstance(); cal.setTime(org.apache.commons.lang.time.DateUtils.truncate(date, java.util.Calendar.SECOND)); }else { cal = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6445/buggy-version/src.Parser.DateParser.java", "BodyUseAPI": ["java.util.Calendar.setTime(org.apache.commons.lang.time.DateUtils.truncate(date, java.util.Calendar.SECOND))", "org.apache.commons.lang.time.DateUtils.truncate(java.util.Date,int)"], "Fixed commit": "9c8b67378280523b187b8cebf270670981b849ca", "Url": "https://api.github.com/repos/cs2103jan2016-W13-1J/main", "Date": "2016-04-05T19:35:45Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ohmage.query.impl.AuthenticationQuery.instance.getJdbcTemplate().queryForObject(java.lang.String,java.lang.Object[],java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (actualPassword.equals(KeycloakUser.KEYCLOAK_USER_PASSWORD)) { userRequest.setFailed(ErrorCode.AUTHENTICATION_FAILED, \"Unknown user or incorrect password.\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5274/buggy-version/src.org.ohmage.query.impl.AuthenticationQuery.java", "BodyUseAPI": [], "Fixed commit": "f062fab3ab318a58017a06d7ab28b7d91926cce7", "Url": "https://api.github.com/repos/ohmage/server", "Date": "2016-02-12T18:13:47Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.esri.ges.core.geoevent.FieldDefinition.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (attributeName.equals(\"type\")) { if (value.equals(\"null\")) { value = definition.getName(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/9008/buggy-version/solutions-geoevent.adapters.geomessage-adapter.src.main.java.com.esri.geoevent.solutions.adapter.geomessage.DefenseOutboundAdapter.java", "BodyUseAPI": [], "Fixed commit": "25e4bb1d0c73be97a46c5660ec4388efdf338589", "Url": "https://api.github.com/repos/Esri/solutions-geoevent-java", "Date": "2015-04-30T15:46:57Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((value == null) || (value.equals(\"null\"))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/9008/buggy-version/solutions-geoevent.adapters.geomessage-adapter.src.main.java.com.esri.geoevent.solutions.adapter.geomessage.DefenseOutboundAdapter.java", "BodyUseAPI": [], "Fixed commit": "25e4bb1d0c73be97a46c5660ec4388efdf338589", "Url": "https://api.github.com/repos/Esri/solutions-geoevent-java", "Date": "2015-04-30T15:46:57Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numBytesToProcess <= 0) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/592/buggy-version/alice.src.main.java.com.rockaport.alice.Alice.java", "BodyUseAPI": [], "Fixed commit": "5caf5cf37fce108760b52be1302a294b5a1b5a2f", "Url": "https://api.github.com/repos/rockaport/alice", "Date": "2017-02-12T21:52:10Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((randomAccessFile.length()) - (mac.getMacLength())) <= 0) { throw new java.io.IOException(\"File oes not contain sufficient data for decryption\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/592/buggy-version/alice.src.main.java.com.rockaport.alice.Alice.java", "BodyUseAPI": [], "Fixed commit": "5caf5cf37fce108760b52be1302a294b5a1b5a2f", "Url": "https://api.github.com/repos/rockaport/alice", "Date": "2017-02-12T21:52:10Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (listQuestions.isEmpty()) { listQuestions = dbQuestions.getAllBySubject(subject.getCatId()); mAdapter.notifyDataSetChanged(); }else { mTvMore.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6453/buggy-version/corelibrary.src.main.java.com.corelibrary.fragments.QuestionFragment.java", "BodyUseAPI": [], "Fixed commit": "684cc8cec88de0aeea79a7c535ff37c9e25298a4", "Url": "https://api.github.com/repos/kamalverma/SSC-UPSC", "Date": "2017-03-03T12:33:57Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((strings == null) || ((strings.length) == 0)) { throw new java.lang.IllegalArgumentException((\"Null or empty argument: \" + strings)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/4380/buggy-version/conversions.src.main.java.wdsr.exercise1.conversions.ArrayConverter.java", "BodyUseAPI": [], "Fixed commit": "b3cf1da9598e84968d160aa0e27d2f1916d1688b", "Url": "https://api.github.com/repos/bioly1994/exercise1d", "Date": "2017-06-15T09:39:27Z"},
{"Line": "=>650", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (o != null) result.setActualType(o.getClass());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6550/buggy-version/PlatformPlugins.MasonPlugin-16.ai.aitia.meme.paramsweep.platform.mason.impl.MasonModelInformation.java", "BodyUseAPI": ["ai.aitia.meme.paramsweep.batch.param.SubmodelInfo<java.lang.Object>.setActualType(java.lang.Class<? extends java.lang.Object>)", "java.lang.Object.getClass()"], "Fixed commit": "17b5abed2f816ac7a0ecd89e4841f2cc8adcea1b", "Url": "https://api.github.com/repos/tamasmahr/MEME", "Date": "2014-04-25T09:57:22Z"},
{"Line": "=>1388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Player.getUniqueId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((com.wasteofplastic.askyblock.util.VaultHelper.checkPerm(player, ((com.wasteofplastic.askyblock.Settings.PERMPREFIX) + \"team.chat\"))) && (plugin.getPlayers().inTeam(playerUUID))) { player.sendMessage(((((((plugin.myLocale(player.getUniqueId()).helpColor) + \"/\") + label) + \" teamchat: \") + (org.bukkit.ChatColor.WHITE)) + (plugin.myLocale(player.getUniqueId()).teamChatHelp))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/718/buggy-version/src.com.wasteofplastic.askyblock.commands.IslandCmd.java", "BodyUseAPI": ["com.wasteofplastic.askyblock.ASkyBlock.myLocale(player.getUniqueId())", "org.bukkit.entity.Player.getUniqueId()", "org.bukkit.entity.Player.sendMessage(((((((plugin.myLocale(player.getUniqueId()).helpColor) + \"/\") + label) + \" teamchat: \") + (org.bukkit.ChatColor.WHITE)) + (plugin.myLocale(player.getUniqueId()).teamChatHelp)))", "com.wasteofplastic.askyblock.ASkyBlock.myLocale(player.getUniqueId())", "org.bukkit.entity.Player.getUniqueId()"], "Fixed commit": "07c17eac82c3d34b3f16cf3b9e64db2ea13a33f6", "Url": "https://api.github.com/repos/tastybento/askyblock", "Date": "2015-05-24T04:06:34Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((((((((((!(line.startsWith(\"PING\"))) && (!(line.startsWith(\":Q!\")))) && (!(line.contains(\"NOTICE\")))) && (!(line.contains(\"372\")))) && (!(line.contains(\"376\")))) && (!(line.contains(\"366\")))) && (!(line.contains(\"312\")))) && (!(line.contains(\"313\")))) && (!(line.contains(\"318\")))) && (!(line.contains(\"317\")))) && (!(line.contains(\"319\")))) || (line.contains(\"PRIVMSG\"))) { java.lang.System.out.println(line); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6932/buggy-version/src.botMain.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "5fc2fb4a2355735152b747640a503ff3ed24d2b9", "Url": "https://api.github.com/repos/DemonSkye/IrcBot", "Date": "2015-02-19T06:12:23Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((paint.getColor()) == 0) { paint.setColor(Color.WHITE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/18/buggy-version/core.src.main.java.com.bootstrap.widget.CircularImageView.java", "BodyUseAPI": ["android.graphics.Paint.setColor(Color.WHITE)"], "Fixed commit": "ac92e9f6649ca4aba519deacf794f1c9acc08835", "Url": "https://api.github.com/repos/wearemakery/droid-bootstrap", "Date": "2015-03-17T09:34:57Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getLockCollection().count()) > 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6347/buggy-version/migramongo-core.src.main.java.com.rinoto.migramongo.dao.MongoLockService.java", "BodyUseAPI": [], "Fixed commit": "e6cb75cff0b0e11063a04c3cd67cdf128f058fcd", "Url": "https://api.github.com/repos/rinoto/migramongo", "Date": "2016-08-24T07:10:42Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (beginIndex == (-1)) { beginIndex = fileName.indexOf(\"com.hazelcast\"); if (props.isDefaultModuleSet()) { printRed(\"Filename doesn't contain com/hazelcast or %s: %s\", props.getDefaultModule(), fileName); }else { printRed(\"Filename doesn't contain com/hazelcast: %s\", fileName); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5821/buggy-version/src.main.java.com.hazelcast.qasonar.codecoverage.CodeCoverageReader.java", "BodyUseAPI": [], "Fixed commit": "430927a533d97e5b5fd27fdea78a8882b5c30b19", "Url": "https://api.github.com/repos/hazelcast/hazelcast-qa", "Date": "2016-05-31T13:27:47Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.out) != null) { this.out.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2176/buggy-version/fileformat.src.main.java.org.zuinnote.hadoop.office.format.mapreduce.AbstractSpreadSheetDocumentRecordWriter.java", "BodyUseAPI": [], "Fixed commit": "da3e1ee9d431b4ecc4419ebd9bfbee0b0c9ad794", "Url": "https://api.github.com/repos/ZuInnoTe/hadoopoffice", "Date": "2017-03-18T21:47:29Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.appledash.saneeconomy.utils.PlayerUtils.tryGetFromUUID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((player != null) && (player.hasPlayedBefore())) { return player; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5692/buggy-version/SaneEconomyCore.src.main.java.org.appledash.saneeconomy.utils.PlayerUtils.java", "BodyUseAPI": [], "Fixed commit": "c7065ea9fa786de0b705cb14db7d1c51c94c938b", "Url": "https://api.github.com/repos/AppleDash/SaneEconomy", "Date": "2016-10-01T00:25:11Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mainMenu.musicOn) gameGui.gameMusic.closeClip();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/9255/buggy-version/Mastermind.src.we.software.mastermind.ClientListener.java", "BodyUseAPI": [], "Fixed commit": "6d77bb0ab67542065dc0abba368564f92bb5d060", "Url": "https://api.github.com/repos/V4570/mastermind-we", "Date": "2017-06-12T14:16:12Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pt.ist.fenixframework.pstm.AbstractDomainObject.fromExternalId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((getProcess(request).getCandidacy().getSecondCycleIndividualCandidacySeriesGradeForDegree(degreeCurricularPlan.getDegree())) != null) { request.setAttribute(\"seriesGrade\", getProcess(request).getCandidacy().getSecondCycleIndividualCandidacySeriesGradeForDegree(degreeCurricularPlan.getDegree())); }else { request.setAttribute(\"seriesGrade\", getProcess(request).getCandidacy().getSecondCycleIndividualCandidacySeriesGrade()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/9140/buggy-version/src.main.java.net.sourceforge.fenixedu.presentationTier.Action.coordinator.candidacy.secondCycle.SecondCycleIndividualCandidacyProcessDA.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,getProcess(request).getCandidacy().getSecondCycleIndividualCandidacySeriesGradeForDegree(degreeCurricularPlan.getDegree()))", "net.sourceforge.fenixedu.presentationTier.Action.coordinator.candidacy.secondCycle.SecondCycleIndividualCandidacyProcessDA.getProcess(javax.servlet.http.HttpServletRequest)", "net.sourceforge.fenixedu.presentationTier.Action.coordinator.candidacy.secondCycle.SecondCycleIndividualCandidacyProcessDA.getProcess(javax.servlet.http.HttpServletRequest)", "getProcess(request).getCandidacy().getSecondCycleIndividualCandidacySeriesGradeForDegree(degreeCurricularPlan.getDegree())", "net.sourceforge.fenixedu.domain.DegreeCurricularPlan.getDegree()", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,getProcess(request).getCandidacy().getSecondCycleIndividualCandidacySeriesGrade())", "getProcess(request).getCandidacy()", "getProcess(request).getCandidacy()", "getProcess(request).getCandidacy().getSecondCycleIndividualCandidacySeriesGrade()"], "Fixed commit": "9b017efe80cbdd85f6aee664c901969d4618cc01", "Url": "https://api.github.com/repos/ist-dsi/fenix", "Date": "2013-08-21T13:48:38Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (name.startsWith(com.fsck.k9.mail.Flag.USER_PREFIX)) return com.fsck.k9.mail.Flag.CreateFlag(name.substring(com.fsck.k9.mail.Flag.USER_PREFIX.length())); else return com.fsck.k9.mail.Flag.CreateFlag(name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8382/buggy-version/src.com.fsck.k9.mail.Flag.java", "BodyUseAPI": ["com.fsck.k9.mail.Flag.CreateFlag(java.lang.String)", "java.lang.String.substring(int)", "com.fsck.k9.mail.Flag.CreateFlag(java.lang.String)", "java.lang.String.length()"], "Fixed commit": "7a509316c2e732c33f99d0cac15b6bed42736d0b", "Url": "https://api.github.com/repos/dzan/k-9", "Date": "2012-04-30T14:21:34Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(pathOPF.contains(\"/\"))) pathOPF = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6963/buggy-version/workspaceeclipse.EPUB3Reader.src.it.angrydroids.epub3reader.EpubManipulator.java", "BodyUseAPI": [], "Fixed commit": "6925d5e1086f232047f23f36323b92f136803788", "Url": "https://api.github.com/repos/pettarin/epub3reader", "Date": "2014-01-30T16:41:44Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(dayofweek.equals(\"*\"))) || (!(dayofweek.equals(\"0\")))) { dayofmonth = \"?\"; }else dayofmonth = \"*\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8274/buggy-version/Quartzexample.src.main.java.urlDependency.java", "BodyUseAPI": [], "Fixed commit": "275c7523a726974670359f173518dcba75b7772e", "Url": "https://api.github.com/repos/Giorgio-Marini/SII-project", "Date": "2016-09-14T08:19:13Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pathInfo.endsWith(\"/\")) { info.resource = \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5203/buggy-version/common.util.src.main.java.io.apiman.common.util.ApimanPathUtils.java", "BodyUseAPI": [], "Fixed commit": "5d8c60a520e78d7bd8bd2465e99a435237a9e76d", "Url": "https://api.github.com/repos/apiman/apiman", "Date": "2017-01-23T20:24:47Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.sshd.common.PtyMode.fromInt(byte)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (mode != null) getEnvironment().getPtyModes().put(mode, val);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7362/buggy-version/sshd-core.src.main.java.org.apache.sshd.server.channel.ChannelSession.java", "BodyUseAPI": ["java.util.Map<org.apache.sshd.common.PtyMode, java.lang.Integer>.put(org.apache.sshd.common.PtyMode,int)"], "Fixed commit": "58ffee9f3538c1dbec383fba4ea47b5c21ebdf12", "Url": "https://api.github.com/repos/jazzm0/apache-sshd-android", "Date": "2017-01-22T11:48:37Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(jarPath)) { jarPath = org.confucius.commons.lang.net.URLUtil.decode(jarPath); archiveFile = new java.io.File(jarPath); archiveFile = (archiveFile.exists()) ? archiveFile : null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/5226/buggy-version/confucius-commons-lang.src.main.java.org.confucius.commons.lang.net.URLUtil.java", "BodyUseAPI": ["org.confucius.commons.lang.net.URLUtil.decode(java.lang.String)"], "Fixed commit": "15f333e6b0d741c572786e2367494bd94ad4f00a", "Url": "https://api.github.com/repos/mercyblitz/confucius-commons", "Date": "2016-04-07T08:59:54Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ru.ocelotjungle.dexdonate.DatabaseManager.instance) == null) ru.ocelotjungle.dexdonate.DatabaseManager.instance = new ru.ocelotjungle.dexdonate.DatabaseManager();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3334/buggy-version/src.main.java.ru.ocelotjungle.dexdonate.DatabaseManager.java", "BodyUseAPI": [], "Fixed commit": "533f7ba52448647ddd9f202cfc53be02f169a1fa", "Url": "https://api.github.com/repos/MelonCode/DEXDonate", "Date": "2017-12-25T22:25:43Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (previousWildcard) { builder.append(\"[^/]*\"); previousWildcard = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6059/buggy-version/src.main.java.com.cloudbees.jenkins.plugins.filter.pullrequest.PullRequestTriggerFilter.java", "BodyUseAPI": [], "Fixed commit": "3ba99b3121af4d9800bf654a3d280dab1f6901fb", "Url": "https://api.github.com/repos/douglasmiller/bitbucket-plugin", "Date": "2016-06-19T03:06:21Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((taskModel.getStageID()) != 0) && ((taskModel.getStageID()) != (stageModel.getID()))) { edu.wpi.cs.wpisuitetng.modules.taskmanager.model.StageModel originalStage = workflowModel.getStageModelByID(taskModel.getStageID()); originalStage.removeTask(taskModel); edu.wpi.cs.wpisuitetng.modules.taskmanager.controller.stage.StageController.sendUpdateRequest(originalStage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/1595/buggy-version/TaskManager.src.main.java.edu.wpi.cs.wpisuitetng.modules.taskmanager.view.tab.NewTaskTab.java", "BodyUseAPI": ["edu.wpi.cs.wpisuitetng.modules.taskmanager.model.StageModel.removeTask(edu.wpi.cs.wpisuitetng.modules.taskmanager.model.task.TaskModel)", "edu.wpi.cs.wpisuitetng.modules.taskmanager.model.WorkflowModel.getStageModelByID(taskModel.getStageID())", "edu.wpi.cs.wpisuitetng.modules.taskmanager.model.task.TaskModel.getStageID()"], "Fixed commit": "e7d07942536ae29539e24aabb442a99f01f42569", "Url": "https://api.github.com/repos/dcpounds/wpi-suite", "Date": "2014-12-02T23:57:29Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(routingHelper.isFollowingMode())) { settings.PREV_APPLICATION_MODE.set(settings.APPLICATION_MODE.get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3443/buggy-version/OsmAnd.src.net.osmand.plus.activities.MapActivityActions.java", "BodyUseAPI": [], "Fixed commit": "fb81616a16664fe95e88faacaf54c05b0b92b6b0", "Url": "https://api.github.com/repos/npalix/Osmand", "Date": "2012-09-07T16:37:05Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(routingHelper.isFollowingMode())) { settings.PREV_APPLICATION_MODE.set(settings.APPLICATION_MODE.get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3443/buggy-version/OsmAnd.src.net.osmand.plus.activities.MapActivityActions.java", "BodyUseAPI": [], "Fixed commit": "fb81616a16664fe95e88faacaf54c05b0b92b6b0", "Url": "https://api.github.com/repos/npalix/Osmand", "Date": "2012-09-07T16:37:05Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((invoice) != null) { invoice.setInvoiceDetails(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/3819/buggy-version/src.java.com.smi.travel.controller.InvoiceInboundController.java", "BodyUseAPI": [], "Fixed commit": "89ea461f42be495cf99119cd84fcf1ed6939a674", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-12-21T10:51:55Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (generatedKeys.next()) { autoGeneratedKey = generatedKeys.getLong(1); generatedKeys.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/7029/buggy-version/src.org.wso2.carbon.social.adaptor.DefaultQueryAdaptor.java", "BodyUseAPI": ["java.sql.ResultSet.getLong(int)", "java.sql.ResultSet.close()"], "Fixed commit": "3925e0c604c838e9b471a7b7f209b141452db5cd", "Url": "https://api.github.com/repos/udarakr/social-db-adaptor", "Date": "2015-04-13T18:39:57Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (units != 0) { val = val.divide(new java.math.BigDecimal(units)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/386/buggy-version/src.main.java.de.onyxbits.tradetrax.services.MoneyRepresentationImpl.java", "BodyUseAPI": ["java.math.BigDecimal.divide(java.math.BigDecimal)"], "Fixed commit": "851ebbc7adc176f89b88dceb0faa9675c89984a9", "Url": "https://api.github.com/repos/onyxbits/TradeTrax", "Date": "2015-02-27T22:58:13Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pageIds == null) || ((pageIds.length) == 0)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/6398/buggy-version/src.com.egloos.realmove.android.fp.db.DBAdapter.java", "BodyUseAPI": [], "Fixed commit": "37da205eba0d9b7e3eaeb44f23384ed4b5d23382", "Url": "https://api.github.com/repos/sangkwon/flowprototyping.android", "Date": "2013-06-06T11:04:26Z"},
{"Line": "=>741", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gregtech.api.util.GT_Recipe.GT_Recipe_Map.findRecipe(getBaseMetaTileEntity(),gregtech.api.util.GT_Recipe,boolean,V[mTier],net.minecraftforge.fluids.FluidStack[],net.minecraft.item.ItemStack,net.minecraft.item.ItemStack[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((tRecipe.mSpecialValue) == (-200)) && (((mCleanroom) == null) || ((mCleanroom.mEfficiency) == 0))) return gregtech.api.metatileentity.implementations.GT_MetaTileEntity_BasicMachine.FOUND_RECIPE_BUT_DID_NOT_MEET_REQUIREMENTS;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8870/buggy-version/src.main.java.gregtech.api.metatileentity.implementations.GT_MetaTileEntity_BasicMachine.java", "BodyUseAPI": [], "Fixed commit": "9cf2a8059de759d323791e0673e1e2abf30da517", "Url": "https://api.github.com/repos/Blood-Asp/GT5-Unofficial", "Date": "2017-03-02T18:17:23Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fragmentManager.findFragmentByTag(\"clicked_fragment\")) == null) detailsFragment = ((com.example.jose.aerisweatherapp.view.DetailsFragment) (fragmentManager.findFragmentByTag(\"details_fragment\"))); else detailsFragment = ((com.example.jose.aerisweatherapp.view.DetailsFragment) (fragmentManager.findFragmentByTag(\"clicked_fragment\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/8658/buggy-version/app.src.main.java.com.example.jose.aerisweatherapp.MainActivity.java", "BodyUseAPI": ["android.support.v4.app.FragmentManager.findFragmentByTag(java.lang.String)", "android.support.v4.app.FragmentManager.findFragmentByTag(java.lang.String)"], "Fixed commit": "a7cd043df543e48c7cd5bbeeb38675c0cafe5c9a", "Url": "https://api.github.com/repos/jgarcia162/AerisWeatherApp", "Date": "2016-12-28T16:07:32Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tomb.supportsim.controllers.AnalystReporter.getSuitableAnalysts(tomb.supportsim.models.enums.RoleEnum)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((suitableAnalysts.size()) == 0) { boolean caught; caught = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/9225/buggy-version/src.tomb.supportsim.controllers.AssignmentController.java", "BodyUseAPI": [], "Fixed commit": "6363ee65da64d8f818ac627a6c738921b954454e", "Url": "https://api.github.com/repos/tomb50/SupportSim", "Date": "2014-10-06T21:29:29Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.Integer, com.mike101102.ctt.gameapi.Game>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((g.getSpawnDelay()) > 0) { plugin.getSpawnDelays().put(player.getName(), g.getSpawnDelay()); player.sendMessage(((((((org.bukkit.ChatColor.RED) + \"Spawn delay: \") + (org.bukkit.ChatColor.GOLD)) + (g.getSpawnDelay())) + (org.bukkit.ChatColor.RED)) + \" more seconds\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/2941/buggy-version/src.com.mike101102.ctt.CTTListener.java", "BodyUseAPI": ["plugin.getSpawnDelays().put(player.getName(),g.getSpawnDelay())", "com.mike101102.ctt.CTTGame.getSpawnDelay()", "com.mike101102.ctt.CTTGame.getSpawnDelay()", "org.bukkit.entity.Player.sendMessage(((((((org.bukkit.ChatColor.RED) + \"Spawn delay: \") + (org.bukkit.ChatColor.GOLD)) + (g.getSpawnDelay())) + (org.bukkit.ChatColor.RED)) + \" more seconds\"))"], "Fixed commit": "6ede82639378bf457a382988623494ff14feaeb6", "Url": "https://api.github.com/repos/mike101102/Capture-The-Tower", "Date": "2014-04-19T18:29:38Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (headers != null) { fromHttpHeaders(headers); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V69/9203/buggy-version/src.main.java.com.joyent.manta.client.MantaHttpHeaders.java", "BodyUseAPI": [], "Fixed commit": "ca68dd929d951ab3f4e660f369e6861cbb28876a", "Url": "https://api.github.com/repos/joyent/java-manta", "Date": "2015-11-15T18:47:20Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.getError()) != null) { java.lang.System.out.println(response.getError()); return valuesMap; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1870/buggy-version/src.edu.umass.cs.gnsserver.activecode.prototype.ActiveClient.java", "BodyUseAPI": ["edu.umass.cs.gnsserver.activecode.prototype.ActiveMessage.getError()", "java.io.PrintStream.println(response.getError())"], "Fixed commit": "0d35aa978f50ae6f12f41177f319f2aa3d910556", "Url": "https://api.github.com/repos/ZhaoyuUmass/ActiveGNS", "Date": "2016-08-05T07:05:39Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.ntust.csie.se.mdfk.sophiatag.service.MaterialList.indexOf(edu.ntust.csie.se.mdfk.sophiatag.data.Material)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (row >= 0) { this.fireTableRowsUpdated(row, row); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8112/buggy-version/SophiaTag.src.edu.ntust.csie.se.mdfk.sophiatag.gui.custom.MaterialListModel.java", "BodyUseAPI": ["edu.ntust.csie.se.mdfk.sophiatag.gui.custom.MaterialListModel.fireTableRowsUpdated(int,int)"], "Fixed commit": "d86d037990591bf6b06dc7a4375bb79b1ae1f991", "Url": "https://api.github.com/repos/maeglin89273/SophiaTag", "Date": "2014-12-24T14:49:46Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mPileNames.contains(op.getName())) { return; }else if (op.getName().equals((\"Pile \" + (se.chalmers.touchdeck.gamecontroller.GameController.mDefaultPileNameNo)))) { (se.chalmers.touchdeck.gamecontroller.GameController.mDefaultPileNameNo)++; mGameState.setDefaultPileNo(se.chalmers.touchdeck.gamecontroller.GameController.mDefaultPileNameNo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7947/buggy-version/src.se.chalmers.touchdeck.gamecontroller.GameController.java", "BodyUseAPI": ["op.getName().equals(java.lang.String)", "se.chalmers.touchdeck.gamecontroller.Operation.getName()"], "Fixed commit": "5edc90b6e5c1bf3711a53e48ea68527f17602b57", "Url": "https://api.github.com/repos/sebiva/TouchDeck", "Date": "2013-10-09T14:51:38Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.fixus.towerdefense.game.GameStatus.useDistance) { path.addWayPoint(new com.jme3.math.Vector3f(currentTranslation.x, (-2.5F), ((mNinjaPosition.z) * (-3)))); path.addWayPoint(new com.jme3.math.Vector3f(x, (-2.5F), ((mNinjaPosition.z) * (-3)))); }else { path.addWayPoint(new com.jme3.math.Vector3f(currentTranslation.x, (-2.5F), 0)); path.addWayPoint(new com.jme3.math.Vector3f(x, (-2.5F), 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1761/buggy-version/src.com.fixus.towerdefense.model.SuperimposeJME.java", "BodyUseAPI": [], "Fixed commit": "5361f266168692ec24c6410e2ef4520ebcb72437", "Url": "https://api.github.com/repos/dpacholczyk/pjatk-mgr", "Date": "2015-07-01T08:53:25Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (typeDesc.getType().isComplexType()) { switch (typeDesc.getType()) { case ARRAY_TYPE : case MAP_TYPE : case STRUCT_TYPE : return \"string\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1597/buggy-version/lens-server-api.src.main.java.org.apache.lens.server.api.driver.LensResultSetMetadata.java", "BodyUseAPI": ["org.apache.hive.service.cli.TypeDescriptor.getType()"], "Fixed commit": "a361080bd763a6ae9f8dba55dec80abbb80848e4", "Url": "https://api.github.com/repos/prongs/incubator-lens", "Date": "2014-12-11T12:35:53Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((toolbarArmedXYGraph) != null) { remove(toolbarArmedXYGraph); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/896/buggy-version/applications.plugins.org.csstudio.eve.viewer.src.de.ptb.epics.eve.viewer.views.plotview.XyPlot.java", "BodyUseAPI": [], "Fixed commit": "be226485cf7d4b3f7a65d07cb4ac3bcd1e20cc29", "Url": "https://api.github.com/repos/eveCSS/eveCSS", "Date": "2014-05-26T15:23:03Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportFragmentManager().findFragmentById(R.id.fragment_container)) instanceof com.thomasbroadley.lolstatus.MainPageFragment) { ((com.thomasbroadley.lolstatus.MainPageFragment) (getSupportFragmentManager().findFragmentById(R.id.fragment_container))).updateExpanded(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6612/buggy-version/app.src.main.java.com.thomasbroadley.lolstatus.MainPage.java", "BodyUseAPI": [], "Fixed commit": "a449d8cdf17f8d5b51471f8faed273d1e1e47cb4", "Url": "https://api.github.com/repos/tbroadley/lol-status-android", "Date": "2014-09-20T20:40:24Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.getOutputs().bits.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (outputIndex < 0) { java.lang.System.out.println((\"missing output index for \" + (output))); java.lang.System.out.println(\"cols are: \"); for (java.lang.String s : model.getOutputs().bits) { java.lang.System.out.println((\" \" + s)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6383/buggy-version/src.com.cburch.logisim.analyze.model.OutputExpressions.java", "BodyUseAPI": [], "Fixed commit": "fc1bd58cea85ef9270b1693d434e40612fbeb0b6", "Url": "https://api.github.com/repos/kevinawalsh/logisim-evolution", "Date": "2016-05-25T23:05:40Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vertexCopies.get(edge.getVertex2())) == null) { vertexCopies.put(edge.getVertex2(), edge.getVertex2().getCopy()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/35/buggy-version/VertexCover.src.main.java.com.zlthnrtm.ts.EdgeListGraph.java", "BodyUseAPI": ["edge.getVertex2().getCopy()", "com.zlthnrtm.ts.Edge.getVertex2()", "com.zlthnrtm.ts.Edge.getVertex2()", "java.util.Map<com.zlthnrtm.ts.Vertex, com.zlthnrtm.ts.Vertex>.put(edge.getVertex2(),edge.getVertex2().getCopy())"], "Fixed commit": "285d35f06eeeae7e36193335262645ce3df32f4a", "Url": "https://api.github.com/repos/ZolotuhinArtem/Algoritms", "Date": "2017-05-13T16:28:24Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vertexCopies.get(edge.getVertex1())) == null) { vertexCopies.put(edge.getVertex1(), edge.getVertex1().getCopy()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/35/buggy-version/VertexCover.src.main.java.com.zlthnrtm.ts.EdgeListGraph.java", "BodyUseAPI": ["edge.getVertex1().getCopy()", "java.util.Map<com.zlthnrtm.ts.Vertex, com.zlthnrtm.ts.Vertex>.put(edge.getVertex1(),edge.getVertex1().getCopy())", "com.zlthnrtm.ts.Edge.getVertex1()", "com.zlthnrtm.ts.Edge.getVertex1()"], "Fixed commit": "285d35f06eeeae7e36193335262645ce3df32f4a", "Url": "https://api.github.com/repos/ZolotuhinArtem/Algoritms", "Date": "2017-05-13T16:28:24Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((oldStack.getQuant()) != 1) { if ((player.getItemByCoord(new javax.vecmath.Vector2d(x, y))) == null) { player.getItems().add(new items.ItemStack(oldStack.getItem(), (((oldStack.getQuant()) / 2) + ((oldStack.getQuant()) % 2)), game, ((int) (x)), ((int) (y)))); oldStack.setQuant(((oldStack.getQuant()) / 2)); splitFirstClick = true; }else { splitFirstClick = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2238/buggy-version/src.entities.Cursor.java", "BodyUseAPI": ["items.ItemStack.getItem()", "items.ItemStack.setQuant(((oldStack.getQuant()) / 2))", "items.ItemStack.getQuant()", "items.ItemStack.getQuant()", "player.getItems().add(items.ItemStack)", "items.ItemStack.getQuant()"], "Fixed commit": "0bd0ba2fc08aefd8c637c2392335b59deb74db6a", "Url": "https://api.github.com/repos/2000Slash/Minecraft2D", "Date": "2017-05-18T19:49:19Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(splitFirstClick)) { if (((oldStack.getQuant()) % 2) == 0) { if ((player.getItemByCoord(new javax.vecmath.Vector2d(x, y))) == null) { player.getItems().add(new items.ItemStack(oldStack.getItem(), ((oldStack.getQuant()) / 2), game, ((int) (x)), ((int) (y)))); oldStack.setQuant(((oldStack.getQuant()) / 2)); splitFirstClick = true; }else { splitFirstClick = true; } }else if ((oldStack.getQuant()) != 1) { if ((player.getItemByCoord(new javax.vecmath.Vector2d(x, y))) == null) { player.getItems().add(new items.ItemStack(oldStack.getItem(), (((oldStack.getQuant()) / 2) + ((oldStack.getQuant()) % 2)), game, ((int) (x)), ((int) (y)))); oldStack.setQuant(((oldStack.getQuant()) / 2)); splitFirstClick = true; }else { splitFirstClick = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2238/buggy-version/src.entities.Cursor.java", "BodyUseAPI": [], "Fixed commit": "0bd0ba2fc08aefd8c637c2392335b59deb74db6a", "Url": "https://api.github.com/repos/2000Slash/Minecraft2D", "Date": "2017-05-18T19:49:19Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(firstClick)) { try { for (int i = 0; i < (player.getItems().size()); i++) { items.ItemStack tempStack = ((items.ItemStack) (player.getItems().get(i))); if ((((tempStack.getX()) == (x)) && ((tempStack.getY()) == (y))) && ((tempStack.getItem().getID()) != (oldStack.getItem().getID()))) { newStack = tempStack; javax.vecmath.Vector2d tempVec = oldStack.getCoords(); oldStack.setCoords(newStack.getCoords()); newStack.setCoords(tempVec); firstClick = true; return; }else if ((((tempStack.getX()) == (x)) && ((tempStack.getY()) == (y))) && ((tempStack.getItem().getID()) == (oldStack.getItem().getID()))) { oldStack.addQuant(tempStack.getQuant()); player.getItems().remove(tempStack); } } oldStack.setCoords(new javax.vecmath.Vector2d(x, y)); firstClick = true; } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2238/buggy-version/src.entities.Cursor.java", "BodyUseAPI": [], "Fixed commit": "0bd0ba2fc08aefd8c637c2392335b59deb74db6a", "Url": "https://api.github.com/repos/2000Slash/Minecraft2D", "Date": "2017-05-18T19:49:19Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(((com.tinkerpop.blueprints.impls.orient.OrientElement) (element)).isDetached())) ((com.tinkerpop.blueprints.impls.orient.OrientElement) (element)).save();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8313/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientBatchGraph.java", "BodyUseAPI": ["E.save()"], "Fixed commit": "5eff66fb0c2ace7762213a440aaf9678dc857c74", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-01-30T12:51:25Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isDetached())) save();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8313/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientElement.java", "BodyUseAPI": [], "Fixed commit": "5eff66fb0c2ace7762213a440aaf9678dc857c74", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-01-30T12:51:25Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isDetached())) save();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8313/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientElement.java", "BodyUseAPI": [], "Fixed commit": "5eff66fb0c2ace7762213a440aaf9678dc857c74", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-01-30T12:51:25Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((timestamp.getHours()) + 6) > 24) timestamp.setHours((((timestamp.getHours()) + 6) - 24)); else timestamp.setHours(((timestamp.getHours()) + 6));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5171/buggy-version/src.com.models.event.EventController.java", "BodyUseAPI": ["java.sql.Timestamp.getHours()", "java.sql.Timestamp.setHours(int)", "java.sql.Timestamp.getHours()", "java.sql.Timestamp.setHours(int)"], "Fixed commit": "65ac2cd2c58c34a9fdd72aac1248f8e58e62f123", "Url": "https://api.github.com/repos/duckShooter/GPBackEnd", "Date": "2017-07-01T21:44:13Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((dialect) instanceof org.nuxeo.ecm.core.storage.sql.jdbc.dialect.DialectSQLServer) && (sql.toLowerCase().contains(\"nx_children\"))) { logger.warn(sql.replace(\"\\n\", \"\\n \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1094/buggy-version/nuxeo-core.nuxeo-core-storage-sql.nuxeo-core-storage-sql.src.main.java.org.nuxeo.ecm.core.storage.sql.jdbc.JDBCMapper.java", "BodyUseAPI": ["org.nuxeo.ecm.core.storage.sql.jdbc.JDBCMapper.warn(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "e7c0df9bacac6f640927ce99ad9094e1beea40c9", "Url": "https://api.github.com/repos/nuxeo/nuxeo", "Date": "2015-11-28T17:31:28Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((routeIndex) < (path.size())) { if (!(path.get(routeIndex).getTraversable())) { endRouteEarly(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7723/buggy-version/core.src.com.TeamHEC.LocomotionCommotion.Train.Route.java", "BodyUseAPI": ["java.util.ArrayList<com.TeamHEC.LocomotionCommotion.Map.Connection>.get(int)", "path.get(routeIndex).getTraversable()"], "Fixed commit": "589b03a78c7eda64e2430dfba52b815995f1df55", "Url": "https://api.github.com/repos/sepr-gva/LocomotionCommotion", "Date": "2015-02-09T15:09:10Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Long.parseLong(request.getParameter(\"id\"))", "request.getSession().getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(profileOrderValidationService.isValid(orderId, user.getId()))) { return redirectTo(lv.javaguru.java2.servlet.FrontPageController.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7150/buggy-version/src.main.java.lv.javaguru.java2.servlet.ProfileOrderController.java", "BodyUseAPI": [], "Fixed commit": "d6cb06e6d8d233407ec5bd7f5d58995bd5ed359f", "Url": "https://api.github.com/repos/alex-vit/java2", "Date": "2016-09-10T07:35:42Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(toggled)) { flagged = !(flagged); if (flagged) this.getBackground().setColorFilter(Color.GREEN, PorterDuff.Mode.MULTIPLY); else if (!(flagged)) this.getBackground().setColorFilter(Color.GRAY, PorterDuff.Mode.MULTIPLY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6364/buggy-version/src.com.NinjaMines.MineSweeperButton.java", "BodyUseAPI": [], "Fixed commit": "9630510bfda0f90f29e4dc8d7c4fc988fce92b2e", "Url": "https://api.github.com/repos/kevinwchen26/NinjaMines", "Date": "2012-07-08T05:53:09Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fallback) { result.addAttribute(java.awt.font.TextAttribute.FONT, fallbackFont, fallbackBegin, text.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8687/buggy-version/src.main.java.com.vitco.app.util.misc.FontUtil.java", "BodyUseAPI": [], "Fixed commit": "f60a68e7fd9a682493d1b796d526d90e8de92dcc", "Url": "https://api.github.com/repos/maijz128/voxelshop", "Date": "2017-10-15T17:19:12Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((wires) != null) && ((otherNet.getWires()) != null)) wires.addAll(otherNet.getWires());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2957/buggy-version/src.main.java.de.neemann.digital.draw.model.Net.java", "BodyUseAPI": ["de.neemann.digital.draw.model.Net.getWires()", "java.util.ArrayList<de.neemann.digital.draw.elements.Wire>.addAll(java.util.ArrayList<de.neemann.digital.draw.elements.Wire>)"], "Fixed commit": "f15f2bc788bfb4d709fa59fc221da8dce734a71b", "Url": "https://api.github.com/repos/hneemann/Digital", "Date": "2017-04-07T11:01:29Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sp.getSupportedFormat().contains(\"Binary\")) { parseBuilder.append(\"final Event event = formatter.instantiate(JavaBinaryHelper.toObject(payload.toByteArray()));\\n\"); }else { parseBuilder.append(\"final Event event = formatter.instantiate(payload);\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3001/buggy-version/compilers.official-network-plugins.src.main.java.org.thingml.networkplugins.java.JavaMQTTPlugin.java", "BodyUseAPI": [], "Fixed commit": "498d0f2a73142c2dd8418774a47cd30d83ad34f3", "Url": "https://api.github.com/repos/TelluIoT/ThingML", "Date": "2016-10-19T15:30:27Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path.startsWith(\"|\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5212/buggy-version/src.main.java.de.unistuttgart.ims.uimautil.CoNLLExport.java", "BodyUseAPI": [], "Fixed commit": "74d4eece8e9541a261b23c41ad45775ae1ad97ef", "Url": "https://api.github.com/repos/nilsreiter/uima-util", "Date": "2017-03-22T12:25:48Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (model.isDirectory()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/761/buggy-version/rules-java.api.src.main.java.org.jboss.windup.rules.apps.java.scan.provider.DiscoverArchiveLicenseFilesRuleProvider.java", "BodyUseAPI": [], "Fixed commit": "703016595e001150e43420fde1820cc0d5ce3703", "Url": "https://api.github.com/repos/mbriskar/windup", "Date": "2015-05-06T17:22:38Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stack == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5696/buggy-version/src.main.java.name.richardson.james.bukkit.starterkit.StarterKitGrantedEvent.java", "BodyUseAPI": [], "Fixed commit": "db54603258d1fe71031f350b27a9ae5e8a156cfd", "Url": "https://api.github.com/repos/grandwazir/StarterKit", "Date": "2012-12-30T03:40:52Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((de.cismet.netutil.Proxy.fromPreferences()) != null) { this.proxy = de.cismet.netutil.Proxy.fromPreferences(); }else if ((de.cismet.netutil.Proxy.fromSystem()) != null) { this.proxy = de.cismet.netutil.Proxy.fromSystem(); }else { this.proxy = new de.cismet.netutil.Proxy(); this.proxy.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1331/buggy-version/src.main.java.de.cismet.cids.custom.switchon.utils.ZenodoUploader.java", "BodyUseAPI": [], "Fixed commit": "6de88f28d6039acb6f9a549ef2a3d2bc6392e33e", "Url": "https://api.github.com/repos/switchonproject/cids-custom-switchon", "Date": "2017-05-17T15:12:34Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isBusy) { selectedButton1.flip(); selectedButton2.flip(); selectedButton1 = null; selectedButton2 = null; isBusy = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8684/buggy-version/app.src.main.java.com.example.samlee.cs245application.Game4x4Activity.java", "BodyUseAPI": [], "Fixed commit": "9f8b52c94cef685f58c760c19b359c9f4f2fc43f", "Url": "https://api.github.com/repos/samlee99/Card-Concentration-Game", "Date": "2017-03-08T05:21:40Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playerOnline(\"Icecrest\")) { getPlayer(\"Icecrest\").setFlying(true); }else { sender.sendMessage(((ChatColor.BLUE) + \"That player is not online!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/308/buggy-version/src.main.java.Eden.CommandRunner.java", "BodyUseAPI": [], "Fixed commit": "6dd66e335a1a4b01698f75a612a8d4b91bff5e0c", "Url": "https://api.github.com/repos/Icecrest/Eden-Plugin", "Date": "2015-03-10T15:13:31Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fragment.getPrecedingNodes(net.frapu.code.visualization.bpmn.Association.class, node).contains(newEdge.getSource()))) { fragment.addEdge(newEdge); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2618/buggy-version/src.de.uni_potsdam.hpi.bpt.bp2014.jeditor.plugins.pcm.generation.UpdateScenarioFromOLCDiff.java", "BodyUseAPI": ["de.uni_potsdam.hpi.bpt.bp2014.jeditor.visualization.pcm.PCMFragment.addEdge(net.frapu.code.visualization.bpmn.Association)"], "Fixed commit": "40c9c64db131d6f39105ea2a833332015b447366", "Url": "https://api.github.com/repos/BP2014W1/processeditor", "Date": "2015-05-18T21:04:38Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fragment.getPrecedingNodes(net.frapu.code.visualization.bpmn.Association.class, newEdge.getTarget()).contains(node))) { fragment.addEdge(newEdge); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2618/buggy-version/src.de.uni_potsdam.hpi.bpt.bp2014.jeditor.plugins.pcm.generation.UpdateScenarioFromOLCDiff.java", "BodyUseAPI": ["de.uni_potsdam.hpi.bpt.bp2014.jeditor.visualization.pcm.PCMFragment.addEdge(net.frapu.code.visualization.bpmn.Association)"], "Fixed commit": "40c9c64db131d6f39105ea2a833332015b447366", "Url": "https://api.github.com/repos/BP2014W1/processeditor", "Date": "2015-05-18T21:04:38Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.whiterabbit.rxrestsample.data.RepoDbHelper.getAllRepo()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(c.moveToFirst())) { return repos; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5034/buggy-version/app.src.main.java.com.whiterabbit.rxrestsample.data.RepoDbObservable.java", "BodyUseAPI": [], "Fixed commit": "4df3bbf3c072e4c137e9669ed863deff6374b91d", "Url": "https://api.github.com/repos/fedepaol/RxRestSample", "Date": "2016-01-01T16:49:56Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hu.schonherz.training.landing.core.repository.UserRepository.findOne(userVo.getId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (userEntity == null) { userEntity = new hu.schonherz.training.landing.core.entity.User(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6614/buggy-version/landing-service.src.main.java.hu.schonherz.training.landing.service.impl.UserServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "58685c000fedff7e8731dfe94f893ac1d0ab5da3", "Url": "https://api.github.com/repos/schonherz-java-ee-2016-summer/Landing", "Date": "2016-09-21T16:54:43Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((addresses.size()) > 0) { address = addresses.get(0).getAddressLine(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/861/buggy-version/app.src.main.java.com.example.connor.carmap.PointArrayAdapter.java", "BodyUseAPI": ["addresses.get(0).getAddressLine(int)", "java.util.List<android.location.Address>.get(int)"], "Fixed commit": "0e5f7c4aabed789ebae3c6729f49624d011c350e", "Url": "https://api.github.com/repos/humphries40/CarMap2", "Date": "2014-11-21T02:53:16Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((delegate) instanceof com.forter.monitoring.EventsAware) { ((com.forter.monitoring.EventsAware) (delegate)).setEventSender(eventSender); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7261/buggy-version/src.main.java.com.forter.monitoring.MonitoredBolt.java", "BodyUseAPI": [], "Fixed commit": "8419b0a810aba4ff052c79f1a00071971b086f80", "Url": "https://api.github.com/repos/forter/riemann-storm-monitor", "Date": "2015-12-23T13:31:40Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getConfigurationSetting(cfgService, ConfigurationKey.AUTH_MODE).equals(\"INTERNAL\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4792/buggy-version/oscm-portal.javasrc.org.oscm.ui.filter.AuthenticationSettings.java", "BodyUseAPI": [], "Fixed commit": "13ccd8d81160a0fbe2d7b8e925cd99d7149bf5d4", "Url": "https://api.github.com/repos/angarg12/development", "Date": "2017-02-15T12:59:27Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.photon.phresco.commons.model.User.getId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((userjson.get(userId)) != null) { customerId = ((java.lang.String) (userjson.get(userId))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/588/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.actions.Login.java", "BodyUseAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Fixed commit": "ab7f769bbed957f9bd31516f40a0224d053b3398", "Url": "https://api.github.com/repos/phresco/framework", "Date": "2013-04-25T11:55:46Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (element.getKind().equals(javax.lang.model.element.ElementKind.CLASS)) { actionHelper.validate(element, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7903/buggy-version/AndroidAnnotations.androidannotations-core.androidannotations.src.main.java.org.androidannotations.handler.BaseGeneratingAnnotationHandler.java", "BodyUseAPI": ["com.dspot.declex.action.ActionHelper.validate(javax.lang.model.element.Element,org.androidannotations.handler.BaseGeneratingAnnotationHandler<T>)"], "Fixed commit": "34e8b34b562ec073527f8814cb9bd3844beb1348", "Url": "https://api.github.com/repos/smaugho/androidannotations", "Date": "2017-03-20T02:56:53Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((scheme == null) || (scheme.isEmpty())) { scheme = org.apache.camel.maven.connector.StringHelper.camelCaseToDash(title); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2185/buggy-version/connectors.camel-connector-maven-plugin.src.main.java.org.apache.camel.maven.connector.ConnectorMojo.java", "BodyUseAPI": [], "Fixed commit": "130bec905f2ed9bb5ef81c4b1d1b2c48146f96fc", "Url": "https://api.github.com/repos/tadayosi/camel", "Date": "2017-02-22T11:21:52Z"},
{"Line": "=>640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mage.game.Game.getCard(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (card != null) { return card.moveToZone(zone, sourceId, game, flag, appliedEffects); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8092/buggy-version/Mage.src.mage.game.stack.Spell.java", "BodyUseAPI": ["mage.cards.Card.moveToZone(mage.constants.Zone,java.util.UUID,mage.game.Game,boolean,java.util.ArrayList<java.util.UUID>)"], "Fixed commit": "93825fff9cd332a116c5c2f6bc01b2007c79bd9f", "Url": "https://api.github.com/repos/andyfries/mage", "Date": "2015-09-02T14:20:05Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isInitialStickyBroadcast())) && (((intent.getFlags()) & (FLAG_RECEIVER_REGISTERED_ONLY)) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2954/buggy-version/VirtualApp.lib.src.main.java.com.lody.virtual.service.am.StaticBroadcastSystem.java", "BodyUseAPI": [], "Fixed commit": "75774a5def69450903eaddff6db6bc51ce3bfa48", "Url": "https://api.github.com/repos/hhkhub/VirtualApp", "Date": "2016-09-16T09:00:40Z"},
{"Line": "=>650", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.druid.sql.ast.expr.SQLCharExpr.getText()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((buf.length()) != (text.length())) { text = buf.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6621/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.mysql.visitor.MySqlOutputVisitor.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()"], "Fixed commit": "0cfef6061663a06eaca2e9dd800f821abacfdeee", "Url": "https://api.github.com/repos/wenshao/druid", "Date": "2016-05-20T19:05:43Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((today.month) + 1) < 10) { todayString = new java.lang.StringBuffer(todayString).insert(0, \"0\").toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1668/buggy-version/app.src.main.java.com.rajohns.judgecardx.Adapters.FightListAdapter.java", "BodyUseAPI": [], "Fixed commit": "91a4abad078f4daab35532767750cf719e596b9e", "Url": "https://api.github.com/repos/rajohns08/JudgecardXAndroid", "Date": "2015-02-01T05:38:57Z"},
{"Line": "=>590", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (validMilliseconds != null) { offset = validMilliseconds; }else { if (\"GLOBAL_LOCK\".equals(id)) { offset = (org.rapla.components.util.DateTools.MILLISECONDS_PER_MINUTE) * 5; }else { offset = (org.rapla.components.util.DateTools.MILLISECONDS_PER_MINUTE) / 4; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1199/buggy-version/src.main.java.org.rapla.storage.dbfile.FileOperator.java", "BodyUseAPI": [], "Fixed commit": "e202fb835d5ee1843a9f30fa9ca1b486506279a9", "Url": "https://api.github.com/repos/rapla/rapla", "Date": "2016-02-12T13:07:50Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(timerIsRunning)) { startButton.setText(\"STOP\"); new android.os.CountDownTimer(20000, 1000) { @java.lang.Override public void onTick(long l) { timer.setText((\"\" + (l / 1000))); } @java.lang.Override public void onFinish() { android.widget.Toast.makeText(com.example.nexus.yogafitnessapp.ViewExercise.this, \"Done!\", Toast.LENGTH_SHORT).show(); finish(); } }.start(); }else { android.widget.Toast.makeText(this, \"Done!\", Toast.LENGTH_SHORT).show(); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5870/buggy-version/app.src.main.java.com.example.nexus.yogafitnessapp.ViewExercise.java", "BodyUseAPI": [], "Fixed commit": "8db57af6ca0e60b2b62636f7ce127e0ff473a1d8", "Url": "https://api.github.com/repos/James-Sarkar/Android-Yoga-App", "Date": "2017-12-24T19:44:59Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ex instanceof org.restfulwhois.rdap.exception.DecodeException) { responseEntity = org.restfulwhois.rdap.common.util.RestResponseUtil.createResponse400(); }else if ((ex instanceof org.springframework.http.InvalidMediaTypeException) || (ex instanceof org.springframework.web.HttpMediaTypeNotAcceptableException)) { responseEntity = org.restfulwhois.rdap.common.util.RestResponseUtil.createResponse415(); }else { responseEntity = org.restfulwhois.rdap.common.util.RestResponseUtil.createResponse500(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1044/buggy-version/rdap-webapp.src.main.java.org.restfulwhois.rdap.controller.support.MappingExceptionResolver.java", "BodyUseAPI": [], "Fixed commit": "9dee8f1ea72247fbc0b089816c62611a3050cc96", "Url": "https://api.github.com/repos/cnnic/rdap", "Date": "2014-09-15T04:02:34Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sql == null) || ((sql.length()) < 6)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3788/buggy-version/core.log4jdbc-api.src.main.java.fr.ms.log4jdbc.rdbms.GenericRdbmsSpecifics.java", "BodyUseAPI": [], "Fixed commit": "b51e76285969986d1fa853012ceee35a3638e579", "Url": "https://api.github.com/repos/marcosemiao/log4jdbc", "Date": "2015-05-11T05:59:32Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type.isRepeated()) && (!(type.isMap()))) { return methodName(com.google.api.codegen.util.Name.from(\"get\").join(name).join(\"list\")); }else { return methodName(com.google.api.codegen.util.Name.from(\"get\").join(name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/885/buggy-version/src.main.java.com.google.api.codegen.transformer.SurfaceNamer.java", "BodyUseAPI": [], "Fixed commit": "5594c662707b2b6d2af4d257ce62fdd4f893c458", "Url": "https://api.github.com/repos/shinfan/toolkit", "Date": "2016-08-17T18:59:18Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (count > 1) { return methodName(com.google.api.codegen.util.Name.upperCamel(method.getSimpleName(), (\"Test\" + (java.lang.Integer.toString(count))))); }else { return methodName(com.google.api.codegen.util.Name.upperCamel(method.getSimpleName(), \"Test\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/885/buggy-version/src.main.java.com.google.api.codegen.transformer.SurfaceNamer.java", "BodyUseAPI": ["java.lang.Integer.toString(java.lang.Integer)", "com.google.api.codegen.util.Name.upperCamel(method.getSimpleName(),java.lang.String)", "com.google.api.codegen.transformer.SurfaceNamer.methodName(com.google.api.codegen.util.Name.upperCamel(method.getSimpleName(), (\"Test\" + (java.lang.Integer.toString(count)))))"], "Fixed commit": "5594c662707b2b6d2af4d257ce62fdd4f893c458", "Url": "https://api.github.com/repos/shinfan/toolkit", "Date": "2016-08-17T18:59:18Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i == 0) && ((currentLine.length()) == 0)) { allLines.add(longWord); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6386/buggy-version/src.main.java.org.reactome.web.diagram.renderers.impl.abs.TextRenderer.java", "BodyUseAPI": [], "Fixed commit": "89eeed96cfa784a4c4feadd3764a1f4b62abdabb", "Url": "https://api.github.com/repos/reactome-pwp/diagram", "Date": "2015-12-04T12:27:22Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.warnBeforeTicks) == 0L) { plugin.logWarn(\"Incorrect 'announce.warn_at_risk_users.ticks_before' setting. Disabling announcement\"); this.doAnnounceAtRisk = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6776/buggy-version/src.com.indivisible.shiftingperspectives.actions.WarnAtRiskPlayers.java", "BodyUseAPI": [], "Fixed commit": "46da4aad106e10353ba371af214392afbc351dc5", "Url": "https://api.github.com/repos/indivisible-irl/ShiftingPerspectives", "Date": "2013-12-23T19:26:51Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 0) i--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8001/buggy-version/src.main.java.eu.siacs.conversations.utils.DNSHelper.java", "BodyUseAPI": [], "Fixed commit": "dbe170bd353562c64d1d495e10a4d5ed80dfd233", "Url": "https://api.github.com/repos/kriztan/Conversations", "Date": "2015-04-16T19:55:52Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((n) < (k)) smile.sort.DoubleHeapSelect.sort(heap, n);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6617/buggy-version/math.src.main.java.smile.sort.DoubleHeapSelect.java", "BodyUseAPI": [], "Fixed commit": "aa1d348f4cbac03d6e93769e80a144fed408e034", "Url": "https://api.github.com/repos/haifengl/smile", "Date": "2016-09-21T12:56:04Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((transitViewVehicleArrayList) == null) { transitViewVehicleArrayList = new java.util.ArrayList<org.septa.android.app.models.servicemodels.TransitViewVehicleModel>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2281/buggy-version/app.src.main.java.org.septa.android.app.activities.TransitViewMapAndRouteListActionBarActivity.java", "BodyUseAPI": [], "Fixed commit": "0a57c6cdb7e77b761695615cb1e5f7ffb70eec72", "Url": "https://api.github.com/repos/septadev/SEPTA-Android", "Date": "2016-12-14T18:16:25Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (needClearData) { mDataset.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7802/buggy-version/app.src.main.java.com.chatapp.mvp.listnearby.ListNearbyAdapter.java", "BodyUseAPI": [], "Fixed commit": "0d5d3d5cf0580d4ee78b10700d6527649bcbbee7", "Url": "https://api.github.com/repos/thanhnd/chat-app", "Date": "2017-02-05T05:39:48Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((events.get(i).getStartDateTime().getTime().getMonth()) < month) && ((events.get(i).getEndDateTime().getTime().getMonth()) == month)) { if ((events.get(i).getEndDateTime().getTime().getDate()) >= date) { results.add(events.get(i)); } }else if (((events.get(i).getStartDateTime().getTime().getMonth()) < month) && ((events.get(i).getEndDateTime().getTime().getMonth()) > month)) { results.add(events.get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5553/buggy-version/src.calendrier.gui.ViewController.java", "BodyUseAPI": ["events.get(i).getEndDateTime().getTime()", "events.get(i).getEndDateTime()", "events.get(i).getEndDateTime()", "events.get(i).getStartDateTime().getTime().getMonth()", "events.get(i).getStartDateTime().getTime()", "java.util.List<utils.Event>.get(int)", "java.util.List<utils.Event>.add(events.get(i))", "events.get(i).getEndDateTime().getTime().getDate()", "java.util.List<utils.Event>.get(int)", "java.util.List<utils.Event>.get(int)", "java.util.List<utils.Event>.add(events.get(i))", "events.get(i).getStartDateTime()", "java.util.List<utils.Event>.get(int)", "events.get(i).getEndDateTime().getTime()", "events.get(i).getEndDateTime().getTime().getMonth()", "java.util.List<utils.Event>.get(int)"], "Fixed commit": "1f7d77a47df77c17efeae0559eb1e0a1b1b14805", "Url": "https://api.github.com/repos/cs2103aug2015-F11-4j/main", "Date": "2015-10-29T11:04:16Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.aljovic.amer.validation.NumberValidator.isNumeric(token)) { printError(java.lang.String.format(\"Could not parse line '%s' from %s because %s is not supposed to be a number\", line, fileName, csvField.getName())); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8110/buggy-version/src.main.java.com.aljovic.amer.validation.CsvValidator.java", "BodyUseAPI": [], "Fixed commit": "ba247067a8cdf0ced358497efc21974979f37647", "Url": "https://api.github.com/repos/ameraljovic/hubrick-backend-challenge", "Date": "2017-08-28T22:49:46Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.bluemesh.bmchat.MainActivity.txtMessage.getText().equals(\"\"))) { bms.write(message); com.bluemesh.bmchat.MainActivity.mHandler.obtainMessage(0, message.length, (-1), message).sendToTarget(); com.bluemesh.bmchat.MainActivity.txtMessage.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8204/buggy-version/src.com.bluemesh.bmchat.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "753e41a4bc790f36c0c15a7d6ab91a26f563a113", "Url": "https://api.github.com/repos/schnej7/BMChat", "Date": "2013-04-17T19:35:30Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["us.ihmc.humanoidRobotics.communication.packets.walking.FootstepDataListMessage.getDataList()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (dataList != null) { for (int i = 0; i < (dataList.size()); i++) footsteps.add().set(worldFrame, worldFrame, dataList.get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8983/buggy-version/IHMCHumanoidRobotics.src.us.ihmc.humanoidRobotics.communication.controllerAPI.command.FootstepDataListCommand.java", "BodyUseAPI": ["footsteps.add().set(us.ihmc.robotics.referenceFrames.ReferenceFrame,us.ihmc.robotics.referenceFrames.ReferenceFrame,dataList.get(i))", "java.util.ArrayList<us.ihmc.humanoidRobotics.communication.packets.walking.FootstepDataMessage>.get(int)", "java.util.ArrayList<us.ihmc.humanoidRobotics.communication.packets.walking.FootstepDataMessage>.size()"], "Fixed commit": "4b3b8662c46445e8b24ecb6a5c9692e86e5ee018", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2017-04-19T14:50:13Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (recurringTask != null) { executor.remove(recurringTask); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3538/buggy-version/src.main.java.org.threadly.examples.features.PrioritySchedulerExample.java", "BodyUseAPI": ["org.threadly.concurrent.PriorityScheduler.remove(java.lang.Runnable)"], "Fixed commit": "780890deb59902d1a7bebd38adc646464498a0e7", "Url": "https://api.github.com/repos/threadly/threadly_examples", "Date": "2015-11-05T05:33:27Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<ru.runa.gpd.lang.model.Variable, ru.runa.gpd.lang.model.Variable>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(oldVariable.getScriptingName().equals(oldVariable.getName()))) { addChildEdit(multiEdit, formType.searchVariableReplacementsInScript(file, oldVariable.getName(), newVariable.getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2170/buggy-version/plugins.ru.runa.gpd.src.ru.runa.gpd.ltk.FormNodePresentation.java", "BodyUseAPI": ["ru.runa.gpd.ltk.FormNodePresentation.addChildEdit(org.eclipse.text.edits.MultiTextEdit,formType.searchVariableReplacementsInScript(file, oldVariable.getName(), newVariable.getName()))", "ru.runa.gpd.form.FormType.searchVariableReplacementsInScript(org.eclipse.core.resources.IFile,oldVariable.getName(),newVariable.getName())", "ru.runa.gpd.lang.model.Variable.getName()"], "Fixed commit": "313547608daa22b04ffaa5be639b8ed89c1acad3", "Url": "https://api.github.com/repos/dataobject/runawfe-devstudio", "Date": "2017-02-24T19:50:44Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(query.getVariable().getName().equals(query.getVariable().getScriptingName()))) { matches.addAll(findInFile(elementMatch, file, matcher)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2170/buggy-version/plugins.ru.runa.gpd.src.ru.runa.gpd.search.VariableSearchVisitor.java", "BodyUseAPI": [], "Fixed commit": "313547608daa22b04ffaa5be639b8ed89c1acad3", "Url": "https://api.github.com/repos/dataobject/runawfe-devstudio", "Date": "2017-02-24T19:50:44Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(andex.Utils.isEmpty(value))) { java.lang.String typedValue = ((java.lang.String) (value)); values.put(colName, typedValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4288/buggy-version/src.andex.model.BaseDataSource.java", "BodyUseAPI": [], "Fixed commit": "0067972b15962b9a3cd1d628409af14fe50bd056", "Url": "https://api.github.com/repos/swiftech/andex", "Date": "2014-01-19T16:00:36Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tries) < (NUMBER_OF_TRIES)) { done = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/9079/buggy-version/src.Controllers.GameManager.java", "BodyUseAPI": [], "Fixed commit": "27e3ab74689c28a54bf9175c146313b33681a6c2", "Url": "https://api.github.com/repos/EdLittle/hushfinal", "Date": "2013-04-02T18:52:16Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(namespaceRoot.equals(\"/\"))) { namespaceRoot = namespaceRoot.replaceFirst(\"/$\", \"\"); try { com.emc.atmos.api.bean.Metadata typeMeta = atmos.getSystemMetadata(new com.emc.vipr.sync.source.ObjectPath(namespaceRoot)).get(AtmosUtil.TYPE_KEY); if (AtmosUtil.DIRECTORY_TYPE.equals(typeMeta.getValue())) namespaceRoot += \"/\"; } catch (com.emc.atmos.AtmosException e) { if ((e.getErrorCode()) == 1003) throw new com.emc.vipr.sync.source.ConfigurationException(\"specified path does not exist in the cloud\"); throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/684/buggy-version/src.main.java.com.emc.vipr.sync.source.AtmosSource.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "c1b6e1895df477df53a90fa8c80d721681824166", "Url": "https://api.github.com/repos/EMCECS/ecs-sync", "Date": "2015-07-19T00:20:54Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (states != null) { org.opentripplanner.api.model.WalkStep continuation = null; if ((itinerary.legs.size()) >= 2) { org.opentripplanner.api.model.Leg previousLeg = itinerary.legs.get(((itinerary.legs.size()) - 2)); if ((previousLeg.walkSteps) != null) { continuation = previousLeg.walkSteps.get(((previousLeg.walkSteps.size()) - 1)); end += 1; } } leg.walkSteps = getWalkSteps(states.subList(start, end), continuation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7040/buggy-version/opentripplanner-api-webapp.src.main.java.org.opentripplanner.api.ws.PlanGenerator.java", "BodyUseAPI": ["java.util.List<org.opentripplanner.routing.core.State>.subList(int,int)", "org.opentripplanner.api.ws.PlanGenerator.getWalkSteps(states.subList(start, end),org.opentripplanner.api.model.WalkStep)"], "Fixed commit": "4e464900b62b1191f3fd3bfd4c613eef18a41e14", "Url": "https://api.github.com/repos/openplans/OpenTripPlanner", "Date": "2012-10-10T15:20:26Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rgbString.length()) == 6) { java.lang.String s = \"FF\"; rgbString = s.concat(rgbString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3649/buggy-version/renderer.mil-sym-renderer.src.main.java.sec.web.renderer.utilities.JavaRendererUtilities.java", "BodyUseAPI": ["java.lang.String.concat(java.lang.String)"], "Fixed commit": "7b7dec0fe7ec4bc295b57bd413eeaf349472e16e", "Url": "https://api.github.com/repos/missioncommand/mil-sym-java", "Date": "2015-10-21T21:16:24Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((individuals.size()) == 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8585/buggy-version/joined.NpcPopulation.java", "BodyUseAPI": [], "Fixed commit": "d2f719e2c8fd5a1334d174cf7ebdcee9d83c7326", "Url": "https://api.github.com/repos/afisher/npcworld", "Date": "2011-11-29T03:44:44Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((spinnerTrack.getSelectedItemPosition()) != (android.widget.AdapterView.INVALID_POSITION)) { activity.setTrack(tracks.get(spinnerTrack.getSelectedItemPosition())); ret = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2701/buggy-version/app.src.main.java.com.ffeichta.runnergy.gui.activities.SaveActivityActivity.java", "BodyUseAPI": ["com.ffeichta.runnergy.model.Activity.setTrack(tracks.get(spinnerTrack.getSelectedItemPosition()))", "java.util.ArrayList<com.ffeichta.runnergy.model.Track>.get(spinnerTrack.getSelectedItemPosition())", "android.widget.Spinner.getSelectedItemPosition()"], "Fixed commit": "4015c528820cecfe1372e3c6e8931d055b39ae81", "Url": "https://api.github.com/repos/fafeichter/Runnergy", "Date": "2016-02-09T19:25:08Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (prepareActivity()) { int result = com.ffeichta.runnergy.model.DBAccessHelper.getInstance(this).insertActivity(activity); if (result == 0) { android.content.Intent intent = new android.content.Intent(this, com.ffeichta.runnergy.gui.activities.MainActivity.class); startActivity(intent); }else { com.ffeichta.runnergy.gui.message.ToastFactory.makeToast(this, getResources().getString(R.string.toast_error_save_track)); } }else { com.ffeichta.runnergy.gui.message.ToastFactory.makeToast(this, \"INsert a track\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2701/buggy-version/app.src.main.java.com.ffeichta.runnergy.gui.activities.SaveActivityActivity.java", "BodyUseAPI": [], "Fixed commit": "4015c528820cecfe1372e3c6e8931d055b39ae81", "Url": "https://api.github.com/repos/fafeichter/Runnergy", "Date": "2016-02-09T19:25:08Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(use64Bit)) { for (int i = 0; i < (markers.length); i++) { markers[i] = (markers[i]) & 4294967295L; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4296/buggy-version/components.formats-gpl.src.loci.formats.in.NDPIReader.java", "BodyUseAPI": [], "Fixed commit": "ddb88e2b64f7000786149d3766693e84bd4bdf38", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-05-15T06:25:12Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.channels.SocketChannel.write(java.nio.ByteBuffer)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (rc < len) { java.lang.System.out.println((((\" the package is truncated....\" + rc) + \" real len is:\") + len)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7765/buggy-version/src.main.java.com.kole.mofka.net.ServerConneciton.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "8bec204e8d2a3557774a2ccb053928e26d4f4114", "Url": "https://api.github.com/repos/jamesyang1986/mofka", "Date": "2017-11-07T10:29:29Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.fabric8.kubernetes.client.utils.Utils.getSystemPropertyOrEnvVar(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (openshiftUrl != null) { if (io.fabric8.openshift.client.OpenShiftConfig.isRootURL(openshiftUrl)) { openshiftUrl = io.fabric8.kubernetes.client.utils.URLUtils.join(openshiftUrl, \"oapi\", io.fabric8.openshift.client.OpenShiftConfig.getDefaultOapiVersion(config)); } return openshiftUrl; }else { return io.fabric8.kubernetes.client.utils.URLUtils.join(config.getMasterUrl(), \"oapi\", io.fabric8.openshift.client.OpenShiftConfig.getDefaultOapiVersion(config)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/669/buggy-version/openshift-client.src.main.java.io.fabric8.openshift.client.OpenShiftConfig.java", "BodyUseAPI": ["io.fabric8.kubernetes.client.utils.URLUtils.join(java.lang.String,java.lang.String,java.lang.String)", "io.fabric8.openshift.client.OpenShiftConfig.isRootURL(java.lang.String)"], "Fixed commit": "e34e84d88aa4d46ed4407641324fb9ffe94d74e3", "Url": "https://api.github.com/repos/fanhaozzu/kubernetes-client", "Date": "2017-01-19T02:09:15Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mcPermissions.getInstance().herbalismDoubleDrops(player)) { org.bukkit.inventory.ItemStack is = new org.bukkit.inventory.ItemStack(mat); if ((herbLevel > MAX_BONUS_LEVEL) || ((com.gmail.nossr50.skills.Herbalism.random.nextInt(1000)) <= herbLevel)) { if (type.equals(Material.CACTUS)) { m.mcDropItems(loc, is, catciDrops); }else if (type.equals(Material.MELON_BLOCK)) { m.mcDropItems(loc, is, 3); m.mcRandomDropItems(loc, is, 50, 4); }else if (type.equals(Material.NETHER_WARTS)) { m.mcDropItems(loc, is, 2); m.mcRandomDropItems(loc, is, 50, 3); }else if (type.equals(Material.SUGAR_CANE_BLOCK)) { m.mcDropItems(loc, is, caneDrops); }else { m.mcDropItem(loc, is); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8950/buggy-version/src.main.java.com.gmail.nossr50.skills.Herbalism.java", "BodyUseAPI": [], "Fixed commit": "a90e4e9c8d6b3679488d9e4710510f5b1491c9b5", "Url": "https://api.github.com/repos/mcMMO-Dev/mcMMO", "Date": "2012-04-10T15:48:59Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mNotify) { mLoadingView.startAnimation(); if (mBothDirection) { if ((mSuperRefreshListener2) != null) { if ((mDirection) == (RefreshDirection.PULL_FROM_TOP)) { mSuperRefreshListener2.onRefreshFromTop(); }else { mSuperRefreshListener2.onRefreshFromBottom(); } } }else { if ((mSuperRefreshListener) != null) { mSuperRefreshListener.onRefreshFromTop(); }else if ((mSuperRefreshListener2) != null) { if ((mDirection) == (RefreshDirection.PULL_FROM_TOP)) { mSuperRefreshListener2.onRefreshFromTop(); }else { mSuperRefreshListener2.onRefreshFromBottom(); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2695/buggy-version/app.src.main.java.niorgai.qiu.superrefreshlayout.refresh.SuperRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "14929b222806e8f1affe87e452f5abca29936fe5", "Url": "https://api.github.com/repos/niorgai/SuperRefreshLayout", "Date": "2015-09-25T03:10:36Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((orignalSchema == null) || ((orignalSchema.size()) == 0)) { throw new java.lang.RuntimeException(\"Schema definition not found in mappings.properties file, please add it example:- california:camappings.json\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/9198/buggy-version/src.main.java.com.richipal.ondeck.app.SOSClient.java", "BodyUseAPI": [], "Fixed commit": "188e613b9219208fe7a33f5492afa4f3de2bc744", "Url": "https://api.github.com/repos/richipal/sosmapper", "Date": "2014-04-21T18:55:43Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(csvFile.exists())) { throw new java.io.IOException(((\"File:\" + path) + \" not found\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/9198/buggy-version/src.main.java.com.richipal.ondeck.app.SOSClient.java", "BodyUseAPI": [], "Fixed commit": "188e613b9219208fe7a33f5492afa4f3de2bc744", "Url": "https://api.github.com/repos/richipal/sosmapper", "Date": "2014-04-21T18:55:43Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.rholder.esthree.util.S3PathUtils.getPrefix(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (path == null) { throw new java.lang.IllegalArgumentException((\"Could not determine target filename from \" + target)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8801/buggy-version/src.main.java.com.github.rholder.esthree.cli.GetMultipartCommand.java", "BodyUseAPI": [], "Fixed commit": "a8b3f8af3ba5a9e54cac25934bedf46d8632b182", "Url": "https://api.github.com/repos/rholder/esthree", "Date": "2014-06-25T04:21:22Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.rholder.esthree.util.S3PathUtils.getPrefix(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (path == null) { throw new java.lang.IllegalArgumentException((\"Could not determine target filename from \" + target)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8801/buggy-version/src.main.java.com.github.rholder.esthree.cli.GetCommand.java", "BodyUseAPI": [], "Fixed commit": "a8b3f8af3ba5a9e54cac25934bedf46d8632b182", "Url": "https://api.github.com/repos/rholder/esthree", "Date": "2014-06-25T04:21:22Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getKey()) == type) { return entry.getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4564/buggy-version/core.src.main.java.org.jahia.modules.external.ExternalPropertyImpl.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.Integer, org.jahia.services.content.nodetypes.ExtendedPropertyDefinition>.getValue()"], "Fixed commit": "0540ceb3b0eead0290062a48ee9cb9dc0d67014e", "Url": "https://api.github.com/repos/Jahia/external-provider", "Date": "2014-03-11T11:21:59Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isMultiple()) && ((getValues().length) > 0)) { type = getValues()[0].getType(); }else if ((getValue()) != null) { type = getValue().getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4564/buggy-version/core.src.main.java.org.jahia.modules.external.ExternalPropertyImpl.java", "BodyUseAPI": [], "Fixed commit": "0540ceb3b0eead0290062a48ee9cb9dc0d67014e", "Url": "https://api.github.com/repos/Jahia/external-provider", "Date": "2014-03-11T11:21:59Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.kumoricon.KumoRegUI.getCurrent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ui == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4146/buggy-version/src.main.java.org.kumoricon.view.BaseView.java", "BodyUseAPI": [], "Fixed commit": "11f825786634a41e2c775575beb315489ef97350", "Url": "https://api.github.com/repos/kumoregdev/kumoreg", "Date": "2016-02-02T03:57:03Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (in == null) { throw new java.lang.NullPointerException(\"Parameter in must not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5719/buggy-version/src.main.java.org.apache.commons.compress.utils.ChecksumCalculatingInputStream.java", "BodyUseAPI": [], "Fixed commit": "aea236168aae3371b84e547c03a2b3842eb79543", "Url": "https://api.github.com/repos/sesuncedu/commons-compress", "Date": "2017-06-16T19:30:03Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (checksum == null) { throw new java.lang.NullPointerException(\"Parameter checksum must not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5719/buggy-version/src.main.java.org.apache.commons.compress.utils.ChecksumCalculatingInputStream.java", "BodyUseAPI": [], "Fixed commit": "aea236168aae3371b84e547c03a2b3842eb79543", "Url": "https://api.github.com/repos/sesuncedu/commons-compress", "Date": "2017-06-16T19:30:03Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pl.wat.wel.projekt.pumo.electronicband.ListsAndAdapters.ListAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (currentList.hasImage()) { image.setImageResource(currentList.getPictureID()); image.setVisibility(View.VISIBLE); image.setBackgroundColor(android.support.v4.content.ContextCompat.getColor(getContext(), R.color.white)); }else { image.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/705/buggy-version/app.src.main.java.pl.wat.wel.projekt.pumo.electronicband.ListsAndAdapters.ListAdapter.java", "BodyUseAPI": ["pl.wat.wel.projekt.pumo.electronicband.ListsAndAdapters.List.getPictureID()", "android.widget.ImageView.setImageResource(currentList.getPictureID())"], "Fixed commit": "c416701e8cf3935e1e30af122ada6a69fd3e1017", "Url": "https://api.github.com/repos/suchecki300/ElectronicBand", "Date": "2017-05-23T16:26:12Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((verse.getVerse()) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/9109/buggy-version/src.main.java.org.crosswire.jsword.passage.BitwisePassage.java", "BodyUseAPI": [], "Fixed commit": "120eadca09f090de1dcd02b7c4f8cf061dd9a3d5", "Url": "https://api.github.com/repos/mjdenham/jsword", "Date": "2012-10-01T09:02:53Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dnConf.getEncryptDataTransfer()) && (!(dnConf.getTrustedChannelResolver().isTrusted(socket.getInetAddress())))) { encKeySupplier = new com.google.common.base.Supplier<org.apache.hadoop.hdfs.security.token.block.DataEncryptionKey>() { @java.lang.Override public org.apache.hadoop.hdfs.security.token.block.DataEncryptionKey get() { return blockPoolTokenSecretManager.generateDataEncryptionKey(block.getBlockPoolId()); } }; }else { encKeySupplier = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8562/buggy-version/hadoop-hdfs-project.hadoop-hdfs.src.main.java.org.apache.hadoop.hdfs.protocol.datatransfer.SaslDataTransferServer.java", "BodyUseAPI": [], "Fixed commit": "21e75bc396151eefd2966e968ea88c9414fc2ed1", "Url": "https://api.github.com/repos/cnauroth/hadoop-common", "Date": "2014-05-23T19:14:12Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dest.getParentFile().isDirectory())) { if (!(dest.getParentFile().mkdirs())) { android.util.Log.e(CyanideViewer.TAG, ((\"Could not create the directory \\\"\" + (dest.getAbsolutePath())) + \"\\\"\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/598/buggy-version/app.src.main.java.net.dean.cyanideviewer.api.comic.Comic.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "java.io.File.mkdirs()", "java.io.File.getParentFile()", "android.util.Log.e(CyanideViewer.TAG,java.lang.String)"], "Fixed commit": "f57b7e451ebfd6a0cf22436b0e12509831781a07", "Url": "https://api.github.com/repos/thatJavaNerd/CyanideViewer", "Date": "2014-05-01T00:46:19Z"},
{"Line": "=>1849", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((facetQuery.indexOf('[')) > (-1)) && ((facetQuery.lastIndexOf(']')) > (-1))) { name = facetQuery.substring(((facetQuery.indexOf('[')) + 1)); name = name.substring(0, name.lastIndexOf(']')).replaceAll(\"TO\", \"-\"); filter = facetQuery.substring(facetQuery.indexOf('[')); filter = filter.substring(0, ((filter.lastIndexOf(']')) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5099/buggy-version/dspace-api.src.main.java.org.dspace.discovery.SolrServiceImpl.java", "BodyUseAPI": ["java.lang.String.indexOf(char)", "java.lang.String.substring(int)", "java.lang.String.substring(int)", "java.lang.String.indexOf(char)"], "Fixed commit": "3bf90abf720a6e20a9efe46b77b57ed8fac756ac", "Url": "https://api.github.com/repos/TAMULib/DSpace", "Date": "2014-04-20T05:43:57Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((chests.size()) > 0) { org.bukkit.Location randomChest = chests.get(r.nextInt(((chests.size()) - 1))); randomChest.add(0, 1, 0); randomChest.getWorld().spawnEntity(randomChest, EntityType.SILVERFISH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1307/buggy-version/src.plugin.SilverfishTick.java", "BodyUseAPI": ["java.util.List<org.bukkit.Location>.get(int)", "java.util.Random.nextInt(((chests.size()) - 1))", "java.util.List<org.bukkit.Location>.size()"], "Fixed commit": "63ed42d07149cd557e4838b798cc494811cf7248", "Url": "https://api.github.com/repos/PlugMania/NeedForFridge", "Date": "2012-07-23T17:59:34Z"},
{"Line": "=>536", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ship.getOwner()) == null) owner = \"None\"; else if (ownerPlayer == null) owner = org.bukkit.Bukkit.getOfflinePlayer(ship.getOwner()).getName(); else owner = ownerPlayer.getName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5245/buggy-version/src.main.java.com.gmail.Rhisereld.HorizonShips.ShipHandler.java", "BodyUseAPI": ["com.gmail.Rhisereld.HorizonShips.Ship.getOwner()", "org.bukkit.Bukkit.getOfflinePlayer(ship.getOwner()).getName()", "org.bukkit.Bukkit.getOfflinePlayer(ship.getOwner())"], "Fixed commit": "1675716ff9a7bb23f939a70c002d9c6dfe25a4fa", "Url": "https://api.github.com/repos/LonelyNeptune/HorizonShips", "Date": "2015-11-19T16:05:07Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (logFile.exists()) { java.nio.file.Files.delete(logFile.toPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7724/buggy-version/src.main.java.com.github.wasiqb.coteafs.appium.service.AppiumServer.java", "BodyUseAPI": ["java.io.File.toPath()", "java.nio.file.Files.delete(java.nio.file.Path)"], "Fixed commit": "386356391fc88a755cf85fc661a0705db7dc6c1d", "Url": "https://api.github.com/repos/WasiqB/coteafs-appium", "Date": "2017-10-31T16:57:58Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.googlecode.protoclipse.compiler.ProtoBufCompiler.getJavaSourceFolderForFile(org.eclipse.core.resources.IFile)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.googlecode.protoclipse.compiler.ProtoBufCompiler.isMavenStyleJavaSourceFolder(srcFolder)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2771/buggy-version/protoclipse-compiler.src.com.googlecode.protoclipse.compiler.ProtoBufCompiler.java", "BodyUseAPI": [], "Fixed commit": "843b0768ebe4d55dbf5bd866afe33093a0b80a47", "Url": "https://api.github.com/repos/junit/Protoclipse-AS3", "Date": "2013-12-02T02:49:22Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.block.BlockIgniteEvent.getIgnitingEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (entity instanceof org.bukkit.entity.FallingBlock) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8920/buggy-version/src.main.java.xyz.jaoafa.mymaid.EventHandler.OnEntityChangeBlockEvent.java", "BodyUseAPI": [], "Fixed commit": "13116457888d5c5f0bc63307cbb9a1f6f1e24e22", "Url": "https://api.github.com/repos/book000/MyMaid", "Date": "2016-10-23T08:45:18Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (oldSubNames == null) { oldSubNames = new Creator.Circuit(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4481/buggy-version/PanelCreator.src.Creator.SuctionGroup.java", "BodyUseAPI": [], "Fixed commit": "3c1ade3200ce218d3d70d79fff75cf3b2ecb38c4", "Url": "https://api.github.com/repos/NeelandsEric/BackgroundCreator", "Date": "2016-07-07T18:45:51Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (str != null) { temp = str.toCharArray(); for (int i = 0; i < (str.length()); i++) { if (rules.containsKey(temp[i])) { temp[i] = rules.get(temp[i]); } } str = java.lang.String.valueOf(temp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4449/buggy-version/CharReplace.src.code.CharReplace.java", "BodyUseAPI": ["java.lang.String.toCharArray()", "java.lang.String.length()"], "Fixed commit": "a34e45ee3bdcabf2b797a6f23e980a26252475f4", "Url": "https://api.github.com/repos/shubham1906/ConcurModules", "Date": "2017-09-21T15:39:05Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.length()) > 2) { sb.setLength(((sb.length()) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/9145/buggy-version/src.ox.Log.java", "BodyUseAPI": ["java.lang.StringBuilder.setLength(int)", "java.lang.StringBuilder.length()"], "Fixed commit": "9a0bb0616351679043640c1d4f55f11e7aa6e498", "Url": "https://api.github.com/repos/mirraj2/ox", "Date": "2016-10-25T00:56:39Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((feed.getImage()) != null) { channel.setImage(feed.getImage().getUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6422/buggy-version/Podcast_Listener.src.edu.android.podcast_listener.FindCastsResultsActivity.java", "BodyUseAPI": ["com.google.code.rome.android.repackaged.com.sun.syndication.feed.synd.SyndFeed.getImage()", "feed.getImage().getUrl()", "edu.android.podcast_listener.rss.Channel.setImage(feed.getImage().getUrl())"], "Fixed commit": "223562506d3ab58f1eb1e5f20a9a1f0416be8c84", "Url": "https://api.github.com/repos/DFried10/droid-podcast-player", "Date": "2013-02-07T20:30:37Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (len == 0) { return message; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/435/buggy-version/app.src.main.java.com.example.michal.smsencryption.Encryption.java", "BodyUseAPI": [], "Fixed commit": "7a37138c09640d8f6d69d0138e3834c0aa1e0994", "Url": "https://api.github.com/repos/mwolszleger/SmsEncryption", "Date": "2017-01-30T18:25:05Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSpecal) { this.keyPoint[0] = points[1]; }else { this.keyPoint[0] = points[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5834/buggy-version/src.Deck.java", "BodyUseAPI": [], "Fixed commit": "85fee3a2cd88b6f56d8049e4e8ab463a4290d8a5", "Url": "https://api.github.com/repos/twzyliu/Poker", "Date": "2016-11-09T17:37:37Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) { analysisProtocolCollectionTandem = fdr.getAnalysisProtocolCollection(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5820/buggy-version/src.main.java.uk.ac.liv.mzidlib.multiplesearch.CombineSearchEngines.java", "BodyUseAPI": [], "Fixed commit": "825cf708184a8246dd2355b32444ce4ee2821a34", "Url": "https://api.github.com/repos/UKQIDA/mzidlib", "Date": "2016-04-14T13:18:40Z"},
{"Line": "=>595", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mWasPlugged) && (!isPlugged)) pause();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7811/buggy-version/app.src.main.java.org.fasola.fasolaminutes.PlaybackService.java", "BodyUseAPI": [], "Fixed commit": "684da74e534b3405cc9d0c12337d049042b60432", "Url": "https://api.github.com/repos/mrichards42/fasola_android", "Date": "2016-02-03T20:05:43Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (t == null) { dataVisit.add(new list.VisitItem(dateVisit, dictHosp.get(nameHosp), s, dictCat.get(cat_doc), \"0\")); }else { dataVisit.add(new list.VisitItem(dateVisit, dictHosp.get(nameHosp), s, dictCat.get(cat_doc), t)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7357/buggy-version/Documents.NetBeansProjects.ias.src.java.dataBean.FilterVisits.java", "BodyUseAPI": ["java.util.ArrayList.add(list.VisitItem)"], "Fixed commit": "81637e43842071c32a33faf6acaf1d735e106c9f", "Url": "https://api.github.com/repos/komolov-andrey/ias", "Date": "2017-02-05T09:48:58Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x == xx) && (y == yy)) { java.lang.System.out.print('O'); }else if (grid[x][y]) { java.lang.System.out.print('-'); }else { java.lang.System.out.print('X'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1875/buggy-version/MortalClient.src.in.nickma.mortal.solving.Solver.java", "BodyUseAPI": [], "Fixed commit": "0c06f1a0e19837304da7d5cd7e93706967d37471", "Url": "https://api.github.com/repos/TheNickmaster21/Mortal", "Date": "2017-08-22T17:17:29Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((time) < 50) { factor = 0.9; }else if ((time) < 100) { factor = 1.4; }else if ((time) < 125) { factor = 1.2; }else if ((time) < 150) { factor = 0.9; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7057/buggy-version/src.org.rhwlab.BHC.BHCTree.java", "BodyUseAPI": [], "Fixed commit": "8aaf2b6f55219d5b876c2507515e7b784e8011e5", "Url": "https://api.github.com/repos/gevirl/Ace-3D", "Date": "2017-05-04T16:55:05Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((loc.getExpression()) != null) { if ((loc.accept(this)) != (Type.INT)) { addError(loc, \"Type error in Array index Expressio:[expr],expr must be an Int expression \"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/198/buggy-version/src.compilador.ir.semcheck.TypeCheckVisitor.java", "BodyUseAPI": ["ir.semcheck.ArrayLocation.accept(ir.semcheck.TypeCheckVisitor)", "ir.semcheck.TypeCheckVisitor.addError(ir.semcheck.ArrayLocation,java.lang.String)"], "Fixed commit": "90856bc72afb30e411dc33162b3a748ac24047f1", "Url": "https://api.github.com/repos/mpolitano/compilador", "Date": "2014-09-20T20:18:36Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((day.timeSlots.size()) > j) { timeSlots.add(day.timeSlots.get(j)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1213/buggy-version/src.se.kth.hugosa.schedule.Evaluator.java", "BodyUseAPI": ["java.util.List<se.kth.hugosa.schedule.TimeSlot>.add(day.timeSlots.get(j))", "day.timeSlots.get(int)"], "Fixed commit": "bd6e12a4aaba81020c08c3ab7a2e6ef99345a8e1", "Url": "https://api.github.com/repos/hugoflug/schedule", "Date": "2014-03-06T13:44:00Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (collides(timeSlots)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1213/buggy-version/src.se.kth.hugosa.schedule.Evaluator.java", "BodyUseAPI": [], "Fixed commit": "bd6e12a4aaba81020c08c3ab7a2e6ef99345a8e1", "Url": "https://api.github.com/repos/hugoflug/schedule", "Date": "2014-03-06T13:44:00Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.ifmo.md.lesson8.MainActivity.getLastCustomNonConfigurationInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (saved == null) { android.util.Log.d(TAG, \"First time create\"); android.content.Intent intent = new android.content.Intent(this, ru.ifmo.md.lesson8.UpdateService.class); startService(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4711/buggy-version/app.src.main.java.ru.ifmo.md.lesson8.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "008762f5cdd877ec4450c1c6d6a8908131f7d274", "Url": "https://api.github.com/repos/gerra/lesson8", "Date": "2014-12-14T16:59:11Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeLeft.getState()) == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6514/buggy-version/app.src.main.java.io.github.celestialphineas.sanxing.UICalendarViews.TimeLeftCalendarFragment.java", "BodyUseAPI": [], "Fixed commit": "58339500764d04b0faae9ac50ab2d71a58bb0b38", "Url": "https://api.github.com/repos/AndroidNewbies/Sanxing", "Date": "2017-12-23T15:41:52Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(next.hasMoved)) { next.energy -= Params.rest_energy_cost; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1651/buggy-version/src.project4.Critter.java", "BodyUseAPI": [], "Fixed commit": "31928d8526d5d5382b3e7f90c013c49873ef9f9c", "Url": "https://api.github.com/repos/danny-vo/CritterWorld", "Date": "2016-07-21T19:02:56Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (configuration.isAutoStartTx()) begin();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/51/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientTransactionalGraph.java", "BodyUseAPI": [], "Fixed commit": "4d5665d505d586240290c9af1aa7e7bd51932e6d", "Url": "https://api.github.com/repos/leusonmario/orientdb", "Date": "2015-02-26T20:01:37Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (path.isDirectory()) { paths.add(path); }else if (path.exists()) { paths.add(path.getParentFile()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6794/buggy-version/src.net.noiseinstitute.less.DefaultFileResolver.java", "BodyUseAPI": [], "Fixed commit": "952395fa75dd074e3a923319f29296e0e21c00ab", "Url": "https://api.github.com/repos/djcsdy/less.java", "Date": "2011-07-14T22:24:28Z"},
{"Line": "=>1064", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.imp.pdb.facts.util.TrieMap.AbstractNode<K, V>.updated(java.util.concurrent.atomic.AtomicReference<java.lang.Thread>,K,int,V,int,java.util.Comparator<java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (subNodeResult.hasReplacedValue()) return org.eclipse.imp.pdb.facts.util.TrieMap.AbstractNode.Result.updated(editableNode, subNodeResult.getReplacedValue());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1977/buggy-version/src.org.eclipse.imp.pdb.facts.util.TrieMap.java", "BodyUseAPI": ["org.eclipse.imp.pdb.facts.util.TrieMap.AbstractNode.Result.updated(org.eclipse.imp.pdb.facts.util.TrieMap.InplaceIndexNode<K, V>,V)", "org.eclipse.imp.pdb.facts.util.TrieMap.AbstractNode.Result<K, V>.getReplacedValue()"], "Fixed commit": "e61d275979d79be60e5fb392c5b80f07dc494ce1", "Url": "https://api.github.com/repos/impulse-org/pdb.values", "Date": "2014-02-07T17:22:03Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.buildmlearn.toolkit.activity.TemplateEditor.4.saveProject()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((savedFilePath == null) || ((savedFilePath.length()) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5894/buggy-version/source-code.app.src.main.java.org.buildmlearn.toolkit.activity.TemplateEditor.java", "BodyUseAPI": [], "Fixed commit": "89c769df308676bbb76350779ad9630f7325e245", "Url": "https://api.github.com/repos/BuildmLearn/BuildmLearn-Toolkit-Android", "Date": "2015-08-16T18:35:08Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<biz.ganttproject.core.table.ColumnList.Column>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((TaskDefaultColumn.COST.getStub().getID().equals(column.getID())) || (ResourceDefaultColumn.STANDARD_RATE.getStub().getID().equals(column.getID()))) { cell.setHorizontalAlignment(PdfPCell.ALIGN_RIGHT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7696/buggy-version/org.ganttproject.impex.htmlpdf.src.org.ganttproject.impex.htmlpdf.itext.ThemeImpl.java", "BodyUseAPI": [], "Fixed commit": "671e81ef5310ac8030011788af1e3ad5ba43dd57", "Url": "https://api.github.com/repos/bardsoftware/ganttproject", "Date": "2015-06-18T22:20:31Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tasking.TaskDAO.getInstance(getContext()).getTasks()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tasks.size()) == 0) { createTask.setVisibility(View.GONE); arrow.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6069/buggy-version/app.src.main.java.com.tasking.WaitingTab.java", "BodyUseAPI": [], "Fixed commit": "d5cea33c039ac5221d01f3d0c4957dc4d8c06c83", "Url": "https://api.github.com/repos/DassiShenkar/TasKing", "Date": "2016-03-26T13:10:38Z"},
{"Line": "=>1044", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((table.getRowCount()) == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7053/buggy-version/src.frontend.org.voltdb.jdbc.JDBC4ResultSet.java", "BodyUseAPI": [], "Fixed commit": "293152e2aed5876f73cee754d08dd8cca4c0110c", "Url": "https://api.github.com/repos/AsherBond/voltdb", "Date": "2014-05-30T16:49:55Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(key.equals(\"\"))) de.Maxr1998.xposed.maxlock.Util.PREFS_KEY.edit().putString(Common.KEY_PREFERENCE, key).commit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3536/buggy-version/app.src.main.java.de.Maxr1998.xposed.maxlock.Util.java", "BodyUseAPI": ["de.Maxr1998.xposed.maxlock.Util.PREFS_KEY.edit().putString(Common.KEY_PREFERENCE, key).commit()", "de.Maxr1998.xposed.maxlock.Util.PREFS_KEY.edit().putString(Common.KEY_PREFERENCE,java.lang.String)"], "Fixed commit": "aa81e2d37bc9edd799796254b7772da8bf66391a", "Url": "https://api.github.com/repos/Maxr1998/MaxLock", "Date": "2014-12-20T14:54:51Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (descriptor instanceof com.opensymphony.workflow.loader.FunctionDescriptor) value = ((java.lang.String) (((com.opensymphony.workflow.loader.FunctionDescriptor) (descriptor)).getArgs().get(key))); else if (descriptor instanceof com.opensymphony.workflow.loader.ConditionDescriptor) value = ((java.lang.String) (((com.opensymphony.workflow.loader.ConditionDescriptor) (descriptor)).getArgs().get(key)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5512/buggy-version/src.main.java.uk.org.sappho.jira.workflow.approvals.SingleStringFactory.java", "BodyUseAPI": [], "Fixed commit": "06e88b2e01da512821a70ab745cdd774c128e1c5", "Url": "https://api.github.com/repos/sappho/sappho-jira-workflow-approvals", "Date": "2011-04-18T13:54:00Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCardType()) != null) { cardType = getCardType().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1658/buggy-version/citruslibrary.src.com.citrus.card.Card.java", "BodyUseAPI": [], "Fixed commit": "dba1b1cad8868e83c7bbfa9ccd398dcf8cb6f065", "Url": "https://api.github.com/repos/Flutterbee/open-android-v2", "Date": "2015-04-04T15:26:25Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((state == (com.github.javaparser.ast.comments.CommentsParser.State.IN_STRING)) && (prevTwoChars.peekLast().equals('\\\\'))) && (c == '\\\\')) { while (!(prevTwoChars.isEmpty())) { prevTwoChars.remove(); } prevTwoChars.add(com.github.javaparser.ast.comments.CommentsParser.INNOCUOS_CHAR); prevTwoChars.add(com.github.javaparser.ast.comments.CommentsParser.INNOCUOS_CHAR); }else { prevTwoChars.remove(); prevTwoChars.add(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/87/buggy-version/javaparser-core.src.main.java.com.github.javaparser.ast.comments.CommentsParser.java", "BodyUseAPI": ["java.util.Deque.remove()", "java.util.Deque.remove()", "java.util.Deque.add(char)", "java.util.Deque.add(char)", "java.util.Deque.add(char)", "java.util.Deque.isEmpty()"], "Fixed commit": "9990152c7884a9af2ed18bc3c8fd529050fbecd9", "Url": "https://api.github.com/repos/javaparser/javaparser", "Date": "2015-10-28T18:32:37Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ecl.internal.core.IMarkeredPipe.take(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (take instanceof org.eclipse.core.runtime.IStatus) { return ((org.eclipse.core.runtime.IStatus) (take)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6440/buggy-version/plugins.org.eclipse.ecl.debug.runtime.src.org.eclipse.ecl.debug.runtime.Session.java", "BodyUseAPI": [], "Fixed commit": "5e64c42c9e7672f7712d58c3fdd495ad2a4b193a", "Url": "https://api.github.com/repos/xored/ecl", "Date": "2013-09-02T15:47:41Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((buildings[i][j]) != null) { buildings[i][j].update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/740/buggy-version/VillageCraft.src.world.Village.java", "BodyUseAPI": ["buildings[i][j].update()"], "Fixed commit": "c795d58c1fc3977806307bf008a27b40ae0d163a", "Url": "https://api.github.com/repos/00benallen/VillageCraft", "Date": "2014-10-21T12:55:25Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((column instanceof org.safris.xdb.xds.xe.$xds_clob) || (column instanceof org.safris.xdb.xds.xe.$xds_blob)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7636/buggy-version/schema.src.main.java.org.safris.xdb.schema.spec.SQLSpec.java", "BodyUseAPI": [], "Fixed commit": "09e29a1044f7680656beed1dbd1d95a6729458d9", "Url": "https://api.github.com/repos/libx4j/rdb", "Date": "2016-12-23T03:39:35Z"},
{"Line": "=>903", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((SelectOperationMode2.getSelectedIndex()) == 1) { ChangeParametersButton3.setEnabled(false); }else { ChangeParametersButton3.setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/428/buggy-version/TrainSystem.src.com.rogueone.ctc.gui.CommandTrackControlGUI.java", "BodyUseAPI": [], "Fixed commit": "8951ae7307bf3796cc376a4204c789d9854aa866", "Url": "https://api.github.com/repos/JKenneson/ECE1186", "Date": "2017-02-08T04:09:42Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(target.getWorld().getName().equals(missile.getWorld().getName()))) { missile.getWorld().playEffect(missile.getLocation(), Effect.POTION_BREAK, 1); removeMissile(missile); endThisTask(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3884/buggy-version/src.main.java.org.bitbucket.ucchy.stinger.HormingTask.java", "BodyUseAPI": ["org.bitbucket.ucchy.stinger.HormingTask.removeMissile(org.bukkit.entity.Projectile)", "org.bukkit.entity.Projectile.getWorld()", "missile.getWorld().playEffect(missile.getLocation(),Effect.POTION_BREAK,int)", "org.bukkit.entity.Projectile.getLocation()"], "Fixed commit": "ba6e998f59b2da4f6c109f8f2196a2125869dd98", "Url": "https://api.github.com/repos/ucchyocean/StingerMissile", "Date": "2015-02-06T16:36:08Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.chinastis.downloaddemo.ProgressDownloadFile.okHttpClient) == null) { com.chinastis.downloaddemo.ProgressDownloadFile.okHttpClient = new okhttp3.OkHttpClient.Builder().addNetworkInterceptor(interceptor).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1740/buggy-version/app.src.main.java.com.chinastis.downloaddemo.ProgressDownloadFile.java", "BodyUseAPI": [], "Fixed commit": "89d789eca8951b09c67a7276c0f3e696fdb19e77", "Url": "https://api.github.com/repos/hylinslove/ProgressUpload", "Date": "2017-12-15T08:35:05Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<edu.cmu.ml.proppr.prove.wam.plugins.FactsPlugin.JumpArgKey, java.util.List<java.lang.String[]>>.get(edu.cmu.ml.proppr.prove.wam.plugins.FactsPlugin.JumpArgKey)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (alternate == null) alternate = new java.util.ArrayList<java.lang.String[]>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/9148/buggy-version/src.java.main.edu.cmu.ml.proppr.prove.wam.plugins.FactsPlugin.java", "BodyUseAPI": [], "Fixed commit": "e77e52968a9ca4dd1b59d0ee776e23b5ead7ebda", "Url": "https://api.github.com/repos/TeamCohen/ProPPR", "Date": "2015-01-07T20:48:24Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fredboat.orchestrator.Allocator.getLowestAvailableChunk()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (chunk == (-1)) { throw new java.lang.IllegalStateException(\"Can't allocate new shards! All shards are already taken.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2626/buggy-version/Orchestrator.src.main.java.fredboat.orchestrator.Allocator.java", "BodyUseAPI": [], "Fixed commit": "6ac95e71d925fdc2dd1549407368bbe20b89c2bf", "Url": "https://api.github.com/repos/napstr/FredBoat", "Date": "2017-04-28T19:49:26Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.riddenByEntity) != null) { net.minecraft.entity.EntityLivingBase eLB = ((net.minecraft.entity.EntityLivingBase) (entity)); eLB.attackEntityFrom(new net.minecraft.util.DamageSource(randomDethMessage()), 5); if (eLB instanceof net.minecraft.entity.monster.EntityCreeper) { net.minecraft.entity.monster.EntityCreeper eC = ((net.minecraft.entity.monster.EntityCreeper) (eLB)); eC.setCreeperState(1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3553/buggy-version/src.main.java.com.projectreddog.machinemod.entity.EntityMachineModRideable.java", "BodyUseAPI": [], "Fixed commit": "a7da9cf5ef0256c06cef3864c8f5dc2996b04610", "Url": "https://api.github.com/repos/TechStack/TechStack-s-HeavyMachineryMod", "Date": "2015-02-21T14:57:16Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (model == null) { throw new java.lang.IllegalArgumentException(((\"Model from \" + (modelAdapter.getModelClass())) + \" was null\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3503/buggy-version/library.src.main.java.com.raizlabs.android.dbflow.sql.SqlUtils.java", "BodyUseAPI": [], "Fixed commit": "cc1204fab23f78c49b7a1490de74ddc2e5c9da6d", "Url": "https://api.github.com/repos/Raizlabs/DBFlow", "Date": "2015-02-02T15:23:04Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTouching(Shark.class)) { if ((Game.HP.value) > 0) { Game.HP.subtract(50); getWorld().removeObject(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2403/buggy-version/Shark-eiei.Burst.java", "BodyUseAPI": [], "Fixed commit": "06020a9df14b642910a07c20f7982fdf44be96fa", "Url": "https://api.github.com/repos/bonusjatupat/game2", "Date": "2017-04-01T07:57:06Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(R.id.exo_player_not_found_text_view)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (exoPlayerNotFoundTextView != null) { exoPlayerNotFoundTextView.setText(getString(R.string.error_message)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8716/buggy-version/app.src.main.java.popmovies.com.example.android.baking_app.fragments.StepFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(getString(R.string.error_message))"], "Fixed commit": "b84a11083bdf745f27ce1e1666260f48f389b0f2", "Url": "https://api.github.com/repos/seth-wat/baking-app", "Date": "2017-10-06T20:05:30Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (block instanceof edu.chalmers.blockster.core.objects.EmptyBlock) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6575/buggy-version/Blockster.core.src.main.java.edu.chalmers.blockster.core.objects.Player.java", "BodyUseAPI": [], "Fixed commit": "7966ec105952876a400322063320adabc7ef53d8", "Url": "https://api.github.com/repos/oskarjonefors/TDA367", "Date": "2014-05-13T10:45:47Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((node.getX()) > ((this.nodeMap.length) - 1)) || ((node.getX()) < 0)) || ((node.getY()) > ((this.nodeMap[0].length) - 1))) || ((node.getY()) < 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6426/buggy-version/mists-game.src.main.java.com.nkoiv.mists.game.world.pathfinding.AStarPathfinder.java", "BodyUseAPI": [], "Fixed commit": "f7699b3ecbd3b2d33f8b9f9c50cf5b803f4cc906", "Url": "https://api.github.com/repos/nkoiv/mists", "Date": "2016-03-30T12:15:44Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((null != path) && (folder.isDirectory())) { for (java.lang.String fileName : folder.list()) { if (path.equals(\"\")) { com.tale.utils.ZipUtils.addFileToZip(folder.getName(), ((srcFolder + \"/\") + fileName), zip); }else { com.tale.utils.ZipUtils.addFileToZip(((path + \"/\") + (folder.getName())), ((srcFolder + \"/\") + fileName), zip); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4620/buggy-version/src.main.java.com.tale.utils.ZipUtils.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.io.File.list()", "com.tale.utils.ZipUtils.addFileToZip(java.lang.String,java.lang.String,java.util.zip.ZipOutputStream)", "java.io.File.getName()", "com.tale.utils.ZipUtils.addFileToZip(java.lang.String,java.lang.String,java.util.zip.ZipOutputStream)", "java.io.File.getName()"], "Fixed commit": "9fdff6eecf12352bffa11273d5a69875ee60d33d", "Url": "https://api.github.com/repos/pkwenda/tale", "Date": "2017-02-26T03:47:37Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (app.park.com.MainActivity.mBluetoothFragment.isBluetoothConnected()) { app.park.com.MainActivity.updateUi(Constants.MESSAGE_BT_CONNECTED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4402/buggy-version/app.src.main.java.app.park.com.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "db7b946b60e1a97430fb35551a53a1dd61e1e9a5", "Url": "https://api.github.com/repos/EvanHa/dt-demo", "Date": "2016-09-21T14:17:28Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((Settings.instance.getProperty(\"location_x\")) == null) setLocationRelativeTo(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7540/buggy-version/src.main.java.nl.thanod.dragnshare.DropZone.java", "BodyUseAPI": [], "Fixed commit": "36bc0f1f2968b87ea0d722180270b5e26fb3aac4", "Url": "https://api.github.com/repos/koenbollen/dragnshare", "Date": "2011-10-17T15:26:54Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((n.x) < 0) || ((n.x) >= (width))) || ((n.y) < 0)) || ((n.y) >= (height))) { return ret; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2660/buggy-version/src.Controller.Pathfinder.java", "BodyUseAPI": [], "Fixed commit": "1f489c71bcc7d7b7b114915e7d97180128aec39a", "Url": "https://api.github.com/repos/Pessimus/KandidatarbeteAI", "Date": "2016-03-31T12:33:23Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPunishmentData()) != null) { getPunishmentData().save(PunishmentData.table, \"uuid\", getUUID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6407/buggy-version/src.main.java.com.thebubblenetwork.bubblebungee.player.ProxiedBubblePlayer.java", "BodyUseAPI": [], "Fixed commit": "6b40fb7da2d0b2d480712747872ebf9a0b8ddffb", "Url": "https://api.github.com/repos/BubbleNetwork/BubbleBungee", "Date": "2016-04-10T13:48:42Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.camel.Exchange.getProperty(CxfConstants.DATA_FORMAT_PROPERTY,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(DataFormat.CXF_MESSAGE.equals(dataFormat))) { for (java.util.Map.Entry<java.lang.String, javax.activation.DataHandler> entry : camelExchange.getIn().getAttachments().entrySet()) { if (attachments == null) { attachments = new java.util.HashSet<org.apache.cxf.message.Attachment>(); } org.apache.cxf.attachment.AttachmentImpl attachment = new org.apache.cxf.attachment.AttachmentImpl(entry.getKey(), entry.getValue()); attachment.setXOP(isXop); attachments.add(attachment); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5430/buggy-version/components.camel-cxf.src.main.java.org.apache.camel.component.cxf.DefaultCxfBinding.java", "BodyUseAPI": [], "Fixed commit": "1ae2a56e84f33118f03ed64d924d6ec47a16e958", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-05-29T13:25:11Z"},
{"Line": "=>537", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hasPoly) != (-1)) { updateBusLocation(hasPoly); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2934/buggy-version/app.src.main.java.com.dave_cs.BroncoShuttlePlusMobile.LiveMaps.LiveMapsActivity.java", "BodyUseAPI": [], "Fixed commit": "661cc20a857d55905fe76eba3f9eaab1c1d1d42a", "Url": "https://api.github.com/repos/dave-luk/BroncoShuttlePlusMobile", "Date": "2016-12-25T23:39:02Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((e.getDescription().contains(\"abidirectional\")) && (ne.getDescription().contains(\"abidirectional\"))) || ((e.getDescription().contains(\"dbidirectional\")) && (ne.getDescription().contains(\"dbidirectional\")))) && (((e.getHead().equals(ne.getHead())) && (e.getTail().equals(ne.getTail()))) || ((e.getHead().equals(ne.getTail())) && (e.getTail().equals(ne.getHead()))))) && (!(e.equals(ne)))) { if (e.getDescription().contains(\"many\")) { this.gonDie.add(ne); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/54/buggy-version/src.GraphBuilding.DuplicateDependencyEdgeChecker.java", "BodyUseAPI": ["e.getDescription().contains(java.lang.String)", "java.util.HashSet<ProgramGraph.IEdge>.add(ProgramGraph.IEdge)", "ProgramGraph.IEdge.getDescription()"], "Fixed commit": "53fd7abcc04164ed1c6f1a6baa8c1a0ba239cd38", "Url": "https://api.github.com/repos/gilderjw/SwagLagsUMLGenerator", "Date": "2017-01-26T22:38:44Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fragmentName.equals(com.medziku.motoresponder.activity.SettingsActivity.RIDING_SETTINGS_PREFERENCE_FRAGMENT_NAME)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8592/buggy-version/app.src.main.java.com.medziku.motoresponder.activity.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "050113dd839a908fa38c9e857c9b3dd12989be61", "Url": "https://api.github.com/repos/orzechowskikamil/motoresponder", "Date": "2016-04-20T21:51:58Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((child.getKey()) != null) { parent.put(child.getKey(), child.getContent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5069/buggy-version/jaml-proportionHandlers.src.org.jaml.proportions.MapHandler.java", "BodyUseAPI": ["org.jaml.api.IKeyValuePair.getContent()", "java.util.Map.put(child.getKey(),child.getContent())", "org.jaml.api.IKeyValuePair.getKey()"], "Fixed commit": "26bca055c0bb17794f142ace9994c2f70f27e539", "Url": "https://api.github.com/repos/hblaub/JAML", "Date": "2011-08-30T18:17:54Z"},
{"Line": "=>586", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((profitAndLoss.getProfitNet()) <= 0) { panelIncomeTableRight.add(getLabelIncomeLossTitle()); panelIncomeTableRight.add(getLabelIncomeLoss()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8190/buggy-version/Client.src.de.client.gui.PanelFinancesBalance.java", "BodyUseAPI": [], "Fixed commit": "6d8214612e1a9d84bf534132fc6948d3ca1d3e06", "Url": "https://api.github.com/repos/ofrendo/Fallstudie", "Date": "2014-02-02T19:37:01Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (guess != numToGuess) { java.lang.System.out.println(\"Opps...your guess is not my number, try again...(1-10)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4666/buggy-version/comp1510LabExercises.src.lab07.Guess.java", "BodyUseAPI": [], "Fixed commit": "c78d40522b52e7fb10444d59f724aa1ff8b59272", "Url": "https://api.github.com/repos/havor/comp1510LabExercises", "Date": "2016-03-01T21:44:44Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((systemBarConfig.hasNavigtionBar()) && (systemBarConfig.isNavigationAtBottom())) { height += systemBarConfig.getNavigationBarHeight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6390/buggy-version/indicator.src.main.java.com.jiang.android.indicatordialog.IndicatorDialog.java", "BodyUseAPI": ["com.jiang.android.indicatordialog.SystemBarConfig.getNavigationBarHeight()"], "Fixed commit": "4b28ebc0cd62c7b93c77c161b33e49323490d845", "Url": "https://api.github.com/repos/jiang111/IndicatorDialog", "Date": "2017-05-26T07:53:04Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((appointments.size()) > 0) { service.loadPropertiesForItems(appointments, PropertySet.FirstClassProperties); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1392/buggy-version/app.src.main.java.ch.uzh.ifi.seal.bachelorthesis.rest.GetCalendarAsyncTask.java", "BodyUseAPI": ["microsoft.exchange.webservices.data.core.ExchangeService.loadPropertiesForItems(java.util.ArrayList<microsoft.exchange.webservices.data.core.service.item.Item>,PropertySet.FirstClassProperties)"], "Fixed commit": "899c3b8344e9492beb6a2b3990042a158b0c6d2a", "Url": "https://api.github.com/repos/ErosFricker/bachelor-thesis", "Date": "2016-05-06T12:41:06Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((appointments.size()) > 0) { service.loadPropertiesForItems(appointments, PropertySet.FirstClassProperties); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1392/buggy-version/app.src.main.java.ch.uzh.ifi.seal.bachelorthesis.rest.GetCalendarAsyncTask.java", "BodyUseAPI": ["microsoft.exchange.webservices.data.core.ExchangeService.loadPropertiesForItems(java.util.ArrayList<microsoft.exchange.webservices.data.core.service.item.Item>,PropertySet.FirstClassProperties)"], "Fixed commit": "899c3b8344e9492beb6a2b3990042a158b0c6d2a", "Url": "https://api.github.com/repos/ErosFricker/bachelor-thesis", "Date": "2016-05-06T12:41:06Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(configFile.exists())) { try { if (!(configFile.createNewFile())) log(\"Config file has not been created\"); } catch (java.io.IOException e) { log((\"Couldn't create config file: \" + (e.getMessage()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2192/buggy-version/mod_redstoneExtended.src.net.minecraft.src.mod_redstoneExtended.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "616a84664d6e58bd1b2c83153eb753b9df701df6", "Url": "https://api.github.com/repos/ClemensB/mod_redstoneExtended", "Date": "2011-05-17T16:03:31Z"},
{"Line": "=>1094", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(PropertyKeys.ALLOWED_CLIENT_OVERRIDE_KEYS)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (allowedClientOverrideKeys == null) { allowedClientOverrideKeys = java.util.Collections.emptySet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2637/buggy-version/d2.src.main.java.com.linkedin.d2.balancer.simple.SimpleLoadBalancerState.java", "BodyUseAPI": [], "Fixed commit": "25b7be640619e2689aefaf8b4276c3eb511a21f2", "Url": "https://api.github.com/repos/linkedin/rest.li", "Date": "2013-08-26T22:41:38Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((postListingURL.pathType()) != (RedditURLParser.PathType.SubredditPostListingURL)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8960/buggy-version/src.main.java.org.quantumbadger.redreader.fragments.PostListingFragment.java", "BodyUseAPI": [], "Fixed commit": "13194ba3ba1a29734c8d3faac5af1b3b94e82d86", "Url": "https://api.github.com/repos/Rroia/RedReader", "Date": "2014-04-26T10:36:59Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bestMacroclassifierParticipant >= 0) return bestMacroclassifierParticipant; else return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1310/buggy-version/gr.auth.ee.lcs.geneticalgorithm.selectors.TournamentSelector.java", "BodyUseAPI": [], "Fixed commit": "6ee39f07708bce029cd0b6ad42e4c208fd142e22", "Url": "https://api.github.com/repos/mallamanis/LCSFramework", "Date": "2011-03-29T17:06:24Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((inputStream != null) && ((inputStream.available()) > 0)) { cn.ladd.grpcx.config.Config.properties.load(inputStream); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1952/buggy-version/grpcx_core.src.main.java.cn.ladd.grpcx.config.Config.java", "BodyUseAPI": [], "Fixed commit": "7e9d79a247c5798a5b45305f075944db203bdf04", "Url": "https://api.github.com/repos/laddcn/grpcx", "Date": "2017-12-26T03:55:30Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((obavijestList.get(position).getDatumObjave()) != null) && ((obavijestList.get(position).getDatumObjave().getDate()) != null)) { viewHolder.datum.setText(com.autoskola.instruktori.helpers.Helper.parseDateForObavijesti(obavijestList.get(position).getDatumObjave().getDate())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1954/buggy-version/app.src.main.java.com.autoskola.instruktori.adapters.ObavijestiAdapter.java", "BodyUseAPI": ["obavijestList.get(position).getDatumObjave()", "java.util.List<com.autoskola.instruktori.services.model.Obavijest>.get(int)", "obavijestList.get(position).getDatumObjave().getDate()", "android.widget.TextView.setText(com.autoskola.instruktori.helpers.Helper.parseDateForObavijesti(obavijestList.get(position).getDatumObjave().getDate()))", "com.autoskola.instruktori.helpers.Helper.parseDateForObavijesti(obavijestList.get(position).getDatumObjave().getDate())"], "Fixed commit": "919ebb2b1be19565e35dc0e12a6e1732be33cd4e", "Url": "https://api.github.com/repos/harisbaljic/autoskola", "Date": "2015-02-02T20:17:25Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.rujel.autoitog.Prognosis.convertToItogMark(net.rujel.autoitog.NSArray,boolean,java.lang.StringBuffer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (itogMark != null) { net.rujel.autoitog.EOEnterpriseObject commentEO = itogMark.commentEO((timeout != null)); if (commentEO != null) Timeout.Utility.setTimeoutComment(commentEO, timeout); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1413/buggy-version/RujelAutoItog.Sources.net.rujel.autoitog.Prognosis.java", "BodyUseAPI": ["net.rujel.autoitog.ItogMark.commentEO((timeout != null))"], "Fixed commit": "26469f9a10e0b5b33aefb80a480305173586a4b5", "Url": "https://api.github.com/repos/baywind/rujel", "Date": "2013-05-30T08:21:25Z"},
{"Line": "=>689", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.senseidb.search.req.SenseiResult.getSortCollector()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sortCollector == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5884/buggy-version/sensei-core.src.main.java.com.senseidb.search.node.ResultMerger.java", "BodyUseAPI": [], "Fixed commit": "d662adbb50046f2b9f7f7ee9941310a676fcabfd", "Url": "https://api.github.com/repos/wonlay/sensei", "Date": "2012-03-31T02:40:08Z"},
{"Line": "=>968", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.senseidb.search.req.SenseiResult.getSortCollector()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sortCollector == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5884/buggy-version/sensei-core.src.main.java.com.senseidb.search.node.ResultMerger.java", "BodyUseAPI": [], "Fixed commit": "d662adbb50046f2b9f7f7ee9941310a676fcabfd", "Url": "https://api.github.com/repos/wonlay/sensei", "Date": "2012-03-31T02:40:08Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mContext) != null) notifyDataSetChanged();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8987/buggy-version/app.src.main.java.com.example.aleksa.androgen.adapter.SlidingAdapter.java", "BodyUseAPI": [], "Fixed commit": "c1a2267044b7ad2d9b7f365bde5e147dbe09b4f8", "Url": "https://api.github.com/repos/TheDeeKay/Androgen", "Date": "2016-04-25T13:28:24Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.query_last) != null) writeDate(json, \"query_last\", this.query_last.getTime());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2279/buggy-version/src.org.loklak.data.QueryEntry.java", "BodyUseAPI": [], "Fixed commit": "608c64ac4c87e652bb2c62dd7cce06e6bc67768b", "Url": "https://api.github.com/repos/loklak/loklak_server", "Date": "2015-06-10T16:24:14Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.retrieval_last) != null) writeDate(json, \"retrieval_last\", this.retrieval_last.getTime());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2279/buggy-version/src.org.loklak.data.QueryEntry.java", "BodyUseAPI": [], "Fixed commit": "608c64ac4c87e652bb2c62dd7cce06e6bc67768b", "Url": "https://api.github.com/repos/loklak/loklak_server", "Date": "2015-06-10T16:24:14Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.expected_next) != null) writeDate(json, \"expected_next\", this.expected_next.getTime());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2279/buggy-version/src.org.loklak.data.QueryEntry.java", "BodyUseAPI": [], "Fixed commit": "608c64ac4c87e652bb2c62dd7cce06e6bc67768b", "Url": "https://api.github.com/repos/loklak/loklak_server", "Date": "2015-06-10T16:24:14Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.retrieval_next) != null) writeDate(json, \"retrieval_next\", this.retrieval_next.getTime());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2279/buggy-version/src.org.loklak.data.QueryEntry.java", "BodyUseAPI": [], "Fixed commit": "608c64ac4c87e652bb2c62dd7cce06e6bc67768b", "Url": "https://api.github.com/repos/loklak/loklak_server", "Date": "2015-06-10T16:24:14Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.query_first) != null) writeDate(json, \"query_first\", this.query_first.getTime());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2279/buggy-version/src.org.loklak.data.QueryEntry.java", "BodyUseAPI": [], "Fixed commit": "608c64ac4c87e652bb2c62dd7cce06e6bc67768b", "Url": "https://api.github.com/repos/loklak/loklak_server", "Date": "2015-06-10T16:24:14Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != output) { for (java.lang.String outputLine : output) { android.util.Log.i(getClass().getName(), outputLine); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8643/buggy-version/app.src.main.java.com.github.yeriomin.yalpstore.SystemRemountTask.java", "BodyUseAPI": [], "Fixed commit": "6b13e4c8b7e46ab46db212c9865a56151d47b827", "Url": "https://api.github.com/repos/yeriomin/YalpStore", "Date": "2017-07-23T22:23:17Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.fe.builderStage.ShopMenu.getItem()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((i.getCost()) <= (back.getFunds())) { back.setFunds(((back.getFunds()) - (i.getCost()))); unit.addToInventory(i); cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7899/buggy-version/src.net.fe.builderStage.UnitBuilderStage.java", "BodyUseAPI": ["net.fe.unit.Item.getCost()", "net.fe.builderStage.TeamBuilderStage.setFunds(((back.getFunds()) - (i.getCost())))", "net.fe.unit.Unit.addToInventory(net.fe.unit.Item)", "net.fe.builderStage.TeamBuilderStage.getFunds()"], "Fixed commit": "f61a08628895b1c4b11c60d8db38b0eb2a2bc78e", "Url": "https://api.github.com/repos/chudooder/FEMultiplayer", "Date": "2014-01-13T03:58:16Z"},
{"Line": "=>1038", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(field.equals(\"type\"))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/472/buggy-version/src.catgen.in.javasrc.CatalogDiffEngine.java", "BodyUseAPI": [], "Fixed commit": "c1d83b1c91542d2a5d785bc3e26e1fb9aa5083ce", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2017-10-23T18:24:12Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playAnotherTurn) { playAnotherTurn = (checkIfPlayerWins().getState()) == (WinState.States.NOBODY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8928/buggy-version/engine.src.main.java.at.pwd.boardgame.game.mancala.MancalaGame.java", "BodyUseAPI": [], "Fixed commit": "15e140c35b8f8053e01cebd9d2519878577b40af", "Url": "https://api.github.com/repos/metzzo/mancala", "Date": "2017-07-21T15:29:21Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (container instanceof org.eclipse.cdt.debug.core.sourcelookup.AbsolutePathSourceContainer) { container = new melnorme.lang.ide.debug.core.LangAbsolutePathSourceContainer(); }else { container = type.createSourceContainer(type.getMemento(container)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3382/buggy-version/plugin_ide.debug.src-lang.melnorme.lang.ide.debug.core.LangSourceLookupDirector.java", "BodyUseAPI": ["org.eclipse.debug.core.sourcelookup.ISourceContainerType.getMemento(org.eclipse.debug.core.sourcelookup.ISourceContainer)", "org.eclipse.debug.core.sourcelookup.ISourceContainerType.createSourceContainer(type.getMemento(container))"], "Fixed commit": "db8560fb0945d2c0b43647d4cbd1191262beb105", "Url": "https://api.github.com/repos/bruno-medeiros/MelnormeEclipse", "Date": "2015-11-19T17:34:38Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3453/buggy-version/src.org.droidupnp.view.RendererFragment.java", "BodyUseAPI": [], "Fixed commit": "025c484170a16520865ba0ae4f99510b6bdf68d2", "Url": "https://api.github.com/repos/trishika/DroidUPnP", "Date": "2013-03-31T13:06:40Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (readableMap == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4989/buggy-version/android.src.main.java.im.shimo.sa.SensorsAnalyticsModule.java", "BodyUseAPI": [], "Fixed commit": "df351989a1a032d8656df61481fe57b13ed301a6", "Url": "https://api.github.com/repos/shimohq/react-native-sa", "Date": "2017-12-27T09:00:16Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["im.shimo.sa.SensorsAnalyticsModule.convertMapToJson(com.facebook.react.bridge.ReadableMap)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (object == null) { com.sensorsdata.analytics.android.sdk.SensorsDataAPI.sharedInstance(mContext).trackInstallation(event); }else { com.sensorsdata.analytics.android.sdk.SensorsDataAPI.sharedInstance(mContext).trackInstallation(event, object); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4989/buggy-version/android.src.main.java.im.shimo.sa.SensorsAnalyticsModule.java", "BodyUseAPI": ["com.sensorsdata.analytics.android.sdk.SensorsDataAPI.sharedInstance(mContext).trackInstallation(java.lang.String,org.json.JSONObject)"], "Fixed commit": "df351989a1a032d8656df61481fe57b13ed301a6", "Url": "https://api.github.com/repos/shimohq/react-native-sa", "Date": "2017-12-27T09:00:16Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shippingName != null) && (!(shippingName.isEmpty()))) { shippingName = billingName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4842/buggy-version/src.elm.FileFunctions.java", "BodyUseAPI": [], "Fixed commit": "e75444d41d2b05b8824449f1be3936d726445b08", "Url": "https://api.github.com/repos/noosh12/ELM", "Date": "2017-06-25T13:04:44Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (AudioManager.RINGER_MODE_CHANGED_ACTION.equals(intent.getAction())) { if (result.second) com.colossaldb.dnd.prefs.AppPreferences.getInstance().markRingerChangedManually(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8991/buggy-version/DonotDisturb.src.main.java.com.colossaldb.dnd.receivers.StartStopReceiver.java", "BodyUseAPI": [], "Fixed commit": "95d1fe6780783da3c11cf4cafd62c746fcd5ec00", "Url": "https://api.github.com/repos/jp9/DonotDisturb", "Date": "2014-06-02T04:46:20Z"},
{"Line": "=>729", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(playerSpecials.equals(\"\"))) { playerSpecials = playerSpecials.substring(1); com.semaphore_soft.apps.cypher.PortalActivity.serverService.writeToClient(((com.semaphore_soft.apps.cypher.networking.NetworkConstants.PREFIX_UPDATE_PLAYER_SPECIALS) + playerSpecials), playerId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6864/buggy-version/Source.Cypher.app.src.main.java.com.semaphore_soft.apps.cypher.PortalActivity.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "598974c17554fe11abd753e54fc370e484eabd02", "Url": "https://api.github.com/repos/semaphore-soft/Cypher", "Date": "2017-03-07T03:40:48Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(new java.io.File((vocabularyName + \".dat\")).exists())) vocabulary = new java.util.ArrayList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5340/buggy-version/src.com.dubyniak.bohdan.mycutevocabulary.interfaces.impls.FileStorage.java", "BodyUseAPI": [], "Fixed commit": "075a5bf62e8b78ba1b95eb457023e838d5e97082", "Url": "https://api.github.com/repos/b0hdan/MyVocabulary", "Date": "2017-07-16T17:52:08Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasExponentDigits) { return ((integerPrecision) + (exponent)) <= (givenPrecision - givenScale); }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2873/buggy-version/storage-api.src.java.org.apache.hadoop.hive.decimal.ScaledParse.java", "BodyUseAPI": [], "Fixed commit": "b66e158e044617bf89bceb1c79d9cd2bf6d540fb", "Url": "https://api.github.com/repos/pudidic/hive", "Date": "2016-11-10T15:16:33Z"},
{"Line": "=>573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().findFragmentById(R.id.prompt_frame)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (old != (mSurveyElements.get(index))) { clearPromptFrame(); android.support.v4.app.FragmentTransaction ft = getSupportFragmentManager().beginTransaction(); ft.add(R.id.prompt_frame, message).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1656/buggy-version/src.org.ohmage.activity.SurveyActivity.java", "BodyUseAPI": [], "Fixed commit": "c60382ff13f1cf4cf8beb521cdb5086c522a1e0e", "Url": "https://api.github.com/repos/ohmage/android-lib", "Date": "2013-10-11T18:29:29Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tachyon.client.WritableBlockChannel.write(java.nio.ByteBuffer)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (r > 0) { mWritten.addAndGet(r); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6999/buggy-version/core.src.main.java.tachyon.client.CountingWritableBlockChannel.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicLong.addAndGet(int)"], "Fixed commit": "95ed16472a3139aef4e2a05a7b0eb0ce4dcf1149", "Url": "https://api.github.com/repos/dcapwell/tachyon", "Date": "2014-09-11T03:46:38Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getLockCollection().count()) == 0) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3827/buggy-version/migramongo-core.src.main.java.com.rinoto.migramongo.dao.MongoLockService.java", "BodyUseAPI": [], "Fixed commit": "c0823f502c67fdbc760df9d56d40c6cc316f3ca5", "Url": "https://api.github.com/repos/rinoto/migramongo", "Date": "2016-08-23T14:07:56Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((todo.getImages()) == null) { java.util.List<com.chien.todolists.domain.Image> images = new java.util.ArrayList<>(); todo.setImages(images); }else { todo.getImages().clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/238/buggy-version/src.main.java.com.chien.todolists.form.TodoForm.java", "BodyUseAPI": ["com.chien.todolists.domain.Todo.getImages()", "com.chien.todolists.domain.Todo.setImages(java.util.List<com.chien.todolists.domain.Image>)", "todo.getImages().clear()"], "Fixed commit": "108f5226396eaa9a0f7d497441ea037eb4f431d7", "Url": "https://api.github.com/repos/levanchien/ProjectTodoLists", "Date": "2017-10-25T12:55:56Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((player1.getPokemon().isEmpty()) && (player2.getPokemon().isEmpty())) && (!hasSent)) && ((numberOfMon) > 1)) { hasSent = true; java.lang.String toSend = (new java.security.SecureRandom().nextBoolean()) ? \"PRChase The battle has reached it's final stage! And the tension is peaking ThunBeast\" : \"PRChase The Last Pokemon from Each Team takes the field. Will the Outcome of the battle be decided in the next turn? ThunBeast\"; b.sendMessage(channel, toSend); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1068/buggy-version/src.TPPDekuBot.MultiplayerBattle.java", "BodyUseAPI": [], "Fixed commit": "496a351461551440ed44d5ec3b88372f6d6316e4", "Url": "https://api.github.com/repos/robomaeyhem/WowBattleBot", "Date": "2016-05-01T14:22:34Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((favouritesView) != null) { setAdapter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6147/buggy-version/app.src.main.java.com.wii.sean.wiimmfiitus.fragments.FavouritesFragment.java", "BodyUseAPI": [], "Fixed commit": "53b2b336503fcd369e494c1e59895b3757105ff7", "Url": "https://api.github.com/repos/seanleavy/WiimmFiinndus", "Date": "2017-03-08T22:18:56Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kilogramm.mattermost.model.entity.notifyProps.NotifyProps.getVibration()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (vibrationString != null) vibrationOn = vibrationString.equals(\"true\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2156/buggy-version/app.src.main.java.com.kilogramm.mattermost.firebaseNotifications.NotificationHandler.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "b0534cc380b0e2fd2c0fbd0c46a161a356cb0f8a", "Url": "https://api.github.com/repos/chrisf-xp/Mattermost-Android-Native", "Date": "2017-11-09T08:26:27Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (itemPotEnabled) { itemPot = itemPotDefaultItems.clone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1218/buggy-version/src.com.darkblade12.itemslotmachine.slotmachine.SlotMachineBase.java", "BodyUseAPI": [], "Fixed commit": "6f310d63ecdf0436430388c37fdd8351e7e57286", "Url": "https://api.github.com/repos/DarkBlade12/ItemSlotMachine", "Date": "2015-05-24T18:01:17Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(word1.equals(\"-\"))) { unsplitwords.add(word1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2313/buggy-version/src.com.sjsu.wascengine.PdfExtract.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "061ff0fff09f776751fb765b9a0ca21b7a8451bc", "Url": "https://api.github.com/repos/tstullich/WASC-Engine", "Date": "2012-12-05T06:36:49Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.elytradev.teckle.api.capabilities.CapabilityWorldNetworkTile.getNetworkTileAtPosition(net.minecraft.world.World,net.minecraft.util.math.BlockPos,facing.getOpposite())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((neighbourNetworkTile.getNode()) == null) || ((neighbourNetworkTile.getNode().getNetwork()) == null)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3202/buggy-version/src.main.java.com.elytradev.teckle.api.capabilities.impl.ItemNetworkAssistant.java", "BodyUseAPI": [], "Fixed commit": "ce3becd7450fbd7b70bdec735a21c0c069e61b61", "Url": "https://api.github.com/repos/elytra/Teckle", "Date": "2017-08-28T01:49:04Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCurrentSpreadScaled()) { resetCurrentSpreadScale(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/9021/buggy-version/shopGunSdk.src.main.java.com.shopgun.android.sdk.pagedpublicationkit.PagedPublicationFragment.java", "BodyUseAPI": [], "Fixed commit": "7c926f044a3b6324e992cf8680db6e192106cd23", "Url": "https://api.github.com/repos/shopgun/shopgun-android-sdk", "Date": "2017-04-15T18:37:56Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (savedInstanceState.containsKey(ReaderConstants.ARG_POST_LIST_TYPE)) { mPostListType = ((org.wordpress.android.ui.reader.ReaderTypes.ReaderPostListType) (savedInstanceState.getSerializable(ReaderConstants.ARG_POST_LIST_TYPE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4389/buggy-version/src.org.wordpress.android.ui.reader.ReaderPostDetailFragment.java", "BodyUseAPI": ["android.os.Bundle.getSerializable(ReaderConstants.ARG_POST_LIST_TYPE)"], "Fixed commit": "b0c35116f6d0b75f8f94eaf7417ca91b2f10d0b3", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2014-05-24T14:37:06Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (button.getMovable()) logic.GameButtonLogic.setUpBattle(button); else if (cont.getSelectedButton().getPlayer().equals(button.getPlayer())) if (((button.getVal()) == 'B') || ((button.getVal()) == 'F')) return; else cont.setSelectedButton(button);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7688/buggy-version/src.logic.GameButtonLogic.java", "BodyUseAPI": ["cont.getSelectedButton().getPlayer().equals(button.getPlayer())", "ui.GameButton.getVal()", "logic.GameButtonLogic.setUpBattle(ui.GameButton)", "ui.GameButton.getVal()", "logic.Controller.setSelectedButton(ui.GameButton)", "ui.GameButton.getPlayer()"], "Fixed commit": "45f12e85c9b9f9bcae8fd5528cee817c74c4780b", "Url": "https://api.github.com/repos/woythadc194/StrategoGame", "Date": "2014-03-22T06:16:11Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((facets.size()) == 0) { return ok(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7898/buggy-version/app.controllers.SavedQueryController.java", "BodyUseAPI": [], "Fixed commit": "e9a987175bb4faaf16eaabbdd4d64711ef5cd6e5", "Url": "https://api.github.com/repos/ShadowSam/Sphinx", "Date": "2014-04-18T17:14:22Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pi == (datingSite.Global.PersonalInfo.Gender)) data = (data.equals(\"1\")) ? \"Female\" : \"Male\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3131/buggy-version/DatingSite.src.datingSite.Global.java", "BodyUseAPI": [], "Fixed commit": "cf23a7a40237242daf35f6fa5f321fbb59501f2c", "Url": "https://api.github.com/repos/dart-frog/DatingWebsite", "Date": "2014-05-28T16:36:12Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageBitMap) != null) { newMood.setMoodImg(imageBitMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6305/buggy-version/InTheMood.app.src.main.java.com.example.austin.inthemood.AddEditMood.java", "BodyUseAPI": [], "Fixed commit": "190abcd13fc49866da8f14c83cfa8483bf0ff48b", "Url": "https://api.github.com/repos/CMPUT301W17T15/InTheMood", "Date": "2017-04-03T20:36:43Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (length < (barSize)) { length = barSize; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7046/buggy-version/app.src.main.java.com.capstone.zacharyverbeck.loopspace.Models.Loop.java", "BodyUseAPI": [], "Fixed commit": "42382bfa9444c4bc75044ab6d21682e670e7b221", "Url": "https://api.github.com/repos/zachverb/Loop-Space", "Date": "2015-06-02T07:59:03Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.fineract.portfolio.group.service.Group.newGroup(org.apache.fineract.organisation.office.domain.Office,org.apache.fineract.organisation.staff.domain.Staff,org.apache.fineract.portfolio.group.service.Group,org.apache.fineract.portfolio.group.service.GroupLevel,java.lang.String,java.lang.String,boolean,org.joda.time.LocalDate,java.util.Set<org.apache.fineract.portfolio.client.domain.Client>,java.util.Set<org.apache.fineract.portfolio.group.service.Group>,org.joda.time.LocalDate,org.apache.fineract.useradministration.domain.AppUser,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (newGroup.isGroup()) { if (command.parameterExists(GroupingTypesApiConstants.datatables)) { this.entityDatatableChecksWritePlatformService.saveDatatables(StatusEnum.CREATE.getCode().longValue(), EntityTables.GROUP.getName(), newGroup.getId(), null, command.arrayOfParameterNamed(GroupingTypesApiConstants.datatables)); } this.entityDatatableChecksWritePlatformService.runTheCheck(newGroup.getId(), EntityTables.GROUP.getName(), StatusEnum.CREATE.getCode().longValue(), EntityTables.GROUP.getForeignKeyColumnNameOnDatatable()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1540/buggy-version/fineract-provider.src.main.java.org.apache.fineract.portfolio.group.service.GroupingTypesWritePlatformServiceJpaRepositoryImpl.java", "BodyUseAPI": ["org.apache.fineract.portfolio.group.service.Group.getId()", "org.apache.fineract.infrastructure.dataqueries.service.EntityDatatableChecksWritePlatformService.runTheCheck(newGroup.getId(),EntityTables.GROUP.getName(),StatusEnum.CREATE.getCode().longValue(),EntityTables.GROUP.getForeignKeyColumnNameOnDatatable())", "org.apache.fineract.portfolio.group.service.Group.getId()", "org.apache.fineract.infrastructure.dataqueries.service.EntityDatatableChecksWritePlatformService.saveDatatables(StatusEnum.CREATE.getCode().longValue(),EntityTables.GROUP.getName(),newGroup.getId(),<nulltype>,command.arrayOfParameterNamed(GroupingTypesApiConstants.datatables))"], "Fixed commit": "9cc60c9b7e37649eb5740faa9d18bf12a99793ef", "Url": "https://api.github.com/repos/Vishwa1311/incubator-fineract", "Date": "2016-12-19T06:26:10Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(bpos.visible)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/398/buggy-version/src.com.wanikani.androidnotifier.LocalIMEKeyboard.java", "BodyUseAPI": [], "Fixed commit": "de018e6ca951bbae2484d996e8e0ebe42249868a", "Url": "https://api.github.com/repos/WaniKani/Android-Notification", "Date": "2014-03-27T18:35:04Z"},
{"Line": "=>2497", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.subutai.common.peer.ContainerHost.getPeer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (peer instanceof io.subutai.common.peer.RemotePeer) { ((io.subutai.common.peer.RemotePeer) (peer)).excludeContainerFromEnvironment(containerHost.getEnvironmentId().getId(), containerHost.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/615/buggy-version/management.server.core.environment-manager.environment-manager-impl.src.main.java.io.subutai.core.environment.impl.EnvironmentManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "7d1972bc23716538ef9a0c9d8ca2dc2cfdc7730b", "Url": "https://api.github.com/repos/subutai-io/peer-os", "Date": "2016-12-20T13:24:39Z"},
{"Line": "=>711", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue()) instanceof com.eclipsesource.json.JsonObject) { info = new com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo(); info.createFromJson(((com.eclipsesource.json.JsonObject) (entry.getValue()))); }else if ((entry.getValue()) instanceof com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo) { info = ((com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo) (entry.getValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5915/buggy-version/box-content-sdk.src.main.java.com.box.androidsdk.content.auth.BoxAuthentication.java", "BodyUseAPI": ["com.box.androidsdk.content.auth.BoxAuthentication.BoxAuthenticationInfo.createFromJson(java.lang.Object)", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()"], "Fixed commit": "a9e08eeed090c734c0846876088e61336075ad0b", "Url": "https://api.github.com/repos/box/box-android-sdk", "Date": "2016-01-30T01:56:00Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.google.api.codegen.discovery.transformer.ruby.RubySampleMethodToViewTransformer.FIELD_RENAMES.containsKey(field.name())) { name = com.google.api.codegen.discovery.transformer.ruby.RubySampleMethodToViewTransformer.FIELD_RENAMES.get(field.name()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8602/buggy-version/src.main.java.com.google.api.codegen.discovery.transformer.ruby.RubySampleMethodToViewTransformer.java", "BodyUseAPI": ["com.google.api.codegen.discovery.config.FieldInfo.name()", "com.google.common.collect.ImmutableMap<java.lang.String, java.lang.String>.get(field.name())"], "Fixed commit": "b1f198a5dbd08682e9cc4f1034feedb1e1561513", "Url": "https://api.github.com/repos/saicheems/toolkit", "Date": "2016-11-01T21:16:42Z"},
{"Line": "=>1574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getDefaultReadOnly()) != null) { value.setDefaultReadOnly(this.getDefaultReadOnly()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4929/buggy-version/src.main.java.com.alibaba.druid.pool.DruidDataSource.java", "BodyUseAPI": [], "Fixed commit": "a9f290abf2bae9831d262b8977fe8a7c0c56bb71", "Url": "https://api.github.com/repos/jacking124/druid", "Date": "2014-05-28T03:16:24Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currFile.GetOwner()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2312/buggy-version/src.client.userInterface.thread.PopupThread.java", "BodyUseAPI": [], "Fixed commit": "79644afdc38798463ac2b51905ec844b1ab346d5", "Url": "https://api.github.com/repos/ShengLiu/File-Dependency-Client", "Date": "2011-08-02T23:37:41Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (loadedTags != null) { for (ca.ualberta.cs.team1travelexpenseapp.Tag tag : loadedTags.tags) { tags.add(tag); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4911/buggy-version/Team1TravelExpenseApp.src.dataManagers.TagListManager.java", "BodyUseAPI": [], "Fixed commit": "fc5df9d782cc597a5d19a284f3b7ddb5ddf8d6ed", "Url": "https://api.github.com/repos/BoyanP/Team1Project", "Date": "2015-04-01T00:51:26Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { showProgress(false); applyData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/9098/buggy-version/GoCook.src.com.m6.gocook.biz.recipe.recipe.RecipeFragment.java", "BodyUseAPI": [], "Fixed commit": "b0011fae4a7a3b2a7fd5d1b5ca916e0a612c31b4", "Url": "https://api.github.com/repos/yang-chao/GoCook_Android", "Date": "2013-07-15T15:16:56Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAdded())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/9098/buggy-version/GoCook.src.com.m6.gocook.biz.recipe.comment.RecipeCommentFragment.java", "BodyUseAPI": [], "Fixed commit": "b0011fae4a7a3b2a7fd5d1b5ca916e0a612c31b4", "Url": "https://api.github.com/repos/yang-chao/GoCook_Android", "Date": "2013-07-15T15:16:56Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(java.lang.System.getProperty(\"java.version\").startsWith(net.codjo.gui.toolkit.readonly.AbstractReadOnlyComponent.JDK_16))) { initForceReadOnlyListener(component, readOnlyManager); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3640/buggy-version/src.main.java.net.codjo.gui.toolkit.readonly.AbstractReadOnlyComponent.java", "BodyUseAPI": [], "Fixed commit": "ea4df46478584835903dd921c9476d5db953ece1", "Url": "https://api.github.com/repos/codjo-sandbox/codjo-gui-toolkit", "Date": "2012-01-16T15:18:45Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((enumState) == (cz.metaverse.android.bilingualreader.enums.BookPanelState.books)) { displayedBookPageKey = new java.lang.String[]{ cz.metaverse.android.bilingualreader.helper.Func.fileNameFromPath(panelHolder.getBook().getFilePath()), panelHolder.getBook().getTitle(), cz.metaverse.android.bilingualreader.helper.Func.fileNameFromPath(displayedPage) }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1747/buggy-version/bilingual-reader.src.cz.metaverse.android.bilingualreader.panel.BookPanel.java", "BodyUseAPI": [], "Fixed commit": "7298c6e4a50cb48c7a73a243cf662ef5d1f6a37b", "Url": "https://api.github.com/repos/tomparys/bilingual-reader", "Date": "2015-05-05T14:01:13Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result.getStatus()) == (POGOProtos.Networking.Responses.CatchPokemonResponseOuterClass.CatchPokemonResponse.CatchStatus.CATCH_ERROR)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3594/buggy-version/library.src.main.java.com.pokegoapi.api.map.pokemon.CatchablePokemon.java", "BodyUseAPI": [], "Fixed commit": "816c52af0239f8248c989d4a851cf332b3a3b83f", "Url": "https://api.github.com/repos/Annoraaq/PokeGOAPI-Java", "Date": "2016-08-01T10:49:08Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(s)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7558/buggy-version/app.src.main.java.ru.cs.cstaskclient.fragments.lastactivity.LastActivityListAdapter.java", "BodyUseAPI": [], "Fixed commit": "71104301f37a4e51b6ff6cc61bc334611c0946c4", "Url": "https://api.github.com/repos/lithTech/CSTaskClient", "Date": "2017-06-28T12:07:00Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (img == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7558/buggy-version/app.src.main.java.ru.cs.cstaskclient.fragments.lastactivity.LastActivityListAdapter.java", "BodyUseAPI": [], "Fixed commit": "71104301f37a4e51b6ff6cc61bc334611c0946c4", "Url": "https://api.github.com/repos/lithTech/CSTaskClient", "Date": "2017-06-28T12:07:00Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.body()) != null) lvCategories.setAdapter(new ru.cs.cstaskclient.fragments.category.CategoryAdapter(getActivity(), response.body()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7558/buggy-version/app.src.main.java.ru.cs.cstaskclient.fragments.category.CategoryFragment.java", "BodyUseAPI": ["android.widget.ListView.setAdapter(ru.cs.cstaskclient.fragments.category.CategoryAdapter)", "retrofit2.Response<java.util.List<ru.cs.cstaskclient.dto.Category>>.body()"], "Fixed commit": "71104301f37a4e51b6ff6cc61bc334611c0946c4", "Url": "https://api.github.com/repos/lithTech/CSTaskClient", "Date": "2017-06-28T12:07:00Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((participant.getPoints()) != points) { participant.setEqualRank(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4696/buggy-version/tournament-system.tournament-system-processor.src.main.java.org.toursys.processor.service.ParticipantService.java", "BodyUseAPI": ["org.toursys.repository.model.Participant.setEqualRank(<nulltype>)"], "Fixed commit": "6490c24fd6475730b01d94b224daa92e3d311282", "Url": "https://api.github.com/repos/hudi1/tournamenSystem", "Date": "2014-03-13T13:40:11Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageLabel) != null) { imageLabel.addMouseListener(new java.awt.event.MouseListener() { @java.lang.Override public void mouseClicked(java.awt.event.MouseEvent e) { } @java.lang.Override public void mousePressed(java.awt.event.MouseEvent e) { } @java.lang.Override public void mouseReleased(java.awt.event.MouseEvent e) { } @java.lang.Override public void mouseEntered(java.awt.event.MouseEvent e) { } @java.lang.Override public void mouseExited(java.awt.event.MouseEvent e) { } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7613/buggy-version/src.JavaClasses.MainScreen.java", "BodyUseAPI": [], "Fixed commit": "bd8391081adf07678fedcddd53d1658693d44903", "Url": "https://api.github.com/repos/atomwolfie/Coure-Project", "Date": "2017-03-31T07:19:31Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.Location.getCountyDistrict()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(district)) districts.add(district);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5357/buggy-version/motech-server-omod.src.main.java.org.motechproject.server.omod.web.controller.BasePatientController.java", "BodyUseAPI": ["java.util.TreeSet<java.lang.String>.add(java.lang.String)"], "Fixed commit": "f521c2f2880e81f19e0399ad75002f6bcac23d93", "Url": "https://api.github.com/repos/motech/MOTECH-Ghana", "Date": "2011-05-28T11:05:07Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (si == null) { si = \"https://plus.google.com/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2604/buggy-version/GooglePlusImporter.src.SharkImport.SharkGPImport.java", "BodyUseAPI": [], "Fixed commit": "91a5a54e136796b137582f35066ed62775e6afaa", "Url": "https://api.github.com/repos/SharedKnowledge/Incubator", "Date": "2015-07-09T18:36:02Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (me.jcala.xmarket.AppConf.useMock) { listener.onGetMsgSuccess(new me.jcala.xmarket.mock.MessageMock().gainMsg().getData().getMsgs()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6918/buggy-version/xmarket-android.app.src.main.java.me.jcala.xmarket.mvp.message.MessageModelImpl.java", "BodyUseAPI": [], "Fixed commit": "9f8e381844c0808644f346fb14a3576853c9cd28", "Url": "https://api.github.com/repos/yyy2015/xmarket", "Date": "2017-02-18T08:31:05Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.cdfe.gdr.GdrErrorAttributes.getError(org.springframework.web.context.request.RequestAttributes)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (ex != null) { errorAttributes.put(\"message\", ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3308/buggy-version/src.main.java.ru.cdfe.gdr.GdrErrorAttributes.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)", "java.lang.Throwable.getMessage()"], "Fixed commit": "0508fdfe1a52c6326fdc788e437c732365cdc719", "Url": "https://api.github.com/repos/hadadzhi/GdrApplication", "Date": "2017-04-17T17:39:49Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["customDrop.getDropped().drop(currentEvent.getLocation(),com.gmail.zariust.otherdrops.subject.Target,customDrop.getOffset(),double,com.gmail.zariust.otherdrops.drop.DropType.DropFlags)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dropResult.getOverrideDefault()) currentEvent.setOverrideDefault(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8527/buggy-version/src.com.gmail.zariust.otherdrops.event.DropRunner.java", "BodyUseAPI": [], "Fixed commit": "cc42aa3c673cb21885ffc88587f7db4ff2d3677d", "Url": "https://api.github.com/repos/Zarius/Bukkit-OtherBlocks", "Date": "2013-03-19T14:35:57Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mIsFooterReady) == false) { mIsFooterReady = true; addFooterView(mFooterView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8973/buggy-version/src.me.maxwin.view.XListView.java", "BodyUseAPI": [], "Fixed commit": "cdff7f6682b7ea93a1b7ae71869b998d129a66eb", "Url": "https://api.github.com/repos/Maxwin-z/XListView-Android", "Date": "2012-05-18T10:18:56Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.bl.monitrix.database.cassandra.ingest.CassandraVirusLogImporter.getRecordForVirus(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (record == null) occurrences = new java.util.HashMap<java.lang.String, java.lang.Integer>(); else occurrences = record.getOccurences();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2723/buggy-version/monitrix-webapp.app.uk.bl.monitrix.database.cassandra.ingest.CassandraVirusLogImporter.java", "BodyUseAPI": ["uk.bl.monitrix.model.VirusRecord.getOccurences()"], "Fixed commit": "4ab15c5263ff1bc70aaa7743a4d7cfdbd2b72e0a", "Url": "https://api.github.com/repos/ukwa/monitrix", "Date": "2014-03-24T14:04:33Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getActivity()) == null) || (getActivity().isFinishing())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6520/buggy-version/PreferencesManager.src.main.java.fr.simon.marquis.preferencesmanager.ui.PreferencesFragment.java", "BodyUseAPI": [], "Fixed commit": "269f112039ecedfc86eb09d55cce51a398fb2576", "Url": "https://api.github.com/repos/SimonMarquis/Android-PreferencesManager", "Date": "2014-04-05T21:46:26Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c.isVisible()) { bTip = new net.java.balloontip.BalloonTip(c, new javax.swing.JLabel(bubble.getMessage()), new net.java.balloontip.styles.RoundedBalloonStyle(5, 5, java.awt.Color.WHITE, java.awt.Color.BLACK), bubble.getOrientation(), BalloonTip.AttachLocation.ALIGNED, (15 + (bubble.getX())), (15 + (bubble.getY())), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5136/buggy-version/src.edu.asu.laits.gui.BlockingToolTip.java", "BodyUseAPI": [], "Fixed commit": "e0adf5ba8475afd00cdf05483840862c95bd9e46", "Url": "https://api.github.com/repos/rptiwari/LaitsV3", "Date": "2013-08-07T03:11:05Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((out) != null) { out.flush(); out.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/45/buggy-version/aidr-persister.src.main.java.qa.qcri.aidr.persister.collction.CollectionSubscriber.java", "BodyUseAPI": [], "Fixed commit": "1aa88f33f921397bedc6c38e3aa35900e2be88fb", "Url": "https://api.github.com/repos/qcri-social/AIDR", "Date": "2014-12-03T15:19:14Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (task == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8815/buggy-version/src.de.azapps.mirakel.helper.TaskDialogHelpers.java", "BodyUseAPI": [], "Fixed commit": "0dd371fb77d9176479e859dc0bc61f354ccb07fb", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2014-02-20T17:09:47Z"},
{"Line": "=>566", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (due != null) { due.setTimeInMillis(((due.getTimeInMillis()) + (java.util.TimeZone.getDefault().getRawOffset()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8815/buggy-version/src.de.azapps.mirakel.model.task.Task.java", "BodyUseAPI": ["java.util.Calendar.setTimeInMillis(long)", "java.util.Calendar.getTimeInMillis()"], "Fixed commit": "0dd371fb77d9176479e859dc0bc61f354ccb07fb", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2014-02-20T17:09:47Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((line.indexOf(' ')) == (-1)) { cmd = line; }else { cmd = line.substring(0, line.indexOf(' ')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1634/buggy-version/src.PackageSystem.UI.java", "BodyUseAPI": ["java.lang.String.indexOf(char)", "java.lang.String.substring(int,int)"], "Fixed commit": "ed1e7a13cbeb258148f943d38a9a230fdc759d36", "Url": "https://api.github.com/repos/briannagerads/PackageSystem", "Date": "2016-04-28T16:18:06Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((seqComp.getAlternateAllele().length()) > 1) { final int s = ((seqComp.getCodingSequenceAlleleStart()) - (seqComp.getAlternateAllele().length())) + 1; return (((((\"c.\" + s) + \"_\") + (seqComp.getCodingSequenceAlleleStart())) + (seqComp.getReferenceAllele())) + \">\") + (seqComp.getAlternateAllele()); }else { return (((\"c.\" + (seqComp.getCodingSequenceAlleleStart())) + (seqComp.getReferenceAllele())) + \">\") + (seqComp.getAlternateAllele()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6241/buggy-version/src.main.java.org.broadinstitute.hellbender.tools.funcotator.FuncotatorUtils.java", "BodyUseAPI": ["org.broadinstitute.hellbender.tools.funcotator.FuncotatorUtils.SequenceComparison.getReferenceAllele()", "java.lang.String.length()", "org.broadinstitute.hellbender.tools.funcotator.FuncotatorUtils.SequenceComparison.getCodingSequenceAlleleStart()", "org.broadinstitute.hellbender.tools.funcotator.FuncotatorUtils.SequenceComparison.getCodingSequenceAlleleStart()", "org.broadinstitute.hellbender.tools.funcotator.FuncotatorUtils.SequenceComparison.getAlternateAllele()", "org.broadinstitute.hellbender.tools.funcotator.FuncotatorUtils.SequenceComparison.getCodingSequenceAlleleStart()", "org.broadinstitute.hellbender.tools.funcotator.FuncotatorUtils.SequenceComparison.getAlternateAllele()", "org.broadinstitute.hellbender.tools.funcotator.FuncotatorUtils.SequenceComparison.getAlternateAllele()", "org.broadinstitute.hellbender.tools.funcotator.FuncotatorUtils.SequenceComparison.getReferenceAllele()"], "Fixed commit": "f9ca5cd54e260b0e7b738c43c073fc5d81d146f3", "Url": "https://api.github.com/repos/broadinstitute/gatk", "Date": "2017-10-05T19:30:27Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((attributes == null) || (excludeAttributes == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6404/buggy-version/faims-android-app.src.au.org.intersect.faims.android.beanshell.TabGroupHelper.java", "BodyUseAPI": [], "Fixed commit": "43044713b6824db2296293e3a7cd27037f2a591c", "Url": "https://api.github.com/repos/IntersectAustralia/faims-android", "Date": "2015-04-01T00:45:10Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mhyhre.lightrabbit.game.levels.Level.getCurrentEvent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((units.hasActiveAgents(gameEvent.getId())) == false) { goToNextEvent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/9218/buggy-version/src.mhyhre.lightrabbit.Scenes.SceneGame.java", "BodyUseAPI": [], "Fixed commit": "3a52464e25d16d96cbdeb8622ed0ca3e19157739", "Url": "https://api.github.com/repos/mhyhre/LightRabbit", "Date": "2014-07-25T11:59:08Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.input) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3769/buggy-version/deeplearning4j-core.src.main.java.org.deeplearning4j.nn.layers.recurrent.LSTM.java", "BodyUseAPI": [], "Fixed commit": "0ab10738ba2537e585b6150c1b6b665ffe8843ee", "Url": "https://api.github.com/repos/deeplearning4j/deeplearning4j", "Date": "2015-07-14T15:10:40Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (conf.isMinimize()) score = -(score);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3769/buggy-version/deeplearning4j-core.src.main.java.org.deeplearning4j.nn.layers.recurrent.LSTM.java", "BodyUseAPI": [], "Fixed commit": "0ab10738ba2537e585b6150c1b6b665ffe8843ee", "Url": "https://api.github.com/repos/deeplearning4j/deeplearning4j", "Date": "2015-07-14T15:10:40Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((workingDirectory) != null) { builder.add(\"workingDirectory\", workingDirectory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8452/buggy-version/pyramid-api.src.main.java.net.algart.pyramid.api.http.HttpPyramidConfiguration.java", "BodyUseAPI": [], "Fixed commit": "f3c38c4a602d29da6c7861be5027342e6f5f6151", "Url": "https://api.github.com/repos/Daniel-Alievsky/pyramid-services", "Date": "2016-11-29T13:45:56Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["anal.getLemma().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(lemma.isEmpty())) { java.lang.String[] wordParts = lemma.split(\"\\\\^\"); lemma = wordParts[((wordParts.length) - 1)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8295/buggy-version/wikipedia-miner-1.2.0.src.org.wikipedia.miner.util.text.HebrewLemmatizer.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "680e498593ba7e0b1446e7cdf6ef6c7471f65fc2", "Url": "https://api.github.com/repos/feet/HebrewWikifier", "Date": "2013-03-07T17:55:35Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (prop != null) { try { normalization = java.lang.Integer.parseInt(prop.trim()); } catch (java.lang.NumberFormatException e) { ep.db.utils.Configuration.logger.warn((\"Cannot parse normalization value: \" + prop), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1715/buggy-version/ep-db.src.main.java.ep.db.utils.Configuration.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,java.lang.NumberFormatException)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "e1fdd651d4d513ae65ec81ea6b1c13a6968537a3", "Url": "https://api.github.com/repos/zedomel/ep-project", "Date": "2017-08-02T18:43:32Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (title.endsWith(\".pdf\")) { out = new java.io.FileOutputStream(((((android.os.Environment.getExternalStorageDirectory()) + folder) + \"pdf_backups/\") + title)); }else { out = new java.io.FileOutputStream((((((android.os.Environment.getExternalStorageDirectory()) + folder) + \"pdf_backups/\") + title) + \".pdf\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2198/buggy-version/app.src.main.java.de.baumann.pdfcreator.helper.helper_pdf.java", "BodyUseAPI": [], "Fixed commit": "fe2b4cc305734c9c1c7f474bd0fbb7e1a908f66c", "Url": "https://api.github.com/repos/scoute-dich/PDFCreator", "Date": "2017-06-11T09:52:28Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (verifyFields(id, password)) { urlshortener2015.candypink.domain.User user = repo.findByUsernameOrEmail(id); if (user != null) { if (user.getPassword().equals(password)) { return new org.springframework.http.ResponseEntity(user, org.springframework.http.HttpStatus.CREATED); }else { return new org.springframework.http.ResponseEntity(org.springframework.http.HttpStatus.BAD_REQUEST); } }else { return new org.springframework.http.ResponseEntity(org.springframework.http.HttpStatus.BAD_REQUEST); } }else { return new org.springframework.http.ResponseEntity(org.springframework.http.HttpStatus.BAD_REQUEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5355/buggy-version/candy-pink.src.main.java.urlshortener2015.candypink.web.LoginController.java", "BodyUseAPI": ["user.getPassword().equals(java.lang.String)", "urlshortener2015.candypink.repository.UserRepositoryImpl.findByUsernameOrEmail(java.lang.String)"], "Fixed commit": "522ec702ebf8d475c7de7c31d731fc500fab94f1", "Url": "https://api.github.com/repos/Santi-7/UrlShortener2015", "Date": "2015-12-05T14:23:57Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getPermission(p)) == null) { p.sendMessage(((((parseColors(plugin.getMessageConfig().getString(\"prefix\"))) + \" \") + (org.bukkit.ChatColor.RED)) + \"You don't have a kit permission! Please report this to an admin!\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/9194/buggy-version/src.com.mydeblob.guard.CommandHandler.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(((((parseColors(plugin.getMessageConfig().getString(\"prefix\"))) + \" \") + (org.bukkit.ChatColor.RED)) + \"You don't have a kit permission! Please report this to an admin!\"))"], "Fixed commit": "413b1e315c19adaf902c0d67ff9164099f7389db", "Url": "https://api.github.com/repos/mydeblob/guardoverseer", "Date": "2014-05-13T00:40:38Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.JsonNode.path(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (createdObj.isNumber()) { created = createdObj.longValue(); }else if (createdObj.isTextual()) { try { created = net.solarnetwork.node.upload.bulkjsonwebpost.BulkJsonWebPostUploadService.ISO_DATE_TIME_FORMATTER.parseDateTime(createdObj.textValue().replace(' ', 'T')).getMillis(); } catch (java.lang.IllegalArgumentException e) { log.debug(\"Unexpected created date format: {}\", createdObj); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1163/buggy-version/net.solarnetwork.node.upload.bulkjsonwebpost.src.net.solarnetwork.node.upload.bulkjsonwebpost.BulkJsonWebPostUploadService.java", "BodyUseAPI": ["net.solarnetwork.node.upload.bulkjsonwebpost.BulkJsonWebPostUploadService.ISO_DATE_TIME_FORMATTER.parseDateTime(createdObj.textValue().replace(' ', 'T')).getMillis()", "com.fasterxml.jackson.databind.JsonNode.isTextual()", "com.fasterxml.jackson.databind.JsonNode.textValue()", "org.joda.time.format.DateTimeFormatter.parseDateTime(createdObj.textValue().replace(' ', 'T'))", "com.fasterxml.jackson.databind.JsonNode.longValue()", "net.solarnetwork.node.upload.bulkjsonwebpost.BulkJsonWebPostUploadService.debug(java.lang.String,com.fasterxml.jackson.databind.JsonNode)", "createdObj.textValue().replace(char,char)"], "Fixed commit": "123d1b1e0d305eb6c1980090fa7cbf8a864d6314", "Url": "https://api.github.com/repos/SolarNetwork/solarnetwork-node", "Date": "2017-09-26T23:23:58Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (titleResourceId != 0) { title = this.mContext.getResources().getString(titleResourceId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6997/buggy-version/library.src.android.support.v4.view.MenuBuilder.java", "BodyUseAPI": ["this.mContext.getResources().getString(int)"], "Fixed commit": "51abb2ae93b98b6592943accd14ab0a4c1210b2f", "Url": "https://api.github.com/repos/JakeWharton/ActionBarSherlock", "Date": "2011-05-22T06:49:52Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.reginald.patternlockview.MeasureSpec.getMode(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(isMeasureModeExactly(heightMode))) { height = ((int) ((((mPadding) * 2) + ((mSpacing) * gaps)) + ((mSize) * nodesize))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/29/buggy-version/library.src.main.java.com.reginald.patternlockview.PatternLockView.java", "BodyUseAPI": [], "Fixed commit": "115e1d4ee2884992efa7be8fd8547764406ab127", "Url": "https://api.github.com/repos/xyxyLiu/PatternLockView", "Date": "2016-11-18T08:06:31Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.reginald.patternlockview.MeasureSpec.getMode(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(isMeasureModeExactly(widthMode))) { width = ((int) ((((mPadding) * 2) + ((mSpacing) * gaps)) + ((mSize) * nodesize))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/29/buggy-version/library.src.main.java.com.reginald.patternlockview.PatternLockView.java", "BodyUseAPI": [], "Fixed commit": "115e1d4ee2884992efa7be8fd8547764406ab127", "Url": "https://api.github.com/repos/xyxyLiu/PatternLockView", "Date": "2016-11-18T08:06:31Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isUseRelaxingStrategy())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2979/buggy-version/DataExtractionOSM.src.net.osmand.router.RoutingContext.java", "BodyUseAPI": [], "Fixed commit": "dd30b46cd391f8e1875f7cfa5685e7765edefdcd", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2012-06-20T18:47:47Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mMediaPlayer.getCurrentPosition()) == 0) { mMediaPlayer.seekTo(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4833/buggy-version/src.org.tomahawk.tomahawk_android.utils.TomahawkMediaPlayer.java", "BodyUseAPI": ["android.media.MediaPlayer.seekTo(int)"], "Fixed commit": "2bd1db0d396283682798d5ed6b52fc90db5496af", "Url": "https://api.github.com/repos/tomahawk-player/tomahawk-android", "Date": "2013-11-25T14:15:30Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.github.beansoftapp.reatnative.idea.utils.OSUtils.isWindows()) { if (((exePath.equalsIgnoreCase(\"npm\")) || (exePath.equalsIgnoreCase(\"react-native\"))) || ((exePath.indexOf(\"gradlew\")) >= 0)) { exeFullPath += \".cmd\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3519/buggy-version/src.main.java.com.github.beansoftapp.reatnative.idea.utils.RNPathUtil.java", "BodyUseAPI": [], "Fixed commit": "79a84d1b2e39383eeec966ab0e5ebd7d8a2941c4", "Url": "https://api.github.com/repos/beansoftapp/react-native-console", "Date": "2017-05-27T09:37:19Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentFrame.size()) == 0) { if ((o.exception) != null) throw new me.enerccio.sp.interpret.PythonExecutionException(o.exception); }else currentFrame.peekLast().exception = o.exception;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6040/buggy-version/src.me.enerccio.sp.interpret.PythonInterpret.java", "BodyUseAPI": ["java.util.LinkedList<me.enerccio.sp.interpret.FrameObject>.peekLast()"], "Fixed commit": "675a268e1a6bf2dc82076abc6696ad0f12e24f7f", "Url": "https://api.github.com/repos/kozec/SimplePython", "Date": "2015-07-22T15:54:09Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.sqrt(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (distance < (SPEED)) { startX = destX; startY = destY; }else { startX += ((int) (((SPEED) * (destX - (startX))) / distance)); startY += ((int) (((SPEED) * (destY - (startY))) / distance)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3885/buggy-version/src.edu.shadow.Shadow.java", "BodyUseAPI": [], "Fixed commit": "d85aae8481745ab292613f9d6da2d182c52752a2", "Url": "https://api.github.com/repos/Ceyler997/shadow", "Date": "2016-10-19T21:49:35Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.cm.getDataSource().getConnection()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(connection.isClosed())) { connection.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7560/buggy-version/Goobi.src.de.sub.goobi.persistence.apache.MySQLHelper.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "42a80bf1f48c7d756f76af79f7ee4a88c51ebc96", "Url": "https://api.github.com/repos/subhh/kitodo-production", "Date": "2017-05-09T06:58:29Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tconstruct.tools.DamageSource.getSourceOfDamage()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (projectile == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3785/buggy-version/src.main.java.tconstruct.tools.TinkerToolEvents.java", "BodyUseAPI": [], "Fixed commit": "cae7b07ba512211d1700e190b8cb7f271f23ff0b", "Url": "https://api.github.com/repos/Bogdan-G/TinkersConstruct", "Date": "2017-03-06T19:33:25Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eu.trentorise.smartcampus.jp.helper.JPHelper.isInitialized()) { eu.trentorise.smartcampus.jp.helper.JPHelper.getLocationHelper().stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7718/buggy-version/src.eu.trentorise.smartcampus.viaggiarovereto.LauncherActivity.java", "BodyUseAPI": [], "Fixed commit": "e246ffc5bae26b17a186d8f7c06953b41e578905", "Url": "https://api.github.com/repos/smartcampuslab/smartcampus.vas.vivitrento.android.unified_apps", "Date": "2013-06-18T15:10:21Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eu.trentorise.smartcampus.jp.helper.JPHelper.isInitialized()) { eu.trentorise.smartcampus.jp.helper.JPHelper.getLocationHelper().start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7718/buggy-version/src.eu.trentorise.smartcampus.viaggiarovereto.LauncherActivity.java", "BodyUseAPI": [], "Fixed commit": "e246ffc5bae26b17a186d8f7c06953b41e578905", "Url": "https://api.github.com/repos/smartcampuslab/smartcampus.vas.vivitrento.android.unified_apps", "Date": "2013-06-18T15:10:21Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.flywaydb.core.internal.info.MigrationInfoServiceImpl.failed()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((failed[0].getVersion()) == null) { throw new org.flywaydb.core.api.FlywayException(((((\"Schema \" + (schema)) + \" contains a failed repeatable migration (\") + (failed[0].getDescription())) + \") !\")); }else { throw new org.flywaydb.core.api.FlywayException(((((\"Schema \" + (schema)) + \" contains a failed migration to version \") + (failed[0].getVersion())) + \" !\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2632/buggy-version/flyway-core.src.main.java.org.flywaydb.core.internal.command.DbMigrate.java", "BodyUseAPI": ["failed[0].getDescription()", "failed[0].getVersion()"], "Fixed commit": "01a6a2388f881ff26cad87216583f392e94a6084", "Url": "https://api.github.com/repos/khatkar/flyway", "Date": "2017-02-06T17:53:43Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (current != null) { return current; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2632/buggy-version/flyway-core.src.main.java.org.flywaydb.core.internal.info.MigrationInfoServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "01a6a2388f881ff26cad87216583f392e94a6084", "Url": "https://api.github.com/repos/khatkar/flyway", "Date": "2017-02-06T17:53:43Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((head) == null) { head.value = elem; }else { BasicSet.ListElem<T> last = null; for (BasicSet.ListElem<T> tmp = head; (tmp.next) != null; tmp = tmp.next) { if ((tmp.value) == elem) { return; } last = tmp; } BasicSet.ListElem<T> tmp = last.next; tmp.next.value = elem; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7702/buggy-version/oop-ue.src.main.java.BasicSet.java", "BodyUseAPI": [], "Fixed commit": "b8f7ff509e0b1e34223f66db879b1a215973f0f7", "Url": "https://api.github.com/repos/huberc/OOPWS2015", "Date": "2015-11-16T13:52:56Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.contains(\"Zendikar\")) { BlockNames[nameIndex][1] = java.lang.Integer.toString((numberOfCommas + 1)); }else { BlockNames[nameIndex][1] = java.lang.Integer.toString(numberOfCommas); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8546/buggy-version/src.com.macleod2486.magicbuilder.BlockConstructed.java", "BodyUseAPI": [], "Fixed commit": "25210dd7854d2ed347321f41463cb003ffd3e5fe", "Url": "https://api.github.com/repos/macleod2486/MagicBuilder", "Date": "2014-04-10T22:13:02Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.TableLayout.getChildAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((row.getChildCount()) <= 2) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4191/buggy-version/src.kvhc.gui.GUIUpdateObserver.java", "BodyUseAPI": [], "Fixed commit": "9ab59bfe6ad2da9b3abd734e7659dbc132b5bd3b", "Url": "https://api.github.com/repos/KVHC/adrumdrum", "Date": "2012-10-13T19:05:13Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.TableLayout.getChildAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((row.getChildCount()) <= 2) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4191/buggy-version/src.kvhc.gui.GUIUpdateObserver.java", "BodyUseAPI": [], "Fixed commit": "9ab59bfe6ad2da9b3abd734e7659dbc132b5bd3b", "Url": "https://api.github.com/repos/KVHC/adrumdrum", "Date": "2012-10-13T19:05:13Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (configuration.isAutoStartTx()) begin();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3876/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientTransactionalGraph.java", "BodyUseAPI": [], "Fixed commit": "3f577bd6d55f4640d9327f5b553be0eda9224414", "Url": "https://api.github.com/repos/matanshukry/orientdb", "Date": "2015-02-26T20:01:37Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.smartsnip.core.Snippet.getSnippet(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((TEST.viewcount) != (viewcount)) { java.lang.System.err.println(\"DB ERROR\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4324/buggy-version/org.smartsnip.src.org.smartsnip.core.Snippet.java", "BodyUseAPI": [], "Fixed commit": "7f23745c81cab8a41f15aa0ef8dfb05ace0f8d8f", "Url": "https://api.github.com/repos/grisu48/SEPM-SS12-Project", "Date": "2012-06-21T10:14:37Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sct instanceof railo.runtime.type.StructImpl) && ((((railo.runtime.type.StructImpl) (sct)).getType()) == (railo.runtime.type.Struct.TYPE_LINKED))) return keys;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6481/buggy-version/railo-java.railo-core.src.railo.runtime.type.util.StructUtil.java", "BodyUseAPI": [], "Fixed commit": "0b56f9e3b638df61afcf399f1a3c242cae58b2b0", "Url": "https://api.github.com/repos/dajester2013/railo", "Date": "2013-10-21T08:23:26Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(org.ednovo.gooru.client.uc.BrowserAgent.isDevice())) { panelRatings.getElement().getStyle().setWidth(27, Unit.PCT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6770/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.search.util.CollectionResourceWidget.java", "BodyUseAPI": [], "Fixed commit": "220847a1920d333c3ffb414b637fe9ada3dd3639", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-07-01T08:45:32Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Element.getLocalName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (RealizeMetaParts.NAME.equals(name)) edit = new com.vzome.core.editor.RealizeMetaParts(mSelection, mRealizedModel, mDerivationModel); else if (\"Symmetry4d\".equals(name)) { com.vzome.core.math.symmetry.QuaternionicSymmetry h4symm = this.mField.getQuaternionSymmetry(\"H_4\"); edit = new com.vzome.core.editor.Symmetry4d(this.mSelection, this.mRealizedModel, this.mDerivationModel, h4symm, h4symm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8822/buggy-version/src.main.java.com.vzome.core.editor.DocumentModel.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "45a2860b3c9f45a4693e2872b1cc4a2c7660737d", "Url": "https://api.github.com/repos/david-hall/vzome-core", "Date": "2015-08-09T15:40:41Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (filtered) { com.denimgroup.threadfix.importer.util.FilteredXmlInputStream filteredXmlInputStream = new com.denimgroup.threadfix.importer.util.FilteredXmlInputStream(inputStream); com.denimgroup.threadfix.importer.util.ScanUtils.readSAXInput(new org.xml.sax.helpers.DefaultHandler(), filteredXmlInputStream); }else { com.denimgroup.threadfix.importer.util.ScanUtils.readSAXInput(new org.xml.sax.helpers.DefaultHandler(), inputStream); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7465/buggy-version/threadfix-importers.src.main.java.com.denimgroup.threadfix.importer.util.ScanUtils.java", "BodyUseAPI": [], "Fixed commit": "c43173d455fcb58a7573254054d22f1ed9bedf97", "Url": "https://api.github.com/repos/denimgroup/threadfix", "Date": "2015-08-26T16:54:11Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_RecordWeight) == null) { p_FTA_RecordWeight_ID = org.compiere.util.DB.getSQLValue(get_TrxName(), (\"SELECT MAX(rw.FTA_RecordWeight_ID) \" + ((\"FROM FTA_RecordWeight rw \" + \"WHERE rw.DocStatus NOT IN('VO', 'RE','CL') \") + \"AND rw.FTA_LoadOrder_ID = ?\")), p_FTA_LoadOrder_ID); if ((p_FTA_RecordWeight_ID) > 0) m_RecordWeight = new org.spin.model.MFTARecordWeight(getCtx(), p_FTA_RecordWeight_ID, get_TrxName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/9160/buggy-version/base.org.spin.process.LoadOrderGuideGenerate.java", "BodyUseAPI": [], "Fixed commit": "0243443086e0e3285cbf8d3cf3e4c6b07d97f9e5", "Url": "https://api.github.com/repos/erpcya/FTA", "Date": "2015-01-16T07:53:47Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().findFragmentById(R.id.map)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (mapFragment != null) { mapFragment.getMapAsync(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2608/buggy-version/app.src.main.java.com.roa.foodonetv3.activities.MapActivity.java", "BodyUseAPI": ["com.google.android.gms.maps.SupportMapFragment.getMapAsync(com.roa.foodonetv3.activities.MapActivity)"], "Fixed commit": "67a8e5cbae78d023bddf91c77f94c6378a1b410e", "Url": "https://api.github.com/repos/ShulmanAlon/FoodonetV3", "Date": "2016-10-18T13:05:19Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["preparedStatementValues.get((i - 1)).getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value instanceof net.symplifier.db.jdbc.Row) { stmt.setLong(i, ((net.symplifier.db.jdbc.Row) (value)).getId()); }else { stmt.setObject(i, preparedStatementValues.get((i - 1)).getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2767/buggy-version/src.main.java.net.symplifier.db.jdbc.JDBCQuery.java", "BodyUseAPI": [], "Fixed commit": "11314e4d02f88e9c32a4eb6658e1282729c4bca7", "Url": "https://api.github.com/repos/ranjan-sym/sym.net-db", "Date": "2015-07-05T08:32:56Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mRecommendedBlogs.size()) == 0) { return 0; }else { return (mRecommendedBlogs.size()) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6983/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.reader.adapters.ReaderBlogAdapter.java", "BodyUseAPI": ["org.wordpress.android.models.ReaderRecommendBlogList.size()"], "Fixed commit": "75bace6fe513fd9a6faed0b03eefc2c226372fdd", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2014-12-11T21:04:33Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (primaryKeys.isEmpty()) { return com.google.common.collect.Lists.newArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8573/buggy-version/src.main.java.cricketskill.io.DynamoStore.java", "BodyUseAPI": [], "Fixed commit": "81adc826283182db2548a793580398d403a23942", "Url": "https://api.github.com/repos/hrajaraman89/alexa-cricket-skill", "Date": "2016-10-23T14:14:45Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((titleLayout) != null) { y += (titleLayout.getHeight()) + (ELEMENT_PADDING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8489/buggy-version/src.com.btmura.android.reddit.widget.ThingView.java", "BodyUseAPI": [], "Fixed commit": "dfad67be1877b3bd5678f2f0788d82ae769a0c85", "Url": "https://api.github.com/repos/btmura/rbb", "Date": "2013-01-04T18:33:25Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.ListView.getItemAtPosition(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (groupName != null) { android.content.Intent intent = new android.content.Intent(this, thorleifz.wakeup.InsideGroup.class); intent.putExtra(\"groupName\", groupName); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2226/buggy-version/WakeUp.app.src.main.java.thorleifz.wakeup.Groups.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,java.lang.String)"], "Fixed commit": "230da4b7eff2fb67c8f5586d1f7009f56ab4c87c", "Url": "https://api.github.com/repos/hampusluck/Thorleifz", "Date": "2015-05-02T12:18:54Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraftforge.fml.common.FMLCommonHandler.instance().getSide()) == (net.minecraftforge.fml.relauncher.Side.CLIENT)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1847/buggy-version/src.main.java.WayofTime.bloodmagic.api.util.helper.NetworkHelper.java", "BodyUseAPI": [], "Fixed commit": "04f5b7a5844054940b9b1d216f123185cdbe27b5", "Url": "https://api.github.com/repos/WayofTime/BloodMagic", "Date": "2016-01-05T14:19:26Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((((((((((nextLine.contains(\"==\")) || (nextLine.contains(\"<=\"))) || (nextLine.contains(\">=\"))) || (nextLine.contains(\"!=\"))) || (nextLine.contains(\"= {\"))) || (nextLine.contains(\"={\"))) || (nextLine.contains(\"= [\"))) || (nextLine.contains(\"=[\"))) || (nextLine.contains(\"= (\"))) || (nextLine.contains(\"=(\"))) if (nextLine.contains(\"=\")) { java.lang.String[] nxt = nextLine.split(\"=\"); variableList.add(nxt[0].trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7215/buggy-version/src.org.netbeans.modules.multilangsourcefilepalette.CodeParser.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "2c4c24eb2179cef975c9f459531be8d58b506d14", "Url": "https://api.github.com/repos/oziasgonet/MultiLangSourceFilePalette", "Date": "2016-01-16T18:16:52Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getBlockState(net.minecraft.util.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((meta.getBlock()) == (this)) { return ((((oortcloud.hungryanimals.blocks.BlockExcreta.EnumType) (meta.getValue(oortcloud.hungryanimals.blocks.BlockExcreta.CONTENT))).exc) + (((oortcloud.hungryanimals.blocks.BlockExcreta.EnumType) (meta.getValue(oortcloud.hungryanimals.blocks.BlockExcreta.CONTENT))).man)) * (oortcloud.hungryanimals.blocks.BlockExcreta.hardnessConstant); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5314/buggy-version/src.main.java.oortcloud.hungryanimals.blocks.BlockExcreta.java", "BodyUseAPI": ["net.minecraft.block.state.IBlockState.getValue(net.minecraft.block.properties.PropertyEnum)", "net.minecraft.block.state.IBlockState.getValue(net.minecraft.block.properties.PropertyEnum)"], "Fixed commit": "289b666b1330623d25837bf708020651e0055733", "Url": "https://api.github.com/repos/a3626a/HungryAnimals", "Date": "2015-08-21T08:01:10Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (login.getLoggedInUser().equals(userManager.find(userID))) { return \"\"; }else { if (!(login.getLoggedInUser().getFollowedUsers().contains(userManager.find(userID)))) { return \"Follow\"; }else { return \"Unfollow\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2846/buggy-version/friendzone-enterprise.friendzone-frontend.src.main.java.it.chalmers.fannysangles.friendzone.bb.ViewProfileBB.java", "BodyUseAPI": ["it.chalmers.fannysangles.friendzone.bb.LoginBB.getLoggedInUser()", "it.chalmers.fannysangles.friendzone.model.managers.UserManager.find(java.lang.Long)", "login.getLoggedInUser().getFollowedUsers()", "login.getLoggedInUser().getFollowedUsers().contains(userManager.find(userID))"], "Fixed commit": "f49f6e36507033809f8d513b809a449ed142a7a3", "Url": "https://api.github.com/repos/Imarcus/friendzone", "Date": "2013-10-22T14:51:38Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.joeldholmes.repository.ILiturgyRepository.findByDate(java.util.Date)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((entities == null) || (entities.isEmpty())) { entities = lectRepo.findByDateBetween(date, dateTime.plusWeeks(1).toDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4153/buggy-version/src.main.java.com.joeldholmes.services.impl.LiturgyService.java", "BodyUseAPI": [], "Fixed commit": "c0499b10902d423d57cc471177b6c35753192aac", "Url": "https://api.github.com/repos/Holmes89/liturgical-project", "Date": "2017-01-09T01:46:52Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (userConfirm == 'y') { ProductExtractor.AutoDB adb = new ProductExtractor.AutoDB(); adb.initDB(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7395/buggy-version/src.ProductExtractor.ScraperMainInterface.java", "BodyUseAPI": [], "Fixed commit": "fff892e44a49f97d176c4e5d0023f99ac7cbfef5", "Url": "https://api.github.com/repos/fsocko/Skimpy", "Date": "2015-04-29T20:23:23Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((stringBuilder.length()) > (com.github.tomakehurst.wiremock.common.UniqueFilenameGenerator.MAX_FILENAME_WITHOUT_EXTENSION)) { stringBuilder.delete(com.github.tomakehurst.wiremock.common.UniqueFilenameGenerator.MAX_FILENAME_WITHOUT_EXTENSION, java.lang.Integer.MAX_VALUE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8209/buggy-version/src.main.java.com.github.tomakehurst.wiremock.common.UniqueFilenameGenerator.java", "BodyUseAPI": ["java.lang.StringBuilder.delete(int,int)"], "Fixed commit": "7f365e05c701113b503a8c2633de965c05c28d8a", "Url": "https://api.github.com/repos/rousseau-christopher/wiremock", "Date": "2016-03-08T16:00:58Z"},
{"Line": "=>2539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bitLength % 32) == 0) bIntIdx--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2373/buggy-version/src.main.java.java.math.BigInteger.java", "BodyUseAPI": [], "Fixed commit": "db93c57ecc1cce9d0a01bc865109be8027e08465", "Url": "https://api.github.com/repos/tbuktu/bigint", "Date": "2013-03-23T19:57:25Z"},
{"Line": "=>1407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(testSuitePath)) { xPathExpression = xpath.compile(testSuitePath); testSuiteNode = ((org.w3c.dom.NodeList) (xPathExpression.evaluate(doc, javax.xml.xpath.XPathConstants.NODESET))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2992/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.rest.api.QualityService.java", "BodyUseAPI": ["javax.xml.xpath.XPath.compile(java.lang.String)"], "Fixed commit": "79a4043bdd798f569cd75979e4230f1f336c6c81", "Url": "https://api.github.com/repos/photon-infotech/framework", "Date": "2014-01-18T07:17:22Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Transaction.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (currOp.type.equals(\"W\")) { recordTree.put(currOp.record.ID, targetLock); }else { recordTree.put(java.lang.Integer.valueOf(currOp.val), targetLock); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6451/buggy-version/src.LockTree.java", "BodyUseAPI": ["RecordLockTree.put(java.lang.Integer,Lock)", "java.lang.Integer.valueOf(currOp.val)", "RecordLockTree.put(currOp.record.ID,Lock)"], "Fixed commit": "d8d94fe8de0ce279e6391af6557c83af6e7ec7b6", "Url": "https://api.github.com/repos/rmmcnulty9/myPTM", "Date": "2012-04-16T02:28:12Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (recordTree.hasFileLock(targetTxn)) { return true; }else { if (currOp.type.equals(\"W\")) { targetLock = recordTree.get(currOp.record.ID); }else { targetLock = recordTree.get(java.lang.Integer.valueOf(currOp.val)); } if (targetLock == null) { targetLock = new Lock(); if (currOp.type.equals(\"W\")) { recordTree.put(currOp.record.ID, targetLock); }else { recordTree.put(java.lang.Integer.valueOf(currOp.val), targetLock); } } return targetLock.attemptAcquire(targetTxn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6451/buggy-version/src.LockTree.java", "BodyUseAPI": ["Lock.attemptAcquire(Transaction)", "RecordLockTree.put(currOp.record.ID,Lock)", "RecordLockTree.put(java.lang.Integer,Lock)", "RecordLockTree.get(currOp.record.ID)", "RecordLockTree.get(java.lang.Integer)"], "Fixed commit": "d8d94fe8de0ce279e6391af6557c83af6e7ec7b6", "Url": "https://api.github.com/repos/rmmcnulty9/myPTM", "Date": "2012-04-16T02:28:12Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3923/buggy-version/src.main.java.PageInfoDataStore.java", "BodyUseAPI": [], "Fixed commit": "ba9cad403a31459e653ff3107671ad876689490e", "Url": "https://api.github.com/repos/nimboys/ElasticDocumenter", "Date": "2017-08-23T05:38:40Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jsonElement.isJsonArray()) { element = jsonElement.getAsJsonArray().get(0).getAsJsonObject(); }else { element = jsonElement.getAsJsonObject(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8472/buggy-version/library.src.main.java.amatkivskiy.gitter.rx.sdk.converter.UserJsonDeserializer.java", "BodyUseAPI": ["jsonElement.getAsJsonArray().get(int)", "amatkivskiy.gitter.rx.sdk.converter.JsonElement.getAsJsonObject()", "jsonElement.getAsJsonArray().get(0).getAsJsonObject()", "amatkivskiy.gitter.rx.sdk.converter.JsonElement.getAsJsonArray()"], "Fixed commit": "8bd548d1231421f9d14ebca7d52ae822aa27620f", "Url": "https://api.github.com/repos/Gitteroid/GitterJavaSDK", "Date": "2015-10-04T12:13:57Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((element.get(\"v\")) != null) { v = element.get(\"v\").getAsInt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8472/buggy-version/library.src.main.java.amatkivskiy.gitter.rx.sdk.converter.UserJsonDeserializer.java", "BodyUseAPI": ["amatkivskiy.gitter.rx.sdk.converter.JsonObject.get(java.lang.String)", "element.get(\"v\").getAsInt()"], "Fixed commit": "8bd548d1231421f9d14ebca7d52ae822aa27620f", "Url": "https://api.github.com/repos/Gitteroid/GitterJavaSDK", "Date": "2015-10-04T12:13:57Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (multiClickIterval != null) { java.lang.System.setProperty(\"jnativehook.pointer.acceleration.multiplier\", pointerAccelerationMultiplier.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/979/buggy-version/src.java.org.jnativehook.GlobalScreen.java", "BodyUseAPI": [], "Fixed commit": "d580327ef3db777dadbd0fd595678e8bcf3a1460", "Url": "https://api.github.com/repos/kwhat/jnativehook", "Date": "2016-11-09T21:47:24Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (autoRepeatRate != null) { java.lang.System.setProperty(\"jnativehook.key.repeat.rate\", autoRepeatRate.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/979/buggy-version/src.java.org.jnativehook.GlobalScreen.java", "BodyUseAPI": [], "Fixed commit": "d580327ef3db777dadbd0fd595678e8bcf3a1460", "Url": "https://api.github.com/repos/kwhat/jnativehook", "Date": "2016-11-09T21:47:24Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (multiClickIterval != null) { java.lang.System.setProperty(\"jnativehook.pointer.acceleration.threshold\", pointerAccelerationThreshold.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/979/buggy-version/src.java.org.jnativehook.GlobalScreen.java", "BodyUseAPI": [], "Fixed commit": "d580327ef3db777dadbd0fd595678e8bcf3a1460", "Url": "https://api.github.com/repos/kwhat/jnativehook", "Date": "2016-11-09T21:47:24Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (autoRepeatDelay != null) { java.lang.System.setProperty(\"jnativehook.key.repeat.delay\", autoRepeatDelay.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/979/buggy-version/src.java.org.jnativehook.GlobalScreen.java", "BodyUseAPI": [], "Fixed commit": "d580327ef3db777dadbd0fd595678e8bcf3a1460", "Url": "https://api.github.com/repos/kwhat/jnativehook", "Date": "2016-11-09T21:47:24Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdView) != null) { height -= mAdView.getHeight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5899/buggy-version/app.src.main.java.uk.co.pranacreative.timekiller.TimeKillerActivity.java", "BodyUseAPI": [], "Fixed commit": "efdb412cb9d1072ca547c85af7a39169fc2e6630", "Url": "https://api.github.com/repos/philipmiesbauer/TimeKiller", "Date": "2017-10-15T00:09:05Z"},
{"Line": "=>691", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdView) != null) { mAdView.setVisibility(View.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5899/buggy-version/app.src.main.java.uk.co.pranacreative.timekiller.TimeKillerActivity.java", "BodyUseAPI": [], "Fixed commit": "efdb412cb9d1072ca547c85af7a39169fc2e6630", "Url": "https://api.github.com/repos/philipmiesbauer/TimeKiller", "Date": "2017-10-15T00:09:05Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (string.endsWith(\"</p>\")) { string = string.substring(0, ((string.length()) - 4)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8153/buggy-version/app.src.main.java.com.app.maththpt.utils.Utils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "2a88c416b251391e1c0b3565dc4ef10c09ed4d60", "Url": "https://api.github.com/repos/oNguyenDucManh/Maththpt_Android", "Date": "2017-03-15T10:03:33Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hash < 0) { hash += size; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1718/buggy-version/src.MyHashMap.java", "BodyUseAPI": [], "Fixed commit": "2765c280c5df8356916a4108e65284726da47707", "Url": "https://api.github.com/repos/jaycaz/kpcb-hashmap", "Date": "2015-11-01T04:24:48Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.valentine.game.core.Looper.isRunning()) com.valentine.game.core.Game.instance().update();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3950/buggy-version/src.com.valentine.game.core.Looper.java", "BodyUseAPI": [], "Fixed commit": "2fe51a0fecdb7ddbd4a4ce86870c78718d695f91", "Url": "https://api.github.com/repos/ValentineStone/Game", "Date": "2016-01-29T14:01:06Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["i.getFileName().toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lc.contains(\"tour\")) { nameId = R.string.index_tours; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3697/buggy-version/OsmAnd.src.net.osmand.plus.download.IndexItemCategory.java", "BodyUseAPI": [], "Fixed commit": "a69872e08e2ecaf12d3b670d1eb06b13d57288fa", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2014-08-21T00:29:39Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (imageURL.startsWith(\"http\")) { this.imageURL = imageURL; }else { this.imageURL = ((edu.asu.laits.editor.ApplicationContext.getRootURL()) + \"/\") + imageURL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2257/buggy-version/src.edu.asu.laits.model.TaskSolution.java", "BodyUseAPI": [], "Fixed commit": "0ca95ae4290f08b1c04801ec350c317e106244b6", "Url": "https://api.github.com/repos/rptiwari/LaitsV3", "Date": "2013-08-01T18:28:04Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((org.jboss.pressgang.ccms.contentspec.KeyValueNode) (node)).getKey().equals(CommonConstants.CS_PUBLICAN_CFG_TITLE)) || (((org.jboss.pressgang.ccms.contentspec.KeyValueNode) (node)).getKey().endsWith((\"-\" + (org.jboss.pressgang.ccms.utils.constants.CommonConstants.CS_PUBLICAN_CFG_TITLE))))) { final java.lang.String publicanCfg = ((java.lang.String) (((org.jboss.pressgang.ccms.contentspec.KeyValueNode) (node)).getValue())); current += org.apache.commons.lang.StringUtils.countMatches(publicanCfg, \"\\n\"); }else if (((org.jboss.pressgang.ccms.contentspec.KeyValueNode) (node)).getKey().equals(CommonConstants.CS_ENTITIES_TITLE)) { final java.lang.String entities = ((java.lang.String) (((org.jboss.pressgang.ccms.contentspec.KeyValueNode) (node)).getValue())); current += org.apache.commons.lang.StringUtils.countMatches(entities, \"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5089/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.utils.CSTransformer.java", "BodyUseAPI": ["org.jboss.pressgang.ccms.contentspec.Node.getValue()", "((org.jboss.pressgang.ccms.contentspec.KeyValueNode) (node)).getKey().equals(CommonConstants.CS_ENTITIES_TITLE)", "org.jboss.pressgang.ccms.contentspec.Node.getValue()", "org.jboss.pressgang.ccms.contentspec.Node.getKey()"], "Fixed commit": "7303d3db53e2748f082f8ae9aab43396a6962985", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpec", "Date": "2014-03-30T23:59:57Z"},
{"Line": "=>965", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.thetonyk.UHC.Utils.GameUtils.getWorld()) != null) { org.bukkit.Bukkit.getWorld(com.thetonyk.UHC.Utils.GameUtils.getWorld()).getWorldBorder().setSize(com.thetonyk.UHC.Utils.WorldUtils.getSize(com.thetonyk.UHC.Utils.GameUtils.getWorld())); org.bukkit.Bukkit.getWorld(com.thetonyk.UHC.Utils.GameUtils.getWorld()).setPVP(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6290/buggy-version/CommandsUHC.src.com.thetonyk.UHC.Utils.GameUtils.java", "BodyUseAPI": [], "Fixed commit": "b1c5c1d71b58914cfa0a506e7eb43ba1646c3708", "Url": "https://api.github.com/repos/TheTonyk/CommandsUHC", "Date": "2016-07-19T00:48:04Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getAction()) != (org.bukkit.event.block.Action.RIGHT_CLICK_BLOCK)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5183/buggy-version/src.main.java.com.eltorqiro.bukkit.MagicEraser.MagicEraserPlayerListener.java", "BodyUseAPI": [], "Fixed commit": "2d9a30fe4770f82f475156bbd8828fc85863a582", "Url": "https://api.github.com/repos/eltorqiro/TQMagicEraser", "Date": "2011-05-24T22:59:47Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPageLoaderSubscription) != null) { mPageLoaderSubscription.unsubscribe(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4497/buggy-version/app.src.main.java.acr.browser.lightning.activity.ReadingActivity.java", "BodyUseAPI": [], "Fixed commit": "95b83d11526bf8125e9c2586242758d0fdaa80d7", "Url": "https://api.github.com/repos/toandrew/Lightning-Browser", "Date": "2016-07-31T13:02:07Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { mAccount = accounts[0]; mStorageManager = new com.owncloud.android.datamodel.FileDataStorageManager(mAccount, getContentResolver()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/950/buggy-version/src.com.owncloud.android.ui.activity.Uploader.java", "BodyUseAPI": [], "Fixed commit": "e230ce33f7073672565144f880f001d9354ac916", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2015-03-17T13:53:18Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c.getParticipants().size()) != (participants.size())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1460/buggy-version/mobile.src.main.java.sketchagram.chalmers.com.database.SketchagramDb.java", "BodyUseAPI": [], "Fixed commit": "135e1cfb6bbf54a21f0f8dc8e9c3961018c50d7b", "Url": "https://api.github.com/repos/frapperino/sketchagram", "Date": "2015-04-27T16:11:47Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((weibo.getCluster()) != null) { if (!(clusters.containsKey(weibo.getCluster()))) { clusters.put(weibo.getCluster(), new java.util.LinkedList<finance_event_prediction.Weibo>()); } clusters.get(weibo.getCluster()).add(weibo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1603/buggy-version/finance-event.src.main.java.finance_event_prediction.ClusterProcessor.java", "BodyUseAPI": ["finance_event_prediction.Weibo.getCluster()", "java.util.Map<moa.cluster.Cluster, java.util.List<finance_event_prediction.Weibo>>.get(weibo.getCluster())", "finance_event_prediction.Weibo.getCluster()", "java.util.Map<moa.cluster.Cluster, java.util.List<finance_event_prediction.Weibo>>.put(weibo.getCluster(),java.util.LinkedList<finance_event_prediction.Weibo>)", "java.util.Map<moa.cluster.Cluster, java.util.List<finance_event_prediction.Weibo>>.containsKey(weibo.getCluster())", "clusters.get(weibo.getCluster()).add(finance_event_prediction.Weibo)", "finance_event_prediction.Weibo.getCluster()"], "Fixed commit": "7650a5a019d2d2c97d7ef9fbdf3bcc855efe8b5e", "Url": "https://api.github.com/repos/candiceluoxuan/finance-event-prediction", "Date": "2014-05-12T14:43:40Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cytoscape.model.CyRow.getRaw(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (raw == null) { org.cytoscape.model.CyColumn column = row.getTable().getColumn(columnName); raw = column.getDefaultValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1220/buggy-version/table-browser-impl.src.main.java.org.cytoscape.browser.internal.BrowserTableModel.java", "BodyUseAPI": [], "Fixed commit": "8b7d7e668ee5e649c6d246f771f9cfc41668ec66", "Url": "https://api.github.com/repos/cytoscape/cytoscape-impl", "Date": "2013-05-28T19:18:39Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (derivedPropCache.add(derivedProp)) { edu.emory.cci.aiw.i2b2etl.dest.metadata.conceptid.PropDefConceptId derivedConceptId = edu.emory.cci.aiw.i2b2etl.dest.metadata.conceptid.PropDefConceptId.getInstance(derivedProp.getId(), null, null, getMetadata()); doInsert(derivedConceptId, derivedProp, encounterProp, patient, visit, provider); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7673/buggy-version/src.main.java.edu.emory.cci.aiw.i2b2etl.dest.table.PropositionFactHandler.java", "BodyUseAPI": ["edu.emory.cci.aiw.i2b2etl.dest.table.PropositionFactHandler.doInsert(edu.emory.cci.aiw.i2b2etl.dest.metadata.conceptid.PropDefConceptId,edu.emory.cci.aiw.i2b2etl.dest.table.Proposition,edu.emory.cci.aiw.i2b2etl.dest.table.Proposition,edu.emory.cci.aiw.i2b2etl.dest.table.PatientDimension,edu.emory.cci.aiw.i2b2etl.dest.table.VisitDimension,edu.emory.cci.aiw.i2b2etl.dest.table.ProviderDimension)", "edu.emory.cci.aiw.i2b2etl.dest.table.Proposition.getId()", "edu.emory.cci.aiw.i2b2etl.dest.metadata.conceptid.PropDefConceptId.getInstance(derivedProp.getId(),<nulltype>,<nulltype>,getMetadata())"], "Fixed commit": "d96848c2a5924dfae22c006c027e02aa7a2efd8f", "Url": "https://api.github.com/repos/eurekaclinical/aiw-i2b2-etl", "Date": "2016-04-12T02:21:20Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.outputStream) != null) { final java.io.OutputStream outputStream = this.outputStream; updateWriter(outputStream, encoding); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3245/buggy-version/src.main.java.org.jboss.logmanager.handlers.OutputStreamHandler.java", "BodyUseAPI": [], "Fixed commit": "4763470e2497990f5563773aa4b5aa71d6e85324", "Url": "https://api.github.com/repos/jboss-logging/jboss-logmanager", "Date": "2013-08-09T09:27:45Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rootCommand) != null) { rootCommand.onCommand(sender, args); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1228/buggy-version/Kore-Bukkit.src.main.java.com.kosakorner.kosakore.bukkit.command.BukkitDispatcher.java", "BodyUseAPI": [], "Fixed commit": "2d5ed404f167585d79905f0219ae0005d3925aa3", "Url": "https://api.github.com/repos/kosakriszi/KosaKore", "Date": "2015-06-19T22:35:15Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rootCommand) != null) { results.addAll(rootCommand.onTabComplete(sender, args)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1228/buggy-version/Kore-Bukkit.src.main.java.com.kosakorner.kosakore.bukkit.command.BukkitDispatcher.java", "BodyUseAPI": [], "Fixed commit": "2d5ed404f167585d79905f0219ae0005d3925aa3", "Url": "https://api.github.com/repos/kosakriszi/KosaKore", "Date": "2015-06-19T22:35:15Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(applicationFormDAO.queryByOpenid(openid).isPresent())) { entity.ApplicationForm applicationForm = new entity.ApplicationForm(); applicationForm.setOpenid(openid); applicationFormDAO.addForm(applicationForm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6334/buggy-version/src.main.java.service.impl.WechatServiceImpl.java", "BodyUseAPI": ["entity.ApplicationForm.setOpenid(java.lang.String)", "dao.ApplicationFormDAO.addForm(entity.ApplicationForm)"], "Fixed commit": "9c912de65e0261e966a2aa4252dec71bbadb77cf", "Url": "https://api.github.com/repos/scuisdc/isdc-ssh", "Date": "2017-09-12T10:37:54Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.group(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (majorStr == null) throw new org.laxio.piston.piston.exception.versioning.VersionParseException(\"No major version\", string);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2688/buggy-version/src.main.java.org.laxio.piston.piston.versioning.Version.java", "BodyUseAPI": [], "Fixed commit": "25645d6d8578a5581169b55852d6f7db4c214116", "Url": "https://api.github.com/repos/Laxio/PistonAPI", "Date": "2017-12-24T02:31:46Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.group(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (minorStr == null) throw new org.laxio.piston.piston.exception.versioning.VersionParseException(\"No minor version\", string);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2688/buggy-version/src.main.java.org.laxio.piston.piston.versioning.Version.java", "BodyUseAPI": [], "Fixed commit": "25645d6d8578a5581169b55852d6f7db4c214116", "Url": "https://api.github.com/repos/Laxio/PistonAPI", "Date": "2017-12-24T02:31:46Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.search.SearchContext.getEnd()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (end == (com.liferay.portal.kernel.dao.orm.QueryUtil.ALL_POS)) { end = total; }else if (end < 0) { throw new java.lang.IllegalArgumentException((\"Invalid end \" + end)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/388/buggy-version/portal-search-elasticsearch.src.main.java.com.liferay.portal.search.elasticsearch.internal.ElasticsearchIndexSearcher.java", "BodyUseAPI": [], "Fixed commit": "88f5ce45ff5b22202808e5448b26ecebcb67b5a8", "Url": "https://api.github.com/repos/liferay/com-liferay-portal-search", "Date": "2017-04-26T19:07:19Z"},
{"Line": "=>882", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((canFly) == false) { death(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5620/buggy-version/core.src.com.dbash.models.Creature.java", "BodyUseAPI": [], "Fixed commit": "4b341756c375c38f4ea0283bd0dd6b870cc6b615", "Url": "https://api.github.com/repos/stefoid/dungeonbash", "Date": "2014-12-24T10:02:27Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.dbash.presenters.dungeon.CreaturePresenter.LOG) com.dbash.util.L.log(\"sequenceNumber: %s, fromPosition: %s, toPosition: %s, moveType:%s\", sequenceNumber, fromPosition, toPosition, moveType);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5620/buggy-version/core.src.com.dbash.presenters.dungeon.CreaturePresenter.java", "BodyUseAPI": [], "Fixed commit": "4b341756c375c38f4ea0283bd0dd6b870cc6b615", "Url": "https://api.github.com/repos/stefoid/dungeonbash", "Date": "2014-12-24T10:02:27Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.kristal.shareplugin.utils.ParsingShareData.returnDataFromWeb()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (data == null) { android.util.Log.e(io.kristal.shareplugin.SharePlugin.TAG, \"Fatal: Parsed data is null.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6767/buggy-version/src.main.java.io.kristal.shareplugin.SharePlugin.java", "BodyUseAPI": [], "Fixed commit": "1afb56cb940127b2e28f1258ccc039ffd0ba1675", "Url": "https://api.github.com/repos/Cobaltians-Plugins/Plugins-Share-Android", "Date": "2016-05-13T15:09:33Z"},
{"Line": "=>572", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.maps.android.kml.KmlPlacemark.hasProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hasName) { marker.setTitle(placemark.getProperty(\"name\")); createInfoWindow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7563/buggy-version/library.src.com.google.maps.android.kml.KmlRenderer.java", "BodyUseAPI": [], "Fixed commit": "0d9265155551c5b2a4305c4314e00d987c99e4a0", "Url": "https://api.github.com/repos/jeffdgr8/android-maps-utils", "Date": "2016-12-04T23:20:55Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uri.toString().contains(\"?\")) url = new java.net.URL((((uri.toString()) + \"&access_token=\") + (edu.northwestern.cbits.xsi.oauth.Keystore.get(edu.northwestern.cbits.xsi.oauth.GitHubApi.USER_TOKEN)))); else url = new java.net.URL((((uri.toString()) + \"?access_token=\") + (edu.northwestern.cbits.xsi.oauth.Keystore.get(edu.northwestern.cbits.xsi.oauth.GitHubApi.USER_TOKEN))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7861/buggy-version/src.edu.northwestern.cbits.xsi.oauth.GitHubApi.java", "BodyUseAPI": ["android.net.Uri.toString()", "android.net.Uri.toString()"], "Fixed commit": "4a6e123f7c672471890d01a2a740419dda5cd4b1", "Url": "https://api.github.com/repos/audaciouscode/xsi-android", "Date": "2015-02-10T22:57:00Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["todolist.model.TokenizedCommand.getAction()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(action.equals(\"undo\"))) && (!(action.equals(\"redo\")))) { logic.stepForward(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3432/buggy-version/src.todolist.logic.CaseSwitcher.java", "BodyUseAPI": [], "Fixed commit": "e12a61d11fc6fcd0ca845c4ecbcb0f0ab8b3d0b8", "Url": "https://api.github.com/repos/cs2103jan2016-w13-2j/ToDoList", "Date": "2016-04-09T06:50:49Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.getListAdapter()) == null) || ((this.getListAdapter().getCount()) == 0)) { searcher = new fr.neamar.kiss.searcher.HistorySearcher(this); searcher.execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7118/buggy-version/app.src.main.java.fr.neamar.kiss.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5395bd9302d57e55e40f8c3b961bc92c77a80b31", "Url": "https://api.github.com/repos/Neamar/KISS", "Date": "2016-03-01T00:10:29Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (free.contains(t)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2174/buggy-version/commons-gdx-core.src.main.java.com.gemserk.commons.utils.Store.java", "BodyUseAPI": [], "Fixed commit": "5306b726b140d97e77e94919d8f25aa800a032bb", "Url": "https://api.github.com/repos/gemserk/commons-gdx", "Date": "2012-04-21T15:00:12Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["play.i18n.Lang.defaultLang().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lang.equals(\"de\")) { factory = new at.ac.tuwien.big.we14.lab2.api.impl.PlayQuizFactory(controllers.Play.application().configuration().getString(\"questions.de\"), user); play.Logger.info(\"Questions loaded in german\"); }else { factory = new at.ac.tuwien.big.we14.lab2.api.impl.PlayQuizFactory(controllers.Play.application().configuration().getString(\"questions.en\"), user); play.Logger.info(\"Questions loaded in english\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6020/buggy-version/UE3-AG_97_gruppe.we-lab3-group97.app.controllers.Quiz.java", "BodyUseAPI": [], "Fixed commit": "0921959751754dc3c03109d050ffd97399e23d4a", "Url": "https://api.github.com/repos/AdiMitEier/befabe", "Date": "2014-05-11T11:35:50Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newPassengers < 0) throw new asgn2Exceptions.TrainException(asgn2Train.DepartingTrain.CANNOT_BOARD_NEGATIVE_NUMBER_OF_PASSANGER);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5934/buggy-version/assign2.src.asgn2Train.DepartingTrain.java", "BodyUseAPI": [], "Fixed commit": "524e00542021d89957dd5d1dcb6770c579439777", "Url": "https://api.github.com/repos/charlestontelles/INN370", "Date": "2013-05-12T07:07:35Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((quoteStart == (-1)) || (quoteEnd == (-1))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3049/buggy-version/plugins.org.jkiss.dbeaver.core.src.org.jkiss.dbeaver.ui.editors.sql.indent.SQLAutoIndentStrategy.java", "BodyUseAPI": [], "Fixed commit": "9fa914372e364c0bd590e95523a0fac4b72fbbaa", "Url": "https://api.github.com/repos/dbeaver/dbeaver", "Date": "2016-04-15T12:30:57Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.nls.oskari.util.JSONHelper.createJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (obj != null) { return obj; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1798/buggy-version/service-statistics-common.src.main.java.fi.nls.oskari.control.statistics.plugins.db.StatisticalDatasource.java", "BodyUseAPI": [], "Fixed commit": "7a59828128c46543066d17c1b82182cbfe18d6f0", "Url": "https://api.github.com/repos/hvisuri/oskari-server", "Date": "2017-05-08T12:17:23Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(parent.exists())) { parent.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6808/buggy-version/project.src.common.JAXBHandler.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "5769cd7f24c005f904fdee6a1fbb78e1bfe16d3a", "Url": "https://api.github.com/repos/joshuaju/SMS", "Date": "2016-03-04T08:14:33Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["customDrop.getAttackerDamage().getRandomIn(customDrop.rng)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (damage != 0) { com.gmail.zariust.otherdrops.Log.logInfo((\"Damaging attacker: \" + damage), Verbosity.HIGH); used.damage(damage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2921/buggy-version/src.com.gmail.zariust.otherdrops.event.DropRunner.java", "BodyUseAPI": ["com.gmail.zariust.otherdrops.Log.logInfo(java.lang.String,Verbosity.HIGH)", "com.gmail.zariust.otherdrops.subject.Agent.damage(int)"], "Fixed commit": "7370d8da7c306949ef7f9f73730f557da3bf33ba", "Url": "https://api.github.com/repos/Zarius/Bukkit-OtherBlocks", "Date": "2012-03-30T14:07:22Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.onebank.dmbclient.dmb.DMBManager.getDmbEnv(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (config == null) throw new java.lang.RuntimeException(java.lang.String.format(\"dmb config [%s] is not found\", env));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3009/buggy-version/src.main.java.cn.onebank.dmbclient.dmb.DMBManager.java", "BodyUseAPI": [], "Fixed commit": "7efe4d3114acf626d404ef8bfecc48f1aa7375fd", "Url": "https://api.github.com/repos/shumingl/dmbclient-telnet", "Date": "2017-10-22T14:26:37Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.onebank.telnet.configuration.ConfigurationManager.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cn.onebank.dmbclient.utility.string.StringUtil.isNullOrEmpty(address)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3009/buggy-version/src.main.java.cn.onebank.dmbclient.dmb.DMBManager.java", "BodyUseAPI": [], "Fixed commit": "7efe4d3114acf626d404ef8bfecc48f1aa7375fd", "Url": "https://api.github.com/repos/shumingl/dmbclient-telnet", "Date": "2017-10-22T14:26:37Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof java.lang.Float) return (((\"(\" + (com.tinkerpop.blueprints.util.io.graphson.GraphSONTokens.TYPE_FLOAT)) + \",\") + value) + \")\"; else if (value instanceof java.lang.Double) return (((\"(\" + (com.tinkerpop.blueprints.util.io.graphson.GraphSONTokens.TYPE_DOUBLE)) + \",\") + value) + \")\"; else if (value instanceof java.util.List) { com.google.common.base.Joiner joiner = com.google.common.base.Joiner.on(\",\"); return (((\"(\" + (com.tinkerpop.blueprints.util.io.graphson.GraphSONTokens.TYPE_LIST)) + \",[\") + (joiner.join(((java.util.List) (value))))) + \"])\"; }else return (\"(s,\" + (value.toString())) + \")\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8023/buggy-version/blueprints-rexster-graph.src.main.java.com.tinkerpop.blueprints.impls.rexster.RestHelper.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "4d4a9f8204affd28d78d9a26e3e95d071d1ff000", "Url": "https://api.github.com/repos/w2ogroup/blueprints", "Date": "2015-04-21T21:10:43Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name == null) name = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8034/buggy-version/src.com.wolvencraft.prison.mines.util.Message.java", "BodyUseAPI": [], "Fixed commit": "05ba0aa428848870aba2752ca14f6d1b06d6ad13", "Url": "https://api.github.com/repos/bitWolfy/PrisonMine", "Date": "2012-12-23T23:56:05Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLastOnStack(com.fossnova.json.JsonGrammarToken.ARRAY_START)) { canWriteComma = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3527/buggy-version/impl.src.main.java.com.fossnova.json.JsonGrammarAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "fa1dc22e345bcb05e02c037fd7b2612015f01b1b", "Url": "https://api.github.com/repos/fossnova/json", "Date": "2012-08-23T10:35:38Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLastOnStack(com.fossnova.json.JsonGrammarToken.ARRAY_START)) { canWriteComma = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3527/buggy-version/impl.src.main.java.com.fossnova.json.JsonGrammarAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "fa1dc22e345bcb05e02c037fd7b2612015f01b1b", "Url": "https://api.github.com/repos/fossnova/json", "Date": "2012-08-23T10:35:38Z"},
{"Line": "=>613", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((rec[4]) == null) { indx = i; }else { indx = (((java.lang.Integer) (rec[4])).intValue()) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6625/buggy-version/JavaSource.org.unitime.timetable.action.DistributionPrefsAction.java", "BodyUseAPI": ["java.lang.Object.intValue()"], "Fixed commit": "604335628b9f52dc9df1716b4bdc8229cbbaed09", "Url": "https://api.github.com/repos/UniTime/unitime", "Date": "2008-11-01T18:47:11Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (launched) carrental.CarRental.getView().displayError(string);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5977/buggy-version/src.carrental.CarRental.java", "BodyUseAPI": [], "Fixed commit": "bdb3ac97e0e6a6ed1e2c7decb2fcc94cf01e2427", "Url": "https://api.github.com/repos/CNN/CarRental", "Date": "2011-12-14T14:05:46Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.codepath.apps.nommable.fragments.MapFragment.view) != null) { android.view.ViewGroup parent = ((android.view.ViewGroup) (com.codepath.apps.nommable.fragments.MapFragment.view.getParent())); if (parent != null) parent.removeView(com.codepath.apps.nommable.fragments.MapFragment.view); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8391/buggy-version/src.com.codepath.apps.nommable.fragments.MapFragment.java", "BodyUseAPI": [], "Fixed commit": "9e9d9604fa2e666645c17679054fd89f9da1516a", "Url": "https://api.github.com/repos/zetsubo/Nommable", "Date": "2013-11-25T09:16:06Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getScreenStackSize()) > 1) { pop(getCurrentNavigatorId()); }else { super.onBackPressed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2825/buggy-version/android.app.src.main.java.com.reactnativenavigation.activities.BaseReactActivity.java", "BodyUseAPI": [], "Fixed commit": "6b9e4d9b7833e4ea0276a7c6761d16ce5e422650", "Url": "https://api.github.com/repos/techery/react-native-navigation", "Date": "2016-08-09T08:18:24Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_C_DocTypeTarget_ID) > 0) { org.compiere.model.MDocType m_DocType = org.compiere.model.MDocType.get(org.compiere.util.Env.getCtx(), m_C_DocTypeTarget_ID); m_IsValidateQuantity = m_DocType.get_ValueAsBoolean(\"IsValidateQuantity\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/548/buggy-version/client.org.spin.form.LoadOrder.java", "BodyUseAPI": [], "Fixed commit": "a7a0791647d68296b4108c084ddbf96671d64b84", "Url": "https://api.github.com/repos/erpcya/FTA", "Date": "2015-01-30T20:26:27Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((regionPlan.getSource()) == null) { serverNameSource = \"N/A\"; }else { serverNameSource = regionPlan.getSource().getServerName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/795/buggy-version/hbase0.98.hbase-manager-0.98.src.main.java.com.kakao.hbase.manager.command.Balance.java", "BodyUseAPI": ["regionPlan.getSource().getServerName()", "org.apache.hadoop.hbase.master.RegionPlan.getSource()"], "Fixed commit": "e98f8f7ac114b723a660450474f5834f730570f9", "Url": "https://api.github.com/repos/kakao/hbase-tools", "Date": "2016-03-21T10:23:58Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mBluetoothAdapter.getName()) == null) mBluetoothAdapter.setName(((it.chalmers.tendu.network.bluetooth.BluetoothHandler.APP_NAME) + \"\")); else { java.lang.String name = mBluetoothAdapter.getName(); if (!(name.contains(it.chalmers.tendu.network.bluetooth.BluetoothHandler.APP_NAME))) { mBluetoothAdapter.setName(((name + \" - \") + (it.chalmers.tendu.network.bluetooth.BluetoothHandler.APP_NAME))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5844/buggy-version/Tendu-android.src.it.chalmers.tendu.network.bluetooth.BluetoothHandler.java", "BodyUseAPI": ["android.bluetooth.BluetoothAdapter.getName()", "android.bluetooth.BluetoothAdapter.setName(java.lang.String)", "android.bluetooth.BluetoothAdapter.setName(java.lang.String)"], "Fixed commit": "c5f6abdc998f55766a1e65bace16c0b469da25d2", "Url": "https://api.github.com/repos/tortal/IT2-LP1-Tendu", "Date": "2013-09-26T09:46:04Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (userChoice <= (localCategoryBinding.size())) { if (userInputArray[0].equals(\"complete\")) { datagram = new ch.theowinter.ToxicTodo.utilities.primitives.ToxicDatagram(\"REMOVE_AND_LOG_TASK_AS_COMPLETED_ON_SERVER\", \"\", localTaskBinding.get((userChoice - 1)), localCategoryBinding.get((userChoice - 1))); }else if (userInputArray[0].equals(\"remove\")) { datagram = new ch.theowinter.ToxicTodo.utilities.primitives.ToxicDatagram(\"REMOVE_TASK_ON_SERVER\", \"\", localTaskBinding.get((userChoice - 1)), localCategoryBinding.get((userChoice - 1))); } }else { ch.theowinter.ToxicTodo.client.ClientToxicTodo.print(\"There's no task with that ID.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6862/buggy-version/ToxicTodo.src.ch.theowinter.ToxicTodo.client.ClientTodoManager.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<ch.theowinter.ToxicTodo.utilities.primitives.TodoTask>.get(int)", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<ch.theowinter.ToxicTodo.utilities.primitives.TodoTask>.get(int)"], "Fixed commit": "bdf71bced541b1198cbc11c4ab8ce7bc92dbc0b0", "Url": "https://api.github.com/repos/aerobless/ToxicTodo", "Date": "2014-03-18T19:02:10Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPlaying) editor.apply();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3470/buggy-version/QuickLyric.src.main.java.com.geecko.QuickLyric.broadcastReceiver.MusicBroadcastReceiver.java", "BodyUseAPI": [], "Fixed commit": "c82c2d456a4cc03a6f37d42dd9250ec8ec332e3e", "Url": "https://api.github.com/repos/QuickLyric/QuickLyric", "Date": "2015-05-11T04:28:26Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getSharedPreferences(java.lang.String,Context.MODE_PRIVATE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (track.equals(current.getString(\"track\", \"\"))) android.support.v4.app.NotificationManagerCompat.from(context).cancel(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3470/buggy-version/QuickLyric.src.main.java.com.geecko.QuickLyric.broadcastReceiver.MusicBroadcastReceiver.java", "BodyUseAPI": [], "Fixed commit": "c82c2d456a4cc03a6f37d42dd9250ec8ec332e3e", "Url": "https://api.github.com/repos/QuickLyric/QuickLyric", "Date": "2015-05-11T04:28:26Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nextLine.length) >= 3) { org.apache.commons.cli.Option o = new org.apache.commons.cli.Option(null, nextLine[0], java.lang.Boolean.parseBoolean(nextLine[1]), nextLine[2]); all_opt.addOption(o); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4466/buggy-version/server.src.main.java.org.kaazing.gateway.server.GatewayCommandLineProcessor.java", "BodyUseAPI": ["java.lang.Boolean.parseBoolean(java.lang.String)"], "Fixed commit": "2685c63dc3aa6750e3eceeb4d78624b2b1d3de1f", "Url": "https://api.github.com/repos/cmebarrow/gateway", "Date": "2017-01-04T18:30:37Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["alluxio.underfs.jss.JSSUnderFileSystem.getObjectDetails(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((null != details) && (0 != (details.getContentLength()))) { alluxio.underfs.jss.JSSUnderFileSystem.sJSSOperator.getJSSClient().bucket(mBucketName).object(dst).copyFrom(mBucketName, src).copy(); }else { alluxio.underfs.jss.JSSUnderFileSystem.sJSSOperator.getJSSClient().bucket(mBucketName).object(dst).put(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7177/buggy-version/underfs.jss.src.main.java.alluxio.underfs.jss.JSSUnderFileSystem.java", "BodyUseAPI": [], "Fixed commit": "dbd103690637b7513344ed9fbf2329f2157f1e82", "Url": "https://api.github.com/repos/ErgeSun/alluxio", "Date": "2016-06-08T07:16:34Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fetchCompleted) { stop(); start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7969/buggy-version/src.main.java.org.springframework.integration.kafka.listener.KafkaMessageListenerContainer.java", "BodyUseAPI": [], "Fixed commit": "f25df742bb40bf5682ec30c92d7c81a8f6812471", "Url": "https://api.github.com/repos/vladislav-sidorovich/spring-integration-kafka", "Date": "2015-10-22T09:21:22Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uri.getScheme()) == null) { throw new java.net.MalformedURLException(((\"Url \" + url) + \" does not have a sub-protocol. Herman protocols are required to have a sub-protocol.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/846/buggy-version/herman-core.src.main.java.com.digitalreasoning.herman.HermanUrlStreamHandler.java", "BodyUseAPI": [], "Fixed commit": "98c2d6fea076485cdf54f9f722b9eac53a019766", "Url": "https://api.github.com/repos/digitalreasoning/herman", "Date": "2013-07-16T12:02:51Z"},
{"Line": "=>567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((orderLine.getDiscount()) != null) { price = price.multiply(java.math.BigDecimal.valueOf(orderLine.getDiscount().getPercent())); price = price.divide(java.math.BigDecimal.valueOf(100)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7391/buggy-version/business.src.org.key2gym.business.OrdersServiceBean.java", "BodyUseAPI": ["org.key2gym.persistence.OrderLine.getDiscount()", "java.math.BigDecimal.multiply(java.math.BigDecimal)", "java.math.BigDecimal.valueOf(orderLine.getDiscount().getPercent())", "orderLine.getDiscount().getPercent()"], "Fixed commit": "bc9762ac6d4531f1037369368166cb1d46b0ee49", "Url": "https://api.github.com/repos/equalsdanny/key2gym", "Date": "2012-11-18T11:30:53Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (id != null) { return java.lang.Math.abs(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5687/buggy-version/app.src.main.java.org.stepic.droid.util.HtmlHelper.java", "BodyUseAPI": ["java.lang.Math.abs(java.lang.Long)"], "Fixed commit": "9ff0d9139b19ec222c9180d5ed49312541d4cf5d", "Url": "https://api.github.com/repos/StepicOrg/stepik-android", "Date": "2016-06-16T16:50:47Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.edgecraft.edgecore.user.User.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (to == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/493/buggy-version/src.net.edgecraft.edgecore.user.UserManager.java", "BodyUseAPI": [], "Fixed commit": "87fdf9bcb44ea4579f45c70e801dfd9f4b9dd725", "Url": "https://api.github.com/repos/EdgeCraft/EdgeCore", "Date": "2014-03-01T19:23:30Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.edgecraft.edgecore.user.User.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (p == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/493/buggy-version/src.net.edgecraft.edgecore.user.UserManager.java", "BodyUseAPI": [], "Fixed commit": "87fdf9bcb44ea4579f45c70e801dfd9f4b9dd725", "Url": "https://api.github.com/repos/EdgeCraft/EdgeCore", "Date": "2014-03-01T19:23:30Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (contents)) { contents = new java.util.HashMap<java.lang.String, java.lang.Object>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6449/buggy-version/sdk.src.main.java.com.silanis.esl.sdk.DocumentPackageAttributes.java", "BodyUseAPI": [], "Fixed commit": "f576b04435d48761eedd49215c1b266d23ab3659", "Url": "https://api.github.com/repos/eSignLive/esl.sdk.java", "Date": "2015-03-04T20:43:11Z"},
{"Line": "=>1269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mConnectionService.isConnectionAvailable())) { com.microsoft.aad.adal.AuthenticationException exc = new com.microsoft.aad.adal.AuthenticationException(ADALError.DEVICE_CONNECTION_IS_NOT_AVAILABLE, \"Connection is not available to request token\"); com.microsoft.aad.adal.Logger.w(com.microsoft.aad.adal.AuthenticationContext.TAG, \"Connection is not available to refresh token\", request.getLogInfo(), ADALError.DEVICE_CONNECTION_IS_NOT_AVAILABLE); callbackHandle.onError(exc); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3515/buggy-version/src.src.com.microsoft.aad.adal.AuthenticationContext.java", "BodyUseAPI": [], "Fixed commit": "5dfcab10ba496cf232fb3e21ba0205e4fbe72010", "Url": "https://api.github.com/repos/AzureAD/azure-activedirectory-library-for-android", "Date": "2015-08-12T01:20:56Z"},
{"Line": "=>1710", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((tootReply.getSpoiler_text()) != null) && ((tootReply.getSpoiler_text().length()) > 0)) { toot_cw_content.setText(tootReply.getSpoiler_text()); toot_cw_content.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1724/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.activities.TootActivity.java", "BodyUseAPI": ["fr.gouv.etalab.mastodon.client.Entities.Status.getSpoiler_text()", "android.widget.EditText.setText(tootReply.getSpoiler_text())"], "Fixed commit": "3deec52707bf84d1427afcc0623ebc812245bc04", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-11-07T15:08:31Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.es.lookup.pubsub.QueueServiceMapping.getQueueDataGenerator(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (queueDataGenerator != null) { queueDataGenerator.fillQueues(resList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8766/buggy-version/lookup.simple-lookup-service-server.src.main.java.net.es.lookup.api.EditService.java", "BodyUseAPI": ["net.es.lookup.pubsub.QueueDataGenerator.fillQueues(java.util.LinkedList)"], "Fixed commit": "662a9c7d154e3fc788b2e8a015caf836bd8eab9a", "Url": "https://api.github.com/repos/esnet/simple-lookup-service", "Date": "2015-12-15T01:12:38Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.es.lookup.pubsub.QueueServiceMapping.getQueueDataGenerator(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (queueDataGenerator != null) { queueDataGenerator.fillQueues(resList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8766/buggy-version/lookup.simple-lookup-service-server.src.main.java.net.es.lookup.api.EditService.java", "BodyUseAPI": ["net.es.lookup.pubsub.QueueDataGenerator.fillQueues(java.util.LinkedList)"], "Fixed commit": "662a9c7d154e3fc788b2e8a015caf836bd8eab9a", "Url": "https://api.github.com/repos/esnet/simple-lookup-service", "Date": "2015-12-15T01:12:38Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.es.lookup.pubsub.QueueServiceMapping.getQueueDataGenerator(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (queueDataGenerator != null) { queueDataGenerator.fillQueues(resList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8766/buggy-version/lookup.simple-lookup-service-server.src.main.java.net.es.lookup.api.RegisterService.java", "BodyUseAPI": ["net.es.lookup.pubsub.QueueDataGenerator.fillQueues(java.util.LinkedList)"], "Fixed commit": "662a9c7d154e3fc788b2e8a015caf836bd8eab9a", "Url": "https://api.github.com/repos/esnet/simple-lookup-service", "Date": "2015-12-15T01:12:38Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prevRow < row) && (prevCol > col)) { if (((getDefenseBoard(player)[(row - 1)][col]) != (DefenseTileStatus.OCEAN)) && ((getDefenseBoard(player)[row][(col + 1)]) != (DefenseTileStatus.OCEAN))) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/26/buggy-version/BattleshipModel.java", "BodyUseAPI": [], "Fixed commit": "f59f53359affac8cfb99884ae051318c869a3e8b", "Url": "https://api.github.com/repos/chrisjmendoza/Battleship", "Date": "2015-12-01T03:17:37Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prevRow > row) && (prevCol > col)) { if (((getDefenseBoard(player)[(row + 1)][col]) != (DefenseTileStatus.OCEAN)) && ((getDefenseBoard(player)[row][(col + 1)]) != (DefenseTileStatus.OCEAN))) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/26/buggy-version/BattleshipModel.java", "BodyUseAPI": [], "Fixed commit": "f59f53359affac8cfb99884ae051318c869a3e8b", "Url": "https://api.github.com/repos/chrisjmendoza/Battleship", "Date": "2015-12-01T03:17:37Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prevRow > row) && (prevCol < col)) { if (((getDefenseBoard(player)[(row + 1)][col]) != (DefenseTileStatus.OCEAN)) && ((getDefenseBoard(player)[row][(col - 1)]) != (DefenseTileStatus.OCEAN))) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/26/buggy-version/BattleshipModel.java", "BodyUseAPI": [], "Fixed commit": "f59f53359affac8cfb99884ae051318c869a3e8b", "Url": "https://api.github.com/repos/chrisjmendoza/Battleship", "Date": "2015-12-01T03:17:37Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prevRow < row) && (prevCol < col)) { if (((getDefenseBoard(player)[(row - 1)][col]) != (DefenseTileStatus.OCEAN)) && ((getDefenseBoard(player)[row][(col - 1)]) != (DefenseTileStatus.OCEAN))) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/26/buggy-version/BattleshipModel.java", "BodyUseAPI": [], "Fixed commit": "f59f53359affac8cfb99884ae051318c869a3e8b", "Url": "https://api.github.com/repos/chrisjmendoza/Battleship", "Date": "2015-12-01T03:17:37Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["world.tiles.Tile.occupant()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(wi instanceof world.icons.Party)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/9028/buggy-version/src.world.World.java", "BodyUseAPI": [], "Fixed commit": "9dbadaa26876d59f62e2fba1f08c464c61305627", "Url": "https://api.github.com/repos/craigthelinguist/KnightCapital", "Date": "2014-10-10T01:47:01Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.whydah.sso.user.types.UserToken.copy()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((copy.getUserName()) != null) { net.whydah.token.user.ActiveUserTokenRepository.active_username_usertokenids_map.put(copy.getUserName(), copy.getTokenid()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/275/buggy-version/src.main.java.net.whydah.token.user.ActiveUserTokenRepository.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(copy.getUserName(),copy.getTokenid())", "net.whydah.sso.user.types.UserToken.getTokenid()", "net.whydah.sso.user.types.UserToken.getUserName()"], "Fixed commit": "489f595497caccec7e542129edad09d417670bfb", "Url": "https://api.github.com/repos/Cantara/Whydah-SecurityTokenService", "Date": "2017-04-25T17:29:15Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (metadata != null) { arrayList.add(de.opencyclecompass.app.android.util.Utils.getDateTime(metadata.getStartTime())); }else { arrayList.add(\"Fehler :-(\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/384/buggy-version/app.src.main.java.de.opencyclecompass.app.android.TrackArchiveActivity.java", "BodyUseAPI": ["de.opencyclecompass.app.android.util.Utils.getDateTime(metadata.getStartTime())", "OcycoTrack.MetaData.getStartTime()", "java.util.ArrayList<java.lang.String>.add(de.opencyclecompass.app.android.util.Utils.getDateTime(metadata.getStartTime()))"], "Fixed commit": "5582f504cdf06988f2944567992a70d45401f841", "Url": "https://api.github.com/repos/OpenCycleCompass/ocyco-app-android", "Date": "2016-05-21T15:32:59Z"},
{"Line": "=>1185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.format(java.lang.String,java.lang.String,long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((org.collectionspace.services.common.api.FileTools.copyFile(dbInitializationScriptFilePath, destFileName, false)) == false) { throw new java.lang.Exception(\"Could not backup existing database initialization script.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1592/buggy-version/services.common.src.main.java.org.collectionspace.services.common.ServiceMain.java", "BodyUseAPI": [], "Fixed commit": "09934ddcee61e325143cdaf2515c244fbcf913ef", "Url": "https://api.github.com/repos/lyrasis/cspace-services", "Date": "2016-06-24T20:52:09Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(CivetInbox.VERSION.contains(\"XFA\"))) java.lang.System.setProperty(\"org.jpedal.jai\", \"true\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2988/buggy-version/src.edu.clemson.lph.civet.Civet.java", "BodyUseAPI": [], "Fixed commit": "ee9ba5852eceaac5335f6442e1bc803801a73092", "Url": "https://api.github.com/repos/mkm1879/Civet", "Date": "2015-08-10T18:03:31Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((logWriter) != null) logWriter.dbWriterLog(reactant.get(\"UNIQUE-ID\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2146/buggy-version/src.checkpoint.andela.db.DBWriter.java", "BodyUseAPI": [], "Fixed commit": "f199fcb419d2f86441388acd4df64d283245a106", "Url": "https://api.github.com/repos/o-kamiye/FileReader", "Date": "2015-10-06T11:45:31Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.openlmis.core.model.StockMovementItem>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((firstItem.getMovementType()) == (StockMovementItem.MovementType.ISSUE)) || ((firstItem.getMovementType()) == (StockMovementItem.MovementType.NEGATIVE_ADJUST))) { productItem.setInitialAmount(((firstItem.getStockOnHand()) + (firstItem.getAmount()))); }else { productItem.setInitialAmount(((firstItem.getStockOnHand()) - (firstItem.getAmount()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4850/buggy-version/app.src.main.java.org.openlmis.core.model.repository.RnrFormRepository.java", "BodyUseAPI": ["org.openlmis.core.model.StockMovementItem.getAmount()", "org.openlmis.core.model.StockMovementItem.getAmount()", "org.openlmis.core.model.RnrFormItem.setInitialAmount(((firstItem.getStockOnHand()) - (firstItem.getAmount())))", "org.openlmis.core.model.RnrFormItem.setInitialAmount(((firstItem.getStockOnHand()) + (firstItem.getAmount())))", "org.openlmis.core.model.StockMovementItem.getStockOnHand()", "org.openlmis.core.model.StockMovementItem.getStockOnHand()"], "Fixed commit": "9919c5fc24c01d4888a24fc4668ce67b6edbc295", "Url": "https://api.github.com/repos/SIGLUS/lmis-moz-mobile", "Date": "2015-09-06T04:18:15Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((line.length()) > 0) { bm.add(java.lang.Integer.parseInt(line)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8661/buggy-version/src.main.java.rbitmap.util.entry.java", "BodyUseAPI": ["org.roaringbitmap.buffer.MutableRoaringBitmap.add(int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "7057c10d68ec726a3f2de223d4d65ab49e6c4b52", "Url": "https://api.github.com/repos/diida/rbitmap", "Date": "2015-08-13T10:41:47Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(holder.isEmpty())) { if (index == 10000000) { mrca = holder.get(0); }else { mrca = holder.get(index); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5327/buggy-version/src.main.java.opentree.GraphExplorer.java", "BodyUseAPI": ["java.util.ArrayList<org.neo4j.graphdb.Node>.get(int)", "java.util.ArrayList<org.neo4j.graphdb.Node>.get(int)"], "Fixed commit": "8bb980410d17cc96a46147394f9037eafe776619", "Url": "https://api.github.com/repos/OpenTreeOfLife/treemachine", "Date": "2014-10-01T21:43:54Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(holder.isEmpty())) { if (index == 10000000) { mrca = holder.get(0); }else { mrca = holder.get(index); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5327/buggy-version/src.main.java.opentree.GraphExplorer.java", "BodyUseAPI": ["java.util.ArrayList<org.neo4j.graphdb.Node>.get(int)", "java.util.ArrayList<org.neo4j.graphdb.Node>.get(int)"], "Fixed commit": "8bb980410d17cc96a46147394f9037eafe776619", "Url": "https://api.github.com/repos/OpenTreeOfLife/treemachine", "Date": "2014-10-01T21:43:54Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<net.sf.memoranda.TaskPlanningEntry>.get(table.getSelectedRow())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (entry.isComplete()) { dlg.earnedValue.setEnabled(true); dlg.actualDate.setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2727/buggy-version/src.net.sf.memoranda.ui.TaskPlanningLogPanel.java", "BodyUseAPI": [], "Fixed commit": "555458385b9d7b6b8110323704eb72dd32f72be5", "Url": "https://api.github.com/repos/cst316/spring16project-Modula-2", "Date": "2016-04-19T20:59:14Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (gfacInstanceList != null) { this.gfacInstanceList = gfacInstanceList; }else { this.gfacInstanceList = new java.util.ArrayList<org.apache.airavata.orchestrator.core.gfac.GFACInstance>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4874/buggy-version/modules.orchestrator.orchestrator-core.src.main.java.org.apache.airavata.orchestrator.core.context.OrchestratorContext.java", "BodyUseAPI": [], "Fixed commit": "36e93a6d923a3a6c27e2a3f2967359c014d1772f", "Url": "https://api.github.com/repos/glahiru/airavata", "Date": "2014-09-05T16:06:02Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dirName.contains(\"\\\\\")) { dirParts = dirName.split(\"\\\\\\\\\"); }else { dirParts = dirName.split(\"/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4493/buggy-version/src.main.java.be.rubus.angularprime.build.maven.AngularDirectiveMojo.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "9913704efb8b2481c24c3235a7dc46c5d84436d6", "Url": "https://api.github.com/repos/primeui-extensions/angular-directives-maven-plugin", "Date": "2014-02-27T13:26:23Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((pluginConfigurationUi.getPluginConfigurationContainer()) != null) { this.pluginConfigurationEnabledContainerParent = ((ee.ut.cs.rum.plugins.configuration.ui.PluginConfigurationEnabledContainer) (pluginConfigurationUi.getPluginConfigurationContainer())).getPluginConfigurationEnabledContainerParent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1181/buggy-version/RuM_Plugin_Configuration.src.ee.ut.cs.rum.plugins.configuration.internal.ui.ConfigurationItemFile.java", "BodyUseAPI": [], "Fixed commit": "6a1d582e6a1df667bb77de0bf7cd4f9e07e45d65", "Url": "https://api.github.com/repos/FableBlaze/RuM", "Date": "2017-10-07T18:31:14Z"},
{"Line": "=>704", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ets.gd.DataManager.DataManager.realm.where(com.ets.gd.NetworkLayer.ResponseDTOs.Inventory.class).equalTo(\"MaterialID\", materialID).equalTo(\"LocationID\", locID).findFirst()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == inventory) { inventory = com.ets.gd.DataManager.DataManager.realm.where(com.ets.gd.NetworkLayer.ResponseDTOs.Inventory.class).equalTo(\"MaterialID\", materialID).equalTo(\"EquipmentID\", locID).findFirst(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3239/buggy-version/app.src.main.java.com.ets.gd.DataManager.DataManager.java", "BodyUseAPI": [], "Fixed commit": "cc9dd29b48d21bc25727f1454063636a063b3510", "Url": "https://api.github.com/repos/hassan-akhtar/GD", "Date": "2017-07-19T13:14:31Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isL1CacheEnabled) { org.infinispan.container.gmu.GMUCacheValueUpdate gmucvu = convert(((org.infinispan.remoting.responses.SuccessfulResponse) (r)).getResponseValue(), org.infinispan.container.gmu.GMUCacheValueUpdate.class); gmuCacheValue = gmucvu.getGmuCacheValue(); java.util.Set<java.lang.Object> invalidationSet = gmucvu.getInvalidationSet(); if (invalidationSet != null) { l1Container.updateL1Container(targets.get(0), gmucvu.getMostRecentVersion(), invalidationSet); } }else { gmuCacheValue = convert(((org.infinispan.remoting.responses.SuccessfulResponse) (r)).getResponseValue(), org.infinispan.container.entries.gmu.InternalGMUCacheValue.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5898/buggy-version/core.src.main.java.org.infinispan.distribution.GMUDistributionManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "4d1f1848d97635a9cd57fbfe2b6c048853042f7f", "Url": "https://api.github.com/repos/hgpimentel/infinispan", "Date": "2013-05-20T18:56:02Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (atk >= 100) { this.attack = 100; }else this.attack = atk;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2593/buggy-version/src.edu.ucsb.cs56.projects.games.roguelike.Player.java", "BodyUseAPI": [], "Fixed commit": "089dbd0f10d08050c97c6101a0fe2041f8c93961", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-games-roguelike", "Date": "2016-02-17T05:01:11Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newHp >= 100) { this.hitPoints = 100; }else this.hitPoints = newHp;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2593/buggy-version/src.edu.ucsb.cs56.projects.games.roguelike.Player.java", "BodyUseAPI": [], "Fixed commit": "089dbd0f10d08050c97c6101a0fe2041f8c93961", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-games-roguelike", "Date": "2016-02-17T05:01:11Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (container instanceof com.rockwellcollins.atc.agree.agree.AgreeContract) { java.util.Set<org.osate.aadl2.Element> specs = getAllElementsFromSpecs(((com.rockwellcollins.atc.agree.agree.AgreeContract) (container)).getSpecs()); result.addAll(specs); }else { if (!(container instanceof com.rockwellcollins.atc.agree.agree.NodeDefExpr)) { throw new com.rockwellcollins.atc.agree.scoping.AgreeScopingException(\"container should be an AgreeContract or a NodeDefExpr\"); } result.addAll(((com.rockwellcollins.atc.agree.agree.NodeDefExpr) (container)).getArgs()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2084/buggy-version/fm-workbench.agree.com.rockwellcollins.atc.agree.src.com.rockwellcollins.atc.agree.scoping.AgreeScopeProvider.java", "BodyUseAPI": [], "Fixed commit": "83c4492172713493fcb42ac257c27278f6ac8017", "Url": "https://api.github.com/repos/smaccm/smaccm", "Date": "2015-02-27T15:41:14Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((((chartData.getClose()) != 0.0) && ((chartData.getHigh()) != 0.0)) && ((chartData.getLow()) != 0.0)) && ((chartData.getOpen()) != 0.0)) && ((chartData.getQuoteVolume()) != 0)) && ((chartData.getVolume()) != 0.0)) { out.println(chartData.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/160/buggy-version/src.main.java.com.stacksavings.utils.FileManager.java", "BodyUseAPI": ["java.io.PrintWriter.println(chartData.toString())", "com.stacksavings.client.api.dto.ChartData.toString()"], "Fixed commit": "ecaed5721bde38bd6be75cc440e0806ae13261a8", "Url": "https://api.github.com/repos/juliopaulo/cryptocurrency-analysis", "Date": "2017-08-23T02:58:38Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.IBlockAccess.getTileEntity(net.minecraft.util.math.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (te.hasCapability(CapabilityEnergy.ENERGY, null)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5318/buggy-version/src.main.java.mcjty.xnet.blocks.cables.ConnectorBlock.java", "BodyUseAPI": [], "Fixed commit": "c917f854b7fac5a2e4de72cf670b3f644ba572dc", "Url": "https://api.github.com/repos/McJtyMods/XNet", "Date": "2017-03-06T07:41:57Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zackehh.dotnotes.DotNotes.keys(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((keys.get(0).isNumber()) && (!(targetNode.isArray()))) { throw new com.zackehh.dotnotes.util.ParseException(\"Expected ArrayNode target for create call!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4893/buggy-version/src.main.java.com.zackehh.dotnotes.DotNotes.java", "BodyUseAPI": [], "Fixed commit": "473dbe1c201be009f199b798ff7ecee0409391f6", "Url": "https://api.github.com/repos/whitfin/dot-notes-java", "Date": "2015-09-29T04:07:37Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zackehh.dotnotes.DotNotes.keys(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((keys.get(0).isString()) && (!(targetNode.isObject()))) { throw new com.zackehh.dotnotes.util.ParseException(\"Expected ObjectNode target for create call!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4893/buggy-version/src.main.java.com.zackehh.dotnotes.DotNotes.java", "BodyUseAPI": [], "Fixed commit": "473dbe1c201be009f199b798ff7ecee0409391f6", "Url": "https://api.github.com/repos/whitfin/dot-notes-java", "Date": "2015-09-29T04:07:37Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (target == null) { targetNode = (keys.get(0).isNumber()) ? com.zackehh.dotnotes.DotNotes.factory.arrayNode() : com.zackehh.dotnotes.DotNotes.factory.objectNode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4893/buggy-version/src.main.java.com.zackehh.dotnotes.DotNotes.java", "BodyUseAPI": [], "Fixed commit": "473dbe1c201be009f199b798ff7ecee0409391f6", "Url": "https://api.github.com/repos/whitfin/dot-notes-java", "Date": "2015-09-29T04:07:37Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clearTextPassword == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2220/buggy-version/structr.structr-core.src.main.java.org.structr.core.converter.PasswordConverter.java", "BodyUseAPI": [], "Fixed commit": "a33a2ca1c27d29a2813890bb0d62c2d5422e0bdb", "Url": "https://api.github.com/repos/structr/structr", "Date": "2011-10-17T13:09:21Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2220/buggy-version/structr.structr-core.src.main.java.org.structr.core.converter.NodeIdNodeConverter.java", "BodyUseAPI": [], "Fixed commit": "a33a2ca1c27d29a2813890bb0d62c2d5422e0bdb", "Url": "https://api.github.com/repos/structr/structr", "Date": "2011-10-17T13:09:21Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nodeId == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2220/buggy-version/structr.structr-core.src.main.java.org.structr.core.converter.NodeIdNodeConverter.java", "BodyUseAPI": [], "Fixed commit": "a33a2ca1c27d29a2813890bb0d62c2d5422e0bdb", "Url": "https://api.github.com/repos/structr/structr", "Date": "2011-10-17T13:09:21Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((murdermystery.game.GameManager.games) == null) || (murdermystery.game.GameManager.games.isEmpty())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7400/buggy-version/src.murdermystery.game.GameManager.java", "BodyUseAPI": [], "Fixed commit": "ff995b0f2d81a163f9db6f04d62c9599f7c01a27", "Url": "https://api.github.com/repos/Gumballll/Murder-Mystery", "Date": "2017-07-21T16:14:19Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(luaPath.matches(\".*;\\\\s*$\"))) luaPathBuilder.append(\";\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3598/buggy-version/plugins.org.eclipse.koneki.ldt.remote.debug.core.src.org.eclipse.koneki.ldt.remote.debug.core.internal.launch.LuaRemoteLaunchConfigurationDelegate.java", "BodyUseAPI": [], "Fixed commit": "ac26a5d476a2e33b906b71ceba4390173b515c15", "Url": "https://api.github.com/repos/jdesgats/org.eclipse.koneki.ldt", "Date": "2012-11-27T10:26:32Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (keyNode.isTarget()) { reporter.incrCounter(\"TARGETS\", \"FOUND\", 1); keyNode.setTarget(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5210/buggy-version/src.com.treecitysoftware.algorithm.parallelbfs.ParallelBFSReducer.java", "BodyUseAPI": ["com.treecitysoftware.algorithm.parallelbfs.BFSNode.setTarget(boolean)"], "Fixed commit": "ac58898dae786e0d3e5a01e6a3a928ea0099982f", "Url": "https://api.github.com/repos/ntietz/data-processing", "Date": "2012-04-28T07:51:58Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.maratyv.indexer.index.Index.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (found == null) found = new java.util.ArrayList<java.lang.Integer>(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5965/buggy-version/src.ru.maratyv.indexer.FileIndexer.java", "BodyUseAPI": [], "Fixed commit": "22526ae42f655384d164b64619c1bd5b440f60a1", "Url": "https://api.github.com/repos/mir/Indexer", "Date": "2013-10-01T08:25:27Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (word == null) return new java.util.ArrayList<java.lang.Integer>(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5965/buggy-version/src.ru.maratyv.indexer.FileIndexer.java", "BodyUseAPI": [], "Fixed commit": "22526ae42f655384d164b64619c1bd5b440f60a1", "Url": "https://api.github.com/repos/mir/Indexer", "Date": "2013-10-01T08:25:27Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (test_flag) { coursesList = javax.xml.parsers.DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new java.io.FileInputStream(new java.io.File((\"resources/testXML/\" + (upandgo.server.model.loader.XmlCourseLoader.coursesInfoFilename))))).getElementsByTagName(\"course\"); }else { coursesList = javax.xml.parsers.DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(upandgo.server.model.loader.XmlCourseLoader.coursesInfo).getElementsByTagName(\"course\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6655/buggy-version/src.main.java.upandgo.server.model.loader.XmlCourseLoader.java", "BodyUseAPI": [], "Fixed commit": "bdea529efd09f57dc82bdd58f9b02b180b03a7d7", "Url": "https://api.github.com/repos/TechnionYP5777/UpAndGo", "Date": "2017-06-25T20:01:53Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getStringExtra(HomeActivity.FRAGMENT_EXTRA)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (fragmentName != null) { android.app.FragmentManager fragmentManager = getFragmentManager(); android.app.Fragment newFragment = android.app.Fragment.instantiate(this, fragmentName); fragmentManager.beginTransaction().replace(R.id.content_frame, newFragment).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5464/buggy-version/src.com.insa.randon.controller.MainActivity.java", "BodyUseAPI": ["android.app.Fragment.instantiate(com.insa.randon.controller.MainActivity,java.lang.String)"], "Fixed commit": "061f672e28da17fb404a6d7f9287420d9253c1a7", "Url": "https://api.github.com/repos/paulinemontmayeur/RandOnClient", "Date": "2014-11-09T14:32:08Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOrientationProvider) != null) mOrientationProvider.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4908/buggy-version/app.src.main.java.com.hsfl.speakshot.service.guide.GuidingService.java", "BodyUseAPI": [], "Fixed commit": "5b612f2ecea4adaaca39bb417439504540402b56", "Url": "https://api.github.com/repos/lefty89/speakshot", "Date": "2017-08-19T15:47:27Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOrientationProvider) != null) mOrientationProvider.start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4908/buggy-version/app.src.main.java.com.hsfl.speakshot.service.guide.GuidingService.java", "BodyUseAPI": [], "Fixed commit": "5b612f2ecea4adaaca39bb417439504540402b56", "Url": "https://api.github.com/repos/lefty89/speakshot", "Date": "2017-08-19T15:47:27Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.salesforce.androidsdk.rest.RestClient.sendSync(com.salesforce.androidsdk.rest.RestRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((res.getStatusCode()) == (org.apache.http.HttpStatus.SC_NOT_FOUND)) { id = com.salesforce.androidsdk.push.PushService.NOT_ENABLED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3047/buggy-version/libs.SalesforceSDK.src.com.salesforce.androidsdk.push.PushService.java", "BodyUseAPI": [], "Fixed commit": "20a63970900eac51bd0157e1e91363060c9215b0", "Url": "https://api.github.com/repos/wmathurin/SalesforceMobileSDK-Android", "Date": "2014-10-27T20:42:07Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((miRNAMap) != null) && ((miRNAGene = miRNAMap.get(gene.getId())) != null)) { if (cdnaVariantPosition == (-1)) { org.opencb.cellbase.core.variant.annotation.SoNames.add(VariantAnnotationUtils.MATURE_MIRNA_VARIANT); }else { java.util.List<org.opencb.biodata.models.core.MiRNAGene.MiRNAMature> miRNAMatureList = miRNAGene.getMatures(); int i = 0; while ((i < (miRNAMatureList.size())) && ((cdnaVariantPosition < (miRNAMatureList.get(i).cdnaStart)) || (cdnaVariantPosition > (miRNAMatureList.get(i).cdnaEnd)))) { i++; } if (i < (miRNAMatureList.size())) { org.opencb.cellbase.core.variant.annotation.SoNames.add(VariantAnnotationUtils.MATURE_MIRNA_VARIANT); }else { if (!isIntronicVariant) { org.opencb.cellbase.core.variant.annotation.SoNames.add(VariantAnnotationUtils.NON_CODING_TRANSCRIPT_EXON_VARIANT); } org.opencb.cellbase.core.variant.annotation.SoNames.add(VariantAnnotationUtils.NON_CODING_TRANSCRIPT_VARIANT); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/134/buggy-version/cellbase-core.src.main.java.org.opencb.cellbase.core.variant.annotation.ConsequenceTypeSNVCalculator.java", "BodyUseAPI": [], "Fixed commit": "ff8b275cb5762da77f9899f636565e1e2183768f", "Url": "https://api.github.com/repos/opencb/cellbase", "Date": "2015-07-29T11:47:07Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (blogMap.containsKey(\"planID\")) { planID = blogMap.get(\"planID\").toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8783/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.accounts.BlogUtils.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "37f85ac9a831b405bf5d07201aa474f2d00beaac", "Url": "https://api.github.com/repos/mzorz/WordPress-Android", "Date": "2016-02-01T16:49:19Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mutationID == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7007/buggy-version/src.MutatorModel.java", "BodyUseAPI": [], "Fixed commit": "7961b3024b8d2719213351399eae3af3e4613468", "Url": "https://api.github.com/repos/bzhang/mutator-model", "Date": "2012-04-09T16:55:04Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sourceBuffer.isNotNull()) { return sourceBuffer.getString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1264/buggy-version/CCSDS_MAL_ENCODING_GEN.src.main.java.esa.mo.mal.encoder.gen.GENDecoder.java", "BodyUseAPI": ["esa.mo.mal.encoder.gen.GENDecoder.BufferHolder.getString()"], "Fixed commit": "f8322241ba9acffc6b9b5f7590b949a751a04fbc", "Url": "https://api.github.com/repos/esa/CCSDS_MO_TRANS", "Date": "2015-08-27T16:04:53Z"},
{"Line": "=>730", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((workingVersion.getId()) != null) { for (edu.harvard.iq.dataverse.FileMetadata fileMetadata : fileMetadatas) { fileMetadata = datafileService.mergeFileMetadata(fileMetadata); } }else if ((fileMetadatas.size()) > 0) { datafileService.mergeFileMetadata(fileMetadatas.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6181/buggy-version/src.main.java.edu.harvard.iq.dataverse.EditDatafilesPage.java", "BodyUseAPI": [], "Fixed commit": "756d3047e38172fd3dbe8a163c3efdf7a324ae11", "Url": "https://api.github.com/repos/JayanthyChengan/IQSS-dataverse", "Date": "2015-09-18T00:11:36Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.search.SearchContext.getStart()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (start == (com.liferay.portal.kernel.dao.orm.QueryUtil.ALL_POS)) { start = 0; }else if (start < 0) { throw new java.lang.IllegalArgumentException((\"Invalid start \" + start)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5445/buggy-version/modules.apps.portal-search-solr.portal-search-solr.src.main.java.com.liferay.portal.search.solr.internal.SolrIndexSearcher.java", "BodyUseAPI": [], "Fixed commit": "14de1ab1368997f34f52e921573ac5603b329ef1", "Url": "https://api.github.com/repos/Preston-Crary/liferay-portal", "Date": "2017-04-26T19:07:19Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.search.SearchContext.getEnd()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (end == (com.liferay.portal.kernel.dao.orm.QueryUtil.ALL_POS)) { end = total; }else if (end < 0) { throw new java.lang.IllegalArgumentException((\"Invalid end \" + end)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5445/buggy-version/modules.apps.foundation.portal-search.portal-search-elasticsearch.src.main.java.com.liferay.portal.search.elasticsearch.internal.ElasticsearchIndexSearcher.java", "BodyUseAPI": [], "Fixed commit": "14de1ab1368997f34f52e921573ac5603b329ef1", "Url": "https://api.github.com/repos/Preston-Crary/liferay-portal", "Date": "2017-04-26T19:07:19Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mil.nga.giat.mage.sdk.utils.MediaUtility.getMimeType(attachment.getLocalPath())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (mimeType == null) { throw new java.lang.Exception((\"Attachment mimeType is \" + (java.lang.String.valueOf(mimeType)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/9072/buggy-version/sdk.src.main.java.mil.nga.giat.mage.sdk.http.post.MageServerPostRequests.java", "BodyUseAPI": ["java.lang.String.valueOf(java.lang.String)"], "Fixed commit": "0021d77ef491313d3113dc3c99a8c05e4de79861", "Url": "https://api.github.com/repos/ngageoint/mage-android-sdk", "Date": "2015-03-27T20:47:17Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(extension)) { int i = url.lastIndexOf('.'); if ((i > 0) && ((url.length()) >= (i + 1))) { extension = url.substring((i + 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/9072/buggy-version/sdk.src.main.java.mil.nga.giat.mage.sdk.utils.MediaUtility.java", "BodyUseAPI": [], "Fixed commit": "0021d77ef491313d3113dc3c99a8c05e4de79861", "Url": "https://api.github.com/repos/ngageoint/mage-android-sdk", "Date": "2015-03-27T20:47:17Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.isBlank(extension))) { android.webkit.MimeTypeMap mime = android.webkit.MimeTypeMap.getSingleton(); type = mime.getMimeTypeFromExtension(extension); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/9072/buggy-version/sdk.src.main.java.mil.nga.giat.mage.sdk.utils.MediaUtility.java", "BodyUseAPI": ["android.webkit.MimeTypeMap.getMimeTypeFromExtension(java.lang.String)"], "Fixed commit": "0021d77ef491313d3113dc3c99a8c05e4de79861", "Url": "https://api.github.com/repos/ngageoint/mage-android-sdk", "Date": "2015-03-27T20:47:17Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.tinkerpop.gremlin.process.traversal.step.util.Tree.class.isAssignableFrom(clasz)) { getIdToType().put(name, org.apache.tinkerpop.shaded.jackson.databind.type.TypeFactory.defaultInstance().constructType(new org.apache.tinkerpop.shaded.jackson.core.type.TypeReference<org.apache.tinkerpop.gremlin.process.traversal.step.util.Tree<? extends org.apache.tinkerpop.gremlin.structure.Element>>() {})); }else { getIdToType().put(name, org.apache.tinkerpop.shaded.jackson.databind.type.TypeFactory.defaultInstance().constructType(clasz)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/973/buggy-version/gremlin-core.src.main.java.org.apache.tinkerpop.gremlin.structure.io.graphson.GraphSONTypeIdResolver.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.apache.tinkerpop.shaded.jackson.databind.JavaType>.put(java.lang.String,org.apache.tinkerpop.shaded.jackson.databind.type.TypeFactory.defaultInstance().constructType(clasz))", "org.apache.tinkerpop.shaded.jackson.databind.type.TypeFactory.defaultInstance().constructType(java.lang.Class)"], "Fixed commit": "0605d172c7cdca952acc8398ea60f041c80c845f", "Url": "https://api.github.com/repos/newkek/incubator-tinkerpop", "Date": "2016-08-25T13:08:44Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lines == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3315/buggy-version/src.com.gmail.zariust.otherdrops.things.ODVariables.java", "BodyUseAPI": [], "Fixed commit": "b1ea154b361140d5288fbc1cec4bfcf55349bc7d", "Url": "https://api.github.com/repos/Zarius/Bukkit-OtherBlocks", "Date": "2013-07-30T09:00:10Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (object == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8287/buggy-version/core.com.doomdagger.pojos.support.EntityObject.java", "BodyUseAPI": [], "Fixed commit": "cb0aa7f3d40a109f0d348656b9f0300fed4f8e1a", "Url": "https://api.github.com/repos/doomdagger/jDao-boilerplate", "Date": "2014-02-22T15:00:39Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(me.zhanghai.android.douya.BuildConfig.DEBUG)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5297/buggy-version/app.src.main.java.me.zhanghai.android.douya.item.ui.ItemActivities.java", "BodyUseAPI": [], "Fixed commit": "56d331faa1a307e0be9c345255ea0aac16969d01", "Url": "https://api.github.com/repos/DreaminginCodeZH/Douya", "Date": "2017-07-02T12:33:55Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.requestId.get()) == null) || (!(this.requestId.get().equals(requestId)))) { tokenProvider.set(new com.opsbears.webcomponents.form.HTTPCookieCSRFTokenProvider()); this.requestId.set(requestId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5789/buggy-version/src.main.java.com.opsbears.webcomponents.application.form.HTTPCookieCSRFTokenProviderFactory.java", "BodyUseAPI": ["java.lang.ThreadLocal<java.lang.String>.set(java.lang.String)"], "Fixed commit": "f812efa25ea63258321bd2e3c182c5d9ef99b27b", "Url": "https://api.github.com/repos/opsbears/webcomponents", "Date": "2017-02-28T16:17:05Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((!(c_new.isOpen())) && ((c_new.getExercises().size()) == 0))) Workout.add(c_new);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7657/buggy-version/app.src.main.java.com.main.toledo.gymtrackr.WorkoutData.java", "BodyUseAPI": ["java.util.ArrayList<com.main.toledo.gymtrackr.Circuit>.add(com.main.toledo.gymtrackr.Circuit)"], "Fixed commit": "bcc4ced98e7e4f3c90699cc3593d409d7736e1fe", "Url": "https://api.github.com/repos/kodieGlosser/FitnessApp", "Date": "2015-04-21T04:10:13Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((partsOfMessage.length) == 3) displayMessage(partsOfMessage[1], partsOfMessage[2]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7832/buggy-version/Peer.java", "BodyUseAPI": ["Peer.ReceiveThread.displayMessage(java.lang.String,java.lang.String)"], "Fixed commit": "0038dc3408106f34707f9fcdd908e4b0eda38bf1", "Url": "https://api.github.com/repos/PotatoBiscuit/Peer-To-Peer-Chat", "Date": "2017-02-13T20:51:17Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sce.getServletContext().getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (atmosphereFramework != null) { edu.usu.sdl.openstorefront.web.init.ApplicationInit.log.log(java.util.logging.Level.INFO, \"Shutdown Atmosphere\"); atmosphereFramework.destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1737/buggy-version/server.openstorefront.openstorefront-web.src.main.java.edu.usu.sdl.openstorefront.web.init.ApplicationInit.java", "BodyUseAPI": ["org.atmosphere.cpr.AtmosphereFramework.destroy()"], "Fixed commit": "5ef28e5372c918c418062f59619f19d41c9fb96d", "Url": "https://api.github.com/repos/Razaltan/openstorefront", "Date": "2015-10-13T18:23:56Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(config.load())) { this.getServer().getPluginManager().disablePlugin(this); throw new java.lang.IllegalStateException(\"The config-file could not be loaded! Read further up to find the actual bug!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4757/buggy-version/src.com.garbagemule.MobArena.MobArena.java", "BodyUseAPI": [], "Fixed commit": "a94370deec0d3158b02569ae5b4e1d716b4597c5", "Url": "https://api.github.com/repos/acstache/MobArena", "Date": "2012-08-22T04:05:45Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (take == 0) { response = new hu.zagor.gamebooks.mvc.book.inventory.domain.TakeItemResponse(); response.setTotalTaken(0); response.setWarningMessage(messageSource.getMessage(\"page.ff31.takeItem.maxFourProvision\")); }else { response = super.doHandleItemTake(request, itemId, take); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/562/buggy-version/books.ff.presentation-fightingfantasy.src.main.java.hu.zagor.gamebooks.ff.ff.bw.mvc.books.inventory.controller.Ff31BookTakeItemController.java", "BodyUseAPI": ["hu.zagor.gamebooks.ff.mvc.book.inventory.controller.FfBookTakeItemController.doHandleItemTake(javax.servlet.http.HttpServletRequest,java.lang.String,int)"], "Fixed commit": "445981c69714228dfa3cf94efddae5735fb5299d", "Url": "https://api.github.com/repos/firefoxpdm/gamebooks", "Date": "2017-01-14T16:02:46Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ireveal.service.MastersService.GetAmpPhaseValue(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (((resultset != null) && ((resultset.size()) > 0)) && (!(resultset.isEmpty()))) { if (((resultset.get(\"maxDiff\")) != null) && ((resultset.get(\"maxFreq\")) != null)) { maxDiff = resultset.get(\"maxDiff\").toString(); freq = resultset.get(\"maxFreq\").toString(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1530/buggy-version/src.ireveal.web.ToolsController.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.Object.toString()", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "f9c4d305dbb9041ea5c60bfb5d902d1b70b0d59a", "Url": "https://api.github.com/repos/tharianjk/irev-verdant", "Date": "2015-01-23T11:04:35Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((prompt.indexOf(' ')) != (-1)) { command = prompt.substring(0, prompt.indexOf(' ')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1991/buggy-version/src.terminal.Main.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(char)"], "Fixed commit": "f978081d008817b4b5e353bb9e535ee57a92605b", "Url": "https://api.github.com/repos/callicles/OCAapplication", "Date": "2013-11-23T14:17:37Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.ebang.xray.Allergy.find(n)) == null) { new com.ebang.xray.Allergy(n); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7024/buggy-version/src.com.ebang.xray.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f2c1688139df782e53e0aabc25876bb6643ff462", "Url": "https://api.github.com/repos/amankapur/xray", "Date": "2014-04-22T03:32:13Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == (viewPager.getCurrentItem())) { tabView.setSelected(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3664/buggy-version/FBReader.src.main.java.org.geometerplus.android.fbreader.benetech.MyBooksActivity.java", "BodyUseAPI": [], "Fixed commit": "2ad02dd654a93cf1879ccd98e4ffc38c807c1d49", "Url": "https://api.github.com/repos/benetech/FBReaderJ", "Date": "2016-08-19T21:32:59Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(d)) < 1.0E-6) { if (buffer != null) { buffer.prepend(com.itextpdf.io.source.ByteUtils.zero); return null; }else { return com.itextpdf.io.source.ByteUtils.zero; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2774/buggy-version/io.src.main.java.com.itextpdf.io.source.ByteUtils.java", "BodyUseAPI": [], "Fixed commit": "c2dbb8980fb68728f9738805ca81007cbcdd98ff", "Url": "https://api.github.com/repos/itext/itext7", "Date": "2016-06-27T10:46:57Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (location != null) { this.longitude = location.getLongitude(); this.latitude = location.getLatitude(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7153/buggy-version/src.main.java.ie.ianduffy.carcloud.domain.Track.java", "BodyUseAPI": [], "Fixed commit": "50e9d0dbe97a3e466ee4109b70df583ffca156ea", "Url": "https://api.github.com/repos/imduffy15/carcloud-api", "Date": "2015-01-01T00:37:54Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(etSecondValue.getText().toString().isEmpty())) { editor.putInt(io.github.esteveaguilera.androidworkshop.sharedpreferences.SharedPreferencesActivity.KEY_SECOND_VALUE, java.lang.Integer.valueOf(etSecondValue.getText().toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4555/buggy-version/app.src.main.java.io.github.esteveaguilera.androidworkshop.sharedpreferences.SharedPreferencesActivity.java", "BodyUseAPI": ["etSecondValue.getText().toString()", "android.widget.EditText.getText()", "SharedPreferences.Editor.putInt(java.lang.String,java.lang.Integer)", "java.lang.Integer.valueOf(etSecondValue.getText().toString())"], "Fixed commit": "9489cf40055ebe06c7febc2e76b72da6d4a605b8", "Url": "https://api.github.com/repos/EsteveAguilera/Introducing-Android-The-Workshop", "Date": "2017-12-12T16:06:23Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bundle == null) { android.util.Log.e(getClass().getName(), \"Missing intent extras\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/170/buggy-version/serenity-app.src.main.java.us.nineworlds.serenity.core.services.MusicAlbumRetrievalIntentService.java", "BodyUseAPI": [], "Fixed commit": "3b07786d1cb010466611d165c850d2cdff2bbbda", "Url": "https://api.github.com/repos/NineWorlds/serenity-android", "Date": "2014-08-18T17:44:38Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["new com.activeandroid.query.Select().from(org.techteam.decider.content.entities.UserEntry.class).where(\"uid = ?\", entry.uid).executeSingle()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (e != null) { return e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8221/buggy-version/app.src.main.java.org.techteam.decider.content.entities.UserEntry.java", "BodyUseAPI": [], "Fixed commit": "4a3b73b396b2b43500bbadf3fca421274bcfbc70", "Url": "https://api.github.com/repos/tech-team/decider-android", "Date": "2015-04-07T23:38:32Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(confirmPwd.equals(pwd))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/123/buggy-version/TLEShine.src.com.tranway.tleshine.viewLoginAndRegister.RegisterActivity.java", "BodyUseAPI": [], "Fixed commit": "13102fdd60625e09234852095f30d279cce96ef0", "Url": "https://api.github.com/repos/slowfall/tel", "Date": "2014-05-21T15:10:17Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pwd.equals(\"\")) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/123/buggy-version/TLEShine.src.com.tranway.tleshine.viewLoginAndRegister.RegisterActivity.java", "BodyUseAPI": [], "Fixed commit": "13102fdd60625e09234852095f30d279cce96ef0", "Url": "https://api.github.com/repos/slowfall/tel", "Date": "2014-05-21T15:10:17Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pwd.equals(\"\")) { mPwdTxt.setError(getResources().getString(R.string.password_empty)); mPwdTxt.requestFocus(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/123/buggy-version/TLEShine.src.com.tranway.tleshine.viewLoginAndRegister.RegisterActivity.java", "BodyUseAPI": [], "Fixed commit": "13102fdd60625e09234852095f30d279cce96ef0", "Url": "https://api.github.com/repos/slowfall/tel", "Date": "2014-05-21T15:10:17Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_tripleEquals) { _xifexpression = java.util.Collections.<org.eclipse.xtext.nodemodel.ILeafNode>unmodifiableList(com.google.common.collect.Lists.<org.eclipse.xtext.nodemodel.ILeafNode>newArrayList()); }else { _xifexpression = java.util.Collections.<org.eclipse.xtext.nodemodel.ILeafNode>unmodifiableList(com.google.common.collect.Lists.<org.eclipse.xtext.nodemodel.ILeafNode>newArrayList(leafNode)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7152/buggy-version/plugins.org.jnario.xtend-gen.org.jnario.formatter.JnarioNodeModelAccess.java", "BodyUseAPI": [], "Fixed commit": "e43ea409633eaf40fb07084cc969ffb488c5950d", "Url": "https://api.github.com/repos/sebastianbenz/Jnario", "Date": "2014-06-13T11:27:36Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (findMax) extrem = -(java.lang.Double.MAX_VALUE); else extrem = java.lang.Double.MAX_VALUE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/523/buggy-version/src.analyze.Group.java", "BodyUseAPI": [], "Fixed commit": "8fe1c8834be4ddc45a1b335dda23eeaddf50daf8", "Url": "https://api.github.com/repos/qingPATHng-jia/img_classifier", "Date": "2015-03-13T23:54:03Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((img[0][w][h]) < 26) && ((img[1][w][h]) < 26)) && ((img[2][w][h]) < 26)) { ignoreCount++; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/523/buggy-version/src.analyze.GenHist3D.java", "BodyUseAPI": [], "Fixed commit": "8fe1c8834be4ddc45a1b335dda23eeaddf50daf8", "Url": "https://api.github.com/repos/qingPATHng-jia/img_classifier", "Date": "2015-03-13T23:54:03Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((footer) != null) { ((com.example.whodm.retrofitdemo.ui.Adapter.ItemRecyclerViewAdapter.FooterViewHolder) (holder)).frameLayout.addView(footer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3918/buggy-version/app.src.main.java.com.example.whodm.retrofitdemo.ui.Adapter.ItemRecyclerViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "312a4491e045d3eb6314749950c8ba62bf3460b5", "Url": "https://api.github.com/repos/whodm/AndroidDanTangPratice", "Date": "2016-08-17T15:10:15Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((header) != null) { ((com.example.whodm.retrofitdemo.ui.Adapter.ItemRecyclerViewAdapter.HeaderViewHolder) (holder)).frameLayout.addView(header); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3918/buggy-version/app.src.main.java.com.example.whodm.retrofitdemo.ui.Adapter.ItemRecyclerViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "312a4491e045d3eb6314749950c8ba62bf3460b5", "Url": "https://api.github.com/repos/whodm/AndroidDanTangPratice", "Date": "2016-08-17T15:10:15Z"},
{"Line": "=>1341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (newOrigin != null) { org.lwjgl.util.vector.Matrix4f id = new org.lwjgl.util.vector.Matrix4f(); org.lwjgl.util.vector.Matrix4f.setIdentity(id); transformation = new org.nschmidt.ldparteditor.data.Matrix(id).translate(new java.math.BigDecimal[]{ (newOrigin.X) == null ? java.math.BigDecimal.ZERO : newOrigin.X.subtract(this.accurateLocalMatrix.M30), (newOrigin.Y) == null ? java.math.BigDecimal.ZERO : newOrigin.Y.subtract(this.accurateLocalMatrix.M31), (newOrigin.Z) == null ? java.math.BigDecimal.ZERO : newOrigin.Z.subtract(this.accurateLocalMatrix.M32) }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5224/buggy-version/src.org.nschmidt.ldparteditor.data.GData1.java", "BodyUseAPI": ["newOrigin.Y.subtract(this.accurateLocalMatrix.M31)", "newOrigin.X.subtract(this.accurateLocalMatrix.M30)", "newOrigin.Z.subtract(this.accurateLocalMatrix.M32)", "org.nschmidt.ldparteditor.data.Matrix.translate(java.math.BigDecimal[])"], "Fixed commit": "24e89ea486e36684de73be495abae43884584a02", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2017-02-25T18:50:13Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fixture != createdFixture) { body.destroyFixture(fixture); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6064/buggy-version/catroid.src.at.tugraz.ist.catroid.physics.PhysicObject.java", "BodyUseAPI": ["com.badlogic.gdx.physics.box2d.Body.destroyFixture(com.badlogic.gdx.physics.box2d.Fixture)"], "Fixed commit": "bc4bed53e41f531cfce92843d69b07914edb08bc", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2012-08-20T10:41:20Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (idsString == null) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4157/buggy-version/src.java.com.prampec.util.PropertyHelper.java", "BodyUseAPI": [], "Fixed commit": "7d92437d5732ec1c1b1b99a77d7e321c2e23143f", "Url": "https://api.github.com/repos/prampec/RivetCam", "Date": "2017-07-01T10:07:25Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.makeFile())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6638/buggy-version/src.main.java.fi.helsinki.cs.tmc.cli.tmcstuff.CourseInfoIo.java", "BodyUseAPI": [], "Fixed commit": "f33e440f01fe97d4b3dbff8b401ed08b9bd14ec5", "Url": "https://api.github.com/repos/testmycode/tmc-cli", "Date": "2016-05-25T08:11:32Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newX > ((com.TigersIter2.assets.StaticVar.terrainImageWidth) * (((com.TigersIter2.views.View.mapXLength) - (com.TigersIter2.assets.StaticVar.xTilesFromEdge)) + 1))) newX = (com.TigersIter2.assets.StaticVar.terrainImageWidth) * (((com.TigersIter2.views.View.mapXLength) - (com.TigersIter2.assets.StaticVar.xTilesFromEdge)) + 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4037/buggy-version/src.com.TigersIter2.views.View.java", "BodyUseAPI": [], "Fixed commit": "ae0f75f5df0892c023ca7dc8f22329d45bab8fe8", "Url": "https://api.github.com/repos/OOP-Team-Project/RPG-Iteration-2", "Date": "2016-03-14T00:56:52Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newY > ((com.TigersIter2.assets.StaticVar.terrainImageHeight) * ((com.TigersIter2.views.View.mapYLength) - (com.TigersIter2.assets.StaticVar.yTilesFromEdge)))) newY = (com.TigersIter2.assets.StaticVar.terrainImageHeight) * ((com.TigersIter2.views.View.mapYLength) - (com.TigersIter2.assets.StaticVar.yTilesFromEdge));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4037/buggy-version/src.com.TigersIter2.views.View.java", "BodyUseAPI": [], "Fixed commit": "ae0f75f5df0892c023ca7dc8f22329d45bab8fe8", "Url": "https://api.github.com/repos/OOP-Team-Project/RPG-Iteration-2", "Date": "2016-03-14T00:56:52Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newX < ((com.TigersIter2.assets.StaticVar.terrainImageWidth) * (com.TigersIter2.assets.StaticVar.xTilesFromEdge))) newX = (com.TigersIter2.assets.StaticVar.terrainImageWidth) * (com.TigersIter2.assets.StaticVar.xTilesFromEdge);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4037/buggy-version/src.com.TigersIter2.views.View.java", "BodyUseAPI": [], "Fixed commit": "ae0f75f5df0892c023ca7dc8f22329d45bab8fe8", "Url": "https://api.github.com/repos/OOP-Team-Project/RPG-Iteration-2", "Date": "2016-03-14T00:56:52Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newY < ((com.TigersIter2.assets.StaticVar.terrainImageHeight) * (com.TigersIter2.assets.StaticVar.yTilesFromEdge))) newY = (com.TigersIter2.assets.StaticVar.terrainImageHeight) * (com.TigersIter2.assets.StaticVar.yTilesFromEdge);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4037/buggy-version/src.com.TigersIter2.views.View.java", "BodyUseAPI": [], "Fixed commit": "ae0f75f5df0892c023ca7dc8f22329d45bab8fe8", "Url": "https://api.github.com/repos/OOP-Team-Project/RPG-Iteration-2", "Date": "2016-03-14T00:56:52Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (o == null) { while ((current != null) && ((current.element) != null)) { current = current.next; } }else { while ((current != null) && (!(o.equals(current.element)))) { current = current.next; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2280/buggy-version/LinkedList.java", "BodyUseAPI": ["java.lang.Object.equals(E)"], "Fixed commit": "81e321e7e6195d836169ed99e544b41830a65c17", "Url": "https://api.github.com/repos/flakeparadigm/java-datastructure-practice", "Date": "2015-12-06T08:18:55Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!testing) { soundPlayer = sound.SoundPlayer.getInstance(); soundPlayer.play(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3438/buggy-version/src.main.java.guimenu.MainGame.java", "BodyUseAPI": [], "Fixed commit": "29267502895836544ad665972256d243199ef7f6", "Url": "https://api.github.com/repos/geenen124/Team1BubbleTrouble", "Date": "2015-10-20T19:17:39Z"},
{"Line": "=>1031", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((inputFact == null) || ((inputFact.length()) == 0)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4320/buggy-version/minalloy.translator.MinA4Solution.java", "BodyUseAPI": [], "Fixed commit": "c5ea2bed4fd618e2f08e0615847bb3f67f232148", "Url": "https://api.github.com/repos/salmans/MinSolver", "Date": "2012-07-10T14:18:55Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(checkParents(newToken, sample))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5902/buggy-version/com.onpositive.text.analisys.src.com.onpositive.text.analysis.syntax.GenitiveChainParser.java", "BodyUseAPI": [], "Fixed commit": "d09c0d9f4621270c516462dfadcd002f9aa4f14f", "Url": "https://api.github.com/repos/OnPositive/text-analisis", "Date": "2015-01-21T18:13:05Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getVehicle()) != ((long) (-10))) { com.wurmonline.server.behaviours.Vehicle vehicle = com.wurmonline.server.behaviours.Vehicles.getVehicleForId(player.getVehicle()); if ((!(vehicle.isCreature())) && (com.wurmonline.server.Items.getItem(player.getVehicle()).isBoat())) isOnBoat = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5872/buggy-version/main.java.org.talor.wurmunlimited.mods.survival.Survival.java", "BodyUseAPI": ["com.wurmonline.server.Items.getItem(player.getVehicle()).isBoat()", "com.wurmonline.server.players.Player.getVehicle()", "com.wurmonline.server.players.Player.getVehicle()", "com.wurmonline.server.behaviours.Vehicles.getVehicleForId(player.getVehicle())", "com.wurmonline.server.Items.getItem(player.getVehicle())"], "Fixed commit": "e63c5a0bee5eb6a1db966352bd4d363e428e7be5", "Url": "https://api.github.com/repos/modsandstuff/survival", "Date": "2017-01-01T12:08:35Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<soot.SootMethod>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(constructor.isPublic())) { soot.dava.toolkits.base.AST.transformations.RemoveEmptyBodyDefaultConstructor.debug(\"Default constructor is not public.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2951/buggy-version/src.soot.dava.toolkits.base.AST.transformations.RemoveEmptyBodyDefaultConstructor.java", "BodyUseAPI": [], "Fixed commit": "17aae47f9c2bbd8e5996c5f0591619dc9c179e0c", "Url": "https://api.github.com/repos/agorski3/soot", "Date": "2017-09-19T22:15:50Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != data) { java.lang.Object unreadCounterAsVoid = data.get(\"unread\"); if (unreadCounterAsVoid instanceof java.lang.String) { unreadCount = java.lang.Integer.parseInt(((java.lang.String) (unreadCounterAsVoid))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7942/buggy-version/vector.src.app.java.im.vector.gcm.MatrixGcmListenerService.java", "BodyUseAPI": ["android.os.Bundle.get(java.lang.String)"], "Fixed commit": "f814da4240b3fdc220023f4d5e0eb7351b9da9e3", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2017-01-13T07:52:06Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mTwoPane) { getSupportFragmentManager().beginTransaction().replace(R.id.movie_detail_container, new com.vinay.passioneer.popularmovies.MovieDetailsFragment(), com.vinay.passioneer.popularmovies.MainActivity.MOVIE_DETAIL_FRAGMENT_TAG).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6338/buggy-version/app.src.main.java.com.vinay.passioneer.popularmovies.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ead382172621b7b8766d61f10b4b712b15b63d25", "Url": "https://api.github.com/repos/vinaypatil18/PopularMoviesUD", "Date": "2016-02-08T17:50:46Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mData.get(i).getDueDate()) != null) { dates.add(mData.get(i).getDueDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4876/buggy-version/app.src.main.java.com.cs3398royal.remindme.remindme.TaskDataProvider.java", "BodyUseAPI": ["java.util.ArrayList<java.util.Date>.add(mData.get(i).getDueDate())", "java.util.List<com.cs3398royal.remindme.remindme.Task>.get(int)", "mData.get(i).getDueDate()"], "Fixed commit": "fa816999d3de0fe997e7b79492d3fd70a7236c7a", "Url": "https://api.github.com/repos/CS3398-Royal-Knights/RemindMe", "Date": "2016-12-01T07:47:18Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((singleWord.length()) > 0) this.allWord.add(singleWord);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6202/buggy-version/src.littletyper.WordList.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "db6de44b83b74d15cccfe3c7bec062be20ca957a", "Url": "https://api.github.com/repos/bruce30262/LittleTyper", "Date": "2014-05-17T16:19:44Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["src.gui.BoardPanel.getRegion(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((r != null) && ((r.getToken()) != null)) { superC.attemptToSelect(r.getToken()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4921/buggy-version/src.gui.BoardPanelController.java", "BodyUseAPI": ["src.gui.SuperController.attemptToSelect(r.getToken())", "src.gui.TokenRegion.getToken()"], "Fixed commit": "fce2b0e6eb7159f85da7a7e80488cd9dd19a08a3", "Url": "https://api.github.com/repos/Gellelao/SSgraphics", "Date": "2017-08-30T05:39:34Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.xinxin.wotplus.model.Tank>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((tank.getTankBadge().indexOf(\"vehicle\")) != (-1)) { }else { com.bumptech.glide.Glide.with(context).load(tank.getTankBadge()).into(((com.xinxin.wotplus.adapter.TanksByTypeAdapter.TankShortInfo) (holder)).tankBadge); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2426/buggy-version/app.src.main.java.com.xinxin.wotplus.adapter.TanksByTypeAdapter.java", "BodyUseAPI": ["com.bumptech.glide.Glide.with(context).load(tank.getTankBadge()).into(android.widget.ImageView)", "com.bumptech.glide.Glide.with(context).load(tank.getTankBadge())", "com.xinxin.wotplus.model.Tank.getTankBadge()"], "Fixed commit": "1f6b21c6a335c13098c79bb7df2368e86ad4f5a2", "Url": "https://api.github.com/repos/zhangxx0/WOTPlus", "Date": "2016-05-03T14:23:05Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.spinn3r.artemis.network.CookieDecoder.nameValuePair(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (main == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4554/buggy-version/artemis-network.src.main.java.com.spinn3r.artemis.network.CookieDecoder.java", "BodyUseAPI": [], "Fixed commit": "92e1cdad94a2faa02e3733ca9d12c61f4cab7bcf", "Url": "https://api.github.com/repos/spinn3r/artemis-framework", "Date": "2015-12-15T18:59:01Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hp.hpl.jena.query.ResultSet.nextSolution()", "com.hp.hpl.jena.query.QueryFactory.create(feature.getQuery())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((qsol.getLiteral(query.getResultVars().get(i)).getDatatypeURI()) != null) { triple.setObjectDataType(qsol.getLiteral(query.getResultVars().get(i)).getDatatypeURI()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1961/buggy-version/lod4wfs.src.main.java.de.ifgi.lod4wfs.factory.FactoryFDAFeatures.java", "BodyUseAPI": ["query.getResultVars().get(int)", "com.hp.hpl.jena.query.QuerySolution.getLiteral(query.getResultVars().get(i))", "com.hp.hpl.jena.query.Query.getResultVars()", "qsol.getLiteral(query.getResultVars().get(i)).getDatatypeURI()", "de.ifgi.lod4wfs.core.Triple.setObjectDataType(qsol.getLiteral(query.getResultVars().get(i)).getDatatypeURI())"], "Fixed commit": "97f444f3427693d2013836c5d4356f43cb6a1882", "Url": "https://api.github.com/repos/jimjonesbr/lod4wfs", "Date": "2015-12-04T16:24:12Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((translation.length) > 0) { translationList.add(translation[0].replace(\"\\\"\", \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3711/buggy-version/app.src.main.java.name.gudong.translate.mvp.model.entity.translate.GoogleResult.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "f3b1d4fe0c2ad54f5289ffe8ffc30e00639a05ef", "Url": "https://api.github.com/repos/maoruibin/TranslateApp", "Date": "2017-02-22T13:06:53Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((aclfBusXml.getGenData().getCode()) == (org.ieee.odm.schema.LFGenCodeEnumType.PV)) && (!(contriGen.isOffLine()))) { if (qt == qb) { aclfBusXml.getGenData().setCode(LFGenCodeEnumType.PQ); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5421/buggy-version/ieee.odm_pss.src.org.ieee.odm.adapter.psse.mapper.aclf.PSSEGenDataMapper.java", "BodyUseAPI": ["aclfBusXml.getGenData().setCode(LFGenCodeEnumType.PQ)", "org.ieee.odm.schema.LoadflowBusXmlType.getGenData()"], "Fixed commit": "ce666dd50092cdcb5cc2e62d6e93ff97b1038c8f", "Url": "https://api.github.com/repos/InterPSS-Project/ipss-odm", "Date": "2014-01-21T22:45:59Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (tableAno == null) { throw new java.lang.IllegalArgumentException(\"Class is not marked with Table annotation!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3718/buggy-version/src.main.java.net.squarelabs.sqorm.schema.TableSchema.java", "BodyUseAPI": [], "Fixed commit": "8bfbef3633952a1fe606a5811e625f2267776526", "Url": "https://api.github.com/repos/bgard6977/sqorm", "Date": "2014-09-08T17:30:19Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.enjin.devection.main.Main.getAwaitingLegendaries()", "org.bukkit.Bukkit.getOfflinePlayer(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (data.containsKey(player.getUniqueId())) { java.util.List<com.enjin.devection.armor.LegendaryArmor> previousValues = data.get(player.getUniqueId()); previousValues.add(armor); data.put(player.getUniqueId(), previousValues); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3314/buggy-version/src.com.enjin.devection.commands.LegendaryCommands.java", "BodyUseAPI": ["java.util.Map<java.util.UUID, java.util.List<com.enjin.devection.armor.LegendaryArmor>>.put(player.getUniqueId(),java.util.List<com.enjin.devection.armor.LegendaryArmor>)", "java.util.Map<java.util.UUID, java.util.List<com.enjin.devection.armor.LegendaryArmor>>.get(player.getUniqueId())", "org.bukkit.OfflinePlayer.getUniqueId()", "org.bukkit.OfflinePlayer.getUniqueId()"], "Fixed commit": "380ab4e9b551255f8573b21158399f1f0ee44c76", "Url": "https://api.github.com/repos/ConnorChristie/LegendaryArmor", "Date": "2015-07-31T01:13:36Z"},
{"Line": "=>567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.uml.cs.isense.credentials.CredentialManager.isLoggedIn()) { loggedInAsB.setText(edu.uml.cs.isense.credentials.CredentialManager.getUsername(edu.uml.cs.isense.datawalk_v2.DataWalk.mContext)); }else { loggedInAsB.setText(R.string.not_logged_in); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8291/buggy-version/Android.DataWalk.src.edu.uml.cs.isense.datawalk_v2.DataWalk.java", "BodyUseAPI": [], "Fixed commit": "b824f13c211cc42feb3ab3236f1f0adcd9d64c51", "Url": "https://api.github.com/repos/isenseDev/iSENSE-Hardware", "Date": "2014-05-28T15:40:06Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((textView.getText().length()) > 0) { textView.setText(textView.getText().subSequence(0, ((textView.getText().length()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6384/buggy-version/app.src.main.java.edu.depaul.scavi.activities.ARActivity.java", "BodyUseAPI": ["android.widget.TextView.getText()", "android.widget.TextView.setText(textView.getText().subSequence(0, ((textView.getText().length()) - 1)))", "android.widget.TextView.getText()", "textView.getText().length()", "textView.getText().subSequence(int,((textView.getText().length()) - 1))"], "Fixed commit": "537b0db011f636be7528c453bd1bcc8887f0ec26", "Url": "https://api.github.com/repos/matthewrkula/scavi", "Date": "2015-03-19T21:50:45Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gojek.constants.Command.findByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (command == null) { java.lang.System.out.println(\"Invalid command\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7001/buggy-version/parkingLot.src.main.java.com.gojek.executor.AbstractProcessor.java", "BodyUseAPI": [], "Fixed commit": "4d427c4f1d0c8a79b350a78f583bc30cc79f0943", "Url": "https://api.github.com/repos/bhaveshthakker/gojek-parkinglot", "Date": "2017-04-16T09:48:22Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (inputStrArr[0].equals(\"\")) { java.lang.System.out.println(\"Thanks for using the program\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7001/buggy-version/parkingLot.src.main.java.com.gojek.executor.AbstractProcessor.java", "BodyUseAPI": [], "Fixed commit": "4d427c4f1d0c8a79b350a78f583bc30cc79f0943", "Url": "https://api.github.com/repos/bhaveshthakker/gojek-parkinglot", "Date": "2017-04-16T09:48:22Z"},
{"Line": "=>2029", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (ppos > 0) timestampString = timestampString.substring(0, ppos);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5611/buggy-version/foundation.org.eclipse.persistence.core.src.org.eclipse.persistence.internal.helper.Helper.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "09ef263f7b19793485cf3d322429037d4c25117f", "Url": "https://api.github.com/repos/pmneo/eclipselink.runtime", "Date": "2016-04-21T06:22:53Z"},
{"Line": "=>1932", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (ppos > 0) timePortion = timePortion.substring(0, ppos);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5611/buggy-version/foundation.org.eclipse.persistence.core.src.org.eclipse.persistence.internal.helper.Helper.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "09ef263f7b19793485cf3d322429037d4c25117f", "Url": "https://api.github.com/repos/pmneo/eclipselink.runtime", "Date": "2016-04-21T06:22:53Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentState) != (com.brentaureli.mariobros.Sprites.Mario.State.JUMPING)) { b2body.applyLinearImpulse(new com.badlogic.gdx.math.Vector2(0, 4.0F), b2body.getWorldCenter(), true); currentState = com.brentaureli.mariobros.Sprites.Mario.State.JUMPING; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4869/buggy-version/core.src.com.brentaureli.mariobros.Sprites.Mario.java", "BodyUseAPI": [], "Fixed commit": "4639dd5869ccd10e2e1d640027765c245deeabcb", "Url": "https://api.github.com/repos/BrentAureli/SuperMario", "Date": "2015-11-25T15:32:06Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSensorListeners.size()) >= (android.hardware.SystemSensorManager.MAX_LISTENER_COUNT)) { throw new java.lang.IllegalStateException(((\"register failed, \" + \"the sensor listeners size has exceeded the maximum limit \") + (android.hardware.SystemSensorManager.MAX_LISTENER_COUNT))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1640/buggy-version/core.java.android.hardware.SystemSensorManager.java", "BodyUseAPI": [], "Fixed commit": "79adf3b3e413f01f281f158d01af36735fa90fd6", "Url": "https://api.github.com/repos/HexagonRom/android_frameworks_base", "Date": "2017-04-17T17:16:50Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTriggerListeners.size()) >= (android.hardware.SystemSensorManager.MAX_LISTENER_COUNT)) { throw new java.lang.IllegalStateException(((\"request failed, \" + \"the trigger listeners size has exceeded the maximum limit \") + (android.hardware.SystemSensorManager.MAX_LISTENER_COUNT))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1640/buggy-version/core.java.android.hardware.SystemSensorManager.java", "BodyUseAPI": [], "Fixed commit": "79adf3b3e413f01f281f158d01af36735fa90fd6", "Url": "https://api.github.com/repos/HexagonRom/android_frameworks_base", "Date": "2017-04-17T17:16:50Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.voxlearning.poseidon.core.convert.converter.NumberEnum.1.convertToString(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.voxlearning.poseidon.core.util.StrUtil.isBlank(valueStr)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8496/buggy-version/poseidon-core.src.main.java.com.voxlearning.poseidon.core.convert.converter.NumberEnum.java", "BodyUseAPI": [], "Fixed commit": "dcd7db31927aaf003f3455651fd54c4be19bfc02", "Url": "https://api.github.com/repos/jettyaway/poseidon", "Date": "2017-12-05T06:42:02Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.voxlearning.poseidon.core.convert.converter.NumberEnum.7.convertToString(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.voxlearning.poseidon.core.util.StrUtil.isBlank(valueStr)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8496/buggy-version/poseidon-core.src.main.java.com.voxlearning.poseidon.core.convert.converter.NumberEnum.java", "BodyUseAPI": [], "Fixed commit": "dcd7db31927aaf003f3455651fd54c4be19bfc02", "Url": "https://api.github.com/repos/jettyaway/poseidon", "Date": "2017-12-05T06:42:02Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.voxlearning.poseidon.core.convert.converter.NumberEnum.8.convertToString(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.voxlearning.poseidon.core.util.StrUtil.isBlank(valueStr)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8496/buggy-version/poseidon-core.src.main.java.com.voxlearning.poseidon.core.convert.converter.NumberEnum.java", "BodyUseAPI": [], "Fixed commit": "dcd7db31927aaf003f3455651fd54c4be19bfc02", "Url": "https://api.github.com/repos/jettyaway/poseidon", "Date": "2017-12-05T06:42:02Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.voxlearning.poseidon.core.convert.converter.NumberEnum.5.convertToString(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.util.Objects.isNull(valueStr)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8496/buggy-version/poseidon-core.src.main.java.com.voxlearning.poseidon.core.convert.converter.NumberEnum.java", "BodyUseAPI": [], "Fixed commit": "dcd7db31927aaf003f3455651fd54c4be19bfc02", "Url": "https://api.github.com/repos/jettyaway/poseidon", "Date": "2017-12-05T06:42:02Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.voxlearning.poseidon.core.convert.converter.NumberEnum.2.convertToString(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.voxlearning.poseidon.core.util.StrUtil.isBlank(valueStr)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8496/buggy-version/poseidon-core.src.main.java.com.voxlearning.poseidon.core.convert.converter.NumberEnum.java", "BodyUseAPI": [], "Fixed commit": "dcd7db31927aaf003f3455651fd54c4be19bfc02", "Url": "https://api.github.com/repos/jettyaway/poseidon", "Date": "2017-12-05T06:42:02Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof java.lang.Number) { return java.lang.Byte.valueOf(((java.lang.Number) (value)).byteValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8496/buggy-version/poseidon-core.src.main.java.com.voxlearning.poseidon.core.convert.converter.NumberEnum.java", "BodyUseAPI": [], "Fixed commit": "dcd7db31927aaf003f3455651fd54c4be19bfc02", "Url": "https://api.github.com/repos/jettyaway/poseidon", "Date": "2017-12-05T06:42:02Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof java.lang.Number) { return java.lang.Long.valueOf(((java.lang.Number) (value)).longValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8496/buggy-version/poseidon-core.src.main.java.com.voxlearning.poseidon.core.convert.converter.NumberEnum.java", "BodyUseAPI": [], "Fixed commit": "dcd7db31927aaf003f3455651fd54c4be19bfc02", "Url": "https://api.github.com/repos/jettyaway/poseidon", "Date": "2017-12-05T06:42:02Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof java.lang.Number) { return java.lang.Double.valueOf(((java.lang.Number) (value)).doubleValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8496/buggy-version/poseidon-core.src.main.java.com.voxlearning.poseidon.core.convert.converter.NumberEnum.java", "BodyUseAPI": [], "Fixed commit": "dcd7db31927aaf003f3455651fd54c4be19bfc02", "Url": "https://api.github.com/repos/jettyaway/poseidon", "Date": "2017-12-05T06:42:02Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof java.lang.Number) { return java.lang.Float.valueOf(((java.lang.Number) (value)).floatValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8496/buggy-version/poseidon-core.src.main.java.com.voxlearning.poseidon.core.convert.converter.NumberEnum.java", "BodyUseAPI": [], "Fixed commit": "dcd7db31927aaf003f3455651fd54c4be19bfc02", "Url": "https://api.github.com/repos/jettyaway/poseidon", "Date": "2017-12-05T06:42:02Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.valueOf(e.getBlock().getRelative(BlockFace.DOWN).getType())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (downBlock == \"GRASS\") { toLog += \"Growing grass\"; }else { e.setCancelled(true); toLog += (((\" Failed: Bad Biome (2) \" + downBlock) + \" - \") + curBiome) + \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4636/buggy-version/src.main.java.com.pwn9.PwnPlantGrowth.PlantListener.java", "BodyUseAPI": [], "Fixed commit": "097683eab4d4c927f031b9863d0a9eb7eede9200", "Url": "https://api.github.com/repos/erik1988/PwnPlantGrowth", "Date": "2015-08-06T19:21:17Z"},
{"Line": "=>1338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((childrenOfSrc.length) == 0) { throw new java.lang.IllegalArgumentException(\"Source folder must contain at least one entry!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3942/buggy-version/VRL.VRL-Base.src.main.java.eu.mihosoft.vrl.base.IOUtil.java", "BodyUseAPI": [], "Fixed commit": "7a33f94e4af152fbe8ce03eb365127714c0a7ecb", "Url": "https://api.github.com/repos/VRL-Studio/VRL", "Date": "2014-11-26T11:00:25Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(spieler.getHand().isEmpty())) { spieler.getHand().clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4366/buggy-version/Watten-server.src.de.verbund.watten.spiel.Spiel.java", "BodyUseAPI": ["de.verbund.watten.spieler.Spieler.getHand()", "spieler.getHand().clear()"], "Fixed commit": "73f2bb41dab9dcbf3bc08d5746f0d14346e70899", "Url": "https://api.github.com/repos/SRTigers98/Watten", "Date": "2017-01-23T12:42:08Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5189/buggy-version/core.store.src.main.java.mil.nga.giat.geowave.core.store.metadata.AbstractGeowavePersistence.java", "BodyUseAPI": [], "Fixed commit": "a1ba032631bc271ac6b06c404a8dd539e6fab8ee", "Url": "https://api.github.com/repos/andrewdmanning/geowave", "Date": "2016-06-16T19:36:49Z"},
{"Line": "=>711", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vcase == 3) { if (((int) (height)) == 300) { return 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5002/buggy-version/app.src.main.java.uhmanoa.droid_sch.Visualize.java", "BodyUseAPI": [], "Fixed commit": "bfe949bc34209e953f52895cbbabc914cc25c472", "Url": "https://api.github.com/repos/1andyn/droid_sch", "Date": "2015-04-21T05:16:42Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (collection.getPlugin().getManager().hasDebugMode()) { collection.getPlugin().getLogger().info((((((((\"Option \" + key) + \" checked in \") + contexts) + \" for user \") + (identifyUser())) + \": \") + val)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6970/buggy-version/src.main.java.ninja.leaping.permissionsex.sponge.PEXSubject.java", "BodyUseAPI": ["collection.getPlugin().getLogger().info((((((((\"Option \" + key) + \" checked in \") + contexts) + \" for user \") + (identifyUser())) + \": \") + val))", "collection.getPlugin().getLogger()", "ninja.leaping.permissionsex.sponge.PEXSubjectCollection.getPlugin()"], "Fixed commit": "1aeec882a3c93ab386fc89659cf1079ca285641b", "Url": "https://api.github.com/repos/PEXPlugins/PermissionsEx", "Date": "2015-03-17T01:19:16Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (collection.getPlugin().getManager().hasDebugMode()) { collection.getPlugin().getLogger().info((((((\"Parents checked in \" + contexts) + \" for user \") + (identifyUser())) + \": \") + parents)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6970/buggy-version/src.main.java.ninja.leaping.permissionsex.sponge.PEXSubject.java", "BodyUseAPI": ["ninja.leaping.permissionsex.sponge.PEXSubjectCollection.getPlugin()", "collection.getPlugin().getLogger().info((((((\"Parents checked in \" + contexts) + \" for user \") + (identifyUser())) + \": \") + parents))", "collection.getPlugin().getLogger()"], "Fixed commit": "1aeec882a3c93ab386fc89659cf1079ca285641b", "Url": "https://api.github.com/repos/PEXPlugins/PermissionsEx", "Date": "2015-03-17T01:19:16Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (collection.getPlugin().getManager().hasDebugMode()) { collection.getPlugin().getLogger().info((((((((\"Permission \" + permission) + \" checked in \") + contexts) + \" for user \") + (identifyUser())) + \": \") + ret)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6970/buggy-version/src.main.java.ninja.leaping.permissionsex.sponge.PEXSubject.java", "BodyUseAPI": ["ninja.leaping.permissionsex.sponge.PEXSubjectCollection.getPlugin()", "collection.getPlugin().getLogger()", "collection.getPlugin().getLogger().info((((((((\"Permission \" + permission) + \" checked in \") + contexts) + \" for user \") + (identifyUser())) + \": \") + ret))"], "Fixed commit": "1aeec882a3c93ab386fc89659cf1079ca285641b", "Url": "https://api.github.com/repos/PEXPlugins/PermissionsEx", "Date": "2015-03-17T01:19:16Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rcs.size()) > 0) java.util.Collections.sort(rcs);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2102/buggy-version/core.src.com.mygdx.game.entities.EntitySystem.java", "BodyUseAPI": ["java.util.Collections.sort(java.util.List<com.mygdx.game.entities.components.Rendering.RenderComponent>)"], "Fixed commit": "b1f2b1ed3884c103c903122d800650149f6a810e", "Url": "https://api.github.com/repos/Darkfafi/PvB", "Date": "2017-04-18T08:07:03Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(logCursor.getColumnIndexOrThrow(CallLog.Calls.NUMBER))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((contactNumber != null) && (!(contactNumber.trim().isEmpty()))) { android.database.Cursor contactLookupCursor = context.getContentResolver().query(android.net.Uri.withAppendedPath(ContactsContract.PhoneLookup.CONTENT_FILTER_URI, android.net.Uri.encode(contactNumber)), new java.lang.String[]{ ContactsContract.PhoneLookup.DISPLAY_NAME, ContactsContract.PhoneLookup._ID }, null, null, null); return contactLookupCursor; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1542/buggy-version/app.src.main.java.com.dtv.killerradio.CallLogListCursorAdapter.java", "BodyUseAPI": ["context.getContentResolver().query(android.net.Uri.withAppendedPath(ContactsContract.PhoneLookup.CONTENT_FILTER_URI, android.net.Uri.encode(contactNumber)),java.lang.String[],<nulltype>,<nulltype>,<nulltype>)", "android.net.Uri.withAppendedPath(ContactsContract.PhoneLookup.CONTENT_FILTER_URI,android.net.Uri.encode(contactNumber))", "android.net.Uri.encode(java.lang.String)"], "Fixed commit": "ed672d222b05edfa10ef32bc86a07f55b5d1b0ed", "Url": "https://api.github.com/repos/devadastv/KillerRadio", "Date": "2016-08-21T04:25:59Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((snackbar) != null) { snackbar.dismiss(); snackbar = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8223/buggy-version/app.src.main.java.nl.rsdt.japp.jotial.maps.pinning.PinningSession.java", "BodyUseAPI": [], "Fixed commit": "09cdda472e5399507d19a53ceb169904d06402b9", "Url": "https://api.github.com/repos/RSDT/Japp16", "Date": "2016-09-29T15:32:07Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Arrays.asList(tags).contains(\"parameter\")) parameter = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6695/buggy-version/src.org.frostbite.karren.interactions.Interaction.java", "BodyUseAPI": [], "Fixed commit": "b121fe940b94790378c2c9d76c0e5204d86bcc10", "Url": "https://api.github.com/repos/ripxfrostbite/karren-sama", "Date": "2017-06-04T09:05:44Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (state) hwState = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2077/buggy-version/src.hwu.db.managers.HomeworkManager.java", "BodyUseAPI": [], "Fixed commit": "c3ba9c11c498c2d90deb51218646c9695995c18e", "Url": "https://api.github.com/repos/gati3478/HWUpload", "Date": "2014-08-20T16:24:36Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(homework.isActive())) state = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2077/buggy-version/src.hwu.db.managers.HomeworkManager.java", "BodyUseAPI": [], "Fixed commit": "c3ba9c11c498c2d90deb51218646c9695995c18e", "Url": "https://api.github.com/repos/gati3478/HWUpload", "Date": "2014-08-20T16:24:36Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(homework.latedaysDisabled())) lateDaysDis = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2077/buggy-version/src.hwu.db.managers.HomeworkManager.java", "BodyUseAPI": [], "Fixed commit": "c3ba9c11c498c2d90deb51218646c9695995c18e", "Url": "https://api.github.com/repos/gati3478/HWUpload", "Date": "2014-08-20T16:24:36Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) instanceof CallInstruction) { instructions.get(0).addOp(this.getOperands().get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7689/buggy-version/src.Instruction.java", "BodyUseAPI": [], "Fixed commit": "3c1c61707f5d05520121ea818ce1ecd9047545a0", "Url": "https://api.github.com/repos/icco/CSC431", "Date": "2011-05-20T05:48:41Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (result != null) android.util.Log.v(LOG_TAG, (\"Uber total fare is: \" + (result[0])));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3896/buggy-version/app.src.main.java.com.example.natalie.tuber.FetchUberPriceTask.java", "BodyUseAPI": ["android.util.Log.v(java.lang.String,java.lang.String)"], "Fixed commit": "6aaa11c826428cd3225c8ab5c7b493b522d19117", "Url": "https://api.github.com/repos/gracelu/tuber", "Date": "2015-08-12T03:25:26Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (uberJson != null) return getWeatherDataFromJson(java.lang.String.valueOf(uberJson.getJSONArray(\"prices\").getJSONObject(0)), 4); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3896/buggy-version/app.src.main.java.com.example.natalie.tuber.FetchUberPriceTask.java", "BodyUseAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)", "uberJson.getJSONArray(\"prices\").getJSONObject(int)", "com.example.natalie.tuber.FetchUberPriceTask.getWeatherDataFromJson(java.lang.String,int)", "java.lang.String.valueOf(uberJson.getJSONArray(\"prices\").getJSONObject(0))"], "Fixed commit": "6aaa11c826428cd3225c8ab5c7b493b522d19117", "Url": "https://api.github.com/repos/gracelu/tuber", "Date": "2015-08-12T03:25:26Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (taxiFareJsonStr == null) { android.util.Log.v(\"UberPrice\", \"Uber not available\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3896/buggy-version/app.src.main.java.com.example.natalie.tuber.FetchUberPriceTask.java", "BodyUseAPI": [], "Fixed commit": "6aaa11c826428cd3225c8ab5c7b493b522d19117", "Url": "https://api.github.com/repos/gracelu/tuber", "Date": "2015-08-12T03:25:26Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (merchantInfos != null) { for (group3.po.MerchantInfo merchantInfo : merchantInfos) { } request.setAttribute(\"merchantsInfos\", merchantInfos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1299/buggy-version/Project2.src.group3.servlet.showMerchantsServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,java.util.List<group3.po.MerchantInfo>)"], "Fixed commit": "4faa9cfd5e96a8a12010e25a55f15a87273ecba5", "Url": "https://api.github.com/repos/iamwest1123/HKIE-Project", "Date": "2016-10-14T08:05:19Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (haxeClass instanceof com.intellij.plugins.haxe.util.HaxeTypedefDeclaration) { com.intellij.plugins.haxe.util.HaxeClassResolveResult temp = com.intellij.plugins.haxe.util.HaxeClassResolveResult.create(haxeClass, specialization); temp.specializeByParameters(type.getTypeParam()); specialization = temp.getSpecialization(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3019/buggy-version/src.common.com.intellij.plugins.haxe.util.HaxeResolveUtil.java", "BodyUseAPI": ["com.intellij.plugins.haxe.util.HaxeClassResolveResult.create(com.intellij.plugins.haxe.util.HaxeClass,com.intellij.plugins.haxe.util.HaxeGenericSpecialization)"], "Fixed commit": "77744c9c4121482357499dce068ecb323eda71a2", "Url": "https://api.github.com/repos/eliasku/intellij-haxe", "Date": "2016-02-26T08:49:51Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((first == 0) && (second == 0)) { java.lang.System.out.println(first); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1491/buggy-version/src.main.java.com.pnakaj.algo.FabonicalSeriesWithRecursion.java", "BodyUseAPI": ["java.io.PrintStream.println(int)"], "Fixed commit": "17b4f7138870de4764bd985c95ba452f6dc10d77", "Url": "https://api.github.com/repos/pk07449/javaexpert", "Date": "2017-08-12T01:44:56Z"},
{"Line": "=>806", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((org.activiti.engine.impl.context.Context.getProcessEngineConfiguration()) != null) && (org.activiti.engine.impl.context.Context.getProcessEngineConfiguration().getEventDispatcher().isEnabled())) { org.activiti.engine.impl.context.Context.getProcessEngineConfiguration().getEventDispatcher().dispatchEvent(org.activiti.engine.impl.persistence.entity.VariableScopeImpl.createVariableDeleteEvent(variableInstance)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2510/buggy-version/modules.activiti-engine.src.main.java.org.activiti.engine.impl.persistence.entity.VariableScopeImpl.java", "BodyUseAPI": [], "Fixed commit": "c901d1619c0ac5673ac603c33d80ee3c3da87d54", "Url": "https://api.github.com/repos/Activiti/Activiti", "Date": "2016-10-04T13:28:03Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentMessage.get(1)) == 7) { int bass = getToneLevel(net.littlebigisland.droidibus.ibus.systems.GFXNavigationSystem.ToneType.BASS, currentMessage.get(4)); int treb = getToneLevel(net.littlebigisland.droidibus.ibus.systems.GFXNavigationSystem.ToneType.TREB, currentMessage.get(5)); int fade = getToneLevel(net.littlebigisland.droidibus.ibus.systems.GFXNavigationSystem.ToneType.FADE, currentMessage.get(6)); int bal = getToneLevel(net.littlebigisland.droidibus.ibus.systems.GFXNavigationSystem.ToneType.BAL, currentMessage.get(7)); triggerCallback(\"onUpdateToneLevels\", bass, treb, fade, bal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2995/buggy-version/src.net.littlebigisland.droidibus.ibus.systems.GFXNavigationSystem.java", "BodyUseAPI": ["net.littlebigisland.droidibus.ibus.systems.GFXNavigationSystem.RadioSystem.get(int)", "net.littlebigisland.droidibus.ibus.systems.GFXNavigationSystem.RadioSystem.get(int)", "net.littlebigisland.droidibus.ibus.systems.GFXNavigationSystem.RadioSystem.getToneLevel(net.littlebigisland.droidibus.ibus.systems.GFXNavigationSystem.ToneType,currentMessage.get(7))", "net.littlebigisland.droidibus.ibus.systems.GFXNavigationSystem.RadioSystem.getToneLevel(net.littlebigisland.droidibus.ibus.systems.GFXNavigationSystem.ToneType,currentMessage.get(4))", "net.littlebigisland.droidibus.ibus.systems.GFXNavigationSystem.RadioSystem.getToneLevel(net.littlebigisland.droidibus.ibus.systems.GFXNavigationSystem.ToneType,currentMessage.get(5))", "net.littlebigisland.droidibus.ibus.systems.GFXNavigationSystem.RadioSystem.get(int)", "net.littlebigisland.droidibus.ibus.systems.GFXNavigationSystem.RadioSystem.get(int)", "net.littlebigisland.droidibus.ibus.systems.GFXNavigationSystem.RadioSystem.getToneLevel(net.littlebigisland.droidibus.ibus.systems.GFXNavigationSystem.ToneType,currentMessage.get(6))"], "Fixed commit": "86eefafcb72aca2a3521ee2310aeb7c3225889da", "Url": "https://api.github.com/repos/tedsalmon/DroidIBus", "Date": "2015-08-03T02:04:34Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node == (node.getProject().getCurrentNode())) { node.getProject().setCurrentNode(null); org.ocsoft.olivia.models.project.node.TreeNode newCurrent = null; if (index < (list.size())) { newCurrent = list.get(index); }else if ((index - 1) >= 0) { newCurrent = list.get((index - 1)); }else { newCurrent = parent; } node.getProject().setCurrentNode(newCurrent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2044/buggy-version/src.main.java.org.ocsoft.olivia.models.project.node.NodeChildren.java", "BodyUseAPI": ["node.getProject().setCurrentNode(<nulltype>)", "node.getProject().setCurrentNode(org.ocsoft.olivia.models.project.node.TreeNode)", "org.ocsoft.olivia.models.project.node.TreeNode.getProject()", "org.ocsoft.olivia.models.project.node.TreeNode.getProject()"], "Fixed commit": "64435e9aa320d87c2cd882b09e2c3ca2f134f5d9", "Url": "https://api.github.com/repos/tohhy/olivia-base", "Date": "2015-07-11T06:52:45Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(net.splashe.kineticsensors.SensorRecordingService.DEBUG)) { angleData[i] = ((float) (boundTo360Degrees(angleData[i]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1119/buggy-version/src.net.splashe.kineticsensors.SensorRecordingService.java", "BodyUseAPI": [], "Fixed commit": "292fadf664d20a7d9f16e89defc42c0f5459db16", "Url": "https://api.github.com/repos/sebLopezCot/KineticSensors", "Date": "2013-06-06T03:01:35Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((initialSampleTimestamp) == 0.0F) { initialSampleTimestamp = timestamp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1119/buggy-version/src.net.splashe.kineticsensors.SensorRecordingService.java", "BodyUseAPI": [], "Fixed commit": "292fadf664d20a7d9f16e89defc42c0f5459db16", "Url": "https://api.github.com/repos/sebLopezCot/KineticSensors", "Date": "2013-06-06T03:01:35Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDisposed()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2563/buggy-version/org.agilereview.ui.basic.src.org.agilereview.ui.basic.detail.ReviewDetail.java", "BodyUseAPI": [], "Fixed commit": "901cc888ceb796c20fc214b42c35c77ad6faba02", "Url": "https://api.github.com/repos/AgileReview-Project/AgileReview-EclipsePlugin", "Date": "2014-06-22T19:54:09Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((textView) != null) && containsUrls) { v2.simpleUi.M_InfoText.myHandler.post(new java.lang.Runnable() { @java.lang.Override public void run() { textView.setAutoLinkMask(Linkify.ALL); textView.setText(textView.getText()); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1476/buggy-version/SimpleUI.srcModifiers.v2.simpleUi.M_InfoText.java", "BodyUseAPI": [], "Fixed commit": "826fd3a7acecf9f4678c2df64e95d483d023d8ba", "Url": "https://api.github.com/repos/bitstars/SimpleUi", "Date": "2014-04-29T15:53:42Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.isConnected()) && (!(this.isBroken()))) { try { com.opshack.jimi.JmxMetric jmxMetric = new com.opshack.jimi.JmxMetric(this, metric); tasks.add(metricExecutor.scheduleAtFixedRate(jmxMetric, 10, java.lang.Long.valueOf(((java.lang.Integer) (metric.get(\"rate\")))), java.util.concurrent.TimeUnit.SECONDS)); } catch (java.io.IOException e) { log.warn((((this) + \" IOException: \") + (e.getMessage()))); if (log.isDebugEnabled()) { e.printStackTrace(); } this.setBroken(true); break; } catch (java.lang.Exception e) { log.error((((this) + \" non-IOException: \") + (e.getMessage()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7576/buggy-version/src.main.java.com.opshack.jimi.sources.JmxSource.java", "BodyUseAPI": [], "Fixed commit": "bbf064ecb2b23eb04a99e3532ff2758adc115b2d", "Url": "https://api.github.com/repos/arozhkov/jimi-robot", "Date": "2013-02-03T17:25:27Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (args[currentArgument].equals(\"--changelog-description-field\")) { descriptionField = args[(++currentArgument)]; net.foxopen.jira.changelog.Logger.log(((\"--changelog-description-field found. Using \" + descriptionField) + \" as the Changelog Description field.\")); }else { net.foxopen.jira.changelog.Logger.err((\"Unknown argument: \" + (args[currentArgument]))); java.lang.System.exit(2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4974/buggy-version/src.net.foxopen.jira.changelog.Changelog.java", "BodyUseAPI": ["net.foxopen.jira.changelog.Logger.err(java.lang.String)"], "Fixed commit": "4718879f258050339e9eb024504d4d71a1bd3691", "Url": "https://api.github.com/repos/mleonard87/JIRAChangelogBuilder", "Date": "2013-09-03T03:30:08Z"},
{"Line": "=>991", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (numOfCurrplayerCards == null) { numOfCurrplayerCards = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/929/buggy-version/project.app.src.main.java.ch.ethz.inf.vs.a4.minker.einz.UI.PlayerActivity.java", "BodyUseAPI": [], "Fixed commit": "2ed83a5d494b5b96fee0b8cec2dab7aaf2765850", "Url": "https://api.github.com/repos/lucidBrot/einz", "Date": "2017-12-15T20:15:08Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.text.equals(text))) { this.text = text; wrappedText = new java.lang.String[1]; wrappedText[0] = text; if ((mParent) != null) { mParent.requestLayout(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4763/buggy-version/src.com.irr310.i3d.view.TextView.java", "BodyUseAPI": [], "Fixed commit": "f18c6b10f7c247caad0a75f9c230eb64d6df4569", "Url": "https://api.github.com/repos/seraf8/irr310", "Date": "2013-03-18T19:54:01Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((characterModel.getCharacterID()) == 0) { characterModel = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5762/buggy-version/app.src.main.java.edu.auburn.eng.csse.comp3710.bch0011.bagofholding.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2b32c5181b9c1707a11257e9caddc97e61548228", "Url": "https://api.github.com/repos/bhurler1/BagOfHolding", "Date": "2016-05-05T01:45:58Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((button) == null) { invalidate(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/552/buggy-version/library.src.main.java.com.michaldrabik.tapbarmenulib.TapBarMenu.java", "BodyUseAPI": [], "Fixed commit": "df1a98fab42c94b1df656a7c503868ee713d789f", "Url": "https://api.github.com/repos/rosenpin/TapBarMenu", "Date": "2017-08-03T16:08:23Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (current == update) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4922/buggy-version/flower-platform-updatable-code-library.src.org.flowerplatform.updatable_code.util.UpdatableCodeUtils.java", "BodyUseAPI": [], "Fixed commit": "54b9af2e807fca3a9623d0661b9389eecd855870", "Url": "https://api.github.com/repos/flower-platform/tiny-http-server", "Date": "2016-10-04T09:01:53Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (configDirectories.isEmpty()) { for (java.lang.String configVariable : org.datacleaner.server.EnvironmentBasedHadoopClusterInformation.CONFIGURATION_VARIABLES) { final java.lang.String environmentValue = java.lang.System.getenv(configVariable); if (environmentValue != null) { configDirectories.add(environmentValue); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4930/buggy-version/engine.core.src.main.java.org.datacleaner.server.EnvironmentBasedHadoopClusterInformation.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "dce396086a7fc32195e4d6f448b2ff48e97bee77", "Url": "https://api.github.com/repos/datacleaner/DataCleaner", "Date": "2016-03-07T12:25:15Z"},
{"Line": "=>1217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.python.pydev.editor.codecompletion.revisited.modules.SourceToken.getAst()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(org.python.pydev.editor.codecompletion.revisited.visitors.AbstractVisitor.isWildImport(importFrom))) { relative += \".\" + tok; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7274/buggy-version/plugins.org.python.pydev.src_completions.org.python.pydev.editor.codecompletion.revisited.AbstractASTManager.java", "BodyUseAPI": [], "Fixed commit": "fe3bcec33052e3d517f0b8fe639c40e022328eb7", "Url": "https://api.github.com/repos/aptana/Pydev", "Date": "2011-06-01T11:55:19Z"},
{"Line": "=>1942", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (contentLocale == null) { java.util.List<java.util.Locale> locales = content.getLocales(); if (!(locales.isEmpty())) { contentLocale = locales.get(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7154/buggy-version/src.org.opencms.ade.sitemap.CmsVfsSitemapService.java", "BodyUseAPI": [], "Fixed commit": "10cfd86025734120e2b56dbb60006effbf11f2a6", "Url": "https://api.github.com/repos/serrapos/opencms-core", "Date": "2012-06-22T10:28:48Z"},
{"Line": "=>1950", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (contentLocale != null) { link = content.getValue(org.opencms.ade.sitemap.CmsVfsSitemapService.REDIRECT_LINK_TARGET_XPATH, getCmsObject().getRequestContext().getLocale()).getStringValue(getCmsObject()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7154/buggy-version/src.org.opencms.ade.sitemap.CmsVfsSitemapService.java", "BodyUseAPI": [], "Fixed commit": "10cfd86025734120e2b56dbb60006effbf11f2a6", "Url": "https://api.github.com/repos/serrapos/opencms-core", "Date": "2012-06-22T10:28:48Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (seriesGrade != null) { if (seriesGrade.equals(\"\")) { seriesGrade = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3550/buggy-version/app.src.main.java.com.android.rotem.showme.AddNewSeriesActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "46552518a46817cd89b1d89a2ffd41919325573e", "Url": "https://api.github.com/repos/RotemShaanan/SHOWme", "Date": "2016-04-29T08:44:36Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (seriesGenres != null) { if (seriesGenres.equals(\"\")) { seriesGenres = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3550/buggy-version/app.src.main.java.com.android.rotem.showme.AddNewSeriesActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "46552518a46817cd89b1d89a2ffd41919325573e", "Url": "https://api.github.com/repos/RotemShaanan/SHOWme", "Date": "2016-04-29T08:44:36Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (seriesPeople != null) { if (seriesPeople.equals(\"\")) { seriesPeople = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3550/buggy-version/app.src.main.java.com.android.rotem.showme.AddNewSeriesActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "46552518a46817cd89b1d89a2ffd41919325573e", "Url": "https://api.github.com/repos/RotemShaanan/SHOWme", "Date": "2016-04-29T08:44:36Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentDistance) != null) currentDistance.deleteLastShot();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8791/buggy-version/src.com.example.archery.archeryView.CArcheryView.java", "BodyUseAPI": [], "Fixed commit": "dd99f2fd219f9ebcd138fe06e60eb15f84ec6d23", "Url": "https://api.github.com/repos/Andryyo/Archery", "Date": "2013-04-29T17:56:41Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player.getWallet()) < 20) { java.lang.System.out.println(\"Just kidding, you broke\"); gameChoice = 6; }else { gameChoice = user.getDoubleInput(\"Choose your # of choice: \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6013/buggy-version/src.main.java.io.zipcoder.zealotscasino.Game.java", "BodyUseAPI": [], "Fixed commit": "8070457c7638cbd3139ae43ddd94ba2efc2340fb", "Url": "https://api.github.com/repos/wongandrewp/ZealotsCasino2", "Date": "2017-05-11T18:25:55Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (result != null) { return result.getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5272/buggy-version/msi.gaml.architecture.simplebdi.src.msi.gaml.architecture.simplebdi.PerceiveStatement.java", "BodyUseAPI": ["msi.gama.runtime.IScope.ExecutionResult.getValue()"], "Fixed commit": "a70571df02642b409a2070de2e9b46d67502085b", "Url": "https://api.github.com/repos/SonTG/gama", "Date": "2017-05-31T15:02:55Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((url.charAt(((url.length()) - 1))) == '/') { url = url.substring(0, ((url.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8473/buggy-version/androidcommon_lib.src.main.java.org.opendatakit.views.ODKWebView.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "315789945d66978333be3f3e6fb43dc5092aa2df", "Url": "https://api.github.com/repos/clarlars/androidcommon", "Date": "2017-07-09T01:21:35Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((intendedPageToLoad.charAt(((intendedPageToLoad.length()) - 1))) == '/') { intendedPageToLoad = intendedPageToLoad.substring(0, ((intendedPageToLoad.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8473/buggy-version/androidcommon_lib.src.main.java.org.opendatakit.views.ODKWebView.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "315789945d66978333be3f3e6fb43dc5092aa2df", "Url": "https://api.github.com/repos/clarlars/androidcommon", "Date": "2017-07-09T01:21:35Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((queryAccountName) != null) permissions = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1979/buggy-version/src.main.java.org.ndexbio.sync.QueryCopyPlan.java", "BodyUseAPI": [], "Fixed commit": "7ab34cd372ccae634cf0693c0c58e2875855dbfa", "Url": "https://api.github.com/repos/ndexbio/ndex-sync", "Date": "2016-04-19T05:39:55Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(caches.getString(c.getId(), null),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (replies == null) { replies = new model.CommentList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7858/buggy-version/App.src.activity.ViewCacheCommentActivity.java", "BodyUseAPI": [], "Fixed commit": "7a16da215837f3c521b3f6696f2b36d6d990660a", "Url": "https://api.github.com/repos/CMPUT301W14T14/Team14RecipeFinder", "Date": "2014-03-13T20:50:35Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.compile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((Pnofollow.split(result).length) > 1) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/9069/buggy-version/Client.src.net.jlxip.prostremio.GetTorrents.java", "BodyUseAPI": [], "Fixed commit": "1bec14c18c2a44a17ecaca749b28e8f5d2dce356", "Url": "https://api.github.com/repos/jlxip/PROStremio", "Date": "2017-03-11T22:16:58Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((command.length) < 3) throw new br.edu.ifpb.sockchat.exception.InvalidCommandException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3035/buggy-version/src.br.edu.ifpb.sockchat.connectionBehavior.ClientHandler.java", "BodyUseAPI": [], "Fixed commit": "0f8b8700ddbfb2950a2c9a67a4b0a69295b8cbac", "Url": "https://api.github.com/repos/joaopaulo11jp/SockChatServer", "Date": "2015-12-17T21:46:33Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((command.length) == 1) new java.lang.Thread(new br.edu.ifpb.sockchat.tasks.TaskWorker(new br.edu.ifpb.sockchat.tasks.ListTask(this.client.getName()))).start(); else throw new br.edu.ifpb.sockchat.exception.InvalidCommandException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3035/buggy-version/src.br.edu.ifpb.sockchat.connectionBehavior.ClientHandler.java", "BodyUseAPI": [], "Fixed commit": "0f8b8700ddbfb2950a2c9a67a4b0a69295b8cbac", "Url": "https://api.github.com/repos/joaopaulo11jp/SockChatServer", "Date": "2015-12-17T21:46:33Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((command.length) == 1) new java.lang.Thread(new br.edu.ifpb.sockchat.tasks.TaskWorker(new br.edu.ifpb.sockchat.tasks.ByeTask(this.client.getName()))).start(); else throw new br.edu.ifpb.sockchat.exception.InvalidCommandException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3035/buggy-version/src.br.edu.ifpb.sockchat.connectionBehavior.ClientHandler.java", "BodyUseAPI": [], "Fixed commit": "0f8b8700ddbfb2950a2c9a67a4b0a69295b8cbac", "Url": "https://api.github.com/repos/joaopaulo11jp/SockChatServer", "Date": "2015-12-17T21:46:33Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getContentResolver().query(DataProvider.CONTENT_URI_PROFILE,<nulltype>,((at.sw_xp_02.whisper.DataProvider.COL_EMAIL) + \"= ?\"),java.lang.String[],<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (otherUser == null) { android.content.ContentValues values2 = new android.content.ContentValues(2); values2.put(DataProvider.COL_NAME, senderEmail.substring(0, senderEmail.indexOf('@'))); values2.put(DataProvider.COL_EMAIL, senderEmail); context.getContentResolver().insert(DataProvider.CONTENT_URI_PROFILE, values2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2472/buggy-version/InstaChatX.src.at.sw_xp_02.whisper.client.GcmBroadcastReceiver.java", "BodyUseAPI": [], "Fixed commit": "5a64d6193c8ff42e6ea909626158dd4ca23f33d2", "Url": "https://api.github.com/repos/DusanTrkulja/sw14_xp_02", "Date": "2014-05-21T12:26:39Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value != null) { org.carlspring.ioc.PropertyValueInjector.setField(field, target, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8450/buggy-version/src.main.java.org.carlspring.ioc.PropertyValueInjector.java", "BodyUseAPI": ["org.carlspring.ioc.PropertyValueInjector.setField(java.lang.reflect.Field,java.lang.Object,java.lang.String)"], "Fixed commit": "8e5185d86a1588924a3a38addc262d0b302eb307", "Url": "https://api.github.com/repos/carlspring/properties-injector", "Date": "2012-07-02T14:04:19Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.aptana.editor.ruby.formatter.internal.RubyFormatterNodeBuilderVisitor.charLookup(com.aptana.formatter.IFormatterDocument,int,char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (endKeywordStart > (-1)) { beginEndOffset = endKeywordStart; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2989/buggy-version/plugins.com.aptana.editor.ruby.formatter.epl.src.com.aptana.editor.ruby.formatter.internal.RubyFormatterNodeBuilderVisitor.java", "BodyUseAPI": [], "Fixed commit": "971817259f7027d3b75a72244488da77a370eef2", "Url": "https://api.github.com/repos/aptana/studio3-ruby", "Date": "2012-08-28T21:14:34Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(raw.startsWith(\"//\"))) raw = (com.google.sitebricks.rendering.control.XmlWidget.request.get().context()) + raw;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4854/buggy-version/sitebricks.src.main.java.com.google.sitebricks.rendering.control.XmlWidget.java", "BodyUseAPI": [], "Fixed commit": "f454f0d4456801a8734e6367d48aa41dfbe83ddb", "Url": "https://api.github.com/repos/dhanji/sitebricks", "Date": "2012-04-20T23:55:54Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shootingDelayCounterPlayer2) >= 0) { shootingDelayCounterPlayer2 -= 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6515/buggy-version/src.KeyEventHandler.java", "BodyUseAPI": [], "Fixed commit": "ede94db3842a80dca9aa4af9eb62959e3a0403f8", "Url": "https://api.github.com/repos/abbeboa/javaProject", "Date": "2015-04-30T02:09:51Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((selectedPieceMoves) != null) && (!(selectedPieceMoves.contains(target)))) && (target.isHighlighted())) { selectedPieceMoves.add(target); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4210/buggy-version/src.com.petrifiednightmares.singularityChess.logic.Game.java", "BodyUseAPI": ["java.util.Set<com.petrifiednightmares.singularityChess.logic.Square>.add(com.petrifiednightmares.singularityChess.logic.Square)"], "Fixed commit": "d24dc26ddf9a22089e16e065648e544a45725ab6", "Url": "https://api.github.com/repos/razorstorm/SingularityChess", "Date": "2012-11-20T04:28:26Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ootEnemy.Spielbrett.zugGueltig(ootEnemy.Spielbrett.getSpielbrett(),ootEnemy.Koordinate.Parse(coordinate),Stein.WEISS)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (moeglich) { ootEnemy.Spielbrett.setzeStein(ootEnemy.Spielbrett.getSpielbrett(), ootEnemy.Koordinate.Parse(coordinate), Stein.WEISS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3641/buggy-version/src.ootTunier.TunierKi.java", "BodyUseAPI": [], "Fixed commit": "6ae703cf6c370daa57a8c1921bcc9b02caed22a2", "Url": "https://api.github.com/repos/ootBrettspiel/repo-Brettspiel", "Date": "2017-01-09T16:48:29Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.ualberta.ridr.AccountController.getUser()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (currentUser != null) { if (addAccount) { newDriver.setDriverStatus(true); createAccount(); }else { android.util.Log.i(\"Get user\", (\"logging in user \" + (currentUser.getName()))); newDriver = new ca.ualberta.ridr.Driver(currentUser); addUserInfoToField(currentUser); } }else { addAccount = false; updateUser = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4163/buggy-version/app.src.main.java.ca.ualberta.ridr.AddDriverView.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,(\"logging in user \" + (currentUser.getName())))", "ca.ualberta.ridr.User.getName()", "ca.ualberta.ridr.AddDriverView.addUserInfoToField(ca.ualberta.ridr.User)"], "Fixed commit": "645a3d39da67a45ba674142bd088138da02fdb8b", "Url": "https://api.github.com/repos/CMPUT301F16T04/Ridr", "Date": "2016-11-25T00:30:06Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (listener instanceof btwmods.api.player.listeners.ISlotListener) slotListeners.remove(((btwmods.api.player.listeners.ISlotListener) (listener)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/903/buggy-version/src.btwmods.api.player.PlayerAPI.java", "BodyUseAPI": [], "Fixed commit": "fd716308d3b0633804bfb54660a575e20f47ae8b", "Url": "https://api.github.com/repos/btwmodsbiz/server-api", "Date": "2012-10-08T22:36:55Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (listener instanceof btwmods.api.player.listeners.ISlotListener) slotListeners.add(((btwmods.api.player.listeners.ISlotListener) (listener)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/903/buggy-version/src.btwmods.api.player.PlayerAPI.java", "BodyUseAPI": [], "Fixed commit": "fd716308d3b0633804bfb54660a575e20f47ae8b", "Url": "https://api.github.com/repos/btwmodsbiz/server-api", "Date": "2012-10-08T22:36:55Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["logiikka.Alusta.lueMerkki(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (merkki == 'x') { return java.lang.Integer.MAX_VALUE; }else { return java.lang.Integer.MIN_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3890/buggy-version/Dungeen.src.main.java.tekoaly.Arvioija.java", "BodyUseAPI": [], "Fixed commit": "9349db99100b0bcaca52a22f5bc6649420857620", "Url": "https://api.github.com/repos/ktj/DUNGEON-DUUGNE", "Date": "2012-09-28T13:29:10Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["logiikka.Alusta.lueMerkki(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (merkki == 'x') { return java.lang.Integer.MAX_VALUE; }else { return java.lang.Integer.MIN_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3890/buggy-version/Dungeen.src.main.java.tekoaly.Arvioija.java", "BodyUseAPI": [], "Fixed commit": "9349db99100b0bcaca52a22f5bc6649420857620", "Url": "https://api.github.com/repos/ktj/DUNGEON-DUUGNE", "Date": "2012-09-28T13:29:10Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["logiikka.Alusta.lueMerkki(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (merkki == 'x') { return java.lang.Integer.MAX_VALUE; }else { return java.lang.Integer.MIN_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3890/buggy-version/Dungeen.src.main.java.tekoaly.Arvioija.java", "BodyUseAPI": [], "Fixed commit": "9349db99100b0bcaca52a22f5bc6649420857620", "Url": "https://api.github.com/repos/ktj/DUNGEON-DUUGNE", "Date": "2012-09-28T13:29:10Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["logiikka.Alusta.lueMerkki(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (merkki == 'x') { return java.lang.Integer.MAX_VALUE; }else { return java.lang.Integer.MIN_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3890/buggy-version/Dungeen.src.main.java.tekoaly.Arvioija.java", "BodyUseAPI": [], "Fixed commit": "9349db99100b0bcaca52a22f5bc6649420857620", "Url": "https://api.github.com/repos/ktj/DUNGEON-DUUGNE", "Date": "2012-09-28T13:29:10Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != intent) { if (com.shlf.lockscreen.lock.LockService.DBG) android.util.Log.d(com.shlf.lockscreen.lock.LockService.TAG, (\"service onStart and action is \" + (intent.getAction()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1431/buggy-version/src.com.shlf.lockscreen.lock.LockService.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,(\"service onStart and action is \" + (intent.getAction())))", "android.content.Intent.getAction()"], "Fixed commit": "5a459bdbcce1200c9facb3c89f63eb8e017c7bfe", "Url": "https://api.github.com/repos/shlf/KissLock", "Date": "2014-06-30T06:42:19Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 16) { mLockViewLayoutParams.systemUiVisibility |= 256; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1431/buggy-version/src.com.shlf.lockscreen.lock.LockLayer.java", "BodyUseAPI": [], "Fixed commit": "5a459bdbcce1200c9facb3c89f63eb8e017c7bfe", "Url": "https://api.github.com/repos/shlf/KissLock", "Date": "2014-06-30T06:42:19Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["zombie.Main.randomZombies()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (zombies[j].isAlive()) { survivors[i].attack(zombies[j]); if (!(zombies[j].isAlive())) { java.lang.System.out.println((((survivors[i].getISurvivor()) + \" killed \") + (zombies[j].getIZombie()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/874/buggy-version/src.zombie.Main.java", "BodyUseAPI": ["zombies[j].getIZombie()", "java.io.PrintStream.println((((survivors[i].getISurvivor()) + \" killed \") + (zombies[j].getIZombie())))", "zombies[j].isAlive()", "survivors[i].attack(zombies[j])"], "Fixed commit": "e60782704977c21c45c8f6545df4ec74c13fbeaa", "Url": "https://api.github.com/repos/FisherMD/zombie", "Date": "2017-02-21T21:27:09Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.linewx.law.instrument.Validator.Validator.validate(com.linewx.law.parser.ParseContext)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (validationResult.getResult()) { setContent(context); printContent(); }else { java.lang.System.out.println((\"error:\" + (validationResult.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4171/buggy-version/instrument.src.main.java.com.linewx.law.instrument.Instrument.java", "BodyUseAPI": ["com.linewx.law.instrument.Validator.ValidationResult.getMessage()", "java.io.PrintStream.println((\"error:\" + (validationResult.getMessage())))"], "Fixed commit": "8448f9b4cd5f99c33acb0a21db74b9a2671682d0", "Url": "https://api.github.com/repos/linewx/lawsuite", "Date": "2016-11-23T03:04:02Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pt.publicId) != null) { list.add(pt.publicId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6224/buggy-version/rhogen-wizard.src.rhogenwizard.PlatformType.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "06be615a613b4cf8e11a5a4deeb580766d7268ca", "Url": "https://api.github.com/repos/rhomobile/rhostudio", "Date": "2012-06-28T06:46:23Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (icon != null) this.icon = new be.robinj.ubuntu.unity.AppIcon(icon);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1437/buggy-version/UbuntuLauncher.app.src.main.java.be.robinj.ubuntu.unity.AppLauncher.java", "BodyUseAPI": [], "Fixed commit": "f21b21774c6515ca18e2c3558981ff78e43427d3", "Url": "https://api.github.com/repos/RobinJ1995/DistroHopper", "Date": "2015-07-22T11:12:12Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clusterContext) == null) { initClusterContext(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2906/buggy-version/dbclient.src.main.java.com.emc.storageos.db.client.impl.DbClientContext.java", "BodyUseAPI": [], "Fixed commit": "415637322eab66331162f281f8238d22b8cdbb4a", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-10-06T18:48:04Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hjtech.secretary.data.MTUser.getMuAccount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((muAccount.length()) != 0) { com.hjtech.secretary.utils.MTCommon.moveSelectionToLast(mobile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1051/buggy-version/ConferenceSecretary.src.com.hjtech.secretary.activity.EnrollActivity.java", "BodyUseAPI": [], "Fixed commit": "ab0d38f869646f92d3e53d2aebf8fa0ee194a3a0", "Url": "https://api.github.com/repos/albuscrow/metting", "Date": "2014-08-15T05:18:26Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hjtech.secretary.data.MTUser.getMuEmail()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((muEmail.length()) != 0) { com.hjtech.secretary.utils.MTCommon.moveSelectionToLast(email); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1051/buggy-version/ConferenceSecretary.src.com.hjtech.secretary.activity.EnrollActivity.java", "BodyUseAPI": [], "Fixed commit": "ab0d38f869646f92d3e53d2aebf8fa0ee194a3a0", "Url": "https://api.github.com/repos/albuscrow/metting", "Date": "2014-08-15T05:18:26Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hjtech.secretary.data.MTUser.getMuUnitName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((muUnitName.length()) != 0) { com.hjtech.secretary.utils.MTCommon.moveSelectionToLast(company); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1051/buggy-version/ConferenceSecretary.src.com.hjtech.secretary.activity.EnrollActivity.java", "BodyUseAPI": [], "Fixed commit": "ab0d38f869646f92d3e53d2aebf8fa0ee194a3a0", "Url": "https://api.github.com/repos/albuscrow/metting", "Date": "2014-08-15T05:18:26Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hjtech.secretary.data.MTUser.getMuName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((muName.length()) != 0) { com.hjtech.secretary.utils.MTCommon.moveSelectionToLast(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1051/buggy-version/ConferenceSecretary.src.com.hjtech.secretary.activity.EnrollActivity.java", "BodyUseAPI": [], "Fixed commit": "ab0d38f869646f92d3e53d2aebf8fa0ee194a3a0", "Url": "https://api.github.com/repos/albuscrow/metting", "Date": "2014-08-15T05:18:26Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c == null) { return compList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4703/buggy-version/PluginsAndFeatures.azure-toolkit-for-intellij.src.com.microsoft.intellij.ui.components.AzureDialogWrapper.java", "BodyUseAPI": [], "Fixed commit": "7b548469c1dcbc1c5743e4d8290d782547578f37", "Url": "https://api.github.com/repos/djlan/azure-tools-for-java", "Date": "2017-05-18T02:57:05Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((sourceNode != null) && (targetNode != null)) { buf.append(sourceNode.getId()); buf.append(\"-\"); buf.append(relType); buf.append(\"-\"); buf.append(targetNode.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3356/buggy-version/structr-neo4j-bolt-driver.src.main.java.org.structr.bolt.wrapper.NodeWrapper.java", "BodyUseAPI": ["java.lang.StringBuilder.append(targetNode.getId())", "java.util.LinkedList.Node.getId()", "java.lang.StringBuilder.append(sourceNode.getId())", "java.util.LinkedList.Node.getId()"], "Fixed commit": "9c5adff215e8580617d958270a863737cfe2e83c", "Url": "https://api.github.com/repos/structr/structr", "Date": "2017-11-28T22:04:31Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((currentIterator.left) != null) && ((currentIterator.right) == null)) { current = parent(currentIterator); if (isLeftChild(currentIterator, current)) { iterator = current; return iterator; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3158/buggy-version/src.assingmentDS.util.MyTreeIterator.java", "BodyUseAPI": ["assingmentDS.util.MyTreeIterator<T>.isLeftChild(assingmentDS.util.MyBinTree.Node,assingmentDS.util.MyBinTree.Node)", "assingmentDS.util.MyTreeIterator<T>.parent(assingmentDS.util.MyBinTree.Node)"], "Fixed commit": "8e7aab4b72eda52c14ee17262e1fe3fd328bca9e", "Url": "https://api.github.com/repos/pv42/Assignment_DS", "Date": "2017-05-22T13:00:58Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, com.github.ucchyocean.lc.Channel>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (channel.isPersonalChat()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4328/buggy-version/src.main.java.com.github.ucchyocean.lc.ChannelManager.java", "BodyUseAPI": [], "Fixed commit": "d70f03a3990abdc05454671ee70bb39d0ec01db0", "Url": "https://api.github.com/repos/ucchyocean/LunaChat", "Date": "2013-07-06T06:34:43Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, com.github.ucchyocean.lc.Channel>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (channel.isPersonalChat()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4328/buggy-version/src.main.java.com.github.ucchyocean.lc.ChannelManager.java", "BodyUseAPI": [], "Fixed commit": "d70f03a3990abdc05454671ee70bb39d0ec01db0", "Url": "https://api.github.com/repos/ucchyocean/LunaChat", "Date": "2013-07-06T06:34:43Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, com.github.ucchyocean.lc.Channel>.get(java.lang.String)", "org.bukkit.entity.Player.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (channel.getBanned().contains(playerName)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/4328/buggy-version/src.main.java.com.github.ucchyocean.lc.ChannelManager.java", "BodyUseAPI": [], "Fixed commit": "d70f03a3990abdc05454671ee70bb39d0ec01db0", "Url": "https://api.github.com/repos/ucchyocean/LunaChat", "Date": "2013-07-06T06:34:43Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((xvsm.Kontrolleur.counter) % 2) == 0) { xvsm.Lebkuchen kostprobe = charge.remove(0); kostprobe.setStatus(\"Verkostet\"); xvsm.Space.getCapi().write(xvsm.Space.createOrLookUpContainer(Standort.VERKOSTET), MzsConstants.RequestTimeout.DEFAULT, tx, new org.mozartspaces.core.Entry(kostprobe, org.mozartspaces.capi3.FifoCoordinator.newCoordinationData())); status = Standort.KONTROLLIERT; if (!(isKontrolleOK())) { status = Standort.ENTSORGT; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8376/buggy-version/src.xvsm.Kontrolleur.java", "BodyUseAPI": [], "Fixed commit": "ed5f629ed6e53a6278937f0679888b61689b2eb8", "Url": "https://api.github.com/repos/Taper21/SBC", "Date": "2014-01-21T17:29:12Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ObjectMapperRepository.objectMapper.readValue(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(openMRSEncounter.shouldERPConsumeEvent())) return org.bahmni.openerp.web.request.OpenERPRequest.DO_NOT_CONSUME;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2787/buggy-version/openerp-atomfeed-service.src.main.java.org.bahmni.feed.openerp.worker.OpenERPSaleOrderEventWorker.java", "BodyUseAPI": [], "Fixed commit": "ea252e1356a47fad7d59a2bdcc0db534d7238428", "Url": "https://api.github.com/repos/Bahmni/openerp-atomfeed-service", "Date": "2016-01-14T18:52:44Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (categoryNullToEmpty) { category = com.google.common.base.Strings.nullToEmpty(category); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5455/buggy-version/server.src.main.java.org.activityinfo.legacy.shared.model.ActivityFormDTO.java", "BodyUseAPI": [], "Fixed commit": "0af0fc40c5a4107247304c95c8b27a0589d2996e", "Url": "https://api.github.com/repos/bedatadriven/activityinfo", "Date": "2016-08-23T08:03:11Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rpc.RpcServer.theServer) == null) rpc.RpcServer.theServer = new rpc.RpcServer();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3758/buggy-version/rpc.RpcServer.java", "BodyUseAPI": [], "Fixed commit": "00d9c0a8ca810aaf652bbb38829a24b1981ad6ad", "Url": "https://api.github.com/repos/jonathanpullano/LSI-Awesomeness", "Date": "2012-04-07T01:59:22Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rpc.RpcServer.theServer) == null) rpc.RpcServer.theServer = new rpc.RpcServer();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3758/buggy-version/rpc.RpcServer.java", "BodyUseAPI": [], "Fixed commit": "00d9c0a8ca810aaf652bbb38829a24b1981ad6ad", "Url": "https://api.github.com/repos/jonathanpullano/LSI-Awesomeness", "Date": "2012-04-07T01:59:22Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rpc.RpcServer.theServer) == null) rpc.RpcServer.theServer = new rpc.RpcServer();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3758/buggy-version/rpc.RpcServer.java", "BodyUseAPI": [], "Fixed commit": "00d9c0a8ca810aaf652bbb38829a24b1981ad6ad", "Url": "https://api.github.com/repos/jonathanpullano/LSI-Awesomeness", "Date": "2012-04-07T01:59:22Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.swt.widgets.FileDialog.open()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (pathStrNar != null) { pathNar = java.nio.file.Paths.get(pathStrNar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7021/buggy-version/nak.nakloidGUI.actions.files.OpenAction.java", "BodyUseAPI": ["java.nio.file.Paths.get(java.lang.String)"], "Fixed commit": "9862a1f4c59a815ea05b115dc2621539039ed015", "Url": "https://api.github.com/repos/acknak/NakloidGUI", "Date": "2016-07-30T08:25:01Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((areamap.get(x, y)) != null) { if (!(areamap.get(x, y).isObstacle())) { areamap.get(x, y).setObstacleValue(AreamapHandler.HOLE_VALUE); } }else { net.bhl.cdt.paxelerate.util.toOpenCDT.Log.add(this, \"Check cabin dimensions! Margin for fwd and aft exit is required.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2129/buggy-version/net.bhl.cdt.paxelerate.model.src.net.bhl.cdt.paxelerate.model.astar.ObstacleGenerator.java", "BodyUseAPI": ["areamap.get(x, y).isObstacle()", "net.bhl.cdt.paxelerate.model.astar.Areamap.get(int,int)", "net.bhl.cdt.paxelerate.model.astar.Areamap.get(int,int)", "areamap.get(x, y).setObstacleValue(AreamapHandler.HOLE_VALUE)"], "Fixed commit": "0af6728d831d01aeb953b99fcf503dadf93319e8", "Url": "https://api.github.com/repos/BauhausLuftfahrt/PAXelerate", "Date": "2016-07-28T12:46:14Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (infoCommands.isEmpty()) { java.lang.System.out.println(\"I am a manly man\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8468/buggy-version/src.vooga.rts.gamedesign.sprite.gamesprites.interactive.InteractiveEntity.java", "BodyUseAPI": [], "Fixed commit": "d0cbfbb868225bd343384daa581bd6235588fe6f", "Url": "https://api.github.com/repos/Tadimsky/vooga", "Date": "2013-04-23T10:17:21Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (myActions.isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8468/buggy-version/src.vooga.rts.gamedesign.sprite.gamesprites.interactive.InteractiveEntity.java", "BodyUseAPI": [], "Fixed commit": "d0cbfbb868225bd343384daa581bd6235588fe6f", "Url": "https://api.github.com/repos/Tadimsky/vooga", "Date": "2013-04-23T10:17:21Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Common.databaseProxy.newPointValueDao().getPointValueAfter(vo.getId(),long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (after != null) { for (int i = (pvts.size()) - 1; i >= 0; i--) { com.serotonin.m2m2.rt.dataImage.PointValueTime pvt = pvts.get(i); if ((pvt.getTime()) < (after.getTime())) return pvt; } }else { for (int i = (pvts.size()) - 1; i >= 0; i--) { com.serotonin.m2m2.rt.dataImage.PointValueTime pvt = pvts.get(i); if ((pvt.getTime()) >= time) return pvt; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1588/buggy-version/Core.src.com.serotonin.m2m2.rt.dataImage.DataPointRT.java", "BodyUseAPI": ["com.serotonin.m2m2.rt.dataImage.PointValueTime.getTime()"], "Fixed commit": "6cad648d01c2f6684e1f7304b2598e17c6b21493", "Url": "https://api.github.com/repos/infiniteautomation/ma-core-public", "Date": "2015-06-02T20:48:24Z"},
{"Line": "=>738", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (o.isDirty()) { if (o.isSparse()) { org.apache.sysml.runtime.instructions.gpu.context.CSRPointer p = o.getSparseMatrixCudaPointer(); if (p == null) throw new java.lang.RuntimeException(\"CSRPointer is null in clearTemporaryMemory\"); if (((p.rowPtr) != null) && (cudaBlockSizeMap.containsKey(p.rowPtr))) { tmpCudaBlockSizeMap.put(p.rowPtr, cudaBlockSizeMap.get(p.rowPtr)); } if (((p.colInd) != null) && (cudaBlockSizeMap.containsKey(p.colInd))) { tmpCudaBlockSizeMap.put(p.colInd, cudaBlockSizeMap.get(p.colInd)); } if (((p.val) != null) && (cudaBlockSizeMap.containsKey(p.val))) { tmpCudaBlockSizeMap.put(p.val, cudaBlockSizeMap.get(p.val)); } }else { jcuda.Pointer p = o.getJcudaDenseMatrixPtr(); if (p == null) throw new java.lang.RuntimeException(\"Pointer is null in clearTemporaryMemory\"); tmpCudaBlockSizeMap.put(p, cudaBlockSizeMap.get(p)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7629/buggy-version/src.main.java.org.apache.sysml.runtime.instructions.gpu.context.GPUContext.java", "BodyUseAPI": ["org.apache.sysml.runtime.instructions.gpu.context.GPUObject.isSparse()", "org.apache.sysml.runtime.instructions.gpu.context.GPUObject.getSparseMatrixCudaPointer()", "org.apache.sysml.runtime.instructions.gpu.context.GPUObject.getJcudaDenseMatrixPtr()"], "Fixed commit": "16bb08bdec8e861d3a04d90148d71c4ab2ac937d", "Url": "https://api.github.com/repos/nakul02/systemml", "Date": "2017-08-16T23:07:01Z"},
{"Line": "=>741", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.sysml.runtime.instructions.gpu.context.GPUObject.getSparseMatrixCudaPointer()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (p == null) throw new java.lang.RuntimeException(\"CSRPointer is null in clearTemporaryMemory\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7629/buggy-version/src.main.java.org.apache.sysml.runtime.instructions.gpu.context.GPUContext.java", "BodyUseAPI": [], "Fixed commit": "16bb08bdec8e861d3a04d90148d71c4ab2ac937d", "Url": "https://api.github.com/repos/nakul02/systemml", "Date": "2017-08-16T23:07:01Z"},
{"Line": "=>755", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.sysml.runtime.instructions.gpu.context.GPUObject.getJcudaDenseMatrixPtr()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (p == null) throw new java.lang.RuntimeException(\"Pointer is null in clearTemporaryMemory\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7629/buggy-version/src.main.java.org.apache.sysml.runtime.instructions.gpu.context.GPUContext.java", "BodyUseAPI": [], "Fixed commit": "16bb08bdec8e861d3a04d90148d71c4ab2ac937d", "Url": "https://api.github.com/repos/nakul02/systemml", "Date": "2017-08-16T23:07:01Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.abs(long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (delta > 1000) { java.lang.System.out.println(((((\"WARN Found outdated account ID \" + accountId) + \", Stormpath account is newer by \") + delta) + \" seconds\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2418/buggy-version/src.main.java.org.sagebionetworks.bridge.scripts.StormpathToMySqlMigration.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "b611d9ed81f038089be7999755ae5608445f641d", "Url": "https://api.github.com/repos/DwayneJengSage/BridgeDJengScripts", "Date": "2017-06-19T22:26:46Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((str.trim().length()) <= 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7117/buggy-version/app.src.main.java.com.yeoman.simplestnote.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "0d4cbfe94946f45c8fe93e5c811a4af09031a96a", "Url": "https://api.github.com/repos/zYeoman/SimplestNote", "Date": "2017-09-14T16:11:18Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (storedSType != (-1)) { signatureType = org.scribe.model.SignatureType.values()[storedSType]; }else { signatureType = org.scribe.model.SignatureType.Header; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7595/buggy-version/library.src.main.java.com.whiterabbit.postman.oauth.StorableServiceBuilder.java", "BodyUseAPI": [], "Fixed commit": "a21996a131c1dac36639286c0d071e2003f50da4", "Url": "https://api.github.com/repos/fedepaol/PostmanLib--Rings-Twice--Android", "Date": "2013-03-13T00:00:27Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(LEDOnOff.isChecked())) { stateOfLed = ((byte) (0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3126/buggy-version/ColorCarvesApp.app.src.main.java.com.jackson.andrew.colorcarvesapp.LEDSettingScreen.java", "BodyUseAPI": [], "Fixed commit": "e54eea3a927f1d3763923e0efa5e478b70e8425a", "Url": "https://api.github.com/repos/bzachmann/ColorCarvesApp", "Date": "2017-09-27T13:43:57Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dupeFound == true) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5483/buggy-version/src.ASemester.java", "BodyUseAPI": [], "Fixed commit": "e473b03d83fd3b6195ab6d7a7534254ad0e44a56", "Url": "https://api.github.com/repos/aza2105/CourseScheduler", "Date": "2014-07-04T22:37:49Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dupeFound == true) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/5483/buggy-version/src.Semester.java", "BodyUseAPI": [], "Fixed commit": "e473b03d83fd3b6195ab6d7a7534254ad0e44a56", "Url": "https://api.github.com/repos/aza2105/CourseScheduler", "Date": "2014-07-04T22:37:49Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((triple != 0) && (doubleNum != 0)) { finishedResult = triple + doubleNum; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6137/buggy-version/app.src.main.java.com.miniprojekt.danielmathiasdaniel.yatzy2.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "249aeca1b451a440d1a5a582f7cd10304e9628b0", "Url": "https://api.github.com/repos/stonecompass/Yatzy", "Date": "2015-02-26T14:56:22Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value.startsWith(\"\\\"\")) { value = value.substring(1, value.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7957/buggy-version/admin.broadleaf-open-admin-platform.src.main.java.org.broadleafcommerce.openadmin.web.rulebuilder.statement.PhraseTranslator.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "faba03cb3a3e484691b5df5d5786803d24583b11", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2013-04-22T18:51:49Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value.endsWith(\"\\\"\")) { value = value.substring(0, ((value.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7957/buggy-version/admin.broadleaf-open-admin-platform.src.main.java.org.broadleafcommerce.openadmin.web.rulebuilder.statement.PhraseTranslator.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "faba03cb3a3e484691b5df5d5786803d24583b11", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2013-04-22T18:51:49Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mongodb.DBCollection.findOne(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (dbObject != null) { return com.google.common.base.Optional.fromNullable(com.metabroadcast.common.persistence.translator.TranslatorUtils.toString(dbObject, org.atlasapi.feeds.youview.persistence.MongoYouViewPayloadHashStore.HASH_FIELD)); }else { return com.google.common.base.Optional.absent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/9121/buggy-version/src.main.java.org.atlasapi.feeds.youview.persistence.MongoYouViewPayloadHashStore.java", "BodyUseAPI": ["com.metabroadcast.common.persistence.translator.TranslatorUtils.toString(com.mongodb.DBObject,java.lang.String)", "com.google.common.base.Optional.fromNullable(com.metabroadcast.common.persistence.translator.TranslatorUtils.toString(dbObject, org.atlasapi.feeds.youview.persistence.MongoYouViewPayloadHashStore.HASH_FIELD))"], "Fixed commit": "8cd38dbf9acfad641610e8d90ef7ba9b1c604e72", "Url": "https://api.github.com/repos/atlasapi/atlas-feeds", "Date": "2015-11-10T17:49:06Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { getWindow().getDecorView().setSystemUiVisibility(((((((android.view.View.SYSTEM_UI_FLAG_LAYOUT_STABLE) | (android.view.View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION)) | (android.view.View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN)) | (android.view.View.SYSTEM_UI_FLAG_HIDE_NAVIGATION)) | (android.view.View.SYSTEM_UI_FLAG_FULLSCREEN)) | (android.view.View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/172/buggy-version/app.src.main.java.com.amqtech.fullscreenwebviewer.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c35e408bed3ca8741ed423bb302ad5e79c5a82eb", "Url": "https://api.github.com/repos/Vexigon/Full-Screen-Web-Viewer", "Date": "2015-10-20T07:03:25Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jcae.mesh.amibe.projection.TriangleKdTree.BoundaryPool.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (intersect(triangleBounds, b)) { triangleInterAABB1.setTriangle(newT); if (triangleInterAABB1.triBoxOverlap(b, true)) toAdd[(toAddIndex++)] = newT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8449/buggy-version/amibe.src.org.jcae.mesh.amibe.projection.TriangleKdTree.java", "BodyUseAPI": ["org.jcae.mesh.amibe.projection.TriangleInterAABB.triBoxOverlap(double[],boolean)"], "Fixed commit": "a8d5f68de9792527a846bb63b1cacc75e7316fd8", "Url": "https://api.github.com/repos/jeromerobert/jCAE", "Date": "2012-11-21T12:59:53Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.regex.Pattern.matches(DoubleVariable.VALUE_REGEX, value)) { return DoubleVariable.TYPE; }else if (java.util.regex.Pattern.matches(BooleanVariable.VALUE_REGEX, value)) { return BooleanVariable.TYPE; }else if (java.util.regex.Pattern.matches(CharVariable.VALUE_REGEX, value)) { return CharVariable.TYPE; }else if (java.util.regex.Pattern.matches(StringVariable.VALUE_REGEX, value)) { return StringVariable.TYPE; }else { return \"Null\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7072/buggy-version/ex6.src.oop.ex6.variables.Variable.java", "BodyUseAPI": ["java.util.regex.Pattern.matches(CharVariable.VALUE_REGEX,java.lang.String)", "java.util.regex.Pattern.matches(BooleanVariable.VALUE_REGEX,java.lang.String)", "java.util.regex.Pattern.matches(StringVariable.VALUE_REGEX,java.lang.String)"], "Fixed commit": "6a904857c27e719923a2ca652d5f29c6b3c3f456", "Url": "https://api.github.com/repos/efi136/ex6_OOP_2016", "Date": "2016-06-14T05:43:12Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((title) != null) && ((artist) != null)) { songTemp = new org.frostbite.karren.listencast.Song((((artist) + \" - \") + (title))); }else if ((title) != null) { songTemp = new org.frostbite.karren.listencast.Song(title); }else { songTemp = new org.frostbite.karren.listencast.Song(\"Off-air\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6283/buggy-version/src.org.frostbite.karren.listencast.ListenCast.java", "BodyUseAPI": [], "Fixed commit": "e330fd7181f500273a85160779249f183a9a1d93", "Url": "https://api.github.com/repos/ripxfrostbite/karren-sama", "Date": "2014-10-02T09:46:59Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Element.getElementsByTagName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((artistElement.item(0)) != null) artist = artistElement.item(0).getTextContent();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6283/buggy-version/src.org.frostbite.karren.listencast.ListenCast.java", "BodyUseAPI": ["org.w3c.dom.NodeList.item(int)", "org.w3c.dom.Node.getTextContent()"], "Fixed commit": "e330fd7181f500273a85160779249f183a9a1d93", "Url": "https://api.github.com/repos/ripxfrostbite/karren-sama", "Date": "2014-10-02T09:46:59Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase(java.util.Locale)", "answer.getValue().toLowerCase(java.util.Locale)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dbAns.equals(userAns)) { return true; }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6766/buggy-version/src.com.mlaskows.quiz.ExerciseActivity.java", "BodyUseAPI": [], "Fixed commit": "cbea25b16ed9c685485f96072d76a097b07cd29c", "Url": "https://api.github.com/repos/dogenkigen/Quiz", "Date": "2013-12-21T17:28:21Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.xxboy.activities.imageview.asynctasks.ImageViewAsync.ImageTaskArray.ARRAY_SIZE) < (com.xxboy.activities.imageview.asynctasks.ImageViewAsync.ImageTaskArray.array.size())) { com.xxboy.activities.imageview.asynctasks.ImageViewAsync.ImageTaskArray.array.removeLast(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/130/buggy-version/src.com.xxboy.activities.imageview.asynctasks.ImageViewAsync.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.Integer>.removeLast()"], "Fixed commit": "5b21ac29bb0ab82c3e98d9e0c379f8cd56475b4b", "Url": "https://api.github.com/repos/armstrongli/XCamera", "Date": "2015-03-31T15:20:16Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.intellij.util.ui.UIUtil.isUnderIntelliJLaF()) { myBranchesList.setBackground(com.intellij.util.ui.UIUtil.getPanelBackground()); }else if (com.intellij.util.ui.UIUtil.isUnderGTKLookAndFeel()) { myBranchesList.setBorder(new javax.swing.border.LineBorder(com.intellij.util.ui.UIUtil.getTextFieldBackground(), 3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/8953/buggy-version/platform.vcs-log.impl.src.com.intellij.vcs.log.ui.frame.DetailsPanel.java", "BodyUseAPI": [], "Fixed commit": "cf245dca7ee2f84677641948cfa5223c5c572293", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2014-10-07T18:08:39Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (delegate == null) throw new java.lang.IllegalArgumentException(\"ApiError delegate cannot be null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1848/buggy-version/backstopper-core.src.main.java.com.nike.backstopper.apierror.ApiErrorWithMetadata.java", "BodyUseAPI": [], "Fixed commit": "cba2c321339db94c569c56cded7ced3376c13b78", "Url": "https://api.github.com/repos/nicmunroe/backstopper", "Date": "2016-11-05T00:55:17Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (delegateMetadata == null) delegateMetadata = java.util.Collections.emptyMap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1848/buggy-version/backstopper-core.src.main.java.com.nike.backstopper.apierror.ApiErrorWithMetadata.java", "BodyUseAPI": [], "Fixed commit": "cba2c321339db94c569c56cded7ced3376c13b78", "Url": "https://api.github.com/repos/nicmunroe/backstopper", "Date": "2016-11-05T00:55:17Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (extraMetadata == null) extraMetadata = java.util.Collections.emptyMap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1848/buggy-version/backstopper-core.src.main.java.com.nike.backstopper.apierror.ApiErrorWithMetadata.java", "BodyUseAPI": [], "Fixed commit": "cba2c321339db94c569c56cded7ced3376c13b78", "Url": "https://api.github.com/repos/nicmunroe/backstopper", "Date": "2016-11-05T00:55:17Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tag.length()) == 1) { sb.append(tag.substring(0, 1)).append(\" \"); }else { if ((tag.charAt(0)) == '#') { sb.append(tag.substring(0, 1)).append(tag.substring(1, 2).toUpperCase()).append(tag.substring(2)).append(\" \"); }else { sb.append(tag.substring(0, 1).toUpperCase()).append(tag.substring(1)).append(\" \"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2682/buggy-version/app.src.main.java.com.clothapp.resources.Image.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.toUpperCase()", "java.lang.String.substring(int)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.charAt(int)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.toUpperCase()"], "Fixed commit": "191768790f983bfca7c9df66f26dd1f916d4d8d0", "Url": "https://api.github.com/repos/ClothAppProject/ClothAppAndroid", "Date": "2016-06-07T22:47:22Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.grarak.kerneladiutor.utils.kernel.LMK.getMinFrees()) != null) com.grarak.kerneladiutor.ITEMS.add(new com.grarak.kerneladiutor.elements.ListAdapter.Item(getString(R.string.low_memory_killer), new com.grarak.kerneladiutor.fragments.kernel.LMKFragment()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3764/buggy-version/app.src.main.java.com.grarak.kerneladiutor.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "dadfb4d1b7be59ab438ffb97eaf8259366a8988c", "Url": "https://api.github.com/repos/SlimSaber/KernelAdiutor", "Date": "2015-04-07T16:35:06Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mColorCalibrationCard) != null) for (com.grarak.kerneladiutor.elements.SeekBarCardView.DSeekBarCardView seekBarCardView : mColorCalibrationCard) if (dSeekBarCardView == seekBarCardView) { if ((mColorCalibrationMinCard) != null) if (position < (mColorCalibrationMinCard.getProgress())) mColorCalibrationMinCard.setProgress(position); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3764/buggy-version/app.src.main.java.com.grarak.kerneladiutor.fragments.kernel.ScreenFragment.java", "BodyUseAPI": [], "Fixed commit": "dadfb4d1b7be59ab438ffb97eaf8259366a8988c", "Url": "https://api.github.com/repos/SlimSaber/KernelAdiutor", "Date": "2015-04-07T16:35:06Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["result.getData().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((userService.searchBySchoolNum(user.getSchoolNum())) == null) { userService.addUser(user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3618/buggy-version/src.main.java.com.zzuzl.controller.UserController.java", "BodyUseAPI": ["com.zzuzl.service.UserService.addUser(com.zzuzl.model.User)"], "Fixed commit": "0960ad8e407b98a7c62fbd75cb0bc4130b21c0a0", "Url": "https://api.github.com/repos/zzuzl/FriendsServer", "Date": "2016-09-02T08:19:40Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLoadDialog) == null) { mLoadDialog = new br.com.jardim.openweathermaps.util.DialogBuilder(this).loadDialog().show(); }else { if (checkLoadDialog()) { mLoadDialog.dismiss(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1325/buggy-version/OpenWeatherMaps.app.src.main.java.br.com.jardim.openweathermaps.view.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "bc26449a1cff2da7a1e3049044d7e3b8e3b0455b", "Url": "https://api.github.com/repos/rodrigofj/open-weather-maps", "Date": "2016-07-23T07:13:54Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(br.com.jardim.openweathermaps.util.NetworkUtil.isConnected(this))) { br.com.jardim.openweathermaps.util.LogUtil.e(br.com.jardim.openweathermaps.view.MapActivity.TAG, \" -> onClick() -> the network is not connected\"); new br.com.jardim.openweathermaps.util.DialogBuilder(this).simpleDialog(this.getString(R.string.network_error)).show(); if (checkLoadDialog()) { mLoadDialog.dismiss(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1325/buggy-version/OpenWeatherMaps.app.src.main.java.br.com.jardim.openweathermaps.view.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "bc26449a1cff2da7a1e3049044d7e3b8e3b0455b", "Url": "https://api.github.com/repos/rodrigofj/open-weather-maps", "Date": "2016-07-23T07:13:54Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["firm.nodes.Load.getPred(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (referenceNode instanceof firm.nodes.Proj) { getProjValue(((firm.nodes.Proj) (referenceNode)), Register.EAX); }else { getValue(referenceNode, Register.EAX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6317/buggy-version/Compiler.src.compiler.firm.backend.X8664AssemblerGenerationVisitor.java", "BodyUseAPI": ["compiler.firm.backend.X8664AssemblerGenerationVisitor.getValue(firm.nodes.Node,Register.EAX)"], "Fixed commit": "0e2d59023aadfb7ec1e721c912604f06b79447fb", "Url": "https://api.github.com/repos/replimoc/compiler", "Date": "2014-12-18T17:56:33Z"},
{"Line": "=>580", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["firm.nodes.Store.getPred(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (source instanceof firm.nodes.Proj) { getProjValue(((firm.nodes.Proj) (source)), Register.EAX); }else { getValue(source, Register.EAX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6317/buggy-version/Compiler.src.compiler.firm.backend.X8664AssemblerGenerationVisitor.java", "BodyUseAPI": ["compiler.firm.backend.X8664AssemblerGenerationVisitor.getValue(firm.nodes.Node,Register.EAX)"], "Fixed commit": "0e2d59023aadfb7ec1e721c912604f06b79447fb", "Url": "https://api.github.com/repos/replimoc/compiler", "Date": "2014-12-18T17:56:33Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.items) == null) { this.items = new java.util.LinkedList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6397/buggy-version/databinding-helpers.src.main.java.com.viel.databindinghelpers.recyclerview.BindingRecyclerViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "ef47e10476e8bac2b9e38cde3be819579e677d86", "Url": "https://api.github.com/repos/vielasis/databinding-helpers", "Date": "2017-03-27T05:30:52Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.edit()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(edit.commit())) { android.util.Log.d(\"Settings\", \"Could not commit default settings!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/3287/buggy-version/app.src.main.java.com.smilemeback.activities.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "04a86ac076a6e817c16ba5a8ba07ec33db680482", "Url": "https://api.github.com/repos/SmileMeBack/smilemeback", "Date": "2015-08-11T19:58:43Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Config.isLoaded)) { throw new java.lang.IllegalStateException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/9000/buggy-version/BlockGame.Config.java", "BodyUseAPI": [], "Fixed commit": "043d534954f97b4c33539823afde1febe6f5743e", "Url": "https://api.github.com/repos/projectormato/Block", "Date": "2016-07-09T16:45:14Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (key2.equals(key)) { return Config.prop.getProperty(key, defaultValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/9000/buggy-version/BlockGame.Config.java", "BodyUseAPI": ["java.util.Properties.getProperty(java.lang.String,java.lang.String)"], "Fixed commit": "043d534954f97b4c33539823afde1febe6f5743e", "Url": "https://api.github.com/repos/projectormato/Block", "Date": "2016-07-09T16:45:14Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.wsfmn.habitcontroller.HabitHistoryController.INSTANCE) == null) { com.wsfmn.habitcontroller.HabitHistoryController.INSTANCE = new com.wsfmn.habitcontroller.HabitHistoryController(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/949/buggy-version/app.src.main.java.com.wsfmn.habitcontroller.HabitHistoryController.java", "BodyUseAPI": [], "Fixed commit": "40871e2c1db07870adc1879eee8986f418809986", "Url": "https://api.github.com/repos/CMPUT301F17T18/WSFMN", "Date": "2017-11-12T21:38:25Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) < 2) { sender.sendMessage(usageString); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/2840/buggy-version/src.main.java.com.elmakers.mine.bukkit.plugins.magic.MagicPlugin.java", "BodyUseAPI": [], "Fixed commit": "fb48170ff7e04dc3384d753029fb3c63c9534a0b", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2014-03-27T20:20:45Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (calendarShown) { calendarView.update(); }else { dayPlanView.showAppointments(employee); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/6101/buggy-version/src.com.gruppe16.main.CalendarMain.java", "BodyUseAPI": [], "Fixed commit": "edfca713977a7a894feff733f055003c150cebf1", "Url": "https://api.github.com/repos/ragnhildneset/fellesprosjektet", "Date": "2015-03-09T11:49:20Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((clazz.getSuperClass()) != null) { builder.superclass(service.getTypeName(clazz.getSuperClass().getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/1254/buggy-version/JUmlIt.src.main.java.ua.nure.sigma.code.generation.CodeGenerator.java", "BodyUseAPI": ["com.squareup.javapoet.TypeSpec.Builder.superclass(service.getTypeName(clazz.getSuperClass().getName()))", "ua.nure.sigma.code.model.Clazz.getSuperClass()", "clazz.getSuperClass().getName()", "ua.nure.sigma.code.generation.GeneratorService.getTypeName(clazz.getSuperClass().getName())"], "Fixed commit": "03e3aa8b1ea4f6036f17fd8c49d8451d691c3cb1", "Url": "https://api.github.com/repos/didevgen/UML-editor", "Date": "2015-12-14T19:38:04Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (savedInstanceState.containsKey(\"degreeVal\")) { degree = savedInstanceState.getInt(\"degreeVal\"); sbar.setProgress(((degree) + (com.example.weatherforecast.MainActivity.DEFAULT_DEGREE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V70/7871/buggy-version/src.com.example.weatherforecast.MainActivity.java", "BodyUseAPI": ["android.os.Bundle.getInt(java.lang.String)"], "Fixed commit": "123db510c3c25632f7de306a30cf1c5941913655", "Url": "https://api.github.com/repos/Priorko/WeatherForecast", "Date": "2013-11-14T10:04:32Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isShapeMode) == (ShapeMode.Circle)) { if (width < height) { float currentHalfWidth = (width / 2) - marginWidth; marginHeight = (height / 2) - currentHalfWidth; }else if (width > height) { float currentHalfHeight = (height / 2) - marginHeight; marginWidth = (width / 2) - currentHalfHeight; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3261/buggy-version/src.main.java.com.danielpark.imagecropper.CropperImageView.java", "BodyUseAPI": [], "Fixed commit": "008d842cfea9ea863a28f34718dd403e3e8f037b", "Url": "https://api.github.com/repos/DanielWorld/ImageCropperLibrary", "Date": "2016-12-22T03:02:10Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (place.getParent().equals(place.getId())) { org.dainst.gazetteer.helpers.AncestorsHelper.logger.warn(((\"Place \" + (place.getId())) + \" is its own parent place!\")); return ancestorIds; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1304/buggy-version/src.main.java.org.dainst.gazetteer.helpers.AncestorsHelper.java", "BodyUseAPI": ["org.dainst.gazetteer.domain.Place.getId()", "org.slf4j.Logger.warn(((\"Place \" + (place.getId())) + \" is its own parent place!\"))"], "Fixed commit": "72a3249c99cc027755d858d598abdf8557c3e03f", "Url": "https://api.github.com/repos/dainst/gazetteer", "Date": "2016-10-11T15:45:16Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((uploadPhotos) != null) && ((uploadPhotos.size()) > 0)) { intent.putExtra(PhotoPickerActivity.EXTRA_MAX_MUN, (9 - (uploadPhotos.size()))); }else { intent.putExtra(PhotoPickerActivity.EXTRA_MAX_MUN, 9); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5424/buggy-version/app.src.main.java.com.youxing.duola.mine.AddReviewActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(PhotoPickerActivity.EXTRA_MAX_MUN,int)", "java.util.List<com.youxing.duola.mine.AddReviewActivity.UploadImage>.size()"], "Fixed commit": "af70f5457fd1a220f7c2e9c2dd73777249e37976", "Url": "https://api.github.com/repos/lovemomia/MomiaAndroid", "Date": "2016-03-17T07:17:46Z"},
{"Line": "=>676", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.findPreference(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (preference != null) preference.setEnabled(enabled);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6969/buggy-version/phoneProfilesPlus.src.main.java.sk.henrichg.phoneprofilesplus.PhoneProfilesPreferencesNestedFragment.java", "BodyUseAPI": ["android.preference.Preference.setEnabled(boolean)"], "Fixed commit": "4d90aa24f7f4fa3b1c8c3f173d19032c11d94668", "Url": "https://api.github.com/repos/henrichg/PhoneProfilesPlus", "Date": "2017-08-21T06:54:06Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getCookies()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cookies == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7138/buggy-version/src.edu.neu.ccs.community.CookieAccessObject.java", "BodyUseAPI": [], "Fixed commit": "551bf61e27977e854ca137ea9bda7f080a3b36d0", "Url": "https://api.github.com/repos/wuzhenh/Community", "Date": "2016-04-09T05:10:11Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_Mode) != (Mode.COMMAND)) { java.io.File session = new java.io.File(((((org.osgi.framework.Constants.AUTOSAVE_DIR) + (java.io.File.separator)) + \"session.\") + (org.osgi.framework.Constants.WORKSPACE_FILE_EXTENSION))); this.save(session); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2467/buggy-version/src.jprobe.JProbe.java", "BodyUseAPI": [], "Fixed commit": "bd32dc872a98d0c3226a4afa201bf962220233b8", "Url": "https://api.github.com/repos/tbepler/JProbe", "Date": "2014-06-03T18:53:04Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.util.VPlexUtil.getVPLEXBackendVolume(com.emc.storageos.db.client.model.Volume,boolean,com.emc.storageos.db.client.DbClient)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (sourceSideBackingVolume != null) { to.setReplicationGroupInstance(sourceSideBackingVolume.getReplicationGroupInstance()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5157/buggy-version/apisvc.src.main.java.com.emc.storageos.api.mapper.BlockMapper.java", "BodyUseAPI": ["com.emc.storageos.db.client.model.Volume.getReplicationGroupInstance()", "com.emc.storageos.model.block.VolumeRestRep.setReplicationGroupInstance(sourceSideBackingVolume.getReplicationGroupInstance())"], "Fixed commit": "748b9b7073e307b8776df4c94ec78290473106da", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-03-08T22:09:20Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.keycloak.models.RealmModel.getFlowByAlias(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parentFlow.getProviderId().equals(AuthenticationFlow.CLIENT_FLOW)) { f = session.getKeycloakSessionFactory().getProviderFactory(org.keycloak.authentication.ClientAuthenticator.class, provider); }else { f = session.getKeycloakSessionFactory().getProviderFactory(org.keycloak.authentication.Authenticator.class, provider); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3985/buggy-version/services.src.main.java.org.keycloak.services.resources.admin.AuthenticationManagementResource.java", "BodyUseAPI": [], "Fixed commit": "350a9cd997e5289be58a7ddc77d7f4a7478f8d26", "Url": "https://api.github.com/repos/velias/keycloak", "Date": "2016-04-12T06:04:06Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (play.modules.morphia.MorphiaPlugin.idType_)) { play.modules.morphia.MorphiaPlugin.initIdType_(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2364/buggy-version/src.play.modules.morphia.MorphiaPlugin.java", "BodyUseAPI": [], "Fixed commit": "a3c1c1c51ff84278349d2360cc5a66ba5396afc4", "Url": "https://api.github.com/repos/valeriy-nosto/play-morphia", "Date": "2011-11-16T21:54:06Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(result instanceof com.carrotsearch.ant.tasks.junit4.listeners.AggregatedSuiteResultEvent)) { java.lang.CharSequence out = decodeStreamEvents(slave, result.getEventStream()); if ((out.length()) > 0) { line.append(out); line.append(\"\\n\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5001/buggy-version/junit4-ant.src.main.java.com.carrotsearch.ant.tasks.junit4.listeners.TextReport.java", "BodyUseAPI": ["com.carrotsearch.ant.tasks.junit4.listeners.AggregatedResultEvent.getEventStream()", "com.carrotsearch.ant.tasks.junit4.listeners.TextReport.decodeStreamEvents(com.carrotsearch.ant.tasks.junit4.listeners.SlaveInfo,result.getEventStream())"], "Fixed commit": "e0740851924aeadaeabe43badae7d50cdb1234e4", "Url": "https://api.github.com/repos/carrotsearch/randomizedtesting", "Date": "2012-04-15T20:13:40Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eventId.equals(\"NULL\")) { eventId = \"1\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5646/buggy-version/meetupServer.boilerServer.java", "BodyUseAPI": [], "Fixed commit": "150ccad0b5ade896928ac5f90aa1ce03cd121d9a", "Url": "https://api.github.com/repos/bremy11/boilerMeetup", "Date": "2014-12-11T18:52:43Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openqa.selenium.WebDriver.getWindowHandle()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(handle)) throw new org.openqa.selenium.NotFoundException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7496/buggy-version/src.main.java.jp.vmi.selenium.selenese.inject.CommandLogInterceptor.java", "BodyUseAPI": [], "Fixed commit": "0f47e49ada6264e14f757a779fc3883b5a28e94a", "Url": "https://api.github.com/repos/vmi/selenese-runner-java", "Date": "2014-01-16T22:46:38Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (words) line = line.concat(((printWordCountInStdin(contents)) + \" \"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/689/buggy-version/CS4218-Shell.src.sg.edu.nus.comp.cs4218.impl.app.WcApplication.java", "BodyUseAPI": [], "Fixed commit": "6f54f1238e9b185f928bbd1cfbf1499073798239", "Url": "https://api.github.com/repos/cszqwe/CS4218_team15_2017", "Date": "2017-03-16T13:11:54Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chars) line = line.concat(((printCharacterCountInStdin(contents)) + \" \"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/689/buggy-version/CS4218-Shell.src.sg.edu.nus.comp.cs4218.impl.app.WcApplication.java", "BodyUseAPI": [], "Fixed commit": "6f54f1238e9b185f928bbd1cfbf1499073798239", "Url": "https://api.github.com/repos/cszqwe/CS4218_team15_2017", "Date": "2017-03-16T13:11:54Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lines) line = line.concat(((printNewlineCountInStdin(contents)) + \" \"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/689/buggy-version/CS4218-Shell.src.sg.edu.nus.comp.cs4218.impl.app.WcApplication.java", "BodyUseAPI": [], "Fixed commit": "6f54f1238e9b185f928bbd1cfbf1499073798239", "Url": "https://api.github.com/repos/cszqwe/CS4218_team15_2017", "Date": "2017-03-16T13:11:54Z"},
{"Line": "=>1053", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trace instanceof org.dawnsci.plotting.draw2d.swtxy.ImageTrace) { ((org.dawnsci.plotting.draw2d.swtxy.ImageTrace) (trace)).removePaletteListener(paletteListener); xyGraph.removeImageTrace(((org.dawnsci.plotting.draw2d.swtxy.ImageTrace) (trace))); }else if (trace instanceof org.dawnsci.plotting.draw2d.swtxy.VectorTrace) { xyGraph.removeVectorTrace(((org.dawnsci.plotting.draw2d.swtxy.VectorTrace) (trace))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8906/buggy-version/org.dawnsci.plotting.system.src.org.dawnsci.plotting.system.LightWeightPlotViewer.java", "BodyUseAPI": [], "Fixed commit": "3cf228cb3735bb42d5c977b792d96f20603e4e93", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2017-01-12T16:43:52Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.sun.jdi.connect.Connector.Argument>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (hostArgument != null) { hostArgument.setValue(myConnectionSettings.getHostName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8963/buggy-version/plugins.debugger-java.runtime.source_gen.jetbrains.mps.debugger.java.runtime.VmCreator.java", "BodyUseAPI": ["com.sun.jdi.connect.Connector.Argument.setValue(myConnectionSettings.getHostName())"], "Fixed commit": "917ed40753b1a0a80e60ace994e382d2195ede86", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2012-05-25T14:17:54Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mTabTextColor) == null) { mTabTextColor = res.getColorStateList(R.color.default_strip_indicator_text_color); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1989/buggy-version/library.src.main.java.com.viewpagerindicator.StripPageIndicator.java", "BodyUseAPI": [], "Fixed commit": "578f2b6ed30b7ce3ed33da7f1d61684e61612fbf", "Url": "https://api.github.com/repos/msdx/ViewPagerIndicator", "Date": "2015-08-13T06:27:52Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { android.widget.Toast.makeText(getActivity(), getText(R.string.shift_details_not_available), Toast.LENGTH_LONG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3400/buggy-version/app.src.main.java.deputy.ttb.com.deputy.ShiftDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "f9e731c9c0144fbb61beddd2156660415b7cf6d2", "Url": "https://api.github.com/repos/naveenuvp/ManageTrip", "Date": "2017-03-19T06:45:01Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (minute < 10) { android.widget.Toast.makeText(getActivity(), (((\"Alarm set for \" + hourOfDay) + \":0\") + minute), Toast.LENGTH_LONG).show(); }else { android.widget.Toast.makeText(getActivity(), (((\"Alarm set for \" + hourOfDay) + \":\") + minute), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6063/buggy-version/app.src.main.java.com.clv69.alarmnfc.TimePickerDialogFragment.java", "BodyUseAPI": ["android.widget.Toast.makeText(getActivity(), (((\"Alarm set for \" + hourOfDay) + \":\") + minute), Toast.LENGTH_LONG).show()", "android.widget.Toast.makeText(getActivity(), (((\"Alarm set for \" + hourOfDay) + \":0\") + minute), Toast.LENGTH_LONG).show()", "android.widget.Toast.makeText(getActivity(),java.lang.String,Toast.LENGTH_LONG)", "android.widget.Toast.makeText(getActivity(),java.lang.String,Toast.LENGTH_LONG)"], "Fixed commit": "81eb3c2fc2661980c9c80c7049a6ff84f0ab2327", "Url": "https://api.github.com/repos/yifanfwu/NFC-Alarm", "Date": "2015-02-01T00:47:37Z"},
{"Line": "=>1136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jWithIndex.length()) <= 5) { log.info(\"Is root.!! Can't be a list\"); return 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1654/buggy-version/model-based-configurable-nat.src.main.java.org.onosproject.model.based.configurable.nat.StateListenerNew.java", "BodyUseAPI": [], "Fixed commit": "cb855d0869f732a178bc7c848d085cf2101a6c65", "Url": "https://api.github.com/repos/netgroup-polito/onos-applications", "Date": "2017-05-18T10:15:12Z"},
{"Line": "=>798", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tiles.size()) < 1) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5822/buggy-version/src.haven.Resource.java", "BodyUseAPI": [], "Fixed commit": "4f43f1f284045217f3f67c7991f1dbdd31aeefc1", "Url": "https://api.github.com/repos/dolda2000/salem-client", "Date": "2013-09-16T22:48:39Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getInput(transform).getAll()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (allInputs.isEmpty()) { org.apache.flink.api.java.operators.DataSource<java.lang.String> dummySource = context.getExecutionEnvironment().fromElements(\"dummy\"); result = dummySource.flatMap(new org.apache.flink.api.common.functions.FlatMapFunction<java.lang.String, T>() { @java.lang.Override public void flatMap(java.lang.String s, org.apache.flink.util.Collector<T> collector) throws java.lang.Exception { } }).returns(new org.apache.beam.runners.flink.translation.types.CoderTypeInformation(((org.apache.beam.sdk.coders.Coder<T>) (org.apache.beam.sdk.coders.VoidCoder.of())))); }else { for (org.apache.beam.sdk.values.PCollection<T> collection : allInputs) { org.apache.flink.api.java.DataSet<T> current = context.getInputDataSet(collection); if (result == null) { result = current; }else { result = result.union(current); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7577/buggy-version/runners.flink.runner.src.main.java.org.apache.beam.runners.flink.translation.FlinkBatchTransformTranslators.java", "BodyUseAPI": [], "Fixed commit": "0a05cb35ce62cabdb6686becdd72b07fac88ed4f", "Url": "https://api.github.com/repos/aljoscha/beam", "Date": "2016-05-13T12:17:50Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["squidpony.squidmath.CoordPacker.pack(char[][],char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((placement.length) < 30) { create(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6210/buggy-version/core.src.io.zipcoder.OriginWarAlpha.java", "BodyUseAPI": [], "Fixed commit": "b94d55ef161fd77352dc4fb25ceafdae4d76451a", "Url": "https://api.github.com/repos/KenRagonese/OriginWarAlpha", "Date": "2016-11-16T17:37:26Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.System.getProperty(\"os.name\", \"generic\").toLowerCase().contains(\"win\")) { java.lang.System.out.println(\"Running on Windows\"); setResizable(false); }else if (java.lang.System.getProperty(\"os.name\", \"generic\").toLowerCase().contains(\"nux\")) { java.lang.System.out.println(\"Running on Linux\"); setResizable(true); chkFullscreen.setEnabled(false); }else if (java.lang.System.getProperty(\"os.name\", \"generic\").toLowerCase().contains(\"mac\")) { java.lang.System.out.println(\"Running on OS X\"); setResizable(true); chkFullscreen.setEnabled(false); }else { java.lang.System.out.println(\"Running on unknown/unsupported OS, using compability mode (everything enabled)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7069/buggy-version/space-jazz.src.LoginWindow.java", "BodyUseAPI": [], "Fixed commit": "26743a0e5f3a0975469ed0c6cb389b6fc74536ca", "Url": "https://api.github.com/repos/mightynerd/space-jazz", "Date": "2014-06-07T22:34:47Z"},
{"Line": "=>573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(m.getFlags().contains(OFStatsReplyFlags.REPLY_MORE))) { response.notifyAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6836/buggy-version/Torpedo.src.etri.sdn.controller.protocol.OFProtocol.java", "BodyUseAPI": [], "Fixed commit": "42bb59a8228e0d7f983f6f71f346bcfd5dabdd2d", "Url": "https://api.github.com/repos/bjlee72/IRIS", "Date": "2014-08-21T00:36:40Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.trackem_glass.SQL.RouteDatabaseHelper.m_instance) != null) { android.database.sqlite.SQLiteDatabase db = com.example.trackem_glass.SQL.RouteDatabaseHelper.m_instance.getReadableDatabase(); android.database.Cursor cursor = db.rawQuery(countQuery, null); return cursor.getCount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2123/buggy-version/TrackEm_Glass.src.com.example.trackem_glass.SQL.RouteDatabaseHelper.java", "BodyUseAPI": [], "Fixed commit": "bfc0b2f8937d6f2da5681ae0b9fe052c9f01d2ef", "Url": "https://api.github.com/repos/eichelkrauta/3700-TrackEm", "Date": "2014-11-05T18:50:06Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opennms.ocs.inventory.client.response.Computer.getBios()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (biosData != null) { requisitionNode.getAssets().add(new org.opennms.netmgt.provision.persist.requisition.RequisitionAsset(\"manufacturer\", ipInterfaceHelper.assetStringCleaner(biosData.getSManufacturer(), 64))); requisitionNode.getAssets().add(new org.opennms.netmgt.provision.persist.requisition.RequisitionAsset(\"modelNumber\", ipInterfaceHelper.assetStringCleaner(biosData.getSModel(), 64))); requisitionNode.getAssets().add(new org.opennms.netmgt.provision.persist.requisition.RequisitionAsset(\"serialNumber\", ipInterfaceHelper.assetStringCleaner(biosData.getSSN(), 64))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/438/buggy-version/opennms-pris.src.main.java.org.opennms.pris.ocs.mapper.DefaultOcsComputerMapper.java", "BodyUseAPI": ["org.opennms.ocs.inventory.client.response.Bios.getSManufacturer()", "org.opennms.pris.IpInterfaceHelper.assetStringCleaner(biosData.getSModel(),int)", "org.opennms.pris.IpInterfaceHelper.assetStringCleaner(biosData.getSSN(),int)", "org.opennms.ocs.inventory.client.response.Bios.getSSN()", "requisitionNode.getAssets().add(org.opennms.netmgt.provision.persist.requisition.RequisitionAsset)", "requisitionNode.getAssets().add(org.opennms.netmgt.provision.persist.requisition.RequisitionAsset)", "org.opennms.ocs.inventory.client.response.Bios.getSModel()", "org.opennms.pris.IpInterfaceHelper.assetStringCleaner(biosData.getSManufacturer(),int)", "requisitionNode.getAssets().add(org.opennms.netmgt.provision.persist.requisition.RequisitionAsset)"], "Fixed commit": "ba8d7de64d7021eee7998f5d2f3e44568b597767", "Url": "https://api.github.com/repos/OpenNMS/opennms-provisioning-integration-server", "Date": "2014-05-21T16:08:16Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tester.robotCollision()) { robot.collided = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5106/buggy-version/World.java", "BodyUseAPI": [], "Fixed commit": "bd52fe6a21b9ef14efbcc037f64496ff09f0e8b2", "Url": "https://api.github.com/repos/tunguyen17/graphics", "Date": "2016-07-13T19:10:17Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dueDate.before(creationDate)) { throw new java.lang.IllegalArgumentException(com.example.james.todolist.model.Task.dueDateToEarlyErrorMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2850/buggy-version/app.src.main.java.com.example.james.todolist.model.Task.java", "BodyUseAPI": [], "Fixed commit": "28d3d87ec235cb8d60c03e1c1f4e0ac693f4f030", "Url": "https://api.github.com/repos/Alequin/to_do_app", "Date": "2017-07-09T08:18:30Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(groupNames.isEmpty())) && (!(groupNames.contains(selected)))) selected = groupNames.get(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5913/buggy-version/src.ftTodoList.ToDoBean.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)"], "Fixed commit": "91767939d695943c4dfc5a4fc5871e0c679e2538", "Url": "https://api.github.com/repos/FelixBer/FeToTodoList", "Date": "2015-06-22T11:02:44Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getIntent().getStringExtra(\"token\")) != null) com.quizenglishb1.MainActivity.USER_TOKEN = getIntent().getStringExtra(\"token\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8335/buggy-version/app.src.main.java.com.quizenglishb1.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c5288fda820ee07d4e3bc88f9f80bf16cc3baddc", "Url": "https://api.github.com/repos/alvarovp27/QuizEnglish", "Date": "2015-08-26T20:04:42Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (session.isClosed()) { org.eclipse.moquette.spi.impl.ProtocolProcessor.LOG.warn(\"channel was closed. client <{}>\", msg.getClientID()); session.close(false); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5056/buggy-version/broker.src.main.java.org.eclipse.moquette.spi.impl.ProtocolProcessor.java", "BodyUseAPI": ["org.eclipse.moquette.server.ServerChannel.close(boolean)"], "Fixed commit": "9ca541e84ca5fab4e169f875b6d59d9c706b5e76", "Url": "https://api.github.com/repos/runafter/moquette", "Date": "2015-09-21T12:24:34Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (delay > 0) { timer.schedule(task, delay); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6161/buggy-version/app.src.main.java.edu.rosehulman.boylecj.wmhdonlineradio.UpdateTimer.java", "BodyUseAPI": ["java.util.Timer.schedule(edu.rosehulman.boylecj.wmhdonlineradio.UpdateTimer,long)"], "Fixed commit": "8344cdf0da5b8322afa47a1fefbaf667e5219487", "Url": "https://api.github.com/repos/cjblink1/WMHDRadioAppAndroid", "Date": "2017-04-18T14:46:08Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.proceed)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4905/buggy-version/src.main.java.org.logicng.transformations.cnf.CNFFactorization.java", "BodyUseAPI": [], "Fixed commit": "3870b4fe8c7902d0a9f7daf4eb12e62a7f1bab0b", "Url": "https://api.github.com/repos/d-bischoff/LogicNG", "Date": "2016-08-12T13:30:10Z"},
{"Line": "=>671", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (edge == null) { edge = graph.getEdge(target, source); if (edge.isDirected()) { edge = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4314/buggy-version/DataLaboratoryAPI.src.org.gephi.datalab.impl.AttributeColumnsControllerImpl.java", "BodyUseAPI": [], "Fixed commit": "1c0facc9c4006c8e3a606a446af8f3a37b11e552", "Url": "https://api.github.com/repos/mbastian/gephi", "Date": "2011-12-14T23:40:08Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nextPair) == null) { nextPair = start; return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7477/buggy-version/src.main.java.org.hding.ScheEmulator.sw.BaseElementIterator.java", "BodyUseAPI": [], "Fixed commit": "8c22658c0502dcc390c45f62089a9b81b2eebec4", "Url": "https://api.github.com/repos/dhytxz/ScheEmulator", "Date": "2016-01-11T04:15:33Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.lordvader.coinAPI.MySQL.getResult(((\"SELECT * FROM coins WHERE uuid='\" + (player.getUniqueId())) + \"';\"))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (rs == null) { }else { try { while (rs.next()) { lengh++; } } catch (java.sql.SQLException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1199/buggy-version/src.de.lordvader.coinAPI.CoinAPI.java", "BodyUseAPI": ["java.sql.ResultSet.next()"], "Fixed commit": "8fce1a4e4e3a45a5abfee0c3b0d8dc24012819a4", "Url": "https://api.github.com/repos/lordvaderde/CoinAPI", "Date": "2016-01-29T17:55:42Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lastInvoke != (handler.getInstance().hashCode())) { lastInvoke = handler.getInstance().hashCode(); handler.invoke(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/576/buggy-version/Granite.src.main.java.org.granitemc.granite.event.GraniteEventQueue.java", "BodyUseAPI": ["handler.getInstance().hashCode()", "org.granitemc.granite.api.event.EventHandlerContainer.getInstance()", "org.granitemc.granite.api.event.EventHandlerContainer.invoke(org.granitemc.granite.api.event.Event)"], "Fixed commit": "a4884c3ca93f8d2af4bfb8fad44ca3e9e2262769", "Url": "https://api.github.com/repos/GraniteTeam/Granite", "Date": "2014-11-22T09:56:40Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((world.provider.getDimensionType()) != (net.minecraft.world.DimensionType.OVERWORLD)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1042/buggy-version/src.main.java.zairus.iskalliumreactors.world.gen.feature.WorldGenIskalliumOre.java", "BodyUseAPI": [], "Fixed commit": "912639c1edcea0c4b438cc055e26f815e3e044d0", "Url": "https://api.github.com/repos/wleroux/IskalliumReactors", "Date": "2017-04-16T21:28:21Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Random.nextInt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (check == 0) { int x = (chunkX * 16) + (rand.nextInt(16)); int y = 2 + (rand.nextInt(15)); int z = (chunkZ * 16) + (rand.nextInt(16)); int size = 1 + (rand.nextInt(IRConfig.iskalliumGenerationPatchSize)); if (size < 1) size = 1; for (int i = 0; i < size; i++) { worldGenIRMineable.generate(world, rand, new net.minecraft.util.math.BlockPos(x, y, z)); switch (rand.nextInt(3)) { case 0 : x += (rand.nextInt(2)) - 1; break; case 1 : y += (rand.nextInt(2)) - 1; break; case 2 : z += (rand.nextInt(2)) - 1; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1042/buggy-version/src.main.java.zairus.iskalliumreactors.world.gen.feature.WorldGenIskalliumOre.java", "BodyUseAPI": [], "Fixed commit": "912639c1edcea0c4b438cc055e26f815e3e044d0", "Url": "https://api.github.com/repos/wleroux/IskalliumReactors", "Date": "2017-04-16T21:28:21Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.vaadin.client.ResourceLoader.supportsInOrderScriptExecution()) { for (int i = 0; i < (dependencies.length()); i++) { java.lang.String preloadUrl = dependencies.get(i); loader.loadScript(preloadUrl, null); } }else { for (int i = 0; i < (dependencies.length()); i++) { java.lang.String preloadUrl = dependencies.get(i); loader.preloadResource(preloadUrl, null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6764/buggy-version/src-gwt.org.opencms.ui.client.CmsWidgetSetEntryPoint.java", "BodyUseAPI": [], "Fixed commit": "bdc637a9bbafeda5ac107fda1bd76eb05a9b3a25", "Url": "https://api.github.com/repos/gallardo/opencms-core", "Date": "2017-03-27T13:38:48Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!newGraphNeeded) { java.lang.System.out.println(((((\"Thread [\" + (java.lang.Thread.currentThread().getId())) + \"] Returning same graph because graph [\") + (graph.hashCode())) + \"] is open\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2750/buggy-version/grakn-graph.src.main.java.ai.grakn.factory.AbstractInternalFactory.java", "BodyUseAPI": [], "Fixed commit": "b5215a7a9b343fca285bc41f1be8a22869175293", "Url": "https://api.github.com/repos/fppt/grakn", "Date": "2016-11-23T17:42:14Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newGraphNeeded) { graph = buildTinkerPopGraph(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2750/buggy-version/grakn-graph.src.main.java.ai.grakn.factory.AbstractInternalFactory.java", "BodyUseAPI": [], "Fixed commit": "b5215a7a9b343fca285bc41f1be8a22869175293", "Url": "https://api.github.com/repos/fppt/grakn", "Date": "2016-11-23T17:42:14Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sharedVisibility) { for (final byte[] bitmask : bitmasks) { final java.nio.ByteBuffer input = java.nio.ByteBuffer.wrap(flattenedValue); final int fieldLength = input.getInt(); final byte[] fieldValueBytes = new byte[fieldLength]; input.get(fieldValueBytes); final mil.nga.giat.geowave.core.store.data.PersistentValue<java.lang.Object> persistentValue = new mil.nga.giat.geowave.core.store.data.PersistentValue<java.lang.Object>(new mil.nga.giat.geowave.core.index.ByteArrayId(bitmask), null); final mil.nga.giat.geowave.core.store.DataStoreEntryInfo.FieldInfo<java.lang.Object> fieldInfo = mil.nga.giat.geowave.core.store.memory.DataStoreUtils.getFieldInfo(persistentValue, fieldValueBytes, commonVisibility); fieldInfoList.add(fieldInfo); } }else { final mil.nga.giat.geowave.core.store.data.PersistentValue<java.lang.Object> persistentValue = new mil.nga.giat.geowave.core.store.data.PersistentValue<java.lang.Object>(new mil.nga.giat.geowave.core.index.ByteArrayId(bitmasks.get(0)), null); final mil.nga.giat.geowave.core.store.DataStoreEntryInfo.FieldInfo<java.lang.Object> fieldInfo = mil.nga.giat.geowave.core.store.memory.DataStoreUtils.getFieldInfo(persistentValue, flattenedValue, commonVisibility); fieldInfoList.add(fieldInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8983/buggy-version/extensions.datastores.accumulo.src.main.java.mil.nga.giat.geowave.datastore.accumulo.util.AccumuloUtils.java", "BodyUseAPI": [], "Fixed commit": "d4a1a9e41027655be6107aae98698176dcb5c365", "Url": "https://api.github.com/repos/locationtech/geowave", "Date": "2016-04-27T14:15:51Z"},
{"Line": "=>2464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (mapping.startsWith(org.opencms.xml.content.MAPTO_PROPERTY_LIST_INDIVIDUAL)) { property = mapping.substring(org.opencms.xml.content.MAPTO_PROPERTY_LIST_INDIVIDUAL.length()); }else if (mapping.startsWith(org.opencms.xml.content.MAPTO_PROPERTY_LIST_SHARED)) { property = mapping.substring(org.opencms.xml.content.MAPTO_PROPERTY_LIST_SHARED.length()); shared = true; }else if (mapping.startsWith(org.opencms.xml.content.MAPTO_PROPERTY_LIST)) { property = mapping.substring(org.opencms.xml.content.MAPTO_PROPERTY_LIST.length()); }else if (mapping.startsWith(org.opencms.xml.content.MAPTO_PROPERTY_SHARED)) { property = mapping.substring(org.opencms.xml.content.MAPTO_PROPERTY_SHARED.length()); shared = true; }else if (mapping.startsWith(org.opencms.xml.content.MAPTO_PROPERTY_INDIVIDUAL)) { property = mapping.substring(org.opencms.xml.content.MAPTO_PROPERTY_INDIVIDUAL.length()); }else { property = mapping.substring(org.opencms.xml.content.MAPTO_PROPERTY.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3916/buggy-version/src.org.opencms.xml.content.CmsDefaultXmlContentHandler.java", "BodyUseAPI": ["java.lang.String.substring(org.opencms.xml.content.MAPTO_PROPERTY_LIST_INDIVIDUAL.length())", "java.lang.String.substring(org.opencms.xml.content.MAPTO_PROPERTY_LIST_SHARED.length())", "java.lang.String.substring(org.opencms.xml.content.MAPTO_PROPERTY_SHARED.length())", "java.lang.String.substring(org.opencms.xml.content.MAPTO_PROPERTY.length())", "java.lang.String.startsWith(org.opencms.xml.content.MAPTO_PROPERTY_LIST_SHARED)", "java.lang.String.startsWith(org.opencms.xml.content.MAPTO_PROPERTY_SHARED)", "java.lang.String.startsWith(org.opencms.xml.content.MAPTO_PROPERTY_LIST)", "java.lang.String.substring(org.opencms.xml.content.MAPTO_PROPERTY_INDIVIDUAL.length())", "java.lang.String.startsWith(org.opencms.xml.content.MAPTO_PROPERTY_INDIVIDUAL)", "java.lang.String.substring(org.opencms.xml.content.MAPTO_PROPERTY_LIST.length())"], "Fixed commit": "7ad790b1b2bbdb41e25f180e1242873c21298b10", "Url": "https://api.github.com/repos/alkacon/opencms-core", "Date": "2013-06-24T10:05:16Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bigbluebutton.deskshare.client.MouseLocationTaker.getMouseLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(mouseLocation.equals(oldMouseLocation))) { notifyListeners(getMouseLocation()); oldMouseLocation = mouseLocation; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4982/buggy-version/deskshare.applet.src.main.java.org.bigbluebutton.deskshare.client.MouseLocationTaker.java", "BodyUseAPI": [], "Fixed commit": "0eb2cff138982b9067bfd3e6322fd4fd4975ac2a", "Url": "https://api.github.com/repos/bigbluebutton/bigbluebutton", "Date": "2012-12-16T11:43:14Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()", "java.util.Scanner.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((k == ((songs.length) - 1)) && (i == ((sequence.length()) - 1))) { }else { bw.newLine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/446/buggy-version/MusicNeuralNet.src.SongParser.java", "BodyUseAPI": [], "Fixed commit": "75534a114ef034e7a1c8bcb8280b78488351f9c4", "Url": "https://api.github.com/repos/chadwickcarter/MusicNeuralNet", "Date": "2016-12-04T03:50:52Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s.contains(\"BinarySearch\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7416/buggy-version/app.org.psjava.site.PsjavaSiteController.java", "BodyUseAPI": [], "Fixed commit": "4699fb9decaf21f47a90b53d6e8d564dc0c924df", "Url": "https://api.github.com/repos/psjava/psjava-site", "Date": "2014-12-06T13:38:27Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((players.size()) == 1) { arena.getSignManager().updateJoinSigns(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6725/buggy-version/src.com.AustinPilz.FridayThe13th.Manager.Arena.PlayerManager.java", "BodyUseAPI": [], "Fixed commit": "686d6e5295415237583630a6961097c4f12b977b", "Url": "https://api.github.com/repos/austinpilz/FridayThe13th", "Date": "2017-07-16T22:49:08Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.isOnline()) { for (org.bukkit.entity.Player player : org.bukkit.Bukkit.getOnlinePlayers()) { player.showPlayer(getPlayer()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6725/buggy-version/src.com.AustinPilz.FridayThe13th.Components.Counselor.java", "BodyUseAPI": ["org.bukkit.entity.Player.showPlayer(org.bukkit.entity.Player)"], "Fixed commit": "686d6e5295415237583630a6961097c4f12b977b", "Url": "https://api.github.com/repos/austinpilz/FridayThe13th", "Date": "2017-07-16T22:49:08Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index >= 0) elements.add(index, node);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3546/buggy-version/cogroo-ann.src.main.java.br.ccsl.cogroo.text.tree.TreeUtil.java", "BodyUseAPI": ["java.util.List<br.ccsl.cogroo.text.tree.TreeElement>.add(int,br.ccsl.cogroo.text.tree.Node)"], "Fixed commit": "ebd9330b9b69b1e9f68fab74c5cc19d1f9c8f85f", "Url": "https://api.github.com/repos/cogroo/cogroo4", "Date": "2012-07-04T02:36:11Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dtforce.resman.plugin.latte.ResManLatteUtil.findProperties(com.jantvrdik.intellij.latte.psi.LatteMacroContent)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((properties.size()) == 0) { com.dtforce.resman.plugin.util.PropertyReference propertyReference = com.dtforce.resman.plugin.latte.ResManLatteUtil.extractPropertyReference(latteMacroContent); if (propertyReference != null) { com.intellij.openapi.util.TextRange range = new com.intellij.openapi.util.TextRange(element.getTextRange().getStartOffset(), element.getTextRange().getEndOffset()); holder.createWeakWarningAnnotation(range, \"Unresolved property\").registerFix(new com.dtforce.resman.plugin.annotation.QuickFixAction(propertyReference)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3294/buggy-version/src.com.dtforce.resman.plugin.annotation.ResManLatteAnnotator.java", "BodyUseAPI": [], "Fixed commit": "a96f48680efb24bd876a306156c87197c5ba16b8", "Url": "https://api.github.com/repos/DTForce/resman-translate-intellij", "Date": "2016-12-15T16:11:06Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getNicknames().length) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8942/buggy-version/src.main.java.org.black_ixx.bossshop.managers.PointsManager.java", "BodyUseAPI": [], "Fixed commit": "dd1d17e4ce06b6e89e58ddae4292d52d0e10cd06", "Url": "https://api.github.com/repos/Blackixx/BossShop", "Date": "2016-03-18T17:40:52Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.black_ixx.bossshop.managers.PointsManager.PointsPlugin.getPluginName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (plugin_name != null) { if ((org.bukkit.Bukkit.getPluginManager().getPlugin(plugin_name)) != null) { return pp; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8942/buggy-version/src.main.java.org.black_ixx.bossshop.managers.config.ConfigHandler.java", "BodyUseAPI": ["org.bukkit.Bukkit.getPluginManager().getPlugin(java.lang.String)"], "Fixed commit": "dd1d17e4ce06b6e89e58ddae4292d52d0e10cd06", "Url": "https://api.github.com/repos/Blackixx/BossShop", "Date": "2016-03-18T17:40:52Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.garkusha.jobstack_lite.controller.TextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((url.length()) == 0) || ((url.length()) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8188/buggy-version/src.main.java.cz.garkusha.jobstack_lite.controller.PositionAddDialogController.java", "BodyUseAPI": [], "Fixed commit": "593d417e08936b688d3a6e0ab0310a1be9874071", "Url": "https://api.github.com/repos/Konstantin-G/JobStack_Lite", "Date": "2015-06-30T17:39:04Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (percent >= 0.25) { tempAlternate.add(itemElement); android.util.Log.d(\"Item added in percent\", itemElement.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5547/buggy-version/app.src.main.java.com.example.nils.grocerylist.AlternateItemsHelper.java", "BodyUseAPI": [], "Fixed commit": "5870865f607204d2298c11e430d320c9549bd36d", "Url": "https://api.github.com/repos/NilsBacke/getFood-", "Date": "2017-05-05T16:59:14Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) != (com.thalmic.android.sample.helloworld.HelloWorldActivity.STATE_READY)) vibrate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5036/buggy-version/src.com.thalmic.android.sample.helloworld.HelloWorldActivity.java", "BodyUseAPI": [], "Fixed commit": "b2fc4e57d291a083851054a837541f4872d8aade", "Url": "https://api.github.com/repos/Pebbleyo/android-app", "Date": "2014-09-14T06:55:32Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.worldObj.getBlock(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (block == (net.minecraft.init.Blocks.lit_redstone_ore)) { block = net.minecraft.init.Blocks.redstone_ore; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5420/buggy-version/src.main.java.mekanism.common.item.ItemAtomicDisassembler.java", "BodyUseAPI": [], "Fixed commit": "7e378dd796306d7f0b6660d5cbae94ee4af514c7", "Url": "https://api.github.com/repos/aidancbrady/Mekanism", "Date": "2014-07-31T22:57:18Z"},
{"Line": "=>4604", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["responses.get(maskedHeader).process(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (resp != null) { com.mbientlab.metawear.impl.ResponseHeader masked = resp.header.clearRead(); if (responseProcessors.containsKey(masked)) { final com.mbientlab.metawear.RouteManager.MessageHandler handler = responseProcessors.get(masked); conn.executeTask(new java.lang.Runnable() { @java.lang.Override public void run() { handler.process(resp.body); } }); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1807/buggy-version/library.src.main.java.com.mbientlab.metawear.impl.DefaultMetaWearBoard.java", "BodyUseAPI": ["RouteManager.MessageHandler.process(resp.body)", "resp.header.clearRead()", "com.mbientlab.metawear.impl.Connection.executeTask(java.lang.Runnable)"], "Fixed commit": "29cd1631b50809999137422536c8101179d80616", "Url": "https://api.github.com/repos/mbientlab/MetaWear-SDK-Android", "Date": "2016-12-31T23:42:42Z"},
{"Line": "=>601", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (propsAreSet) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4615/buggy-version/plugins.org.teiid.designer.vdb.src.org.teiid.designer.vdb.dynamic.DynamicVdb.java", "BodyUseAPI": [], "Fixed commit": "9e79ecde29f5dfa74712404cfedfd673a8b4914f", "Url": "https://api.github.com/repos/Teiid-Designer/teiid-designer", "Date": "2017-01-13T19:32:55Z"},
{"Line": "=>3166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isUnicodeSemantics()) { newname = new com.caucho.quercus.env.UnicodeBuilderValue(name); }else { newname = new com.caucho.quercus.env.ConstStringValue(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1417/buggy-version/modules.quercus.src.com.caucho.quercus.env.Env.java", "BodyUseAPI": [], "Fixed commit": "b2763fb068e041074f6b82e782b6464e6388c360", "Url": "https://api.github.com/repos/CleverCloud/Quercus", "Date": "2010-11-22T23:37:11Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getUserId()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (t == null) { t = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4000/buggy-version/lib-core.src.main.java.com.silverpeas.form.fieldType.UserField.java", "BodyUseAPI": [], "Fixed commit": "19f9f04413c3a0fda4ffd948f68525062423a645", "Url": "https://api.github.com/repos/mmoqui/Silverpeas-Core", "Date": "2013-01-31T14:44:34Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.silverpeas.form.fieldType.UserField.getUserId()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (s == null) { s = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4000/buggy-version/lib-core.src.main.java.com.silverpeas.form.fieldType.UserField.java", "BodyUseAPI": [], "Fixed commit": "19f9f04413c3a0fda4ffd948f68525062423a645", "Url": "https://api.github.com/repos/mmoqui/Silverpeas-Core", "Date": "2013-01-31T14:44:34Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["xtc.tree.GNode.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (name == \"static\") name = (name + \" \") + (n.getString(4));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3929/buggy-version/Decl.java", "BodyUseAPI": [], "Fixed commit": "1783179ead50adedcc7d02a5711b5076ef1ef3dc", "Url": "https://api.github.com/repos/aflock/oop-project", "Date": "2011-10-22T00:45:14Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((bottles.size()) > 0) && (!(fillBottle))) { return false; }else { fillBottle = true; bottles.add(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5458/buggy-version/src.main.java.enviromine.handlers.CamelPackRefillHandler.java", "BodyUseAPI": ["java.util.ArrayList<net.minecraft.item.ItemStack>.add(net.minecraft.item.ItemStack)"], "Fixed commit": "afe7bf98216612dd14414d41cd90b0647f7df1e9", "Url": "https://api.github.com/repos/Funwayguy/EnviroMine-1.7", "Date": "2014-08-10T03:07:36Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((bottles.size()) > 0) && (fillBottle)) { return false; }else { fillBottle = false; bottles.add(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5458/buggy-version/src.main.java.enviromine.handlers.CamelPackRefillHandler.java", "BodyUseAPI": ["java.util.ArrayList<net.minecraft.item.ItemStack>.add(net.minecraft.item.ItemStack)"], "Fixed commit": "afe7bf98216612dd14414d41cd90b0647f7df1e9", "Url": "https://api.github.com/repos/Funwayguy/EnviroMine-1.7", "Date": "2014-08-10T03:07:36Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cursor) < (previous.size())) throw new java.lang.IllegalStateException(\"Cannot remove after previous\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8975/buggy-version/src.main.java.org.d2ab.collection.IterableList.java", "BodyUseAPI": [], "Fixed commit": "460fb11efa38f5a2fcbef4a1109c9facc4211c53", "Url": "https://api.github.com/repos/dsaborg/sequence", "Date": "2016-05-09T13:31:57Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(db.isOpen())) { db = dbInitializer.getWritableDatabase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3704/buggy-version/app.src.main.java.de.familiep.mobileinformationgain.persistence2.DbAccessHelper.java", "BodyUseAPI": [], "Fixed commit": "bb8a8b64dd6bb0367432d5b807aa9382e1c1eaba", "Url": "https://api.github.com/repos/C0d3GGz/MIG", "Date": "2017-05-09T08:38:48Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isScreenOn) queue.put(new de.familiep.mobileinformationgain.queue.InformationData(null, 0, java.lang.System.currentTimeMillis(), null, true));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3704/buggy-version/app.src.main.java.de.familiep.mobileinformationgain.CustomAccessibilityService.java", "BodyUseAPI": [], "Fixed commit": "bb8a8b64dd6bb0367432d5b807aa9382e1c1eaba", "Url": "https://api.github.com/repos/C0d3GGz/MIG", "Date": "2017-05-09T08:38:48Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isScreenOn) queue.put(new de.familiep.mobileinformationgain.queue.InformationData(null, 0, java.lang.System.currentTimeMillis(), null, true));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3704/buggy-version/app.src.main.java.de.familiep.mobileinformationgain.CustomAccessibilityService.java", "BodyUseAPI": [], "Fixed commit": "bb8a8b64dd6bb0367432d5b807aa9382e1c1eaba", "Url": "https://api.github.com/repos/C0d3GGz/MIG", "Date": "2017-05-09T08:38:48Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((eventId) != (-1)) new com.example.vipul.mytodolist.CalendarTask(getApplicationContext()).UpdateEvent(eventId, taskName, (((endDate + \" \") + finishTime) + \":00\"), description);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5690/buggy-version/app.src.main.java.com.example.vipul.mytodolist.TaskEditActivity.java", "BodyUseAPI": [], "Fixed commit": "0c1c8b3be368ce4779d106119a77bafa74110b89", "Url": "https://api.github.com/repos/vgoyal1996/MyTODOList", "Date": "2016-07-15T18:21:28Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (delayTime <= 0) { delayTime = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5158/buggy-version/Ausloeser.src.com.ausloeser.logic.SingletonCameraController.java", "BodyUseAPI": [], "Fixed commit": "4fe472927bd3a1d1f1c16c20438bcdfc0af7d1a1", "Url": "https://api.github.com/repos/lutzer/mobile_computing", "Date": "2012-12-18T19:57:24Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (forwardButton.isPressed()) transportationHandler.postDelayed(forwardRunnable, net.alliknow.podcatcher.view.fragments.PlayerFragment.TRANSPORT_DELAY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2751/buggy-version/src.net.alliknow.podcatcher.view.fragments.PlayerFragment.java", "BodyUseAPI": [], "Fixed commit": "da475ad9613244743c06c2a5ccc0c351a322c1ac", "Url": "https://api.github.com/repos/salema/PodCatcher-Deluxe-Android", "Date": "2014-01-03T13:45:42Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rewindButton.isPressed()) transportationHandler.postDelayed(rewindRunnable, net.alliknow.podcatcher.view.fragments.PlayerFragment.TRANSPORT_DELAY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2751/buggy-version/src.net.alliknow.podcatcher.view.fragments.PlayerFragment.java", "BodyUseAPI": [], "Fixed commit": "da475ad9613244743c06c2a5ccc0c351a322c1ac", "Url": "https://api.github.com/repos/salema/PodCatcher-Deluxe-Android", "Date": "2014-01-03T13:45:42Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((world.getBlock(x, (y - 1), z)) instanceof com.bluepowermod.blocks.worldgen.BlockFarmland) && (world.getBlock(x, (y - 1), z).isFertile(world, x, (y - 1), z))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6854/buggy-version/src.main.java.com.bluepowermod.blocks.worldgen.BlockCrop.java", "BodyUseAPI": [], "Fixed commit": "6c1719d2d912924e6ce4f30691cf57a46e4a823e", "Url": "https://api.github.com/repos/Qmunity/BluePower", "Date": "2014-10-27T10:36:20Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((world.getBlock(x, (y - 1), z)) instanceof com.bluepowermod.blocks.worldgen.BlockCrop) && ((world.getBlockMetadata(x, (y - 1), z)) == 7)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6854/buggy-version/src.main.java.com.bluepowermod.blocks.worldgen.BlockCrop.java", "BodyUseAPI": [], "Fixed commit": "6c1719d2d912924e6ce4f30691cf57a46e4a823e", "Url": "https://api.github.com/repos/Qmunity/BluePower", "Date": "2014-10-27T10:36:20Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.google.common.base.Strings.isNullOrEmpty(noProxyUrl))) { java.lang.String[] noProxyUrlArray = noProxyUrl.split(\",\"); java.lang.String requestedHost = requestedUrl.getHost(); for (int i = 0; i < (noProxyUrlArray.length); i++) { if (requestedHost.endsWith(noProxyUrlArray[i])) { return java.net.Proxy.NO_PROXY; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5846/buggy-version/src.main.java.com.google.devtools.build.lib.bazel.repository.downloader.ProxyHelper.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "6ee812615c86785a82af118a6379b3d8d0de3315", "Url": "https://api.github.com/repos/zlalanne/bazel", "Date": "2017-12-15T12:19:08Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (startIp == endIp) { return org.zstack.utils.network.NetworkUtils.longToIpv4String(startIp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3957/buggy-version/utils.src.main.java.org.zstack.utils.network.NetworkUtils.java", "BodyUseAPI": ["org.zstack.utils.network.NetworkUtils.longToIpv4String(java.lang.Long)"], "Fixed commit": "ea54fc2a8f62f3f6db94da48d7dee9ce7b3ad720", "Url": "https://api.github.com/repos/camilesing/zstack", "Date": "2017-04-11T07:55:56Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startIp.equals(endIp)) && ((allocatedIps.length) == 0)) { return startIp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3957/buggy-version/utils.src.main.java.org.zstack.utils.network.NetworkUtils.java", "BodyUseAPI": [], "Fixed commit": "ea54fc2a8f62f3f6db94da48d7dee9ce7b3ad720", "Url": "https://api.github.com/repos/camilesing/zstack", "Date": "2017-04-11T07:55:56Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cause instanceof io.netty.handler.ssl.NotSslRecordException)) { cause.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8271/buggy-version/mockserver-core.src.main.java.org.mockserver.client.netty.HttpClientHandler.java", "BodyUseAPI": ["java.lang.Throwable.printStackTrace()"], "Fixed commit": "fcec0b01f1b2e88a38ee27baf029eb1bda1f0afd", "Url": "https://api.github.com/repos/jamesdbloom/mockserver", "Date": "2015-04-14T17:30:31Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["M.getRGBChannelCount(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (samples == 0) samples = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6863/buggy-version/components.scifio-devel.src.ome.scifio.AbstractWriter.java", "BodyUseAPI": [], "Fixed commit": "cfd23d722f171f894259fbbf184601aa2caa16f6", "Url": "https://api.github.com/repos/hinerm/bioformats", "Date": "2013-03-15T18:15:10Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 17) { mainMenuActivity = ((com.taPATHpp.group28.taPATHpp.MainMenuActivity) (this.getParentFragment().getActivity())); }else { mainMenuActivity = ((com.taPATHpp.group28.taPATHpp.MainMenuActivity) (this.getActivity())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4395/buggy-version/app.src.main.java.com.taPATHpp.group28.taPATHpp.ConfirmBookingFragment.java", "BodyUseAPI": [], "Fixed commit": "0df33c2a3bf334dcba4d35fce7082c6cc48a0e99", "Url": "https://api.github.com/repos/tSherwoodlboro/taxiApp", "Date": "2017-05-18T19:41:01Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((folder) != null) { path_builder.append(separator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1246/buggy-version/src.de.codemakers.io.file.AdvancedFile.java", "BodyUseAPI": [], "Fixed commit": "9d04269dcba2f0a86115cfda403fdbbab775a39e", "Url": "https://api.github.com/repos/Panzer1119/JavaPlus", "Date": "2017-12-11T21:44:36Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (values.isEmpty()) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4481/buggy-version/src.main.java.hu.david.veres.graph.generator.ResultGeneratorImpl.java", "BodyUseAPI": [], "Fixed commit": "9003a7c7ba889110359a8f5cfa0aee8806f1a01d", "Url": "https://api.github.com/repos/veresdavid/state-space-graph-visualizer", "Date": "2017-03-19T12:32:25Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!fieldCollectionType) && (!fieldMapType)) { hasAlias = false; if (j == 0) { currentAlias = (parentElement + \".\") + propertyName; }else { currentAlias = ((classBasedPropertyAliasMap.get(parentElement)) + \".\") + propertyName; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2702/buggy-version/blaze-ee-utils.src.main.java.com.blazebit.persistence.FetchUtils.java", "BodyUseAPI": [], "Fixed commit": "e22fd6d8875d558a7834e633da9fbc09c92048e8", "Url": "https://api.github.com/repos/Blazebit/blaze-utils", "Date": "2013-04-08T15:17:02Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.emc.storageos.db.client.util.NullColumnValueGetter.isNullURI(clusterURI))) { cluster = dbClient.queryObject(com.emc.storageos.db.client.model.Cluster.class, clusterURI); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3781/buggy-version/controllersvc.src.main.java.com.emc.storageos.computesystemcontroller.impl.ComputeSystemHelper.java", "BodyUseAPI": ["com.emc.storageos.db.client.DbClient.queryObject(java.lang.Class,java.net.URI)"], "Fixed commit": "07d0c5b3202d3160511a92f590165c7fd7110a67", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-12-01T03:35:33Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (possibleDuplicate.isVoided()) { errors.reject(\"Patient.duplicateName\", new java.lang.Object[]{ personName.getFullName() }, (((personName.getFullName()) + \" is a duplicate name for the same patient and it's voided. Please unvoid the existing name \") + \"instead of creating new name\")); }else { errors.reject(\"Patient.duplicateName\", new java.lang.Object[]{ personName.getFullName() }, ((personName.getFullName()) + \" is a duplicate name for the same patient\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8420/buggy-version/omod.src.main.java.org.openmrs.web.controller.patient.ShortPatientFormValidator.java", "BodyUseAPI": [], "Fixed commit": "dd4704cdb4023b46867f35cbeff03b581ade0e56", "Url": "https://api.github.com/repos/rasanjanap/openmrs-module-legacyui", "Date": "2016-01-23T19:55:10Z"},
{"Line": "=>1237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (predicate != null) { requestBody.put(\"predicate\", com.kii.thingif.internal.utils.JsonUtils.newJson(com.kii.thingif.internal.GsonRepository.gson().toJson(predicate))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3976/buggy-version/thingif.src.main.java.com.kii.thingif.ThingIFAPI.java", "BodyUseAPI": ["com.kii.thingif.internal.GsonRepository.gson().toJson(com.kii.thingif.trigger.Predicate)", "org.json.JSONObject.put(java.lang.String,com.kii.thingif.internal.utils.JsonUtils.newJson(com.kii.thingif.internal.GsonRepository.gson().toJson(predicate)))", "com.kii.thingif.internal.utils.JsonUtils.newJson(com.kii.thingif.internal.GsonRepository.gson().toJson(predicate))"], "Fixed commit": "4b789a54f7b58d520b3e926eb70a38a2bbea241c", "Url": "https://api.github.com/repos/KiiPlatform/thing-if-AndroidSDK", "Date": "2016-10-04T09:12:34Z"},
{"Line": "=>1242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (serverCode != null) { requestBody.put(\"serverCode\", com.kii.thingif.internal.utils.JsonUtils.newJson(com.kii.thingif.internal.GsonRepository.gson().toJson(serverCode))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3976/buggy-version/thingif.src.main.java.com.kii.thingif.ThingIFAPI.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,com.kii.thingif.internal.utils.JsonUtils.newJson(com.kii.thingif.internal.GsonRepository.gson().toJson(serverCode)))", "com.kii.thingif.internal.utils.JsonUtils.newJson(com.kii.thingif.internal.GsonRepository.gson().toJson(serverCode))", "com.kii.thingif.internal.GsonRepository.gson().toJson(com.kii.thingif.trigger.ServerCode)"], "Fixed commit": "4b789a54f7b58d520b3e926eb70a38a2bbea241c", "Url": "https://api.github.com/repos/KiiPlatform/thing-if-AndroidSDK", "Date": "2016-10-04T09:12:34Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((description) != null) { improvedContent = net.fred.feedex.parser.RssAtomParser.improveHtmlContent(description.toString(), fetchImages); entriesImages.add(improvedContent.second); if ((improvedContent.first) != null) { values.put(EntryColumns.ABSTRACT, improvedContent.first); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7685/buggy-version/src.net.fred.feedex.parser.RssAtomParser.java", "BodyUseAPI": [], "Fixed commit": "4fd487d4e6800832c112ca0c8e6f8db5b796bb7f", "Url": "https://api.github.com/repos/HoloAddict/FeedEx", "Date": "2013-08-05T22:20:01Z"},
{"Line": "=>716", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (content != null) { java.util.regex.Matcher m = p.matcher(content); isFiltered = m.find(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7685/buggy-version/src.net.fred.feedex.parser.RssAtomParser.java", "BodyUseAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Fixed commit": "4fd487d4e6800832c112ca0c8e6f8db5b796bb7f", "Url": "https://api.github.com/repos/HoloAddict/FeedEx", "Date": "2013-08-05T22:20:01Z"},
{"Line": "=>586", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.winjune.wifiindoor.util.Util.getWifiInfoManager().getSamples()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (samples.isEmpty()) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8364/buggy-version/GDSConHand.src.com.winjune.wifiindoor.activity.mapviewer.PlanBar.java", "BodyUseAPI": [], "Fixed commit": "fb7d28b91571ea35ebe75b60def18ec027377aae", "Url": "https://api.github.com/repos/winjunetech/GDSConHandAndroid", "Date": "2014-05-23T08:23:36Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.rwth.i9.palm.datasetcollect.service.PublicationCollectionHelper.getDocumentWithJsoup(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (document.baseUri().contains(\"scitepress.org\")) { org.jsoup.nodes.Element elementOfInterestAbstract = document.select(\"#ContentPlaceHolder1_LinkPaperPage_LinkPaperContent_LabelAbstract\").first(); if (elementOfInterestAbstract != null) { publicationDetailMaps.put(\"abstract\", elementOfInterestAbstract.text()); } org.jsoup.nodes.Element elementOfInterestKeyword = document.select(\"#ContentPlaceHolder1_LinkPaperPage_LinkPaperContent_LabelPublicationDetailKeywords\").first(); if (elementOfInterestKeyword != null) { publicationDetailMaps.put(\"keyword\", elementOfInterestKeyword.text()); } }else { org.jsoup.select.Elements elements = document.body().select(\"*\"); org.jsoup.nodes.Element elementOfInterest = null; java.lang.String elementOfInterestType = null; for (org.jsoup.nodes.Element element : elements) { java.lang.String elementText = element.text().toLowerCase(); if ((elementText.length()) < 10) { if (elementText.contains(\"keyword\")) { elementOfInterest = element; elementOfInterestType = \"keyword\"; break; } if ((elementText.contains(\"abstract\")) || (elementText.contains(\"summary\"))) { elementOfInterest = element; elementOfInterestType = \"abstract\"; break; } } } if (elementOfInterest == null) return java.util.Collections.emptyMap(); int numberOfCheckedSiblings = 8; int elementLevel = 0; boolean keywordFound = false; boolean abstractFound = false; for (int i = 0; i < numberOfCheckedSiblings; i++) { java.lang.String elementText = \"\"; if ((elementOfInterest.nextElementSibling()) != null) elementOfInterest = elementOfInterest.nextElementSibling(); else { while ((elementOfInterest.parent()) != null) { if (elementLevel > 0) { for (org.jsoup.nodes.Node child : elementOfInterest.childNodes()) if (child instanceof org.jsoup.nodes.TextNode) if ((((org.jsoup.nodes.TextNode) (child)).text().length()) > 200) { elementText = ((org.jsoup.nodes.TextNode) (child)).text(); } } if ((elementOfInterest.nextElementSibling()) == null) { elementOfInterest = elementOfInterest.parent(); elementLevel++; }else { elementOfInterest = elementOfInterest.nextElementSibling(); break; } } while (((elementOfInterest.childNodes()) != null) && (elementLevel > 0)) { try { elementOfInterest = elementOfInterest.child(0); } catch (java.lang.Exception e) { break; } elementLevel--; } } if (elementText.equals(\"\")) elementText = elementOfInterest.text(); if ((elementOfInterestType.equals(\"keyword\")) && (!keywordFound)) { if ((elementText.length()) > 8) { if ((publicationDetailMaps.get(\"keyword\")) != null) publicationDetailMaps.put(\"keyword\", (((publicationDetailMaps.get(\"keyword\")) + \", \") + elementText)); else publicationDetailMaps.put(\"keyword\", elementText); if (((elementOfInterest.nextElementSibling()) == null) || ((elementText.length()) > 40)) keywordFound = true; }else { if (elementText.toLowerCase().contains(\"abstract\")) elementOfInterestType = \"abstract\"; else if (elementText.toLowerCase().equals(\"null\")) break; } }else if ((elementOfInterestType.equals(\"abstract\")) && (!abstractFound)) { if ((elementText.length()) > 100) { publicationDetailMaps.put(\"abstract\", elementText); abstractFound = true; }else { if (elementText.toLowerCase().contains(\"keyword\")) elementOfInterestType = \"keyword\"; } }else if ((elementOfInterestType.equals(\"keyword\")) && keywordFound) { if ((elementText.length()) < 20) if (elementText.toLowerCase().contains(\"abstract\")) elementOfInterestType = \"abstract\"; }else if ((elementOfInterestType.equals(\"abstract\")) && abstractFound) { if ((elementText.length()) < 20) if ((elementText.toLowerCase().contains(\"keyword\")) || (elementText.toLowerCase().contains(\"index terms\"))) elementOfInterestType = \"keyword\"; } if (keywordFound && abstractFound) break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5012/buggy-version/src.main.java.de.rwth.i9.palm.datasetcollect.service.HtmlPublicationCollection.java", "BodyUseAPI": ["org.jsoup.nodes.Document.select(java.lang.String)", "org.jsoup.nodes.Document.select(java.lang.String)", "document.body().select(java.lang.String)", "org.jsoup.nodes.Document.body()", "document.select(\"#ContentPlaceHolder1_LinkPaperPage_LinkPaperContent_LabelAbstract\").first()", "document.select(\"#ContentPlaceHolder1_LinkPaperPage_LinkPaperContent_LabelPublicationDetailKeywords\").first()"], "Fixed commit": "9ef8f8a244adadce924dddfe61d0504670cb5938", "Url": "https://api.github.com/repos/palm-toolkit/palm-core", "Date": "2016-04-01T14:09:29Z"},
{"Line": "=>1046", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.inaturalist.android.INaturalistService.get(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (json == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1015/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.INaturalistService.java", "BodyUseAPI": [], "Fixed commit": "d6d8535b06c58af222cbcd8c2ef696d3edb5f81a", "Url": "https://api.github.com/repos/inaturalist/iNaturalistAndroid", "Date": "2015-11-01T20:48:51Z"},
{"Line": "=>1047", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.inaturalist.android.INaturalistService.get(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((json.length()) == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1015/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.INaturalistService.java", "BodyUseAPI": [], "Fixed commit": "d6d8535b06c58af222cbcd8c2ef696d3edb5f81a", "Url": "https://api.github.com/repos/inaturalist/iNaturalistAndroid", "Date": "2015-11-01T20:48:51Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e.getPlayer().isSneaking()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/660/buggy-version/src.se.jkrau.wat.Plugin.java", "BodyUseAPI": [], "Fixed commit": "7a90708146c3f8d9d80c6f1ba6c9b8e217975dd2", "Url": "https://api.github.com/repos/SuperSpyTX/Wat", "Date": "2013-07-23T04:30:31Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeToGetReadyInMinutes) > 0) { timeToGetReadyInMinutes -= 5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/334/buggy-version/app.src.main.java.com.huyphan.smartschedule.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "d2a9b20c16c266df9a3f6adf4badd89ca3881902", "Url": "https://api.github.com/repos/RUSEGroup12/SmartSchedule", "Date": "2017-04-23T10:41:21Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["popularioty.commons.services.searchengine.queries.QueryResponse.getListofMapsResult()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((l == null) || (l.isEmpty())) throw new popularioty.commons.exception.PopulariotyException(((((((\"Subreputation \" + classReputationType) + \" for entity of type\") + entityType) + \" and entity Id : \") + entityId) + \" not found\"), null, popularioty.api.services.AggregatedReputationSearchService.LOG, ((((((\"Subreputation \" + classReputationType) + \" for entity of type\") + entityType) + \" and entity Id : \") + entityId) + \" not found\"), popularioty.commons.exception.PopulariotyException.Level.DEBUG, 404);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7018/buggy-version/src.main.java.popularioty.api.services.AggregatedReputationSearchService.java", "BodyUseAPI": [], "Fixed commit": "595074873664970b40a56786452832d4bf345e82", "Url": "https://api.github.com/repos/nopbyte/popularioty-public-api", "Date": "2015-09-23T22:00:44Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((subscription.getStatus()) == (org.motechproject.nms.kilkari.domain.SubscriptionStatus.ACTIVE)) || ((subscription.getStatus()) == (org.motechproject.nms.kilkari.domain.SubscriptionStatus.PENDING_ACTIVATION))) { packs.add(subscription.getSubscriptionPack().getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3801/buggy-version/api.src.main.java.org.motechproject.nms.api.web.UserController.java", "BodyUseAPI": ["org.motechproject.nms.kilkari.domain.Subscription.getSubscriptionPack()", "subscription.getSubscriptionPack().getName()", "java.util.Set<java.lang.String>.add(subscription.getSubscriptionPack().getName())"], "Fixed commit": "efdeed85b2d55a1655676a84e9e0da1cc94c679a", "Url": "https://api.github.com/repos/motech-implementations/nms", "Date": "2015-05-18T22:19:01Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.c) == (java.lang.Integer.MAX_VALUE)) { return \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8655/buggy-version/src.Node.java", "BodyUseAPI": [], "Fixed commit": "449f105bf55432dddec00ef6ece2eb868b5b2911", "Url": "https://api.github.com/repos/Horse-G/MemoryOptimizor", "Date": "2015-04-22T08:14:49Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (client.isClosed()) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2565/buggy-version/src.main.java.org.threadly.litesockets.utils.SSLProcessor.java", "BodyUseAPI": [], "Fixed commit": "835c0f5304cfdca103518bc00607425830e848e8", "Url": "https://api.github.com/repos/jentfoo/litesockets", "Date": "2016-07-11T21:24:05Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node.astArguments().isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3897/buggy-version/timber-lint.src.main.java.timber.lint.WrongTimberUsageDetector.java", "BodyUseAPI": [], "Fixed commit": "59273a4e62f95a14c3fc2fb3214e8b42987a042c", "Url": "https://api.github.com/repos/JakeWharton/timber", "Date": "2016-12-03T04:37:32Z"},
{"Line": "=>994", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dbType.equals(\"POSTGRES\")) { if ((rs.getString(\"c_metadataxml\")) != null) { try { c_xml = rs.getString(\"c_metadataxml\"); } catch (java.sql.SQLException e) { edu.harvard.i2b2.ontology.dao.ConceptDao.log.error(e.getMessage()); child.setMetadataxml(null); } if (((c_xml != null) && ((c_xml.trim().length()) > 0)) && (!(c_xml.equals(\"(null)\")))) { org.jdom.input.SAXBuilder parser = new org.jdom.input.SAXBuilder(); java.io.StringReader xmlStringReader = new java.io.StringReader(c_xml); org.w3c.dom.Element rootElement = null; try { org.jdom.Document metadataDoc = parser.build(xmlStringReader); org.jdom.output.DOMOutputter out = new org.jdom.output.DOMOutputter(); org.w3c.dom.Document doc = out.output(metadataDoc); rootElement = doc.getDocumentElement(); } catch (org.jdom.JDOMException e) { edu.harvard.i2b2.ontology.dao.ConceptDao.log.error(e.getMessage()); child.setMetadataxml(null); } catch (java.io.IOException e1) { edu.harvard.i2b2.ontology.dao.ConceptDao.log.error(e1.getMessage()); child.setMetadataxml(null); } if (rootElement != null) { edu.harvard.i2b2.ontology.datavo.vdo.XmlValueType xml = new edu.harvard.i2b2.ontology.datavo.vdo.XmlValueType(); xml.getAny().add(rootElement); child.setMetadataxml(xml); } }else { child.setMetadataxml(null); } } }else { if ((rs.getClob(\"c_metadataxml\")) != null) { try { c_xml = edu.harvard.i2b2.common.util.db.JDBCUtil.getClobString(rs.getClob(\"c_metadataxml\")); } catch (java.io.IOException e) { edu.harvard.i2b2.ontology.dao.ConceptDao.log.error(e.getMessage()); child.setMetadataxml(null); } if (((c_xml != null) && ((c_xml.trim().length()) > 0)) && (!(c_xml.equals(\"(null)\")))) { org.jdom.input.SAXBuilder parser = new org.jdom.input.SAXBuilder(); java.io.StringReader xmlStringReader = new java.io.StringReader(c_xml); org.w3c.dom.Element rootElement = null; try { org.jdom.Document metadataDoc = parser.build(xmlStringReader); org.jdom.output.DOMOutputter out = new org.jdom.output.DOMOutputter(); org.w3c.dom.Document doc = out.output(metadataDoc); rootElement = doc.getDocumentElement(); } catch (org.jdom.JDOMException e) { edu.harvard.i2b2.ontology.dao.ConceptDao.log.error(e.getMessage()); child.setMetadataxml(null); } catch (java.io.IOException e1) { edu.harvard.i2b2.ontology.dao.ConceptDao.log.error(e1.getMessage()); child.setMetadataxml(null); } if (rootElement != null) { edu.harvard.i2b2.ontology.datavo.vdo.XmlValueType xml = new edu.harvard.i2b2.ontology.datavo.vdo.XmlValueType(); xml.getAny().add(rootElement); child.setMetadataxml(xml); } }else { child.setMetadataxml(null); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2164/buggy-version/coreserver.src.edu.harvard.i2b2.ontology.src.core.edu.harvard.i2b2.ontology.dao.ConceptDao.java", "BodyUseAPI": [], "Fixed commit": "916f684656419c7f56c0bf738e12ae46bdf1cf1e", "Url": "https://api.github.com/repos/transmart/i2b2_1.6_Postgres", "Date": "2013-01-21T14:13:45Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (resource == null) { throw new java.lang.IllegalArgumentException(((\"The resource given by \" + csvFilePath) + \" could not be found on the file system.\")); }else { this.csvFile = new java.io.File(resource.getFile()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5040/buggy-version/src.main.java.data.CsvReader.java", "BodyUseAPI": [], "Fixed commit": "107d1077f955c9b5bd097e704615de464a36b660", "Url": "https://api.github.com/repos/signaflo/java-timeseries", "Date": "2016-12-07T10:24:17Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.catrobat.catroid.sensing.CollisionInformation.simplifyPolygon(java.util.ArrayList<android.graphics.PointF>,int,((points.size()) - 1),float)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((org.catrobat.catroid.sensing.CollisionInformation.pointToPointDistance(simplified.get(0), simplified.get(((simplified.size()) - 1)))) < epsilon) { simplified.remove(((simplified.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7696/buggy-version/catroid.src.main.java.org.catrobat.catroid.sensing.CollisionInformation.java", "BodyUseAPI": ["java.util.ArrayList<android.graphics.PointF>.size()", "java.util.ArrayList<android.graphics.PointF>.remove(((simplified.size()) - 1))"], "Fixed commit": "07f3e2bd96467d56101c9e5e165b6cdc466d8497", "Url": "https://api.github.com/repos/michael-fischl/Catroid", "Date": "2016-08-19T14:19:52Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.canMove()) { all.add(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5366/buggy-version/src.PlayingField.java", "BodyUseAPI": ["java.util.ArrayList<Piece>.add(Piece)"], "Fixed commit": "aacb8907a95be2d970e1f3157bfda2d86b01d8bc", "Url": "https://api.github.com/repos/exal99/Fanorona", "Date": "2017-01-29T09:09:45Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.elasticsearch.indices.fielddata.cache.RemovalNotification<org.elasticsearch.indices.fielddata.cache.IndicesFieldDataCache.Key, org.apache.lucene.util.Accountable>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((sizeInBytes == (-1)) && (value != null)) { sizeInBytes = value.ramBytesUsed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2417/buggy-version/src.main.java.org.elasticsearch.indices.fielddata.cache.IndicesFieldDataCache.java", "BodyUseAPI": ["org.apache.lucene.util.Accountable.ramBytesUsed()"], "Fixed commit": "bd32eee727a798c9f244925d6e3d3cce9527269c", "Url": "https://api.github.com/repos/elasticsearch/elasticsearch", "Date": "2014-08-25T14:25:02Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (reply.getPlayer().has(\"timePlaying\")) descArray.add(new com.itachi1706.hypixelstatistics.util.ResultDescription(\"Time Played (From 16 May 2014) \", com.itachi1706.hypixelstatistics.util.MinecraftColorCodes.parseColors(parseTimeOnline(reply.getPlayer().get(\"timePlaying\").getAsLong()))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2371/buggy-version/app.src.main.java.com.itachi1706.hypixelstatistics.AsyncAPI.GetPlayerByNameExpanded.java", "BodyUseAPI": ["com.itachi1706.hypixelstatistics.util.MinecraftColorCodes.parseColors(java.lang.String)", "com.itachi1706.hypixelstatistics.AsyncAPI.GetPlayerByNameExpanded.parseTimeOnline(reply.getPlayer().get(\"timePlaying\").getAsLong())", "java.util.ArrayList<com.itachi1706.hypixelstatistics.util.ResultDescription>.add(com.itachi1706.hypixelstatistics.util.ResultDescription)", "reply.getPlayer().get(\"timePlaying\").getAsLong()", "reply.getPlayer().get(java.lang.String)", "net.hypixel.api.reply.PlayerReply.getPlayer()"], "Fixed commit": "f6be5bfd1d0e50c893fcb4296f362c120bf5a28c", "Url": "https://api.github.com/repos/itachi1706/HypixelStatistics", "Date": "2014-12-10T02:25:45Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (reply.getPlayer().has(\"timePlaying\")) resultArray.add(new com.itachi1706.hypixelstatistics.util.ResultDescription(\"Time Played (From 16 May 2014) \", com.itachi1706.hypixelstatistics.util.MinecraftColorCodes.parseColors(parseTimeOnline(reply.getPlayer().get(\"timePlaying\").getAsLong()))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2371/buggy-version/app.src.main.java.com.itachi1706.hypixelstatistics.AsyncAPI.GetPlayerByName.java", "BodyUseAPI": ["com.itachi1706.hypixelstatistics.AsyncAPI.GetPlayerByName.parseTimeOnline(reply.getPlayer().get(\"timePlaying\").getAsLong())", "com.itachi1706.hypixelstatistics.util.MinecraftColorCodes.parseColors(java.lang.String)", "reply.getPlayer().get(\"timePlaying\").getAsLong()", "reply.getPlayer().get(java.lang.String)", "net.hypixel.api.reply.PlayerReply.getPlayer()", "java.util.ArrayList<com.itachi1706.hypixelstatistics.util.ResultDescription>.add(com.itachi1706.hypixelstatistics.util.ResultDescription)"], "Fixed commit": "f6be5bfd1d0e50c893fcb4296f362c120bf5a28c", "Url": "https://api.github.com/repos/itachi1706/HypixelStatistics", "Date": "2014-12-10T02:25:45Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ccjmne.faomaintenance.api.rest.ResourcesEndpoint.getUpdateFor(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (update == null) { return org.ccjmne.faomaintenance.api.rest.ResourcesEndpoint.NO_UPDATE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6061/buggy-version/src.main.java.org.ccjmne.faomaintenance.api.rest.ResourcesEndpoint.java", "BodyUseAPI": [], "Fixed commit": "c7dd594c6fed4c972c58a144e2360e9df6f27785", "Url": "https://api.github.com/repos/ccjmne/orca-api", "Date": "2016-09-22T17:28:42Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.auscope.nvcl.server.util.Utility.ValidateEmail(email)) { java.lang.String errMsg = (\"jobid=\" + jobid) + \": email is not valid.\"; return new org.auscope.nvcl.server.vo.AnalyticalJobResponse(\"ERROR\", errMsg); }else { email = email.toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/87/buggy-version/src.main.java.org.auscope.nvcl.server.web.controllers.RestMenuController.java", "BodyUseAPI": ["java.lang.String.toLowerCase()"], "Fixed commit": "9bf7e43428b7b4a910b2b96fb8a1d9ce9c4e0ac0", "Url": "https://api.github.com/repos/AuScope/NVCLAnalyticalServices", "Date": "2016-06-30T01:59:09Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (location == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8589/buggy-version/app.src.main.java.com.gcw.sapienza.places.services.LocationService.java", "BodyUseAPI": [], "Fixed commit": "309db480ff421d8ccb9d8972add926eb1006d133", "Url": "https://api.github.com/repos/Natio/Places", "Date": "2015-01-05T01:12:35Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e.isCancelled()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2180/buggy-version/src.main.java.gvlfm78.plugin.OldCombatMechanics.module.ModuleDisableEnderpearlCooldown.java", "BodyUseAPI": [], "Fixed commit": "e8ccad3db51d3fffe5ae02da033a8c43bc75f925", "Url": "https://api.github.com/repos/gvlfm78/BukkitOldCombatMechanics", "Date": "2017-08-20T22:03:27Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isTyping()) != value) { if (!value) caretLine = -1; else caretLine = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5284/buggy-version/src.gfx.forms.components.FormTextBoxList.java", "BodyUseAPI": [], "Fixed commit": "8b7f7efdb411a142bbcc09ff6a98ce82d4bf20ca", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2017-03-10T15:40:06Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (CompteRendu.listeqty.isEmpty()) { CompteRendu.listeidmedic.remove(position); remove(medics); }else { CompteRendu.listeqty.remove(position); CompteRendu.listeidmedic.remove(position); remove(medics); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8670/buggy-version/app.src.main.java.com.csgroup.eventsched.MedicAdapter.java", "BodyUseAPI": [], "Fixed commit": "b702ca99ebbf9be6c173df5da192c0ee8147a216", "Url": "https://api.github.com/repos/Loicrespin/Gsb-App", "Date": "2017-05-16T08:17:31Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(etTitle.getText().toString().equals(\"\"))) new ru.edusty.android.Activities.CreateGroupActivity.PostGroup().execute(new ru.edusty.android.Classes.CreateGroup(etTitle.getText().toString(), token, universityID)); else android.widget.Toast.makeText(this, getString(R.string.enter_group_name), Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8943/buggy-version/app.src.main.java.ru.edusty.android.Activities.CreateGroupActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "ru.edusty.android.Activities.CreateGroupActivity.PostGroup.execute(ru.edusty.android.Classes.CreateGroup)", "etTitle.getText().toString()"], "Fixed commit": "950fe6ed26e8744d264dbbd0e29382d4b8a29324", "Url": "https://api.github.com/repos/Ruslan91/Edusty", "Date": "2014-09-09T16:41:59Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.edusty.android.Activities.SplashScreenActivity.3.getSharedPreferences(getString(R.string.app_data),ru.edusty.android.Activities.MODE_PRIVATE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sharedPreferences.getString(\"token\", \"\").equals(\"\")) { android.content.Intent mainIntent = new android.content.Intent(this, ru.edusty.android.Activities.AuthorizationActivity.class); this.startActivity(mainIntent); this.finish(); }else { startActivity(new android.content.Intent(this, ru.edusty.android.Activities.VkAuthActivity.class)); this.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8943/buggy-version/app.src.main.java.ru.edusty.android.Activities.SplashScreenActivity.java", "BodyUseAPI": [], "Fixed commit": "950fe6ed26e8744d264dbbd0e29382d4b8a29324", "Url": "https://api.github.com/repos/Ruslan91/Edusty", "Date": "2014-09-09T16:41:59Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTable.rowAtPoint(java.awt.Point)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (row > (-1)) gui.GUIControler.choose(table.getModel().getValueAt(table.convertRowIndexToModel(row), 0).toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3503/buggy-version/HangmanClient.src.gui.ConnectingWindow.java", "BodyUseAPI": ["gui.GUIControler.choose(java.lang.String)", "java.lang.Object.toString()", "javax.swing.JTable.convertRowIndexToModel(int)", "javax.swing.table.TableModel.getValueAt(int,int)"], "Fixed commit": "405a39774582d4115b64ac7d9649d231bac26af5", "Url": "https://api.github.com/repos/basarito/hangman_client", "Date": "2017-08-09T18:07:58Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Float.parseFloat(arg1.get(\"cnt\"))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (f1 == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6505/buggy-version/src.de.typology.predictors.LuceneNGramSearcher.java", "BodyUseAPI": [], "Fixed commit": "d0e53981897fb19a45e7e67584e0d43ed031e031", "Url": "https://api.github.com/repos/renepickhardt/typology", "Date": "2013-01-01T16:36:34Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Float.parseFloat(arg0.get(\"cnt\"))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (f0 == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6505/buggy-version/src.de.typology.predictors.LuceneNGramSearcher.java", "BodyUseAPI": [], "Fixed commit": "d0e53981897fb19a45e7e67584e0d43ed031e031", "Url": "https://api.github.com/repos/renepickhardt/typology", "Date": "2013-01-01T16:36:34Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index > 0) { url = url.substring(0, index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/604/buggy-version/cat-broker.src.main.java.com.dianping.cat.broker.api.page.batch.Handler.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "ffc4b334212fc38a134cfab81e2e203a0f2451cb", "Url": "https://api.github.com/repos/dianping/cat", "Date": "2014-11-26T03:16:46Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((j) % 5000) == 0) { em.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2653/buggy-version/benchmark.ycsb.src.main.java.com.impetus.kundera.ycsb.benchmark.KunderaHBaseClient.java", "BodyUseAPI": [], "Fixed commit": "3919f8220346c6cc7da673da22919f2ae526aff0", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2013-10-24T07:30:40Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((field.get(null)) != null) { values.add(((com.microsoft.azure.management.resources.fluentcore.arm.Region) (field.get(null)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/294/buggy-version/azure-mgmt-resources.src.main.java.com.microsoft.azure.management.resources.fluentcore.arm.Region.java", "BodyUseAPI": [], "Fixed commit": "94ef4c9115219c59ab8278c40c37550b98aaeaad", "Url": "https://api.github.com/repos/martinsawicki/azure-sdk-for-java", "Date": "2016-11-02T19:09:21Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getNuggetId()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4402/buggy-version/src.main.java.se.kits.gakusei.util.ProgressHandler.java", "BodyUseAPI": [], "Fixed commit": "dcddd62eba01580278f20ae760154b3f2754243b", "Url": "https://api.github.com/repos/kits-ab/gakusei", "Date": "2017-03-17T05:50:38Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRefreshStatus) == (RefreshStatus.REFRESHING)) changeRefreshViewPositionWithAnimation(0, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7615/buggy-version/htrefreshrecyclerview.src.main.java.com.netease.hearttouch.htrefreshrecyclerview.viewimpl.HTBaseRecyclerViewImpl.java", "BodyUseAPI": [], "Fixed commit": "0e7b3788c7cb2ddb4618f1974faeae9d1ef1f90c", "Url": "https://api.github.com/repos/NEYouFan/ht-refreshrecyclerview", "Date": "2016-08-08T05:35:35Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(silent)) { player.sendMessage(((((((((((org.bukkit.ChatColor.YELLOW) + \"You have been warped to \") + (org.bukkit.ChatColor.GOLD)) + (args[0])) + (org.bukkit.ChatColor.YELLOW)) + \" by \") + (org.bukkit.ChatColor.GOLD)) + (sender.getName())) + (org.bukkit.ChatColor.YELLOW)) + \".\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4429/buggy-version/src.main.java.net.serubin.warp.WarpComponent.java", "BodyUseAPI": [], "Fixed commit": "fb1cc3ce50f8fb8a13d7e00f5128f5c4cd55b645", "Url": "https://api.github.com/repos/Serubin/EscapePlug", "Date": "2012-10-03T02:14:02Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.as.clustering.jgroups.subsystem.ChannelInstanceResource.getChannel()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (channel == null) { return java.util.Collections.emptySet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2934/buggy-version/clustering.jgroups.src.main.java.org.jboss.as.clustering.jgroups.subsystem.ChannelInstanceResource.java", "BodyUseAPI": [], "Fixed commit": "a41e7f2d051774a14a8f23cbfafc8dc419993b95", "Url": "https://api.github.com/repos/rachmatowicz/wildfly", "Date": "2013-04-29T15:53:39Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getController()) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2934/buggy-version/clustering.jgroups.src.main.java.org.jboss.as.clustering.jgroups.subsystem.ChannelInstanceResource.java", "BodyUseAPI": [], "Fixed commit": "a41e7f2d051774a14a8f23cbfafc8dc419993b95", "Url": "https://api.github.com/repos/rachmatowicz/wildfly", "Date": "2013-04-29T15:53:39Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.comze_instancelabs.destroyerminigame.Main.arenap.containsKey(event.getPlayer().getName())) { this.giveClassesBook(event.getPlayer().getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2676/buggy-version/src.com.comze_instancelabs.destroyerminigame.Main.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "com.comze_instancelabs.destroyerminigame.Main.giveClassesBook(event.getPlayer().getName())", "event.getPlayer().getName()"], "Fixed commit": "f7a0d29fac6a5e6c7523be27ae05fcc7ef6bd932", "Url": "https://api.github.com/repos/instance01/Destroyer", "Date": "2013-11-19T16:00:45Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (command.hasProperty(CommandProperties.EDIT_MARK)) { command.setCommandType(CommandType.EDIT_COMPLETE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3450/buggy-version/src.katnote.command.Parser.java", "BodyUseAPI": ["katnote.command.CommandDetail.setCommandType(CommandType.EDIT_COMPLETE)"], "Fixed commit": "d84cbe63d4843328297f875ee0972bc9b22a9320", "Url": "https://api.github.com/repos/cs2103aug2015-t09-2j/main", "Date": "2015-10-07T13:39:05Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getItemNo()) == 1) { moveUpBtn.setVisible(false); }else { moveUpBtn.setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5945/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.shelf.collection.folders.item.ShelfFolderItemChildView.java", "BodyUseAPI": [], "Fixed commit": "8fb00dd7bf898179341095a12d74880dc36f824a", "Url": "https://api.github.com/repos/sravanthi1/Gooru-Web", "Date": "2014-10-13T07:10:49Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(pckg.equals(Description.EMPTY))) str = (\"package \" + pckg) + \";\\n\\n\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5797/buggy-version/PESTT.src.domain.coverage.instrument.HelperClass.java", "BodyUseAPI": [], "Fixed commit": "7c6e1b39eb7945dfaaa9bc257e93ad712485f60b", "Url": "https://api.github.com/repos/ruigameiro/PESTT", "Date": "2012-05-23T10:23:06Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.activator.Activator.getDefault().getEditorController().getPackageName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(pckg.equals(Description.EMPTY))) return (pckg + '.') + (file.getName().substring(0, ((file.getName().length()) - 5)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5797/buggy-version/PESTT.src.domain.coverage.instrument.FileCreator.java", "BodyUseAPI": [], "Fixed commit": "7c6e1b39eb7945dfaaa9bc257e93ad712485f60b", "Url": "https://api.github.com/repos/ruigameiro/PESTT", "Date": "2012-05-23T10:23:06Z"},
{"Line": "=>825", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_localResourceMap) != null) { com.projity.pm.resource.Resource origImpl = _localResourceMap.get(resourceData.getUniqueId()); resourceNodeMap.put(resourceData.getEnterpriseResource(), com.projity.grouping.core.NodeFactory.getInstance().createNode(origImpl)); }else resourceNodeMap.put(resourceData.getEnterpriseResource(), com.projity.grouping.core.NodeFactory.getInstance().createNode(resource));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6154/buggy-version/exchange.src.main.java.com.projity.server.data.Serializer.java", "BodyUseAPI": [], "Fixed commit": "0f3e4a2ccac75d878eb06b447b42daa7c090fb72", "Url": "https://api.github.com/repos/omarbenhamid/angelfalls", "Date": "2012-09-14T07:43:20Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.text.Editable.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((searchkey.length()) < 3) { searchHandler.postDelayed(searchRunnable, 300); }else { searchRunnable.run(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/633/buggy-version/src.com.qidu.lin.showRecentApps.fg.ShowGetRecentAppsActivity.java", "BodyUseAPI": [], "Fixed commit": "a808ba18c5816a2bd422b580533aa08728097812", "Url": "https://api.github.com/repos/gooooloo/ShowMyRecentApps", "Date": "2013-08-03T01:25:37Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mc.alk.arena.competition.match.ArenaMatch.getEntry(target.getPlayer())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (e != null) scoreboard.setEntryNameSuffix(e, (curLives <= 1 ? \"\" : (\"&4(\" + curLives) + \")\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6292/buggy-version/src.java.mc.alk.arena.competition.match.ArenaMatch.java", "BodyUseAPI": ["mc.alk.arena.competition.match.ArenaMatch.setEntryNameSuffix(mc.alk.scoreboardapi.api.SEntry,(curLives <= 1 ? \"\" : (\"&4(\" + curLives) + \")\"))"], "Fixed commit": "89bcca6571036c26cd27adf3c2bae9847705b868", "Url": "https://api.github.com/repos/alkarinv/BattleArena", "Date": "2014-02-28T02:06:59Z"},
{"Line": "=>805", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mc.alk.arena.objects.scoreboard.ArenaScoreboard.getEntry(player.getPlayer())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (e != null) scoreboard.setEntryNameSuffix(e, ((\"(\" + (nLivesPerPlayer)) + \")\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6292/buggy-version/src.java.mc.alk.arena.competition.match.Match.java", "BodyUseAPI": ["mc.alk.arena.objects.scoreboard.ArenaScoreboard.setEntryNameSuffix(mc.alk.scoreboardapi.api.SEntry,java.lang.String)"], "Fixed commit": "89bcca6571036c26cd27adf3c2bae9847705b868", "Url": "https://api.github.com/repos/alkarinv/BattleArena", "Date": "2014-02-28T02:06:59Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.stratos.cep.extension.SecondDerivativeFinderWindowProcessor.log.isDebugEnabled()) { org.apache.stratos.cep.extension.SecondDerivativeFinderWindowProcessor.log.debug((((((((((((((\"Gradient: \" + gradient) + \" Last val: \") + lastVal) + \" First val: \") + firstVal) + \" Time Gap: \") + tGap) + \" t1: \") + t1) + \" t2: \") + t2) + \" hash: \") + (this.hashCode()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3828/buggy-version/extensions.cep.stratos-cep-extension.src.main.java.org.apache.stratos.cep.extension.SecondDerivativeFinderWindowProcessor.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "35cd74a5c4c932da102ffb353010c2d7bdba7ea9", "Url": "https://api.github.com/repos/dakshika/stratos", "Date": "2014-11-05T20:28:15Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.stratos.cep.extension.GradientFinderWindowProcessor.log.isDebugEnabled()) { org.apache.stratos.cep.extension.GradientFinderWindowProcessor.log.debug((((((((((((((\"Gradient: \" + gradient) + \" Last val: \") + lastVal) + \" First val: \") + firstVal) + \" Time Gap: \") + tGap) + \" t1: \") + t1) + \" t2: \") + t2) + \" hash: \") + (this.hashCode()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3828/buggy-version/extensions.cep.stratos-cep-extension.src.main.java.org.apache.stratos.cep.extension.GradientFinderWindowProcessor.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "35cd74a5c4c932da102ffb353010c2d7bdba7ea9", "Url": "https://api.github.com/repos/dakshika/stratos", "Date": "2014-11-05T20:28:15Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((x < 0) || (x > (width()))) || ((y < 0) || (y > (height())))) throw new java.lang.IllegalArgumentException(\"Illegal x and y\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8944/buggy-version/src.SeamCarver.java", "BodyUseAPI": [], "Fixed commit": "3a05d358b08595f0d88de2ef176df5b6c5307711", "Url": "https://api.github.com/repos/StephenHuge/Algorithms07", "Date": "2017-11-25T02:58:56Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defStmt.getLeftOp()) instanceof soot.jimple.ArrayRef) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1129/buggy-version/src.soot.jimple.infoflow.problems.AbstractInfoflowProblem.java", "BodyUseAPI": [], "Fixed commit": "3f1a540bc3910b732b42206094e141a5d95e1c7a", "Url": "https://api.github.com/repos/secure-software-engineering/soot-infoflow", "Date": "2014-01-20T09:23:52Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (component)) { component.revalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/9170/buggy-version/swing.src.net.sf.openrocket.gui.scalefigure.ScaleScrollPane.java", "BodyUseAPI": [], "Fixed commit": "4116c05b14da76a182bd2359a5dd2dac48be4fcc", "Url": "https://api.github.com/repos/teyrana/openrocket", "Date": "2016-05-01T19:03:23Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((t.getPropiedad()) == null) { msgShw.showErrorMessage(\"No ha seleccionado ninguna propiedad\", \"Error\"); return false; }else if ((propiedadService.getCurrentEstado(t.getPropiedad()).equals(EstadoProp.DISPONIBLE)) == false) { msgShw.showErrorMessage(\"La propiedad seleccionada no esta disponible\", \"Error\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7392/buggy-version/src.main.java.presentacion.validators.ReservaValidator.java", "BodyUseAPI": ["propiedadService.getCurrentEstado(t.getPropiedad()).equals(EstadoProp.DISPONIBLE)", "entities.Reserva.getPropiedad()", "model.PropiedadService.getCurrentEstado(t.getPropiedad())"], "Fixed commit": "3fd916e76fda51e3c7d9deffab5cb405929d8a06", "Url": "https://api.github.com/repos/GreenTech-UNGS/J-JInmobiliaria", "Date": "2017-10-09T07:11:35Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Arrays.asList(java.lang.Double[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((position.get(d)) != dPos) { velocity.set(d, (-(velocity.get(d)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6354/buggy-version/src.swarm.pso.service.SequentialOptimization.java", "BodyUseAPI": ["java.util.List<java.lang.Double>.set(int,double)", "java.util.List<java.lang.Double>.get(int)"], "Fixed commit": "828a8f14238b14ca764e5911143b4083eb243f73", "Url": "https://api.github.com/repos/st3w/Swarm", "Date": "2014-04-21T03:57:59Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xwiki.context.Execution.getContext()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (econtext == null) { return super.getComponentManagerInternal(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1936/buggy-version/xwiki-platform-core.xwiki-platform-component.xwiki-platform-component-multi.src.main.java.org.xwiki.component.internal.AbstractEntityComponentManager.java", "BodyUseAPI": [], "Fixed commit": "ed59faece716d4c701596876b95ac1b5054741cc", "Url": "https://api.github.com/repos/msmeria/xwiki-platform", "Date": "2015-05-21T10:26:27Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(o instanceof com.jsoniter.Slice)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8824/buggy-version/src.main.java.com.jsoniter.Slice.java", "BodyUseAPI": [], "Fixed commit": "5fff33e7a6fa1fef5d5d9b1bddaf7f21f60c7bfa", "Url": "https://api.github.com/repos/alexvrhel/java", "Date": "2017-01-19T00:04:02Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e == null) { io.takari.bpm.state.BpmnErrorHelper.log.warn(\"raiseError ['{}'] -> empty error reference will be replaced with a default value\", errorRef); e = io.takari.bpm.state.BpmnErrorHelper.DEFAULT_ERROR_REF; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7866/buggy-version/bpm-engine-impl.src.main.java.io.takari.bpm.state.BpmnErrorHelper.java", "BodyUseAPI": [], "Fixed commit": "e2506512d2d2aa67f8ad24fdc4ea067a5d23241c", "Url": "https://api.github.com/repos/takari/bpm", "Date": "2016-08-10T02:30:14Z"},
{"Line": "=>671", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((((expiration.get(java.util.Calendar.DAY_OF_WEEK)) == (java.util.Calendar.FRIDAY)) && ((expiration.get(java.util.Calendar.HOUR_OF_DAY)) > 16)) || ((expiration.get(java.util.Calendar.DAY_OF_WEEK)) == (java.util.Calendar.SATURDAY))) || (((expiration.get(java.util.Calendar.DAY_OF_WEEK)) == (java.util.Calendar.SUNDAY)) && ((expiration.get(java.util.Calendar.HOUR_OF_DAY)) <= 16))) { expiration.add(java.util.Calendar.HOUR, 48); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7402/buggy-version/src.trading.engines.IBEngine2.java", "BodyUseAPI": ["java.util.Calendar.add(int,int)"], "Fixed commit": "b0ac81d48dd42c79763aeed10f0aeaa90011a24f", "Url": "https://api.github.com/repos/MatthewPDingle/CSCSPMonitor", "Date": "2017-02-20T00:23:11Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (insertCount > 0) { com.nextfaze.poweradapters.data.OffsetData.notifyItemRangeInserted(java.lang.Math.max(0, (innerPositionStart - (mOffset))), insertCount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3325/buggy-version/power-adapters-data.src.main.java.com.nextfaze.poweradapters.data.OffsetData.java", "BodyUseAPI": ["com.nextfaze.poweradapters.data.OffsetData.notifyItemRangeInserted(int,int)"], "Fixed commit": "0f21c414adc5eaae8d413170e22588abc5890eae", "Url": "https://api.github.com/repos/NextFaze/power-adapters", "Date": "2016-06-03T04:14:56Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((session) != null) user = ((org.iiitb.model.User) (session.get(\"user\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/9129/buggy-version/src.org.iiitb.action.layout.LayoutAction.java", "BodyUseAPI": [], "Fixed commit": "7d6c63a853aef6b2bba041382b43cb0b1777a937", "Url": "https://api.github.com/repos/prkreddy/studentInfo", "Date": "2014-02-12T09:50:37Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.j256.ormlite.dao.Dao<models.UserModel, java.lang.String>.queryForFieldValues(java.util.Map<java.lang.String, java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((userModels.size()) == 0) { return Utils.Utils.response(false, \"\u767b\u5f55\u5931\u8d25,\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef\", null); }else { return Utils.Utils.response(false, \"\u767b\u5f55\u5931\u8d25\uff0c\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4590/buggy-version/src.main.java.controllers.UserController.java", "BodyUseAPI": [], "Fixed commit": "186974281221be6b1be94a754dc0e3008f60afc7", "Url": "https://api.github.com/repos/ninggee/HotelBooking", "Date": "2017-12-11T11:29:21Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Linestring.size()) > 0) { mMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(Linestring.get(0)).position(Linestring.get(((Linestring.size()) - 1)))); mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(Linestring.get(0), 14.0F)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/813/buggy-version/app.src.main.java.gr.aegean.com.samostrails.CreateTrailFragment.java", "BodyUseAPI": ["java.util.ArrayList<com.google.android.gms.maps.model.LatLng>.get(((Linestring.size()) - 1))", "new com.google.android.gms.maps.model.MarkerOptions().position(Linestring.get(0)).position(Linestring.get(((Linestring.size()) - 1)))", "com.google.android.gms.maps.GoogleMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(Linestring.get(0), 14.0F))", "com.google.android.gms.maps.GoogleMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(Linestring.get(0)).position(Linestring.get(((Linestring.size()) - 1))))", "com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(Linestring.get(0),float)", "java.util.ArrayList<com.google.android.gms.maps.model.LatLng>.get(int)", "com.google.android.gms.maps.model.MarkerOptions.position(Linestring.get(0))", "java.util.ArrayList<com.google.android.gms.maps.model.LatLng>.get(int)", "java.util.ArrayList<com.google.android.gms.maps.model.LatLng>.size()"], "Fixed commit": "6a96b6fcee5cb1ddd139be905b2f0b47ad9ef584", "Url": "https://api.github.com/repos/thomasbariabas1/SamosTrails", "Date": "2017-06-21T18:10:10Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (r <= 0) { mValue = p0.getM(); }else if (r >= 1) { mValue = p1.getM(); }else { mValue = (p0.getM()) + (r * ((p1.getM()) - (p0.getM()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/830/buggy-version/src.main.java.org.geolatte.geom.DefaultMeasureGeometryOperations.java", "BodyUseAPI": [], "Fixed commit": "d5463166207f824a3b9362f7227cf5eeb604c296", "Url": "https://api.github.com/repos/GeoLatte/geolatte-geom", "Date": "2014-08-07T12:46:29Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<T>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (oldSize > 0) { rows.clear(); nl.gogognome.lib.swing.AbstractListTableModel.fireTableDataChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2873/buggy-version/src.main.java.nl.gogognome.lib.swing.AbstractListTableModel.java", "BodyUseAPI": [], "Fixed commit": "52a020ad9b774ab6432bca4eca0a5d6c9b59f127", "Url": "https://api.github.com/repos/gogognome/gogoswing", "Date": "2015-12-24T08:26:45Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerChatEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (player.hasPermission(permissionNode)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4421/buggy-version/src.us.fitzpatricksr.cownet.NoSwearing.java", "BodyUseAPI": [], "Fixed commit": "66a3840610ebe6cbc74542dc9c22bd2318095d98", "Url": "https://api.github.com/repos/fitzpatricksrus/CowNet", "Date": "2012-05-17T15:56:16Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.resolve(rec.getPath())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (path.toFile().exists()) { java.lang.Long expcheck = rec.getChecksum(); java.lang.Long wasCheck = org.wildfly.extras.patch.utils.IOUtils.getCRC32(path); if (!(expcheck.equals(wasCheck))) { org.wildfly.extras.patch.utils.PatchAssertion.assertTrue(force, (\"Attempt to add an already existing file \" + (rec.getPath()))); org.wildfly.extras.patch.internal.PatchLogger.warn((\"Overriding an already existing file \" + (rec.getPath()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4822/buggy-version/core.src.main.java.org.wildfly.extras.patch.internal.WildFlyServerInstance.java", "BodyUseAPI": ["org.wildfly.extras.patch.utils.IOUtils.getCRC32(java.nio.file.Path)"], "Fixed commit": "c3294df7ea3208ca36aa8e911d399f0a1f042d2e", "Url": "https://api.github.com/repos/tdiesler/fuse-patch", "Date": "2015-06-22T13:19:25Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(edt_monney_work.getText().toString().equals(\"\"))) { if ((edt_monney_work.isClickable()) && ((java.lang.Integer.parseInt(edt_monney_work.getText().toString().replace(\".\", \"\"))) < 2000)) { hideProgressDialog(); com.hbbsolution.owner.utils.ShowAlertDialog.showAlert(getResources().getString(R.string.validate_amount), this); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2679/buggy-version/app.src.main.java.com.hbbsolution.owner.maid_profile.choose_maid.view.ChooseMaidActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "java.lang.Integer.parseInt(edt_monney_work.getText().toString().replace(\".\", \"\"))", "android.widget.EditText.isClickable()", "edt_monney_work.getText().toString()", "edt_monney_work.getText().toString().replace(java.lang.String,java.lang.String)"], "Fixed commit": "088abbea7d97dd79c46f2a21dc809149924cfa3b", "Url": "https://api.github.com/repos/thanhduy26091995/Owner", "Date": "2017-07-25T15:43:28Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(edt_monney_work.getText().toString().equals(\"\"))) { if ((edt_monney_work.isClickable()) && ((java.lang.Integer.parseInt(edt_monney_work.getText().toString().replace(\".\", \"\"))) < 2000)) { hideProgressDialog(); com.hbbsolution.owner.utils.ShowAlertDialog.showAlert(getResources().getString(R.string.validate_amount), this); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2679/buggy-version/app.src.main.java.com.hbbsolution.owner.work_management.view.quickpost.QuickPostActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "android.widget.EditText.isClickable()", "edt_monney_work.getText().toString().replace(java.lang.String,java.lang.String)", "java.lang.Integer.parseInt(edt_monney_work.getText().toString().replace(\".\", \"\"))", "edt_monney_work.getText().toString()"], "Fixed commit": "088abbea7d97dd79c46f2a21dc809149924cfa3b", "Url": "https://api.github.com/repos/thanhduy26091995/Owner", "Date": "2017-07-25T15:43:28Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCORS) { if (!(com.google.gwt.query.vm.AjaxTransportJre.localDomain.equals(c.getHeaderField(\"Access-Control-Allow-Origin\")))) { code = 0; } if ((s.getWithCredentials()) && ((c.getHeaderField(\"Access-Control-Allow-Credentials\")) == null)) { code = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/760/buggy-version/gwtquery-core.src.main.java.com.google.gwt.query.vm.AjaxTransportJre.java", "BodyUseAPI": [], "Fixed commit": "6df7c6a8f2461d918d305c883985023d9d05b43d", "Url": "https://api.github.com/repos/gwtquery/gwtquery", "Date": "2014-01-27T10:40:32Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.amaze.quit.app.SplashScreen.getSharedPreferences(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(settings.getBoolean(\"dataFilled\", false))) { fillDataBase(); settings.edit().putBoolean(\"dataFilled\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6307/buggy-version/app.src.main.java.com.amaze.quit.app.SplashScreen.java", "BodyUseAPI": ["settings.edit().putBoolean(java.lang.String,boolean)", "android.content.SharedPreferences.edit()"], "Fixed commit": "051a380a906d387f6ad3449cc195f010c618addf", "Url": "https://api.github.com/repos/A-Maze/Quit", "Date": "2014-06-13T14:43:01Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((user.getPassword()) != null) || (org.apache.commons.lang.StringUtils.isBlank(user.getPassword()))) { user.setPassword(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6474/buggy-version/ngrinder-controller.src.main.java.org.ngrinder.user.service.UserService.java", "BodyUseAPI": ["org.ngrinder.model.User.setPassword(<nulltype>)"], "Fixed commit": "8e0ae63b7ff1b64a99ba4f12c239282fbc8e90fb", "Url": "https://api.github.com/repos/nhnopensource/ngrinder", "Date": "2013-12-02T03:10:15Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(circuit.containsElement(newComp))) circuit.addElement(newComp);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3029/buggy-version/src.blitzEdit.application.CircuitCanvas.java", "BodyUseAPI": ["blitzEdit.core.Circuit.addElement(blitzEdit.core.Component)"], "Fixed commit": "ae69c0124feb8e9b795ab6b0f1f4a3bdd9629a6b", "Url": "https://api.github.com/repos/Akkarin1212/BlitzEdit", "Date": "2017-06-04T16:26:30Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p.source) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3202/buggy-version/src.com.github.singond.pdfriend.book.model.MultiPage.java", "BodyUseAPI": [], "Fixed commit": "12935f27830fcf6d6f33a9772238447d7c068d4a", "Url": "https://api.github.com/repos/Singond/PDFriend", "Date": "2017-06-19T20:25:57Z"},
{"Line": "=>948", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (item.getItemType().equals(AppConstants.ITEM_TYPE_OLDGOLD)) { ret = ret.add((null == (item.getSalesAmount()) ? new java.math.BigDecimal(0) : com.topsun.posclient.common.ProjectUtil.formatString((\"-\" + (item.getSalesAmount()))))); }else { ret = ret.add((null == (item.getSalesAmount()) ? new java.math.BigDecimal(0) : item.getSalesAmount())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7713/buggy-version/com.topsun.posclient.sales.core.src.com.topsun.posclient.sales.core.SalesDataUtil.java", "BodyUseAPI": ["java.math.BigDecimal.add((null == (item.getSalesAmount()) ? new java.math.BigDecimal(0) : com.topsun.posclient.common.ProjectUtil.formatString((\"-\" + (item.getSalesAmount())))))", "com.topsun.posclient.datamodel.Item.getSalesAmount()", "java.math.BigDecimal.add((null == (item.getSalesAmount()) ? new java.math.BigDecimal(0) : item.getSalesAmount()))", "com.topsun.posclient.datamodel.Item.getSalesAmount()", "com.topsun.posclient.datamodel.Item.getSalesAmount()", "com.topsun.posclient.common.ProjectUtil.formatString((\"-\" + (item.getSalesAmount())))", "com.topsun.posclient.datamodel.Item.getSalesAmount()"], "Fixed commit": "1e8a5e53efc0926066896ced354422b4e48da1b8", "Url": "https://api.github.com/repos/tandong8888/topsun", "Date": "2014-03-16T19:14:50Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Items.nuggetEmerald) instanceof com.InfinityRaider.AgriCraft.items.ModItem) { cpw.mods.fml.common.registry.GameRegistry.addRecipe(new net.minecraftforge.oredict.ShapedOreRecipe(new net.minecraft.item.ItemStack(net.minecraft.init.Items.emerald, 1), \"nnn\", \"nnn\", \"nnn\", 'n', \"nuggetEmerald\")); cpw.mods.fml.common.registry.GameRegistry.addRecipe(new net.minecraftforge.oredict.ShapelessOreRecipe(new net.minecraft.item.ItemStack(Items.nuggetEmerald, 9), \"gemEmerald\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2837/buggy-version/src.main.java.com.InfinityRaider.AgriCraft.init.Recipes.java", "BodyUseAPI": [], "Fixed commit": "79981853d074f1125768202cf80d25e1c134eb16", "Url": "https://api.github.com/repos/AgriCraft/AgriCraft", "Date": "2015-02-23T17:50:12Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Items.nuggetIron) instanceof com.InfinityRaider.AgriCraft.items.ModItem) { cpw.mods.fml.common.registry.GameRegistry.addRecipe(new net.minecraftforge.oredict.ShapedOreRecipe(new net.minecraft.item.ItemStack(net.minecraft.init.Items.iron_ingot, 1), \"nnn\", \"nnn\", \"nnn\", 'n', \"nuggetIron\")); cpw.mods.fml.common.registry.GameRegistry.addRecipe(new net.minecraftforge.oredict.ShapelessOreRecipe(new net.minecraft.item.ItemStack(Items.nuggetIron, 9), \"ingotIron\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2837/buggy-version/src.main.java.com.InfinityRaider.AgriCraft.init.Recipes.java", "BodyUseAPI": [], "Fixed commit": "79981853d074f1125768202cf80d25e1c134eb16", "Url": "https://api.github.com/repos/AgriCraft/AgriCraft", "Date": "2015-02-23T17:50:12Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Items.nuggetDiamond) instanceof com.InfinityRaider.AgriCraft.items.ModItem) { cpw.mods.fml.common.registry.GameRegistry.addRecipe(new net.minecraftforge.oredict.ShapedOreRecipe(new net.minecraft.item.ItemStack(net.minecraft.init.Items.diamond, 1), \"nnn\", \"nnn\", \"nnn\", 'n', \"nuggetDiamond\")); cpw.mods.fml.common.registry.GameRegistry.addRecipe(new net.minecraftforge.oredict.ShapelessOreRecipe(new net.minecraft.item.ItemStack(Items.nuggetDiamond, 9), \"gemDiamond\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2837/buggy-version/src.main.java.com.InfinityRaider.AgriCraft.init.Recipes.java", "BodyUseAPI": [], "Fixed commit": "79981853d074f1125768202cf80d25e1c134eb16", "Url": "https://api.github.com/repos/AgriCraft/AgriCraft", "Date": "2015-02-23T17:50:12Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.overlord.sramp.client.SrampAtomApiClient.getArtifactMetaData(artifactSummary.getType(),artifactSummary.getUuid())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((artifact.getVersion()) != null) { parameters.put(\"ArtifactVersion\", artifact.getVersion()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5473/buggy-version/dtgov-war.src.main.java.org.overlord.sramp.governance.QueryExecutor.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,artifact.getVersion())", "org.oasis_open.docs.s_ramp.ns.s_ramp_v1.BaseArtifactType.getVersion()"], "Fixed commit": "5412ff4b245dad60b612ea2f6bc4097c462e9dd0", "Url": "https://api.github.com/repos/objectiser/dtgov", "Date": "2014-06-19T20:28:11Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((backend.lookup(getUID())) != null) notifyBackend(BoardActionType.ELT_MOD);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1783/buggy-version/code.brainStorm.src.boardnodes.StyledNode.java", "BodyUseAPI": [], "Fixed commit": "37551aa24c0fb2ca6838cae8faa4e58474687361", "Url": "https://api.github.com/repos/jboreiko/brainStormProject", "Date": "2012-05-08T02:20:59Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tab.length) > 1) adapter.sendMessage(tab[1]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4540/buggy-version/src.main.java.Communication.CommunicationModel.java", "BodyUseAPI": ["Adapter.AdapterInterface.sendMessage(java.lang.String)"], "Fixed commit": "56c33112ae20b5ca962be70b57d4499e32c817f4", "Url": "https://api.github.com/repos/Zixxy/PokerTCS", "Date": "2014-06-04T20:38:39Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((locationApiClient.isConnecting()) || (locationApiClient.isConnected())) locationApiClient.disconnect();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8479/buggy-version/library.src.main.java.th.or.nectec.marlo.PlayLocationService.java", "BodyUseAPI": ["com.google.android.gms.common.api.GoogleApiClient.disconnect()"], "Fixed commit": "5318d4f0b7d2a5ce0d7503593d2fd815f562f1d2", "Url": "https://api.github.com/repos/nectec-opensource/marlo", "Date": "2016-03-18T07:25:04Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (myLocationEnable) th.or.nectec.marlo.PlayLocationService.getInstance(getContext()).connect();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8479/buggy-version/library.src.main.java.th.or.nectec.marlo.MarloFragment.java", "BodyUseAPI": [], "Fixed commit": "5318d4f0b7d2a5ce0d7503593d2fd815f562f1d2", "Url": "https://api.github.com/repos/nectec-opensource/marlo", "Date": "2016-03-18T07:25:04Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.printWriter) == null) { this.printWriter = new org.bimserver.utils.UTF8PrintWriter(outputStream); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5908/buggy-version/IfcPlugins.src.org.bimserver.ifc.step.serializer.IfcStepStreamingSerializer.java", "BodyUseAPI": [], "Fixed commit": "955db81095d927b4e7984f68573d89f2855a3020", "Url": "https://api.github.com/repos/opensourceBIM/IfcPlugins", "Date": "2017-01-23T13:46:56Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((printWriter) != null) { printWriter.flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5908/buggy-version/IfcPlugins.src.org.bimserver.ifc.step.serializer.IfcStepStreamingSerializer.java", "BodyUseAPI": [], "Fixed commit": "955db81095d927b4e7984f68573d89f2855a3020", "Url": "https://api.github.com/repos/opensourceBIM/IfcPlugins", "Date": "2017-01-23T13:46:56Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (tag != null) { if (mTags.containsKey(tag)) { throw new java.lang.IllegalArgumentException(\"This tag is already taken\"); } mTags.put(tag, typeface); typeface.tag = tag; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6267/buggy-version/tehreer-android.src.main.java.com.mta.tehreer.graphics.TypefaceManager.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Object, com.mta.tehreer.graphics.Typeface>.put(java.lang.Object,com.mta.tehreer.graphics.Typeface)", "java.util.HashMap<java.lang.Object, com.mta.tehreer.graphics.Typeface>.containsKey(java.lang.Object)"], "Fixed commit": "336348706e35a046263d039b01b6454ce60c9b83", "Url": "https://api.github.com/repos/mta452/Tehreer-Android", "Date": "2017-05-02T13:44:18Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (addressData.get(0).get(\"ADDR_NATN_CODE\").toString().equals(\"\")) { intData.setField(6, \"US\"); }else { intData.setField(6, addressData.get(0).get(\"ADDR_NATN_CODE\").toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6664/buggy-version/src.main.java.edu.conncoll.cas.jdbc.JDBCCamel.java", "BodyUseAPI": ["edu.conncoll.cas.interrupts.web.support.IntData.setField(int,java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.Object.toString()", "java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.get(int)"], "Fixed commit": "1188db5a240b485055652e3b33a726826e5b9b4b", "Url": "https://api.github.com/repos/ConnCollege/cas-5", "Date": "2017-08-03T04:23:02Z"},
{"Line": "=>778", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isFinishing()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/316/buggy-version/src.org.openhab.habdroid.ui.OpenHABMainActivity.java", "BodyUseAPI": [], "Fixed commit": "4c098e9503e38bb5c7178b488702bf4ba6b29844", "Url": "https://api.github.com/repos/digitaldan/openhab.android", "Date": "2014-08-12T17:41:15Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (strList.contains(focusAnnotation.getCoveredText())) fValue = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7981/buggy-version/src.main.java.de.unistuttgart.ims.cleartkutil.ListFeatureExtractor.java", "BodyUseAPI": [], "Fixed commit": "61dfc5dca5852923e1e56948e673dc1461ee078c", "Url": "https://api.github.com/repos/nilsreiter/cleartk-util", "Date": "2017-04-04T13:44:26Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((securityScopes.size()) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2547/buggy-version/components.apimgt.org.wso2.carbon.apimgt.core.src.main.java.org.wso2.carbon.apimgt.core.impl.APIDefinitionFromSwagger20.java", "BodyUseAPI": [], "Fixed commit": "8478666387d261e80bcdd5cc64833b43aaa8674b", "Url": "https://api.github.com/repos/menuka94/carbon-apimgt", "Date": "2017-09-20T06:06:44Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.text.isEmpty()) this.text = \"Type Here...\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3489/buggy-version/src.com.company.draw.shapes.Text.java", "BodyUseAPI": [], "Fixed commit": "624dbcd1aa8ea898208c4ce6bc9a6b0a9ef82856", "Url": "https://api.github.com/repos/mn263/DrawTree", "Date": "2014-11-10T17:18:01Z"},
{"Line": "=>741", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((source instanceof org.eclipse.uml2.uml.ActivityParameterNode) && (preTarget instanceof org.eclipse.uml2.uml.OutputPin)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8692/buggy-version/plugins.org.obeonetwork.dsl.uml2.design.src.org.obeonetwork.dsl.uml2.design.api.services.ActivityDiagramServices.java", "BodyUseAPI": [], "Fixed commit": "4e6abdbd0e366174bbae9a55dc8a308e6daaeaf4", "Url": "https://api.github.com/repos/ObeoNetwork/UML-Designer", "Date": "2015-01-07T15:15:28Z"},
{"Line": "=>738", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((source instanceof org.eclipse.uml2.uml.OutputPin) && (preTarget instanceof org.eclipse.uml2.uml.OutputPin)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8692/buggy-version/plugins.org.obeonetwork.dsl.uml2.design.src.org.obeonetwork.dsl.uml2.design.api.services.ActivityDiagramServices.java", "BodyUseAPI": [], "Fixed commit": "4e6abdbd0e366174bbae9a55dc8a308e6daaeaf4", "Url": "https://api.github.com/repos/ObeoNetwork/UML-Designer", "Date": "2015-01-07T15:15:28Z"},
{"Line": "=>735", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source instanceof org.eclipse.uml2.uml.InputPin) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8692/buggy-version/plugins.org.obeonetwork.dsl.uml2.design.src.org.obeonetwork.dsl.uml2.design.api.services.ActivityDiagramServices.java", "BodyUseAPI": [], "Fixed commit": "4e6abdbd0e366174bbae9a55dc8a308e6daaeaf4", "Url": "https://api.github.com/repos/ObeoNetwork/UML-Designer", "Date": "2015-01-07T15:15:28Z"},
{"Line": "=>744", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((source instanceof org.eclipse.uml2.uml.DataStoreNode) && (preTarget instanceof org.eclipse.uml2.uml.OutputPin)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8692/buggy-version/plugins.org.obeonetwork.dsl.uml2.design.src.org.obeonetwork.dsl.uml2.design.api.services.ActivityDiagramServices.java", "BodyUseAPI": [], "Fixed commit": "4e6abdbd0e366174bbae9a55dc8a308e6daaeaf4", "Url": "https://api.github.com/repos/ObeoNetwork/UML-Designer", "Date": "2015-01-07T15:15:28Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(s.endsWith(fCP.fileExt))) { s += fCP.fileExt; newFile = new java.io.File(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4786/buggy-version/src.main.java.com.jpaulmorrison.graphics.Diagram.java", "BodyUseAPI": [], "Fixed commit": "2a72dc73ac18f85a109e0768b08434529b795d4f", "Url": "https://api.github.com/repos/jpaulm/drawfbp", "Date": "2017-04-11T17:49:21Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(userField.getText().trim().equals(initialUser))) { result.put(torrentClient.getUserConfigKey(), userField.getText().trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5194/buggy-version/src.GUI.Configuration.TorrentClientSectionConfig.java", "BodyUseAPI": ["javax.swing.JTextField.getText()", "java.lang.String.trim()", "java.util.Map<java.lang.String, java.lang.String>.put(torrentClient.getUserConfigKey(),java.lang.String)"], "Fixed commit": "7746846b51651deead0d562999a7801aa302ae3b", "Url": "https://api.github.com/repos/WangCrash/PirateTransmission", "Date": "2014-01-05T18:45:13Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(password.equals(initialPassword))) { if (!(password.isEmpty())) { password = Codification.Base64.encodeBytes(password.getBytes()); } result.put(torrentClient.getPasswordConfigKey(), password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5194/buggy-version/src.GUI.Configuration.TorrentClientSectionConfig.java", "BodyUseAPI": ["Codification.Base64.encodeBytes(byte[])", "java.lang.String.getBytes()", "java.lang.String.isEmpty()"], "Fixed commit": "7746846b51651deead0d562999a7801aa302ae3b", "Url": "https://api.github.com/repos/WangCrash/PirateTransmission", "Date": "2014-01-05T18:45:13Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(baseStr.startsWith(\"#\"))) { final org.thymeleaf.standard.expression.Token token = org.thymeleaf.standard.expression.Token.parse(baseStr); if (token != null) { return org.thymeleaf.standard.expression.TextLiteralExpression.parseTextLiteral(token.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5833/buggy-version/src.main.java.org.thymeleaf.standard.expression.LinkExpression.java", "BodyUseAPI": ["org.thymeleaf.standard.expression.Token.parse(java.lang.String)"], "Fixed commit": "36dae3fa51c24a5a176de5d2a941770b4fbf9e16", "Url": "https://api.github.com/repos/thymeleaf/thymeleaf", "Date": "2013-04-30T22:34:06Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (len < 0) { throw new java.io.IOException((\"Expect size of data block but found: \" + len)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6066/buggy-version/x5.common.com.xored.x5.common.src.com.xored.x5.common.BinaryReader.java", "BodyUseAPI": [], "Fixed commit": "ee7bb4b16f8ec901a4bdb6ec2e6ff42d5a76e817", "Url": "https://api.github.com/repos/xored/synergy", "Date": "2011-12-01T14:02:50Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isComplete) { com.google.gson.JsonElement children = rallyObject.get(\"Children\"); if ((children != null) && (children.isJsonArray())) { com.google.gson.JsonArray jsonArray = rallyObject.getAsJsonArray(\"Children\"); if ((jsonArray != null) && ((jsonArray.size()) > 0)) { isComplete = false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4644/buggy-version/rally-api.src.main.java.com.emprovise.api.rally.RallyClient.java", "BodyUseAPI": [], "Fixed commit": "18cc650cc49990d5be31907e38ba34867d7a5a4d", "Url": "https://api.github.com/repos/emprovise/api-library", "Date": "2015-01-30T15:59:58Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (speechRate < (com.buildmlearn.spellingstemplate.SpellingActivity.MIN_SPEECH_RATE)) speechRate = com.buildmlearn.spellingstemplate.SpellingActivity.MIN_SPEECH_RATE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/503/buggy-version/LearnSpellingsTemplate.source.LearnSpellingsTemplateApp.src.com.buildmlearn.spellingstemplate.SpellingActivity.java", "BodyUseAPI": [], "Fixed commit": "a1ffc8a9e6a4c11461c3a8558ed98aeb7e30e031", "Url": "https://api.github.com/repos/BuildmLearn/Toolkit-mobile-templates", "Date": "2016-03-02T13:41:42Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((leftbatch) == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1237/buggy-version/src.qp.operators.BlockNestedLoop.java", "BodyUseAPI": [], "Fixed commit": "5c9932a0210998a10f42e110cd95a42427aef5e2", "Url": "https://api.github.com/repos/leshweyeewin/CS3223", "Date": "2017-03-19T04:55:26Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mySound) != null) { mySound.release(); mySound = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5803/buggy-version/app.src.main.java.com.cs329e.joshfrankl.longhornwelcome.FightSongActivity.java", "BodyUseAPI": [], "Fixed commit": "ef23d868bcee34564a6ec3906424cc960fb59bd3", "Url": "https://api.github.com/repos/joshfrankl/LonghornWelcome", "Date": "2016-04-16T18:22:04Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mySound) != null) { mySound.release(); mySound = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5803/buggy-version/app.src.main.java.com.cs329e.joshfrankl.longhornwelcome.FightSongActivity.java", "BodyUseAPI": [], "Fixed commit": "ef23d868bcee34564a6ec3906424cc960fb59bd3", "Url": "https://api.github.com/repos/joshfrankl/LonghornWelcome", "Date": "2016-04-16T18:22:04Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mySound) != null) && (mySound.isPlaying())) { mySound.pause(); paused = mySound.getCurrentPosition(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5803/buggy-version/app.src.main.java.com.cs329e.joshfrankl.longhornwelcome.FightSongActivity.java", "BodyUseAPI": ["android.media.MediaPlayer.pause()", "android.media.MediaPlayer.getCurrentPosition()"], "Fixed commit": "ef23d868bcee34564a6ec3906424cc960fb59bd3", "Url": "https://api.github.com/repos/joshfrankl/LonghornWelcome", "Date": "2016-04-16T18:22:04Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clientWrapper.shouldStopSending()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2897/buggy-version/swift-load-generator.src.main.java.com.facebook.swift.perf.loadgenerator.AsyncClientWorker.java", "BodyUseAPI": [], "Fixed commit": "50ae91eed7dc16bcccc0e0b89f1f75c3be64a11d", "Url": "https://api.github.com/repos/facebook/swift", "Date": "2013-06-25T22:49:17Z"},
{"Line": "=>733", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hitSound) { android.os.Vibrator vibrate = ((android.os.Vibrator) (getApplicationContext().getSystemService(Context.VIBRATOR_SERVICE))); vibrate.vibrate(500); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4606/buggy-version/app.src.main.java.corem.eldad.molestrike.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "8b16b58da229ca40741f16eacc6def3243bce5b3", "Url": "https://api.github.com/repos/Eldad7/MoleStrike", "Date": "2017-01-21T19:45:07Z"},
{"Line": "=>682", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hitSound) { android.os.Vibrator vibrate = ((android.os.Vibrator) (getApplicationContext().getSystemService(Context.VIBRATOR_SERVICE))); vibrate.vibrate(500); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4606/buggy-version/app.src.main.java.corem.eldad.molestrike.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "8b16b58da229ca40741f16eacc6def3243bce5b3", "Url": "https://api.github.com/repos/Eldad7/MoleStrike", "Date": "2017-01-21T19:45:07Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.getCollideTypes().contains(colliding.getType())) { if (colliding.getCollideTypes().contains(e.getType())) { if (!(motiony(colliding, java.lang.Math.signum(preferredy)))) { return false; } }else { return false; } }else if (colliding.getCollideTypes().contains(e.getType())) { motiony(colliding, java.lang.Math.signum(preferredy)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8710/buggy-version/CodenameG.src.edu.chl.codenameg.model.World.java", "BodyUseAPI": ["edu.chl.codenameg.model.Entity.getType()", "edu.chl.codenameg.model.World.motiony(edu.chl.codenameg.model.Entity,float)", "edu.chl.codenameg.model.World.motiony(edu.chl.codenameg.model.Entity,float)", "edu.chl.codenameg.model.Entity.getType()", "edu.chl.codenameg.model.Entity.getCollideTypes()", "colliding.getCollideTypes().contains(e.getType())", "colliding.getCollideTypes().contains(e.getType())", "edu.chl.codenameg.model.Entity.getCollideTypes()"], "Fixed commit": "0b944e549d5e79164fc2e4f4e36168eda30d725e", "Url": "https://api.github.com/repos/simphax/CodenameG", "Date": "2012-03-31T12:13:46Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((cz.larpovadatabaze.security.CsldAuthenticatedWebSession) (cz.larpovadatabaze.security.CsldAuthenticatedWebSession.get())).getLoggedUser()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (logged != null) { if ((logged.getRole()) > (CsldRoles.USER.getRole())) { visible = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8445/buggy-version/src.main.java.cz.larpovadatabaze.components.panel.game.DeleteGamePanel.java", "BodyUseAPI": ["cz.larpovadatabaze.entities.CsldUser.getRole()"], "Fixed commit": "2d1d17ef5b3212c2f79bd5e57c0010e6e4b56e51", "Url": "https://api.github.com/repos/CSLD/CSLD", "Date": "2013-08-16T06:17:47Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((elimina.get4_capita()) == null) && (elimina.get5_treballen().isEmpty())) { vaixell.elimina(elimina); }else { throw new exceptions.VaixellRelacionatException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/780/buggy-version/src.model.Model.java", "BodyUseAPI": ["model.ClasseDAO<entitats.Vaixell>.elimina(entitats.Vaixell)"], "Fixed commit": "ec10015f5290e0f431f67260fb209c5df7c3bb7b", "Url": "https://api.github.com/repos/davidmgilo/ProjecteHibernate", "Date": "2017-03-22T17:32:19Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((deviceInfos.size()) == 0) { deviceInfos = org.apache.tajo.storage.v2.DiskUtil.getDefaultDiskDeviceInfos(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2089/buggy-version/tajo-storage.src.main.java.org.apache.tajo.storage.v2.ScanScheduler.java", "BodyUseAPI": [], "Fixed commit": "446510393a43b309b9252f84cd77007ebfe5a38b", "Url": "https://api.github.com/repos/hyunsik/tajo", "Date": "2014-05-07T15:20:35Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prompt.isMasking()) && ((prompt.getMask()) == 0)) { return new char[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2434/buggy-version/src.main.java.org.jboss.aesh.console.Buffer.java", "BodyUseAPI": [], "Fixed commit": "284da12de8d659b55af4c9f76b7f6c3fea32f376", "Url": "https://api.github.com/repos/stalep/aesh", "Date": "2015-06-23T06:52:13Z"},
{"Line": "=>1459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((calendarMode) == (CalendarMode.MONTHS)) { if ((allowClickDaysOutsideCurrentMonth) || (currentMonth == selectedMonth)) { if (currentMonth > selectedMonth) { goToPrevious(); }else if (currentMonth < selectedMonth) { goToNext(); } onDateClicked(dayView.getDate(), (!(dayView.isChecked()))); } }else { onDateClicked(dayView.getDate(), (!(dayView.isChecked()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8435/buggy-version/library.src.main.java.com.prolificinteractive.materialcalendarview.MaterialCalendarView.java", "BodyUseAPI": [], "Fixed commit": "6e252feffa51d2fd3c48121409f584e46d0fadf1", "Url": "https://api.github.com/repos/prolificinteractive/material-calendarview", "Date": "2016-05-12T20:26:54Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.axelor.apps.hr.db.LeaveLine.getLeaveManagementList()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((leaveManagementList != null) && (!(leaveManagementList.isEmpty()))) { for (com.axelor.apps.hr.db.LeaveManagement leaveManagement : leaveManagementList) { leaveLine.setQuantity(leaveLine.getQuantity().add(leaveManagement.getValue())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8679/buggy-version/axelor-human-resource.src.main.java.com.axelor.apps.hr.service.leave.management.LeaveManagementService.java", "BodyUseAPI": [], "Fixed commit": "1856a7f3d18b194fb433ca04395bb354fb039464", "Url": "https://api.github.com/repos/axelor/axelor-business-suite", "Date": "2015-08-05T13:37:23Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.maxSelectedLimit) == 0) { this.maxSelectedLimit = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4030/buggy-version/src.android.CameraLauncher.java", "BodyUseAPI": [], "Fixed commit": "03b2e38fb48909ad7ed2bf4efe63fe163e652441", "Url": "https://api.github.com/repos/kvofreelance/cordova-camera-plugin", "Date": "2015-04-11T15:43:21Z"},
{"Line": "=>997", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getRecurringMoratoriumOnPrincipalPeriods()) > 0) { return ((periodNumber > 0) && (periodNumber <= (getPrincipalGrace()))) || ((periodNumber > 0) && (((periodNumber - (getPrincipalGrace())) % ((this.getRecurringMoratoriumOnPrincipalPeriods()) + 1)) != 1)); }else { return (periodNumber > 0) && (periodNumber <= (getPrincipalGrace())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7902/buggy-version/fineract-provider.src.main.java.org.apache.fineract.portfolio.loanaccount.loanschedule.domain.LoanApplicationTerms.java", "BodyUseAPI": [], "Fixed commit": "c80eecc796b0406c5e2d761ca6a50ce3c2f3d586", "Url": "https://api.github.com/repos/binnygopinath/incubator-fineract", "Date": "2016-04-04T12:31:51Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (theirs == null) { theirs = defaultValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2579/buggy-version/plugins.com.google.cloud.tools.eclipse.appengine.localserver.src.com.google.cloud.tools.eclipse.appengine.localserver.server.LocalAppEngineServerLaunchConfigurationDelegate.java", "BodyUseAPI": [], "Fixed commit": "6ae617c202895a62cb546b677a3e88f21851f2a5", "Url": "https://api.github.com/repos/GoogleCloudPlatform/google-cloud-eclipse", "Date": "2017-02-14T17:34:46Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ours == null) { ours = defaultValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2579/buggy-version/plugins.com.google.cloud.tools.eclipse.appengine.localserver.src.com.google.cloud.tools.eclipse.appengine.localserver.server.LocalAppEngineServerLaunchConfigurationDelegate.java", "BodyUseAPI": [], "Fixed commit": "6ae617c202895a62cb546b677a3e88f21851f2a5", "Url": "https://api.github.com/repos/GoogleCloudPlatform/google-cloud-eclipse", "Date": "2017-02-14T17:34:46Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (categoryTypeId != (-1)) { unique.addAll(TempDB.CATEGORY_PRODUCT.get(categoryTypeId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1624/buggy-version/src.iit.csp595.domain.dao.ProductDao.java", "BodyUseAPI": ["TempDB.CATEGORY_PRODUCT.get(long)", "java.util.Set<iit.csp595.domain.object.Product>.addAll(TempDB.CATEGORY_PRODUCT.get(categoryTypeId))"], "Fixed commit": "b574e6690ac8d30e4b46f68577bc4fd5412086a2", "Url": "https://api.github.com/repos/philippannenko/csp-595", "Date": "2014-10-09T04:39:49Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.username) == null) || ((this.password) == null)) { this.username = java.lang.System.getenv(\"POSTGRESQL_USER\"); this.password = java.lang.System.getenv(\"PGPASSWORD\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6684/buggy-version/src.main.java.org.openshift.InsultGenerator.java", "BodyUseAPI": [], "Fixed commit": "1d7bbfaaed429a2c85d0ac1b92e3bc78dad564b2", "Url": "https://api.github.com/repos/jamboubou/insultapp-B", "Date": "2017-12-18T09:28:15Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(matcher.find())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5454/buggy-version/src.main.java.com.github.zzt93.syncer.common.util.RegexUtil.java", "BodyUseAPI": [], "Fixed commit": "3b27734eb3bb5477204895a8ed4127a762370ebc", "Url": "https://api.github.com/repos/zzt93/syncer", "Date": "2017-12-26T07:53:46Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((contentNegotiationManager) == null) { contentNegotiationManager = new org.springframework.web.accept.ContentNegotiationManager(new org.springframework.web.accept.HeaderContentNegotiationStrategy(), new org.springframework.web.accept.FixedContentNegotiationStrategy(defaultContentType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/212/buggy-version/src.main.java.cz.jirutka.spring.exhandler.RestHandlerExceptionResolver.java", "BodyUseAPI": [], "Fixed commit": "2102d4ffb3f340990e3401fc9dfca78ca31e8c74", "Url": "https://api.github.com/repos/jirutka/spring-rest-exception-handler", "Date": "2014-06-19T00:57:46Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(path.isEmpty())) fullPath = (path + \"/\") + f; else fullPath = f;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6077/buggy-version/dspace-xmlui.src.main.java.org.dspace.app.xmlui.cocoon.ConcatenationReader.java", "BodyUseAPI": [], "Fixed commit": "36cc9aa16c5feefc925b30801a572e9390b77be0", "Url": "https://api.github.com/repos/aucompbiker/DSpace", "Date": "2015-02-20T16:45:43Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (src.contains(\"/\")) { path = src.substring(0, src.lastIndexOf('/')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6077/buggy-version/dspace-xmlui.src.main.java.org.dspace.app.xmlui.cocoon.ConcatenationReader.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(char)", "java.lang.String.substring(int,int)"], "Fixed commit": "36cc9aa16c5feefc925b30801a572e9390b77be0", "Url": "https://api.github.com/repos/aucompbiker/DSpace", "Date": "2015-02-20T16:45:43Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (propertyTO.isMultiple()) className = propertyTO.getBag(); else className = propertyTO.getClassName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5772/buggy-version/jbpm-form-modeler-integrations.jbpm-form-modeler-data-modeler.src.main.java.org.jbpm.formModeler.dataModeler.model.DataModelerDataHolder.java", "BodyUseAPI": ["org.kie.workbench.common.screens.datamodeller.model.ObjectPropertyTO.getBag()", "org.kie.workbench.common.screens.datamodeller.model.ObjectPropertyTO.getClassName()"], "Fixed commit": "e1ccb3b08b6564d00db06141ff751c1771812b97", "Url": "https://api.github.com/repos/droolsjbpm/jbpm-form-modeler", "Date": "2013-07-11T12:09:51Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (k >= 0) { try { mClino = (java.lang.Integer.parseInt(c.substring(0, k))) / 100.0F; } catch (java.lang.NumberFormatException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4064/buggy-version/src.com.topodroid.DistoX.PhotoEditDialog.java", "BodyUseAPI": [], "Fixed commit": "0e4d31e18c5321af7ebe774ad04b2286ec181b80", "Url": "https://api.github.com/repos/marcocorvi/topodroid", "Date": "2017-10-18T11:16:28Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (k >= 0) { try { mAzimuth = (java.lang.Integer.parseInt(b.substring(0, k))) / 100.0F; } catch (java.lang.NumberFormatException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4064/buggy-version/src.com.topodroid.DistoX.PhotoEditDialog.java", "BodyUseAPI": [], "Fixed commit": "0e4d31e18c5321af7ebe774ad04b2286ec181b80", "Url": "https://api.github.com/repos/marcocorvi/topodroid", "Date": "2017-10-18T11:16:28Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Integer, java.lang.Integer>.get(pageno.pid)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((frametab[FrameNum].pin_count) == 0) { frametab[FrameNum].refbit = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/837/buggy-version/Minibase.src.bufmgr.BufMgr.java", "BodyUseAPI": [], "Fixed commit": "bf9b2cdb95a6c693e1acd9407b8548cec77a5c9e", "Url": "https://api.github.com/repos/gwalda19/hairy-wookie", "Date": "2014-08-17T02:08:16Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f == (eqtlmappingpipeline.metaqtl3.FDR.FileFormat.REDUCED)) { if (((snpcol == (-1)) || (pvalcol == (-1))) || ((probecol == (-1)) && (genecol == (-1)))) { java.lang.System.out.println((\"Column not found in permutation file: \" + fileString)); java.lang.System.out.println((\"PValue: \" + pvalcol)); java.lang.System.out.println((\"SNP: \" + snpcol)); java.lang.System.out.println((\"Probe: \" + probecol)); java.lang.System.out.println((\"Gene: \" + genecol)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8768/buggy-version/eqtl-mapping-pipeline.src.main.java.eqtlmappingpipeline.metaqtl3.FDR.java", "BodyUseAPI": [], "Fixed commit": "06e1cf0538e679575b844c8b3077375eaa05a125", "Url": "https://api.github.com/repos/molgenis/systemsgenetics", "Date": "2014-04-23T19:55:50Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cchmc.bmi.snpomics.annotation.reference.TranscriptAnnotation.getProtID()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((protein != null) && (!(protein.isEmpty()))) { sb.append(protein); sb.append(\":\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/569/buggy-version/src.main.java.org.cchmc.bmi.snpomics.annotation.interactive.HgvsProtName.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "aa34aeb2fea647265eec09c3e607ea322fb865ea", "Url": "https://api.github.com/repos/aplassard/SNPomics", "Date": "2012-10-18T17:31:40Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((feature.getScore()) < min) if ((feature.getScore()) < 0) min = 0; else min = feature.getScore();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2895/buggy-version/DataSourceClassificator.src.main.java.eu.innovation.engineering.prepocessing.featurextractor.FeatureExtractor.java", "BodyUseAPI": ["eu.innovation.engineering.util.featurextractor.Features.getScore()", "eu.innovation.engineering.util.featurextractor.Features.getScore()"], "Fixed commit": "ac54c942a62f409dcbf3d5dbcea6e728c514e956", "Url": "https://api.github.com/repos/luilom/DataSourceClassificator", "Date": "2017-09-04T12:53:14Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.momia.service.course.order.Order.getCourseIds()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((orderCourseIds.size()) >= 1) { cn.momia.api.course.dto.course.Course course = courseService.get(orderCourseIds.get(0)); subjectPackage.setCover(course.getCover()); }else { subjectPackage.setCover(subject.getCover()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3874/buggy-version/course.service-course.src.main.java.cn.momia.service.course.web.ctrl.OrderController.java", "BodyUseAPI": ["cn.momia.service.course.base.CourseService.get(java.lang.Long)", "java.util.List<java.lang.Long>.get(int)"], "Fixed commit": "d10d02224e3fe7449602aa1e3491628bfc166fbb", "Url": "https://api.github.com/repos/lovemomia/service", "Date": "2016-04-11T08:30:53Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) mCurrentIndex = savedInstanceState.getInt(com.leo.android.geoquiz.QuizActivity.KEY_INDEX, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8760/buggy-version/GeoQuiz.app.src.main.java.com.leo.android.geoquiz.QuizActivity.java", "BodyUseAPI": ["android.os.Bundle.getInt(java.lang.String,int)"], "Fixed commit": "7eb9182e4219440818f775786e3bda566a5d247d", "Url": "https://api.github.com/repos/TishkevichLeonid/AndroidApps", "Date": "2017-02-05T19:02:09Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.antlr.runtime.tree.Tree.getChild(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((child.getChild(0).getType()) == (husacct.analyse.infrastructure.antlr.java.JavaParser.METHOD_CALL)) { if ((child.getChild(0).getType()) == (husacct.analyse.infrastructure.antlr.java.JavaParser.DOT)) { delegateInvocation(child, \"invocMethod\"); } }else if ((child.getChild(0).getType()) == (husacct.analyse.infrastructure.antlr.java.JavaParser.DOT)) { delegateInvocation(child, \"accessPropertyOrField\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2656/buggy-version/src.husacct.analyse.task.analyser.java.JavaBlockScopeGenerator.java", "BodyUseAPI": ["husacct.analyse.task.analyser.java.JavaBlockScopeGenerator.delegateInvocation(org.antlr.runtime.tree.Tree,java.lang.String)", "org.antlr.runtime.tree.Tree.getChild(int)", "org.antlr.runtime.tree.Tree.getChild(int)", "husacct.analyse.task.analyser.java.JavaBlockScopeGenerator.delegateInvocation(org.antlr.runtime.tree.Tree,java.lang.String)", "child.getChild(0).getType()", "child.getChild(0).getType()"], "Fixed commit": "d20c13f7f271b175d5ce8d23e432cdd08121e59c", "Url": "https://api.github.com/repos/LinkeTony/HUSACCT-Tool-2012-Project", "Date": "2012-05-30T16:39:53Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((GROUNDER_OPTIONS.length) > 1) && (!(GROUNDER_OPTIONS[0].isEmpty()))) grounderCommand.addAll(java.util.Arrays.asList(GROUNDER_OPTIONS));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6285/buggy-version/src.main.java.at.aau.grounder.GrounderGringoImpl.java", "BodyUseAPI": ["java.util.Arrays.asList(java.lang.String[])", "java.util.List<java.lang.String>.addAll(java.util.List<java.lang.String>)"], "Fixed commit": "074e0680a4e2740a795e36495fd5d86ffee706bc", "Url": "https://api.github.com/repos/gaste/gringo-wrapper", "Date": "2015-09-10T07:31:20Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.milkbowl.vault.permission.Permission.getPrimaryGroup(org.bukkit.entity.Player)", "org.bukkit.block.Sign.getLine(SIGNLINES.GROUP)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (prevGroup != group) { if (cost > 0) { if (purchase(who, cost)) { proceed = true; }else who.sendMessage(org.bukkit.ChatColor.translateAlternateColorCodes('&', notEnoughMoney)); }else proceed = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3087/buggy-version/src.US.bittiez.SignRanks.main.java", "BodyUseAPI": [], "Fixed commit": "989d78b3892a12547043416b7e6503bb9193c2b9", "Url": "https://api.github.com/repos/bittiez/SignRanks", "Date": "2017-02-19T21:07:17Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item.getItem()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2386/buggy-version/src.main.java.com.vanhal.progressiveautomation.compat.mods.ThaumCraft.java", "BodyUseAPI": [], "Fixed commit": "ca3abd0ebed1155a1465df1307fbb73738bb504b", "Url": "https://api.github.com/repos/dshadowwolf/ProgressiveAutomation", "Date": "2016-05-08T06:06:44Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((++i) >= (expr.getLetClause().getParameters().size())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6143/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.core.expr.visitor.ToAbstractVisitor.java", "BodyUseAPI": [], "Fixed commit": "62df850362eee8f572d896221f173de3df89a495", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2017-06-27T16:31:50Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.joda.time.DateTimeZone.getDefault().getOffset(<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (offsetInMillis != 0) { offsetHours = offsetInMillis / ((60 * 60) * 1000); offsetMinutes = offsetInMillis % offsetHours; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3250/buggy-version/src.main.java.nl.surfnet.bod.util.Environment.java", "BodyUseAPI": [], "Fixed commit": "09da08615d0f5561e1dfc8b1dda5aa507adcb143", "Url": "https://api.github.com/repos/BandwidthOnDemand/bandwidth-on-demand", "Date": "2014-02-11T11:00:14Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((container.stackTagCompound) == null) { container.setTagCompound(new net.minecraft.nbt.NBTTagCompound()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2632/buggy-version/src.main.java.evilcraft.core.item.ItemBlockFluidContainer.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.setTagCompound(net.minecraft.nbt.NBTTagCompound)"], "Fixed commit": "14757f86c27f7b3a2bd77e3efb5e7087343ef3b4", "Url": "https://api.github.com/repos/rubensworks/EvilCraft", "Date": "2014-11-07T19:18:45Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.chaoscoders.konraid.party.PartyManager.getParty(p.getName())) == null) { Main.PARTY.put(p.getName(), new org.chaoscoders.konraid.party.BungeeParty(p, new java.util.ArrayList<java.lang.String>())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4726/buggy-version/src.main.java.org.chaoscoders.konraid.party.Commands.java", "BodyUseAPI": ["Main.PARTY.put(p.getName(),org.chaoscoders.konraid.party.BungeeParty)", "net.md_5.bungee.api.connection.ProxiedPlayer.getName()"], "Fixed commit": "e522ad0a51d4614e335e97acb6572c68d993a134", "Url": "https://api.github.com/repos/Konraid/BungeeParty", "Date": "2016-05-16T11:14:03Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["PlatformSpecifics.CPP_RE.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(m.matches())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5295/buggy-version/ch.hsr.ifs.sconsolidator.core.src.ch.hsr.ifs.sconsolidator.core.console.CompileErrorPatternMatcher.java", "BodyUseAPI": [], "Fixed commit": "b4d6cb2684746788625ae1a2c0cd93b453665ed7", "Url": "https://api.github.com/repos/mrueegg/SConsolidator", "Date": "2014-10-05T14:15:02Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((abs.getCorrespondingCallSite()) == null) && (!trackPath)) return this;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2959/buggy-version/src.soot.jimple.infoflow.data.SourceContextAndPath.java", "BodyUseAPI": [], "Fixed commit": "a3e8ab530d21161cbba4ce526b747638e4878ab7", "Url": "https://api.github.com/repos/jgarci40/soot-infoflow", "Date": "2014-11-25T13:35:49Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (abs == null) return this;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2959/buggy-version/src.soot.jimple.infoflow.data.SourceContextAndPath.java", "BodyUseAPI": [], "Fixed commit": "a3e8ab530d21161cbba4ce526b747638e4878ab7", "Url": "https://api.github.com/repos/jgarci40/soot-infoflow", "Date": "2014-11-25T13:35:49Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rootNode.getHeadChild()) != null) { if ((task.getChosenPathValue(0, 0)) > (rootNode.getHeadChild().getChosenPathValue(0, 0))) { rootNode.removeAllChildren(); rootNode.addChild(task); } }else { rootNode.addChild(task); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1697/buggy-version/src.chessAI.AIProcessor.java", "BodyUseAPI": ["chessAI.DecisionNode.removeAllChildren()", "chessAI.DecisionNode.addChild(chessAI.DecisionNode)", "chessAI.DecisionNode.getHeadChild()", "chessAI.DecisionNode.addChild(chessAI.DecisionNode)", "rootNode.getHeadChild().getChosenPathValue(int,int)"], "Fixed commit": "835209c44b282e45594d094b78770ca0a765cad8", "Url": "https://api.github.com/repos/gordoncaleb/ChessAI", "Date": "2012-05-14T21:17:58Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (notAlreadyReadyToPay <= 1.0E-10) portionToSwitch = 0.0; else portionToSwitch = (((readyToPayPortion[v][0]) * (alreadyReadyToPay + notAlreadyReadyToPay)) - alreadyReadyToPay) / notAlreadyReadyToPay;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5033/buggy-version/src.main.java.edu.berkeley.path.beats.control.Controller_HOT_Lookup.java", "BodyUseAPI": [], "Fixed commit": "a249eebed0429d323d7d34b1aa84723c3f7dbc0e", "Url": "https://api.github.com/repos/mawright/beats", "Date": "2016-05-13T16:58:10Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isInEditMode())) { init(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/9175/buggy-version/android.src.com.ggj2016.gregsbadday.TraceView.java", "BodyUseAPI": [], "Fixed commit": "2681dc6aca630f20512ada69a6c4c4245efd354c", "Url": "https://api.github.com/repos/obec/GGJ2016-Android", "Date": "2016-01-30T21:45:35Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isInEditMode())) { init(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/9175/buggy-version/android.src.com.ggj2016.gregsbadday.TraceView.java", "BodyUseAPI": [], "Fixed commit": "2681dc6aca630f20512ada69a6c4c4245efd354c", "Url": "https://api.github.com/repos/obec/GGJ2016-Android", "Date": "2016-01-30T21:45:35Z"},
{"Line": "=>664", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.android.bluetooth.opp.BluetoothOppTransfer.V) android.util.Log.v(com.android.bluetooth.opp.BluetoothOppTransfer.TAG, \"connectRfcommSocket\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1749/buggy-version/src.com.android.bluetooth.opp.BluetoothOppTransfer.java", "BodyUseAPI": [], "Fixed commit": "5311450c336350783662199925537122ca5a3a36", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-packages-apps-Bluetooth", "Date": "2017-01-26T02:21:32Z"},
{"Line": "=>831", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.android.bluetooth.opp.BluetoothOppTransfer.V) android.util.Log.v(com.android.bluetooth.opp.BluetoothOppTransfer.TAG, (\"markConnectionFailed \" + s));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1749/buggy-version/src.com.android.bluetooth.opp.BluetoothOppTransfer.java", "BodyUseAPI": [], "Fixed commit": "5311450c336350783662199925537122ca5a3a36", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-packages-apps-Bluetooth", "Date": "2017-01-26T02:21:32Z"},
{"Line": "=>833", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (s != null) { s.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1749/buggy-version/src.com.android.bluetooth.opp.BluetoothOppTransfer.java", "BodyUseAPI": ["android.bluetooth.BluetoothSocket.close()"], "Fixed commit": "5311450c336350783662199925537122ca5a3a36", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-packages-apps-Bluetooth", "Date": "2017-01-26T02:21:32Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((thisPost.getLocation()) == null) { loc = null; }else { loc = thisPost.getLocation().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6371/buggy-version/app.src.main.java.co.example.junjen.mobileinstagram.network.Network.java", "BodyUseAPI": ["thisPost.getLocation().toString()", "org.jinstagram.entity.users.feed.MediaFeedData.getLocation()"], "Fixed commit": "0df0110b667e24f4704615a2a637e713b0e9904c", "Url": "https://api.github.com/repos/UnimelbMC/Unigram", "Date": "2015-10-07T12:26:49Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (data1 != null) { topupDO.setData1((data1 + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/9043/buggy-version/fans.app.web.src.main.java.com.fans.web.webpage.screen.api.getPrepay.java", "BodyUseAPI": ["com.fans.dal.model.TopupDO.setData1(java.lang.String)"], "Fixed commit": "c6c1c8cc3330a91320766de2019a4856ef8c2906", "Url": "https://api.github.com/repos/bigblue311/fans", "Date": "2015-12-22T10:36:49Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((projectName.equals(\"crystal\")) && (type.equals(\"auto\"))) { result += (\" & \" + percent) + \"\\\\%\\\\ra\"; }else { result += (\" & \" + percent) + \"\\\\%\\\\pa\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/304/buggy-version/dt-impact-tracer.src.edu.washington.cs.dt.impact.Main.ResultsParser.java", "BodyUseAPI": [], "Fixed commit": "81c2ed26cc3a6ff86d7b79a32b70b89a53dc2eb7", "Url": "https://api.github.com/repos/winglam/dependent-tests-impact", "Date": "2016-03-05T19:57:00Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.api.component.ResourcePerspectives.as(java.lang.Class,org.sonar.api.resources.File)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (issuable != null) { issuable.addIssue(issuable.newIssueBuilder().ruleKey(ruleKey).message(\"This issue is generated on each file with a debt of one day\").build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8662/buggy-version/plugins.sonar-xoo-plugin.src.main.java.org.sonar.xoo.rule.OneDayDebtPerFileSensor.java", "BodyUseAPI": ["issuable.newIssueBuilder().ruleKey(ruleKey).message(\"This issue is generated on each file with a debt of one day\").build()", "issuable.newIssueBuilder().ruleKey(org.sonar.api.rule.RuleKey)", "org.sonar.api.issue.Issuable.newIssueBuilder()", "org.sonar.api.issue.Issuable.addIssue(issuable.newIssueBuilder().ruleKey(ruleKey).message(\"This issue is generated on each file with a debt of one day\").build())", "issuable.newIssueBuilder().ruleKey(ruleKey).message(java.lang.String)"], "Fixed commit": "87f680eb0ada77e40b13cbd0189d863091f3781c", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2015-11-03T13:49:29Z"},
{"Line": "=>883", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (aEvent.Name.equals(\"compressedAluminum\")) { gregtech.common.GT_OreDictUnificator.registerOre(OrePrefixes.compressed, Materials.Aluminium, aEvent.Ore); return; }else if (aEvent.Name.contains(\" \")) { GT_Log.ore.println((tModToName + \" is getting re-registered because the OreDict Name containing invalid spaces.\")); gregtech.common.GT_OreDictUnificator.registerOre(aEvent.Name.replaceAll(\" \", \"\"), gregtech.common.GT_Utility.copyAmount(1L, new java.lang.Object[]{ aEvent.Ore })); aEvent.Ore.setStackDisplayName(\"Invalid OreDictionary Tag\"); return; }else if (this.mInvalidNames.contains(aEvent.Name)) { GT_Log.ore.println((tModToName + \" is wrongly registered and therefor getting ignored.\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/174/buggy-version/src.main.java.gregtech.common.GT_Proxy.java", "BodyUseAPI": ["aEvent.Name.contains(java.lang.String)", "gregtech.common.GT_OreDictUnificator.registerOre(aEvent.Name.replaceAll(\" \", \"\"),gregtech.common.GT_Utility.copyAmount(1L, new java.lang.Object[]{ aEvent.Ore }))", "java.util.Collection<java.lang.String>.contains(aEvent.Name)", "gregtech.common.GT_Utility.copyAmount(long,java.lang.Object[])", "aEvent.Name.replaceAll(java.lang.String,java.lang.String)", "gregtech.common.GT_OreDictUnificator.registerOre(OrePrefixes.compressed,Materials.Aluminium,aEvent.Ore)", "aEvent.Ore.setStackDisplayName(java.lang.String)"], "Fixed commit": "4384688c079f5f945c0427ddc4c025e8a4abf29b", "Url": "https://api.github.com/repos/Blood-Asp/GT5-Unofficial", "Date": "2016-10-18T16:49:48Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (s != null) { textArea.append((s + (main.paddletask.ui.view.ReminderPanel.NEXT_LINE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4386/buggy-version/src.main.paddletask.ui.view.ReminderPanel.java", "BodyUseAPI": ["javax.swing.JTextArea.append(java.lang.String)"], "Fixed commit": "18848e53be81b3452bc82c49dd49867f0f528a4e", "Url": "https://api.github.com/repos/cs2103aug2015-f10-3j/main", "Date": "2015-11-07T06:08:53Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (javaxNamedAnn != null) { return javaxNamedAnn.value(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/121/buggy-version/src.main.java.org.codemined.blueprint.Stub.java", "BodyUseAPI": ["javax.inject.Named.value()"], "Fixed commit": "c48c3e8e79b2489c1181932ade6ea82f7082210d", "Url": "https://api.github.com/repos/wayward/Blueprint", "Date": "2012-03-14T01:47:07Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (id == null) setCurrentConversation(null); else setCurrentConversation(((uk.ac.cam.echo.data.Conversation) (uk.ac.cam.echo.server.HibernateUtil.getSession().load(uk.ac.cam.echo.server.models.ConversationModel.class, id))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4821/buggy-version/server.src.main.java.uk.ac.cam.echo.server.models.UserModel.java", "BodyUseAPI": ["uk.ac.cam.echo.server.HibernateUtil.getSession().load(java.lang.Class,java.lang.Long)", "uk.ac.cam.echo.server.models.UserModel.setCurrentConversation(((uk.ac.cam.echo.data.Conversation) (uk.ac.cam.echo.server.HibernateUtil.getSession().load(uk.ac.cam.echo.server.models.ConversationModel.class, id))))"], "Fixed commit": "521550df451f94275c93a2eebef5893753a7cec9", "Url": "https://api.github.com/repos/PetarV-/CSTIB-Echo", "Date": "2014-03-02T16:13:16Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((stepFrom != null) && ((stepFrom.getStation()) != null)) { builder.append(stepFrom.getStation().getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5978/buggy-version/domain-layer.src.main.java.be.raildelays.domain.railtime.Direction.java", "BodyUseAPI": ["be.raildelays.domain.railtime.Step.getStation()", "java.lang.StringBuilder.append(stepFrom.getStation().getName())", "stepFrom.getStation().getName()"], "Fixed commit": "8fadca39b90919b5b531fc93064a3590289d62c0", "Url": "https://api.github.com/repos/almex/Raildelays", "Date": "2013-01-13T00:40:07Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.faces.component.UINamingContainer.getSeparatorChar(javax.faces.context.FacesContext.getCurrentInstance())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((expression.charAt(0)) == sepChar) { expression = expression.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7773/buggy-version/impl.src.main.java.javax.faces.component.UIComponentBase.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "99d93f1890233a1fb1df1d225c4e5fffb0c87c30", "Url": "https://api.github.com/repos/javaserverfaces/mojarra", "Date": "2017-02-22T20:07:44Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (buttonPressedStack.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3610/buggy-version/nifty-renderer-slick.src.main.java.de.lessvoid.nifty.slick2d.input.AbstractSlickInputSystem.java", "BodyUseAPI": [], "Fixed commit": "a83daf95f73b0cfbd96e71df9461dd6887ae66b4", "Url": "https://api.github.com/repos/void256/nifty-gui", "Date": "2012-07-18T19:45:33Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ion.charAt(x)) == '(') { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1148/buggy-version/FormulaParsing.java", "BodyUseAPI": [], "Fixed commit": "4629b054f677f15dbbd5203da7fe83ca8c7f4280", "Url": "https://api.github.com/repos/ethanmac9/ChemTools", "Date": "2016-08-28T23:00:17Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(toBeAdded.isEmpty())) { elements.add((toBeAdded + ionNum)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1148/buggy-version/FormulaParsing.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "4629b054f677f15dbbd5203da7fe83ca8c7f4280", "Url": "https://api.github.com/repos/ethanmac9/ChemTools", "Date": "2016-08-28T23:00:17Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((formula.charAt((i + 1))) == ')') { i += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1148/buggy-version/FormulaParsing.java", "BodyUseAPI": [], "Fixed commit": "4629b054f677f15dbbd5203da7fe83ca8c7f4280", "Url": "https://api.github.com/repos/ethanmac9/ChemTools", "Date": "2016-08-28T23:00:17Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((formula.charAt(i)) == ')') { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1148/buggy-version/FormulaParsing.java", "BodyUseAPI": [], "Fixed commit": "4629b054f677f15dbbd5203da7fe83ca8c7f4280", "Url": "https://api.github.com/repos/ethanmac9/ChemTools", "Date": "2016-08-28T23:00:17Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mapedFile.isCleanupOver()) { java.io.File file = new java.io.File(mapedFile.getFileName()); if (file.exists()) { boolean success = file.delete(); if (!success) { com.alibaba.rocketmq.store.MapedFileQueue.log.error(\"Unable to delete dangling file: {}\", mapedFile.getFileName()); } } }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4830/buggy-version/rocketmq-store.src.main.java.com.alibaba.rocketmq.store.MapedFileQueue.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String,mapedFile.getFileName())", "com.alibaba.rocketmq.store.MapedFile.getFileName()", "com.alibaba.rocketmq.store.MapedFile.getFileName()"], "Fixed commit": "8f1ae23ae8aeee951861acde90c85d09ebbda352", "Url": "https://api.github.com/repos/lizhanhui/Alibaba_RocketMQ", "Date": "2016-08-31T10:54:36Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mcjty.rftools.blocks.teleporter.MatterTransmitterTileEntity.getTeleportId()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (teleportId == null) { mcjty.rftools.network.ReturnDestinationInfoHelper.id = null; }else { if (((java.lang.System.currentTimeMillis()) - (mcjty.rftools.blocks.teleporter.MatterTransmitterBlock.lastTime)) > 500) { mcjty.rftools.blocks.teleporter.MatterTransmitterBlock.lastTime = java.lang.System.currentTimeMillis(); RFToolsMessages.INSTANCE.sendToServer(new mcjty.rftools.network.PacketGetDestinationInfo(teleportId)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2424/buggy-version/src.main.java.mcjty.rftools.blocks.teleporter.MatterTransmitterBlock.java", "BodyUseAPI": ["RFToolsMessages.INSTANCE.sendToServer(mcjty.rftools.network.PacketGetDestinationInfo)"], "Fixed commit": "1cbcb95ab5d4048e1f3fbe7b578640ba18a68d60", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2016-06-30T09:16:04Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((board[indexY][(indexX + 1)]) == opponentPiece) { int index = 0; for (int i = indexX + 2; i <= 7; i++) { if ((board[indexY][i]) == 0) { validDirection = false; break; }else if ((board[indexY][i]) == playerPiece) { validDirection = true; index = i; break; }else if (i == 7) { validDirection = false; break; } } java.lang.System.out.println(validDirection); if (validDirection) { java.lang.System.out.println(\"success\"); for (int i = indexX + 1; i < index; i++) { java.lang.System.out.println(\"loop entered\"); piecesToFlip.add(indexY); piecesToFlip.add(i); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1708/buggy-version/src.application.PlayerLogic.java", "BodyUseAPI": ["java.util.ArrayList.add(int)"], "Fixed commit": "0cbf51b57488baba15d96c66f090c07fe90689eb", "Url": "https://api.github.com/repos/nabeelrafid/reversi", "Date": "2017-06-01T01:42:46Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((memberEnd.getReferencedElement().getAggregation()) == (de.cooperateproject.modeling.textual.cls.utils.ClsConversionUtilities.convert(memberEnd.getAggregationKind()))) { memberEnd.unsetAggregationKind(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2969/buggy-version/bundles.de.cooperateproject.modeling.textual.cls.src.de.cooperateproject.modeling.textual.cls.derivedstate.remover.XtextAssociationRemover.java", "BodyUseAPI": ["de.cooperateproject.modeling.textual.cls.cls.AssociationMemberEnd.unsetAggregationKind()"], "Fixed commit": "c3907e009a6e6e6c68ad8ba64af080292b4e4d68", "Url": "https://api.github.com/repos/Cooperate-Project/CooperateModelingEnvironment", "Date": "2017-06-09T13:37:20Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isPaused)) { play.setBackgroundResource(R.drawable.play); counter.setStoped(true); isPaused = true; Counter.setText(\"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5180/buggy-version/src.contador.piedras.jugger.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e1051faaff8469865b8d48ff4c1954c3c95f7dd4", "Url": "https://api.github.com/repos/Diphendara/JuggerStones", "Date": "2015-05-11T18:50:15Z"},
{"Line": "=>1014", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchView) != null) { outState.putBoolean(com.owncloud.android.ui.activity.FileDisplayActivity.KEY_IS_SEARCH_OPEN, (!(mSearchView.isIconified()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8276/buggy-version/src.main.java.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "2aaad2e24e27f6267719d81a14f713e32bc70b0e", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-23T10:00:13Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((orientedPrinters != null) && (!(orientedPrinters.isEmpty()))) { for (java.lang.String orientedPrinter : orientedPrinters.split(\",\")) { reqPrint.addPrinter(java.lang.Integer.parseInt(orientedPrinter)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3824/buggy-version/terminal.web.src.com.wireless.Actions.client.member.OperateMemberAction.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "5ac8d58ca5f639548ffa970bc8d81780eadf6aeb", "Url": "https://api.github.com/repos/yzhang1981/wireless-order-solution", "Date": "2016-01-20T07:13:44Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.PushbackReader.read()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (compilerproject.scanner.CMinusScanner.LETTERS.contains(java.lang.Character.toString(current))) { if (returnErrors) { tokenNotFound = false; result = new compilerproject.scanner.Token(TokenType.ERROR, tokenData.toString()); }else { tokenData.delete(0, tokenData.length()); state = CMinusScannerState.START; } }else if (!(compilerproject.scanner.CMinusScanner.DIGITS.contains(java.lang.Character.toString(current)))) { tokenData.deleteCharAt(((tokenData.length()) - 1)); in.unread(current); tokenNotFound = false; result = new compilerproject.scanner.Token(TokenType.NUMBER, tokenData.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/978/buggy-version/CompilerProject.src.compilerproject.scanner.CMinusScanner.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.io.PushbackReader.unread(char)", "java.lang.Character.toString(char)"], "Fixed commit": "7d3f3f0e7c299e1c7cdc86ab59a198e2c99bd9d7", "Url": "https://api.github.com/repos/jvolante/Compiler_Project", "Date": "2017-02-08T17:02:12Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.PushbackReader.read()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (compilerproject.scanner.CMinusScanner.DIGITS.contains(java.lang.Character.toString(current))) { if (returnErrors) { tokenNotFound = false; result = new compilerproject.scanner.Token(TokenType.ERROR, tokenData.toString()); }else { tokenData.delete(0, tokenData.length()); state = CMinusScannerState.START; } }else if (!(compilerproject.scanner.CMinusScanner.LETTERS.contains(java.lang.Character.toString(current)))) { tokenData.deleteCharAt(((tokenData.length()) - 1)); in.unread(current); tokenNotFound = false; java.lang.String tokenString = tokenData.toString(); if ((tokenString.compareTo(\"else\")) == 0) { result = new compilerproject.scanner.Token(TokenType.ELSE, tokenString); }else if ((tokenString.compareTo(\"if\")) == 0) { result = new compilerproject.scanner.Token(TokenType.IF, tokenString); }else if ((tokenString.compareTo(\"int\")) == 0) { result = new compilerproject.scanner.Token(TokenType.INT, tokenString); }else if ((tokenString.compareTo(\"return\")) == 0) { result = new compilerproject.scanner.Token(TokenType.RETURN, tokenString); }else if ((tokenString.compareTo(\"void\")) == 0) { result = new compilerproject.scanner.Token(TokenType.VOID, tokenString); }else if ((tokenString.compareTo(\"while\")) == 0) { result = new compilerproject.scanner.Token(TokenType.WHILE, tokenString); }else { result = new compilerproject.scanner.Token(TokenType.IDENTIFIER, tokenString); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/978/buggy-version/CompilerProject.src.compilerproject.scanner.CMinusScanner.java", "BodyUseAPI": ["java.lang.Character.toString(char)", "java.io.PushbackReader.unread(char)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "7d3f3f0e7c299e1c7cdc86ab59a198e2c99bd9d7", "Url": "https://api.github.com/repos/jvolante/Compiler_Project", "Date": "2017-02-08T17:02:12Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (dayCard != null) mData.add(dayCard);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7395/buggy-version/app.src.main.java.com.maxiee.heartbeat.data.EventManager.java", "BodyUseAPI": ["java.util.ArrayList<com.maxiee.heartbeat.model.DayCard>.add(com.maxiee.heartbeat.model.DayCard)"], "Fixed commit": "6eaae7cd5aa6559d90f462aa538fc74bee921023", "Url": "https://api.github.com/repos/maxiee/HeartBeat", "Date": "2016-01-25T04:51:05Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ACTIVITY_CODE) == (MainActivity.ACTIVITY_DISPLAY_CODE)) { android.util.Log.d(\"ListItem\", ((\"contact id for: \" + (id)) + \" was clicked\")); if (!(contact.getURL().equals(\"\"))) { android.content.Intent goTo = new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse((\"http://\" + (contact.getURL())))); context.startActivity(goTo); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8997/buggy-version/app.src.main.java.com.example.jokel.hw2_contacts.ListItem.java", "BodyUseAPI": [], "Fixed commit": "81a29fe117e07fbaec1efe6234913b967d11b5fc", "Url": "https://api.github.com/repos/josiahls/HW2_Contacts", "Date": "2017-09-20T02:04:13Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ai.paas.ipaas.ccs.inner.CCSComponentFactory.getConfigClient(authResult.getConfigAddr(), authResult.getConfigUser(), authResult.getConfigPasswd()).get(java.lang.String,com.ai.paas.ipaas.search.service.SearchClientFactory.SesWatch)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.ai.paas.ipaas.util.StringUtil.isBlank(idConf)) { com.google.gson.JsonObject idObj = gson.fromJson(idConf, com.google.gson.JsonObject.class); id = (null != (idObj.get(\"indexPK\"))) ? idObj.get(\"indexPK\").getAsString() : null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8829/buggy-version/sdk-ses-srv.src.main.java.com.ai.paas.ipaas.search.service.SearchClientFactory.java", "BodyUseAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Fixed commit": "ba148f3ed34e12aba2b1d5e5cb37972dc0e3d6d2", "Url": "https://api.github.com/repos/AIPaaS/service-sdk-ses", "Date": "2016-08-04T08:21:42Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(f.exists())) f = org.dyndns.fzoli.rccar.ui.UIUtil.createFile(f.getPath(), f);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4752/buggy-version/src.org.dyndns.fzoli.rccar.controller.Config.java", "BodyUseAPI": ["java.io.File.getPath()", "org.dyndns.fzoli.rccar.ui.UIUtil.createFile(java.lang.String,java.io.File)"], "Fixed commit": "5b88419eb7b2976744677bd39b6c8247061c62ce", "Url": "https://api.github.com/repos/fzoli/RemoteControlCar", "Date": "2013-03-25T23:53:49Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4752/buggy-version/src.org.dyndns.fzoli.rccar.controller.Config.java", "BodyUseAPI": [], "Fixed commit": "5b88419eb7b2976744677bd39b6c8247061c62ce", "Url": "https://api.github.com/repos/fzoli/RemoteControlCar", "Date": "2013-03-25T23:53:49Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getLongExtra(SurveyFragment.EXTRA_INSTRUMENT_ID,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (instrumentId > (-1)) { android.content.Intent i = new android.content.Intent(context, org.adaptlab.chpir.android.survey.SurveyActivity.class); i.putExtra(SurveyFragment.EXTRA_INSTRUMENT_ID, instrumentId); i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); context.startActivity(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2379/buggy-version/src.org.adaptlab.chpir.android.survey.Receivers.SurveyLaunchReceiver.java", "BodyUseAPI": ["android.content.Intent.putExtra(SurveyFragment.EXTRA_INSTRUMENT_ID,java.lang.Long)"], "Fixed commit": "ddb0d3305d11ab09767c77b274493c1abd7694f2", "Url": "https://api.github.com/repos/mnipper/AndroidSurvey", "Date": "2014-02-04T20:59:49Z"},
{"Line": "=>899", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.max((-(seeGain[(d - 1)])), seeGain[d])) < 0) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3322/buggy-version/core.src.main.java.com.alonsoruibal.chess.Board.java", "BodyUseAPI": [], "Fixed commit": "354dd947bdc4d452f72346d6b8492c462f819a44", "Url": "https://api.github.com/repos/albertoruibal/carballo", "Date": "2015-03-08T08:30:00Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(new java.io.File(((Player.SCORE_PATH) + (this.name))).isFile())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8205/buggy-version/Player.java", "BodyUseAPI": [], "Fixed commit": "705b1cf623f951b79a1ab88ae338741fa38f5aa1", "Url": "https://api.github.com/repos/xavierleblond/rushHour", "Date": "2014-02-24T17:10:14Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(net.litelite.easyrtc.Peer.rtcInitialized)) { org.webrtc.PeerConnectionFactory.initializeAndroidGlobals(context, true); org.webrtc.PeerConnectionFactory.initializeFieldTrials(\"\"); net.litelite.easyrtc.Peer.rtcInitialized = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6393/buggy-version/library.src.main.java.net.litelite.easyrtc.Peer.java", "BodyUseAPI": [], "Fixed commit": "c6ad7bb0b4e2cca5c109e580d083c1903dc1d202", "Url": "https://api.github.com/repos/lyokato/easyrtc", "Date": "2017-08-24T06:51:54Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e == null) { return com.carmatechnologies.utilities.xml.XmlStreamFilterCliFactory.EMPTY_STRING; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7145/buggy-version/src.main.java.com.carmatechnologies.utilities.xml.XmlStreamFilterCliFactory.java", "BodyUseAPI": [], "Fixed commit": "7e5980e04295c06ef4e0a7794b974b44c7a92992", "Url": "https://api.github.com/repos/marccarre/xml-stream-filter", "Date": "2015-08-30T05:30:33Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mKeyboard_open) { mKeyboard_open = false; mSendCmdEdittext.clearFocus(); mCmdListview.requestFocus(); android.util.Log.d(my.home.lehome.fragment.ChatFragment.TAG, \"keyboard hide.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2559/buggy-version/app.src.main.java.my.home.lehome.fragment.ChatFragment.java", "BodyUseAPI": [], "Fixed commit": "f7d774f0ce7ed51d59cfcd7afcf41f1f197bbac5", "Url": "https://api.github.com/repos/legendmohe/LEHomeMobile_android", "Date": "2015-04-11T03:25:45Z"},
{"Line": "=>584", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.vanhal.progressiveautomation.PAConfig.fuelCost) == 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4461/buggy-version/src.main.java.com.vanhal.progressiveautomation.entities.BaseTileEntity.java", "BodyUseAPI": [], "Fixed commit": "f91bc7e8fe8bb8ea17c4ab57f81e1053349b2780", "Url": "https://api.github.com/repos/Vanhal/ProgressiveAutomation", "Date": "2016-07-21T13:03:11Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((stack != null) && ((stack.getItem()) != null)) { return (stack.getUnlocalizedName().compareToIgnoreCase(\"tile.mfr.rubberwood.sapling\")) == 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4461/buggy-version/src.main.java.com.vanhal.progressiveautomation.compat.mods.MFR.java", "BodyUseAPI": ["stack.getUnlocalizedName().compareToIgnoreCase(java.lang.String)", "net.minecraft.item.ItemStack.getUnlocalizedName()"], "Fixed commit": "f91bc7e8fe8bb8ea17c4ab57f81e1053349b2780", "Url": "https://api.github.com/repos/Vanhal/ProgressiveAutomation", "Date": "2016-07-21T13:03:11Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cyclon.system.peer.cyclon.CyclonSample.getSample()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(sampleNodes.isEmpty())) { java.util.Random random = new java.util.Random(); common.peer.PeerAddress peer = sampleNodes.get(random.nextInt(sampleNodes.size())); trigger(new search.system.peer.search.IndexShuffleRequest(self, peer, missingIndices, lastIndex), networkPort); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4458/buggy-version/search.src.main.java.search.system.peer.search.Search.java", "BodyUseAPI": ["java.util.Random.nextInt(sampleNodes.size())", "java.util.ArrayList<common.peer.PeerAddress>.size()", "java.util.ArrayList<common.peer.PeerAddress>.get(int)"], "Fixed commit": "6922476af09a7417e52a5685addedb8fcdbf3267", "Url": "https://api.github.com/repos/atamborrino/id2210-vt13", "Date": "2013-04-17T16:32:10Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (action.equals(Types.DNONE)) return Types.MOVEMENT.STILL; else return Types.MOVEMENT.MOVE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8538/buggy-version/src.ontology.physics.ContinuousPhysics.java", "BodyUseAPI": [], "Fixed commit": "f3f5acdd9188568d718ea5395975138465966a87", "Url": "https://api.github.com/repos/EssexUniversityMCTS/gvgai", "Date": "2017-05-21T14:30:42Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((set.size()) > 0) { qf.doUpdate(table, set, tid); player.sendMessage(((((plugin.pluginName) + \"The position of the TARDIS \") + blockName) + \" was updated successfully.\")); }else { player.sendMessage(((((plugin.pluginName) + \"You didn't click the correct type of block for the \") + blockName) + \"! Try the command again.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1353/buggy-version/src.main.java.me.eccentric_nz.TARDIS.listeners.TARDISUpdateListener.java", "BodyUseAPI": ["me.eccentric_nz.TARDIS.database.QueryFactory.doUpdate(java.lang.String,java.util.HashMap<java.lang.String, java.lang.Object>,java.util.HashMap<java.lang.String, java.lang.Object>)"], "Fixed commit": "4b8a0ec65005ec314acb365dda7aef79c001970b", "Url": "https://api.github.com/repos/eccentricdevotion/TARDIS", "Date": "2013-02-10T00:47:06Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mDatabase) != null) && (mDatabase.isOpen())) { mDatabase.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/9122/buggy-version/debug-db.src.main.java.com.amitshekhar.server.RequestHandler.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.close()"], "Fixed commit": "992305e45a9cc8455c0526640838c32d5a25b50e", "Url": "https://api.github.com/repos/vinayagasundar/Android-Debug-Database", "Date": "2017-02-07T06:14:19Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.block.BlockBreakEvent.getBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (mine.getRegion().isLocationInRegion(b.getLocation())) mine.recountBlocks();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7575/buggy-version/src.com.wolvencraft.prison.mines.events.BlockBreakListener.java", "BodyUseAPI": ["com.wolvencraft.prison.mines.mine.Mine.recountBlocks()"], "Fixed commit": "d1e568e05da2774a3188cc5349dfda5521406414", "Url": "https://api.github.com/repos/bitWolfy/PrisonMine", "Date": "2012-12-11T14:12:16Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6432/buggy-version/src.main.java.com.silicolife.textmining.processes.ir.patentpipeline.components.searchmodule.bing.entities.BingUtils.java", "BodyUseAPI": [], "Fixed commit": "e564cc4eb48f8ffc68f7bfab75e1e8ed827cd383", "Url": "https://api.github.com/repos/biotextmining/processes", "Date": "2017-05-03T10:25:29Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.terasology.logic.behavior.tree.Task.update(float)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((newStatus == (Status.FAILURE)) || (newStatus == (Status.SUCCESS))) { onTerminate(status); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1487/buggy-version/engine.src.main.java.org.terasology.logic.behavior.tree.Task.java", "BodyUseAPI": [], "Fixed commit": "846e94303956d5e7316d82e15a905b0ddb082388", "Url": "https://api.github.com/repos/portokaliu/Terasology", "Date": "2016-03-19T05:20:31Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getMinCost()) != null) && ((r.getCost().getValue()) >= (getMinCost().getValue()))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2003/buggy-version/RBuddy.src.com.js.rbuddy.ReceiptFilter.java", "BodyUseAPI": [], "Fixed commit": "bb0a8012b0a35118a553f285fbbb114449c140da", "Url": "https://api.github.com/repos/jpsember/RBuddy", "Date": "2014-07-08T01:25:36Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (d != null) { com.js.rbuddy.JSDate filter_min_date = this.getMinDate(); com.js.rbuddy.JSDate filter_max_date = this.getMaxDate(); if (filter_min_date != null) { if ((d.year()) < (filter_min_date.year())) { pr(\"input date year is less than the filter date year...\"); return false; }else if ((d.year()) == (filter_min_date.year())) { if ((d.month()) < (filter_min_date.month())) { pr(\"input date month is less than the filter date month...\"); return false; }else if ((d.month()) == (filter_min_date.month())) { if ((d.day()) < (filter_min_date.day())) { pr(\"input date day is less than filter date day...\"); return false; } } } } if (filter_max_date != null) { if ((d.year()) > (filter_max_date.year())) { pr(\"input date year is greater than the filter date year...\"); return false; }else if ((d.year()) == (filter_max_date.year())) { if ((d.month()) > (filter_max_date.month())) { pr(\"input date month is greater than the filter date month...\"); return false; }else if ((d.month()) == (filter_max_date.month())) { if ((d.day()) > (filter_max_date.day())) { pr(\"input date day is greater than filter date day...\"); return false; } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2003/buggy-version/RBuddy.src.com.js.rbuddy.ReceiptFilter.java", "BodyUseAPI": ["com.js.rbuddy.JSDate.year()", "com.js.rbuddy.JSDate.year()", "com.js.rbuddy.JSDate.month()", "com.js.rbuddy.JSDate.month()", "com.js.rbuddy.JSDate.month()", "com.js.rbuddy.JSDate.month()", "com.js.rbuddy.JSDate.year()", "com.js.rbuddy.JSDate.year()", "com.js.rbuddy.JSDate.day()", "com.js.rbuddy.JSDate.day()"], "Fixed commit": "bb0a8012b0a35118a553f285fbbb114449c140da", "Url": "https://api.github.com/repos/jpsember/RBuddy", "Date": "2014-07-08T01:25:36Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (c != null) { com.js.rbuddy.Cost filter_min_cost = this.getMinCost(); if (filter_min_cost != null) { if ((c.getValue()) < (filter_min_cost.getValue())) { pr(\"input cost is less than the filter minimum cost...\"); return false; } } com.js.rbuddy.Cost filter_max_cost = this.getMaxCost(); if (filter_max_cost != null) { if ((c.getValue()) > (filter_max_cost.getValue())) { pr(\"input cost is more than the filter maximum cost...\"); return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2003/buggy-version/RBuddy.src.com.js.rbuddy.ReceiptFilter.java", "BodyUseAPI": ["com.js.rbuddy.Cost.getValue()", "com.js.rbuddy.Cost.getValue()"], "Fixed commit": "bb0a8012b0a35118a553f285fbbb114449c140da", "Url": "https://api.github.com/repos/jpsember/RBuddy", "Date": "2014-07-08T01:25:36Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (error.get(\"error\").isObject()) { this.errorMessage = error.get(\"error\").asObject().get(\"message\").asString(); }else { this.errorMessage = error.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5919/buggy-version/src.main.java.org.nuxeo.onedrive.client.OneDriveAPIException.java", "BodyUseAPI": [], "Fixed commit": "fd9f28f38c139a3a792d85e9b4be801c2cc8a4fd", "Url": "https://api.github.com/repos/iterate-ch/onedrive-java-client", "Date": "2017-08-11T13:38:43Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((formulaString != null) && (!(formulaString.equals(\"\")))) formula = org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator.getMolecularFormula(formulaString, org.openscience.cdk.DefaultChemObjectBuilder.getInstance());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1784/buggy-version/src.main.java.io.github.mzmine.modules.identification.ms.localdatabasesearch.LocalDatabaseSearchModule.java", "BodyUseAPI": ["org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator.getMolecularFormula(java.lang.String,org.openscience.cdk.DefaultChemObjectBuilder.getInstance())"], "Fixed commit": "a69bc4ab45cb5e5e9915dfba065c6d37d0ecb48c", "Url": "https://api.github.com/repos/photocyte/mzmine3", "Date": "2015-12-16T08:44:37Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((lineArray.length) > 5) { java.lang.String adductString = lineArray[5]; if ((adductString != null) && (!(adductString.equals(\"\")))) ionType = io.github.msdk.util.IonTypeUtil.createIonType(adductString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1784/buggy-version/src.main.java.io.github.mzmine.modules.identification.ms.localdatabasesearch.LocalDatabaseSearchModule.java", "BodyUseAPI": [], "Fixed commit": "a69bc4ab45cb5e5e9915dfba065c6d37d0ecb48c", "Url": "https://api.github.com/repos/photocyte/mzmine3", "Date": "2015-12-16T08:44:37Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["greycat.memory.OffHeapContainer.addrByIndex(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (addr == (OffHeapConstants.NULL_PTR)) { addr = allocate(Constants.MAP_INITIAL_CAPACITY); }else { size = greycat.memory.primary.OffHeapLongArray.get(addr, greycat.memory.OffHeapERelation.SIZE); long capacity = greycat.memory.primary.OffHeapLongArray.get(addr, greycat.memory.OffHeapERelation.CAPACITY); long neededCapacity = (eNodes.length) + size; if (neededCapacity > capacity) { final long closePowerOfTwo = ((long) (java.lang.Math.pow(2, java.lang.Math.ceil(((java.lang.Math.log(neededCapacity)) / (java.lang.Math.log(2))))))); addr = allocate(((greycat.memory.OffHeapERelation.OFFSET) + closePowerOfTwo)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8225/buggy-version/plugins.memory.src.main.java.greycat.memory.OffHeapERelation.java", "BodyUseAPI": ["greycat.memory.primary.OffHeapLongArray.get(long,int)", "greycat.memory.primary.OffHeapLongArray.get(long,int)"], "Fixed commit": "7247018460997fdc68856182f72ca8ee4e8d10d9", "Url": "https://api.github.com/repos/datathings/greycat", "Date": "2017-02-08T09:56:20Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((firstTime) == true) { createGUI(); firstTime = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2377/buggy-version/src.BooleanForest.Game.java", "BodyUseAPI": [], "Fixed commit": "234638d5a44202119fa9be612f2eb4062f5bb995", "Url": "https://api.github.com/repos/sethmenghi/boolean-forest", "Date": "2015-04-28T21:54:07Z"},
{"Line": "=>2736", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.almalence.opencam.cameracontroller.CameraController.cdt) != null) { com.almalence.opencam.cameracontroller.CameraController.cdt.cancel(); com.almalence.opencam.cameracontroller.CameraController.cdt = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4266/buggy-version/src.com.almalence.opencam.cameracontroller.CameraController.java", "BodyUseAPI": [], "Fixed commit": "d64eb1952cde50ee14de9688cc9e891062e17e00", "Url": "https://api.github.com/repos/almalence/OpenCamera", "Date": "2014-10-01T10:07:28Z"},
{"Line": "=>2478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.almalence.opencam.cameracontroller.CameraController.previewMode) == false) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4266/buggy-version/src.com.almalence.opencam.cameracontroller.CameraController.java", "BodyUseAPI": [], "Fixed commit": "d64eb1952cde50ee14de9688cc9e891062e17e00", "Url": "https://api.github.com/repos/almalence/OpenCamera", "Date": "2014-10-01T10:07:28Z"},
{"Line": "=>635", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (true == (prefs.contains(MainScreen.sExpoPreviewModePref))) { com.almalence.opencam.cameracontroller.CameraController.previewMode = prefs.getBoolean(MainScreen.sExpoPreviewModePref, true); }else com.almalence.opencam.cameracontroller.CameraController.previewMode = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4266/buggy-version/src.com.almalence.opencam.cameracontroller.CameraController.java", "BodyUseAPI": ["android.content.SharedPreferences.getBoolean(MainScreen.sExpoPreviewModePref,boolean)"], "Fixed commit": "d64eb1952cde50ee14de9688cc9e891062e17e00", "Url": "https://api.github.com/repos/almalence/OpenCamera", "Date": "2014-10-01T10:07:28Z"},
{"Line": "=>2773", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.almalence.opencam.cameracontroller.CameraController.cdt) != null) { com.almalence.opencam.cameracontroller.CameraController.cdt.cancel(); com.almalence.opencam.cameracontroller.CameraController.cdt = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4266/buggy-version/src.com.almalence.opencam.cameracontroller.CameraController.java", "BodyUseAPI": [], "Fixed commit": "d64eb1952cde50ee14de9688cc9e891062e17e00", "Url": "https://api.github.com/repos/almalence/OpenCamera", "Date": "2014-10-01T10:07:28Z"},
{"Line": "=>747", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.es.Board.getFromSquare(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fromSquare == 119) && (fromPiece instanceof com.es.pieces.Rook)) { blackKingCastle = false; }else if (((fromPiece instanceof com.es.pieces.Pawn) && ((fromSquare & 240) == 96)) && ((toSquare & 240) == 64)) { enPassant = fromSquare - 16; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5009/buggy-version/src.main.java.com.es.Board.java", "BodyUseAPI": [], "Fixed commit": "cce390ea46cdf5f464928994097f49f8088a86e6", "Url": "https://api.github.com/repos/wspeirs/chess", "Date": "2013-12-05T21:16:33Z"},
{"Line": "=>1967", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (n != null) { action += (n.getNodeValue().toLowerCase().replaceAll(\" action\", \"\").trim()) + \"; \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8967/buggy-version/src.cm.model.Stats.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "org.w3c.dom.Node.getNodeValue()", "java.lang.String.trim()", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "be9ce1fa349e83f5d8fdbcfcf59544a2e02809eb", "Url": "https://api.github.com/repos/mattakaslash/jcm", "Date": "2012-09-06T14:37:49Z"},
{"Line": "=>1972", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (n != null) { action += n.getNodeValue().toLowerCase().trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8967/buggy-version/src.cm.model.Stats.java", "BodyUseAPI": ["org.w3c.dom.Node.getNodeValue()", "java.lang.String.toLowerCase()", "java.lang.String.trim()"], "Fixed commit": "be9ce1fa349e83f5d8fdbcfcf59544a2e02809eb", "Url": "https://api.github.com/repos/mattakaslash/jcm", "Date": "2012-09-06T14:37:49Z"},
{"Line": "=>1836", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isWellSampleDataSelection(selected)) { return; }else if (selected instanceof omero.gateway.model.DataObject) { org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor visitor = new org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor(parent, ((omero.gateway.model.DataObject) (selected))); accept(visitor); foundNode = visitor.getSelectedNode(); if (foundNode != null) { if (multiSelection) model.addFoundNode(foundNode); else model.setSelectedDisplay(foundNode, true); view.setFoundNode(model.getSelectedDisplays()); }else view.setFoundNode(null); }else if (selected instanceof org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay) { foundNode = ((org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay) (selected)); if (multiSelection) model.addFoundNode(foundNode); else model.setSelectedDisplay(foundNode, true); view.setFoundNode(model.getSelectedDisplays()); }else if (selected instanceof java.util.List) { org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor visitor = new org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor(parent, ((java.util.List<omero.gateway.model.DataObject>) (selected))); accept(visitor); java.util.List<org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay> nodes = visitor.getSelectedNodes(); if ((nodes.size()) == 0) { view.setFoundNode(null); }else if ((nodes.size()) == 1) { model.setSelectedDisplay(nodes.get(0), true); view.setFoundNode(model.getSelectedDisplays()); }else { model.setSelectedDisplay(null, true); java.util.Iterator<org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay> i = nodes.iterator(); while (i.hasNext()) model.addFoundNode(i.next()); view.setFoundNode(model.getSelectedDisplays()); } }else if (selected instanceof java.lang.String) { model.setSelectedDisplay(null, true); view.setFoundNode(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3149/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.agents.treeviewer.browser.BrowserComponent.java", "BodyUseAPI": [], "Fixed commit": "b0f3d1297cf217691965d4e92d8c07655402651c", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2016-05-13T05:44:36Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasTextArray.get((parentCount - 1)))) { stringBuilder.append('>'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4595/buggy-version/library.src.main.java.ua.pp.ihorzak.alog.Utils.java", "BodyUseAPI": [], "Fixed commit": "0d2d945f82cc98ae1ab290524d8ab6b98dc256c5", "Url": "https://api.github.com/repos/IhorZak/ALog", "Date": "2016-09-28T10:23:47Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["parser.getText().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((text.length()) > 0) { stringBuilder.append(ua.pp.ihorzak.alog.Utils.escapeXmlSpecialCharacters(text)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4595/buggy-version/library.src.main.java.ua.pp.ihorzak.alog.Utils.java", "BodyUseAPI": ["ua.pp.ihorzak.alog.Utils.escapeXmlSpecialCharacters(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "0d2d945f82cc98ae1ab290524d8ab6b98dc256c5", "Url": "https://api.github.com/repos/IhorZak/ALog", "Date": "2016-09-28T10:23:47Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fusesource.hawtbuf.DataByteArrayInputStream.readShort()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size == 0) { throw new org.fusesource.mqtt.codec.ZeroLengthBufferException(\"Invalid message, buffer size is 0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6952/buggy-version/mqtt-client.src.main.java.org.fusesource.mqtt.codec.MessageSupport.java", "BodyUseAPI": [], "Fixed commit": "cdfd595b905f896c1ea2e5d38f18cc711ddb3593", "Url": "https://api.github.com/repos/fusesource/mqtt-client", "Date": "2014-02-17T16:53:09Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.entityDocumentProcessorRegistry.contains(entityDocumentProcessor))) { this.entityDocumentProcessors.add(entityDocumentProcessor); this.entityDocumentProcessorRegistry.add(entityDocumentProcessor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/9101/buggy-version/wdtk-datamodel.src.main.java.org.wikidata.wdtk.datamodel.interfaces.EntityDocumentProcessorBroker.java", "BodyUseAPI": ["java.util.HashSet<org.wikidata.wdtk.datamodel.interfaces.EntityDocumentProcessor>.add(org.wikidata.wdtk.datamodel.interfaces.EntityDocumentProcessor)", "java.util.List<org.wikidata.wdtk.datamodel.interfaces.EntityDocumentProcessor>.add(org.wikidata.wdtk.datamodel.interfaces.EntityDocumentProcessor)"], "Fixed commit": "49ad771f5014e77e5835f5b9b6d4fd8116306395", "Url": "https://api.github.com/repos/Wikidata/Wikidata-Toolkit", "Date": "2014-11-02T12:34:49Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(orderCustomerMapUpdates.isEmpty())) { orderCustomerMapCollection.bulkWrite(orderCustomerMapUpdates, new BulkWriteOptions().ordered(false)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/9004/buggy-version/src.main.java.XactProcessor.java", "BodyUseAPI": ["com.mongodb.client.MongoCollection<org.bson.Document>.bulkWrite(java.util.List<WriteModel<org.bson.Document>>,new BulkWriteOptions().ordered(false))"], "Fixed commit": "17e5ce39adef6c5b153fbd6e1289f1781a956e2e", "Url": "https://api.github.com/repos/DdMad/xact-mongodb-impl", "Date": "2016-11-11T00:28:17Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.ownerName.equals(authorName))) { player = org.bukkit.Bukkit.getOfflinePlayer(this.ownerName).getPlayer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2936/buggy-version/src.me.makskay.bukkit.tidy.IssueReport.java", "BodyUseAPI": ["org.bukkit.Bukkit.getOfflinePlayer(java.lang.String)", "org.bukkit.Bukkit.getOfflinePlayer(this.ownerName).getPlayer()"], "Fixed commit": "08110807be56af460958e8156a156ab2ec832e3a", "Url": "https://api.github.com/repos/makskay/Tidy", "Date": "2012-11-25T01:05:12Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((listIDs.get(event.getId())) == null) { list.add(eventSnapshot.getValue(br.com.sardinha.iohan.eventos.Class.Evento.class)); listIDs.put(event.getId(), event.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5607/buggy-version/app.src.main.java.br.com.sardinha.iohan.eventos.Activity.EventosActivity.java", "BodyUseAPI": ["br.com.sardinha.iohan.eventos.Class.Evento.getId()", "br.com.sardinha.iohan.eventos.Class.Evento.getId()", "java.util.Map<java.lang.String, java.lang.String>.put(event.getId(),event.getId())"], "Fixed commit": "ca39ff6931ae652fc104c7e798a7fad957ddc2e6", "Url": "https://api.github.com/repos/IohanSardinha/Eventos", "Date": "2017-10-03T23:34:18Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((listIDs.get(event.getId())) == null) { list.add(eventSnapshot.getValue(br.com.sardinha.iohan.eventos.Class.Evento.class)); listIDs.put(event.getId(), event.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5607/buggy-version/app.src.main.java.br.com.sardinha.iohan.eventos.Activity.EventosActivity.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(event.getId(),event.getId())", "br.com.sardinha.iohan.eventos.Class.Evento.getId()", "br.com.sardinha.iohan.eventos.Class.Evento.getId()"], "Fixed commit": "ca39ff6931ae652fc104c7e798a7fad957ddc2e6", "Url": "https://api.github.com/repos/IohanSardinha/Eventos", "Date": "2017-10-03T23:34:18Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue()) instanceof java.lang.Number) { builder.append(key); builder.append(\" = \"); builder.append(entry.getValue()); builder.append(\" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2006/buggy-version/database.src.main.java.com.epam.freelancer.database.dao.jdbc.GenericJdbcDao.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.Object)", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()"], "Fixed commit": "3a1ad37a06a7a273c173f2a29b8bbe8f8501b63b", "Url": "https://api.github.com/repos/BohdanTfx/freelancer", "Date": "2016-02-20T22:16:05Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["co.cask.cdap.internal.app.runtime.batch.dataset.output.MultipleOutputs.getNamedOutputsList(org.apache.hadoop.mapreduce.TaskAttemptContext)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((namedOutputsList.size()) > 1) { for (java.lang.String name : namedOutputsList) { java.lang.Class<? extends org.apache.hadoop.mapreduce.OutputFormat> namedOutputFormatClass = co.cask.cdap.internal.app.runtime.batch.dataset.output.MultipleOutputs.getNamedOutputFormatClass(context, name); org.apache.hadoop.mapreduce.TaskAttemptContext namedContext = co.cask.cdap.internal.app.runtime.batch.dataset.output.MultipleOutputs.getNamedTaskContext(context, name); org.apache.hadoop.mapreduce.OutputFormat<K, V> outputFormat = org.apache.hadoop.util.ReflectionUtils.newInstance(namedOutputFormatClass, namedContext.getConfiguration()); delegates.put(name, outputFormat.getOutputCommitter(namedContext)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3173/buggy-version/cdap-app-fabric.src.main.java.co.cask.cdap.internal.app.runtime.batch.dataset.output.MultipleOutputsMainOutputWrapper.java", "BodyUseAPI": [], "Fixed commit": "6329bb1eabf2f6dd7760d18b960937eabf29305a", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2017-08-19T07:54:48Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataSnapshot.child(\"photolink\").exists()) { com.squareup.picasso.Picasso.with(context).load(dataSnapshot.child(\"photolink\").getValue().toString()).fit().centerCrop().into(viewHolder.follow_imgview); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/547/buggy-version/app.src.main.java.com.hkapps.storykorner.FollowAdapter.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(context).load(dataSnapshot.child(\"photolink\").getValue().toString()).fit().centerCrop()", "com.squareup.picasso.Picasso.with(context).load(dataSnapshot.child(\"photolink\").getValue().toString()).fit()", "com.squareup.picasso.Picasso.with(context).load(dataSnapshot.child(\"photolink\").getValue().toString()).fit().centerCrop().into(viewHolder.follow_imgview)", "dataSnapshot.child(\"photolink\").getValue().toString()", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "com.squareup.picasso.Picasso.with(context).load(dataSnapshot.child(\"photolink\").getValue().toString())", "dataSnapshot.child(\"photolink\").getValue()"], "Fixed commit": "2513d30f866b8782c6048e8d21f57516ce152b84", "Url": "https://api.github.com/repos/hksapp/StoryKorner", "Date": "2017-08-04T17:35:53Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataSnapshot.child(\"photolink\").exists()) { com.squareup.picasso.Picasso.with(context).load(dataSnapshot.child(\"photolink\").getValue().toString()).fit().centerCrop().into(viewHolder.follow_imgview); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/547/buggy-version/app.src.main.java.com.hkapps.storykorner.FollowAdapter.java", "BodyUseAPI": ["dataSnapshot.child(\"photolink\").getValue().toString()", "com.squareup.picasso.Picasso.with(context).load(dataSnapshot.child(\"photolink\").getValue().toString()).fit().centerCrop().into(viewHolder.follow_imgview)", "dataSnapshot.child(\"photolink\").getValue()", "com.squareup.picasso.Picasso.with(context).load(dataSnapshot.child(\"photolink\").getValue().toString()).fit()", "com.squareup.picasso.Picasso.with(context).load(dataSnapshot.child(\"photolink\").getValue().toString()).fit().centerCrop()", "com.squareup.picasso.Picasso.with(context).load(dataSnapshot.child(\"photolink\").getValue().toString())", "com.google.firebase.database.DataSnapshot.child(java.lang.String)"], "Fixed commit": "2513d30f866b8782c6048e8d21f57516ce152b84", "Url": "https://api.github.com/repos/hksapp/StoryKorner", "Date": "2017-08-04T17:35:53Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((minute) < 10) && ((minute) > 0)) { min_tmp = \"0\" + (java.lang.String.valueOf(minute)); }else if ((minute) == 0) { min_tmp = \"00\"; }else { min_tmp = java.lang.String.valueOf(minute); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3847/buggy-version/app.src.main.java.com.example.antonioreyes.aguas.ReportActivity.java", "BodyUseAPI": [], "Fixed commit": "5faadb7b84052a2a0e57e846c7f59b418cbb81b9", "Url": "https://api.github.com/repos/antoniohdez/cityAgua", "Date": "2015-12-13T07:40:55Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (closestMatch.isCorrect()) { feedback = new uk.ac.cam.cl.dtg.segue.dos.content.Content(\"Your answer is not in the form we expected. Can you rearrange or simplify it?\"); responseCorrect = false; responseMatchType = closestMatchType; uk.ac.cam.cl.dtg.isaac.quiz.IsaacSymbolicValidator.log.info(((((((\"User submitted an answer that was close to an exact match, but not exact \" + \"for question \") + (symbolicQuestion.getId())) + \". Choice: \") + (closestMatch.getPythonExpression())) + \", submitted: \") + (submittedFormula.getPythonExpression()))); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5225/buggy-version/src.main.java.uk.ac.cam.cl.dtg.isaac.quiz.IsaacSymbolicValidator.java", "BodyUseAPI": ["org.slf4j.Logger.info(((((((\"User submitted an answer that was close to an exact match, but not exact \" + \"for question \") + (symbolicQuestion.getId())) + \". Choice: \") + (closestMatch.getPythonExpression())) + \", submitted: \") + (submittedFormula.getPythonExpression())))", "uk.ac.cam.cl.dtg.segue.dos.content.Formula.getPythonExpression()"], "Fixed commit": "fdf1c94e9b08a1b0877a48e3be79fd6b061050fb", "Url": "https://api.github.com/repos/ucam-cl-dtg/isaac-api", "Date": "2016-05-19T16:17:17Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (beacons.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/281/buggy-version/app.src.main.java.com.shoply.shop.shoply.SearchFragment.java", "BodyUseAPI": [], "Fixed commit": "c9938f9953612784249dda1657be32582ef0842e", "Url": "https://api.github.com/repos/galpe/Shoply3", "Date": "2015-04-07T18:11:30Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(beaconManager.checkPermissionsAndService())) { android.util.Log.d(com.shoply.shop.shoply.SearchFragment.TAG, \"Application does not have appropiate setup\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/281/buggy-version/app.src.main.java.com.shoply.shop.shoply.SearchFragment.java", "BodyUseAPI": [], "Fixed commit": "c9938f9953612784249dda1657be32582ef0842e", "Url": "https://api.github.com/repos/galpe/Shoply3", "Date": "2015-04-07T18:11:30Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.xiuhao.commons.lang.CollectionKit.isEmpty(keys)) { return keys; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4866/buggy-version/src.main.java.com.xiuhao.commons.search.KeyGroup.java", "BodyUseAPI": [], "Fixed commit": "b9f4c9e3b750d62aa2bde30bcf7bb09a606eabcc", "Url": "https://api.github.com/repos/seanlinwang/commons", "Date": "2013-06-24T09:46:18Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["top.guhanjie.wine.controller.UserController.getSessionUser()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((user != null) && (user instanceof top.guhanjie.wine.model.User)) { java.lang.Integer userid = ((top.guhanjie.wine.model.User) (user)).getId(); user = userService.getUserById(userid); }else { java.lang.String openid = ((java.lang.String) (request.getSession().getAttribute(AppConstants.SESSION_KEY_OPEN_ID))); user = userService.getUserByOpenId(openid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/431/buggy-version/src.main.java.top.guhanjie.wine.controller.UserController.java", "BodyUseAPI": [], "Fixed commit": "e5bc5a8e4028a8e3bbfb0d5f1dce544b0d39fcb6", "Url": "https://api.github.com/repos/guhanjie/wine", "Date": "2017-10-04T02:25:32Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["diy.uigeneric.data.SampleIndirectList.find(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (i >= 0) { diy.uigeneric.data.SampleDataSource source = new diy.uigeneric.data.SampleDataSource(this); source.open(); if (!(list.edit(i, source.get(id)))) list.reload(this); source.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3527/buggy-version/app.src.main.java.diy.uigeneric.sample.SampleListActivity.java", "BodyUseAPI": ["diy.uigeneric.data.SampleIndirectList.edit(int,source.get(id))"], "Fixed commit": "27ef3e05bf2cd84740a516b769c4a845cd41c463", "Url": "https://api.github.com/repos/taworn/uigeneric", "Date": "2016-06-08T09:14:43Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(deleted)) b = (sample.getDeleted()) == null; else b = (sample.getDeleted()) != null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3527/buggy-version/app.src.main.java.diy.uigeneric.data.SampleIndirectList.java", "BodyUseAPI": [], "Fixed commit": "27ef3e05bf2cd84740a516b769c4a845cd41c463", "Url": "https://api.github.com/repos/taworn/uigeneric", "Date": "2016-06-08T09:14:43Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fInicio.getText().toString()", "java.text.SimpleDateFormat.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dateDifference(fechainicioprueba, fechaPrueba)) <= 0) { android.widget.Toast.makeText(this, \"La fecha de inicio tiene que ser mayor a la actual\", Toast.LENGTH_LONG).show(); }else if ((dateDifference(fechainicioprueba, mFormatter.parse(fTermino.getText().toString()))) == 0) { android.widget.Toast.makeText(this, \"No puede crear una Iniciativa sin duraci\u00f3n\", Toast.LENGTH_LONG).show(); }else { java.lang.String nombre = com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser().getDisplayName(); java.lang.String fechaInit = fInicio.getText().toString(); java.lang.String fechaFin = fTermino.getText().toString(); try { dateInits = mFormatter.parse(fechaInit); dateFins = mFormatter.parse(fechaFin); } catch (java.text.ParseException e) { e.printStackTrace(); } long feI = dateInits.getTime(); long feT = dateFins.getTime(); java.lang.String interest = spinner.getSelectedItem().toString(); if (interest.equals(\"M\u00fasica\")) { interest = \"Musica\"; } android.content.Intent i = getIntent(); com.google.firebase.database.FirebaseDatabase.getInstance().getReference(\"Initiatives\").child(i.getStringExtra(\"Sector\")).child(IDanterior).removeValue(); mDatabase2 = com.google.firebase.database.FirebaseDatabase.getInstance().getReference(\"UserInitiatives\").child(com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser().getUid()); mDatabase2.addListenerForSingleValueEvent(new com.google.firebase.database.ValueEventListener() { @java.lang.Override public void onDataChange(com.google.firebase.database.DataSnapshot snapshot) { snapshot.child(IDanterior).getRef().removeValue(); } @java.lang.Override public void onCancelled(com.google.firebase.database.DatabaseError databaseError) { java.lang.System.out.println((\"The read failed: \" + (databaseError.getCode()))); } }); if ((imagen) != null) { imageEdit = key; } com.byobdev.kamal.DBClasses.Initiative initiative = new com.byobdev.kamal.DBClasses.Initiative(titulo.getText().toString(), nombre, description.getText().toString(), latitud, longitud, imageEdit, com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser().getUid(), interest, direccion.toString(), feI, feT); mDatabase.child(getSector(latitud, longitud)).child(key).setValue(initiative); com.google.firebase.database.DatabaseReference userInitiatives = com.google.firebase.database.FirebaseDatabase.getInstance().getReference((\"UserInitiatives/\" + (com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser().getUid()))); userInitiatives.child(key).child(\"Sector\").setValue(getSector(latitud, longitud)); userInitiatives.child(key).child(\"Titulo\").setValue(titulo.getText().toString()); finish(); android.widget.Toast.makeText(this, \"Iniciativa editada\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/339/buggy-version/app.src.main.java.com.byobdev.kamal.EditActivity.java", "BodyUseAPI": ["com.byobdev.kamal.EditActivity.dateDifference(java.lang.String,java.util.Date)"], "Fixed commit": "e580cf8528a90a373abf0a56a786d1a72585dbdf", "Url": "https://api.github.com/repos/archidemus/kamal", "Date": "2017-09-13T22:15:01Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((listStringArray.size()) > 1) { if ((descendingOrder.compare(listStringArray.get(1), listStringArray.get(0))) > 0) { java.lang.System.out.println((\"Ascending:\" + (descendingOrder.compare(listStringArray.get(0), listStringArray.get(1))))); java.util.Collections.sort(listStringArray, ascendingOrder); }else { java.util.Collections.sort(listStringArray, descendingOrder); java.lang.System.out.println((\"Descending:\" + (descendingOrder.compare(listStringArray.get(0), listStringArray.get(1))))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7137/buggy-version/ClickerCounter.src.com.example.clickercounter.ClickerCounterMain.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.Comparator<java.lang.String>.compare(java.lang.String,java.lang.String)", "java.util.Collections.sort(java.util.ArrayList<java.lang.String>,java.util.Comparator<java.lang.String>)", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.Comparator<java.lang.String>.compare(java.lang.String,java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.Comparator<java.lang.String>.compare(java.lang.String,java.lang.String)", "java.util.Collections.sort(java.util.ArrayList<java.lang.String>,java.util.Comparator<java.lang.String>)", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "4900c99a860094c9519fac27f1e47f1480d3084c", "Url": "https://api.github.com/repos/bvincent1/Assignment1", "Date": "2014-01-25T23:05:02Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.zsx.debug.LogUtil.DEBUG) { if (android.text.TextUtils.isEmpty(param)) { com.zsx.debug.LogUtil.e(com.zsx.util.Lib_Util_HttpURLRequest.class, \"DELETE \u4e0d\u652f\u6301\u63d0\u4ea4\u53c2\u6570\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6832/buggy-version/app.src.main.java.com.zsx.util.Lib_Util_HttpURLRequest.java", "BodyUseAPI": [], "Fixed commit": "79d82ba3135573aea9efb57d3b552a717ee1e809", "Url": "https://api.github.com/repos/z1986s8x11/androidLib", "Date": "2015-11-24T09:45:37Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((colNumber) == (row.getCells().size())) { row.getCells().add(deepCopyUtil.deepCopy(cell)); }else { row.getCells().add(colNumber, deepCopyUtil.deepCopy(cell)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3738/buggy-version/src.main.java.de.bayerl.statistics.transformer.AddColumn.java", "BodyUseAPI": ["row.getCells().add(int,deepCopyUtil.deepCopy(cell))", "de.bayerl.statistics.model.Row.getCells()", "row.getCells().add(deepCopyUtil.deepCopy(cell))", "de.bayerl.statistics.model.Row.getCells()"], "Fixed commit": "55a8d9b06c0317bae67e51103e2f4954d4591a9e", "Url": "https://api.github.com/repos/bayerls/statistics2cubes", "Date": "2015-03-09T14:48:38Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (duration != (-1)) { b.setDuration((duration / 1000)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/867/buggy-version/src.com.adam.aslfms.receiver.LgOptimus4xReceiver.java", "BodyUseAPI": ["Track.Builder.setDuration(int)"], "Fixed commit": "3be85c80fe8bda859a0e8af86df949e68081995c", "Url": "https://api.github.com/repos/grodin/sls", "Date": "2013-02-22T08:27:12Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (obj instanceof java.lang.Long) { duration = ((java.lang.Long) (obj)).intValue(); }else if (obj instanceof java.lang.Integer) { duration = ((java.lang.Integer) (obj)).intValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/867/buggy-version/src.com.adam.aslfms.receiver.LgOptimus4xReceiver.java", "BodyUseAPI": [], "Fixed commit": "3be85c80fe8bda859a0e8af86df949e68081995c", "Url": "https://api.github.com/repos/grodin/sls", "Date": "2013-02-22T08:27:12Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((line.getP1().getY()) == (line.getP2().getY())) { java.util.Collections.sort(pointsOnLongSegment, new il.ac.idc.jdt.extra.constraint.datamodel.PointsXComparator()); }else { java.util.Collections.sort(pointsOnLongSegment, new il.ac.idc.jdt.extra.constraint.datamodel.PointsYComparator()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8677/buggy-version/extra.src.main.java.il.ac.idc.jdt.extra.constraint.ConstrainedDelaunayTriangulation.java", "BodyUseAPI": [], "Fixed commit": "435c70f3ffb8c1ac4f5806a0bbc56f16cfdb12a1", "Url": "https://api.github.com/repos/hugebdu/jdt-refactored", "Date": "2012-06-17T18:59:54Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.eclecticlogic.whisper.spi.Message<E>.getCanonicalMessage()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (messageKey == null) { messageKey = \"null\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7798/buggy-version/src.main.java.com.eclecticlogic.whisper.core.WhisperManager.java", "BodyUseAPI": [], "Fixed commit": "3b85cfb00ad39cca2706a84af908ae3582a0c6cb", "Url": "https://api.github.com/repos/eclecticlogic/whisper", "Date": "2015-01-15T01:19:36Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.support.v4.content.ContextCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ Manifest.permission.WRITE_EXTERNAL_STORAGE }, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/781/buggy-version/app.src.main.java.com.example.root.image.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1afbe0c232cc0a9bba99ce478cce664f97f80886", "Url": "https://api.github.com/repos/gopikrishnanrmg/Imageview-assignment", "Date": "2017-09-13T09:13:57Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((propSupport) == null) { propSupport = new java.beans.PropertyChangeSupport(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8513/buggy-version/blue-core.src.blue.mixer.ChannelList.java", "BodyUseAPI": [], "Fixed commit": "0ca0ddfb03c21176ac3e8dcb28d32be8fcc867c7", "Url": "https://api.github.com/repos/kunstmusik/blue", "Date": "2015-06-08T17:02:04Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((propSupport) != null) { propSupport.firePropertyChange(\"listName\", oldListName, listName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8513/buggy-version/blue-core.src.blue.mixer.ChannelList.java", "BodyUseAPI": [], "Fixed commit": "0ca0ddfb03c21176ac3e8dcb28d32be8fcc867c7", "Url": "https://api.github.com/repos/kunstmusik/blue", "Date": "2015-06-08T17:02:04Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((propSupport) != null) { propSupport.removePropertyChangeListener(pcl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8513/buggy-version/blue-core.src.blue.mixer.ChannelList.java", "BodyUseAPI": [], "Fixed commit": "0ca0ddfb03c21176ac3e8dcb28d32be8fcc867c7", "Url": "https://api.github.com/repos/kunstmusik/blue", "Date": "2015-06-08T17:02:04Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((furnaceItemStacks[0].stackSize) < 8) { return false; }else { net.minecraft.item.ItemStack itemstack = com.blockingHD.Rainbow.handler.RainbowFurnaceRecipes.smelting().getSmeltingResult(this.furnaceItemStacks[0]); if (itemstack == null) return false; if ((this.furnaceItemStacks[2]) == null) return true; if (!(this.furnaceItemStacks[2].isItemEqual(itemstack))) return false; int result = (furnaceItemStacks[2].stackSize) + (itemstack.stackSize); return (result <= (getInventoryStackLimit())) && (result <= (this.furnaceItemStacks[2].getMaxStackSize())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6900/buggy-version/src.main.java.com.blockingHD.Rainbow.RainbowTileEntity.TileEntityRainbowFurnace.java", "BodyUseAPI": [], "Fixed commit": "dbab38d65ee58a5176c1605c1889d0e465e06b9d", "Url": "https://api.github.com/repos/blockingHD/Rainbows", "Date": "2015-06-06T14:43:19Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((fields.length) == 1) { partImpl = new org.apache.solr.common.RequestPartImpl(fields[0]); }else { partImpl = new org.apache.solr.common.RequestPartImpl(); assert ((fields.length) % 2) == 0; for (int i = 0; i < (fields.length); i += 2) { addField(fields[i], fields[(i + 1)]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1300/buggy-version/solr.solrj.src.java.org.apache.solr.common.SolrInputDocument.java", "BodyUseAPI": [], "Fixed commit": "7e7c0e7abb643477c7f7eef6407d198002408adc", "Url": "https://api.github.com/repos/TeletronicsDotAe/lucene-solr", "Date": "2017-04-26T09:11:48Z"},
{"Line": "=>578", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["loan.getLoanProductRelatedDetail().graceOnPrincipalPayment()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (graceOnPrincipal == null) { graceOnPrincipal = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4017/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.portfolio.loanaccount.loanschedule.service.LoanScheduleAssembler.java", "BodyUseAPI": [], "Fixed commit": "6afa072a80fe5bbaabe636f2b6dbdefb18f50d56", "Url": "https://api.github.com/repos/pramodn02/mifosx", "Date": "2015-12-03T09:49:39Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.text.TextUtils.isEmpty(extension)) == false) { mExtensions[0] = extension; }else { mExtensions[0] = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8446/buggy-version/src.org.magdaaproject.utils.FileUtils.java", "BodyUseAPI": [], "Fixed commit": "01e21aa6bd9afc24170c0191dead276decccd56f", "Url": "https://api.github.com/repos/magdaaproject/magdaa-library", "Date": "2012-12-19T01:38:02Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["playItem_Element.select(\"span.opiEdition em\").last().text().replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.dianping.spider.util.support.StringUtils.isEmpty(showType)) { showType = playItem_Element.select(\"span.opiEdition em\").last().select(\"span\").first().attr(\"class\").replaceAll(\"ui_type\", \"\").toUpperCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8789/buggy-version/src.main.java.com.dianping.spider.business.movie.GetPlayItemAccordDateProcessor.java", "BodyUseAPI": [], "Fixed commit": "89f81efc1ccbcfe2833faa6377aa22dfb002aa66", "Url": "https://api.github.com/repos/zhongliangjun1/movie-spider", "Date": "2014-02-08T02:29:40Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((displayState) == (com.agh.iet.komplastech.solver.results.visualization.DisplayState.SNAPSHOT)) { javax.swing.JSlider source = ((javax.swing.JSlider) (e.getSource())); if (!(source.getValueIsAdjusting())) { solutionMapper.setStep(source.getValue()); redrawFrame(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6659/buggy-version/src.main.java.com.agh.iet.komplastech.solver.results.visualization.TimeLapseViewer.java", "BodyUseAPI": [], "Fixed commit": "5925aa2b4019c294b05cd68db5a40d51e89d18c9", "Url": "https://api.github.com/repos/kboom/KomPlasTechSolver", "Date": "2017-02-03T18:24:59Z"},
{"Line": "=>669", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mStatusBarPowerMenuStyle) == (com.android.systemui.statusbar.phone.StatusBarHeaderView.STATUS_BAR_POWER_MENU_DEFAULT)) { triggerPowerMenuDialog(); }else if ((mStatusBarPowerMenuStyle) == (com.android.systemui.statusbar.phone.StatusBarHeaderView.STATUS_BAR_POWER_MENU_INVERTED)) { goToSleep(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2508/buggy-version/packages.SystemUI.src.com.android.systemui.statusbar.phone.StatusBarHeaderView.java", "BodyUseAPI": [], "Fixed commit": "658f276afde7efa40dfc2a5578f14e8b5a792b80", "Url": "https://api.github.com/repos/KangDroid/android_frameworks_base", "Date": "2015-06-01T20:07:41Z"},
{"Line": "=>884", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (menuItem.getTitle().equals(getString(R.string.enable_location))) { android.util.Log.d(\"MyMainActivity\", (\"menuItem.getTitle():\" + (menuItem.getTitle()))); if (!(hasLocationPermission)) { showPermissionAlertDialog(DIALOG_TITLE, DIALOG_MESSAGE); }else { android.support.design.widget.Snackbar.make(view, getString(R.string.you_allready_have_permission), Snackbar.LENGTH_LONG).show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/309/buggy-version/app.src.main.java.clearfaun.com.pokebuspro.MainActivity.java", "BodyUseAPI": ["android.view.MenuItem.getTitle()", "android.util.Log.d(java.lang.String,(\"menuItem.getTitle():\" + (menuItem.getTitle())))"], "Fixed commit": "d15b7cccbf422e3ebc339129410b29dc4b2a83bb", "Url": "https://api.github.com/repos/SpencerDepas/PokeBusPro", "Date": "2016-04-28T02:26:19Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (false) f.type(m_aType).print('.').print(m_sName); else f.print(m_sName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8367/buggy-version/src.main.java.com.helger.jcodemodel.JEnumConstant.java", "BodyUseAPI": [], "Fixed commit": "3dab8a70f32377f656a89b9eef8d18ded150e018", "Url": "https://api.github.com/repos/phax/jcodemodel", "Date": "2016-04-17T18:24:40Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (workDays == 0) { workDays = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8172/buggy-version/src.main.java.de.kopis.timeclicker.utils.WorkdayCalculator.java", "BodyUseAPI": [], "Fixed commit": "fb8c10c25ffc837bb68f2ff9d6f99ccf5d0b58e9", "Url": "https://api.github.com/repos/MoriTanosuke/timeclicker", "Date": "2016-02-01T08:00:00Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(lore.get(((lore.size()) - 1)).contains((boxChar + \"\")))) lore.add(out.toString()); else lore.set(((lore.size()) - 1), out.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2242/buggy-version/src.main.java.think.rpgitems.item.RPGItem.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.util.List<java.lang.String>.set(int,java.lang.String)", "java.util.List<java.lang.String>.size()"], "Fixed commit": "7f90c4c2b956b72682719c92e9be444423413572", "Url": "https://api.github.com/repos/NyaaCat/RPGitems-reloaded", "Date": "2015-07-30T21:58:28Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["move.PlaceArmiesMove.getArmies()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (armies < 1) { plm.setIllegalMove((\" place-armies \" + \"cannot place less than 1 army\")); }else { if (armies > (player.getArmiesLeft())) plm.setArmies(player.getArmiesLeft()); if ((player.getArmiesLeft()) <= 0) plm.setIllegalMove((\" place-armies \" + \"no armies left to place\")); player.setArmiesLeft(((player.getArmiesLeft()) - (plm.getArmies()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5529/buggy-version/main.Engine.java", "BodyUseAPI": [], "Fixed commit": "23c49837644f73b982c1e614811021b8ba01bf57", "Url": "https://api.github.com/repos/theaigames/conquest-engine", "Date": "2014-03-17T13:10:48Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.piratech.mapimap.service.meetingcollector.html.HTMLAttributeMeetingCollector.getNodeWithAttribute(org.htmlcleaner.TagNode,de.piratech.mapimap.service.meetingcollector.html.AttributeMatcher)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (node != null) { org.htmlcleaner.TagNode link = ((org.htmlcleaner.TagNode) (node.getChildren().get(0))); return link.getAttributeByName(\"href\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4574/buggy-version/src.main.java.de.piratech.mapimap.service.meetingcollector.html.HTMLAttributeMeetingCollector.java", "BodyUseAPI": ["org.htmlcleaner.TagNode.getChildren()", "node.getChildren().get(int)"], "Fixed commit": "8a9f2b0d9353574c9a19c19f144edf0541223a0c", "Url": "https://api.github.com/repos/piratech/mapimap", "Date": "2012-09-06T00:32:19Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (query.runHiveGiraph(giraph_config, connection)) bigframe.qgen.engineDriver.HiveGiraphEngineDriver.LOG.info(\"Query Finished\"); else bigframe.qgen.engineDriver.HiveGiraphEngineDriver.LOG.info(\"Query failed\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/858/buggy-version/qgen.src.main.java.bigframe.qgen.engineDriver.HiveGiraphEngineDriver.java", "BodyUseAPI": [], "Fixed commit": "c210b0a246132d9cb09bd9a6bbfb4f7dadb31451", "Url": "https://api.github.com/repos/bigframeteam/BigFrame", "Date": "2013-11-20T10:17:05Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (query.runGiraph(giraph_config)) bigframe.qgen.engineDriver.GiraphEngineDriver.LOG.info(\"Query Finished\"); else bigframe.qgen.engineDriver.GiraphEngineDriver.LOG.info(\"Query failed\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/858/buggy-version/qgen.src.main.java.bigframe.qgen.engineDriver.GiraphEngineDriver.java", "BodyUseAPI": [], "Fixed commit": "c210b0a246132d9cb09bd9a6bbfb4f7dadb31451", "Url": "https://api.github.com/repos/bigframeteam/BigFrame", "Date": "2013-11-20T10:17:05Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((edu.drexel.psal.jstylo.eventDrivers.MaxentPOSTagsEventDriver.getTaggerPath()) == null) || (edu.drexel.psal.jstylo.eventDrivers.MaxentPOSTagsEventDriver.getTaggerPath().isEmpty())) { edu.drexel.psal.jstylo.eventDrivers.MaxentPOSTagsEventDriver.setTaggerPath(edu.drexel.psal.jstylo.eventDrivers.MaxentPOSTagsEventDriver.lastTaggerPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4785/buggy-version/src.edu.drexel.psal.jstylo.eventDrivers.MaxentPOSTagsEventDriver.java", "BodyUseAPI": [], "Fixed commit": "734b4b24c44a5beeee3c3867dba033abdbc517c5", "Url": "https://api.github.com/repos/tdutko/jstylo", "Date": "2015-01-16T17:15:47Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((edu.drexel.psal.jstylo.eventDrivers.MaxentPOSTagsEventDriver.getTaggerPath()) != null) && (!(edu.drexel.psal.jstylo.eventDrivers.MaxentPOSTagsEventDriver.getTaggerPath().isEmpty()))) edu.drexel.psal.jstylo.eventDrivers.MaxentPOSTagsEventDriver.lastTaggerPath = edu.drexel.psal.jstylo.eventDrivers.MaxentPOSTagsEventDriver.getTaggerPath();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4785/buggy-version/src.edu.drexel.psal.jstylo.eventDrivers.MaxentPOSTagsEventDriver.java", "BodyUseAPI": [], "Fixed commit": "734b4b24c44a5beeee3c3867dba033abdbc517c5", "Url": "https://api.github.com/repos/tdutko/jstylo", "Date": "2015-01-16T17:15:47Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (parsedHosts != null) { host.setGroups(eu.ascetic.asceticarchitecture.iaas.zabbixApi.utils.Json2ObjectMapper.getHostGroups(parsedHosts)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7638/buggy-version/utils.ascetic-zabbix-api.src.main.java.eu.ascetic.asceticarchitecture.iaas.zabbixApi.utils.Json2ObjectMapper.java", "BodyUseAPI": ["eu.ascetic.asceticarchitecture.iaas.zabbixApi.datamodel.Host.setGroups(java.util.HashSet<java.lang.String>)", "eu.ascetic.asceticarchitecture.iaas.zabbixApi.utils.Json2ObjectMapper.getHostGroups(java.util.ArrayList<java.util.LinkedHashMap<java.lang.String, java.lang.String>>)"], "Fixed commit": "4dcb66f8d6da46fc4dcbc156ced12aaa0b1b33cf", "Url": "https://api.github.com/repos/ascetictoolbox/ascetictoolbox", "Date": "2016-10-06T15:23:18Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["task.getDestination().getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (valueMap.containsKey(\"iconUrl\")) { message.setIconUrl(valueMap.get(\"iconUrl\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2988/buggy-version/tioga-notify-processor-slack.src.main.java.org.tiogasolutions.notify.processor.slack.SlackTaskProcessor.java", "BodyUseAPI": ["org.tiogasolutions.notify.processor.slack.SlackMessage.setIconUrl(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "d30e7c51376db31c53cc07daebbd622c4c1bceb6", "Url": "https://api.github.com/repos/tioga/Notify", "Date": "2017-03-29T06:45:45Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((movieDetail.getVote_count()) == null) { movieDetail.setVote_count(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5472/buggy-version/app.src.main.java.com.example.cristhian.popmovies.DetailMovieFragment.java", "BodyUseAPI": ["com.example.cristhian.popmovies.MovieDetail.setVote_count(int)"], "Fixed commit": "d1eb8cdad5cd0c6e009269d74c4fe680107e0b35", "Url": "https://api.github.com/repos/cristh18/PopMovies", "Date": "2015-11-05T21:04:14Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((movieDetail.getPopularity()) == null) { movieDetail.setPopularity(0.0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5472/buggy-version/app.src.main.java.com.example.cristhian.popmovies.DetailMovieFragment.java", "BodyUseAPI": ["com.example.cristhian.popmovies.MovieDetail.setPopularity(double)"], "Fixed commit": "d1eb8cdad5cd0c6e009269d74c4fe680107e0b35", "Url": "https://api.github.com/repos/cristh18/PopMovies", "Date": "2015-11-05T21:04:14Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (s == (-1)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8661/buggy-version/src.main.java.io.mauth.fakefood.services.MailReaderService.java", "BodyUseAPI": [], "Fixed commit": "7246566c58398429bf3ab69377b33635c7b62cee", "Url": "https://api.github.com/repos/r-a-x/FakeFoodJava", "Date": "2017-12-08T03:29:16Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.mauth.fakefood.services.MailReaderService.getAndroidId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (androidId == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8661/buggy-version/src.main.java.io.mauth.fakefood.services.MailReaderService.java", "BodyUseAPI": [], "Fixed commit": "7246566c58398429bf3ab69377b33635c7b62cee", "Url": "https://api.github.com/repos/r-a-x/FakeFoodJava", "Date": "2017-12-08T03:29:16Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.status) == (CLOSING)) && (!(this.outEncrypted.hasData()))) { this.sslEngine.closeOutbound(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3685/buggy-version/httpcore-nio.src.main.java.org.apache.http.nio.reactor.ssl.SSLIOSession.java", "BodyUseAPI": [], "Fixed commit": "9caf4e6376c447591a6725e9d34f3b94e262d87a", "Url": "https://api.github.com/repos/apache/httpcomponents-core", "Date": "2017-08-25T09:28:18Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gData == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6472/buggy-version/src.org.nschmidt.ldparteditor.data.VM19ColourChanger.java", "BodyUseAPI": [], "Fixed commit": "e8ad1efca46f9c21e092a2d3229c65b917136077", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-05-10T16:52:08Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(lineLinkedToVertices.containsKey(gData))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6472/buggy-version/src.org.nschmidt.ldparteditor.data.VM19ColourChanger.java", "BodyUseAPI": [], "Fixed commit": "e8ad1efca46f9c21e092a2d3229c65b917136077", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-05-10T16:52:08Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.helioviewer.jhv.base.math.MathUtils.clip(((translationNow.z) + (4 * (org.helioviewer.jhv.base.physics.Constants.SUN_RADIUS))),float,double)", "org.helioviewer.jhv.base.math.MathUtils.clip(((translationNow.z) - (4 * (org.helioviewer.jhv.base.physics.Constants.SUN_RADIUS))),double,float)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (clipNear >= clipFar) { org.helioviewer.jhv.base.Telemetry.trackEvent(\"clipNear is bigger or equal clipFar\", \"clipNear\", java.lang.Double.toString(clipNear), \"clipFar\", java.lang.Double.toString(clipFar)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2759/buggy-version/src.org.helioviewer.jhv.gui.MainPanel.java", "BodyUseAPI": ["java.lang.Double.toString(double)", "java.lang.Double.toString(double)", "org.helioviewer.jhv.base.Telemetry.trackEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "b68f0927e1e8f7589b5bae39ae2972e3d762ddd0", "Url": "https://api.github.com/repos/Helioviewer-Project/JHelioviewer", "Date": "2017-09-01T14:04:41Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (objects.isEmpty()) { final O ref = objectPool.createRef(); this.numDimensions = ref.numDimensions(); objectPool.releaseRef(ref); }else this.numDimensions = objects.iterator().next().numDimensions();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6427/buggy-version/src.main.java.net.trackmate.kdtree.KDTree.java", "BodyUseAPI": [], "Fixed commit": "48d49196c554cc253e135b1d900758ebfafe0e2b", "Url": "https://api.github.com/repos/fiji/TrackMate3", "Date": "2015-11-12T15:20:00Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.getSortDirection()) == null) { c.asc(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2444/buggy-version/src.main.java.ru.fly.client.ui.grid.Header.java", "BodyUseAPI": ["ru.fly.client.ui.grid.ColumnConfig<T>.asc()"], "Fixed commit": "fc52d1c104ccf851ce10898eb369502d814b092b", "Url": "https://api.github.com/repos/filius/fly-gwt", "Date": "2015-09-16T08:15:34Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(s.contains(routing.gtch.MessageRouterExtended.QUEUING_STRATEGY_S))) { this.QUEUING_STRATEGY = routing.gtch.MessageRouterExtended.QUEUING_STRATEGY_POSSIBILITIES.AGE; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/515/buggy-version/one_1.5.1-RC2.routing.gtch.MessageRouterExtended.java", "BodyUseAPI": [], "Fixed commit": "9222a44360f8a07e8070275664b49f547d298392", "Url": "https://api.github.com/repos/chrisprobst/one-simulator", "Date": "2015-08-20T10:03:14Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) && (getFullscreenPreferences())) { com.erakk.lnreader.UIHelper.Recreate(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2153/buggy-version/LNReader.src.com.erakk.lnreader.activity.DisplayLightNovelContentActivity.java", "BodyUseAPI": [], "Fixed commit": "bac3059234835a776f7529b30b2a4ed28e5dac32", "Url": "https://api.github.com/repos/liyhcharles/LNReader-Android", "Date": "2013-12-07T21:24:40Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((row >= (rows)) || (row < 0)) || (column < 0)) || (column >= (columns))) throw new java.lang.ArrayIndexOutOfBoundsException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5082/buggy-version/src.app.model.board.TicTacToeBoard.java", "BodyUseAPI": [], "Fixed commit": "e12e48300bc9500194ed797433c2b7717681b0ff", "Url": "https://api.github.com/repos/przemyslawkonik/epam-akademia-PK", "Date": "2017-06-02T12:20:35Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((params.length) == 1) { return org.slf4j.helpers.MessageFormatter.format(msg, params[0]).getMessage(); }else if ((params.length) > 1) { return org.slf4j.helpers.MessageFormatter.arrayFormat(msg, params).getMessage(); }else { return org.slf4j.helpers.MessageFormatter.format(msg, params).getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2171/buggy-version/src.main.java.com.bolyartech.forge.server.misc.ForgeMessageFormat.java", "BodyUseAPI": ["org.slf4j.helpers.MessageFormatter.format(java.lang.String,java.lang.Object)", "org.slf4j.helpers.MessageFormatter.format(java.lang.String,java.lang.Object[])", "org.slf4j.helpers.MessageFormatter.arrayFormat(java.lang.String,java.lang.Object[])", "org.slf4j.helpers.MessageFormatter.format(msg, params).getMessage()", "org.slf4j.helpers.MessageFormatter.arrayFormat(msg, params).getMessage()", "org.slf4j.helpers.MessageFormatter.format(msg, params[0]).getMessage()"], "Fixed commit": "25b22356acb46f550e9390f7701f62dbc7e4abb9", "Url": "https://api.github.com/repos/ogrebgr/forge-server", "Date": "2017-05-24T06:40:01Z"},
{"Line": "=>737", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jgll.grammar.symbol.Alternate.getFirstSlot()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (currentSlot instanceof org.jgll.grammar.slot.LastGrammarSlot) { currentSlot.setPredictionSet(currentSlot.getHead().getFollowSetAsBitSet()); }else { java.lang.System.out.println(currentSlot.getClass()); throw new java.lang.RuntimeException(\"Unexpected grammar slot.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6510/buggy-version/src.org.jgll.grammar.GrammarBuilder.java", "BodyUseAPI": ["currentSlot.getHead().getFollowSetAsBitSet()", "org.jgll.grammar.slot.BodyGrammarSlot.getHead()", "org.jgll.grammar.slot.BodyGrammarSlot.getClass()", "java.io.PrintStream.println(currentSlot.getClass())", "org.jgll.grammar.slot.BodyGrammarSlot.setPredictionSet(currentSlot.getHead().getFollowSetAsBitSet())"], "Fixed commit": "8614b0fc50abf9d8b7cbe47fb2bff424a7845752", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2013-11-04T16:44:13Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Boolean.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!active) reservation.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6914/buggy-version/src.pl.com.bottega.photostock.sales.infrastructure.repositories.file.FileReservationRepository.java", "BodyUseAPI": [], "Fixed commit": "2c243c7051ed23d6f027c12f2cf2767fb872b79e", "Url": "https://api.github.com/repos/ksrubka/photostock", "Date": "2016-05-27T15:03:09Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.talend.repository.model.RepositoryNode.getObjectType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (repositoryType == (org.talend.core.model.repository.ERepositoryObjectType.SVG_BUSINESS_PROCESS)) { item = PropertiesFactory.eINSTANCE.createSVGBusinessProcessItem(); }else if (repositoryType == (org.talend.core.model.repository.ERepositoryObjectType.METADATA_EDIFACT)) { item = PropertiesFactory.eINSTANCE.createEDIFACTConnectionItem(); }else if (repositoryType == (org.talend.core.model.repository.ERepositoryObjectType.METADATA_VALIDATION_RULES)) { item = PropertiesFactory.eINSTANCE.createValidationRulesConnectionItem(); }else if (repositoryType == (org.talend.core.model.repository.ERepositoryObjectType.METADATA_HEADER_FOOTER)) { item = PropertiesFactory.eINSTANCE.createHeaderFooterConnectionItem(); }else if (repositoryType == (org.talend.core.model.repository.ERepositoryObjectType.METADATA_FILE_BRMS)) { item = PropertiesFactory.eINSTANCE.createBRMSConnectionItem(); }else if (repositoryType == (org.talend.core.model.repository.ERepositoryObjectType.METADATA_FILE_FTP)) { item = PropertiesFactory.eINSTANCE.createFTPConnectionItem(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4912/buggy-version/main.plugins.org.talend.core.repository.src.main.java.org.talend.repository.ui.actions.DuplicateAction.java", "BodyUseAPI": [], "Fixed commit": "7a312a42c3c0dcf2be3e22612a024586a8eaeca0", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2015-02-13T05:22:47Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.trentorise.smartcampus.eb.custom.MediaUtils.getMediaAbsolutePath(android.content.Context,android.net.Uri)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (capturedFilePath == null) { capturedFilePath = capturedUri.getPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6622/buggy-version/src.eu.trentorise.smartcampus.eb.custom.capture.CaptureHelper.java", "BodyUseAPI": [], "Fixed commit": "bbd5a56bca2b697e9e3649cf3607600cff4bf4c3", "Url": "https://api.github.com/repos/smartcampuslab/smartcampus.vas.experiencebuster.android", "Date": "2014-02-18T10:29:42Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type.equals(java.lang.Double.class)) || (type.equals(java.lang.Double.TYPE))) { return json.getDouble(fieldName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7400/buggy-version/core.src.main.java.com.nttuyen.android.umon.core.mapper.JSONObjectMapper.java", "BodyUseAPI": [], "Fixed commit": "baba5ef49aaf52118a61a47c9a428655fef74c48", "Url": "https://api.github.com/repos/nttuyen/umon", "Date": "2013-11-09T05:46:55Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (expanded.containsKey(\"outPath\")) { keyText.set(expanded.get(\"outPath\")); valueText.set(expanded.get(\"value\")); context.write(keyText, valueText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7564/buggy-version/src.main.java.SimMap.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)", "org.apache.hadoop.io.Text.set(java.lang.String)", "org.apache.hadoop.io.Text.set(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "4da7d5650b7f826eb46d174ea3297ce8e25c4fe1", "Url": "https://api.github.com/repos/liuPATHojun/internet_expand", "Date": "2017-01-19T06:00:56Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.webkit.URLUtil.isValidUrl(sURL)) { ((org.cmapi.primitives.IGeoPoint) (this.getRenderable())).setIconURI(sURL); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/880/buggy-version/sdk.sdk-api.src.main.java.mil.emp3.api.Point.java", "BodyUseAPI": ["((org.cmapi.primitives.IGeoPoint) (this.getRenderable())).setIconURI(java.lang.String)"], "Fixed commit": "41ca8e29445fd1f58114b04a9c5b55943365652d", "Url": "https://api.github.com/repos/missioncommand/emp3-android", "Date": "2017-11-07T16:17:56Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.sunbird.learner.util.SocialMediaType.IsMatch(url, pattern))) { url = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8350/buggy-version/actors.src.main.java.org.sunbird.learner.util.SocialMediaType.java", "BodyUseAPI": [], "Fixed commit": "5cca773aac5467c89f46bb6c6dae2aef8b8c49a3", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2017-10-10T05:38:16Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (stopHandler != null) { primaryButtonsSet.activate(R.id.main_flb_action_stop, stopHandler); }else { primaryButtonsSet.activate((-1), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8354/buggy-version/app.src.main.java.com.mkulesh.micromath.BaseFragment.java", "BodyUseAPI": ["com.mkulesh.micromath.widgets.FloatingButtonsSet.activate(R.id.main_flb_action_stop,android.view.View.OnClickListener)"], "Fixed commit": "60972028d94bbb794d60603e9d33dabb5e2c0f87", "Url": "https://api.github.com/repos/mkulesh/microMathematics", "Date": "2017-08-18T21:37:10Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sizeDifference > 0) { playerSequence = playerSequence.subList(0, cpuSequence.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8795/buggy-version/app.src.main.java.actors.GameViewActor.java", "BodyUseAPI": [], "Fixed commit": "0eea248fe60a775750f65b5f1a9346dcb957eba6", "Url": "https://api.github.com/repos/nicorsm/S3-16-simone", "Date": "2017-07-04T19:28:08Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((field.firstSentenceTags().length) == 1) { firstSentence = field.firstSentenceTags()[0].text(); }else if ((java.util.Arrays.stream(field.firstSentenceTags()).filter(( tag) -> !(\"Text\".equals(tag.name()))).count()) == 1) { firstSentence = ((((field.firstSentenceTags()[0].text()) + \"<code>\") + (field.firstSentenceTags()[1].text())) + \"</code>\") + (field.firstSentenceTags()[2].text()); }else { final java.util.List<com.sun.javadoc.Tag> tags = java.util.Arrays.asList(field.firstSentenceTags()); final java.lang.String joinedTags = tags.stream().map(com.sun.javadoc.Tag::toString).collect(java.util.stream.Collectors.joining(\"\\\", \\\"\", \"[\\\"\", \"\\\"]\")); final java.lang.String message = java.lang.String.format(java.util.Locale.ROOT, \"Should be only one tag for %s. Tags %s.\", field.toString(), joinedTags); throw new java.lang.IllegalArgumentException(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1154/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.doclets.TokenTypesDoclet.java", "BodyUseAPI": ["com.sun.javadoc.FieldDoc.firstSentenceTags()", "com.sun.javadoc.FieldDoc.firstSentenceTags()", "com.sun.javadoc.FieldDoc.firstSentenceTags()", "com.sun.javadoc.FieldDoc.firstSentenceTags()", "com.sun.javadoc.FieldDoc.firstSentenceTags()", "com.sun.javadoc.FieldDoc.firstSentenceTags()", "com.sun.javadoc.FieldDoc.toString()", "java.util.stream.Stream<com.sun.javadoc.Tag>.filter(java.util.function.Predicate<? super com.sun.javadoc.Tag>)", "java.util.stream.Stream<com.sun.javadoc.Tag>.count()", "java.util.Arrays.stream(com.sun.javadoc.Tag[])", "com.sun.javadoc.Tag.text()", "com.sun.javadoc.Tag.text()", "java.util.Arrays.asList(com.sun.javadoc.Tag[])", "java.lang.String.format(java.util.Locale,java.lang.String,java.lang.String,java.lang.String)", "com.sun.javadoc.Tag.text()", "com.sun.javadoc.Tag.text()"], "Fixed commit": "99ba76a59f1587446de41d948b1364446e320365", "Url": "https://api.github.com/repos/Nimfadora/checkstyle", "Date": "2017-08-21T20:35:25Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (usbSerialDriver != null) { this.usbSerialDriver = usbSerialDriver.getPorts().get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/79/buggy-version/src.main.java.io.inventit.processing.android.serial.UsbSerialCommunicator.java", "BodyUseAPI": ["com.hoho.android.usbserial.driver.UsbSerialDriver.getPorts()", "usbSerialDriver.getPorts().get(int)"], "Fixed commit": "6c278a3b9e93e8f158df45561d1d34501089bc81", "Url": "https://api.github.com/repos/inventit/processing-android-serial", "Date": "2016-08-10T03:17:32Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(url.endsWith(\".git\"))) { if (url.endsWith(\"/\")) { url = url.substring(0, ((url.length()) - 1)); } url += \".git\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3103/buggy-version/com.mulesoft.portal.sync.buildSrc.src.main.java.com.mulesoft.portal.apis.github.RepoUrlExtractor.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "a3240369b4a5a8c7ec2d9b7f4c7846cb1f76dd7b", "Url": "https://api.github.com/repos/raml-apis/synchronization", "Date": "2015-03-13T09:25:34Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count >= (progressStep)) { count = 0; informProgress(currentSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1833/buggy-version/de.newsystem.rmi.src.de.newsystem.rmi.transceiver.FileReceiver.java", "BodyUseAPI": [], "Fixed commit": "f23537b44356b549db669cf1b8e2e5cf12ecea1a", "Url": "https://api.github.com/repos/dabastynator/RemoteControlSystem", "Date": "2012-04-26T13:33:42Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasNavigationBar()) { if (mHoldingActivity.getResources().getBoolean(R.bool.blur_dialog_has_bottom_navigation_bar)) { bottomOffset = navBarSize; }else { rightOffset = navBarSize; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8429/buggy-version/lib.src.main.java.fr.tvbarthel.lib.blurdialogfragment.BlurDialogEngine.java", "BodyUseAPI": [], "Fixed commit": "e831b630c6df193b617f5337a47cdc99608d7043", "Url": "https://api.github.com/repos/wakim/BlurDialogFragment", "Date": "2017-05-12T16:23:19Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((startSpan) > 0) { camera.zoom(com.watabou.utils.GameMath.gate(PixelScene.minZoom, (((startZoom) * curSpan) / (startSpan)), PixelScene.maxZoom)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7251/buggy-version/core.src.com.shatteredpixel.shatteredpixeldungeon.scenes.CellSelector.java", "BodyUseAPI": ["com.watabou.utils.GameMath.gate(PixelScene.minZoom,float,PixelScene.maxZoom)", "com.shatteredpixel.shatteredpixeldungeon.scenes.CellSelector.zoom(com.watabou.utils.GameMath.gate(PixelScene.minZoom, (((startZoom) * curSpan) / (startSpan)), PixelScene.maxZoom))"], "Fixed commit": "6a93efdf6eafdffdd866d48a88f8fc965387c34d", "Url": "https://api.github.com/repos/prurigro/pixel-dungeon-gdx", "Date": "2014-10-27T17:17:38Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((url) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6112/buggy-version/src.main.java.moviescraper.doctord.view.customcomponents.AsyncImageComponent.java", "BodyUseAPI": [], "Fixed commit": "af68777c76643aac9cddeff5629291da13a7ece4", "Url": "https://api.github.com/repos/Wizell/JAVMovieScraper", "Date": "2017-09-30T17:07:33Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((currentGame.isPaused()) && (pauseScreenOpened)) || (!((currentGame.isPaused()) || (pauseScreenOpened)))) { Game.LOGGER.log(LogSeverity.DEBUG, \"Game\", ((\"Player \" + (currentGame.isPaused() ? \"resumed\" : \"paused\")) + \" the game\")); input.disableKeyRepeat(); currentGame.setPaused((!(currentGame.isPaused()))); pauseScreenOpened = !(pauseScreenOpened); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3464/buggy-version/src.main.java.nl.tudelft.semgroup4.GameState.java", "BodyUseAPI": ["nl.tudelft.model.Game.isPaused()", "nl.tudelft.model.Game.setPaused((!(currentGame.isPaused())))", "nl.tudelft.model.Game.isPaused()", "Game.LOGGER.log(LogSeverity.DEBUG,java.lang.String,((\"Player \" + (currentGame.isPaused() ? \"resumed\" : \"paused\")) + \" the game\"))"], "Fixed commit": "f63edd82d7b69f6c0d99890f99be2310c8d7141f", "Url": "https://api.github.com/repos/Pathemeous/sem-group-4", "Date": "2015-10-07T08:37:25Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getStringExtra(CameraPermissionActivity.ERROR_MESSAGE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(android.text.TextUtils.isEmpty(errorMessage))) { errorMessage(data.getStringExtra(CameraPermissionActivity.ERROR_MESSAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3236/buggy-version/tedbottompicker.src.main.java.gun0912.tedbottompicker.TedBottomPicker.java", "BodyUseAPI": [], "Fixed commit": "17289173761ab5eb866beafb516f8d18e32568e1", "Url": "https://api.github.com/repos/Tractive/TedBottomPicker", "Date": "2016-12-06T13:23:07Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chunkContext.getStepContext().getJobName().equals(JobConstants.RESUME_CLUSTER_JOB_NAME)) { clusterEntityMgr.syncUp(clusterName, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7329/buggy-version/server.cluster-mgmt.src.main.java.com.vmware.bdd.service.job.ClusterUpdateDataStep.java", "BodyUseAPI": [], "Fixed commit": "2416ff014cba99d23f7cd34b85fb04c9d99609f1", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2013-12-03T06:53:35Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (direction.equals(\"w\")) { movedir = \"west\"; }else if (direction.equals(\"z\")) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/9222/buggy-version/src.Cluedo.Game.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "56d93e81dc4eabad368de75e6eac7fee688b109f", "Url": "https://api.github.com/repos/christianevaroa/SWEN222_A1", "Date": "2013-08-07T23:56:49Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Cluedo.Board.getRoom(Cluedo.Player)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (inRoom != null) { java.lang.System.out.println((((currentPlayer) + \" entered the \") + inRoom)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/9222/buggy-version/src.Cluedo.Game.java", "BodyUseAPI": ["java.io.PrintStream.println((((currentPlayer) + \" entered the \") + inRoom))"], "Fixed commit": "56d93e81dc4eabad368de75e6eac7fee688b109f", "Url": "https://api.github.com/repos/christianevaroa/SWEN222_A1", "Date": "2013-08-07T23:56:49Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((screenParams.screenId) == null) || (!(screenParams.screenId.contains(\"Main\")))) { topBar.setVisibility(com.reactnativenavigation.screens.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6733/buggy-version/android.app.src.main.java.com.reactnativenavigation.screens.Screen.java", "BodyUseAPI": [], "Fixed commit": "6c17f7e1d42a12c8ca15e321441e18efa26ea614", "Url": "https://api.github.com/repos/clusio/react-native-navigation", "Date": "2017-11-10T18:10:53Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((workload.getWrl_id()) != (jkamal.ddbmssim.main.DBMSSimulator.SIMULATION_RUNS)) writer.println();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4165/buggy-version/DDBMSsim.src.jkamal.ddbmssim.io.SimulationMetricsLogger.java", "BodyUseAPI": [], "Fixed commit": "89c655ba30b9b2f896bb9ae8e59043b92eb87c8b", "Url": "https://api.github.com/repos/joarder/DDBMSsim", "Date": "2014-03-17T05:53:44Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sinapsi.client.web.OnlineStatusProvider.isOnline()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((onlineMode) != tmpVal) notifyWebServiceConnectionListeners(onlineMode);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1264/buggy-version/com.sinapsi.client.background.SinapsiDaemonThread.java", "BodyUseAPI": [], "Fixed commit": "f641ef5fe477701603cb513458f8ed48aba2aef5", "Url": "https://api.github.com/repos/SinapsiProject/Sinapsi-Core", "Date": "2015-08-10T13:40:34Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.toString()", "facesContext.getExternalContext().getSessionMap().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (name.equals(profileBean.getUsername())) { }else if (listOfNames.contains(name)) { java.lang.StringBuilder msg = new java.lang.StringBuilder(name); msg.append(\" ist bereits vergeben, bitte einen anderen w\u00e4hlen.\"); javax.faces.application.FacesMessage fm = new javax.faces.application.FacesMessage(javax.faces.application.FacesMessage.SEVERITY_ERROR, \"error on change\", msg.toString()); throw new javax.faces.validator.ValidatorException(fm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/290/buggy-version/src.main.java.de.jottyfan.camporganizer.jsf.NameValidator.java", "BodyUseAPI": ["java.util.List<java.lang.String>.contains(java.lang.String)"], "Fixed commit": "22eda8dde35933f05c336f8c41d20cf7527f5ef5", "Url": "https://api.github.com/repos/jottyfan/CampOrganizer", "Date": "2017-09-28T11:06:04Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((usedArraySpace) >= ((int) ((this.nodes.length) * 0.75))) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3860/buggy-version/src.HashTable.java", "BodyUseAPI": [], "Fixed commit": "263791dac1b3583b91fe7f3bda7d46f8af8b4155", "Url": "https://api.github.com/repos/cliffanderson/HashTable", "Date": "2016-03-30T13:32:10Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((uri.startsWith(\"http://\")) || (uri.startsWith(\"https://\"))) { intent = new android.content.Intent(android.content.Intent.ACTION_VIEW); intent.setData(android.net.Uri.parse(uri)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2737/buggy-version/router-api.src.main.java.cherry.android.router.api.RouteMeta.java", "BodyUseAPI": ["android.content.Intent.setData(android.net.Uri.parse(uri))", "android.net.Uri.parse(java.lang.String)"], "Fixed commit": "a6671f5e2d7cd27a9ac858f9e5d7fa3315af4105", "Url": "https://api.github.com/repos/etlevent/Router", "Date": "2017-05-27T08:03:50Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(uri)) throw new java.lang.RuntimeException(\"Uri cannot be Empty\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2737/buggy-version/router-api.src.main.java.cherry.android.router.api.RouterManager.java", "BodyUseAPI": [], "Fixed commit": "a6671f5e2d7cd27a9ac858f9e5d7fa3315af4105", "Url": "https://api.github.com/repos/etlevent/Router", "Date": "2017-05-27T08:03:50Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.squareup.protoparser.Option.findByName(field.getOptions(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (defaultOption != null) { code.append(\"=\"); java.lang.Object defaultValue = defaultOption.getValue(); if (defaultValue instanceof com.squareup.protoparser.EnumType.Value) { com.squareup.protoparser.EnumType.Value enumValue = ((com.squareup.protoparser.EnumType.Value) (defaultValue)); code.append(javaType).append(\".\").append(enumValue.getName()); }else if (defaultValue instanceof java.lang.String) { code.append(\"\\\"\").append(defaultValue).append(\"\\\"\"); }else { code.append(java.lang.String.valueOf(defaultValue)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4704/buggy-version/src.main.java.com.baidu.bjf.remoting.protobuf.ProtobufIDLProxy.java", "BodyUseAPI": ["com.squareup.protoparser.Option.getValue()"], "Fixed commit": "412b73e30b098cc284b8579221455ef9c9532458", "Url": "https://api.github.com/repos/jhunters/jprotobuf", "Date": "2015-05-08T08:17:11Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((remoteMethods.size()) > 1) { completeCallback.progress(id, null, result, resultKw); result = null; resultKw = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/226/buggy-version/WgsAPI.src.org.wgs.wamp.WampModule.java", "BodyUseAPI": [], "Fixed commit": "241c73442ff91dd4109c45c716b41f33e437bfda", "Url": "https://api.github.com/repos/jmarine/wgs", "Date": "2014-02-02T13:02:00Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node.has(\"discloseme\")) { setDiscloseMe(node.getBoolean(\"discloseme\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/226/buggy-version/WgsAPI.src.org.wgs.wamp.topic.WampPublishOptions.java", "BodyUseAPI": ["org.wgs.wamp.types.WampDict.getBoolean(java.lang.String)", "org.wgs.wamp.topic.WampPublishOptions.setDiscloseMe(node.getBoolean(\"discloseme\"))"], "Fixed commit": "241c73442ff91dd4109c45c716b41f33e437bfda", "Url": "https://api.github.com/repos/jmarine/wgs", "Date": "2014-02-02T13:02:00Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node.has(\"acknowledge\")) { setAck(node.getBoolean(\"acknowledge\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/226/buggy-version/WgsAPI.src.org.wgs.wamp.topic.WampPublishOptions.java", "BodyUseAPI": ["org.wgs.wamp.topic.WampPublishOptions.setAck(node.getBoolean(\"acknowledge\"))", "org.wgs.wamp.types.WampDict.getBoolean(java.lang.String)"], "Fixed commit": "241c73442ff91dd4109c45c716b41f33e437bfda", "Url": "https://api.github.com/repos/jmarine/wgs", "Date": "2014-02-02T13:02:00Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((iParams[0]) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6201/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.functions.misc.OSQLFunctionDate.java", "BodyUseAPI": [], "Fixed commit": "1dbdb5dc38d034aa55ab72ad0d1c0a9c3174b800", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-07-15T14:47:42Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dbTableName.equals(\"barrera_rigida_trabajos\"))) { medicionElementoColumnIndex = table.getColumn(\"Medici\ufffdn elemento\").getModelIndex(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5759/buggy-version/extGIA.src.es.icarto.gvsig.extgia.batch.BatchTrabajosTable.java", "BodyUseAPI": [], "Fixed commit": "ab2f24616449e038c843685e62bfd63d8783b4e2", "Url": "https://api.github.com/repos/iCarto/siga", "Date": "2015-07-13T09:12:39Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentPodcastList.remove(podcast)) ((net.alliknow.podcatcher.adapters.PodcastListAdapter) (adapter)).updateList(currentPodcastList);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/143/buggy-version/src.net.alliknow.podcatcher.view.fragments.PodcastListFragment.java", "BodyUseAPI": ["net.alliknow.podcatcher.view.fragments.PodcastListFragment.updateList(java.util.List<net.alliknow.podcatcher.model.types.Podcast>)"], "Fixed commit": "23f42270b433dbf7a95620de6df8806db35ab5bf", "Url": "https://api.github.com/repos/salema/PodCatcher-Deluxe-Android", "Date": "2013-10-25T10:17:27Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sk89q.craftbook.cart.CartMechanismBlocks.matches(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((destination.getLocation().getY()) == (destination.getWorld().getMaxHeight())) && up) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7545/buggy-version/src.main.java.com.sk89q.craftbook.cart.CartLift.java", "BodyUseAPI": [], "Fixed commit": "cd819684c58bfbe4728f7ac95ba66a38d383f5c8", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-01-12T11:53:12Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sk89q.craftbook.cart.CartMechanismBlocks.matches(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((destination.getLocation().getY()) == 0) && (!up)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7545/buggy-version/src.main.java.com.sk89q.craftbook.cart.CartLift.java", "BodyUseAPI": [], "Fixed commit": "cd819684c58bfbe4728f7ac95ba66a38d383f5c8", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-01-12T11:53:12Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lru) { if ((p.prev) == null) { this.ram.dequeue(); this.ram.enqueue(p); }else if ((p.next) != null) { this.ram.remove(p); this.ram.enqueue(p); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1748/buggy-version/data_structures.assignment_2.skeleton.MemoryManagementSystem.java", "BodyUseAPI": [], "Fixed commit": "fb7a291895dc7dae079d1102fb35f178217ac94b", "Url": "https://api.github.com/repos/oryband/homework", "Date": "2012-04-27T23:57:06Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (flip != (this.flip)) textures[step].flip(flip, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4103/buggy-version/com.BauhausGamesSyndicate.LudumDare29.GameObjects.AbstractEntity.java", "BodyUseAPI": ["textures[step].flip(boolean,boolean)"], "Fixed commit": "2c27aa9c196ff9676ddf9c806e7a16ed34d66414", "Url": "https://api.github.com/repos/eelfroth/BGS_LudumDare29", "Date": "2014-04-27T12:33:07Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.proofpoint.galaxy.coordinator.BinaryRepository.getBinaryUri(assignment.getBinary())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (binaryUri == null) { return javax.ws.rs.core.Response.status(Status.NOT_FOUND).entity((\"Unknown binary: \" + (assignment.getBinary()))).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8075/buggy-version/galaxy-coordinator.src.main.java.com.proofpoint.galaxy.coordinator.CoordinatorSlotResource.java", "BodyUseAPI": [], "Fixed commit": "7ed5ee36b0036e9763579fdc37fcdd3e0b50b88d", "Url": "https://api.github.com/repos/dain/galaxy-server", "Date": "2011-08-12T19:26:19Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (offset < (rangeInsideHost.getStartOffset())) offset = rangeInsideHost.getStartOffset();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8427/buggy-version/src.tirke.cupPlugin.psi.impl.CupJavaImpl.java", "BodyUseAPI": ["com.intellij.openapi.util.TextRange.getStartOffset()"], "Fixed commit": "8314cd2773b3c837d1427406432a381c2cc0f7e1", "Url": "https://api.github.com/repos/Tirke/cup-plugin", "Date": "2016-02-23T12:49:52Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (offset > (rangeInsideHost.getEndOffset())) offset = rangeInsideHost.getEndOffset();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8427/buggy-version/src.tirke.cupPlugin.psi.impl.CupJavaImpl.java", "BodyUseAPI": ["com.intellij.openapi.util.TextRange.getEndOffset()"], "Fixed commit": "8314cd2773b3c837d1427406432a381c2cc0f7e1", "Url": "https://api.github.com/repos/Tirke/cup-plugin", "Date": "2016-02-23T12:49:52Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (res != null) { if ((res.getErrorMessage()) != null) { org.openremote.controller.service.BeehiveCommandCheckService.log.warn(\"Remote command service returned an error : {0}\", res.getErrorMessage()); }else { java.util.List<org.openremote.controllercommand.domain.ControllerCommandDTO> commands = resolveResult(res.getResult()); if ((commands != null) && (!(commands.isEmpty()))) { executeCommand(commands.get(0)); isFastPolling = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6572/buggy-version/controller.src.main.java.org.openremote.controller.service.BeehiveCommandCheckService.java", "BodyUseAPI": ["org.openremote.rest.GenericResourceResultWithErrorMessage.getErrorMessage()", "org.openremote.controller.service.BeehiveCommandCheckService.BeehiveCommandChecker.resolveResult(res.getResult())", "org.openremote.rest.GenericResourceResultWithErrorMessage.getResult()", "org.openremote.controller.utils.Logger.warn(java.lang.String,res.getErrorMessage())", "org.openremote.rest.GenericResourceResultWithErrorMessage.getErrorMessage()"], "Fixed commit": "79b9de5767a2b2abe9aff19a13b3be1bd340cef1", "Url": "https://api.github.com/repos/openremote/Controller", "Date": "2016-09-14T14:57:14Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((api.getMaxHoldings()) == (-1)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/9191/buggy-version/src.org.melonbrew.fe.database.Account.java", "BodyUseAPI": [], "Fixed commit": "6627f0e47a3b58679974d315db90e9a8673e3635", "Url": "https://api.github.com/repos/niccholaspage/Fe", "Date": "2012-09-01T15:44:29Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<java.lang.String>.pop()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lastView.equals(ParentFrameView.CREATE_CONFERENCE_OPTIONS_VIEW)) { isOpen = !(isOpen); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8076/buggy-version/client.Controller.java", "BodyUseAPI": [], "Fixed commit": "e1d8469487eee4e93eafee478aad45640a6c4908", "Url": "https://api.github.com/repos/BlueAccords/ConferenceProject", "Date": "2017-05-27T20:24:38Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.sakaiproject.component.gradebook.GradebookExternalAssessmentServiceImpl.logData.isDebugEnabled()) org.sakaiproject.component.gradebook.GradebookExternalAssessmentServiceImpl.logData.debug(((\"Deleted \" + numberDeletedEvents) + \"records from gb_grading_event_t\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8139/buggy-version/edu-services.gradebook-service.impl.src.java.org.sakaiproject.component.gradebook.GradebookExternalAssessmentServiceImpl.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)"], "Fixed commit": "737724f330828cb2055960df4400cdf3826a2c8f", "Url": "https://api.github.com/repos/csev/sakai", "Date": "2015-06-11T17:21:10Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (jsonObject.has(\"comment\")) { this.comment = jsonObject.getString(\"comment\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4741/buggy-version/app.src.main.java.com.gema.photocontroller.models.JournalRecord.java", "BodyUseAPI": [], "Fixed commit": "41f31c2c8ed6dd8e50beefb68a6fc097f6e02dbe", "Url": "https://api.github.com/repos/RusFjord/Photocontroller", "Date": "2016-12-25T15:47:27Z"},
{"Line": "=>737", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.hyx.android.Game351.util.MyTools.getCurrentApkType(this)) == (com.hyx.android.Game351.util.ApkType.TYPE_21)) headImag.setImageResource(R.drawable.transparent); else headImag.setImageResource(R.drawable.no_image);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6727/buggy-version/app.src.main.java.com.hyx.android.Game351.home.MakeSubgectFavorite.java", "BodyUseAPI": [], "Fixed commit": "80e3de1741371ad9b5ff048589a1171d1c72b586", "Url": "https://api.github.com/repos/wanliLiu/BBXStudy", "Date": "2016-08-27T15:10:26Z"},
{"Line": "=>1155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.hyx.android.Game351.util.MyTools.getCurrentApkType(this)) == (com.hyx.android.Game351.util.ApkType.TYPE_21)) headImag.setImageResource(R.drawable.transparent); else headImag.setImageResource(R.drawable.no_image);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6727/buggy-version/app.src.main.java.com.hyx.android.Game351.home.MakeSubgect.java", "BodyUseAPI": [], "Fixed commit": "80e3de1741371ad9b5ff048589a1171d1c72b586", "Url": "https://api.github.com/repos/wanliLiu/BBXStudy", "Date": "2016-08-27T15:10:26Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mETxtUsername.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((username.length()) < 1) { android.widget.Toast.makeText(getActivity(), \"You must enter a username\", Toast.LENGTH_LONG).show(); }else if ((password.length()) < 6) { android.widget.Toast.makeText(getActivity(), \"Password must be at least six characters\", Toast.LENGTH_LONG).show(); }else if ((verify.length()) < 6) { android.widget.Toast.makeText(getActivity(), \"Please enter the correct password\", Toast.LENGTH_LONG).show(); }else if (!(password.equals(verify))) { android.widget.Toast.makeText(getActivity(), \"Passwords do not match\", Toast.LENGTH_SHORT).show(); }else { mRegisterPresenter.register(getActivity(), emailId, password); mProgressDialog.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2900/buggy-version/app.src.main.java.cs48.project.com.parl.ui.fragments.RegisterFragment.java", "BodyUseAPI": [], "Fixed commit": "048fd56c6c872b44f22bc4f5e90de3bfa5f76e7b", "Url": "https://api.github.com/repos/whyyao/Parle", "Date": "2017-05-30T20:25:15Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.knirirr.beecount.widgets.LinkEditWidget.getMasterId()", "com.knirirr.beecount.widgets.LinkEditWidget.getSlaveId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mid == sid) { if ((mid == 0) && (sid == 0)) { if (lew.getMasterName().equals(lew.getSlaveName())) { stop = true; message = getString(R.string.mismatch); } }else { stop = true; message = getString(R.string.mismatch); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7236/buggy-version/beecount.src.main.java.com.knirirr.beecount.EditProjectActivity.java", "BodyUseAPI": [], "Fixed commit": "9df21f0b936f5baa56d1c1409dd16254e3d5d6d3", "Url": "https://api.github.com/repos/knirirr/BeeCount", "Date": "2014-06-16T21:10:22Z"},
{"Line": "=>1480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.almalence.opencam.PluginManager.getInstance().getActiveModeID().equals(\"video\"))) { com.almalence.opencam.MainScreen.getGUIManager().lockControls = false; com.almalence.opencam.PluginManager.getInstance().sendMessage(com.almalence.opencam.PluginManager.MSG_BROADCAST, com.almalence.opencam.PluginManager.MSG_CONTROL_UNLOCKED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3177/buggy-version/src.com.almalence.opencam.PluginManager.java", "BodyUseAPI": [], "Fixed commit": "57310097423bbb98f8c5d841933da92260d327c9", "Url": "https://api.github.com/repos/almalence/OpenCamera", "Date": "2014-10-21T09:29:16Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isPlayer) { copyEquipmentTo(li); if ((maxHealth) != null) { li.setMaxHealth(maxHealth); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5691/buggy-version/src.main.java.com.elmakers.mine.bukkit.entity.EntityData.java", "BodyUseAPI": [], "Fixed commit": "564de8bac156ccfa552fdf219356c455cbd8107a", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2016-02-28T08:02:04Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((accountingcus.getExtendfeeaccs()) != null) && (!(accountingcus.getExtendfeeaccs().isEmpty()))) { for (com.vn.ael.persistence.entity.Extendfeeacc extendfeeacc : accountingcus.getExtendfeeaccs()) { extendfeeacc.setAccountingcus(accountingcus); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8460/buggy-version/src.main.java.com.vn.ael.webapp.util.EntityUtil.java", "BodyUseAPI": ["com.vn.ael.persistence.entity.Accountingcus.getExtendfeeaccs()", "com.vn.ael.persistence.entity.Extendfeeacc.setAccountingcus(com.vn.ael.persistence.entity.Accountingcus)"], "Fixed commit": "15f35d869214a6c1e04516f6d034c8d3ea038508", "Url": "https://api.github.com/repos/linhrepo/ael", "Date": "2015-04-09T19:39:19Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((serverMessage.getType()) == (com.core.ChatMessage.SERVERINFO)) { lblUsername.setText(\"SERVER: \"); lblUsername.setTextFill(Color.GRAY); java.lang.System.out.println((\"Server: \" + (serverMessage.getMessage()))); }else if ((serverMessage.getType()) == (com.core.ChatMessage.SERVERERROR)) { lblUsername.setText(\"SERVER: \"); lblUsername.setTextFill(Color.RED); java.lang.System.err.println((\"Server: \" + (serverMessage.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3475/buggy-version/src.com.core.Network.Client.java", "BodyUseAPI": ["com.core.ChatMessage.getMessage()", "java.io.PrintStream.println((\"Server: \" + (serverMessage.getMessage())))", "com.core.ChatMessage.getMessage()", "java.io.PrintStream.println((\"Server: \" + (serverMessage.getMessage())))", "com.core.ChatMessage.getType()"], "Fixed commit": "7447fd8ec41d687e546c9f20814ed475f8323b82", "Url": "https://api.github.com/repos/E223/ChatApplication", "Date": "2017-07-19T21:31:03Z"},
{"Line": "=>620", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSelectedProbeList) != null) { currentSelectedProbeList[0].delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/952/buggy-version/uk.ac.babraham.SeqMonk.Filters.GeneSetFilter.GeneSetDisplay.java", "BodyUseAPI": [], "Fixed commit": "2decb54d537f260633011e0c3b6f440a6ae5588d", "Url": "https://api.github.com/repos/s-andrews/SeqMonk", "Date": "2017-06-15T13:10:32Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (taskList == null) { taskList = new java.util.HashMap<>(); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2056/buggy-version/module8.todoservlet.src.main.java.timemanagement.TasksServlet.java", "BodyUseAPI": [], "Fixed commit": "c098c98dc7b676f93d3f8c96c321731e0f42109e", "Url": "https://api.github.com/repos/sustav86/goITEnterprise", "Date": "2016-11-02T05:51:53Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((next) == null) && (!(this.hasNext()))) { throw new java.util.NoSuchElementException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4315/buggy-version/modules.library.main.src.main.java.org.geotools.data.store.FilteringFeatureIterator.java", "BodyUseAPI": [], "Fixed commit": "d5a8834b8362d08795cd8a13aa09fcbafbba5abe", "Url": "https://api.github.com/repos/roarbra/geotools", "Date": "2016-04-14T15:00:51Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (str != null) { java.lang.System.out.println(str); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/9107/buggy-version/src.main.java.client.ChatClient.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "0643b6299c8dfead669060e51d1a3101c7f6e159", "Url": "https://api.github.com/repos/vitalijzad/socket-chat", "Date": "2017-04-30T08:25:19Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index >= (compCenters.size())) { index = (compCenters.size()) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7366/buggy-version/TaskManager.src.main.java.taskManager.prototypeDnD.StagePanel.java", "BodyUseAPI": ["java.util.List<java.awt.Point>.size()"], "Fixed commit": "ac2621fd2e566cac133603973d23c1fb3cf600b2", "Url": "https://api.github.com/repos/slash-slash-no-comment-WPI-cs3733/wpi-suite", "Date": "2014-11-18T02:33:56Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((species.getLeader()) == null) { out.addColumn((-1)); }else { out.addColumn(species.getLeader().getGenomeID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8104/buggy-version/src.main.java.org.encog.neural.neat.PersistNEATPopulation.java", "BodyUseAPI": ["org.encog.persist.EncogWriteHelper.addColumn(species.getLeader().getGenomeID())", "org.encog.ml.genetic.species.Species.getLeader()", "species.getLeader().getGenomeID()"], "Fixed commit": "a68a9defff5b7a08f009eae4b0966b966bbc4b6a", "Url": "https://api.github.com/repos/encog/encog-java-core", "Date": "2011-09-07T23:33:59Z"},
{"Line": "=>1761", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (borNumber == 0) { new popupMsg(\"Error\", \"Unable to return copy\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3982/buggy-version/Server.java", "BodyUseAPI": [], "Fixed commit": "5f06a10564486c0a69ad1640e53f119d75bba07c", "Url": "https://api.github.com/repos/syedahaider97/Database", "Date": "2017-12-14T15:53:06Z"},
{"Line": "=>576", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mashape.unirest.http.Unirest.patch(\"https://discordapp.com/api/users/@me\").header(\"authorization\", token).header(\"Content-Type\", \"application/json\").body(params.toString()).asJson()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (response.getBody().getObject().has(\"email\")) { setEmail(response.getBody().getObject().getString(\"email\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4568/buggy-version/src.main.java.de.btobastian.javacord.ImplDiscordAPI.java", "BodyUseAPI": ["response.getBody().getObject()", "response.getBody().getObject().getString(java.lang.String)", "com.mashape.unirest.http.HttpResponse<com.mashape.unirest.http.JsonNode>.getBody()", "de.btobastian.javacord.ImplDiscordAPI.6.setEmail(response.getBody().getObject().getString(\"email\"))"], "Fixed commit": "c888cedb0cdc3ba79da87c06763bd0016d564b52", "Url": "https://api.github.com/repos/Javacord/Javacord", "Date": "2016-05-07T13:37:39Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(showLocation.equals(\"null\"))) { switchButton.setChecked(true); }else { switchButton.setChecked(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/9193/buggy-version/app.src.main.java.com.example.dagna.meetapp.Settings.java", "BodyUseAPI": [], "Fixed commit": "fecb04a815b2bacdc6034fa993687328db1e4342", "Url": "https://api.github.com/repos/dturant/MeetApp", "Date": "2017-12-27T12:18:01Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((enemy.getHealthPoints()) <= 0) { java.lang.System.out.println(\"You won this fight, but it was not easy.\\n\"); return board; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2233/buggy-version/src.game.GameInterface.java", "BodyUseAPI": [], "Fixed commit": "82428382d5c4d10fe4015787742cb565dd83543e", "Url": "https://api.github.com/repos/LukaszW1/Slash", "Date": "2017-05-25T18:44:34Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((enemy.getHealthPoints()) > 0) { return game.GameInterface.choseToFight(board, player, enemy); }else return board;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2233/buggy-version/src.game.GameInterface.java", "BodyUseAPI": ["game.GameInterface.choseToFight(int,game.creatures.player.Player,game.creatures.enemies.Enemy)"], "Fixed commit": "82428382d5c4d10fe4015787742cb565dd83543e", "Url": "https://api.github.com/repos/LukaszW1/Slash", "Date": "2017-05-25T18:44:34Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((start) < (end)) { receiver.add(new info.bioinfweb.jphyloio.events.CharacterSetIntervalEvent(start, end)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7921/buggy-version/main.info.bioinfweb.libralign.io.src.info.bioinfweb.libralign.model.io.TokenSetAdapter.java", "BodyUseAPI": [], "Fixed commit": "40da4a1199fc44a7baa6dd4a8b933657e70f9083", "Url": "https://api.github.com/repos/bioinfweb/LibrAlign", "Date": "2017-12-13T16:12:04Z"},
{"Line": "=>637", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.arkasoft.jton.JtonObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value.isTransient()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7054/buggy-version/src.com.arkasoft.jton.serialization.JsonSerializer.java", "BodyUseAPI": [], "Fixed commit": "e3de1988e58bce9b9a3bde1bb4cf407e256de672", "Url": "https://api.github.com/repos/ggeorg/jton-lib", "Date": "2015-09-27T21:38:59Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Enumeration.nextElement()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(\"xml\".equalsIgnoreCase(prefix))) { java.lang.String uri = ns.getURI(prefix); addAttribute(attributes, (prefix == \"\" ? \"xmlns\" : \"xmlns:\" + prefix), uri); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/9087/buggy-version/src.extension.csw.core.src.main.java.org.geoserver.csw.response.AbstractRecordTransformer.java", "BodyUseAPI": ["org.geoserver.csw.response.AbstractRecordTransformer.AbstractRecordTranslator.addAttribute(org.xml.sax.helpers.AttributesImpl,(prefix == \"\" ? \"xmlns\" : \"xmlns:\" + prefix),java.lang.String)", "org.xml.sax.helpers.NamespaceSupport.getURI(java.lang.String)"], "Fixed commit": "a7654ff087c731730d04f8b207dfaa1d5c1da6b2", "Url": "https://api.github.com/repos/gordcorp/geoserver", "Date": "2015-07-09T18:19:08Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldVersion < 11) { dropAndRecreateSynergyToDoDbV11(db); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6848/buggy-version/app.src.main.java.com.nineworldsdeep.gauntlet.sqlite.NwdDbOpenHelper.java", "BodyUseAPI": [], "Fixed commit": "e99464b725ee5882578d9713a3e569348813676e", "Url": "https://api.github.com/repos/BBuchholz/Gauntlet", "Date": "2016-12-17T03:25:19Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(bestOfCT.containsKey(score))) { bestOfCT.put(score, it.getKey()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/73/buggy-version/src.ca.ipredict.predictor.CPT.CountTable.java", "BodyUseAPI": ["java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(double,java.lang.Integer)"], "Fixed commit": "c18e595231a536753327abd2ed5b2b66840bfda5", "Url": "https://api.github.com/repos/tedgueniche/IPredict", "Date": "2014-01-19T20:34:44Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (size == minSize) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/73/buggy-version/src.ca.ipredict.predictor.CPT.NewCPTHelper.java", "BodyUseAPI": [], "Fixed commit": "c18e595231a536753327abd2ed5b2b66840bfda5", "Url": "https://api.github.com/repos/tedgueniche/IPredict", "Date": "2014-01-19T20:34:44Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (unsavedChanges()) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2890/buggy-version/src.controllers.map.DraggableNode.java", "BodyUseAPI": [], "Fixed commit": "0d782a951093a3364dd2dd91d6e9fd5a2077f6ff", "Url": "https://api.github.com/repos/ateamwpi/HospitalKiosk", "Date": "2017-04-07T18:53:49Z"},
{"Line": "=>608", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((de.ovgu.featureide.fm.core.base.IFeatureModel) (viewer.getInput())) != (((de.ovgu.featureide.fm.ui.editors.FeatureModelEditor) (active_editor)).getFeatureModel())) viewer.setInput(((de.ovgu.featureide.fm.ui.editors.FeatureModelEditor) (active_editor)).getFeatureModel());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2061/buggy-version/plugins.de.ovgu.featureide.ui.src.de.ovgu.featureide.ui.views.collaboration.outline.Outline.java", "BodyUseAPI": ["org.eclipse.ui.IEditorPart.getFeatureModel()", "org.eclipse.jface.viewers.TreeViewer.setInput(((de.ovgu.featureide.fm.ui.editors.FeatureModelEditor) (active_editor)).getFeatureModel())"], "Fixed commit": "8c3f09105f9f2035b05a074d7e3bf27e03cbe256", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2016-10-05T08:44:11Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((enabledCipherSuites) != null) { s.setEnabledCipherSuites(enabledCipherSuites); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7661/buggy-version/src.main.java.com.spotify.google.cloud.pubsub.client.ConfigurableSSLSocketFactory.java", "BodyUseAPI": [], "Fixed commit": "d5650f5c0520865622d7be63aa60d9c245aaec3a", "Url": "https://api.github.com/repos/spotify/async-google-pubsub-client", "Date": "2016-01-19T21:26:05Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((enabledCipherSuites) != null) { s.setEnabledCipherSuites(enabledCipherSuites); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7661/buggy-version/src.main.java.com.spotify.google.cloud.pubsub.client.ConfigurableSSLSocketFactory.java", "BodyUseAPI": [], "Fixed commit": "d5650f5c0520865622d7be63aa60d9c245aaec3a", "Url": "https://api.github.com/repos/spotify/async-google-pubsub-client", "Date": "2016-01-19T21:26:05Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((enabledCipherSuites) != null) { s.setEnabledCipherSuites(enabledCipherSuites); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7661/buggy-version/src.main.java.com.spotify.google.cloud.pubsub.client.ConfigurableSSLSocketFactory.java", "BodyUseAPI": [], "Fixed commit": "d5650f5c0520865622d7be63aa60d9c245aaec3a", "Url": "https://api.github.com/repos/spotify/async-google-pubsub-client", "Date": "2016-01-19T21:26:05Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((enabledCipherSuites) != null) { s.setEnabledCipherSuites(enabledCipherSuites); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7661/buggy-version/src.main.java.com.spotify.google.cloud.pubsub.client.ConfigurableSSLSocketFactory.java", "BodyUseAPI": [], "Fixed commit": "d5650f5c0520865622d7be63aa60d9c245aaec3a", "Url": "https://api.github.com/repos/spotify/async-google-pubsub-client", "Date": "2016-01-19T21:26:05Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((enabledCipherSuites) != null) { s.setEnabledCipherSuites(enabledCipherSuites); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7661/buggy-version/src.main.java.com.spotify.google.cloud.pubsub.client.ConfigurableSSLSocketFactory.java", "BodyUseAPI": [], "Fixed commit": "d5650f5c0520865622d7be63aa60d9c245aaec3a", "Url": "https://api.github.com/repos/spotify/async-google-pubsub-client", "Date": "2016-01-19T21:26:05Z"},
{"Line": "=>672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item.isCategory) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8879/buggy-version/app.src.main.java.com.zfdang.zsmth_android.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "001128d94e497b12f129f4e82274b31bfc8452b3", "Url": "https://api.github.com/repos/zfdang/zSMTH-Android", "Date": "2016-06-04T12:49:58Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((iterator) != null) return iterator.hasNext() ? true : false; else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2831/buggy-version/bridge.src.main.java.hbase.HBQueryScanner.java", "BodyUseAPI": [], "Fixed commit": "1c763900b908ab79302af603106bc727fd132bb5", "Url": "https://api.github.com/repos/nickozoulis/thunderstorm", "Date": "2015-11-24T11:33:28Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (mobile != null) { etCityRegister.setText(city); ccp.setCountryForPhoneCode(java.lang.Integer.parseInt(mobile.split(\"-\")[0])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5818/buggy-version/src.main.java.com.tensai.grenius.ui.profile.ProfileActivity.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "com.hbb20.CountryCodePicker.setCountryForPhoneCode(int)"], "Fixed commit": "b9567a9998f88bc8149fc3515a2225b166cfdebc", "Url": "https://api.github.com/repos/suryanshsoni/GREnius", "Date": "2017-11-21T12:53:54Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.bclearn.util.ClasspathPackageScanner.toFullyQualifiedName(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (temp.startsWith(\".\")) { temp = temp.substring(1, temp.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/681/buggy-version/src.main.java.cn.bclearn.util.ClasspathPackageScanner.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "b1fa3f75e2cd26cc1143653af977bbd02ec579f5", "Url": "https://api.github.com/repos/27hao/micro-mvc", "Date": "2017-08-20T10:16:50Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (config.useSudo()) { com.netflix.priam.defaultimpl.CassandraProcessManager.logger.info(\"Configured to use sudo to stop C*\"); if (!(\"root\".equals(java.lang.System.getProperty(\"user.name\")))) { command.add(com.netflix.priam.defaultimpl.CassandraProcessManager.SUDO_STRING); command.add(\"-n\"); command.add(\"-E\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5289/buggy-version/priam.src.main.java.com.netflix.priam.defaultimpl.CassandraProcessManager.java", "BodyUseAPI": [], "Fixed commit": "9aabe998d9c19e5d30b2c16315fe0ea569691cc9", "Url": "https://api.github.com/repos/jolynch/Priam", "Date": "2017-08-23T23:19:23Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player == null) throw new net.minecraft.command.PlayerNotFoundException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2480/buggy-version/mod-src.com.theisleoffavalon.mcmanager.commands.CommandHeal.java", "BodyUseAPI": [], "Fixed commit": "1887e0a42fca7fa171af6f3d2bdc57927a264862", "Url": "https://api.github.com/repos/cadyyan/MCManager", "Date": "2013-02-16T05:22:43Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gridNodes.get(i).unit.node(BattleNode._NAME)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (possibleTarget == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/19/buggy-version/app.src.main.java.noteworthyengine.BattleSystem.java", "BodyUseAPI": [], "Fixed commit": "86b04406b2876bf40b989b82dfdc25e985786bf9", "Url": "https://api.github.com/repos/ericmok/android-rts-game", "Date": "2015-03-22T03:22:01Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((memory.getIcon()) != null) { java.lang.String uri = android.net.Uri.fromFile(new java.io.File(memory.getIcon())).toString(); java.lang.String decoded = android.net.Uri.decode(uri); imageLoader.displayImage(decoded, icon); }else { icon.setImageResource(R.drawable.no_image); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2802/buggy-version/app.src.main.java.com.example.lenovo.memcreator.activities.ViewMemory.java", "BodyUseAPI": ["android.net.Uri.fromFile(new java.io.File(memory.getIcon())).toString()", "android.net.Uri.fromFile(java.io.File)", "com.example.lenovo.memcreator.models.Memory.getIcon()"], "Fixed commit": "f2a923a5f709b55e45b648808faad011f1256a41", "Url": "https://api.github.com/repos/ahqmrf/MemCreator", "Date": "2017-02-01T13:55:40Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isNumeral(pNumber2)) { de.uni_freiburg.informatik.ultimate.logic.Sort intSort = pNumber1.getTheory().getNumericSort(); de.uni_freiburg.informatik.ultimate.logic.Sort realSort = pNumber1.getTheory().getRealSort(); assert (intSort.equals(pNumber1.getSort())) || (realSort.equals(pNumber1.getSort())); assert (intSort.equals(pNumber2.getSort())) || (realSort.equals(pNumber2.getSort())); return getFormulaCreator().getEnv().term(\"/\", pNumber1, pNumber2); }else { return super.divide(pNumber1, pNumber2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2241/buggy-version/src.org.sosy_lab.solver.smtinterpol.SmtInterpolRationalFormulaManager.java", "BodyUseAPI": ["de.uni_freiburg.informatik.ultimate.logic.Sort.equals(pNumber2.getSort())", "de.uni_freiburg.informatik.ultimate.logic.Term.getSort()", "getFormulaCreator().getEnv().term(java.lang.String,de.uni_freiburg.informatik.ultimate.logic.Term,de.uni_freiburg.informatik.ultimate.logic.Term)", "de.uni_freiburg.informatik.ultimate.logic.Sort.equals(pNumber2.getSort())", "de.uni_freiburg.informatik.ultimate.logic.Term.getSort()", "org.sosy_lab.solver.smtinterpol.SmtInterpolNumeralFormulaManager<org.sosy_lab.solver.api.NumeralFormula, org.sosy_lab.solver.api.NumeralFormula.RationalFormula>.divide(de.uni_freiburg.informatik.ultimate.logic.Term,de.uni_freiburg.informatik.ultimate.logic.Term)"], "Fixed commit": "983a85d3bfaf64f5cc116e376da87cfd47977c3a", "Url": "https://api.github.com/repos/sosy-lab/java-smt", "Date": "2016-01-21T14:07:36Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (moreco.eas.evolable.asia.moreco.util.NetworkUtils.isOnline(this)) { new moreco.eas.evolable.asia.moreco.MainActivity.LoadDictVesion().execute(); if (mGlobalConfig.getKeyMusttoUpdateDictData()) { new moreco.eas.evolable.asia.moreco.MainActivity.LoadDictData().execute(); } }else { android.widget.Toast.makeText(this, \"Connect your device to the internet to run Google Translate function.\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8465/buggy-version/04.Source.morecoandroid.mobile.src.main.java.moreco.eas.evolable.asia.moreco.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "50a6e6a7be2e806ecb5e0d2dbcc258d24813edf8", "Url": "https://api.github.com/repos/umbalaconmeogia/MoreCo", "Date": "2016-07-10T12:46:41Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (touchingBombs == 0) { mGameView.getButton(x, y).setText(\"\"); }else { mGameView.getButton(x, y).setText(java.lang.Integer.toString(touchingBombs)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4073/buggy-version/wear.src.main.java.com.aidangrabe.studentapp.activities.games.MineSweeperActivity.java", "BodyUseAPI": ["java.lang.Integer.toString(int)", "mGameView.getButton(x, y).setText(java.lang.String)"], "Fixed commit": "11bbb3f26a4775ea5989a9ba424f7892af189ccf", "Url": "https://api.github.com/repos/aidangrabe/student-wear-app", "Date": "2015-02-21T22:08:58Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) != null) timer.start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3150/buggy-version/src.util.window.MusicDialog.java", "BodyUseAPI": [], "Fixed commit": "fc6f54885f3fa3248853d692ad67648d7ea4a25e", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-11-29T17:26:17Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mIsUpdatingUnchangedGroup)) { mListener.onGroupsChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7311/buggy-version/packages.SystemUI.src.com.android.systemui.statusbar.phone.NotificationGroupManager.java", "BodyUseAPI": [], "Fixed commit": "e68228fbd9f5cc07a5afa29ffc75a06bbf3f4cd1", "Url": "https://api.github.com/repos/DysfunctionalROMs/frameworks_base", "Date": "2016-08-16T18:36:24Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (main.getEnv().getAudioController().isPlaying()) { main.getEnv().getAudioController().getBackgroundMusic().play(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3094/buggy-version/ContextDesktop.src.main.java.com.github.migi_1.Context.main.InputHandler.java", "BodyUseAPI": ["main.getEnv().getAudioController().getBackgroundMusic().play()", "main.getEnv().getAudioController().getBackgroundMusic()", "main.getEnv().getAudioController()", "com.github.migi_1.Context.main.Main.getEnv()"], "Fixed commit": "a6b833fc5f75aa4e3264369cb620f5f8c633fb6d", "Url": "https://api.github.com/repos/LMiljak/ContextMigi-1", "Date": "2016-06-09T08:39:19Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playing == true) { java.util.ListIterator<fi.mikuz.boarder.component.SoundPlayer> iterator = SoundboardMenu.mSoundPlayerList.listIterator(); while (iterator.hasNext()) { fi.mikuz.boarder.component.SoundPlayer iteratedPlayer = iterator.next(); if (!(iteratedPlayer.isPlaying())) { iterator.remove(); iteratedPlayer.release(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4100/buggy-version/src.fi.mikuz.boarder.util.SoundPlayerControl.java", "BodyUseAPI": [], "Fixed commit": "6121adf6656bbe3c88a1ee0516afac2a1eab30a0", "Url": "https://api.github.com/repos/Mikuz/Boarder", "Date": "2012-05-10T18:00:24Z"},
{"Line": "=>1036", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!value) { for (mca.data.PlayerMemory memory : playerMemories.values()) { if ((memory.getDialogueType()) == (mca.enums.EnumDialogueType.CHILD)) { memory.setDialogueType(EnumDialogueType.ADULT); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2492/buggy-version/src.main.java.mca.entity.EntityHuman.java", "BodyUseAPI": [], "Fixed commit": "f79856d2b6e813661f53780230b5c0b70f49d7ae", "Url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive", "Date": "2015-05-10T04:45:05Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (typename.contains(edu.hm.diagne.arch.factory_pattern.SwitchedCounterFactory.COUNTER_STRING)) { typename = typename.substring(0, typename.indexOf(edu.hm.diagne.arch.factory_pattern.SwitchedCounterFactory.COUNTER_STRING)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/9144/buggy-version/src.edu.hm.diagne.arch.factory_pattern.SwitchedCounterFactory.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "46839249c40ef5e2bdfb70fe6e9d30714aebe52f", "Url": "https://api.github.com/repos/Alioun/FactoryPattern", "Date": "2016-05-11T19:49:00Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (typename.contains(edu.hm.diagne.arch.factory_pattern.SwitchedCounterFactory.COUNTER_STRING)) { typename = typename.substring(0, typename.indexOf(edu.hm.diagne.arch.factory_pattern.SwitchedCounterFactory.COUNTER_STRING)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/9144/buggy-version/src.edu.hm.diagne.arch.factory_pattern.SwitchedCounterFactory.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "46839249c40ef5e2bdfb70fe6e9d30714aebe52f", "Url": "https://api.github.com/repos/Alioun/FactoryPattern", "Date": "2016-05-11T19:49:00Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jackgerrits.SensorController.getSensor(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sensor == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4708/buggy-version/src.com.jackgerrits.SensorController.java", "BodyUseAPI": [], "Fixed commit": "bd940819ee1614f04202498159d5519e099949b7", "Url": "https://api.github.com/repos/jackgerrits/smart-home-server", "Date": "2015-05-31T11:46:28Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ch.getUuid().compareTo(characteristicItemBean.getCharacteristic().getUuid())) == 0) { characteristicItemBean.setCharacteristicValue(strValue); characteristicValueText.setVisibility(View.VISIBLE); characteristicValue.setVisibility(View.VISIBLE); characteristicValue.setText(strValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5657/buggy-version/app.src.main.java.org.esec.mcg.bleinsight.viewholder.CharacteristicViewHolder.java", "BodyUseAPI": ["org.esec.mcg.bleinsight.CharacteristicItemBean.setCharacteristicValue(java.lang.String)"], "Fixed commit": "a6292729b0f05a24d85b52f512a2594243fa9e9b", "Url": "https://api.github.com/repos/fightyz/BLEInsight", "Date": "2015-10-14T07:47:05Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuffer.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(result)) { try { result = org.apache.commons.io.IOUtils.toString(stdout, java.nio.charset.StandardCharsets.UTF_8); } catch (java.io.IOException e) { com.cloud.utils.ssh.SshHelper.s_logger.error((\"Couldn't get content of input stream due to: \" + (e.getMessage()))); return new com.cloud.utils.Pair<java.lang.Boolean, java.lang.String>(false, result); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4701/buggy-version/utils.src.main.java.com.cloud.utils.ssh.SshHelper.java", "BodyUseAPI": [], "Fixed commit": "1190d76a65e93eefec7c19255e07cea18cf4db1f", "Url": "https://api.github.com/repos/nlivens/cloudstack", "Date": "2016-08-24T12:32:55Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(uri.getPath().endsWith(\"/\"))) { converter.toFileURL(uri.resolve(\".\").toURL()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3266/buggy-version/jaggr-service.src.main.java.com.ibm.jaggr.service.impl.resource.BundleResourceFactory.java", "BodyUseAPI": ["org.eclipse.osgi.service.urlconversion.URLConverter.toFileURL(java.net.URL)", "java.net.URI.toURL()", "java.net.URI.resolve(java.lang.String)"], "Fixed commit": "06dce98f9f93ff4945b3d7aab0ef1ad19a15398d", "Url": "https://api.github.com/repos/OpenNTF/JavascriptAggregator", "Date": "2013-01-14T16:36:04Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startLocation.equals(\"\")) || (destination.equals(\"\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2875/buggy-version/mobility-profile-api.src.main.java.fi.ohtu.mobilityprofileapi.MessageCreator.java", "BodyUseAPI": [], "Fixed commit": "1a7f561dd46739a57ab7e1852b6182ef10e9a8d8", "Url": "https://api.github.com/repos/mobility-profile/Mobility-Profile-API", "Date": "2016-07-21T11:54:01Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ship.getHealth()) <= 0) { attackButton.setEnabled(false); moveButton.setEnabled(false); cancelSelection.setEnabled(false); }else { attackButton.setEnabled(true); moveButton.setEnabled(true); cancelSelection.setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4528/buggy-version/proj4.src.eecs285.proj4.group.StatusPanel.java", "BodyUseAPI": [], "Fixed commit": "4c7df81cb667cee4e1127931054a9a270e220152", "Url": "https://api.github.com/repos/yossier/Project-4-EECS-285", "Date": "2014-12-01T00:48:04Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((key.startsWith(\"java.\")) || (key.startsWith(\"sun.\"))) || (key.startsWith(\"com.sun.\"))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/152/buggy-version/agent.javaagent.src.main.java.org.apache.sirona.pathtracking.PathTrackingInvocationListener.java", "BodyUseAPI": [], "Fixed commit": "4231381687abd1db8f1c2b2d6d7da395ff009984", "Url": "https://api.github.com/repos/olamy/sirona", "Date": "2014-02-17T23:42:07Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.sirona.javaagent.listener.ConfigurableListener.accept(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!include) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/152/buggy-version/agent.javaagent.src.main.java.org.apache.sirona.pathtracking.PathTrackingInvocationListener.java", "BodyUseAPI": [], "Fixed commit": "4231381687abd1db8f1c2b2d6d7da395ff009984", "Url": "https://api.github.com/repos/olamy/sirona", "Date": "2014-02-17T23:42:07Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connection.isClosed()) { connect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1958/buggy-version/oobbit.src.main.java.oobbit.database.ConnectionManager.java", "BodyUseAPI": [], "Fixed commit": "414f86ccadd26cf32d1e7abe9e566b34ad619241", "Url": "https://api.github.com/repos/Ooppa/Oobbit", "Date": "2015-09-21T21:32:24Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getTransactionOutcome()) == (com.Acrobot.ChestShop.Events.PreTransactionEvent.TransactionOutcome.TRANSACTION_SUCCESFUL)) { translator.addDestination(event.getOwner().getName(), event.getSign().getLocation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8976/buggy-version/src.main.java.com.github.omwah.SDFEconomy.ChestShopEventListener.java", "BodyUseAPI": ["event.getOwner().getName()", "com.Acrobot.ChestShop.Events.PreTransactionEvent.getOwner()", "com.github.omwah.SDFEconomy.location.SetDestinationLocationTranslator.addDestination(event.getOwner().getName(),event.getSign().getLocation())", "event.getSign().getLocation()", "com.Acrobot.ChestShop.Events.PreTransactionEvent.getSign()"], "Fixed commit": "ab276aea4a2f5e495a08c1527a1b2e51e093f04b", "Url": "https://api.github.com/repos/omwah/SDFEconomy", "Date": "2013-02-27T04:26:57Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.DraftController.dFSCopyPointers(int[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((copyPointers[i]) + 1) >= (mPlayerQueues.get(i).size())) { copyPointers[i] = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8793/buggy-version/src.main.DraftController.java", "BodyUseAPI": [], "Fixed commit": "4136d111ecac54a42299153ad2eb23d4b946ba02", "Url": "https://api.github.com/repos/thomkel/FantasyFootballCompanion", "Date": "2014-12-29T21:32:08Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.ByteArrayOutputStream.toString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cvc4ResultStr.startsWith(\"unsat\")) && (cvc4ResultStr.contains(\"(error \\\"Cannot get the current model unless immediately preceded by SAT/INVALID or UNKNOWN response.\\\")\"))) { org.evosuite.symbolic.solver.SolverResult unsatResult = org.evosuite.symbolic.solver.SolverResult.newUNSAT(); return unsatResult; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3243/buggy-version/client.src.main.java.org.evosuite.symbolic.solver.cvc4.CVC4Solver.java", "BodyUseAPI": [], "Fixed commit": "fa123012bedf3d5e09d9cbec020a60395a551037", "Url": "https://api.github.com/repos/EvoSuite/evosuite", "Date": "2015-12-01T16:33:46Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((target) != null) modelPerformance = target.score(model);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6904/buggy-version/lilian-experimental.src.main.java.org.lilian.data.real.fractal.em.EM.java", "BodyUseAPI": [], "Fixed commit": "65e4330e004d368a6d8e1908a214b7b7707632a8", "Url": "https://api.github.com/repos/pbloem/Lilian-experimental", "Date": "2012-04-23T13:36:32Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck.getLine(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(line.isEmpty())) { final int start = getLineStart(line); if (indentLevel.isGreaterThan(start)) { logChildError(lineNum, start, indentLevel); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5030/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.indentation.AbstractExpressionHandler.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.checks.indentation.AbstractExpressionHandler.getLineStart(java.lang.String)"], "Fixed commit": "cb84e4fddfb66088408c195350ec31871cdfac52", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2015-12-17T21:59:15Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (c == null) { java.lang.String[] keyArray = new java.lang.String[elementToClass.keySet().size()]; keyArray = elementToClass.keySet().toArray(keyArray); org.societies.comm.xmpp.pubsub.impl.PubsubClientImpl.LOG.error((((\"No class found for namespace{element} '\" + elementID) + \"'... Registered entries are: \") + (java.util.Arrays.toString(keyArray)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3576/buggy-version/platform-infrastructure.comms-frwk.PubsubClientBundle.src.main.java.org.societies.comm.xmpp.pubsub.impl.PubsubClientImpl.java", "BodyUseAPI": [], "Fixed commit": "ae2261c231a92f0d77d2bfc99bf81ee7408dd9dc", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2013-02-21T16:02:27Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Double.compare((trainRate * (dataSet.size())), 2)) < 0) { trainRate = 2.0 / (dataSet.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4834/buggy-version/src.lerad.LERAD.java", "BodyUseAPI": ["common.RawExampleList.size()"], "Fixed commit": "90ac1c4947bd17b42c6a73bd22d3f90b5f5a117c", "Url": "https://api.github.com/repos/TigerSun86/MachineLearning", "Date": "2014-10-01T21:18:55Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activities.LoginActivity.treatmentUidTranslator) == null) { return \"Unknown Name\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/834/buggy-version/app.src.main.java.ArduinoParsingUtils.ArduinoParsingUtils.java", "BodyUseAPI": [], "Fixed commit": "ee34fbcea534a161b2148014ef8dd1f6c0963314", "Url": "https://api.github.com/repos/AntonPeniaziev/SmartBracelet", "Date": "2017-06-26T15:42:00Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((codeToEquipmentTable) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/834/buggy-version/app.src.main.java.logic.TreatmentsTable.java", "BodyUseAPI": [], "Fixed commit": "ee34fbcea534a161b2148014ef8dd1f6c0963314", "Url": "https://api.github.com/repos/AntonPeniaziev/SmartBracelet", "Date": "2017-06-26T15:42:00Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.udacity.android.popularmovies.MovieDetailsFragment.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (edu.udacity.android.popularmovies.util.AppUtils.isTablet(activity)) { moviePlaceHolderId = R.drawable.movie_placeholder; }else { moviePlaceHolderId = R.drawable.movie_placeholder_small; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6745/buggy-version/app.src.main.java.edu.udacity.android.popularmovies.MovieDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "1ed8eafdb5bf7745364c036cc07cdd549cc2507a", "Url": "https://api.github.com/repos/shamim-ahmed/udacity-android-project2", "Date": "2015-10-25T06:58:39Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e <= 0) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/229/buggy-version/src.main.java.cyano.poweradvantage.api.simple.TileEntitySimplePowerSource.java", "BodyUseAPI": [], "Fixed commit": "259237e9f1bffcbeb61214785918833b4949973f", "Url": "https://api.github.com/repos/cyanobacterium/PowerAdvantageAPI", "Date": "2015-06-30T00:40:48Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.basiscomponents.db.ResultSet.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (dr.contains(field)) dr.setFieldAttributes(field, AttributesRecord.getFieldAttributes(field));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2563/buggy-version/java.src.com.basiscomponents.bc.SqlTableBC.java", "BodyUseAPI": ["com.basiscomponents.db.DataRow.getFieldAttributes(java.lang.String)", "com.basiscomponents.db.DataRow.setFieldAttributes(java.lang.String,AttributesRecord.getFieldAttributes(field))"], "Fixed commit": "69a227d389f1d04490d9f0fbb57bce19bd3ea8c6", "Url": "https://api.github.com/repos/BasisHub/components", "Date": "2017-08-11T13:40:46Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (twitterProfile.getDescription().isEmpty()) { description = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3854/buggy-version/src.main.java.org.woehlke.twitterwall.process.StoreTweetsProcessImpl.java", "BodyUseAPI": [], "Fixed commit": "cc40e489a8df45a75f2f65629bf7624e76b8a6ff", "Url": "https://api.github.com/repos/thomaswoehlke/twitterwall2", "Date": "2017-06-22T16:48:23Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.woehlke.twitterwall.process.TwitterProfile.getUrl()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((url == null) || (twitterProfile.getUrl().isEmpty())) { url = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3854/buggy-version/src.main.java.org.woehlke.twitterwall.process.StoreTweetsProcessImpl.java", "BodyUseAPI": [], "Fixed commit": "cc40e489a8df45a75f2f65629bf7624e76b8a6ff", "Url": "https://api.github.com/repos/thomaswoehlke/twitterwall2", "Date": "2017-06-22T16:48:23Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (appContext != null) szu.bdi.hybrid.core.HybridTools._appContext = appContext;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8842/buggy-version/lib-android.szu.bdi.hybrid.core.src.main.java.szu.bdi.hybrid.core.HybridTools.java", "BodyUseAPI": [], "Fixed commit": "e7db47e45c41c65cb0ddc1ea946c722aa78dcd30", "Url": "https://api.github.com/repos/SZU-BDI/app-hybrid-core", "Date": "2016-06-20T18:52:16Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (notNull(baseURI)) sb.append(((\"BASE <\" + baseURI) + \">\\n\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7269/buggy-version/marklogic-sesame.src.main.java.com.marklogic.semantics.sesame.client.MarkLogicClientImpl.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "5e205e33052169e0f5943eb5497ec240332bea19", "Url": "https://api.github.com/repos/marklogic/marklogic-sesame", "Date": "2015-09-04T12:40:14Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (notNull(baseURI)) sb.append(((\"BASE <\" + baseURI) + \">\\n\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7269/buggy-version/marklogic-sesame.src.main.java.com.marklogic.semantics.sesame.client.MarkLogicClientImpl.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "5e205e33052169e0f5943eb5497ec240332bea19", "Url": "https://api.github.com/repos/marklogic/marklogic-sesame", "Date": "2015-09-04T12:40:14Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jettyk.zk.service.ZKService.discoverClassPathservice(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == serverPort) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1721/buggy-version/src.main.java.com.jettyk.rmi.RMIDiscovery.java", "BodyUseAPI": [], "Fixed commit": "c21c8ca68c2790841e5a04e1617f5c815e567991", "Url": "https://api.github.com/repos/jettyk/jettyk-rmi", "Date": "2017-11-24T09:09:07Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(monospace)) { setTypeface(Typeface.DEFAULT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5322/buggy-version/library.src.main.java.com.scottyab.showhidepasswordedittext.ShowHidePasswordEditText.java", "BodyUseAPI": [], "Fixed commit": "62fc09ac91b69e057121ac1e71a8888a8fceae07", "Url": "https://api.github.com/repos/scottyab/showhidepasswordedittext", "Date": "2016-01-05T15:36:44Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null == root) root = \"\"; else if (!(root.endsWith(java.io.File.separator))) root += java.io.File.separator;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/479/buggy-version/src.main.java.org.fwb.file.zip.ZipUtility.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "f5989189015ed5e906555a8e12fb9521b5bff02b", "Url": "https://api.github.com/repos/friendswithbenny/fwb-dirp", "Date": "2016-04-08T04:51:58Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lastData.getDataType().equals(\"LIGHT\")) { ero2.identification.CrowdController.nodesManager.regulateLight(lastData); }else if (lastData.getDataType().equals(\"TEMPERATURE\")) { ero2.identification.CrowdController.nodesManager.regulateTemp(lastData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6971/buggy-version/src.ero2.identification.CrowdController.java", "BodyUseAPI": ["ero2.resource.rest.CrowdNodesManager.regulateLight(ero2.identification.CrowdData)", "lastData.getDataType().equals(java.lang.String)", "ero2.resource.rest.CrowdNodesManager.regulateTemp(ero2.identification.CrowdData)", "ero2.identification.CrowdData.getDataType()"], "Fixed commit": "1032aaaa26888c9490b9891c6f1db9bd49031435", "Url": "https://api.github.com/repos/bcarron/Bachelor-Syndesi2.0-Server", "Date": "2015-06-05T02:25:08Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getLastChangeTS()) == null) { lastChangeTs = 0; }else { lastChangeTs = node.getLastChangeTS(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6971/buggy-version/src.ero2.resource.rest.CrowdNodesManager.java", "BodyUseAPI": ["ero2.identification.CrowdNode.getLastChangeTS()"], "Fixed commit": "1032aaaa26888c9490b9891c6f1db9bd49031435", "Url": "https://api.github.com/repos/bcarron/Bachelor-Syndesi2.0-Server", "Date": "2015-06-05T02:25:08Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getLastChangeTS()) == null) { lastChangeTs = 0; }else { lastChangeTs = node.getLastChangeTS(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6971/buggy-version/src.ero2.resource.rest.CrowdNodesManager.java", "BodyUseAPI": ["ero2.identification.CrowdNode.getLastChangeTS()"], "Fixed commit": "1032aaaa26888c9490b9891c6f1db9bd49031435", "Url": "https://api.github.com/repos/bcarron/Bachelor-Syndesi2.0-Server", "Date": "2015-06-05T02:25:08Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getLastChangeTS()) == null) { lastChangeTs = 0; }else { lastChangeTs = node.getLastChangeTS(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6971/buggy-version/src.ero2.resource.rest.CrowdNodesManager.java", "BodyUseAPI": ["ero2.identification.CrowdNode.getLastChangeTS()"], "Fixed commit": "1032aaaa26888c9490b9891c6f1db9bd49031435", "Url": "https://api.github.com/repos/bcarron/Bachelor-Syndesi2.0-Server", "Date": "2015-06-05T02:25:08Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getLastChangeTS()) == null) { lastChangeTs = 0; }else { lastChangeTs = node.getLastChangeTS(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6971/buggy-version/src.ero2.resource.rest.CrowdNodesManager.java", "BodyUseAPI": ["ero2.identification.CrowdNode.getLastChangeTS()"], "Fixed commit": "1032aaaa26888c9490b9891c6f1db9bd49031435", "Url": "https://api.github.com/repos/bcarron/Bachelor-Syndesi2.0-Server", "Date": "2015-06-05T02:25:08Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getLastChangeTS()) == null) { lastChangeTs = 0; }else { lastChangeTs = node.getLastChangeTS(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6971/buggy-version/src.ero2.resource.rest.CrowdNodesManager.java", "BodyUseAPI": ["ero2.identification.CrowdNode.getLastChangeTS()"], "Fixed commit": "1032aaaa26888c9490b9891c6f1db9bd49031435", "Url": "https://api.github.com/repos/bcarron/Bachelor-Syndesi2.0-Server", "Date": "2015-06-05T02:25:08Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getLastChangeTS()) == null) { lastChangeTs = 0; }else { lastChangeTs = node.getLastChangeTS(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6971/buggy-version/src.ero2.resource.rest.CrowdNodesManager.java", "BodyUseAPI": ["ero2.identification.CrowdNode.getLastChangeTS()"], "Fixed commit": "1032aaaa26888c9490b9891c6f1db9bd49031435", "Url": "https://api.github.com/repos/bcarron/Bachelor-Syndesi2.0-Server", "Date": "2015-06-05T02:25:08Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getLastChangeTS()) == null) { lastChangeTs = 0; }else { lastChangeTs = node.getLastChangeTS(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6971/buggy-version/src.ero2.resource.rest.CrowdNodesManager.java", "BodyUseAPI": ["ero2.identification.CrowdNode.getLastChangeTS()"], "Fixed commit": "1032aaaa26888c9490b9891c6f1db9bd49031435", "Url": "https://api.github.com/repos/bcarron/Bachelor-Syndesi2.0-Server", "Date": "2015-06-05T02:25:08Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getLastChangeTS()) == null) { lastChangeTs = 0; }else { lastChangeTs = node.getLastChangeTS(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6971/buggy-version/src.ero2.resource.rest.CrowdNodesManager.java", "BodyUseAPI": ["ero2.identification.CrowdNode.getLastChangeTS()"], "Fixed commit": "1032aaaa26888c9490b9891c6f1db9bd49031435", "Url": "https://api.github.com/repos/bcarron/Bachelor-Syndesi2.0-Server", "Date": "2015-06-05T02:25:08Z"},
{"Line": "=>3787", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.blackvein.quests.Quests.economy) == null) return \"Money\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1372/buggy-version/src.main.java.me.blackvein.quests.Quests.java", "BodyUseAPI": [], "Fixed commit": "8b57d1e83a4df3ead5b82794b73f95fb15e6486f", "Url": "https://api.github.com/repos/Blackvein/Quests", "Date": "2013-09-19T00:51:36Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(value.isEmpty())) { java.lang.String[] elements = value.split(\"<\\\\?.*\\\\?>\"); if ((elements.length) > 1) { return elements[((elements.length) - 1)]; }else { return value; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/9013/buggy-version/components.execution-manager.org.wso2.carbon.event.execution.manager.core.src.main.java.org.wso2.carbon.event.execution.manager.core.structure.domain.Template.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "e5b935331592b6255192081fdf333df56f6c59e8", "Url": "https://api.github.com/repos/lgobinath/carbon-analytics-common", "Date": "2016-05-30T20:49:55Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context) != null) { url = context.getAgentUrl(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1429/buggy-version/java.src.EveGoogleAppEngine.src.com.almende.eve.scheduler.google.AppEngineScheduler.java", "BodyUseAPI": [], "Fixed commit": "782c4e19afdd467dc82eea78231680239f2c8dfd", "Url": "https://api.github.com/repos/almende/eve", "Date": "2012-06-21T15:05:39Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (matthbo.bot.beambot.BeamBot.config.announcements) matthbo.bot.beambot.BeamBot.announcements.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1144/buggy-version/src.main.java.matthbo.bot.beambot.BeamBot.java", "BodyUseAPI": [], "Fixed commit": "b2ed81101fe2dbb809b68081c598b0ea13c3ef59", "Url": "https://api.github.com/repos/Matthbo/BeamBot", "Date": "2015-04-18T20:46:54Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(temp.delete())) { com.threerings.getdown.Log.log.warning(((\"Failed to delete intermediate file \" + temp) + \".\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8749/buggy-version/src.main.java.com.threerings.getdown.util.FileUtil.java", "BodyUseAPI": ["com.threerings.getdown.util.FileUtil.warning(java.lang.String)"], "Fixed commit": "8876725b1aed4721ae66bbf237d37dd82aebeeea", "Url": "https://api.github.com/repos/threerings/getdown", "Date": "2016-05-18T01:17:25Z"},
{"Line": "=>2515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(android.text.TextUtils.isEmpty(getHint()))) { keepPermanentHint(mHint, s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3973/buggy-version/src.com.android.ex.chips.RecipientEditTextView.java", "BodyUseAPI": [], "Fixed commit": "a134cebf76997b7b950978ac8e67fc55050cd8b6", "Url": "https://api.github.com/repos/torresmi/ChipsLibrary", "Date": "2014-07-28T15:52:21Z"},
{"Line": "=>533", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(android.text.TextUtils.isEmpty(getHint()))) { if (getHint().equals(getText().toString())) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3973/buggy-version/src.com.android.ex.chips.RecipientEditTextView.java", "BodyUseAPI": [], "Fixed commit": "a134cebf76997b7b950978ac8e67fc55050cd8b6", "Url": "https://api.github.com/repos/torresmi/ChipsLibrary", "Date": "2014-07-28T15:52:21Z"},
{"Line": "=>1265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(android.text.TextUtils.isEmpty(getHint()))) { startLooking = getHint().length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3973/buggy-version/src.com.android.ex.chips.RecipientEditTextView.java", "BodyUseAPI": [], "Fixed commit": "a134cebf76997b7b950978ac8e67fc55050cd8b6", "Url": "https://api.github.com/repos/torresmi/ChipsLibrary", "Date": "2014-07-28T15:52:21Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (currentUnit != null) { x = currentUnit.getPosition().getBX(); y = currentUnit.getPosition().getBY(); updateCellInfluence_unit(new java.awt.Point(unitTupla.get(1), unitTupla.get(2)), 0); updateCellInfluence_unit(new java.awt.Point(x, y), unitTupla.get(3)); unitTupla.set(1, x); unitTupla.set(2, y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4972/buggy-version/src.bot.InfluenceMap.java", "BodyUseAPI": ["jnibwapi.Unit.getPosition()", "jnibwapi.Unit.getPosition()", "currentUnit.getPosition().getBY()", "currentUnit.getPosition().getBX()"], "Fixed commit": "440249bc6e6feda20d58618ace1a23b8ab76c416", "Url": "https://api.github.com/repos/Patataman/Goliat", "Date": "2017-05-14T09:11:20Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index == 0) && (currAnswerBook == null)) return createBookAdditFragment(currBook, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1222/buggy-version/src.main.java.com.Vshkole.adapters.TabSwipeBookAdapter.java", "BodyUseAPI": [], "Fixed commit": "d06ba00d678a9a2d7b774bc25d2665884eb90af5", "Url": "https://api.github.com/repos/sanchousese/Vshkole", "Date": "2015-04-27T13:02:09Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.search.Field.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.liferay.portal.kernel.util.ArrayUtil.contains(Field.UNSCORED_FIELD_NAMES, name)) { boost = com.liferay.portal.search.solr.SolrIndexWriter._UNSCORED_FIELDS_BOOST; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6214/buggy-version/webs.solr4-web.docroot.WEB-INF.src.com.liferay.portal.search.solr.SolrIndexWriter.java", "BodyUseAPI": [], "Fixed commit": "6c90f370323748d2e0d38c3e8b991f207373c801", "Url": "https://api.github.com/repos/marcellustavares/liferay-plugins", "Date": "2013-07-29T19:38:16Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(response.result.contains(\"error\"))) { result = new org.json.JSONArray(response.result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8328/buggy-version/Atarashii.src.net.somethingdreadful.MAL.api.MALApi.java", "BodyUseAPI": [], "Fixed commit": "733a86e0051f984d510ff4d142def7478bab3664", "Url": "https://api.github.com/repos/ratan12/Atarashii", "Date": "2014-01-30T13:34:55Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dialog.isShowing()) { dialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7980/buggy-version/app.src.main.java.commanutil.view.LoadDialog.java", "BodyUseAPI": ["android.app.Dialog.dismiss()"], "Fixed commit": "db431ae8efdc8a95c67ceda4d7fcda697ffbdd7a", "Url": "https://api.github.com/repos/zhenbeiju/AndroidCommonUtil", "Date": "2016-08-16T08:36:06Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(querySuffix.isEmpty())) { querySuffix = querySuffix.replaceFirst(OR_OPERATOR, \"\"); querySuffix = (\" AND (\" + querySuffix) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/951/buggy-version/components.device-mgt.org.wso2.carbon.device.mgt.core.src.main.java.org.wso2.carbon.device.mgt.core.search.mgt.impl.QueryBuilderImpl.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "d1de1ce15cd691ec70bd71030c543be15e67d581", "Url": "https://api.github.com/repos/wso2/carbon-device-mgt", "Date": "2017-03-28T07:07:28Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null != exception) && (exception instanceof org.apache.commons.io.TaggedIOException)) { exception = ((org.apache.commons.io.TaggedIOException) (exception)).getCause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7555/buggy-version/src.main.java.org.icij.extract.extractor.Extractor.java", "BodyUseAPI": [], "Fixed commit": "746dbcf86fb1a021de6f108f1abc2dd2c8ef0dff", "Url": "https://api.github.com/repos/ICIJ/extract", "Date": "2017-07-11T15:00:27Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (defaultCost == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/695/buggy-version/src.main.java.org.powertac.common.TariffEvaluator.java", "BodyUseAPI": [], "Fixed commit": "2f270f1fb8c7070e37375f13561aa33c00d6b11c", "Url": "https://api.github.com/repos/powertac/powertac-server", "Date": "2015-03-30T22:26:41Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isShow) animView.setVisibility(View.VISIBLE); else animView.setVisibility(View.INVISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5677/buggy-version/circularanim.src.main.java.top.wefor.circularanim.CircularAnimUtil.java", "BodyUseAPI": [], "Fixed commit": "da053a77e29d32c24f222cb1db6962cca1cf1d9d", "Url": "https://api.github.com/repos/XunMengWinter/CircularAnim", "Date": "2016-08-04T07:55:46Z"},
{"Line": "=>614", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(filterModeSpec.showComments())) findViewById(R.id.taskedit_fragment_container).setVisibility(View.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8136/buggy-version/astrid.src.com.todoroo.astrid.activity.TaskListActivity.java", "BodyUseAPI": [], "Fixed commit": "50320edd78b8159fc2e046b7a3a6259b7b506764", "Url": "https://api.github.com/repos/sbosley/astrid", "Date": "2012-10-30T20:28:03Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (finalStoreDB) { m_db.setStoryFragment(m_currentFragment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6606/buggy-version/adventure.datetime.src.ca.cmput301f13t03.adventure_datetime.model.StoryManager.java", "BodyUseAPI": [], "Fixed commit": "0d5b847de312e8a9ee32a76c8e3096dea697b2dd", "Url": "https://api.github.com/repos/Jtfinlay/adventure.datetime", "Date": "2013-11-25T23:34:35Z"},
{"Line": "=>994", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isPollingStationMode())) { questionStyles.add(\"open\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/2830/buggy-version/survey.survey-war.src.main.java.com.stratelia.webactiv.survey.control.SurveySessionController.java", "BodyUseAPI": [], "Fixed commit": "0e1a5352eceb3c92ac0a3027b13db7bb0724065c", "Url": "https://api.github.com/repos/CecileBONIN/Silverpeas-Components", "Date": "2011-02-11T18:06:16Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["projectionT.getSubterm(oracle.pgql.lang.SpoofaxAstToGraphQuery.POS_PROJECTION_ELEMS).getSubterm(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((projectionElemsT.getTermType()) == (org.spoofax.interpreter.terms.IStrategoTerm.APPL)) && (((org.spoofax.interpreter.terms.IStrategoAppl) (projectionElemsT)).getConstructor().getName().equals(\"Star\"))) { selectElems = java.util.Collections.emptyList(); }else { selectElems = oracle.pgql.lang.SpoofaxAstToGraphQuery.getSelectElems(ctx, oracle.pgql.lang.SpoofaxAstToGraphQuery.getList(projectionElemsT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/9062/buggy-version/pgql-lang.src.main.java.oracle.pgql.lang.SpoofaxAstToGraphQuery.java", "BodyUseAPI": ["oracle.pgql.lang.SpoofaxAstToGraphQuery.getSelectElems(oracle.pgql.lang.TranslationContext,org.spoofax.interpreter.terms.IStrategoTerm)", "oracle.pgql.lang.SpoofaxAstToGraphQuery.getList(org.spoofax.interpreter.terms.IStrategoTerm)"], "Fixed commit": "60656befc0cb304d77a94017a13922866c4fe8b5", "Url": "https://api.github.com/repos/oracle/pgql-lang", "Date": "2017-12-19T21:17:57Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JComboBox.getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (selectedSmartboard != null) { smartboard = selectedSmartboard.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4351/buggy-version/QSystem.src.ru.apertum.qsystem.client.forms.FOfficeChangeDialog.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "d35d81e77f741d4c0ba3a1db157ea7d6e938991f", "Url": "https://api.github.com/repos/gil0109/sbc-qsystem", "Date": "2017-11-23T03:36:21Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((players.get(i).getNetworth()) > 0) { out.println((((\"<TD style='color: red;font-family: cursive;text-align: left;'>\" + \"$ \") + (players.get(i).getNetworth())) + \"</TD></TR>\")); }else { out.println((\"<TD style='color: red;font-family: cursive;text-align: left;'>\" + (\"Bankrupt!\" + \"</TD></TR>\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1446/buggy-version/src.com.usaa.webopoly.WebOpolyServlet.java", "BodyUseAPI": ["java.io.PrintWriter.println((((\"<TD style='color: red;font-family: cursive;text-align: left;'>\" + \"$ \") + (players.get(i).getNetworth())) + \"</TD></TR>\"))", "java.util.ArrayList<main.Player>.get(int)", "players.get(i).getNetworth()"], "Fixed commit": "f0b9247da9f64232304f53e6dba3924fc1f7a579", "Url": "https://api.github.com/repos/drbortel/WebOpolyServlet", "Date": "2015-09-17T18:41:19Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (empty) { problemsHolder.registerProblem(string, range, ((\"Unresolved \" + what) + \": file not found\")); }else { problemsHolder.registerProblem(string, ((\"Unresolved \" + what) + \": file not found\"), ProblemHighlightType.LIKE_UNKNOWN_SYMBOL, range); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7241/buggy-version/src.org.intellij.erlang.inspection.ErlangUnresolvedIncludeLibInspection.java", "BodyUseAPI": [], "Fixed commit": "7b0c3be5c66d5a2c6b0625ea32f3aa2ebfa87931", "Url": "https://api.github.com/repos/ignatov/intellij-erlang", "Date": "2013-07-11T09:08:59Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerID) != null) { compound.setUniqueId(\"PlayerID\", playerID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8702/buggy-version/src.main.java.com.m4thg33k.tombmanygraves.tiles.TileDeathBlock.java", "BodyUseAPI": [], "Fixed commit": "ed2697b735f3209bf3a17851d1a4fbbd2de96c44", "Url": "https://api.github.com/repos/M4thG33k/TombManyGraves", "Date": "2016-10-19T14:33:32Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((origin == null) || (destination == null)) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3890/buggy-version/app.src.main.java.com.erenlivingstone.rider.appscreens.navigation.NavigationActivity.java", "BodyUseAPI": [], "Fixed commit": "81318d73a5e62064227c5e87f96453ae1b1dd79e", "Url": "https://api.github.com/repos/erenliving/Rider", "Date": "2016-12-17T03:52:02Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4132/buggy-version/src.com.fave100.client.pagefragments.favelist.FavelistView.java", "BodyUseAPI": [], "Fixed commit": "9366ef3786a007666fc2126addeba71827cf0a69", "Url": "https://api.github.com/repos/yissachar/fave100", "Date": "2013-04-05T19:39:18Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Thread.getContextClassLoader()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cl == null) { cl = org.pentaho.di.ui.util.SwtSvgImageUtil.class.getClassLoader(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6185/buggy-version/ui.src.org.pentaho.di.ui.util.SwtSvgImageUtil.java", "BodyUseAPI": [], "Fixed commit": "c43cc43112d1615ea1e7631946bfebf8ba74d3d4", "Url": "https://api.github.com/repos/jasondyjohnson/pentaho-kettle", "Date": "2015-05-12T19:20:09Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cc.ycn.common.constant.WxCacheType.clazz()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (java.lang.String.class.equals(clazz)) { return (json == null) || (json.isEmpty()) ? null : ((T) (json)); }else { return (json == null) || (json.isEmpty()) ? null : cc.ycn.common.util.JsonConverter.json2pojo(json, clazz); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3130/buggy-version/src.main.java.cc.ycn.common.cache.base.ExpireCache.java", "BodyUseAPI": ["cc.ycn.common.util.JsonConverter.json2pojo(java.lang.String,java.lang.Class<T>)"], "Fixed commit": "2635d18f3bb9402591df753e9c203696ce9c0104", "Url": "https://api.github.com/repos/ycn/weixin-java", "Date": "2016-12-13T04:36:27Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (source instanceof org.jsoup.safety.TextNode) { org.jsoup.safety.TextNode sourceText = ((org.jsoup.safety.TextNode) (source)); org.jsoup.safety.TextNode destText = new org.jsoup.safety.TextNode(sourceText.getWholeText(), source.baseUri()); destination.appendChild(destText); }else if ((source instanceof org.jsoup.safety.DataNode) && (whitelist.isSafeTag(source.parent().nodeName()))) { org.jsoup.safety.DataNode sourceData = ((org.jsoup.safety.DataNode) (source)); org.jsoup.safety.DataNode destData = new org.jsoup.safety.DataNode(sourceData.getWholeData(), source.baseUri()); destination.appendChild(destData); }else { (numDiscarded)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6598/buggy-version/src.main.java.org.jsoup.safety.Cleaner.java", "BodyUseAPI": ["source.parent().nodeName()", "org.jsoup.safety.Node.parent()", "org.jsoup.safety.Node.baseUri()", "org.jsoup.safety.Node.baseUri()", "org.jsoup.safety.Whitelist.isSafeTag(source.parent().nodeName())"], "Fixed commit": "32ab9579f9df6f4c9dbab5e6e035dd5f8d644e2a", "Url": "https://api.github.com/repos/recastrodiaz/jsoup", "Date": "2014-01-16T17:57:03Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.smartapps.smalistview.AsyncListActivity.findViewById(R.id.list)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (listView != null) { listView.initData(2, getDataViews(), this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/955/buggy-version/app.src.main.java.fr.smartapps.smalistview.AsyncListActivity.java", "BodyUseAPI": ["fr.smartapps.smalistview.SMAListView.initData(int,java.util.List<fr.smartapps.smalistview.SMADataView>,fr.smartapps.smalistview.AsyncListActivity)"], "Fixed commit": "fa16361f6dd535ef3ae7ce33cecdfe4d94a6a807", "Url": "https://api.github.com/repos/PikaPanda/sma-listview", "Date": "2016-08-11T11:40:49Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.smartapps.smalistview.ListActivity.findViewById(R.id.list)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (listView != null) { listView.initData(1, getDataViews(), this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/955/buggy-version/app.src.main.java.fr.smartapps.smalistview.ListActivity.java", "BodyUseAPI": ["fr.smartapps.smalistview.SMAListView.initData(int,java.util.List<fr.smartapps.smalistview.SMADataView>,fr.smartapps.smalistview.ListActivity)"], "Fixed commit": "fa16361f6dd535ef3ae7ce33cecdfe4d94a6a807", "Url": "https://api.github.com/repos/PikaPanda/sma-listview", "Date": "2016-08-11T11:40:49Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.smartapps.smalistview.MainActivity.findViewById(R.id.list)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (listView != null) { listView.initData(1, getDataViews(), this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/955/buggy-version/app.src.main.java.fr.smartapps.smalistview.MainActivity.java", "BodyUseAPI": ["fr.smartapps.smalistview.SMAListView.initData(int,java.util.List<fr.smartapps.smalistview.SMADataView>,fr.smartapps.smalistview.MainActivity)"], "Fixed commit": "fa16361f6dd535ef3ae7ce33cecdfe4d94a6a807", "Url": "https://api.github.com/repos/PikaPanda/sma-listview", "Date": "2016-08-11T11:40:49Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.smartapps.smalistview.GridActivity.findViewById(R.id.list)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (listView != null) { listView.initData(3, getDataViews(), this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/955/buggy-version/app.src.main.java.fr.smartapps.smalistview.GridActivity.java", "BodyUseAPI": ["fr.smartapps.smalistview.SMAListView.initData(int,java.util.List<fr.smartapps.smalistview.SMADataView>,fr.smartapps.smalistview.GridActivity)"], "Fixed commit": "fa16361f6dd535ef3ae7ce33cecdfe4d94a6a807", "Url": "https://api.github.com/repos/PikaPanda/sma-listview", "Date": "2016-08-11T11:40:49Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bestAction == null) || ((a.getUtility()) < (bestAction.getUtility()))) { bestAction = a; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6260/buggy-version/ConnectFour.src.connectFour.XIcoetusFirstGameLogic.java", "BodyUseAPI": [], "Fixed commit": "6693f49abddc77a850d32432b0f0d6c6456c3b62", "Url": "https://api.github.com/repos/markthor/ISP", "Date": "2014-03-04T09:55:50Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof android.os.Parcelable) { return ((android.os.Parcelable) (obj)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4913/buggy-version/library.src.com.baoyz.pg.PG.java", "BodyUseAPI": [], "Fixed commit": "6873a85aaffaa96030d5c01015bee9629ce50319", "Url": "https://api.github.com/repos/baoyongzhang/ParcelableGenerator", "Date": "2014-07-22T10:32:37Z"},
{"Line": "=>1148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cmg.isEnabled()) { cmg.getWinner(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7463/buggy-version/src.com.comze_instancelabs.minigamesparty.Main.java", "BodyUseAPI": ["com.comze_instancelabs.minigamesparty.Minigame.getWinner()"], "Fixed commit": "164915454edc75bb704db6ad76b4f1105394f7bd", "Url": "https://api.github.com/repos/instance01/MinigamesParty", "Date": "2014-04-11T16:05:00Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Global.files_to_run) == (Global.TWITTER_DATA)) { if ((\"$\" + tagText).equals(this.curCompanyName)) continue; }else { if (tagText.equals(this.curCompanyName)) continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6453/buggy-version/src.StatisticsTool.java", "BodyUseAPI": [], "Fixed commit": "379876e96ba653cd278d587961b7cfadb9ac138c", "Url": "https://api.github.com/repos/Islam-Hamdy/gephi-twitter-visualization", "Date": "2014-03-26T15:13:24Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nWays % 500) == 0) { eu.h2020.symbiote.smeur.elgrc.mapparser.MapParser.log.info((\"\" + nWays)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7021/buggy-version/src.main.java.eu.h2020.symbiote.smeur.elgrc.mapparser.MapParser.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String)"], "Fixed commit": "dca27aafbd758dcc80672da64a007d644adaa5fa", "Url": "https://api.github.com/repos/symbiote-h2020/EnablerLogicGreenRouteController", "Date": "2017-10-09T14:32:00Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hour == 0) { hour = 12; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7791/buggy-version/app.src.main.java.com.beardroid.paid2poop.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "dd2e8f4def9bb06cee87971e2ce964d034dba071", "Url": "https://api.github.com/repos/BearDroid/PaidToPoop", "Date": "2014-11-26T06:38:06Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kdkbot.api.twitch.APIv5.getStreamObject(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (res == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8761/buggy-version/src.kdkbot.api.twitch.APIv5.java", "BodyUseAPI": [], "Fixed commit": "6208775edc4ae0c93eab4cab8b484b0efffb25c2", "Url": "https://api.github.com/repos/Kalbintion/Kdkbot", "Date": "2017-12-13T06:42:06Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isMultipleUsers())) { responseHtml.append(\"var productsWhosePathsNotExist = \").append(getProductsWhosePathsNotExist()).append(\";\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1393/buggy-version/src.main.java.org.grible.servlets.ui.Home.java", "BodyUseAPI": [], "Fixed commit": "0afb901d27a3f7282cf736de8432e2699ca1b484", "Url": "https://api.github.com/repos/barik87/grible", "Date": "2014-02-14T13:37:17Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (past) { result.append(count); result.append(\"m\"); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1316/buggy-version/src.com.github.snambi.twitterclient.utils.TwitterTimeUtils.java", "BodyUseAPI": [], "Fixed commit": "d38f57c000d597b0f57a918e981e27477856867a", "Url": "https://api.github.com/repos/snambi/android_twitter_client", "Date": "2014-10-01T06:30:31Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((waterReportNumber) != null) { list = ((((((((((((((((((\"Water Report Number : \" + (waterReportNumber)) + \"\\nName : \") + (name)) + \"\\nLocation Name : \") + (locationName)) + \"\\nLatitude : \") + (latitude)) + \"\\nLongitude : \") + (longitude)) + \"\\nWater Condition : \") + (waterCondition)) + \"\\nVirus PPM : \") + (virusPPM)) + \"\\nContaminant PPM : \") + (contaminantPPM)) + \"\\nYear : \") + (year)) + \"\\nMonth : \") + (month); }else { list = \"There are no reports to fetch.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6931/buggy-version/app.src.main.java.com.gatech.edu.soloTechno.m4_login.model.WaterPurityReportData.java", "BodyUseAPI": [], "Fixed commit": "0e475ae90db06ffcaf6e00dd90ff96851abfcab8", "Url": "https://api.github.com/repos/SoloTechno/SoloWaterAndroid", "Date": "2017-04-04T18:10:17Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!matchesWhitelist) { acceptedFile = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6715/buggy-version/src.com.christianbenner.gitcommitstatistics.Main.java", "BodyUseAPI": [], "Fixed commit": "32eb33668654c67b3fdcfdbee79e18103db12386", "Url": "https://api.github.com/repos/ChristianBenner/GitCommitStatistics", "Date": "2016-08-19T09:32:14Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((drawer) != null) { drawer.setSelection(com.permutassep.presentation.view.activity.ActivityMain.DRAWER_IDENTIFIER_HOME, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5128/buggy-version/app.src.main.java.com.permutassep.presentation.view.activity.ActivityMain.java", "BodyUseAPI": [], "Fixed commit": "e16e07dd72f58e4600e1dcb9e0769ebc73fed29e", "Url": "https://api.github.com/repos/lalongooo/permutas-sep-android", "Date": "2015-11-02T18:02:12Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.talend.dataprofiler.chart.TOPChartService.1.getCurrentMenu(org.jfree.chart.entity.CategoryItemEntity)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (menu != null) { chartComp.setMenu(menu); menu.setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3078/buggy-version/main.plugins.org.talend.dataprofiler.top.chart.src.org.talend.dataprofiler.chart.TOPChartService.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Menu.setVisible(boolean)", "org.jfree.experimental.chart.swt.ChartComposite.setMenu(org.eclipse.swt.widgets.Menu)"], "Fixed commit": "07ba4b060d535d2e5915548a51de3a8e83c8c270", "Url": "https://api.github.com/repos/Talend/tdq-studio-se", "Date": "2015-10-20T07:16:57Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((alertDialog) != null) alertDialog.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3989/buggy-version/GoogleMapProject.src.il.ac.shenkar.cadan.Main.java", "BodyUseAPI": [], "Fixed commit": "ade7a5ab6931471e4851819ae2ace51de25ff76c", "Url": "https://api.github.com/repos/cojalvo/CampusInProject", "Date": "2013-11-11T12:27:21Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.os.SystemProperties.getBoolean(\"ro.alarm_boot\", false)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1825/buggy-version/services.core.java.com.android.server.accounts.AccountManagerService.java", "BodyUseAPI": [], "Fixed commit": "efe369ca564678be294349eacc772dcfbc61e316", "Url": "https://api.github.com/repos/loveboylion/android_frameworks_base", "Date": "2016-08-31T12:49:05Z"},
{"Line": "=>899", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.os.SystemProperties.getBoolean(\"ro.alarm_boot\", false)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1825/buggy-version/services.core.java.com.android.server.content.SyncStorageEngine.java", "BodyUseAPI": [], "Fixed commit": "efe369ca564678be294349eacc772dcfbc61e316", "Url": "https://api.github.com/repos/loveboylion/android_frameworks_base", "Date": "2016-08-31T12:49:05Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s == null) || (s.trim().isEmpty())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4536/buggy-version/B.E.T.C.H.app.src.main.java.sai.application.betch.jobscheduler.NotificationJobPresenter.java", "BodyUseAPI": [], "Fixed commit": "80d5e8ea1f41bab239fba222c8dfd6d75f6273de", "Url": "https://api.github.com/repos/semani2/B.E.T.C.H", "Date": "2017-07-24T18:11:02Z"},
{"Line": "=>1541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((createSchedulerFuture) != null) { createSchedulerFuture.cancel(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/346/buggy-version/src.main.java.com.alibaba.druid.pool.DruidDataSource.java", "BodyUseAPI": [], "Fixed commit": "fd3da2613d65b6c9140d165c9f281cb86f9cdb97", "Url": "https://api.github.com/repos/alibaba/druid", "Date": "2017-05-31T06:37:22Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((find(net.frontlinesms.plugins.patientview.ui.administration.tabs.VaccineAdministrationPanelController.ADD_DOSE_BUTTON)) != null) { ui.setEnabled(find(net.frontlinesms.plugins.patientview.ui.administration.tabs.VaccineAdministrationPanelController.ADD_DOSE_BUTTON), false); ui.setEnabled(find(net.frontlinesms.plugins.patientview.ui.administration.tabs.VaccineAdministrationPanelController.EDIT_DOSE_BUTTON), false); ui.setEnabled(find(net.frontlinesms.plugins.patientview.ui.administration.tabs.VaccineAdministrationPanelController.DELETE_DOSE_BUTTON), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5364/buggy-version/src.main.java.net.frontlinesms.plugins.patientview.ui.administration.tabs.VaccineAdministrationPanelController.java", "BodyUseAPI": ["net.frontlinesms.plugins.patientview.ui.administration.tabs.VaccineAdministrationPanelController.setEnabled(find(net.frontlinesms.plugins.patientview.ui.administration.tabs.VaccineAdministrationPanelController.ADD_DOSE_BUTTON),boolean)", "net.frontlinesms.plugins.patientview.ui.administration.tabs.VaccineAdministrationPanelController.find(java.lang.String)"], "Fixed commit": "195fc46b0243b65a8f34229a963846635f3a4ef6", "Url": "https://api.github.com/repos/medic/PatientView", "Date": "2011-06-26T14:20:22Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((at.getAST().apiLevel()) < (org.eclipse.jdt.core.dom.AST.JLS8)) { org.codemucker.jmutate.util.NameUtil.resolveQualifiedName(at.getComponentType(), sb); }else { org.codemucker.jmutate.util.NameUtil.resolveQualifiedName(at.getElementType(), sb); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/1644/buggy-version/src.main.java.org.codemucker.jmutate.util.NameUtil.java", "BodyUseAPI": ["org.eclipse.jdt.core.dom.ArrayType.getElementType()", "org.eclipse.jdt.core.dom.ArrayType.getComponentType()", "org.codemucker.jmutate.util.NameUtil.resolveQualifiedName(at.getComponentType(),java.lang.StringBuilder)", "org.codemucker.jmutate.util.NameUtil.resolveQualifiedName(at.getElementType(),java.lang.StringBuilder)"], "Fixed commit": "b37618e8327f0375c3d7aacf054161b95f6a5a31", "Url": "https://api.github.com/repos/codemucker/codemucker-jmutate", "Date": "2014-12-10T05:08:22Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Deque<com.cedarsoftware.util.DeepEquals.DualKey>.removeFirst()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dualKey._key2) instanceof java.util.Collection) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5226/buggy-version/src.main.java.com.cedarsoftware.util.DeepEquals.java", "BodyUseAPI": [], "Fixed commit": "7ce32e8f52af1d4caf1a78201937b5e0f9b5d503", "Url": "https://api.github.com/repos/kpartlow/java-util", "Date": "2015-04-19T19:37:39Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Deque<com.cedarsoftware.util.DeepEquals.DualKey>.removeFirst()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dualKey._key2) instanceof java.util.Map) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5226/buggy-version/src.main.java.com.cedarsoftware.util.DeepEquals.java", "BodyUseAPI": [], "Fixed commit": "7ce32e8f52af1d4caf1a78201937b5e0f9b5d503", "Url": "https://api.github.com/repos/kpartlow/java-util", "Date": "2015-04-19T19:37:39Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Deque<com.cedarsoftware.util.DeepEquals.DualKey>.removeFirst()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dualKey._key2) instanceof java.util.SortedMap) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5226/buggy-version/src.main.java.com.cedarsoftware.util.DeepEquals.java", "BodyUseAPI": [], "Fixed commit": "7ce32e8f52af1d4caf1a78201937b5e0f9b5d503", "Url": "https://api.github.com/repos/kpartlow/java-util", "Date": "2015-04-19T19:37:39Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Deque<com.cedarsoftware.util.DeepEquals.DualKey>.removeFirst()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dualKey._key2) instanceof java.util.SortedSet) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5226/buggy-version/src.main.java.com.cedarsoftware.util.DeepEquals.java", "BodyUseAPI": [], "Fixed commit": "7ce32e8f52af1d4caf1a78201937b5e0f9b5d503", "Url": "https://api.github.com/repos/kpartlow/java-util", "Date": "2015-04-19T19:37:39Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tmpFile2.exists()) == false) { tmpFile2.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3443/buggy-version/my_game_ai.ann.voice_recognition.src.storage.FactoryStatic.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "1791fdd91b802d22bb2ccc9a7f6f853558774ef2", "Url": "https://api.github.com/repos/dewtx29/test_ai", "Date": "2016-11-19T16:57:31Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isConverted) { revereColor(new java.io.File(((savePath + (java.io.File.separator)) + fileName)).getAbsolutePath()); isConverted = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7779/buggy-version/src.main.java.org.t246osslab.easybuggy.troubles.UnrestrictedUploadServlet.java", "BodyUseAPI": [], "Fixed commit": "bfb1b8b6be134984db6e1e5d191345314749948c", "Url": "https://api.github.com/repos/k-tamura/easybuggy", "Date": "2017-03-03T07:07:30Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["RecyclerView.Adapter.getItemViewType(recyclerToWrappedPosition.get(position))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type > (com.eyeem.recyclerviewtools.adapter.WrapAdapter.MAIN_VIEW_TYPE_MASK)) throw new java.lang.IllegalArgumentException((\"ItemView type cannot be greater than 0x\" + (java.lang.Integer.toHexString(com.eyeem.recyclerviewtools.adapter.WrapAdapter.MAIN_VIEW_TYPE_MASK))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8386/buggy-version/lib.src.main.java.com.eyeem.recyclerviewtools.adapter.WrapAdapter.java", "BodyUseAPI": [], "Fixed commit": "8613f8c6a98a489f32861d1617e9508ba5680dc0", "Url": "https://api.github.com/repos/eyeem/RecyclerViewTools", "Date": "2015-04-17T10:27:54Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["RecyclerView.Adapter.getItemId(recyclerToWrappedPosition.get(position))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id > (com.eyeem.recyclerviewtools.adapter.WrapAdapter.MAIN_ITEM_ID_MASK)) throw new java.lang.IllegalArgumentException((\"ItemView type cannot be greater than 0x\" + (java.lang.Long.toHexString(com.eyeem.recyclerviewtools.adapter.WrapAdapter.MAIN_ITEM_ID_MASK))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/8386/buggy-version/lib.src.main.java.com.eyeem.recyclerviewtools.adapter.WrapAdapter.java", "BodyUseAPI": [], "Fixed commit": "8613f8c6a98a489f32861d1617e9508ba5680dc0", "Url": "https://api.github.com/repos/eyeem/RecyclerViewTools", "Date": "2015-04-17T10:27:54Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((polyMoverFactory.getMinBufferSize()) + objectIndex) < (gameObjects.length)) if ((polyMoverFactory.isInitialized()) && ((polyMoverFactory.getLatestIndex()) < ((objectIndex + (polyMoverFactory.getLatestIndex())) - 1))) { polyMoverFactory.update(gameObjects[((objectIndex + (polyMoverFactory.getMaxBufferSize())) - 1)]); }else { polyMoverFactory.create(gameObjects, (objectIndex - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4968/buggy-version/src.yugecin.opsudance.Dancer.java", "BodyUseAPI": ["awlex.ospu.polymover.factory.PolyMoverFactory.getLatestIndex()", "awlex.ospu.polymover.factory.PolyMoverFactory.create(itdelatrisu.opsu.objects.GameObject[],int)", "awlex.ospu.polymover.factory.PolyMoverFactory.update(gameObjects[((objectIndex + (polyMoverFactory.getMaxBufferSize())) - 1)])", "awlex.ospu.polymover.factory.PolyMoverFactory.getMaxBufferSize()", "awlex.ospu.polymover.factory.PolyMoverFactory.isInitialized()", "awlex.ospu.polymover.factory.PolyMoverFactory.getLatestIndex()"], "Fixed commit": "f4315aff475cf2eb6ac1cf00e130970de07ae7e1", "Url": "https://api.github.com/repos/Awlexus/opsu-dance", "Date": "2016-11-23T15:25:11Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mda.school.adapters.CarAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((c.getAddress()) != null) tvLocation.setText(c.getAddress()); else { double lat = c.getLocation().getLatitude(); double lon = c.getLocation().getLongitude(); tvLocation.setText(java.lang.String.format(\"Lat:%.2f / Lon:%.2f\", lat, lon)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/130/buggy-version/app.src.main.java.com.mda.school.adapters.CarAdapter.java", "BodyUseAPI": ["c.getLocation().getLatitude()", "com.mda.school.model.Car.getAddress()", "com.mda.school.model.Car.getLocation()", "android.widget.TextView.setText(c.getAddress())", "com.mda.school.model.Car.getLocation()", "c.getLocation().getLongitude()"], "Fixed commit": "9dbc055096c75fe8fcfac557fc79a0a36b61229d", "Url": "https://api.github.com/repos/mda06/Where-is-my-car", "Date": "2017-12-14T17:58:01Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mListener.getLastKnowCar().getAddress()) != null) txt += mListener.getLastKnowCar().getAddress(); else { double lat = mListener.getLastKnowCar().getLocation().getLatitude(); double lon = mListener.getLastKnowCar().getLocation().getLongitude(); txt += java.lang.String.format(\"Lat:%.2f / Lon:%.2f\", lat, lon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/130/buggy-version/app.src.main.java.com.mda.school.fragments.LastPositionFragment.java", "BodyUseAPI": ["com.mda.school.model.Car.getAddress()", "com.mda.school.model.Car.getLocation()", "com.mda.school.fragments.LastPositionFragment.OnFragmentInteractionListener.getLastKnowCar()", "mListener.getLastKnowCar().getLocation().getLongitude()", "com.mda.school.fragments.LastPositionFragment.OnFragmentInteractionListener.getLastKnowCar()", "com.mda.school.model.Car.getLocation()", "mListener.getLastKnowCar().getLocation().getLatitude()", "com.mda.school.fragments.LastPositionFragment.OnFragmentInteractionListener.getLastKnowCar()"], "Fixed commit": "9dbc055096c75fe8fcfac557fc79a0a36b61229d", "Url": "https://api.github.com/repos/mda06/Where-is-my-car", "Date": "2017-12-14T17:58:01Z"},
{"Line": "=>1411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPager.getCurrentItem()) == (com.todoroo.astrid.activity.TaskEditFragment.TAB_VIEW_UPDATES)) setPagerHeightForPosition(com.todoroo.astrid.activity.TaskEditFragment.TAB_VIEW_UPDATES);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6294/buggy-version/astrid.src.com.todoroo.astrid.activity.TaskEditFragment.java", "BodyUseAPI": [], "Fixed commit": "db4266e80c52594af3044aaa810db4374b42c7b0", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2012-11-10T01:31:51Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mapBackends.isEmpty())) { chosen = java.util.Collections.min(mapBackends.entrySet(), new java.util.Comparator<java.util.Map.Entry<lbaas.Backend, java.lang.Integer>>() { @java.lang.Override public int compare(java.util.Map.Entry<lbaas.Backend, java.lang.Integer> o1, java.util.Map.Entry<lbaas.Backend, java.lang.Integer> o2) { return o1.getValue().compareTo(o2.getValue()); } }).getKey(); }else { chosen = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6582/buggy-version/src.main.java.lbaas.util.LeastConnectionsFinder.java", "BodyUseAPI": ["java.util.Collections.min(mapBackends.entrySet(),java.util.Comparator<java.util.Map.Entry<lbaas.Backend, java.lang.Integer>>)", "java.lang.Object.getKey()", "java.util.Map<lbaas.Backend, java.lang.Integer>.entrySet()"], "Fixed commit": "b22c9d42d78c81f9d81b21fbb06c5c8874c6ef8e", "Url": "https://api.github.com/repos/tuxmonteiro/vxrouter", "Date": "2014-08-21T15:21:27Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (HealthbarHandler.speechbubbles.containsKey(data.getCaster().getEntity().getUniqueId())) { com.gmail.berndivader.healthbar.SpeechBubble sb = HealthbarHandler.speechbubbles.get(data.getCaster().getEntity().getUniqueId()); sb.remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5254/buggy-version/src.com.gmail.berndivader.healthbar.SpeechBubbleMechanic.java", "BodyUseAPI": ["HealthbarHandler.speechbubbles.get(data.getCaster().getEntity().getUniqueId())", "data.getCaster().getEntity()", "io.lumine.xikage.mythicmobs.skills.SkillMetadata.getCaster()", "data.getCaster().getEntity().getUniqueId()"], "Fixed commit": "dc0666452292f0a3d8df9cf9235a504986efdb5f", "Url": "https://api.github.com/repos/BerndiVader/MythicMobsExtension", "Date": "2017-11-20T19:21:46Z"},
{"Line": "=>1393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (array_size == (-1)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3618/buggy-version/src.main.java.com.alibaba.fastjson.JSONPath.java", "BodyUseAPI": [], "Fixed commit": "f3d9a1eae604ee49f705f4d05f1597a78f0e57a1", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-08-29T16:25:41Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((setJumpPredecessors) && (d5 instanceof soot.jimple.infoflow.solver.fastSolver.FastSolverLinkedNode)) ((soot.jimple.infoflow.solver.fastSolver.FastSolverLinkedNode<D>) (d5)).setPredecessor(d2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4384/buggy-version/src.soot.jimple.infoflow.solver.fastSolver.IFDSSolver.java", "BodyUseAPI": [], "Fixed commit": "256d47f21c3feae1be47c454f364591e7d6f5095", "Url": "https://api.github.com/repos/lilicoding/soot-infoflow", "Date": "2014-06-10T17:33:48Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((setJumpPredecessors) && (d5 instanceof soot.jimple.infoflow.solver.fastSolver.FastSolverLinkedNode)) ((soot.jimple.infoflow.solver.fastSolver.FastSolverLinkedNode<D>) (d5)).setPredecessor(predVal);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4384/buggy-version/src.soot.jimple.infoflow.solver.fastSolver.IFDSSolver.java", "BodyUseAPI": [], "Fixed commit": "256d47f21c3feae1be47c454f364591e7d6f5095", "Url": "https://api.github.com/repos/lilicoding/soot-infoflow", "Date": "2014-06-10T17:33:48Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((outputFormat.equals(FileOutputFormat.SVG)) && (!(archiveSVGOutput))) { outputPath = java.nio.file.Files.createDirectories(outputPath); }else { outputPath = java.nio.file.Files.createFile(outputPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/5874/buggy-version/core.management.src.main.java.uk.ac.ebi.interpro.scan.management.model.implementations.WriteOutputStep.java", "BodyUseAPI": [], "Fixed commit": "101775a315dfadce8c56882e373953d437a1d7fc", "Url": "https://api.github.com/repos/ebi-pf-team/interproscan", "Date": "2016-04-14T10:14:45Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.tinkerpop.gremlin.oltp.map.EdgeVertexPipe) (pipe)).direction.equals(vertexQueryPipe.queryBuilder.direction.opposite())) vertexQueryPipe.returnClass = com.tinkerpop.blueprints.Vertex.class; else return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4221/buggy-version/gremlin.gremlin-java.src.main.java.com.tinkerpop.gremlin.util.optimizers.VertexQueryOptimizer.java", "BodyUseAPI": [], "Fixed commit": "9d4b94dd5bcae3a30b2b9ba81b9e6b001320333a", "Url": "https://api.github.com/repos/tinkerpop/tinkerpop3", "Date": "2014-01-21T17:03:17Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/509/buggy-version/src.main.java.com.github.yuPATHobin.mybatis.gm.GeneralMapper.java", "BodyUseAPI": [], "Fixed commit": "509d2140b781a7c1d200a2fccbdd6cd73918e118", "Url": "https://api.github.com/repos/yuPATHobin/mybatis-generalmapper", "Date": "2017-03-06T09:32:15Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list == null) || (list.isEmpty())) { return new java.util.ArrayList<>(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/509/buggy-version/src.main.java.com.github.yuPATHobin.mybatis.gm.GeneralMapper.java", "BodyUseAPI": [], "Fixed commit": "509d2140b781a7c1d200a2fccbdd6cd73918e118", "Url": "https://api.github.com/repos/yuPATHobin/mybatis-generalmapper", "Date": "2017-03-06T09:32:15Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFilter == (items.size())) { build.put(path, item, arrayIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7022/buggy-version/src.org.nutz.mapl.impl.convert.FilterConvertImpl.java", "BodyUseAPI": [], "Fixed commit": "175301b1d8a3d44d1cc7dec057904afb05af683e", "Url": "https://api.github.com/repos/ywjno/nutz", "Date": "2012-09-05T08:39:06Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cells[i]) == null) { cells[i] = \"N/A\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/7256/buggy-version/retz-client.src.main.java.io.github.retz.cli.TableFormatter.java", "BodyUseAPI": [], "Fixed commit": "2c121883aaa3ac98e233040135702cee05015ce1", "Url": "https://api.github.com/repos/retz/retz", "Date": "2016-08-17T03:57:37Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (response != null) { response.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3902/buggy-version/application.xgame-order-consumer.src.main.java.com.xgame.order.consumer.business.ofpay.AbstractOfPayBusiness.java", "BodyUseAPI": ["org.apache.http.client.methods.CloseableHttpResponse.close()"], "Fixed commit": "e6db3b3368d54f84b2ce458611bdbae8761cb942", "Url": "https://api.github.com/repos/justxgame/xgame_server", "Date": "2017-09-29T14:43:11Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (response != null) { response.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3902/buggy-version/application.xgame-order-consumer.src.main.java.com.xgame.order.consumer.business.pmi.PmiPhoneDirectBusiness.java", "BodyUseAPI": ["org.apache.http.client.methods.CloseableHttpResponse.close()"], "Fixed commit": "e6db3b3368d54f84b2ce458611bdbae8761cb942", "Url": "https://api.github.com/repos/justxgame/xgame_server", "Date": "2017-09-29T14:43:11Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (response != null) { response.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/3902/buggy-version/application.xgame-order-consumer.src.main.java.com.xgame.order.consumer.business.pmi.PmiFuelCardBusiness.java", "BodyUseAPI": ["org.apache.http.client.methods.CloseableHttpResponse.close()"], "Fixed commit": "e6db3b3368d54f84b2ce458611bdbae8761cb942", "Url": "https://api.github.com/repos/justxgame/xgame_server", "Date": "2017-09-29T14:43:11Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((collection) instanceof org.jboss.pressgang.ccms.rest.v1.collections.RESTUserCollectionV1) { wrapper = new org.jboss.pressgang.ccms.wrapper.collection.RESTUserCollectionV1Wrapper(providerFactory, ((org.jboss.pressgang.ccms.rest.v1.collections.RESTUserCollectionV1) (collection)), isRevisionCollection, expandedEntityMethods); }else if ((collection) instanceof org.jboss.pressgang.ccms.rest.v1.collections.contentspec.RESTContentSpecCollectionV1) { wrapper = new org.jboss.pressgang.ccms.wrapper.collection.RESTContentSpecCollectionV1Wrapper(providerFactory, ((org.jboss.pressgang.ccms.rest.v1.collections.contentspec.RESTContentSpecCollectionV1) (collection)), isRevisionCollection, expandedEntityMethods); }else if ((collection) instanceof org.jboss.pressgang.ccms.rest.v1.collections.contentspec.RESTTextContentSpecCollectionV1) { wrapper = new org.jboss.pressgang.ccms.wrapper.collection.RESTTextContentSpecCollectionV1Wrapper(providerFactory, ((org.jboss.pressgang.ccms.rest.v1.collections.contentspec.RESTTextContentSpecCollectionV1) (collection)), isRevisionCollection, expandedEntityMethods); }else if ((collection) instanceof org.jboss.pressgang.ccms.rest.v1.collections.contentspec.RESTCSNodeCollectionV1) { wrapper = new org.jboss.pressgang.ccms.wrapper.collection.RESTCSNodeCollectionV1Wrapper(providerFactory, ((org.jboss.pressgang.ccms.rest.v1.collections.contentspec.RESTCSNodeCollectionV1) (collection)), isRevisionCollection); }else if ((collection) instanceof org.jboss.pressgang.ccms.rest.v1.collections.contentspec.join.RESTCSRelatedNodeCollectionV1) { wrapper = new org.jboss.pressgang.ccms.wrapper.collection.RESTCSRelatedNodeCollectionV1Wrapper(providerFactory, ((org.jboss.pressgang.ccms.rest.v1.collections.contentspec.join.RESTCSRelatedNodeCollectionV1) (collection)), isRevisionCollection, expandedEntityMethods); }else if ((collection) instanceof org.jboss.pressgang.ccms.rest.v1.collections.contentspec.RESTTranslatedContentSpecCollectionV1) { wrapper = new org.jboss.pressgang.ccms.wrapper.collection.RESTTranslatedContentSpecCollectionV1Wrapper(providerFactory, ((org.jboss.pressgang.ccms.rest.v1.collections.contentspec.RESTTranslatedContentSpecCollectionV1) (collection)), isRevisionCollection, expandedEntityMethods); }else if ((collection) instanceof org.jboss.pressgang.ccms.rest.v1.collections.contentspec.RESTTranslatedCSNodeCollectionV1) { wrapper = new org.jboss.pressgang.ccms.wrapper.collection.RESTTranslatedCSNodeCollectionV1Wrapper(providerFactory, ((org.jboss.pressgang.ccms.rest.v1.collections.contentspec.RESTTranslatedCSNodeCollectionV1) (collection)), isRevisionCollection, expandedEntityMethods); }else if ((collection) instanceof org.jboss.pressgang.ccms.rest.v1.collections.contentspec.RESTTranslatedCSNodeStringCollectionV1) { wrapper = getTranslatedCSNodeStringCollectionWrapper(); }else { throw new java.lang.IllegalArgumentException(org.jboss.pressgang.ccms.wrapper.collection.RESTCollectionWrapperBuilder.GENERIC_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/848/buggy-version/rest-provider.src.main.java.org.jboss.pressgang.ccms.wrapper.collection.RESTCollectionWrapperBuilder.java", "BodyUseAPI": [], "Fixed commit": "42ffa8d5bd33e3ad524b9f5350c8adb79b6da556", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSDatasourceProviders", "Date": "2014-03-19T06:14:47Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTimerRoutine) != null) { mTimerRoutine.stopRoutine(); mTimerRoutine = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/4148/buggy-version/ChaseWhisply.src.main.java.fr.tvbarthel.games.chasewhisply.ui.fragments.GameScoreFragment.java", "BodyUseAPI": [], "Fixed commit": "04b087b864adde64a247e5ffa5adea7a7e42631c", "Url": "https://api.github.com/repos/tvbarthel/ChaseWhisplyProject", "Date": "2013-10-12T18:34:42Z"},
{"Line": "=>1076", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mTargetPoint) != null) || ((mTargetVenue) != null)) mBackView.setVisibility(View.VISIBLE); else mBackView.setVisibility(View.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V71/6772/buggy-version/Navigine_Demo.app.src.main.java.com.navigine.naviginedemo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e03c8f35a15b002e5e555929b3aef44d8af30160", "Url": "https://api.github.com/repos/Navigine/Android-SDK", "Date": "2016-11-24T09:03:50Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((groupses) == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2967/buggy-version/app.src.main.java.fga.mds.gpp.trezentos.View.GroupsFragment.java", "BodyUseAPI": [], "Fixed commit": "193606100964131986c66639449988f1ba54ea54", "Url": "https://api.github.com/repos/fga-gpp-mds/2017.1-Trezentos", "Date": "2017-06-19T16:06:16Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value.length()) < 2) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2967/buggy-version/app.src.main.java.fga.mds.gpp.trezentos.Controller.GroupController.java", "BodyUseAPI": [], "Fixed commit": "193606100964131986c66639449988f1ba54ea54", "Url": "https://api.github.com/repos/fga-gpp-mds/2017.1-Trezentos", "Date": "2017-06-19T16:06:16Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value.length()) < 2) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2967/buggy-version/app.src.main.java.fga.mds.gpp.trezentos.Controller.GroupController.java", "BodyUseAPI": [], "Fixed commit": "193606100964131986c66639449988f1ba54ea54", "Url": "https://api.github.com/repos/fga-gpp-mds/2017.1-Trezentos", "Date": "2017-06-19T16:06:16Z"},
{"Line": "=>1059", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.eclipse.jetty.http.HttpParser.LOG.isDebugEnabled()) org.eclipse.jetty.http.HttpParser.LOG.debug(\"Illegal character '{}' in {}\", ch, org.eclipse.jetty.util.BufferUtil.toDetailString(buffer));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/9173/buggy-version/jetty-http.src.main.java.org.eclipse.jetty.http.HttpParser.java", "BodyUseAPI": ["org.eclipse.jetty.util.log.Logger.debug(java.lang.String,byte,org.eclipse.jetty.util.BufferUtil.toDetailString(buffer))"], "Fixed commit": "fff2dd2f2dd237b619187ad1ddc4d71be2eff560", "Url": "https://api.github.com/repos/eclipse/jetty.project", "Date": "2014-07-11T06:10:06Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["projectInfo.getAppInfos().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(appInfo.getAppDirName().equals(oldAppDirName))) { documentGenerator.deleteOldDocument(projectInfoFile, oldAppDirName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2611/buggy-version/phresco-framework-impl.src.main.java.com.photon.phresco.framework.impl.ProjectManagerImpl.java", "BodyUseAPI": ["com.photon.phresco.framework.api.DocumentGenerator.deleteOldDocument(java.io.File,java.lang.String)"], "Fixed commit": "8c53c06ba3f98ddf91498908fc2936e7f5f5364c", "Url": "https://api.github.com/repos/photon-infotech/framework", "Date": "2013-05-21T14:38:40Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getIndexOpPreviousElement(com.puppycrawl.tools.checkstyle.api.DetailAST)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (resultAst == null) { whitespaceFollowedAst = ast; }else { whitespaceFollowedAst = resultAst; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7419/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.java", "BodyUseAPI": [], "Fixed commit": "543eca786a476f6f4e09b0a697f05f3713269fbf", "Url": "https://api.github.com/repos/sergileon/checkstyle", "Date": "2017-08-30T08:52:53Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["functionCall.getArguments().getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value == null) { output.set(0, null); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4185/buggy-version/cascading-core.src.main.java.cascading.operation.text.DateParser.java", "BodyUseAPI": [], "Fixed commit": "3aa184d6beb4ef20bf50ccbe55576d23570756d1", "Url": "https://api.github.com/repos/bpodgursky/cascading", "Date": "2012-08-14T00:13:53Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (targetPoints.isEmpty()) { int width = dimension.getWidth(); int height = dimension.getHeight(); coordinate = com.epam.torpedo.components.Coordinate.getRandomPosition(width, height); }else { coordinate = targetPoints.pop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5439/buggy-version/src.com.epam.torpedo.hunters.concrete.PreciseHunter.java", "BodyUseAPI": ["com.epam.torpedo.components.CoordinateSet.pop()"], "Fixed commit": "6ca9fcfff6cbb9586473cd1bd512f3bfcbbb3ce1", "Url": "https://api.github.com/repos/scriptmage/torpedo", "Date": "2015-04-29T14:05:50Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.imdeity.nether.sql.NetherSQL.getResult(((\"SELECT `time_in_nether` FROM `deity_nether_stats` WHERE `player_name`='\" + (p.getName())) + \"'\"))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result == null) { return 0; }else if (lastJoin != null) { return 0; }else { return com.imdeity.nether.sql.NetherSQL.spent; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8030/buggy-version/com.imdeity.nether.sql.NetherSQL.java", "BodyUseAPI": [], "Fixed commit": "06318237c69b177bf7c9dfcd5139b3520cfdb9c2", "Url": "https://api.github.com/repos/DeityKingdomsDev/DeityNether", "Date": "2012-07-16T01:37:51Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.block.BlockFace.getOppositeFace()", "com.bergerkiller.bukkit.tc.rails.type.RailTypeHorizontal.getDirection(org.bukkit.block.Block)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (hitToFace == railDirection) { if (com.bergerkiller.bukkit.tc.Util.isVerticalAbove(posBlock, railDirection)) { return false; } if ((posBlock.getY()) == (hitBlock.getY())) { org.bukkit.block.Block above = hitBlock.getRelative(BlockFace.UP); if (!(MaterialUtil.ISSOLID.get(above))) { return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1728/buggy-version/src.main.java.com.bergerkiller.bukkit.tc.rails.type.RailTypeHorizontal.java", "BodyUseAPI": ["com.bergerkiller.bukkit.tc.Util.isVerticalAbove(org.bukkit.block.Block,org.bukkit.block.BlockFace)"], "Fixed commit": "00b84e7b4b65195c83ac90edd699da241b7b78db", "Url": "https://api.github.com/repos/bergerhealer/TrainCarts", "Date": "2017-04-26T22:42:24Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (e != null) { if (n != (org.apache.solr.ltr.feature.norm.impl.IdentityNormalizer.INSTANCE)) e = n.explain(e); featureExplanations.add(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/726/buggy-version/solr.contrib.ltr.src.java.org.apache.solr.ltr.ranking.ModelQuery.java", "BodyUseAPI": ["org.apache.solr.ltr.feature.norm.Normalizer.explain(org.apache.lucene.search.Explanation)"], "Fixed commit": "1ea74db020631e87f2327c4d5804f357a2858a1e", "Url": "https://api.github.com/repos/loveholidays/lucene-solr", "Date": "2016-05-05T13:44:40Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.solr.ltr.ranking.FeatureWeight.explain(org.apache.lucene.index.LeafReaderContext,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (featureExplanation != null) explanations[(index++)] = featureExplanation;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/726/buggy-version/solr.contrib.ltr.src.java.org.apache.solr.ltr.ranking.ModelQuery.java", "BodyUseAPI": [], "Fixed commit": "1ea74db020631e87f2327c4d5804f357a2858a1e", "Url": "https://api.github.com/repos/loveholidays/lucene-solr", "Date": "2016-05-05T13:44:40Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.solr.ltr.ranking.FeatureWeight.scorer(org.apache.lucene.index.LeafReaderContext)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (r != null) { r.iterator().advance(doc); if ((r.docID()) == doc) score = r.score(); return org.apache.lucene.search.Explanation.match(score, r.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/726/buggy-version/solr.contrib.ltr.src.java.org.apache.solr.ltr.ranking.FeatureWeight.java", "BodyUseAPI": ["org.apache.solr.ltr.ranking.FeatureScorer.toString()", "org.apache.solr.ltr.ranking.FeatureScorer.iterator()", "org.apache.solr.ltr.ranking.FeatureScorer.score()", "org.apache.lucene.search.Explanation.match(float,r.toString())", "org.apache.solr.ltr.ranking.FeatureScorer.docID()", "r.iterator().advance(int)"], "Fixed commit": "1ea74db020631e87f2327c4d5804f357a2858a1e", "Url": "https://api.github.com/repos/loveholidays/lucene-solr", "Date": "2016-05-05T13:44:40Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(subscription.isActive())) { for (java.lang.String dest : subscription.getSubscribers()) { com.balonbal.slybot.Main.getBot().sendMessage(dest, (((((((((((((((((((((\"[\" + (org.pircbotx.Colors.BOLD)) + (org.pircbotx.Colors.PURPLE)) + \"TWITCH\") + (org.pircbotx.Colors.NORMAL)) + \"] \") + \"User \") + (org.pircbotx.Colors.BLUE)) + (channel.get(\"display_name\"))) + (org.pircbotx.Colors.NORMAL)) + \" Just went live! \") + \"[ Playing: \") + (org.pircbotx.Colors.GREEN)) + (map.get(\"game\"))) + (org.pircbotx.Colors.NORMAL)) + \" ] \") + (((channel.get(\"mature\")) != null) && ((boolean) (channel.get(\"mature\"))) ? (((\"[ \" + (org.pircbotx.Colors.RED)) + \"MATURE\") + (org.pircbotx.Colors.NORMAL)) + \" ] \" : \"\")) + \"(\") + (org.pircbotx.Colors.OLIVE)) + (channel.get(\"url\"))) + (org.pircbotx.Colors.NORMAL)) + \")\")); } subscription.setActive(true); subscription.setStreamData(map); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3600/buggy-version/src.main.java.com.balonbal.slybot.util.sites.twitch.Twitch.java", "BodyUseAPI": ["com.balonbal.slybot.util.sites.twitch.TwitchSubscription.setStreamData(java.util.HashMap<java.lang.String, java.lang.Object>)", "com.balonbal.slybot.util.sites.twitch.TwitchSubscription.getSubscribers()", "com.balonbal.slybot.util.sites.twitch.TwitchSubscription.setActive(boolean)"], "Fixed commit": "224987f8e3ef6b7aec57ae079d76cb87b0c669eb", "Url": "https://api.github.com/repos/Balonbal/slybot", "Date": "2015-03-27T18:53:25Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((json.votes) != null) { for (api.entities.VoteJSON v : json.votes) { choice.votes.add(models.Vote.fromJson(v)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3238/buggy-version/Service.app.models.Choice.java", "BodyUseAPI": [], "Fixed commit": "af8380db8dc5b4eaee899af1211de0619442661b", "Url": "https://api.github.com/repos/atiti/OpenARMS", "Date": "2012-03-21T12:55:10Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTable.getSelectedRow()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index < 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4812/buggy-version/src.views.generalComponents.JEasyTable.java", "BodyUseAPI": [], "Fixed commit": "fbf3ec8153d1e544c0cf9337ae624705102b9762", "Url": "https://api.github.com/repos/decaywood/FramesWorking", "Date": "2015-09-22T02:18:06Z"},
{"Line": "=>2076", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((householdDialog) != null) householdDialog.dismiss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6079/buggy-version/src.main.java.org.openhds.mobile.activity.UpdateActivity.java", "BodyUseAPI": [], "Fixed commit": "cab79f3f370ca62c7f58240d1516446e8f73b3f3", "Url": "https://api.github.com/repos/ManhicaDSS/openhds-tablet", "Date": "2015-03-15T12:16:50Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapter.getItemCount()) == 0) { hideProgressDialog(); findViewById(R.id.empty_list_layout).setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/378/buggy-version/app.src.main.java.net.kultprosvet.androidcourse.socialapp.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "eb9f59d262ef273819c5acd05ed9b975df04d4f1", "Url": "https://api.github.com/repos/roma-sck/SocialApp", "Date": "2016-12-13T22:05:38Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((params.length) == 0) || ((params[0]) == null)) || (params[0].isEmpty())) { throw new uk.org.dataforce.dfbnc.commands.CommandNotFoundException(\"No valid command given.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1404/buggy-version/src.uk.org.dataforce.dfbnc.commands.CommandManager.java", "BodyUseAPI": [], "Fixed commit": "e4af0ec8d52001957c054c918e1ab2bfaec84310", "Url": "https://api.github.com/repos/csmith/DFBnc", "Date": "2011-09-10T13:18:16Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gmail.trentech.pjp.utils.ConfigManager.getConfig()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (config.getNode(\"options\", \"particles\", \"creation\", \"type\").getString().equals(\"SPELL_WITCH\")) { config.getNode(\"options\", \"particles\", \"creation\", \"type\").setValue(\"WITCH_SPELL\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5613/buggy-version/src.main.java.com.gmail.trentech.pjp.utils.ConfigManager.java", "BodyUseAPI": ["ninja.leaping.configurate.commented.CommentedConfigurationNode.getNode(java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "config.getNode(\"options\", \"particles\", \"creation\", \"type\").setValue(java.lang.String)"], "Fixed commit": "624aa3c36c6793e51d406b07f1f574c9b7429736", "Url": "https://api.github.com/repos/trentech/ProjectPortals", "Date": "2016-10-19T17:38:01Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.findlyrics.ui.controller.UiController.EMPTY_STRING.equals(view.getQuery())) { view.showError(messages.getString(\"error.message\")); }else { constructOutput(DBLyricsService.factory, getTableMouseAdapterViewOnly()); mediator.viewSearchMoreButton(); view.addSearchMoreButtonsListener(new com.findlyrics.ui.controller.UiController.SearchMoreButtonListener()); view.addTextFieldListener(new com.findlyrics.ui.controller.UiController.SearchOnceMoreButtonListener()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7742/buggy-version/src.main.java.com.findlyrics.ui.controller.UiController.java", "BodyUseAPI": ["com.findlyrics.ui.view.UiViewer.addTextFieldListener(com.findlyrics.ui.controller.UiController.SearchOnceMoreButtonListener)", "com.findlyrics.ui.view.UiViewer.showError(java.lang.String)", "com.findlyrics.ui.view.UiViewer.addSearchMoreButtonsListener(com.findlyrics.ui.controller.UiController.SearchMoreButtonListener)"], "Fixed commit": "d45f2931151a9d6c0dc3a7944d6b811e6fe81550", "Url": "https://api.github.com/repos/gagomet/FindLyricsMaven", "Date": "2014-10-07T10:50:06Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((encoding == null) || ((encoding.length()) == 0)) { return flag; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2400/buggy-version/src.com.orange.common.api.service.ServiceHandler.java", "BodyUseAPI": [], "Fixed commit": "ca05cb5311c8d2bb24c707e29e919ce12c789cef", "Url": "https://api.github.com/repos/gckjdev/Common_Java", "Date": "2011-10-06T10:06:41Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()", "java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nameLength < (extensionLength + 2)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3830/buggy-version/src.main.java.cloud.Dropbox.java", "BodyUseAPI": [], "Fixed commit": "2154270d6d664305fa784579c0fc53ed0028674b", "Url": "https://api.github.com/repos/alex-vo/cp-core", "Date": "2013-07-17T18:35:27Z"},
{"Line": "=>592", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((destination == null) && (samlObject instanceof org.picketlink.identity.federation.saml.v2.protocol.AuthnRequestType)) { org.picketlink.identity.federation.saml.v2.protocol.AuthnRequestType authRequest = ((org.picketlink.identity.federation.saml.v2.protocol.AuthnRequestType) (samlObject)); destination = authRequest.getIssuer().getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2618/buggy-version/picketlink-bindings.picketlink-tomcat5.src.main.java.org.picketlink.identity.federation.bindings.tomcat.idp.IDPWebBrowserSSOValve.java", "BodyUseAPI": [], "Fixed commit": "655baf4f6c1b5a067a1d15e4d8958498637828b3", "Url": "https://api.github.com/repos/anilsaldhana/federation", "Date": "2012-05-01T00:06:25Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(detectedSdPath)) { java.io.File internalSdPath = android.os.Environment.getExternalStorageDirectory(); internalSd = internalSdPath.getPath(); detectedSdPath = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8268/buggy-version/src.com.pyler.xinternalsd.XInternalSD.java", "BodyUseAPI": [], "Fixed commit": "f2c5bfe39b0081e2ebc874bbe109188f1895d229", "Url": "https://api.github.com/repos/pylerSM/XInternalSD", "Date": "2015-11-15T20:31:57Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isRefreshing)) { updateListener(); if (isOverlay) { mHeadLayout.getLayoutParams().height = ((int) (mHeadHeight)); mHeadLayout.requestLayout(); }else { createAnimatorTranslationY(mChildView, mHeadHeight, mHeadLayout); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5619/buggy-version/library.src.main.java.com.cjj.MaterialRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "641a073e1b04b78f0990883c5c5a5ecdf54e604d", "Url": "https://api.github.com/repos/android-cjj/Android-MaterialRefreshLayout", "Date": "2015-09-21T09:36:36Z"},
{"Line": "=>1285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (continueRequested) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3980/buggy-version/sdk.src.main.java.com.integreight.onesheeld.sdk.OneSheeldDevice.java", "BodyUseAPI": [], "Fixed commit": "e76f2933f2e4a40bd43a400707a9157c42080fdf", "Url": "https://api.github.com/repos/Integreight/1Sheeld-Android-SDK", "Date": "2015-11-08T13:04:10Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentJ) == 7) && ((currentPiece) == 'I')) { moveToLeft(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/606/buggy-version/src.Board.java", "BodyUseAPI": [], "Fixed commit": "800228d49acb2f78f1e9fd10c30b117447728574", "Url": "https://api.github.com/repos/matheuspb/Tetris", "Date": "2016-06-27T14:03:15Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gameOver())) update();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/606/buggy-version/src.Board.java", "BodyUseAPI": [], "Fixed commit": "800228d49acb2f78f1e9fd10c30b117447728574", "Url": "https://api.github.com/repos/matheuspb/Tetris", "Date": "2016-06-27T14:03:15Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cleanPrivateKey) { cert.setPrivateKey(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4647/buggy-version/axelor-bank-payment.src.main.java.com.axelor.apps.bankpayment.ebics.service.EbicsCertificateService.java", "BodyUseAPI": [], "Fixed commit": "22eaef03908b6ec24fc3f3ad334edf28ed664c3d", "Url": "https://api.github.com/repos/axelor/axelor-business-suite", "Date": "2017-10-04T05:45:59Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sourceType.isEnum()) || (destinationType.isEnum())) new org.modelmapper.internal.Errors().mappingForEnum().throwConfigurationExceptionIfErrorsExist();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/438/buggy-version/core.src.main.java.org.modelmapper.internal.TypeMapImpl.java", "BodyUseAPI": [], "Fixed commit": "14aaf482ea2495f793d2a240d1cec970d3f0ce8e", "Url": "https://api.github.com/repos/jhalterman/modelmapper", "Date": "2012-10-08T22:26:48Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (values.get(i).equals(\"\")) { userData.put(fields.get(i).getLabel(), \"N/A\"); }else { userData.put(fields.get(i).getLabel(), values.get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8277/buggy-version/src.main.java.com.beans.FieldBean.java", "BodyUseAPI": ["fields.get(i).getLabel()", "java.util.List<java.lang.String>.get(int)", "java.util.Map<java.lang.String, java.lang.String>.put(fields.get(i).getLabel(),java.lang.String)", "java.util.List<com.Entities.FieldEntity>.get(int)", "java.util.List<com.Entities.FieldEntity>.get(int)", "java.util.Map<java.lang.String, java.lang.String>.put(fields.get(i).getLabel(),java.lang.String)", "fields.get(i).getLabel()"], "Fixed commit": "79e7365c79b6238c19efd615391b267fa504c537", "Url": "https://api.github.com/repos/kapitanN/data-collection", "Date": "2017-04-05T08:13:39Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getUsername().length()) > 60) { model.addObject(\"failureReason\", \"Username is too long.\"); model.setViewName(\"registrationFailure\"); }else if ((user.getEmail().length()) > 60) { model.addObject(\"failureReason\", \"Email is too long.\"); model.setViewName(\"registrationFailure\"); }else { java.lang.String registerError = registerUser(user); if (registerError == null) { model.addObject(\"username\", user.getUsername()); model.addObject(\"email\", user.getEmail()); model.setViewName(\"registrationSuccess\"); }else { model.addObject(\"failureReason\", registerError); model.setViewName(\"registrationFailure\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3608/buggy-version/src.main.java.com.jonesdy.web.controller.RegisterController.java", "BodyUseAPI": ["org.springframework.web.servlet.ModelAndView.addObject(java.lang.String,user.getEmail())", "com.jonesdy.model.User.getEmail()", "com.jonesdy.model.User.getEmail()", "org.springframework.web.servlet.ModelAndView.addObject(java.lang.String,user.getUsername())", "com.jonesdy.web.controller.RegisterController.registerUser(com.jonesdy.model.User)", "com.jonesdy.model.User.getUsername()", "user.getEmail().length()"], "Fixed commit": "751857726217ecfb34458afb154e9dcdc2e4e594", "Url": "https://api.github.com/repos/jonesdy/StockSim", "Date": "2014-11-08T02:15:21Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((responseCode) == 204) { com.itraxhelper.utils.Utility.showToastMessage(mContext, com.itraxhelper.utils.Utility.getResourcesString(mContext, R.string.student_not_found)); }else if (((responseCode) == 401) && (mUrl.equalsIgnoreCase(APIConstants.HELPER_LOGIN))) { com.itraxhelper.utils.Utility.showToastMessage(mContext, com.itraxhelper.utils.Utility.getResourcesString(mContext, R.string.invalid_credentials)); }else { com.itraxhelper.utils.Utility.showOKOnlyDialog(mContext, com.itraxhelper.utils.Utility.getResourcesString(mContext, R.string.unauthorized_access), com.itraxhelper.utils.Utility.getResourcesString(mContext, R.string.app_name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/9185/buggy-version/app.src.main.java.com.itraxhelper.aynctask.ServerJSONAsyncTask.java", "BodyUseAPI": [], "Fixed commit": "f744867c23713a4d50a09640a7584ce620aba1c5", "Url": "https://api.github.com/repos/sixscorpions/ItraxHelper", "Date": "2017-08-22T17:40:08Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isZero()) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8642/buggy-version/src.Monomial.java", "BodyUseAPI": [], "Fixed commit": "5eb75aff492ea3c79096452ff06af9060798822a", "Url": "https://api.github.com/repos/Simonsator/Progra6Aufgabe2", "Date": "2017-12-03T14:50:35Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currentServiceReference) != null) { this.context.ungetService(this.currentServiceReference); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7412/buggy-version/org.openscada.ae.server.exporter.net.src.org.openscada.ae.server.exporter.net.Activator.java", "BodyUseAPI": [], "Fixed commit": "fb956fa633e63e55e9d01e8730c177a051f1cd4b", "Url": "https://api.github.com/repos/ctron/org.openscada.atlantis", "Date": "2012-05-02T10:26:07Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x == 5) newLine.append(((rand.nextInt(1000)) + \" \"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4933/buggy-version/src.com.untamedears.PrisonPearl.PrisonPearlPlugin.java", "BodyUseAPI": [], "Fixed commit": "0ed550b40ba32b951fee985e90783791645e7284", "Url": "https://api.github.com/repos/Civcraft/PrisonPearl", "Date": "2015-09-01T15:16:46Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (upc.isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8352/buggy-version/src.main.java.SpotyCheckController.java", "BodyUseAPI": [], "Fixed commit": "9817fba0333edc81566abc13519b86560bdede5f", "Url": "https://api.github.com/repos/lunax28/SpotyCheck", "Date": "2017-11-15T09:32:12Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(value)) { if (concat) { command.add((arg + value)); }else { command.add(arg); command.add(value); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/9172/buggy-version/src.main.java.org.jenkinsci.plugins.fortifycloudscan.FortifyCloudScanBuilder.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "0b717017db590b9b2aa9927f9c4622a8dc5a4950", "Url": "https://api.github.com/repos/jenkinsci/fortify-cloudscan-plugin", "Date": "2015-10-23T15:26:47Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["button[tmp].getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((checkAnswer(s)) == true) { button[tmp].setText(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2954/buggy-version/app.src.main.java.com.example.cassa.entrainementprojettut.MysteryWordActivity.java", "BodyUseAPI": ["button[tmp].setText(java.lang.String)"], "Fixed commit": "ea81b69680817dbd5a599529b8e1e52328d8b09c", "Url": "https://api.github.com/repos/RumblingBee/ProjetTutoreAndroid", "Date": "2017-11-21T12:06:46Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((technicalCarDetails.getRegistration()) == null) { ps.setNull(2, java.sql.Types.INTEGER); }else { ps.setInt(2, technicalCarDetails.getRegistration().getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6551/buggy-version/db.src.main.java.be.ugent.degage.db.jdbc.JDBCCarDAO.java", "BodyUseAPI": ["be.ugent.degage.db.jdbc.TechnicalCarDetails.getRegistration()", "technicalCarDetails.getRegistration().getId()", "java.sql.PreparedStatement.setInt(int,technicalCarDetails.getRegistration().getId())"], "Fixed commit": "bf9868bbc7b2cc0279adf3e2e05734f15f426937", "Url": "https://api.github.com/repos/kcoolsae/Degage", "Date": "2014-10-21T19:00:36Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((strs.length) != 2) { return \"error\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3063/buggy-version/src.main.java.org.denevell.rocklobster.blogposts.BlogPost.java", "BodyUseAPI": [], "Fixed commit": "452c8c686a9986c53efb5312c9110fb0cf170a66", "Url": "https://api.github.com/repos/denevell/RockLobster", "Date": "2013-03-12T22:49:12Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(file.exists())) return allClasses;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3063/buggy-version/src.main.java.org.denevell.rocklobster.utils.ClassUtils.java", "BodyUseAPI": [], "Fixed commit": "452c8c686a9986c53efb5312c9110fb0cf170a66", "Url": "https://api.github.com/repos/denevell/RockLobster", "Date": "2013-03-12T22:49:12Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (perceivedStrength.equals(null)) { strength = java.lang.Double.parseDouble(perceivedStrength); }else { strength = magnitude; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1527/buggy-version/app.src.main.java.com.wr_software_solutions.earthquakereporter.QueryUtils.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "15994592ce1446922d592f1d7e59544e9326e56a", "Url": "https://api.github.com/repos/abdulrafeytahir/Earthquake-Reporter", "Date": "2017-08-10T14:16:33Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<L, java.util.List<D>>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (predicted != null) incrementStat(stats, predicted, edu.cmu.ml.rtw.generic.task.classify.TaskClassification.Stat.FALSE_POSITIVE, count);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6583/buggy-version/src.main.java.edu.cmu.ml.rtw.generic.task.classify.TaskClassification.java", "BodyUseAPI": ["edu.cmu.ml.rtw.generic.task.classify.TaskClassification<D, L>.incrementStat(java.util.Map<L, java.util.Map<edu.cmu.ml.rtw.generic.task.classify.TaskClassification.Stat, java.lang.Integer>>,L,edu.cmu.ml.rtw.generic.task.classify.TaskClassification.Stat,int)"], "Fixed commit": "12a9156dc52ca638383f72dc6f3c4d53e267c47e", "Url": "https://api.github.com/repos/cmunell/micro-util", "Date": "2016-03-16T06:38:01Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<L, java.util.List<D>>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (predicted != null) { for (L label : actualToPredicted.keySet()) if (!(label.equals(predicted))) incrementStat(stats, label, edu.cmu.ml.rtw.generic.task.classify.TaskClassification.Stat.TRUE_NEGATIVE, count); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6583/buggy-version/src.main.java.edu.cmu.ml.rtw.generic.task.classify.TaskClassification.java", "BodyUseAPI": ["L.equals(L)"], "Fixed commit": "12a9156dc52ca638383f72dc6f3c4d53e267c47e", "Url": "https://api.github.com/repos/cmunell/micro-util", "Date": "2016-03-16T06:38:01Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1044/buggy-version/uberfire-backend.backend-api.src.main.java.org.uberfire.backend.vfs.impl.PathImpl.java", "BodyUseAPI": [], "Fixed commit": "00cc24724bab3df25ce5743c11302053efa2cab2", "Url": "https://api.github.com/repos/droolsjbpm/uberfire", "Date": "2012-11-08T11:22:17Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, io.netty.channel.Channel>.remove(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (proxyChannel == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2836/buggy-version/proxy-server.src.main.java.org.fengfei.lanproxy.server.ProxyChannelManager.java", "BodyUseAPI": [], "Fixed commit": "cb7c88350d1e2008f3491908ff25bdb4855a232d", "Url": "https://api.github.com/repos/ffay/lanproxy", "Date": "2016-12-21T03:32:19Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, io.netty.channel.Channel>.remove(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (proxyChannel != channel) { org.fengfei.lanproxy.server.ProxyChannelManager.proxyChannels.put(port, proxyChannel); }else { if (proxyChannel.isActive()) { proxyChannel.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2836/buggy-version/proxy-server.src.main.java.org.fengfei.lanproxy.server.ProxyChannelManager.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, io.netty.channel.Channel>.put(int,io.netty.channel.Channel)", "io.netty.channel.Channel.close()", "io.netty.channel.Channel.isActive()"], "Fixed commit": "cb7c88350d1e2008f3491908ff25bdb4855a232d", "Url": "https://api.github.com/repos/ffay/lanproxy", "Date": "2016-12-21T03:32:19Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (needConvertDecimalToByte) { java.lang.Object value = data[allCount]; if (null != value) { if ((measureDataType[i]) == (org.apache.carbondata.core.metadata.datatype.DataType.DECIMAL)) { java.math.BigDecimal decimal = ((java.math.BigDecimal) (value)); measures[(index++)] = org.apache.carbondata.core.util.DataTypeUtil.bigDecimalToByte(decimal); }else { measures[(index++)] = value; } }else { measures[(index++)] = null; } }else { measures[(index++)] = data[allCount]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5233/buggy-version/processing.src.main.java.org.apache.carbondata.processing.newflow.sort.SortStepRowUtil.java", "BodyUseAPI": [], "Fixed commit": "ecc0203de9dc60801de595720ee7dc148d5b478d", "Url": "https://api.github.com/repos/sraghunandan/carbondata-1", "Date": "2017-06-15T08:51:08Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gm.GameState) == 0) { (gm.GameState)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6776/buggy-version/src.NPC.Nelly.java", "BodyUseAPI": [], "Fixed commit": "d5d4615994109ce0aa9f1e12317b7090d6a61a96", "Url": "https://api.github.com/repos/jeansimoncollard/cs560project", "Date": "2017-03-31T20:34:45Z"},
{"Line": "=>723", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((commentValue.length()) > 0) { buf.append(\" / \"); buf.append(commentValue); commentValue.rest(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/672/buggy-version/src.main.java.nom.tam.fits.HeaderCard.java", "BodyUseAPI": ["nom.tam.fits.utilities.FitsLineAppender.append(nom.tam.fits.utilities.FitsSubString)", "nom.tam.fits.utilities.FitsSubString.rest()"], "Fixed commit": "fc2ee42ae09a530ed1c180180f2b1b8952cc7318", "Url": "https://api.github.com/repos/nom-tam-fits/nom-tam-fits", "Date": "2015-05-06T15:00:08Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isWARFile()) { return getContextPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3213/buggy-version/portal-impl.src.com.liferay.portal.model.impl.ThemeImpl.java", "BodyUseAPI": [], "Fixed commit": "14da302415e041c461fd246cd374b3a4af781b05", "Url": "https://api.github.com/repos/CsabaTurcsan/liferay-portal", "Date": "2015-09-15T21:05:18Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(m.getStatus().equals(\"closed\"))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4753/buggy-version/Les-delices-du-palet.src.com.delices.backend.ScoreUpdater.java", "BodyUseAPI": [], "Fixed commit": "7652a59ec4a3d8c960648fd3c1ce0a68eb1b0693", "Url": "https://api.github.com/repos/vince-upmc/Les-delices-du-palet", "Date": "2014-01-13T10:37:04Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.app.LoaderManager.getLoader(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (weatherLoader == null) { loaderManager.initLoader(com.example.android.sunshine.MainActivity.LOCATION_LOADER, locationBundle, this); }else { loaderManager.restartLoader(com.example.android.sunshine.MainActivity.LOCATION_LOADER, locationBundle, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2170/buggy-version/app.src.main.java.com.example.android.sunshine.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f67b2258fbb7de7bd17a7787bf3a0385ad0e1a61", "Url": "https://api.github.com/repos/Yahhi/S05.01-Exercise-AsyncTaskLoader", "Date": "2017-12-18T23:48:42Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.flex.compiler.definitions.metadata.IMetaTag.getAttributeValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value == null) { return definition.getQualifiedName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/446/buggy-version/src.main.java.randori.compiler.internal.utils.MetaDataUtils.java", "BodyUseAPI": [], "Fixed commit": "f8a111caf7a54df1b570ce715c0421884d29ba1c", "Url": "https://api.github.com/repos/RandoriAS/randori-compiler", "Date": "2013-04-15T16:11:18Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.skuzzle.polly.core.internal.httpv2.UserController.getSessionUser()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((user == null) || ((user.getId()) != userId)) { this.requirePermissions(RoleManager.ADMIN_PERMISSION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3981/buggy-version/projects.de.skuzzle.polly.core.src.de.skuzzle.polly.core.internal.httpv2.UserController.java", "BodyUseAPI": [], "Fixed commit": "4eae5f558dfb8b4d5a124ea0ca8ab8d0ca646e8c", "Url": "https://api.github.com/repos/skuzzle/polly", "Date": "2013-10-05T18:23:03Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.skuzzle.polly.core.internal.httpv2.UserController.getSessionUser()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((user == null) || ((user.getId()) != userId)) { this.requirePermissions(RoleManager.ADMIN_PERMISSION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3981/buggy-version/projects.de.skuzzle.polly.core.src.de.skuzzle.polly.core.internal.httpv2.UserController.java", "BodyUseAPI": [], "Fixed commit": "4eae5f558dfb8b4d5a124ea0ca8ab8d0ca646e8c", "Url": "https://api.github.com/repos/skuzzle/polly", "Date": "2013-10-05T18:23:03Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(urlStr.startsWith(\"http\"))) urlStr = \"http://\" + urlStr;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7765/buggy-version/geopaparazzilibrary.src.main.java.eu.geopaparazzi.library.network.NetworkUtilities.java", "BodyUseAPI": [], "Fixed commit": "58fc3b29e3c40e74e743e237a51369b6952e8b77", "Url": "https://api.github.com/repos/dispiste/geopaparazzi", "Date": "2016-08-18T09:20:34Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wifi) != null) putSafe(obj, \"wifi\", wifi.toJSON());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/499/buggy-version/client.Ping.src.com.num.models.Measurement.java", "BodyUseAPI": [], "Fixed commit": "6cbb4faca142a60e9f3bb1efc746fb801b49d15c", "Url": "https://api.github.com/repos/abhishekjain89/androidperformance", "Date": "2012-04-04T02:27:52Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.google.common.base.Strings.isNullOrEmpty(error.getMessage()))) { out.println((\" \" + (error.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5437/buggy-version/src.main.java.com.selesse.jxlint.report.DefaultReporter.java", "BodyUseAPI": ["com.selesse.jxlint.model.rules.LintError.getMessage()", "com.selesse.jxlint.report.DefaultReporter.println((\"    \" + (error.getMessage())))"], "Fixed commit": "795d213d33a1a2682be6da328c6bfc867f6a4ff5", "Url": "https://api.github.com/repos/selesse/jxlint", "Date": "2014-03-18T13:46:18Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["overwatch.db.Database.query(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(ers.isEmpty())) { supplyTab.number.field.setText((\"\" + (ers.getElemAs(\"supplyNo\", java.lang.Integer.class)))); supplyTab.type.field.setText(ers.getElemAs(\"type\", java.lang.String.class)); supplyTab.amount.field.setText((\"\" + (ers.getElemAs(\"count\", java.lang.Integer.class)))); }else { overwatch.core.Gui.showErrorDialogue(\"No longer exists\", \"The selected supply no longer exists\"); populateTabList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3294/buggy-version/overwatch.src.overwatch.controllers.SupplyLogic.java", "BodyUseAPI": ["overwatch.db.EnhancedResultSet.getElemAs(java.lang.String,java.lang.Class)", "overwatch.db.EnhancedResultSet.getElemAs(java.lang.String,java.lang.Class)", "overwatch.db.EnhancedResultSet.getElemAs(java.lang.String,java.lang.Class)", "supplyTab.type.field.setText(ers.getElemAs(\"type\", java.lang.String.class))", "supplyTab.number.field.setText((\"\" + (ers.getElemAs(\"supplyNo\", java.lang.Integer.class))))", "supplyTab.amount.field.setText((\"\" + (ers.getElemAs(\"count\", java.lang.Integer.class))))"], "Fixed commit": "630636f43834f91da5c12b98b6bfd35a8a1b5737", "Url": "https://api.github.com/repos/LeeCIT/overwatch", "Date": "2013-04-11T00:53:08Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (graphics instanceof java.awt.Graphics2D) { java.awt.Graphics2D g = ((java.awt.Graphics2D) (graphics)); g.setPaint(java.awt.Color.BLACK); g.setComposite(java.awt.AlphaComposite.getInstance(java.awt.AlphaComposite.SRC_OVER, 0.5F)); g.fillRect(0, 0, Panels.applicationFrame.getWidth(), Panels.applicationFrame.getHeight()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7336/buggy-version/mbhd-swing.src.main.java.org.multibit.hd.ui.views.components.panels.LightBoxPanel.java", "BodyUseAPI": [], "Fixed commit": "f8d649efdde3a0479ddc5c354593475156e03f24", "Url": "https://api.github.com/repos/Multibit-Legacy/multibit-hd", "Date": "2015-02-24T14:11:21Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["device.getDetails().getFriendlyName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (friendlyName != null) { us.nineworlds.serenity.SerenityApplication.getPlexMediaServers().remove(friendlyName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8738/buggy-version/serenity-app.src.main.java.us.nineworlds.serenity.ui.listeners.BrowseRegistryListener.java", "BodyUseAPI": ["us.nineworlds.serenity.SerenityApplication.getPlexMediaServers().remove(java.lang.String)"], "Fixed commit": "e8b02911248a0afbb261bf6a55d1764a106ac612", "Url": "https://api.github.com/repos/kingargyle/serenity-android", "Date": "2013-05-06T14:32:21Z"},
{"Line": "=>479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.board.Board.getPiece(main.board.XY)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Math.abs(oldPiece)) == 4) { if (oldPiece > 0) { if (whiteKingCastle) { if ((b.x) == 7) { whiteKingCastle = false; } } if (whiteQueenCastle) { if ((b.x) == 0) { whiteQueenCastle = false; } } }else { if (blackKingCastle) { if ((b.x) == 7) { whiteKingCastle = false; } } if (blackQueenCastle) { if ((b.x) == 0) { blackQueenCastle = false; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8742/buggy-version/src.main.board.Board.java", "BodyUseAPI": [], "Fixed commit": "c6244111944596c1270bf97729d688c39564d219", "Url": "https://api.github.com/repos/bradleymoore111/chess-engine", "Date": "2015-08-10T13:31:30Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (FinancialConstants.STANDARD_EXPENDITURETYPE_CONTINGENT.equals(egBillregister.getExpendituretype())) savedEgBillregister.setStatus(financialUtils.getStatusByModuleAndCode(FinancialConstants.CONTINGENCYBILL_FIN, FinancialConstants.CONTINGENCYBILL_APPROVED_STATUS));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8069/buggy-version/egov.egov-egf.src.main.java.org.egov.egf.expensebill.service.ExpenseBillService.java", "BodyUseAPI": [], "Fixed commit": "31539e8696193b6eaa93637a93d9bf0bff1408c8", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2017-02-22T13:50:40Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(carbonUtils.publishWebApp(publisher, org.wso2.developerstudio.eclipse.carbonserver44.operations.ServiceModuleOperations.CARBONSERVER_PUBLISHER_EXTENSION_ID, org.wso2.developerstudio.eclipse.carbonserver44.operations.ServiceModuleOperations.WEBAPP_PROJECT_PUBLISHER44_ID, resource, resourceChngeKind, project, server))) { publisher.hotUpdate(project, server, null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5280/buggy-version/plugins.org.wso2.developerstudio.eclipse.carbonserver44.src.org.wso2.developerstudio.eclipse.carbonserver44.operations.ServiceModuleOperations.java", "BodyUseAPI": ["org.wso2.developerstudio.eclipse.carbonserver.base.interfaces.ICarbonServerModulePublisher.hotUpdate(org.eclipse.core.resources.IProject,org.eclipse.wst.server.core.IServer,<nulltype>,<nulltype>)"], "Fixed commit": "103067ae1a6a750ab7874c80dac6acf1aa67a8af", "Url": "https://api.github.com/repos/wso2/devstudio-tooling-platform", "Date": "2016-04-22T05:25:46Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((exception) != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3720/buggy-version/ion.src.com.koushikdutta.ion.IonDrawable.java", "BodyUseAPI": [], "Fixed commit": "3b4c28d5565f99b1671591f2dee3046b66aa1b14", "Url": "https://api.github.com/repos/koush/ion", "Date": "2014-11-21T05:43:42Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((placeholderResource) != 0) return resources.getDrawable(placeholderResource);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3720/buggy-version/ion.src.com.koushikdutta.ion.IonDrawable.java", "BodyUseAPI": [], "Fixed commit": "3b4c28d5565f99b1671591f2dee3046b66aa1b14", "Url": "https://api.github.com/repos/koush/ion", "Date": "2014-11-21T05:43:42Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.amazon.fba.indexlog.loghandlers.LineLogHandlerImplV2.getRequestIdForLine(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (requestIdsToFind.contains(requestId)) { lineBuilder.field(\"fatal\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5781/buggy-version/java.index-log.src.main.java.com.amazon.fba.indexlog.loghandlers.LineLogHandlerImplV2.java", "BodyUseAPI": [], "Fixed commit": "dc2e3bd660a897abad9ad5c069941be0ba0c3ae6", "Url": "https://api.github.com/repos/wxyBUPT/internTaskV2", "Date": "2017-08-24T11:02:31Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState == null) { android.os.Bundle extras = getIntent().getExtras(); if (extras == null) { mEmail = null; }else { mEmail = extras.getString(\"mEmail\"); } }else { mEmail = ((java.lang.String) (savedInstanceState.getSerializable(\"mEmail\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7439/buggy-version/app.src.main.java.com.jexapps.bloodhub.EmergencyRequestActivity.java", "BodyUseAPI": ["android.os.Bundle.getSerializable(java.lang.String)"], "Fixed commit": "05e4018184dda955b14bc365b3d8df7c3043e6e4", "Url": "https://api.github.com/repos/kazijehangir/BloodHub", "Date": "2016-11-26T00:00:24Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((outputTexture) != null) { outputTexture.setDefaultBufferSize(width, height); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3434/buggy-version/library.src.jp.co.cyberagent.android.gpuimage.GPUImageTextureRenderer.java", "BodyUseAPI": [], "Fixed commit": "ba382c28109a70b7e1d1b65605ff812ca2ceb3ef", "Url": "https://api.github.com/repos/skonb/android-gpuimage", "Date": "2016-03-10T13:47:14Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((width != (mImageWidth)) || (height != (mImageHeight))) { mImageWidth = width; mImageHeight = height; frameBufferPrepared = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3434/buggy-version/library.src.jp.co.cyberagent.android.gpuimage.GPUImageTextureRenderer.java", "BodyUseAPI": [], "Fixed commit": "ba382c28109a70b7e1d1b65605ff812ca2ceb3ef", "Url": "https://api.github.com/repos/skonb/android-gpuimage", "Date": "2016-03-10T13:47:14Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mImageHeight) != 0) && ((mImageWidth) != 0)) { outputTexture.setDefaultBufferSize(mImageWidth, mImageHeight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3434/buggy-version/library.src.jp.co.cyberagent.android.gpuimage.GPUImageTextureRenderer.java", "BodyUseAPI": [], "Fixed commit": "ba382c28109a70b7e1d1b65605ff812ca2ceb3ef", "Url": "https://api.github.com/repos/skonb/android-gpuimage", "Date": "2016-03-10T13:47:14Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (game.isClientsTurn()) { game.setClientBegins(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8635/buggy-version/src.main.java.GameModule.java", "BodyUseAPI": ["Game.setClientBegins(boolean)"], "Fixed commit": "47324784f7f6cd9898d9a111e363f0608c90904b", "Url": "https://api.github.com/repos/tieskedh/othello", "Date": "2016-04-04T14:15:09Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPlayer) == 1) { setClientTurn(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8635/buggy-version/src.main.java.Game.java", "BodyUseAPI": [], "Fixed commit": "47324784f7f6cd9898d9a111e363f0608c90904b", "Url": "https://api.github.com/repos/tieskedh/othello", "Date": "2016-04-04T14:15:09Z"},
{"Line": "=>5792", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (updateMatches) { setCurrentRecord(exportedRecord, recNum); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/9063/buggy-version/src.edu.ku.brc.specify.tasks.subpane.wb.wbuploader.UploadTable.java", "BodyUseAPI": [], "Fixed commit": "ff6ccb5e663e8391cca2506b941453618c6c7269", "Url": "https://api.github.com/repos/specify/specify6", "Date": "2017-12-14T17:26:52Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((graphFragment) != null) { graphFragment.chronometer.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4564/buggy-version/app.src.main.java.com.phucphuong.noisesearch.Fragments.MeterFragment.java", "BodyUseAPI": [], "Fixed commit": "8bb6f2a0f398315ea805f37dbc9e031d131489b7", "Url": "https://api.github.com/repos/PP08/NoiseSearch", "Date": "2017-05-12T09:26:09Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((graphFragment) != null) { graphFragment.startChronometer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4564/buggy-version/app.src.main.java.com.phucphuong.noisesearch.Fragments.MeterFragment.java", "BodyUseAPI": [], "Fixed commit": "8bb6f2a0f398315ea805f37dbc9e031d131489b7", "Url": "https://api.github.com/repos/PP08/NoiseSearch", "Date": "2017-05-12T09:26:09Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sk89q.craftbook.bukkit.VehiclesPlugin.CraftBookVehicleListener.getLocalConfiguration()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((config.minecartOffRailSpeedModifier) > 0) minecart.setDerailedVelocityMod(new org.bukkit.util.Vector(config.minecartOffRailSpeedModifier, config.minecartOffRailSpeedModifier, config.minecartOffRailSpeedModifier));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7600/buggy-version/vehicles.src.main.java.com.sk89q.craftbook.bukkit.VehiclesPlugin.java", "BodyUseAPI": ["org.bukkit.entity.Minecart.setDerailedVelocityMod(org.bukkit.util.Vector)"], "Fixed commit": "b7b2bd3e4dc274a7b461a217db4fc597aeb263b8", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2012-12-11T23:58:06Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (backSpaceKeyEnabled != null) { this.backSpaceKeyEnabled = backSpaceKeyEnabled; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3262/buggy-version/src.com.valkryst.VTerminal.builder.component.TextAreaBuilder.java", "BodyUseAPI": [], "Fixed commit": "dee0c239e1985cf08e534d01baa5de812722a874", "Url": "https://api.github.com/repos/Valkryst/VTerminal", "Date": "2017-08-25T17:43:18Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((graphType) == (de.unima.dws.dbpediagraph.graph.GraphType.UNDIRECTED_GRAPH)) score /= 2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8138/buggy-version/src.main.java.de.unima.dws.dbpediagraph.disambiguate.local.BetweennessCentrality.java", "BodyUseAPI": [], "Fixed commit": "26e4943a8fd82a1962afdb256315c9519f48ae59", "Url": "https://api.github.com/repos/bernhardschaefer/dbpedia-graph", "Date": "2014-04-14T09:25:56Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof com.github.invictum.dto.AbstractDto) { return value.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3606/buggy-version/src.main.java.com.github.invictum.dto.AbstractDto.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "6edf81488e525b23c2a55f9e94fb6a29ffff3c48", "Url": "https://api.github.com/repos/Invictum/invictum-test", "Date": "2016-09-04T14:19:15Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof java.lang.Double) { return java.lang.Double.toString(((java.lang.Double) (value))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3606/buggy-version/src.main.java.com.github.invictum.dto.AbstractDto.java", "BodyUseAPI": [], "Fixed commit": "6edf81488e525b23c2a55f9e94fb6a29ffff3c48", "Url": "https://api.github.com/repos/Invictum/invictum-test", "Date": "2016-09-04T14:19:15Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(new java.io.File(dir, name).isDirectory())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3699/buggy-version/dspace.src.main.edu.georgetown.library.fileAnalyzer.importer.IngestFolderCreate.java", "BodyUseAPI": [], "Fixed commit": "3709885243469e952d7160e42f7c4d6940bb50ea", "Url": "https://api.github.com/repos/Georgetown-University-Libraries/File-Analyzer", "Date": "2015-05-07T22:32:23Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sourceforge.fenixedu.presentationTier.Action.publico.candidacies.GenericCandidaciesDA.getFromRequest(javax.servlet.http.HttpServletRequest,java.lang.String)", "net.sourceforge.fenixedu.presentationTier.Action.publico.candidacies.GenericCandidaciesDA.getDomainObject(javax.servlet.http.HttpServletRequest,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((period != null) && (email != null)) { final net.sourceforge.fenixedu.domain.candidacy.GenericApplication application = period.createApplication(email); request.setAttribute(\"sentEmailForApplication\", application); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5158/buggy-version/src.main.java.net.sourceforge.fenixedu.presentationTier.Action.publico.candidacies.GenericCandidaciesDA.java", "BodyUseAPI": ["net.sourceforge.fenixedu.domain.period.GenericApplicationPeriod.createApplication(java.lang.String)"], "Fixed commit": "19861ff32a60036d31986a3325805e49a4645fce", "Url": "https://api.github.com/repos/ist-dsi/fenix", "Date": "2013-08-27T11:34:54Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.fizteh.fivt.students.ZatsepinMikhail.shell.PathsFunction.toAbsolutePathString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.nio.file.Files.exists(destinationPath)) { destinationPath = destinationPath.resolve(startPath.getFileName()).normalize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1150/buggy-version/src.ru.fizteh.fivt.students.ZatsepinMikhail.shell.CommandCp.java", "BodyUseAPI": [], "Fixed commit": "4df545de9cbae451d9cb7003614c32a393f56547", "Url": "https://api.github.com/repos/ZatsepinMikhail/fizteh-java-2014", "Date": "2014-10-07T21:02:11Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((beacon.getMajor()) == null) || ((beacon.getMinor()) == null)) { tx.success(); tx.close(); com.pervasive.rest.UserController.log.info(((\"Called /user/\" + userId) + \"/beacon resource. This beacon major and minor are not registered in the database, returning false\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/377/buggy-version/SmartTeamTracking.src.main.java.com.pervasive.rest.UserController.java", "BodyUseAPI": [], "Fixed commit": "0de77ce720c61b1bba7a694945f9d12e0a8b9771", "Url": "https://api.github.com/repos/biagiobotticelli/SmartTeamTrackingServer", "Date": "2016-05-17T12:48:50Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.clyze.doop.soot.FactGenerator.phantomBased(m)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5761/buggy-version/src.main.java.org.clyze.doop.soot.JimpleCodePrinter.java", "BodyUseAPI": [], "Fixed commit": "6e3af18e9ebd5f4554e0226be4f1f2447860c480", "Url": "https://api.github.com/repos/plast-lab/doop-mirror", "Date": "2017-01-16T17:36:34Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < 2) { dp[i] = (dp[(i - 1)]) + 1; }else { dp[i] = (dp[(i - 1)]) + (dp[(i - 2)]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8887/buggy-version/src.com.leetcode.www.DecodeWays.java", "BodyUseAPI": [], "Fixed commit": "124bb2745cbb3560858e7151c233a3a752f21997", "Url": "https://api.github.com/repos/yao23/Java_Playground", "Date": "2017-08-11T06:30:20Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.florian.p2p_lender.PersistOffers.getOfferList()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((offers.size()) == 0) { java.lang.CharSequence text = \"You have no Investments\"; int duration = android.widget.Toast.LENGTH_SHORT; android.widget.Toast toast = android.widget.Toast.makeText(ctx, text, duration); toast.show(); return; }else if ((offers.get(i).getInvestor()) == null) { offers.remove(offers.get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3008/buggy-version/app.src.main.java.com.example.florian.p2p_lender.MyPocket.java", "BodyUseAPI": ["java.util.ArrayList<com.example.florian.p2p_lender.Offer>.get(int)", "java.util.ArrayList<com.example.florian.p2p_lender.Offer>.get(int)", "java.util.ArrayList<com.example.florian.p2p_lender.Offer>.remove(offers.get(i))", "offers.get(i).getInvestor()"], "Fixed commit": "8d7b74f864bfe103df314ba242f301a4ca7aa7a6", "Url": "https://api.github.com/repos/Flubens1/P2P-Lender", "Date": "2017-06-06T10:38:47Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ent == null) || (!(ent.isValid()))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6114/buggy-version/src.main.java.com.sk89q.craftbook.mechanics.BetterLeads.java", "BodyUseAPI": [], "Fixed commit": "3d55c04a395ed2382f80c2616e7f7baaaf453601", "Url": "https://api.github.com/repos/EngineHub/CraftBook", "Date": "2015-01-21T22:34:09Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.Account.getAccount(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (account != null) { java.lang.String hashPass = Utils.Password.hashPasword(password, account.getSalt()); return models.Account.find.where().eq(\"email\", email.toLowerCase()).eq(\"password\", hashPass).findUnique(); }else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2391/buggy-version/app.models.Account.java", "BodyUseAPI": ["models.Account.getSalt()", "Utils.Password.hashPasword(java.lang.String,java.lang.String)"], "Fixed commit": "21194e4f78433a0ef0105647a9331024f72a5670", "Url": "https://api.github.com/repos/caiyo/financetracker", "Date": "2014-05-09T02:56:33Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((prefix != null) && (input.getKey().startsWith(prefix))) || ((suffix != null) && (input.getKey().endsWith(suffix)))) { return input.getKey(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1246/buggy-version/src.main.java.org.atlasapi.s3.DefaultS3Client.java", "BodyUseAPI": ["org.jets3t.service.model.S3Object.getKey()"], "Fixed commit": "4936ce2e776ef6b2597ee6d14d9cbd47b1674620", "Url": "https://api.github.com/repos/atlasapi/atlas", "Date": "2012-06-14T17:27:48Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selected.endsWith(\"\\\"\")) { selected = (selected.substring(0, ((selected.length()) - 2))) + \".\"; }else { selected = selected.substring(0, ((selected.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8303/buggy-version/src.main.java.sibbo.cahrs.CAHRS.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "024d22239ea21c8ae28594aca77cb688506758e2", "Url": "https://api.github.com/repos/ISibboI/Cards-Against-Humanity-random-selector", "Date": "2013-08-25T20:35:09Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dest.getParentFile().exists())) dest.getParentFile().mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3863/buggy-version/src.com.flipturnapps.bukkitguigit.GitFrame.java", "BodyUseAPI": ["java.io.File.getParentFile()", "java.io.File.mkdirs()"], "Fixed commit": "68116838c8bacf2c91530981ab3f63ab772980ad", "Url": "https://api.github.com/repos/kkevlar/RunBukkit", "Date": "2017-05-08T17:54:24Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.active) == null) this.active = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5933/buggy-version/src.main.java.VRAPI.JSONContainerOrganisation.JSONContact.java", "BodyUseAPI": [], "Fixed commit": "0dda1bc989fb5db6b83efbfa0855339374902770", "Url": "https://api.github.com/repos/sabuzuhlke/VRAPI", "Date": "2016-07-04T10:45:52Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stareStartTime) < 0) { stareStartTime = thesis.core.common.SimTime.getCurrentSimTimeMS(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4449/buggy-version/thesis_core.src.main.java.thesis.core.uav.logic.MonitorTask.java", "BodyUseAPI": [], "Fixed commit": "0aaa7a08016bbfd0fa6483c39b21242adcaded9e", "Url": "https://api.github.com/repos/tansir1/thesis", "Date": "2016-10-24T18:35:49Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataset.getNumberOfExamples()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/24/buggy-version/src.main.java.it.uniroma2.sag.kelp.learningalgorithm.classification.dcd.DCDLearningAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "b2b0b7eaf6cfedcc0150e1b64b50614cdecd848a", "Url": "https://api.github.com/repos/SAG-KeLP/kelp-additional-algorithms", "Date": "2016-03-08T19:30:55Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.onyxbits.scenepainter.gui.SceneTracker.getActiveScene()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((esc.isDirty()) && ((java.lang.System.getProperty(\"DEV\")) == null)) { int i = javax.swing.JOptionPane.showInternalConfirmDialog(systemManager.getCenterComponent(), de.onyxbits.scenepainter.util.Tr.t(\"message\"), de.onyxbits.scenepainter.util.Tr.t(\"title\"), javax.swing.JOptionPane.YES_NO_OPTION); if (i == (javax.swing.JOptionPane.NO_OPTION)) return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7515/buggy-version/src.main.java.de.onyxbits.scenepainter.gui.CloseAction.java", "BodyUseAPI": [], "Fixed commit": "9d8edafe1c192a824b4e3899a2c35eec6aac57fd", "Url": "https://api.github.com/repos/onyxbits/ScenePainter", "Date": "2011-03-30T11:15:41Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (filterQueryDdl) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3067/buggy-version/parse.src.main.java.com.alibaba.otter.canal.parse.inbound.mysql.dbsync.LogEventConvert.java", "BodyUseAPI": [], "Fixed commit": "0a3d974e7357d0ea064e4d4dc646498abb8684e9", "Url": "https://api.github.com/repos/alibaba/canal", "Date": "2013-10-17T05:27:13Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (me.johnnywoof.Setting.debug) { org.bukkit.Bukkit.broadcastMessage((\"Diff: \" + diff)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7811/buggy-version/NoHack.src.me.johnnywoof.check.block.FastBreak.java", "BodyUseAPI": [], "Fixed commit": "3f166605ef9d6f0739be3fc3f4af797c07844b64", "Url": "https://api.github.com/repos/johnnywoof/NoHack", "Date": "2014-06-11T02:18:40Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.synapse.MessageContext.getConfigurationContext()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cc == null) { handleException(\"Error while retrieving ConfigurationContext from messageContext.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1828/buggy-version/components.apimgt.org.wso2.carbon.apimgt.gateway.src.main.java.org.wso2.carbon.apimgt.gateway.handlers.throttling.APIThrottleHandler.java", "BodyUseAPI": [], "Fixed commit": "bd290889fe3cfb880e28f2f3075a69c6b7d52a4e", "Url": "https://api.github.com/repos/chamilaadhi/carbon-apimgt", "Date": "2016-01-25T05:43:26Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (current_messages != null) { for (java.lang.String msg : current_messages) { msg_board.append((msg + \"\\n\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4534/buggy-version/src.com.phinmadvader.andcpp.MessageBoardFragment.java", "BodyUseAPI": [], "Fixed commit": "bb5ba34dbf6572555c19dba2cf830b62226067ff", "Url": "https://api.github.com/repos/jujojujo2003/AnDCpp", "Date": "2014-02-22T11:18:12Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mainActivity) != null) && (mainActivity.mBound)) current_messages = mainActivity.mService.get_board_messages();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4534/buggy-version/src.com.phinmadvader.andcpp.MessageBoardFragment.java", "BodyUseAPI": ["mainActivity.mService.get_board_messages()"], "Fixed commit": "bb5ba34dbf6572555c19dba2cf830b62226067ff", "Url": "https://api.github.com/repos/jujojujo2003/AnDCpp", "Date": "2014-02-22T11:18:12Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dir.exists()) { if (dir.canRead()) { if (dir.isDirectory()) { return new java.io.FileInputStream((((dir.getAbsolutePath()) + \"/\") + path)); }else { me.legrange.panstamp.xml.FileLibrary.log.warning(java.lang.String.format(\"'%s' is not a directory.\", dir.getAbsolutePath())); } }else { me.legrange.panstamp.xml.FileLibrary.log.warning(java.lang.String.format(\"Directory '%s' is not readable.\", dir.getAbsolutePath())); } }else { me.legrange.panstamp.xml.FileLibrary.log.warning(java.lang.String.format(\"Directory '%s' does not exist.\", dir.getAbsolutePath())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1081/buggy-version/src.main.java.me.legrange.panstamp.xml.FileLibrary.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "java.util.logging.Logger.warning(java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String)", "java.io.File.canRead()", "java.util.logging.Logger.warning(java.lang.String)", "java.io.File.getAbsolutePath()", "java.lang.String.format(java.lang.String,java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String)", "java.io.File.isDirectory()", "java.io.File.getAbsolutePath()", "java.io.File.getAbsolutePath()", "java.util.logging.Logger.warning(java.lang.String)"], "Fixed commit": "263dceb127e4022595a8402e51e90ce6b4e92e21", "Url": "https://api.github.com/repos/GideonLeGrange/panstamp-java", "Date": "2015-09-02T20:15:19Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.legrange.panstamp.xml.XmlParser.makeStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (in == null) { throw new me.legrange.panstamp.xml.ParseException(java.lang.String.format(\"Could not access file '%s'.\", fileName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1081/buggy-version/src.main.java.me.legrange.panstamp.xml.XmlParser.java", "BodyUseAPI": [], "Fixed commit": "263dceb127e4022595a8402e51e90ce6b4e92e21", "Url": "https://api.github.com/repos/GideonLeGrange/panstamp-java", "Date": "2015-09-02T20:15:19Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.growing.pains.service.blog.BlogService.getLastBlog()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (lastBlog != null) { lastTime = org.apache.commons.lang3.time.DateFormatUtils.format(blogService.getLastBlog().getCreateTime(), \"yyyy-MM-dd\"); }else { lastTime = \"0000-00-00\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7933/buggy-version/growing-pains-web.src.main.java.com.growing.pains.main.web.controller.blog.IndexController.java", "BodyUseAPI": [], "Fixed commit": "f179de8c75389c72f490902f679622bb383d25b0", "Url": "https://api.github.com/repos/miaoxing-tech/growing-pains", "Date": "2016-08-13T19:38:25Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((io.github.skepter.devrantwear.MainActivityPhone.googleApiClient) == null) { android.content.Intent intent = new android.content.Intent(this, io.github.skepter.devrantwear.MainActivityPhone.class); intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7281/buggy-version/mobile.src.main.java.io.github.skepter.devrantwear.ListenerServiceFromWear.java", "BodyUseAPI": [], "Fixed commit": "09f7a5d924d2b7a6de1d04ada2ff0e9e4bfdb33c", "Url": "https://api.github.com/repos/JorelAli/DevRantWear", "Date": "2017-01-30T17:51:06Z"},
{"Line": "=>1952", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (publication.isIndexable()) { kmelia.getPublicationBm().createIndex(publication.getPK()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8275/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.servlets.KmeliaRequestRouter.java", "BodyUseAPI": ["kmelia.getPublicationBm().createIndex(publication.getPK())", "com.stratelia.webactiv.util.publication.model.PublicationDetail.getPK()"], "Fixed commit": "7b0c7a51f0fcdbb175ab5a9a6c3c6465afa028f1", "Url": "https://api.github.com/repos/mmoqui/Silverpeas-Components", "Date": "2011-08-01T13:27:05Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getBirthday()) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1275/buggy-version/src.main.java.cinemadating.model.Person.java", "BodyUseAPI": [], "Fixed commit": "faba3fdcabd83481c9e29d59eb4b4c18e300c4f5", "Url": "https://api.github.com/repos/malabyan/cd-github", "Date": "2017-09-27T19:36:25Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDrawer) != null) { int lockMode = (enabled) ? android.support.v4.widget.DrawerLayout.LOCK_MODE_UNLOCKED : android.support.v4.widget.DrawerLayout.LOCK_MODE_LOCKED_CLOSED; mDrawer.setDrawerLockMode(lockMode); drawerToggle.setDrawerIndicatorEnabled(enabled); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/40/buggy-version/app.src.main.java.ru.surf.course.movierecommendations.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "98e4f9a84c9f6592889a32eb7c79ea3e3a2fb21d", "Url": "https://api.github.com/repos/pechorka/Movie-Recommendations", "Date": "2017-02-11T14:29:27Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Lists.newArrayList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((bets.size()) == (getNumRemainingPlayersInRound())) && ((com.google.common.collect.Sets.newHashSet(bets).size()) == 1)) { if (((getNumRemainingPlayersInRound()) - numAllin) <= 1) { round = com.swandev.poker.PokerGameScreen.PokerRound.RIVER; pokerGameScreen.uiForDrawCards(round); } shouldAdvance = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7827/buggy-version/poker-game.core.src.com.swandev.poker.PokerTable.java", "BodyUseAPI": [], "Fixed commit": "548b272cff2ec43c382aa1965f9664eb4d89f21e", "Url": "https://api.github.com/repos/newmanne/swanboxlibgdx", "Date": "2014-03-18T04:14:43Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Lists.newArrayList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((i == ((tierList.size()) - 1)) && (j == ((tierList.get(i).size()) - 1))) { }else if (!(winners.contains(stillIn.get(k)))) { winners.add(stillIn.get(k)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7827/buggy-version/poker-game.core.src.com.swandev.poker.PokerPot.java", "BodyUseAPI": [], "Fixed commit": "548b272cff2ec43c382aa1965f9664eb4d89f21e", "Url": "https://api.github.com/repos/newmanne/swanboxlibgdx", "Date": "2014-03-18T04:14:43Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.webobjects.eocontrol.EOFetchSpecification.fetchLimit()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (limit > (availableObjects.size())) { limit = availableObjects.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6724/buggy-version/src.main.java.com.wounit.rules.MockEditingContext.java", "BodyUseAPI": ["com.webobjects.foundation.NSArray<com.webobjects.eocontrol.EOEnterpriseObject>.size()"], "Fixed commit": "86ea6af84010fa9297637477aea20709ffb0359b", "Url": "https://api.github.com/repos/hprange/wounit", "Date": "2011-06-19T22:06:44Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cz.cuni.mff.d3s.jdeeco.ensembles.intelligent.z3.Extensions.hasDataContractBoundId(assignmentMatrix.getEnsembleDefinition())) { try { return idMapping.getFieldExpression(ctx, ensembleIndex, query.getPath()); } catch (java.lang.Exception e) { } }else { return ctx.mkInt(assignmentMatrix.getEnsembleIndex()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8568/buggy-version/jdeeco-ensembles-intelligent-z3.src.cz.cuni.mff.d3s.jdeeco.ensembles.intelligent.z3.ConstraintParser.java", "BodyUseAPI": ["com.microsoft.z3.Context.mkInt(assignmentMatrix.getEnsembleIndex())", "cz.cuni.mff.d3s.jdeeco.ensembles.intelligent.z3.EnsembleRoleAssignmentMatrix.getEnsembleIndex()"], "Fixed commit": "12bf85afbde25ce837ca63fed3379b7b380e6748", "Url": "https://api.github.com/repos/d3scomp/JDEECo", "Date": "2016-06-30T14:36:19Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (totalProvCap >= (com.emc.storageos.volumecontroller.impl.plugins.IsilonCommunicationInterface.MB_IN_BYTES)) { totalProvCap = totalProvCap / (com.emc.storageos.volumecontroller.impl.plugins.IsilonCommunicationInterface.MB_IN_BYTES); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2079/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.plugins.IsilonCommunicationInterface.java", "BodyUseAPI": [], "Fixed commit": "e7978a64a632d66cace2b070b031f997df7c372c", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-11-17T11:59:39Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (prefix)) { return java.util.Arrays.asList(string.substring(prefix.length()).split(delimiter)); }else { return java.util.Arrays.asList(string.split(delimiter)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5893/buggy-version/src.main.java.net.joelinn.quartz.jobstore.RedisJobStoreSchema.java", "BodyUseAPI": [], "Fixed commit": "60359a93711b45419e5d462bf8f37183dc1d37f5", "Url": "https://api.github.com/repos/jlinn/quartz-redis-jobstore", "Date": "2016-05-05T01:33:16Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bw.length()) > 0) bw.deleteCharAt(((bw.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8000/buggy-version/src.edu.kit.cloudSimStorage.monitoring.report.CSVGenerator.java", "BodyUseAPI": ["java.lang.StringBuilder.length()", "java.lang.StringBuilder.deleteCharAt(int)"], "Fixed commit": "f94e05d8c909ea031b995be7bafccc49818c8ee4", "Url": "https://api.github.com/repos/toebbel/StorageCloudSim", "Date": "2014-10-20T11:20:23Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((subsets) == null) this.subsets = assembleAllViewPairs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/387/buggy-version/src.main.java.spim.process.interestpointregistration.optimizationtypes.GlobalOptimizationType.java", "BodyUseAPI": [], "Fixed commit": "fd27de22bc9c2e82165026454fb9ae5a4c3a12ac", "Url": "https://api.github.com/repos/fiji/SPIM_Registration", "Date": "2015-02-03T14:59:36Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((account.getStatus()) == (eu.siacs.conversations.entities.Account.STATUS_NO_INTERNET)) { account.setStatus(Account.STATUS_OFFLINE); if ((statusListener) != null) { statusListener.onStatusChanged(account); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/60/buggy-version/src.eu.siacs.conversations.services.XmppConnectionService.java", "BodyUseAPI": ["eu.siacs.conversations.xmpp.OnStatusChanged.onStatusChanged(eu.siacs.conversations.entities.Account)", "eu.siacs.conversations.entities.Account.setStatus(Account.STATUS_OFFLINE)"], "Fixed commit": "11a8a747e37cc643d19855271ede5a9ad752f71d", "Url": "https://api.github.com/repos/siacs/Conversations", "Date": "2014-03-11T15:49:42Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((statusListener) != null) { statusListener.onStatusChanged(account); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/60/buggy-version/src.eu.siacs.conversations.services.XmppConnectionService.java", "BodyUseAPI": [], "Fixed commit": "11a8a747e37cc643d19855271ede5a9ad752f71d", "Url": "https://api.github.com/repos/siacs/Conversations", "Date": "2014-03-11T15:49:42Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.verapdf.pd.font.cff.Type2CharStringParser.getWidthFromSubroutine(globalSubrs.get((subrNum + (gBias))))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (subrWidth != null) { this.setWidth(subrWidth); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7696/buggy-version/src.main.java.org.verapdf.pd.font.cff.Type2CharStringParser.java", "BodyUseAPI": ["org.verapdf.pd.font.cff.Type2CharStringParser.setWidth(org.verapdf.pd.font.CFFNumber)"], "Fixed commit": "7244d0c2a2ba8f43ed2da4e2f2ceb7be2a29a358", "Url": "https://api.github.com/repos/shem-sergey/veraPDF-pdflib", "Date": "2017-07-20T15:54:40Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parser.getWidth()) != null) { return parser.getWidth(); }else { for (int i = 0; i < (parser.stack.size()); ++i) { this.stack.push(parser.stack.get(i)); } return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7696/buggy-version/src.main.java.org.verapdf.pd.font.cff.Type2CharStringParser.java", "BodyUseAPI": ["parser.stack.get(int)", "org.verapdf.pd.font.cff.Type2CharStringParser.getWidth()", "this.stack.push(parser.stack.get(i))", "parser.stack.size()"], "Fixed commit": "7244d0c2a2ba8f43ed2da4e2f2ceb7be2a29a358", "Url": "https://api.github.com/repos/shem-sergey/veraPDF-pdflib", "Date": "2017-07-20T15:54:40Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.verapdf.pd.font.cff.Type2CharStringParser.getWidthFromSubroutine(localSubrs.get((subrNum + (bias))))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (subrWidth != null) { this.setWidth(subrWidth); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7696/buggy-version/src.main.java.org.verapdf.pd.font.cff.Type2CharStringParser.java", "BodyUseAPI": ["org.verapdf.pd.font.cff.Type2CharStringParser.setWidth(org.verapdf.pd.font.CFFNumber)"], "Fixed commit": "7244d0c2a2ba8f43ed2da4e2f2ceb7be2a29a358", "Url": "https://api.github.com/repos/shem-sergey/veraPDF-pdflib", "Date": "2017-07-20T15:54:40Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (collected.contains(\"http\")) wsg.addUrl(collected); else wsg.addUrl(((nl.compra.CompraCrawler.Brain.GetTarget()) + collected));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6820/buggy-version/src.nl.compra.SiteMapGenerator.Program.java", "BodyUseAPI": [], "Fixed commit": "b4d68d7cebec0b65fc54dbbfb4080c6d83b82778", "Url": "https://api.github.com/repos/CompraBV/CompraSiteMapper", "Date": "2016-01-18T09:36:53Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(contextName.equals(null))) { context = taxonomy.getContextByName(contextName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5257/buggy-version/src.main.java.opentree.plugins.TNRS.java", "BodyUseAPI": ["opentree.Taxonomy.getContextByName(java.lang.String)"], "Fixed commit": "51069d837246d5fe868a860dab6eed8433b56303", "Url": "https://api.github.com/repos/OpenTreeOfLife/taxomachine", "Date": "2013-05-13T21:24:35Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["editor.ToolBar.getSelectedButton()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (selectedButton == null) { java.lang.System.out.println(\"was null\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2927/buggy-version/src.editor.Automat.java", "BodyUseAPI": [], "Fixed commit": "866220c2f7482c759fa77473d0777e02b7078301", "Url": "https://api.github.com/repos/RaphaelBucher/EditorForAutomata", "Date": "2016-12-12T21:12:37Z"},
{"Line": "=>571", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((allergen != null) && ((getAllergens(rname)) != null)) { if (getAllergens(rname).contains(allergen)) temp.remove(rname); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1389/buggy-version/src.recipeTool.Book.java", "BodyUseAPI": ["recipeTool.Book.getAllergens(java.lang.String)", "java.util.TreeSet<java.lang.String>.contains(java.lang.String)", "java.util.List<java.lang.String>.remove(java.lang.String)"], "Fixed commit": "a79849cda55215862b1aec8bf4ecdd5e9dc9d8e2", "Url": "https://api.github.com/repos/villesalmela/recipeTool", "Date": "2017-04-19T20:41:09Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.location.LocationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (location != null) { longitude = location.getLongitude(); latitude = location.getLatitude(); lng = java.lang.Double.toString(longitude); lat = java.lang.Double.toString(latitude); android.util.Log.v(\"Latlong1\", (((lat) + \" and \") + (lng))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2417/buggy-version/FarligGodt.app.src.main.java.com.example.android.farliggodtapp.MapsActivity.java", "BodyUseAPI": ["android.location.Location.getLatitude()", "android.location.Location.getLongitude()"], "Fixed commit": "42de5a8a3ba4129391eca784eef8d3f7962ae75f", "Url": "https://api.github.com/repos/OrangeeWeb/FarligGodt", "Date": "2016-10-06T09:30:09Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (ret != null) { java.io.File img = new java.io.File(ret); if (((id != (-1)) && (img.exists())) && ((img.length()) > 0)) { updateSt.setInt(1, id); updateSt.executeUpdate(); return ret; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6061/buggy-version/editor-dao.src.main.java.cz.mzk.editor.server.DAO.ImageResolverDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "3488865f2af9622309ecb0e93be13e7b743c5f1a", "Url": "https://api.github.com/repos/moravianlibrary/MEditor", "Date": "2012-08-01T08:13:43Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.digitizee.plugin.rhtools.handlers.ConfigHandler.flag_scp_now) == true) { com.digitizee.plugin.rhtools.handlers.ConfigHandler.flag_kill_now = true; com.digitizee.plugin.rhtools.handlers.ConfigHandler.flag_chmod = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3299/buggy-version/eclipse_plugin.com.digitizee.plugin.rhtools.src.com.digitizee.plugin.rhtools.rt.Exec.java", "BodyUseAPI": [], "Fixed commit": "0d7f7fe4bf2a562b61223f6c45189075ef34c129", "Url": "https://api.github.com/repos/uwjhn/RHTools", "Date": "2017-08-07T07:16:14Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getTime()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (date.before(today)) { java.text.SimpleDateFormat df2 = new java.text.SimpleDateFormat(\"h:mm a M/d/yy\"); dateString = df2.format(date); }else { java.text.SimpleDateFormat df2 = new java.text.SimpleDateFormat(\"h:mm a\"); dateString = df2.format(date); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/357/buggy-version/app.src.main.java.com.safrzone.safrzone.views.MapView.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(java.util.Date)", "java.text.SimpleDateFormat.format(java.util.Date)"], "Fixed commit": "69eede09cb9ec832fde291953b8a85a7e34aec7a", "Url": "https://api.github.com/repos/safrzone/safrzone-android", "Date": "2015-07-12T18:20:56Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (p_element != null) { java.util.List x_properties = p_element.getChildren(); for (java.lang.Object x_property : x_properties) { data.Element x_propertyElem = ((data.Element) (x_property)); x_settings.setProperty(x_propertyElem.getAttributeValue(XmlConstants.s_PROPERTY_NAME), x_propertyElem.getAttributeValue(XmlConstants.s_PROPERTY_VALUE)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5362/buggy-version/src.main.java.data.Loader.java", "BodyUseAPI": ["data.Element.getChildren()"], "Fixed commit": "470c57baf3999bef4d06245993dbe4553ef3ac93", "Url": "https://api.github.com/repos/talmeym/threads", "Date": "2016-06-07T11:16:28Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["BaliExpression.getExp()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (expCode == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/831/buggy-version/Assignment1.src.BaliExpression.java", "BodyUseAPI": [], "Fixed commit": "d606276612861fd670260c141cd306e971d1dd17", "Url": "https://api.github.com/repos/karimserhan/compilers", "Date": "2016-02-03T18:26:57Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["BaliExpression.getExp()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (expCode == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/831/buggy-version/Assignment1.src.BaliExpression.java", "BodyUseAPI": [], "Fixed commit": "d606276612861fd670260c141cd306e971d1dd17", "Url": "https://api.github.com/repos/karimserhan/compilers", "Date": "2016-02-03T18:26:57Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["BaliExpression.getExp()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (expression == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/831/buggy-version/Assignment1.src.BaliMethod.java", "BodyUseAPI": [], "Fixed commit": "d606276612861fd670260c141cd306e971d1dd17", "Url": "https://api.github.com/repos/karimserhan/compilers", "Date": "2016-02-03T18:26:57Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opensourcephysics.cabrillo.tracker.TFrame.getTab(org.opensourcephysics.cabrillo.tracker.TrackerPanel)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tab == (getSelectedTab())) { notesDialog.setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7722/buggy-version/src.org.opensourcephysics.cabrillo.tracker.TFrame.java", "BodyUseAPI": [], "Fixed commit": "44e96611a04639bd7a25af2f9b6359e3ae4b3f58", "Url": "https://api.github.com/repos/OpenSourcePhysics/tracker", "Date": "2016-07-15T14:52:36Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userProfile) != null) { android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper()); handler.post(new java.lang.Runnable() { @java.lang.Override public void run() { retrofit2.Call<com.android.shopr.api.reponse.GenericResponse> call = com.android.shopr.api.ShoprAPIClient.getApiInterface().check(userProfile.getEmailId(), userProfile.getAccessToken()); call.enqueue(com.android.shopr.fragments.SplashFragment.this); } }); }else { android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper()); handler.post(new java.lang.Runnable() { @java.lang.Override public void run() { ((com.android.shopr.OnBoardActivity) (getActivity())).showLoginFragment(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/112/buggy-version/app.src.main.java.com.android.shopr.fragments.SplashFragment.java", "BodyUseAPI": [], "Fixed commit": "acdc5b9d87fc4c26c2035b8a11006a4d86331400", "Url": "https://api.github.com/repos/abhinav272/Demo", "Date": "2017-01-15T05:24:58Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentlySelectedPod) != (-1)) && ((currentlySelectedPod) < (this.numberOfPods))) { setCurrentlySelectedPod(currentlySelectedPod); }else { setCurrentlySelectedPod(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2953/buggy-version/library.src.main.java.com.bhargavms.podslider.PodSlider.java", "BodyUseAPI": [], "Fixed commit": "3fa90a40b8fda7fa283c7359049baf9b159d555b", "Url": "https://api.github.com/repos/bhargavms/PodSLider", "Date": "2016-07-18T18:01:37Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((edu.rpi.phil.legup.Legup.getInstance().getGui().getBoard()) instanceof edu.rpi.phil.legup.newgui.CaseRuleSelectionHelper)) { crsh.temporarilyReplaceBoard(edu.rpi.phil.legup.Legup.getInstance().getGui(), this); new java.lang.Thread(new java.lang.Runnable() { public void run() { crsh.blockUntilSelectionMade(); java.lang.System.out.println(\"unblocked\"); if (!(doCaseRuleAutogen(crsh.pointSelected, cur, button))) { } } }).start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3638/buggy-version/code.edu.rpi.phil.legup.newgui.CasePanel.java", "BodyUseAPI": [], "Fixed commit": "7cf076297cfa4f04fe33bede5ad1bd006081195a", "Url": "https://api.github.com/repos/Bram28/LEGUP", "Date": "2014-09-11T19:36:47Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count > 1) { long timePassed = (java.lang.System.currentTimeMillis()) - startTime; long averageDuration = timePassed / count; int estimatedSecondsLeft = ((int) (((gameTotal - count) * averageDuration) / 1000)); console.ConsoleColor.printOrange((\" Estimated seconds left: \" + estimatedSecondsLeft)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4077/buggy-version/src.console.ChessPlayground.java", "BodyUseAPI": [], "Fixed commit": "6b25cca71ff946f2b930587d8e0159a702d19aa7", "Url": "https://api.github.com/repos/Zulban/chess-playground", "Date": "2017-04-07T08:32:56Z"},
{"Line": "=>759", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((yconnector) != null) { yconnector.disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2335/buggy-version/yamcs-core.src.main.java.org.yamcs.ui.packetviewer.PacketViewer.java", "BodyUseAPI": [], "Fixed commit": "38e368fef322f6ef4b8779e582fb70b200ebf87f", "Url": "https://api.github.com/repos/m-sc/yamcs", "Date": "2016-06-09T12:02:21Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (additionalPackagingTypes == null) { this.additionalPackagingTypes = java.util.Collections.emptyMap(); }else { this.additionalPackagingTypes = additionalPackagingTypes; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7080/buggy-version/modules.xcode-maven-plugin.src.main.java.com.sap.prd.mobile.ios.mios.XCodePrepareBuildManager.java", "BodyUseAPI": [], "Fixed commit": "af553aa0a530079cf43a058e2154ff3ba6332c26", "Url": "https://api.github.com/repos/marcusholl/xcode-maven-plugin", "Date": "2013-05-06T08:35:19Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sportify.profile.activity.ProfileView.getDateOfBirth()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (dateOfBirth.isEmpty()) { profileView.showDateOfBirthEmptyError(R.string.dateOfBirth_Empty_error); }else if ((!(dateOfBirth.isEmpty())) && (!(validDateFormat(dateOfBirth)))) { profileView.showDateOfBirthWrongFormatError(R.string.dateOfBirth_wrongFormat_error); }else if (interests.isEmpty()) { profileView.showNoInterestCheckedError(R.string.interests_Empty_Error); }else { org.json.JSONObject jsonObject = new org.json.JSONObject(); android.util.Log.d(com.sportify.profile.presenter.ProfilePresenterImpl.TAG, (\"profileID: \" + userID)); android.util.Log.d(com.sportify.profile.presenter.ProfilePresenterImpl.TAG, (\"firstName: \" + firstname)); android.util.Log.d(com.sportify.profile.presenter.ProfilePresenterImpl.TAG, (\"lastName: \" + lastname)); android.util.Log.d(com.sportify.profile.presenter.ProfilePresenterImpl.TAG, (\"dateOfBirth: \" + dateOfBirth)); android.util.Log.d(com.sportify.profile.presenter.ProfilePresenterImpl.TAG, (\"userBio: \" + userBio)); android.util.Log.d(com.sportify.profile.presenter.ProfilePresenterImpl.TAG, (\"interests: \" + interests)); android.util.Log.d(com.sportify.profile.presenter.ProfilePresenterImpl.TAG, (\"imageBase64: \" + imageBase64)); try { jsonObject.put(\"profileID\", userID); jsonObject.put(\"firstName\", firstname); jsonObject.put(\"lastName\", lastname); jsonObject.put(\"dateOfBirth\", dateOfBirth); jsonObject.put(\"userBio\", userBio); jsonObject.put(\"interests\", interests); jsonObject.put(\"imageBase64\", imageBase64); } catch (org.json.JSONException e) { e.printStackTrace(); } profileView.showProgressDialog(); profileRequest.makeApiRequest(jsonObject.toString(), \"https://pvt15app.herokuapp.com/api/updateProfileInfo\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/409/buggy-version/app.src.main.java.com.sportify.profile.presenter.ProfilePresenterImpl.java", "BodyUseAPI": ["com.sportify.profile.presenter.ProfilePresenterImpl.validDateFormat(java.lang.String)", "org.json.JSONObject.put(java.lang.String,java.lang.String)", "java.lang.String.isEmpty()", "android.util.Log.d(java.lang.String,java.lang.String)"], "Fixed commit": "c51ba9e569f915ff2612d18f3948f88256e4aa93", "Url": "https://api.github.com/repos/Fluchey/PVT_SportApp", "Date": "2017-05-19T09:01:42Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userSegmentIds == null) || ((userSegmentIds.length) == 0)) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7962/buggy-version/shared.content-targeting-core.src.com.liferay.contenttargeting.service.persistence.CampaignFinderImpl.java", "BodyUseAPI": [], "Fixed commit": "5792603b6430200afcd381af1edfc4d1557fd76b", "Url": "https://api.github.com/repos/juliocamarero/temp-wcm-plugins", "Date": "2014-05-30T10:10:50Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pluginDir.exists()) == false) pluginDir.mkdir();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6944/buggy-version/src.main.java.ijfx.ui.main.ImageJFX.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "d0aa8a9ca4a50a113982d27edaff14735edb1959", "Url": "https://api.github.com/repos/cmongis/imagejfx", "Date": "2016-10-05T07:17:36Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["crawl.CrawlStatusFromOneBug.crawlOneBug(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (bugStatus != null) { buginfoService.updateStatus(java.lang.Integer.valueOf(id), bugId, bugStatus); }else { bugStatus = buginfoService.getBuginfoByBugId(bugId).getStatus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/364/buggy-version/src.resource.BugStatusResource.java", "BodyUseAPI": ["service.IBuginfoService.updateStatus(java.lang.Integer,java.lang.String,java.lang.String)"], "Fixed commit": "a368a2ecf7284219b2670c89f7d740b2d0c04922", "Url": "https://api.github.com/repos/yinshunming/BugTrackingSystem", "Date": "2014-04-14T06:28:17Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.peekRead(\")\")) { elementValuePairs = new org.codehaus.janino.Java.ElementValuePair[0]; }else { java.util.List<org.codehaus.janino.Java.ElementValuePair> evps = new java.util.ArrayList(); do { evps.add(this.parseElementValuePair()); } while ((this.read(new java.lang.String[]{ \",\", \")\" })) == 0 ); elementValuePairs = ((org.codehaus.janino.Java.ElementValuePair[]) (evps.toArray(new org.codehaus.janino.Java.ElementValuePair[evps.size()]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8565/buggy-version/janino.src.org.codehaus.janino.Parser.java", "BodyUseAPI": [], "Fixed commit": "1e5e94d01d3fafbc7cf7ea44687698dd2a895b5f", "Url": "https://api.github.com/repos/janino-compiler/janino", "Date": "2016-06-21T11:08:23Z"},
{"Line": "=>4961", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Sets.difference(java.util.Set<java.lang.String>,java.util.Set<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(differenceObsolete.isEmpty())) { differenceObsolete = com.google.common.collect.Sets.difference(differenceObsolete, currentIdLabels.keySet()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6626/buggy-version/OWLTools-Runner.src.main.java.owltools.cli.CommandRunner.java", "BodyUseAPI": ["com.google.common.collect.Sets.difference(java.util.Set<java.lang.String>,java.util.Set<java.lang.String>)"], "Fixed commit": "385dfc70e9cbeb43ff756749b5abccebf9132d48", "Url": "https://api.github.com/repos/owlcollab/owltools", "Date": "2015-12-18T17:50:04Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (atCatchBlock()) { stack.getStackItem(0).setUserValue(jp.skypencil.findbugs.slf4j.WrongPlaceholderDetector.IS_THROWABLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3604/buggy-version/bug-pattern.src.main.java.jp.skypencil.findbugs.slf4j.WrongPlaceholderDetector.java", "BodyUseAPI": [], "Fixed commit": "4470b7b0878ab2be19a3e155789a459cdd65006a", "Url": "https://api.github.com/repos/eller86/findbugs-slf4j", "Date": "2012-10-24T12:47:13Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.sociale_sports.Utils.Utils.isNullOrEmpty(response))) { java.lang.String[] nicks = response.split(\";\"); for (int i = 0; i < (nicks.length); i++) { downloadJSON(nicks[i]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2660/buggy-version/app.src.main.java.com.sociale_sports.Fragments.SearchUserFragment.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "42fb00ca8e2bf87fe329602058215a9d0da3cad5", "Url": "https://api.github.com/repos/rashhhs/sociale_sports", "Date": "2016-05-25T19:20:15Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1025/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "4e141793d385ca8dc19b0fd3c062e9973dc223de", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getPlugin().getConfig().getBoolean(\"debug\", false)) { player.sendMessage((((\"Your current violation count for '\" + (getName())) + \"': \") + violations)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3668/buggy-version/src.main.java.de.cubeisland.AntiGuest.prevention.Prevention.java", "BodyUseAPI": [], "Fixed commit": "82b5f5c63b57aa9be137e00adfccf1b80d2af7f6", "Url": "https://api.github.com/repos/CubeIsland/AntiGuest", "Date": "2013-05-04T18:08:14Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((e.getEntity()) instanceof org.bukkit.entity.Player)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7358/buggy-version/Core.src.main.java.net.digiex.magiccarpet.Listeners.java", "BodyUseAPI": [], "Fixed commit": "482791ea3ec81a322050d8e41549335827568666", "Url": "https://api.github.com/repos/Digiex/MagicCarpet", "Date": "2014-01-06T16:37:21Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!absolutePath) { java.lang.String resultPathPrefix = madvocConfig.getResultPathPrefix(); if (resultPathPrefix != null) { path = resultPathPrefix + path; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/602/buggy-version/jodd-madvoc.src.main.java.jodd.madvoc.component.ResultMapper.java", "BodyUseAPI": [], "Fixed commit": "cc853106cbb7db6f544cabce0b2ec0195cd00e5e", "Url": "https://api.github.com/repos/oblac/jodd", "Date": "2014-01-31T10:43:16Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(clicked)) { clicked = true; sound.play(((Gdx.app.getPreferences(\"tales-of-androgyny-preferences\").getFloat(\"volume\")) * 0.5F)); currentImage.addAction(com.badlogic.gdx.scenes.scene2d.actions.Actions.moveBy(movementVector.x, movementVector.y, 1.5F)); visit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4739/buggy-version/core.src.com.majalis.world.GameWorldNode.java", "BodyUseAPI": [], "Fixed commit": "b0a0555d31ab61f8f3413d28ef544dce9739c3a5", "Url": "https://api.github.com/repos/majalistic/tales-of-androgyny", "Date": "2016-11-26T21:28:05Z"},
{"Line": "=>8", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (src.isEmpty()) { return src; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6585/buggy-version/src.main.java.piglatin.PigLatinTranslator.java", "BodyUseAPI": [], "Fixed commit": "70893f4a941e33856c13ad237369d87f16893a14", "Url": "https://api.github.com/repos/martenlager/SWDev", "Date": "2017-03-02T12:09:12Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ednovo.gooru.infrastructure.persistence.hibernate.UserRepository.getUserGroupMemebrByGroupUid(userGroup.getPartyUid(),identity.getUser().getPartyUid())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (userGroupAssociation != null) { this.getUserGroupRepository().remove(userGroupAssociation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3706/buggy-version/api.src.main.java.org.ednovo.gooru.domain.service.classpage.ClasspageServiceImpl.java", "BodyUseAPI": ["org.ednovo.gooru.infrastructure.persistence.hibernate.party.UserGroupRepository.remove(org.ednovo.gooru.core.api.model.UserGroupAssociation)"], "Fixed commit": "6b81f3916b44e69f6e2ed01bfaf574d70744a266", "Url": "https://api.github.com/repos/RenukaGurumurthy/Gooru-Core-API", "Date": "2014-03-19T11:34:03Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((players[0].getIsOnZeroSide()) == (players[1].getIsOnZeroSide())) { throw new java.lang.IllegalArgumentException(\"Players are on the same side of the board.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4553/buggy-version/classes.Board.java", "BodyUseAPI": [], "Fixed commit": "23750af0a44ed6839b54420ff24bbea1de60cc77", "Url": "https://api.github.com/repos/corbinmc96/checkers_bot", "Date": "2014-05-20T02:42:03Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((players[0].getIsOnZeroSide()) == (players[1].getIsOnZeroSide())) { throw new java.lang.IllegalArgumentException(\"Players are on the same side of the board.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4553/buggy-version/classes.Board.java", "BodyUseAPI": [], "Fixed commit": "23750af0a44ed6839b54420ff24bbea1de60cc77", "Url": "https://api.github.com/repos/corbinmc96/checkers_bot", "Date": "2014-05-20T02:42:03Z"},
{"Line": "=>511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.item.ItemStack.getAttributeModifiers(EntityEquipmentSlot.MAINHAND)", "net.minecraft.item.ItemStack.getAttributeModifiers(EntityEquipmentSlot.MAINHAND)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((attributesNew.size()) != (attributesOld.size())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7512/buggy-version/src.main.java.slimeknights.tconstruct.library.tools.ToolCore.java", "BodyUseAPI": [], "Fixed commit": "c0fbda37372fc6c07d77e012fbd1600952596bee", "Url": "https://api.github.com/repos/Rocker545/TinkersConstruct", "Date": "2016-07-23T16:09:54Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openlearn.repository.UserRepository.findOneByIdAndAuthority(java.lang.Long,org.openlearn.domain.Authority)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((instructor.getAddress()) != null) addressRepository.delete(instructor.getAddress().getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/633/buggy-version/services.src.main.java.org.openlearn.service.InstructorService.java", "BodyUseAPI": ["org.openlearn.repository.AddressRepository.delete(instructor.getAddress().getId())", "org.openlearn.domain.User.getAddress()", "instructor.getAddress().getId()"], "Fixed commit": "e9988c06ca53a06e37d4e432ce139abaae3527f2", "Url": "https://api.github.com/repos/OpenGive/OpenLearn", "Date": "2017-10-09T02:04:35Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (psiReference == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4674/buggy-version/src.com.sylvanaar.appcode.swift.highlighter.SwiftReadWriteAccessDetector.java", "BodyUseAPI": [], "Fixed commit": "9148d92851da579c6f63d4a889e92cc960abc802", "Url": "https://api.github.com/repos/sylvanaar/appCode-Swift-Extensions", "Date": "2016-04-10T20:54:06Z"},
{"Line": "=>523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(localSystems.isEmpty())) { waitFor = com.emc.storageos.vplexcontroller.VPlexConsistencyGroupManager.UPDATE_LOCAL_CG_STEP; com.emc.storageos.vplexcontroller.VPlexConsistencyGroupManager.log.info(\"Created steps to remove volumes from native consistency groups.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/935/buggy-version/controllersvc.src.main.java.com.emc.storageos.vplexcontroller.VPlexConsistencyGroupManager.java", "BodyUseAPI": [], "Fixed commit": "c6b7695c5892f8f3632d66373429dead34a20085", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-08-01T20:54:56Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((quoteChar.length()) > 0) { format = format.withQuote(quoteChar.charAt(0)); }else { format = format.withQuote(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7179/buggy-version/structr-modules.structr-csv-module.src.main.java.org.structr.csv.GetCsvHeadersFunction.java", "BodyUseAPI": ["org.apache.commons.csv.CSVFormat.withQuote(char)", "java.lang.String.charAt(int)"], "Fixed commit": "033fe1cf77d781e22ba68a72b580a58675c84be5", "Url": "https://api.github.com/repos/structr/structr", "Date": "2017-11-27T10:38:35Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.api.context.Context.getService(org.openmrs.module.kenyaemr.api.KenyaEmrService.class).getLastEncounter(org.openmrs.Patient)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (encounter != null) { artEncounter = encounter.getEncounterType().getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2888/buggy-version/omod.src.main.java.org.openmrs.module.kenyaemr.fragment.controller.program.ProgramHistoryFragmentController.java", "BodyUseAPI": ["encounter.getEncounterType().getName()", "org.openmrs.Encounter.getEncounterType()"], "Fixed commit": "01b6eafc1e015cb1f214d2a4fab4b2ccdf737618", "Url": "https://api.github.com/repos/hispindia/his-hiv-emr", "Date": "2015-10-09T10:34:28Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((net.sledzdev.shoppinglist.loader.ContentManager.instance) == null) { net.sledzdev.shoppinglist.loader.ContentManager.instance = this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8407/buggy-version/ShoppingList.src.main.java.net.sledzdev.shoppinglist.loader.ContentManager.java", "BodyUseAPI": [], "Fixed commit": "c99ff8839df540175b916a99eaa071e13f82e627", "Url": "https://api.github.com/repos/sielakos/ShoppingList", "Date": "2014-01-10T16:44:01Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentMatch) != null) { currentlyPlaying.add(mCurrentMatch.getPlayerA().getPerson()); currentlyPlaying.add(mCurrentMatch.getPlayerB().getPerson()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6410/buggy-version/app.src.main.java.com.iic.mokojin.data.CurrentSessionStore.java", "BodyUseAPI": [], "Fixed commit": "bc82149745d0db2444036f3d286c685a28e79984", "Url": "https://api.github.com/repos/rot-13/mokojin", "Date": "2015-03-12T11:24:21Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.araqne.logdb.query.expr.Lte.eval(org.araqne.logdb.Row)", "org.araqne.logdb.query.expr.Lte.eval(org.araqne.logdb.Row)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((o1 == null) || (o2 == null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/9170/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.expr.Lte.java", "BodyUseAPI": [], "Fixed commit": "3564c2ad9528e0e29094b8f7300212c5487e071a", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-12-02T10:34:36Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.araqne.logdb.query.expr.Lt.eval(org.araqne.logdb.Row)", "org.araqne.logdb.query.expr.Lt.eval(org.araqne.logdb.Row)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((o1 == null) || (o2 == null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/9170/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.expr.Lt.java", "BodyUseAPI": [], "Fixed commit": "3564c2ad9528e0e29094b8f7300212c5487e071a", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-12-02T10:34:36Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.araqne.logdb.query.expr.Gte.eval(org.araqne.logdb.Row)", "org.araqne.logdb.query.expr.Gte.eval(org.araqne.logdb.Row)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((o1 == null) || (o2 == null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/9170/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.expr.Gte.java", "BodyUseAPI": [], "Fixed commit": "3564c2ad9528e0e29094b8f7300212c5487e071a", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-12-02T10:34:36Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.araqne.logdb.query.expr.Gt.eval(org.araqne.logdb.Row)", "org.araqne.logdb.query.expr.Gt.eval(org.araqne.logdb.Row)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((o1 == null) || (o2 == null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/9170/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.expr.Gt.java", "BodyUseAPI": [], "Fixed commit": "3564c2ad9528e0e29094b8f7300212c5487e071a", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-12-02T10:34:36Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (iface.isAssignableFrom(org.apache.tika.detect.EncodingDetector.class)) { providers.add(((T) (new org.apache.tika.parser.html.HtmlEncodingDetectorMetadataCharset()))); providers.add(((T) (new org.apache.tika.parser.html.HtmlEncodingDetector()))); providers.add(((T) (new org.apache.tika.parser.txt.UniversalEncodingDetector()))); providers.add(((T) (new org.apache.tika.parser.txt.Icu4jEncodingDetector()))); }else { providers.addAll(loadDynamicServiceProviders(iface)); providers.addAll(loadStaticServiceProviders(iface)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5845/buggy-version/tika-core.src.main.java.org.apache.tika.config.ServiceLoader.java", "BodyUseAPI": ["java.util.List<T>.addAll(java.util.List<T>)", "java.util.List<T>.addAll(java.util.List<T>)", "org.apache.tika.config.ServiceLoader.loadDynamicServiceProviders(java.lang.Class<T>)", "org.apache.tika.config.ServiceLoader.loadStaticServiceProviders(java.lang.Class<T>)"], "Fixed commit": "3c28c655f324a14bc68a451d5df43ae21e50cb06", "Url": "https://api.github.com/repos/lafaspot/tika", "Date": "2017-05-16T18:38:27Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sessionId) != null) { rootTarget.register(new com.jaspersoft.jasperserver.jaxrs.client.filters.SessionOutputFilter(sessionId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7415/buggy-version/src.main.java.com.jaspersoft.jasperserver.jaxrs.client.core.SessionStorage.java", "BodyUseAPI": [], "Fixed commit": "c186a7702e6fcd814d9b74086093d266ed8ab518", "Url": "https://api.github.com/repos/TanyaEf/jrs-rest-java-client", "Date": "2016-09-21T08:13:55Z"},
{"Line": "=>849", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.azapps.mirakelandroid.BuildConfig.DEBUG) { findPreference(\"special_lists_where\").setSummary(specialList.getWhereQuery()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/745/buggy-version/src.de.azapps.mirakel.settings.special_list.SpecialListsSettingsFragment.java", "BodyUseAPI": [], "Fixed commit": "7e75c55094b2891e35997919ac2b1dd359ddc659", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2013-09-29T22:36:33Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(de.azapps.mirakelandroid.BuildConfig.DEBUG)) { getPreferenceScreen().removePreference(findPreference(\"special_lists_where\")); }else { findPreference(\"special_lists_where\").setSummary(specialList.getWhereQuery()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/745/buggy-version/src.de.azapps.mirakel.settings.special_list.SpecialListsSettingsFragment.java", "BodyUseAPI": [], "Fixed commit": "7e75c55094b2891e35997919ac2b1dd359ddc659", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2013-09-29T22:36:33Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["faultDetail.getAny().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(detailObj instanceof javax.xml.bind.JAXBElement)) { try { return new javax.xml.ws.soap.SOAPFaultException(javax.xml.soap.SOAPFactory.newInstance().createFault(message, fault.getFaultcode())); } catch (javax.xml.soap.SOAPException e) { throw new org.apache.camel.RuntimeCamelException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2152/buggy-version/components.camel-soap.src.main.java.org.apache.camel.dataformat.soap.Soap11DataFormatAdapter.java", "BodyUseAPI": [], "Fixed commit": "6399a9b6ce03f633a05d1fc0b9f1115774531654", "Url": "https://api.github.com/repos/linead/camel", "Date": "2017-04-02T23:32:13Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["faultDetail.getAny().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(detailObj instanceof javax.xml.bind.JAXBElement)) { try { return new javax.xml.ws.soap.SOAPFaultException(javax.xml.soap.SOAPFactory.newInstance().createFault(message, fault.getFaultcode())); } catch (javax.xml.soap.SOAPException e) { throw new org.apache.camel.RuntimeCamelException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2152/buggy-version/components.camel-soap.src.main.java.org.apache.camel.dataformat.soap.Soap12DataFormatAdapter.java", "BodyUseAPI": [], "Fixed commit": "6399a9b6ce03f633a05d1fc0b9f1115774531654", "Url": "https://api.github.com/repos/linead/camel", "Date": "2017-04-02T23:32:13Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloudera.sa.hcu.io.put.local.reader.AbstractLocalFileColumnReader.getNextRow()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (initResults != null) { java.lang.String[] finalResults = new java.lang.String[(initResults.length) + 1]; java.lang.System.arraycopy(initResults, 0, finalResults, 1, initResults.length); finalResults[0] = rootReader.getCurrentFileName(); return finalResults; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1093/buggy-version/src.main.java.com.cloudera.sa.hcu.io.put.local.reader.FileNameAggregateFileReader.java", "BodyUseAPI": ["java.lang.System.arraycopy(java.lang.String[],int,java.lang.String[],int,int)"], "Fixed commit": "b2695bccfe5f5a950a3c786603d65415ca78f368", "Url": "https://api.github.com/repos/tmalaska/hadcom.utils", "Date": "2012-10-03T17:34:07Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (canBeEvaluated(stateId)) { evaluateFormulas(stateId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8298/buggy-version/de.prob.core.kernel.src.main.java.de.prob.statespace.StateSpace.java", "BodyUseAPI": ["de.prob.statespace.StateSpace.evaluateFormulas(de.prob.statespace.StateId)"], "Fixed commit": "c6c70455bb14230e13877bb40bfb930265389aa9", "Url": "https://api.github.com/repos/bendisposto/prob2", "Date": "2012-12-14T14:21:28Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["modules.PAD.Monster.getAwoken_skills()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((awakenings[i]) != null) { desc += modules.PAD.Awakening.getAwakening(modules.PAD.PADHerderAPI.getAwokenSkill(awakenings[i].getId()).getName()).getShortName(); }else { desc += \"??\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7747/buggy-version/src.main.java.modules.PAD.PADListener.java", "BodyUseAPI": ["modules.PAD.PADHerderAPI.getAwokenSkill(awakenings[i].getId())", "modules.PAD.Awakening.getAwakening(modules.PAD.PADHerderAPI.getAwokenSkill(awakenings[i].getId()).getName())", "modules.PAD.PADHerderAPI.getAwokenSkill(awakenings[i].getId()).getName()", "modules.PAD.Awakening.getAwakening(modules.PAD.PADHerderAPI.getAwokenSkill(awakenings[i].getId()).getName()).getShortName()", "awakenings[i].getId()"], "Fixed commit": "4f4fb45b97daa83eb43bdab71197b54037816cff", "Url": "https://api.github.com/repos/Barkuto/Eschamali", "Date": "2017-02-12T05:14:30Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.util.math.BlockPos.add(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((blockpos.getY()) >= 0) && ((blockpos.getY()) < 256)) && (!(worldIn.isBlockLoaded(blockpos)))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2647/buggy-version/src.main.java.slimeknights.tconstruct.world.block.BlockSlimeGrass.java", "BodyUseAPI": [], "Fixed commit": "493e392bcb539b5f5fb84ba75e67ee16c98f7350", "Url": "https://api.github.com/repos/alexbegt/TinkersConstruct", "Date": "2016-07-29T07:24:49Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((eu.transkribus.core.model.builder.ExportUtils.getPageTranscriptAtIndex(i)) == null) { t = p.getCurrentTranscript(); }else { t = eu.transkribus.core.model.builder.ExportUtils.getPageTranscriptAtIndex(i).getMd(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1663/buggy-version/src.main.java.eu.transkribus.core.io.DocExporter.java", "BodyUseAPI": ["eu.transkribus.core.model.builder.ExportUtils.getPageTranscriptAtIndex(int)", "eu.transkribus.core.model.builder.ExportUtils.getPageTranscriptAtIndex(i).getMd()"], "Fixed commit": "ac53ddd2376891de38283331109d95305b0003a3", "Url": "https://api.github.com/repos/Transkribus/TranskribusCore", "Date": "2016-12-16T11:12:18Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ash.compiler.Compiler.compile(parseResult.left,<nulltype>,Node.NIL,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(instNode instanceof ash.parser.Node)) { instNode = new ash.parser.Node(instNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2271/buggy-version/src.ash.compiler.Compiler.java", "BodyUseAPI": [], "Fixed commit": "cc6c812176e196408c0f63b8b87b10cf6c184768", "Url": "https://api.github.com/repos/HeGanjie/AshLisp", "Date": "2013-10-23T04:01:09Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"Stream closed\".equals(ex.getMessage())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8845/buggy-version/src.main.java.ilarkesto.base.Proc.java", "BodyUseAPI": [], "Fixed commit": "75a113b76021c7f33117bb35a7b6ef0d493e7576", "Url": "https://api.github.com/repos/Kunagi/ilarkesto", "Date": "2011-08-31T22:49:10Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["doc.select(\".stockUp\").first()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == cp) { cp = doc.select(\".stockDown\").first(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/9066/buggy-version/src.main.java.com.yuhui.roboc.FetchUtil.java", "BodyUseAPI": [], "Fixed commit": "e3a6a9b64638c8dd38914e6ff5d3387dbf6d0b77", "Url": "https://api.github.com/repos/ityuhui/roboc", "Date": "2015-04-23T10:02:52Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.jbundle.base.db.jdbc.JdbcDatabase.m_classDB) == null) { synchronized(org.jbundle.base.db.jdbc.JdbcDatabase.firstTime) { if ((org.jbundle.base.db.jdbc.JdbcDatabase.m_classDB) == null) org.jbundle.base.db.jdbc.JdbcDatabase.m_classDB = org.jbundle.util.osgi.finder.ClassServiceUtility.getClassService().makeObjectFromClassName(strJdbcDriver); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1405/buggy-version/base.db.jdbc.src.main.java.org.jbundle.base.db.jdbc.JdbcDatabase.java", "BodyUseAPI": [], "Fixed commit": "7e19bdd0d40bf59eaaa21253f62ef93f20eeb6f6", "Url": "https://api.github.com/repos/jbundle/jbundle", "Date": "2011-10-06T17:09:33Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.jbundle.base.db.jdbc.JdbcDatabase.firstTime) == null) org.jbundle.base.db.jdbc.JdbcDatabase.firstTime = new java.util.Date();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1405/buggy-version/base.db.jdbc.src.main.java.org.jbundle.base.db.jdbc.JdbcDatabase.java", "BodyUseAPI": [], "Fixed commit": "7e19bdd0d40bf59eaaa21253f62ef93f20eeb6f6", "Url": "https://api.github.com/repos/jbundle/jbundle", "Date": "2011-10-06T17:09:33Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.LayoutInflater.inflate(R.layout.fragment_comment,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (v != null) mCommentsListView = ((android.widget.ListView) (v.findViewById(R.id.comments)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4755/buggy-version/Breadit.reddit.src.main.java.me.williamhester.reddit.CommentFragment.java", "BodyUseAPI": ["android.view.View.findViewById(R.id.comments)"], "Fixed commit": "dfffe9ce217766349c2c58d73a7ff8e93238c2cc", "Url": "https://api.github.com/repos/WilliamHester/breadit", "Date": "2014-04-20T19:34:52Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((def != null) && (def.getClass().equals(type))) { loadedTypes.add(((spacetrader.xml.LoadedType) (def))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/680/buggy-version/SpaceTrader.src.spacetrader.xml.LoadedType.java", "BodyUseAPI": [], "Fixed commit": "a52d584d16fb00bb454acb899086b304b43fc35e", "Url": "https://api.github.com/repos/Team3Plus2/SpaceTraders", "Date": "2014-11-05T16:25:16Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.agecraft.extendedmetadata.EMModContainer.llibraryVersion.contains(\"@\"))) { deps.add(net.minecraftforge.fml.common.versioning.VersionParser.parseVersionReference(((\"llibrary@[\" + (org.agecraft.extendedmetadata.EMModContainer.llibraryVersion)) + \",)\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8235/buggy-version/src.main.java.org.agecraft.extendedmetadata.EMModContainer.java", "BodyUseAPI": [], "Fixed commit": "0ccfe40cbd5f5ccdbf3afdef6954cf7f423bc97f", "Url": "https://api.github.com/repos/AgeCraft/ExtendedMetadata", "Date": "2015-12-01T21:15:11Z"},
{"Line": "=>1563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p == (com.github.nmorel.gwtjackson.client.stream.impl.DefaultJsonReader.PEEKED_BUFFERED)) { writer.value(peekedString); }else if (p == (com.github.nmorel.gwtjackson.client.stream.impl.DefaultJsonReader.PEEKED_NULL)) { writer.nullValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3453/buggy-version/gwt-jackson.src.main.java.com.github.nmorel.gwtjackson.client.stream.impl.DefaultJsonReader.java", "BodyUseAPI": [], "Fixed commit": "753fdbeb5cc662ed735e1d0352c6c7b364855147", "Url": "https://api.github.com/repos/nmorel/gwt-jackson", "Date": "2017-03-09T14:39:54Z"},
{"Line": "=>1483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p == (com.github.nmorel.gwtjackson.client.stream.impl.NonBufferedJsonReader.PEEKED_BUFFERED)) { writer.value(peekedString); }else if (p == (com.github.nmorel.gwtjackson.client.stream.impl.NonBufferedJsonReader.PEEKED_NULL)) { writer.nullValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3453/buggy-version/gwt-jackson.src.main.java.com.github.nmorel.gwtjackson.client.stream.impl.NonBufferedJsonReader.java", "BodyUseAPI": [], "Fixed commit": "753fdbeb5cc662ed735e1d0352c6c7b364855147", "Url": "https://api.github.com/repos/nmorel/gwt-jackson", "Date": "2017-03-09T14:39:54Z"},
{"Line": "=>592", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((date.getMonth()) > 8) { urlContent += (((date.getYear()) + \"-\") + ((date.getYear()) + 1)) + \"-1\"; }else if ((date.getMonth()) < 2) { urlContent += ((((date.getYear()) - 1) + \"-\") + (date.getYear())) + \"-1\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/9120/buggy-version/app.src.main.java.com.wangh.e_university.DataManager.java", "BodyUseAPI": ["com.wangh.e_university.Date.getYear()", "com.wangh.e_university.Date.getYear()", "com.wangh.e_university.Date.getMonth()", "com.wangh.e_university.Date.getYear()", "com.wangh.e_university.Date.getYear()"], "Fixed commit": "2a3ee32d732c780a2bc7cac3e1b897e8b92e4981", "Url": "https://api.github.com/repos/GalaxyDL/e_University", "Date": "2017-01-19T12:37:52Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((date.getMonth()) > 8) { postContent += (((date.getYear()) + \"-\") + ((date.getYear()) + 1)) + \"-1\"; }else if ((date.getMonth()) < 2) { postContent += ((((date.getYear()) - 1) + \"-\") + (date.getYear())) + \"-1\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/9120/buggy-version/app.src.main.java.com.wangh.e_university.DataManager.java", "BodyUseAPI": ["com.wangh.e_university.Date.getMonth()", "com.wangh.e_university.Date.getYear()", "com.wangh.e_university.Date.getYear()", "com.wangh.e_university.Date.getYear()", "com.wangh.e_university.Date.getYear()"], "Fixed commit": "2a3ee32d732c780a2bc7cac3e1b897e8b92e4981", "Url": "https://api.github.com/repos/GalaxyDL/e_University", "Date": "2017-01-19T12:37:52Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (listener != null) { mIcon.setOnClickListener(listener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4368/buggy-version/uis.src.main.java.com.less.uis.TitleBar.java", "BodyUseAPI": ["android.widget.ImageView.setOnClickListener(com.less.uis.OnClickListener)"], "Fixed commit": "948112dde4899416fc70ae13688de1f4f0cf60b0", "Url": "https://api.github.com/repos/coding-dream/widgets", "Date": "2017-11-22T14:38:13Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (pojo != null) { deletePojo(pojo, binding, tableName, group, options); binding.visitChildren(pojo, Facet::isCascadeDelete, new DeleteVisitor(group, options)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4510/buggy-version/pojo.src.main.java.com.savoirtech.hecate.pojo.dao.def.DefaultPojoDao.java", "BodyUseAPI": ["com.savoirtech.hecate.pojo.dao.def.DefaultPojoDao<P>.deletePojo(P,com.savoirtech.hecate.pojo.binding.PojoBinding<P>,java.lang.String,com.savoirtech.hecate.core.update.UpdateGroup,com.savoirtech.hecate.core.statement.StatementOptions)", "com.savoirtech.hecate.pojo.binding.PojoBinding<P>.visitChildren(P,Facet::isCascadeDelete,com.savoirtech.hecate.pojo.dao.def.DefaultPojoDao<P>.DeleteVisitor)"], "Fixed commit": "9eb98fd1fc84968aa5d1ece927b183c5956378db", "Url": "https://api.github.com/repos/savoirtech/hecate", "Date": "2016-09-30T21:06:39Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data.gameOver) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6717/buggy-version/src.main.Bomberman.java", "BodyUseAPI": [], "Fixed commit": "7e523ea80b893bdc0f6b5ad5b172a6ff12f3481b", "Url": "https://api.github.com/repos/propra12-orga/gruppe40", "Date": "2012-06-13T17:00:28Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((input.getText().length()) == 0) { failure.setVisibility(View.VISIBLE); }else { search(java.lang.String.valueOf(input.getText())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4154/buggy-version/app.src.main.java.com.waynehillsfbla.waynehillsnow.SearchActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "com.waynehillsfbla.waynehillsnow.SearchActivity.1.search(java.lang.String)", "java.lang.String.valueOf(input.getText())"], "Fixed commit": "8b033255dd90a9a579740f07dcf27ce9f907983e", "Url": "https://api.github.com/repos/KPrabs106/WayneHillsNow", "Date": "2015-04-30T04:11:18Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAddArtistsItem) != null) updateAddButtonVisibility();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6235/buggy-version/app.src.main.java.com.qwertyfinger.lastfmgig_o_meter.ui.artistList.ArtistListFragment.java", "BodyUseAPI": [], "Fixed commit": "a65e882c137a853a6a7d64836ad4e8c9ec67c6a7", "Url": "https://api.github.com/repos/qwertyfinger/last.fm-gig-o-meter", "Date": "2017-02-04T13:42:04Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLatLng) != null) { sb.append(((\" LatLng : \" + (mLatLng.toString())) + \"\\n\")); }else { sb.append(\" LatLng : null\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6327/buggy-version/openweathermap-lib.src.main.java.com.kubotaku.android.openweathermap.lib.WeatherInfo.java", "BodyUseAPI": [], "Fixed commit": "464d45647c27a70a519ce959c490e5c36d146225", "Url": "https://api.github.com/repos/kubotaku1119/OpenWeatherMapLib", "Date": "2014-12-26T12:01:18Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newFactor.hasComposingVariables()) { factors.add(newFactor); if ((var != query) && (!(Node.containsInList(var, observedValues)))) { factors.add(sumOut(var, factors)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2443/buggy-version/BayesNet.java", "BodyUseAPI": ["java.util.LinkedList<Factor>.add(Factor)"], "Fixed commit": "f279c99fb64791b5b7a72cd07bf592e0ae1340a3", "Url": "https://api.github.com/repos/WiteHaze/AI_HW4", "Date": "2014-04-28T02:02:33Z"},
{"Line": "=>788", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(loop)) { mediaPlayer.stop(); mediaPlayer.seek(javafx.util.Duration.millis(0.0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8317/buggy-version/TeachEasy.src.teacheasy.mediahandler.video.Video.java", "BodyUseAPI": [], "Fixed commit": "acd2a4f2ad0cea034574a930256489fd35b4c3cc", "Url": "https://api.github.com/repos/TonyTewsAngels/Dev", "Date": "2015-05-29T16:51:19Z"},
{"Line": "=>702", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JFileChooser.showOpenDialog(<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (choice == (javax.swing.JFileChooser.APPROVE_OPTION)) { java.io.File dir = fc.getSelectedFile(); this.DIRECTORY = dir.toString(); if ((java.lang.System.getProperty(\"os.name\").startsWith(\"Win\")) && (!(DIRECTORY.endsWith(\"\\\\\")))) DIRECTORY = DIRECTORY.concat(\"\\\\\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4090/buggy-version/player.MusicPlayerGUI.java", "BodyUseAPI": [], "Fixed commit": "136cbf9cf9bf4a5356c27f716d66d899366958d8", "Url": "https://api.github.com/repos/SgtArtemis/MM_Player", "Date": "2013-05-14T15:05:58Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dbObject.containsField(org.atlasapi.persistence.media.entity.PriorityTranslator.SCORE_KEY)) { score = com.metabroadcast.common.persistence.translator.TranslatorUtils.toDouble(dbObject, org.atlasapi.persistence.media.entity.PriorityTranslator.SCORE_KEY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5658/buggy-version/src.main.java.org.atlasapi.persistence.media.entity.PriorityTranslator.java", "BodyUseAPI": ["com.metabroadcast.common.persistence.translator.TranslatorUtils.toDouble(com.mongodb.DBObject,java.lang.String)"], "Fixed commit": "6f8f42b2a41f6bd24c905c2660fc6dd13494e7e4", "Url": "https://api.github.com/repos/atlasapi/atlas-persistence", "Date": "2015-08-25T14:26:49Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fenixedu.ulisboa.specifications.dto.student.RegistrationDataBean.getRegistration()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((registration.isConcluded()) && ((getData()) == (org.fenixedu.ulisboa.specifications.domain.services.student.RegistrationDataServices.getLastRegistrationData(registration)))) { org.fenixedu.academic.dto.student.RegistrationConclusionBean bean = null; try { bean = new org.fenixedu.academic.dto.student.RegistrationConclusionBean(registration, registration.getLastStudentCurricularPlan().getRoot()); } catch (final java.lang.Throwable t) { } if ((bean != null) && (getExecutionYear().isAfterOrEquals(bean.getConclusionYear()))) { result = org.fenixedu.academic.domain.student.registrationStates.RegistrationStateType.CONCLUDED; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7713/buggy-version/src.main.java.org.fenixedu.ulisboa.specifications.dto.student.RegistrationDataBean.java", "BodyUseAPI": ["org.fenixedu.academic.domain.student.Registration.getLastStudentCurricularPlan()", "registration.getLastStudentCurricularPlan().getRoot()"], "Fixed commit": "f9b53e63c3d35379e4c8d0f2075c52391271325a", "Url": "https://api.github.com/repos/qub-it/fenixedu-ulisboa-specifications", "Date": "2016-10-03T18:03:51Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.example.melih.beacon_tool.LeScanner.beaconList.containsKey(b.getAddress())) { for (com.example.melih.beacon_tool.BluetoothEventListener l : com.example.melih.beacon_tool.LeScanner.listeners) { l.onUpdate(b); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1433/buggy-version/app.src.main.java.com.example.melih.beacon_tool.LeScanner.java", "BodyUseAPI": ["com.example.melih.beacon_tool.BluetoothEventListener.onUpdate(com.example.melih.beacon_tool.Beacon)"], "Fixed commit": "cd039a03cc2f7b01813eeb57aa29728e5f1c2da6", "Url": "https://api.github.com/repos/melihmutlu/beacon-tool", "Date": "2016-07-19T08:14:42Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.co.feixie.mynote.model.Note.getVideoPath()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(android.text.TextUtils.isEmpty(videoPath))) { vvViewVideo.setVideoURI(android.net.Uri.parse(videoPath)); vvViewVideo.setVisibility(View.VISIBLE); if (!(vvViewVideo.isPlaying())) { vvViewVideo.start(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4460/buggy-version/app.src.main.java.uk.co.feixie.mynote.activity.ViewNoteActivity.java", "BodyUseAPI": ["android.net.Uri.parse(java.lang.String)", "android.widget.VideoView.setVideoURI(android.net.Uri.parse(videoPath))"], "Fixed commit": "24f29ee344d6dd6a0e02556380c6a4c3876aca26", "Url": "https://api.github.com/repos/xiefeieric/MyNote", "Date": "2015-11-19T12:42:12Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.co.feixie.mynote.model.Note.getImagePath()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(android.text.TextUtils.isEmpty(imagePath))) { com.lidroid.xutils.BitmapUtils bitmapUtils = new com.lidroid.xutils.BitmapUtils(this); bitmapUtils.display(ivShowPhoto, imagePath); ivShowPhoto.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4460/buggy-version/app.src.main.java.uk.co.feixie.mynote.activity.ViewNoteActivity.java", "BodyUseAPI": ["com.lidroid.xutils.BitmapUtils.display(android.widget.ImageView,java.lang.String)"], "Fixed commit": "24f29ee344d6dd6a0e02556380c6a4c3876aca26", "Url": "https://api.github.com/repos/xiefeieric/MyNote", "Date": "2015-11-19T12:42:12Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dps.domain.entity.Supplier.getContactDetails()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (contactDetails == null) { contactDetails = new com.dps.domain.entity.ContactDetails(); supp.setContactDetails(contactDetails); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5587/buggy-version/dps-web-service.src.main.java.com.dps.web.service.controller.SupplierController.java", "BodyUseAPI": [], "Fixed commit": "2c165cef46592bf5129c1b344176d8491cc85e14", "Url": "https://api.github.com/repos/ashanbhag12/dps", "Date": "2016-10-12T17:40:45Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tree.value.equals(this.value))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/919/buggy-version/src.tree.Tree.java", "BodyUseAPI": [], "Fixed commit": "e2d9245e01a0b25850727a6c0326238141f7c581", "Url": "https://api.github.com/repos/Markmerc/Tree", "Date": "2014-02-05T00:17:07Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.isBlank(payload))) { return org.jenkinsci.plugins.relution_publisher.net.responses.ApiResponse.fromJson(payload); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8461/buggy-version/relution-publisher.src.main.java.org.jenkinsci.plugins.relution_publisher.net.RequestManager.java", "BodyUseAPI": ["org.jenkinsci.plugins.relution_publisher.net.responses.ApiResponse.fromJson(java.lang.String)"], "Fixed commit": "b43712c9210ff4c6e1c2fa4068a43a9033fed988", "Url": "https://api.github.com/repos/mwaylabs/relution-jenkins-plugin", "Date": "2016-06-09T16:30:49Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currentReader) != null) { this.currentReader.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2691/buggy-version/fileformat.src.main.java.org.zuinnote.hadoop.office.format.mapred.AbstractSpreadSheetDocumentRecordWriter.java", "BodyUseAPI": [], "Fixed commit": "dc5f3a2fce5e7d8f95ce9306feb309dd08889786", "Url": "https://api.github.com/repos/ZuInnoTe/hadoopoffice", "Date": "2016-12-27T16:01:37Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (element_side == (org.openpnp.model.Board.Side.Top)) { if (rotation >= 180) A = org.openpnp.util.Utils2D.rotateTranslateCenterPoint(A, rotation, 0, 0, part_center); else A = org.openpnp.util.Utils2D.rotateTranslateCenterPoint(A, (-rotation), 0, 0, part_center); }else if (element_side == (org.openpnp.model.Board.Side.Bottom)) { A = org.openpnp.util.Utils2D.rotateTranslateCenterPoint(A, (-rotation), 0, 0, part_center); if ((A.getX()) < (center.getX())) { java.lang.Double offset = (center.getX()) - (A.getX()); A.setX(((center.getX()) + offset)); }else { java.lang.Double offset = (A.getX()) - (center.getX()); A.setX(((center.getX()) - offset)); } if ((A.getY()) < y) { java.lang.Double offset = y - (A.getY()); A.setY((y + offset)); }else { java.lang.Double offset = (A.getY()) - y; A.setY((y - offset)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3507/buggy-version/src.main.java.org.openpnp.gui.importer.EagleBoardImporter.java", "BodyUseAPI": [], "Fixed commit": "f1b3d62d5cd7343759a5e8baa3c6ea6f7f9d1455", "Url": "https://api.github.com/repos/openpnp/openpnp", "Date": "2015-10-17T10:37:14Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((org.openpnp.model.eagle.xml.Smd) (e)).getLayer().equalsIgnoreCase(topLayer)) { if (element_side == (org.openpnp.model.Board.Side.Top)) boardPad.setSide(Side.Top); else boardPad.setSide(Side.Bottom); }else if (((org.openpnp.model.eagle.xml.Smd) (e)).getLayer().equalsIgnoreCase(bottomLayer)) { if (element_side == (org.openpnp.model.Board.Side.Top)) boardPad.setSide(Side.Bottom); else boardPad.setSide(Side.Top); }else org.openpnp.gui.importer.EagleBoardImporter.logger.info(((\"Warning: \" + file) + \"contains a SMD pad that is not on a topLayer or bottomLayer\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3507/buggy-version/src.main.java.org.openpnp.gui.importer.EagleBoardImporter.java", "BodyUseAPI": ["java.lang.Object.getLayer()", "((org.openpnp.model.eagle.xml.Smd) (e)).getLayer().equalsIgnoreCase(java.lang.String)"], "Fixed commit": "f1b3d62d5cd7343759a5e8baa3c6ea6f7f9d1455", "Url": "https://api.github.com/repos/openpnp/openpnp", "Date": "2015-10-17T10:37:14Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (element_side == (org.openpnp.model.Board.Side.Top)) boardPad.setSide(Side.Bottom); else boardPad.setSide(Side.Top);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3507/buggy-version/src.main.java.org.openpnp.gui.importer.EagleBoardImporter.java", "BodyUseAPI": [], "Fixed commit": "f1b3d62d5cd7343759a5e8baa3c6ea6f7f9d1455", "Url": "https://api.github.com/repos/openpnp/openpnp", "Date": "2015-10-17T10:37:14Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x == 2) && (y == 1)) { int asdasd = 4; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8332/buggy-version/src.chess.King.java", "BodyUseAPI": [], "Fixed commit": "96d5082e804a3a372280eeff606e62d23b28bf4f", "Url": "https://api.github.com/repos/davidosama/Chess", "Date": "2017-12-23T21:05:39Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pratilipi.data.BlobAccessor.getBlob(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (blobEntry == null) blobEntry = blobAccessor.getBlob((((\"pratilipi-content/image/\" + (pratilipi.getId())) + \"/\") + imageName));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/161/buggy-version/src.main.java.com.pratilipi.data.util.PratilipiDocUtil.java", "BodyUseAPI": [], "Fixed commit": "156a7583aa0802848a620fa22fdb6f28848329ab", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-10-15T12:02:37Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((server.getConfiguration()) != null) for (com.orientechnologies.orient.server.config.OServerEntryConfiguration p : server.getConfiguration().properties) { if (p.name.equals(\"plugin.hotReload\")) hotReload = java.lang.Boolean.parseBoolean(p.value); else if (p.name.equals(\"plugin.dynamic\")) dynamic = java.lang.Boolean.parseBoolean(p.value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2730/buggy-version/server.src.main.java.com.orientechnologies.orient.server.plugin.OServerPluginManager.java", "BodyUseAPI": ["com.orientechnologies.orient.server.OServer.getConfiguration()"], "Fixed commit": "f9fa9c075385d120121d547ea82585c4e494ae09", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2013-11-08T11:42:38Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof java.util.Date) { value = com.blade.kit.DateKit.toString(((java.util.Date) (value)), temp.getDatePatten()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2027/buggy-version/src.main.java.com.blade.kit.json.BeanSerializer.java", "BodyUseAPI": [], "Fixed commit": "e4923aa124ab561e87f76d4abb8526245b99b913", "Url": "https://api.github.com/repos/lets-blade/blade", "Date": "2017-09-12T06:54:57Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof java.math.BigDecimal) { value = ((java.math.BigDecimal) (value)).setScale(temp.getBigDecimalKeep()).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2027/buggy-version/src.main.java.com.blade.kit.json.BeanSerializer.java", "BodyUseAPI": [], "Fixed commit": "e4923aa124ab561e87f76d4abb8526245b99b913", "Url": "https://api.github.com/repos/lets-blade/blade", "Date": "2017-09-12T06:54:57Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pentaho.platform.repository2.unified.webservices.DefaultUnifiedRepositoryWebService.getLocalePropertiesForFileById(file.getId(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (propertiesWrapper != null) { java.util.Properties properties = propertiesWrapper.getProperties(); if ((properties != null) && (!(properties.isEmpty()))) { for (java.lang.String key : properties.stringPropertyNames()) { keyValueList.add(getStringKeyStringValueDto(key, properties.getProperty(key))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7583/buggy-version/extensions.src.org.pentaho.platform.web.http.api.resources.services.FileService.java", "BodyUseAPI": ["org.pentaho.platform.repository2.unified.webservices.PropertiesWrapper.getProperties()"], "Fixed commit": "9c64c9c81372bbe57f9ae0e00cafc1892b211ebd", "Url": "https://api.github.com/repos/pentaho-nbaker/pentaho-platform", "Date": "2014-09-11T18:38:39Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTransformed) return new net.imglib2.realtransform.AffineTransform3D(); else return source.getSourceTransform(t, level);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7607/buggy-version/src.main.java.bdv.img.WarpedSource.java", "BodyUseAPI": [], "Fixed commit": "047cfa7fac9e207b5b6845105a453cab9457cefd", "Url": "https://api.github.com/repos/saalfeldlab/bigwarp", "Date": "2016-10-31T18:13:19Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTransformed) transform.identity(); else source.getSourceTransform(t, level, transform);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7607/buggy-version/src.main.java.bdv.img.WarpedSource.java", "BodyUseAPI": [], "Fixed commit": "047cfa7fac9e207b5b6845105a453cab9457cefd", "Url": "https://api.github.com/repos/saalfeldlab/bigwarp", "Date": "2016-10-31T18:13:19Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGameEngine) != null) { outState.putParcelable(fr.tvbarthel.games.chasewhisply.GameActivity.BUNDLE_GAME_INFORMATION, mGameEngine.getGameInformation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2812/buggy-version/ChaseWhisply.src.main.java.fr.tvbarthel.games.chasewhisply.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "2752abd9d286c258ac98ab04e56da6a12c36cca9", "Url": "https://api.github.com/repos/tvbarthel/ChaseWhisplyProject", "Date": "2014-04-23T19:20:35Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mike.novel.content.dao.NovelBasicDao.findByNids(java.util.List<java.lang.Integer>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((findByNids != null) && ((findByNids.size()) > 0)) { for (int one : nids) { for (com.mike.novel.dto.NovelBasicDo novelBasicDo : findByNids) { if ((novelBasicDo.getNid()) == one) { result.add(novelBasicDo); break; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8524/buggy-version/biz.content.src.main.java.com.mike.novel.content.service.impl.NovelBasicServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "19ce3c9d1cfeb032fa3f4718bbd76ecb97fdbcab", "Url": "https://api.github.com/repos/39165816/novel", "Date": "2014-01-29T02:58:05Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(s.equals(b))) { s.value(sheet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8260/buggy-version/src.model.SlotMap.java", "BodyUseAPI": ["model.Slot.value(model.Sheet)"], "Fixed commit": "740b4f6ae1d507212d8cccf0da005a572815ca58", "Url": "https://api.github.com/repos/maya039/XL", "Date": "2014-11-19T22:51:28Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (props.containsKey(gobblin.data.management.retention.version.finder.DateTimeDatasetVersionFinder.DATE_TIME_PATTERN_TIMEZONE_KEY)) { this.formatter = org.joda.time.format.DateTimeFormat.forPattern(pattern).withZone(org.joda.time.DateTimeZone.forID(props.getProperty(gobblin.data.management.retention.version.finder.DateTimeDatasetVersionFinder.DATE_TIME_PATTERN_TIMEZONE_KEY))); }else { gobblin.data.management.retention.version.finder.DateTimeDatasetVersionFinder.LOGGER.debug((\"Using default Timezone UTC for pattern: \" + pattern)); this.formatter = org.joda.time.format.DateTimeFormat.forPattern(pattern); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2502/buggy-version/gobblin-data-management.src.main.java.gobblin.data.management.retention.version.finder.DateTimeDatasetVersionFinder.java", "BodyUseAPI": [], "Fixed commit": "54e245fa8d86d86c8f5f1652281a91e668691ae5", "Url": "https://api.github.com/repos/ydai1124/gobblin-1", "Date": "2015-10-23T17:37:23Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ref.getAuth()) != null) { fab.setVisibility(View.VISIBLE); }else { fab.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7558/buggy-version/Flowww.app.src.main.java.com.example.iguest.flowww.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "e234ae3a7198ffc791bde59ca23e1eefab4ad3c7", "Url": "https://api.github.com/repos/CJosephPollock/Floww", "Date": "2016-05-31T23:57:18Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()", "java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (calendar.before(now)) { calendar.add(java.util.Calendar.DAY_OF_YEAR, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6467/buggy-version/app.src.main.java.com.project.wardrobe.Service.ScheduleNotifications.java", "BodyUseAPI": ["java.util.Calendar.add(int,int)"], "Fixed commit": "d9073a883e4b11b677fd4ea34d9c3f693332932c", "Url": "https://api.github.com/repos/khetanrajesh/Wardrobe", "Date": "2016-12-25T16:00:59Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (diskZipFile.exists()) { if (!(diskZipFile.delete())) { java.lang.System.out.println((\"Unable to proceed; can't write to \" + (diskZipFile.getAbsolutePath()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7608/buggy-version/threadfix-importers.src.main.java.com.denimgroup.threadfix.importer.impl.AbstractChannelImporter.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "java.io.File.delete()", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "1b0fa936c218df6bb13c5fd4dea322849e114f7c", "Url": "https://api.github.com/repos/denimgroup/threadfix", "Date": "2014-02-11T21:11:52Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entity instanceof com.vertextrigger.screen.Player) { playerSprite = sprite; }else { entitySprites.add(sprite); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3167/buggy-version/core.Main.com.vertextrigger.screen.AbstractGameScreen.java", "BodyUseAPI": [], "Fixed commit": "42d29b59db91f7a3c863cb71b8c65340e3a7e387", "Url": "https://api.github.com/repos/Tanyel-Bariser/Vertex-Trigger", "Date": "2016-05-15T15:29:03Z"},
{"Line": "=>3133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tgPoints == null) || ((tgPoints.size()) == 0)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2602/buggy-version/Renderer.src.sec.web.render.MultiPointHandler.java", "BodyUseAPI": [], "Fixed commit": "3d973a4d02e80f57adc3895e8ae60ffc3f7ccbc7", "Url": "https://api.github.com/repos/spyhunter99/mil-sym-android", "Date": "2015-08-03T22:15:11Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ContentProvider.ITEMS.isEmpty()) { pl.karol.k.seasoner.util.ContentProvider.populateItemContainers(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3571/buggy-version/src.pl.karol.k.seasoner.SeasoningListActivity.java", "BodyUseAPI": [], "Fixed commit": "9e12f8baacb39679e437d51b8357a3a3d8cafdf2", "Url": "https://api.github.com/repos/karokir/seasoner", "Date": "2015-05-16T18:20:27Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (noButton.isSelected()) { java.awt.EventQueue.invokeLater(new java.lang.Runnable() { public void run() { try { view.RecipientOrDonor frame = new view.RecipientOrDonor(); frame.setVisible(true); final java.awt.Dimension dim = java.awt.Toolkit.getDefaultToolkit().getScreenSize(); frame.setLocation((((dim.width) / 2) - ((frame.getSize().width) / 2)), (((dim.height) / 2) - ((frame.getSize().height) / 2))); } catch (java.lang.Exception e) { e.printStackTrace(); } } }); this.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4624/buggy-version/helping-hands.src.view.WelcomePage.java", "BodyUseAPI": [], "Fixed commit": "2da6c178be4f0a558b457054f6acd347514c7d19", "Url": "https://api.github.com/repos/teraliv/agilepeachteam", "Date": "2016-12-01T18:57:59Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (includeSchema) { includeClusterDefinitions = true; includeInfo = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/9229/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.tool.ODatabaseImpExpAbstract.java", "BodyUseAPI": [], "Fixed commit": "de206edd54c5f37bb337d15fb51d78d47dd38b8c", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-05-23T13:29:59Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stack.itemID) != (Block.bedrock.blockID)) { world.setBlockToAir(x, ((y - val) + i), ((z - val) + j)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5752/buggy-version/metalTools.item.ItemHammer.java", "BodyUseAPI": [], "Fixed commit": "4134a6f8e1c2a32a990ea6e6b045ebea3f560e70", "Url": "https://api.github.com/repos/klmDF14J/MetalTools", "Date": "2013-09-02T17:38:03Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stack.itemID) != (Block.bedrock.blockID)) { world.setBlockToAir(((x - val) + i), y, ((z - val) + j)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5752/buggy-version/metalTools.item.ItemHammer.java", "BodyUseAPI": [], "Fixed commit": "4134a6f8e1c2a32a990ea6e6b045ebea3f560e70", "Url": "https://api.github.com/repos/klmDF14J/MetalTools", "Date": "2013-09-02T17:38:03Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stack.itemID) != (Block.bedrock.blockID)) { world.setBlockToAir(((x - val) + i), ((y - val) + j), z); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5752/buggy-version/metalTools.item.ItemHammer.java", "BodyUseAPI": [], "Fixed commit": "4134a6f8e1c2a32a990ea6e6b045ebea3f560e70", "Url": "https://api.github.com/repos/klmDF14J/MetalTools", "Date": "2013-09-02T17:38:03Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.imadcn.framework.idworker.registry.CoordinatorRegistryCenter.getRawClient()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((client.getState()) == (org.apache.curator.framework.imps.CuratorFrameworkState.STARTED)) { regCenter.remove(nodePath.getWorkerIdPath()); regCenter.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7294/buggy-version/src.main.java.com.imadcn.framework.idworker.register.zookeeper.ZookeeperWorkerRegister.java", "BodyUseAPI": [], "Fixed commit": "24f73d72e64ba641c5a0f9a606059294c8ca6f01", "Url": "https://api.github.com/repos/imadcn/idworker", "Date": "2017-12-25T15:52:45Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((swipeRefreshLayout) != null) swipeRefreshLayout.setRefreshing(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8442/buggy-version/android.app.src.main.java.org.fossasia.openevent.fragments.TracksFragment.java", "BodyUseAPI": [], "Fixed commit": "80fe9d447139dbe460515d96870562419bef82a9", "Url": "https://api.github.com/repos/PareshMayani/open-event-android", "Date": "2016-10-16T08:43:40Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()", "javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((ime.isEmpty()) || (opis.isEmpty())) { javax.swing.JOptionPane.showMessageDialog(null, \"Polja ime i opis kategorije ne smiju biti prazna!\", \"InfoBox\", javax.swing.JOptionPane.INFORMATION_MESSAGE); }else { ba.etf.unsa.si.pos_kasa.controller.KategorijaControler kc = new ba.etf.unsa.si.pos_kasa.controller.KategorijaControler(); kc.dodajKategoriju(ime, opis); prikazi(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5136/buggy-version/Source.pos-kasa.src.main.java.ba.etf.unsa.si.pos_kasa.view.FormaKategorije.java", "BodyUseAPI": ["ba.etf.unsa.si.pos_kasa.controller.KategorijaControler.dodajKategoriju(java.lang.String,java.lang.String)"], "Fixed commit": "a03d533324f61cfb5e30174e3ef42b1795e09ced", "Url": "https://api.github.com/repos/SoftverInzenjeringETFSA/SI2015Tim6", "Date": "2016-05-21T16:15:07Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jerry.notes.Database.Note.getTitle()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((titleString.length()) > 20) { titleString = (titleString.substring(0, 20)) + \"...\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5742/buggy-version/app.src.main.java.com.jerry.notes.Adapter.NotesAdapter.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "61fbfcf86d5fd13877c7cf4776e500ce3bd049b5", "Url": "https://api.github.com/repos/JerryJin93/Notes", "Date": "2017-12-02T14:24:28Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratio.meta.core.statements.SelectStatement.validateKeyspaceAndTable(com.stratio.meta.core.metadata.MetadataManager,this.getEffectiveKeyspace(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(result.hasError())) { result = checkAliasesNotDuplicated(this.selectionClause); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4852/buggy-version/meta-core.src.main.java.com.stratio.meta.core.statements.SelectStatement.java", "BodyUseAPI": [], "Fixed commit": "cf6aa51d33682ba58829038f82f83ec0f8406c01", "Url": "https://api.github.com/repos/Stratio/stratio-meta", "Date": "2014-07-15T11:44:33Z"},
{"Line": "=>481", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.equinox.KeyParamPair>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(secondPair.getParam().isEmpty())) { sBuilder.append(com.equinox.Parser.CHAR_SPACE); sBuilder.append(secondPair.getParam()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/582/buggy-version/src.com.equinox.Parser.java", "BodyUseAPI": ["com.equinox.KeyParamPair.getParam()", "java.lang.StringBuilder.append(secondPair.getParam())"], "Fixed commit": "d4f40a92efbdb15796b1c6722c46d5bc6edbc339", "Url": "https://api.github.com/repos/cs2103jan2015-w15-3j/main", "Date": "2015-04-13T06:20:58Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.anysoftkeyboard.addons.AddOnsFactory.locateAddOn(java.lang.String,getContext().getApplicationContext())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (selectedAddOn == null) { selectedAddOn = validAddOns.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4560/buggy-version/src.main.java.com.anysoftkeyboard.ui.settings.widget.AddOnListPreference.java", "BodyUseAPI": [], "Fixed commit": "9d45e4a26de96e4a8149f64157b1a8ba0549895a", "Url": "https://api.github.com/repos/AnySoftKeyboard/AnySoftKeyboard", "Date": "2013-12-20T02:07:15Z"},
{"Line": "=>733", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(allEdges.contains(edge))) allEdges.add(edge);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/102/buggy-version/blueprints-usergrid-graph.src.main.java.org.apache.usergrid.drivers.blueprints.UsergridGraph.java", "BodyUseAPI": ["java.util.List<org.apache.usergrid.drivers.blueprints.Edge>.add(org.apache.usergrid.drivers.blueprints.Edge)"], "Fixed commit": "62f9f7a28c8cb68d532ce2c90ee90a79ca8875e1", "Url": "https://api.github.com/repos/ayesha12/blueprints", "Date": "2015-07-29T21:39:38Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<T>.getConstructors()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (comwim07101993ictproj3_capturetheflag.github.caperevexillum.helpers.ArrayHelpers.IsNullOrEmpty(constructors)) { throw new java.lang.NoSuchMethodException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4094/buggy-version/CapereVexillum.app.src.main.java.comwim07101993ictproj3_capturetheflag.github.caperevexillum.helpers.factories.SingletonFactory.java", "BodyUseAPI": [], "Fixed commit": "c26d9d2723421647692f9a2c0b61b24bbf4b2b42", "Url": "https://api.github.com/repos/wim07101993/school_ictProj3-CaptureTheFlag", "Date": "2017-11-25T21:27:05Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles(java.io.FileFilter)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files != null) { for (java.io.File subDirectory : files) { org.apache.commons.io.FileUtils.cleanDirectory(subDirectory); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3002/buggy-version/server.sonar-server.src.main.java.org.sonar.server.platform.DefaultServerFileSystem.java", "BodyUseAPI": [], "Fixed commit": "75188ae1fb37c01ff970614725f8e9c0b228bce7", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2015-04-21T15:08:04Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (logger.isDebugEnabled()) { logger.debug(Moka7.S7Client.ErrorText(client.LastError)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6367/buggy-version/addons.binding.org.openhab.binding.s7.src.main.java.org.openhab.binding.s7.handler.S7BridgeHandler.java", "BodyUseAPI": ["org.slf4j.Logger.debug(Moka7.S7Client.ErrorText(client.LastError))"], "Fixed commit": "0d8b14c48f650e29f4f0375626f1de4f6ffa9819", "Url": "https://api.github.com/repos/lsibilla/openhab2-addons", "Date": "2017-07-25T06:30:16Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (logger.isDebugEnabled()) { logger.debug(Moka7.S7Client.ErrorText(client.LastError)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6367/buggy-version/addons.binding.org.openhab.binding.s7.src.main.java.org.openhab.binding.s7.handler.S7BridgeHandler.java", "BodyUseAPI": ["org.slf4j.Logger.debug(Moka7.S7Client.ErrorText(client.LastError))"], "Fixed commit": "0d8b14c48f650e29f4f0375626f1de4f6ffa9819", "Url": "https://api.github.com/repos/lsibilla/openhab2-addons", "Date": "2017-07-25T06:30:16Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (logger.isDebugEnabled()) { logger.debug(Moka7.S7Client.ErrorText(client.LastError)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6367/buggy-version/addons.binding.org.openhab.binding.s7.src.main.java.org.openhab.binding.s7.handler.S7BridgeHandler.java", "BodyUseAPI": ["org.slf4j.Logger.debug(Moka7.S7Client.ErrorText(client.LastError))"], "Fixed commit": "0d8b14c48f650e29f4f0375626f1de4f6ffa9819", "Url": "https://api.github.com/repos/lsibilla/openhab2-addons", "Date": "2017-07-25T06:30:16Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (logger.isDebugEnabled()) { logger.debug(Moka7.S7Client.ErrorText(client.LastError)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6367/buggy-version/addons.binding.org.openhab.binding.s7.src.main.java.org.openhab.binding.s7.handler.S7BridgeHandler.java", "BodyUseAPI": ["org.slf4j.Logger.debug(Moka7.S7Client.ErrorText(client.LastError))"], "Fixed commit": "0d8b14c48f650e29f4f0375626f1de4f6ffa9819", "Url": "https://api.github.com/repos/lsibilla/openhab2-addons", "Date": "2017-07-25T06:30:16Z"},
{"Line": "=>686", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((doubleFss <= 0.0) || (doubleFss > 1.0)) { ml.shifu.shifu.container.meta.ValidateResult tmpResult = new ml.shifu.shifu.container.meta.ValidateResult(true); tmpResult.setStatus(false); tmpResult.getCauses().add(\"FeatureSubsetStrategy if double should be in (0, 1]\"); result = ml.shifu.shifu.container.meta.ValidateResult.mergeResult(result, tmpResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3398/buggy-version/src.main.java.ml.shifu.shifu.core.validator.ModelInspector.java", "BodyUseAPI": [], "Fixed commit": "623d135bf3dfd55a75bf2a7b0cb9645f40051c18", "Url": "https://api.github.com/repos/ShifuML/shifu", "Date": "2017-12-28T10:50:35Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (input != null) { input = input.replaceAll(\"&quot;\", \"'\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8452/buggy-version/src.main.java.Model.Organisation.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "47f48e5989b875464385b7ab9db99330eb44578f", "Url": "https://api.github.com/repos/megavice1753/pou_region_service", "Date": "2016-12-02T15:47:19Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.toolify.backbone.model.MountPoint.getMountPoint()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((path.equals(\"/storage/emulated\")) && (new java.io.File(\"/storage/emulated/0\").exists())) path = \"/storage/emulated/0\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8300/buggy-version/Backbone.src.main.java.me.toolify.backbone.util.StorageHelper.java", "BodyUseAPI": [], "Fixed commit": "9319ee21270e7b5c4d5e4c098f6d1566f0603196", "Url": "https://api.github.com/repos/BrandoCommando/Backbone", "Date": "2013-10-04T21:39:31Z"},
{"Line": "=>1831", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(message.getContentChunkList().isEmpty())) { if ((message.getContentChunkList().get(0).getDataLength()) != 0) { createRetainedEntry(connection, message); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/296/buggy-version/modules.andes-core.broker.src.main.java.org.wso2.andes.store.rdbms.RDBMSMessageStoreImpl.java", "BodyUseAPI": ["message.getContentChunkList().get(0).getDataLength()", "org.wso2.andes.kernel.AndesMessage.getContentChunkList()", "org.wso2.andes.store.rdbms.RDBMSMessageStoreImpl.createRetainedEntry(java.sql.Connection,org.wso2.andes.kernel.AndesMessage)", "message.getContentChunkList().get(int)"], "Fixed commit": "0f8e18f99f0a12f599f75355e6a77fc94ed13a1e", "Url": "https://api.github.com/repos/wso2/andes", "Date": "2015-10-02T06:31:35Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (monitor.isCanceled()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2333/buggy-version/plugins.org.jkiss.dbeaver.ext.oracle.src.org.jkiss.dbeaver.ext.oracle.actions.CompileHandler.java", "BodyUseAPI": [], "Fixed commit": "df3ffc0666977c8e76ad30b75cb2a77f2c59c247", "Url": "https://api.github.com/repos/gencer/dbeaver", "Date": "2017-07-26T21:55:56Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sk89q.worldguard.bukkit.EntityDamageByProjectileEvent.getDamager()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((attacker != null) && (attacker instanceof com.sk89q.worldguard.bukkit.Skeleton)) { if (plugin.useRegions) { com.sk89q.worldedit.Vector pt = toVector(defender.getLocation()); if (!(plugin.regionManager.getApplicableRegions(pt).allowsFlag(AreaFlags.FLAG_MOB_DAMAGE))) { event.setCancelled(true); return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4596/buggy-version/src.com.sk89q.worldguard.bukkit.WorldGuardEntityListener.java", "BodyUseAPI": [], "Fixed commit": "e84afb4808ebed4f83f2680b8b65dae9c78764d3", "Url": "https://api.github.com/repos/sk89q/WorldGuard", "Date": "2011-02-21T23:43:09Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((prevLaidCell != null) && ((workingCell.getOnsetTicks()) < (prevLaidCell.getOffsetTicks()))) && ((workingCell.getOffsetTicks()) != (prevLaidCell.getOffsetTicks()))) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1497/buggy-version/src.main.java.org.openshapa.views.discrete.layouts.SheetLayoutWeakTemporal.java", "BodyUseAPI": [], "Fixed commit": "9ea53e23895e7b8e219de0be20c320b158320376", "Url": "https://api.github.com/repos/OpenSHAPA/openshapa", "Date": "2012-08-15T21:20:19Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (placeholder.getChildren().contains(calendarView.getAgenda())) { calendarView.getAgenda().refresh(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6168/buggy-version/src.main.java.seedu.taskell.ui.DisplayPanel.java", "BodyUseAPI": ["seedu.taskell.ui.CalendarView.getAgenda()", "calendarView.getAgenda().refresh()"], "Fixed commit": "2e40637d4c903278203711e9e21af405510a4b82", "Url": "https://api.github.com/repos/CS2103AUG2016-W15-C3/main", "Date": "2016-10-30T15:34:04Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((config) == 0) { spring = yumFloating.createSpringByBouncinessAndSpeed(configValueOne, configValueTwo); }else if ((config) == 1) { yumFloating.createSpringByTensionAndFriction(configValueOne, configValueTwo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7602/buggy-version/FloatingViewLib.src.main.java.com.ufreedom.floatingview.spring.SpringHelper.java", "BodyUseAPI": [], "Fixed commit": "953cd3cb12ae0266d80b940f444087da64fb3f93", "Url": "https://api.github.com/repos/UFreedom/FloatingView", "Date": "2016-10-20T07:47:50Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ordermanager.utility.UtilityDAO.getAppData(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (appdata.equals(\"\")) { return \"{}\"; }else { return appdata; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7605/buggy-version/src.main.java.com.ordermanager.utility.UtilityDAO.java", "BodyUseAPI": [], "Fixed commit": "3b7d42e26893f7da691a3cace65e05b5c8f03d11", "Url": "https://api.github.com/repos/chankymallick/OrderManager", "Date": "2016-10-21T10:47:24Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pitch < 12) { cs3500.music.util.Note toAdd = new cs3500.music.util.Note(pitchType, start, (end - start), (pitch / 12), instrument, volume); model.add(toAdd); }else { cs3500.music.util.Note toAdd = new cs3500.music.util.Note(pitchType, start, (end - start), ((pitch / 12) - 1), instrument, volume); model.add(toAdd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4735/buggy-version/src.cs3500.music.util.MusicBuilder.java", "BodyUseAPI": [], "Fixed commit": "a4389f95652f40bff8f589efb64071614fd9f2cc", "Url": "https://api.github.com/repos/evanmjohnson/music-editor", "Date": "2016-11-09T00:18:03Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((!(isTaskRoot())) && (getIntent().hasCategory(Intent.CATEGORY_LAUNCHER))) && ((getIntent().getAction()) != null)) && (getIntent().getAction().equals(Intent.ACTION_MAIN))) { finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5111/buggy-version/app.src.main.java.com.randomappsinc.studentpicker.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "52031add7bda83a3c57c1e27dcf359610a8b2877", "Url": "https://api.github.com/repos/Gear61/Random-Name-Picker", "Date": "2016-05-19T05:51:46Z"},
{"Line": "=>864", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((errorOccurrence.getErrorMessage()) != null) && ((errorOccurrence.getErrorMessage().length()) > 1000)) { item.getItemProperty(\"Error Message\").setValue(errorOccurrence.getErrorMessage().substring(0, 1000)); }else { item.getItemProperty(\"Error Message\").setValue(errorOccurrence.getErrorMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5993/buggy-version/ikasaneip.dashboard.war.src.main.java.org.ikasan.dashboard.ui.topology.component.ErrorOccurrenceTab.java", "BodyUseAPI": ["org.ikasan.error.reporting.model.ErrorOccurrence.getErrorMessage()", "item.getItemProperty(\"Error Message\").setValue(errorOccurrence.getErrorMessage().substring(0, 1000))", "errorOccurrence.getErrorMessage().substring(int,int)", "item.getItemProperty(\"Error Message\").setValue(errorOccurrence.getErrorMessage())", "org.ikasan.error.reporting.model.ErrorOccurrence.getErrorMessage()"], "Fixed commit": "960deca479ef631e6d0e0e193ee9694a2ef5f494", "Url": "https://api.github.com/repos/ikasanEIP/ikasan", "Date": "2016-07-24T17:42:39Z"},
{"Line": "=>737", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((org.ikasan.error.reporting.model.ErrorOccurrence) (errorOccurrence)).getErrorMessage()) != null) { sb.append(\"\\\"\").append(((((org.ikasan.error.reporting.model.ErrorOccurrence) (errorOccurrence)).getErrorMessage().length()) > 32760 ? ((org.ikasan.error.reporting.model.ErrorOccurrence) (errorOccurrence)).getErrorMessage().replaceAll(\"\\\"\", \"\\\"\\\"\").substring(0, 32759) : ((org.ikasan.error.reporting.model.ErrorOccurrence) (errorOccurrence)).getErrorMessage().replaceAll(\"\\\"\", \"\\\"\\\"\"))).append(\"\\\",\"); }else { sb.append(\"\\\"\").append(\"NULL\").append(\"\\\",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5993/buggy-version/ikasaneip.dashboard.war.src.main.java.org.ikasan.dashboard.ui.topology.component.ErrorOccurrenceTab.java", "BodyUseAPI": ["java.lang.StringBuffer.append(((((org.ikasan.error.reporting.model.ErrorOccurrence) (errorOccurrence)).getErrorMessage().length()) > 32760 ? ((org.ikasan.error.reporting.model.ErrorOccurrence) (errorOccurrence)).getErrorMessage().replaceAll(\"\\\"\", \"\\\"\\\"\").substring(0, 32759) : ((org.ikasan.error.reporting.model.ErrorOccurrence) (errorOccurrence)).getErrorMessage().replaceAll(\"\\\"\", \"\\\"\\\"\")))", "((org.ikasan.error.reporting.model.ErrorOccurrence) (errorOccurrence)).getErrorMessage().length()", "((org.ikasan.error.reporting.model.ErrorOccurrence) (errorOccurrence)).getErrorMessage().replaceAll(\"\\\"\", \"\\\"\\\"\").substring(int,int)", "java.lang.StringBuffer.append(java.lang.String)", "java.lang.Object.getErrorMessage()", "((org.ikasan.error.reporting.model.ErrorOccurrence) (errorOccurrence)).getErrorMessage().replaceAll(java.lang.String,java.lang.String)", "java.lang.Object.getErrorMessage()", "java.lang.Object.getErrorMessage()", "((org.ikasan.error.reporting.model.ErrorOccurrence) (errorOccurrence)).getErrorMessage().replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "960deca479ef631e6d0e0e193ee9694a2ef5f494", "Url": "https://api.github.com/repos/ikasanEIP/ikasan", "Date": "2016-07-24T17:42:39Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cache.createEntry(CACHE_ENUM.USERNAME, sid).getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cn.godzilla.common.StringUtil.isEmpty(userName)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5736/buggy-version/godzilla-service.src.main.java.cn.godzilla.service.impl.UserServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "4139943d34cf398ec6471394184c1b741eb7ce37", "Url": "https://api.github.com/repos/mauersu/godzilla", "Date": "2015-07-23T11:00:13Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value != null) { cache.put(((K) (key)), value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2915/buggy-version/imcache.src.main.java.com.cetsoft.imcache.cache.heap.HeapCache.java", "BodyUseAPI": ["java.util.Map<K, V>.put(java.lang.Object,V)"], "Fixed commit": "b884e54e895053f1811772c01f5dcb9c82b5d50d", "Url": "https://api.github.com/repos/Cetsoft/imcache", "Date": "2014-05-22T08:00:35Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value != null) { put(((K) (key)), value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2915/buggy-version/imcache.src.main.java.com.cetsoft.imcache.cache.heap.ConcurrentHeapCache.java", "BodyUseAPI": ["com.cetsoft.imcache.cache.heap.ConcurrentHeapCache<K, V>.ConcurrentLimitedHashMap.put(java.lang.Object,V)"], "Fixed commit": "b884e54e895053f1811772c01f5dcb9c82b5d50d", "Url": "https://api.github.com/repos/Cetsoft/imcache", "Date": "2014-05-22T08:00:35Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.qfox.jestful.client.redirect.Redirects.match(org.qfox.jestful.core.Action,boolean,java.lang.Object,java.lang.Exception)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (redirect.permanent(action, (exception != null), result, exception)) { org.qfox.jestful.client.redirect.Redirection source = new org.qfox.jestful.client.redirect.Redirection(action.getRestful().getMethod(), action.getURL()); recorder.put(source, target); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6706/buggy-version/jestful-client.src.main.java.org.qfox.jestful.client.redirect.Redirector.java", "BodyUseAPI": ["org.qfox.jestful.core.Action.getURL()", "action.getRestful().getMethod()", "org.qfox.jestful.core.Action.getRestful()"], "Fixed commit": "4fd4ff452e4eb2fcb737b29d2f5044e820e46443", "Url": "https://api.github.com/repos/core-lib/jestful", "Date": "2017-11-23T05:25:20Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.qfox.jestful.client.redirect.Redirects.match(org.qfox.jestful.core.Action,boolean,java.lang.Object,java.lang.Exception)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (redirect.permanent(action, thrown, result, exception)) { org.qfox.jestful.client.redirect.Redirection source = new org.qfox.jestful.client.redirect.Redirection(action.getRestful().getMethod(), action.getURL()); recorder.put(source, target); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6706/buggy-version/jestful-client.src.main.java.org.qfox.jestful.client.redirect.Redirector.java", "BodyUseAPI": ["action.getRestful().getMethod()", "org.qfox.jestful.core.Action.getRestful()", "org.qfox.jestful.core.Action.getURL()"], "Fixed commit": "4fd4ff452e4eb2fcb737b29d2f5044e820e46443", "Url": "https://api.github.com/repos/core-lib/jestful", "Date": "2017-11-23T05:25:20Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.keySet()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((keySet != null) && (!(keySet.isEmpty()))) { sortedKeys.addAll(keySet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4232/buggy-version/xcore-library.xcore.src.main.java.by.istin.android.xcore.source.DataSourceRequest.java", "BodyUseAPI": ["java.util.List<java.lang.String>.addAll(java.util.Set<java.lang.String>)"], "Fixed commit": "250f1da5223330f4a26f73bed9ffdbc241d62ff0", "Url": "https://api.github.com/repos/IstiN/android_xcore", "Date": "2015-03-09T07:46:25Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.attr(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == src) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3111/buggy-version/src.cn.fh.imagefetcher.ImageFetcher.java", "BodyUseAPI": [], "Fixed commit": "78f8f83bce9409bbe4aa5b3cd1a9956c4de99389", "Url": "https://api.github.com/repos/wanghongfei/image-fetcher", "Date": "2014-12-25T15:11:11Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((igsn != null) && (!(igsn.isEmpty()))) { predicates.add(criteriaBuilder.like(criteriaBuilder.upper(from.get(\"igsn\")), ((\"%\" + (igsn.toUpperCase())) + \"%\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7560/buggy-version/src.main.java.org.csiro.rockstore.entity.service.SubCollectionEntityService.java", "BodyUseAPI": ["java.util.List<javax.persistence.criteria.Predicate>.add(criteriaBuilder.like(criteriaBuilder.upper(from.get(\"igsn\")), ((\"%\" + (igsn.toUpperCase())) + \"%\")))", "javax.persistence.criteria.CriteriaBuilder.like(criteriaBuilder.upper(from.get(\"igsn\")),java.lang.String)", "java.lang.String.toUpperCase()"], "Fixed commit": "e10c187974a27fdad7da51c55871a63f1e35ecc2", "Url": "https://api.github.com/repos/AuScope/rockstore", "Date": "2015-09-21T01:57:24Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getItem()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8302/buggy-version/FlagsVehicle.src.alshain01.FlagsVehicle.FlagsVehicle.java", "BodyUseAPI": [], "Fixed commit": "7c30e9650d3a045227b1d233206cbe03f2c69cc6", "Url": "https://api.github.com/repos/Alshain01/FlagsVehicle", "Date": "2013-11-16T21:58:48Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((operands.get(((operands.size()) - 1)).getTextRange().getEndOffset()) < (getTextRange().getEndOffset())) { descriptors.add(new com.intellij.lang.folding.FoldingDescriptor(element.getNode(), com.intellij.openapi.util.TextRange.create(operands.get(((operands.size()) - 1)).getTextRange().getEndOffset(), getTextRange().getEndOffset()), group) { @org.jetbrains.annotations.Nullable @java.lang.Override public java.lang.String getPlaceholderText() { return \")\"; } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/828/buggy-version/src.com.intellij.advancedExpressionFolding.Function.java", "BodyUseAPI": ["java.util.List<com.intellij.advancedExpressionFolding.Expression>.size()", "operands.get(((operands.size()) - 1)).getTextRange()", "java.util.ArrayList<com.intellij.lang.folding.FoldingDescriptor>.add(com.intellij.lang.folding.FoldingDescriptor)", "java.util.List<com.intellij.advancedExpressionFolding.Expression>.get(((operands.size()) - 1))", "com.intellij.openapi.util.TextRange.create(operands.get(((operands.size()) - 1)).getTextRange().getEndOffset(),getTextRange().getEndOffset())", "operands.get(((operands.size()) - 1)).getTextRange().getEndOffset()"], "Fixed commit": "6c00872bf306cf61832ef136ea375dddfa771b47", "Url": "https://api.github.com/repos/cheptsov/AdvancedExpressionFolding", "Date": "2017-03-28T11:41:59Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ss.length) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2323/buggy-version/src.com.rcgreed.yaml.node.ScalarNode.java", "BodyUseAPI": [], "Fixed commit": "1d20fb419abf313302854ddd5558f062fc97ad78", "Url": "https://api.github.com/repos/liangx8/jyaml", "Date": "2016-11-29T07:17:50Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.turnIndicator) == 2) { this.turnNumber += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5537/buggy-version/src.foogame.TPSInput.java", "BodyUseAPI": [], "Fixed commit": "52dca12240e1465d4f0a33feddea8112d255d5b1", "Url": "https://api.github.com/repos/raptortech-js/Tak-AI", "Date": "2017-01-17T21:27:17Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.inUnaryMinus) { text = \"-\" + text; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5867/buggy-version/translator.src.main.java.de.prob.translator.TranslatingVisitor.java", "BodyUseAPI": [], "Fixed commit": "5515ef6f1e67f5552484cddf238e55037fcfba46", "Url": "https://api.github.com/repos/bendisposto/probparsers", "Date": "2015-04-13T14:59:52Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1082/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "7f7a5aef26262b1c9d635bedba65e16da10abac5", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:14:11Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1082/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "7f7a5aef26262b1c9d635bedba65e16da10abac5", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:14:11Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.mayo.cts2.framework.service.profile.valuesetdefinition.ResolvedValueSetResolutionEntityQuery.getResolvedValueSetResolutionEntityRestrictions()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((restrictions.getCodeSystemVersion()) != null) entityRestrictions.getCodeSystemVersions().add(restrictions.getCodeSystemVersion());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4212/buggy-version/src.main.java.edu.mayo.cts2.framework.plugin.service.lexevs.service.resolvedvalueset.LexEvsResolvedValueSetResolutionService.java", "BodyUseAPI": ["entityRestrictions.getCodeSystemVersions().add(restrictions.getCodeSystemVersion())", "edu.mayo.cts2.framework.service.command.restriction.ResolvedValueSetResolutionEntityRestrictions.getCodeSystemVersion()"], "Fixed commit": "2bfd9d35a1ba87cb67ef1b2dfcfe2fbf4d503769", "Url": "https://api.github.com/repos/NCIP/lexevs-service", "Date": "2016-08-09T22:12:16Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.matsim.api.core.v01.Id<org.matsim.lanes.data.Lane>, java.util.Set<org.matsim.api.core.v01.Id<org.matsim.api.core.v01.network.Link>>>.get(toLane.getLaneData().getId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (toLinks == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5864/buggy-version/matsim.src.main.java.org.matsim.core.mobsim.qsim.qnetsimengine.QLinkLanesImpl.java", "BodyUseAPI": [], "Fixed commit": "13e0a960a0477d34f0e5c53032a4888b4c8ae3a5", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2017-02-01T12:05:54Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.abhidsm.whoisnext.ContactList.getContactFromID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((contact.getDisplayName()) != null) this._contacts.add(contact);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4381/buggy-version/src.com.abhidsm.whoisnext.ContactList.java", "BodyUseAPI": ["java.util.List<com.abhidsm.whoisnext.Contact>.add(com.abhidsm.whoisnext.Contact)"], "Fixed commit": "2a916fdca9b5ffaf1d216f9497997e35cc4a7f87", "Url": "https://api.github.com/repos/abhidsm/who-is-next", "Date": "2012-05-31T18:05:02Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (newText != null) newText = newText.substring(0, java.lang.Math.min(newText.length(), 512));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8421/buggy-version/requests.replace.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.Math.min(int,int)", "java.lang.String.length()"], "Fixed commit": "5a25033f38334dca66330ef448c63d067aa94db2", "Url": "https://api.github.com/repos/jonathanpullano/LSI-Awesomeness", "Date": "2012-03-30T22:26:22Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["es.udc.cartolab.gvsig.elle.utils.ELLEMap.getOverviewLayer(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (overviewLayer != null) { java.lang.String where = constantsPanel.buildWhereForProvinciasLoc(); overviewLayer.setWhere(where); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/9180/buggy-version/es.icarto.gvsig.siga.src.es.udc.cartolab.gvsig.elle.gui.wizard.load.LoadConstantsWizardComponent.java", "BodyUseAPI": ["es.udc.cartolab.gvsig.elle.gui.wizard.save.LayerProperties.setWhere(java.lang.String)"], "Fixed commit": "40c2fe78f10196f92956f6992aecb15db30e1614", "Url": "https://api.github.com/repos/iCarto/siga", "Date": "2015-10-08T16:33:36Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type == (java.lang.Integer.class)) { editor.putInt(name, ((java.lang.Integer) (field.get(this)))); }else if (type == (int.class)) { editor.putInt(name, field.getInt(this)); }else if (type == (java.lang.Float.class)) { editor.putFloat(name, ((java.lang.Float) (field.get(this)))); }else if (type == (float.class)) { editor.putFloat(name, field.getFloat(this)); }else if (type == (java.lang.Boolean.class)) { editor.putBoolean(name, ((java.lang.Boolean) (field.get(this)))); }else if (type == (boolean.class)) { editor.putBoolean(name, field.getBoolean(this)); }else if (type == (java.lang.Long.class)) { editor.putLong(name, ((java.lang.Long) (field.get(this)))); }else if (type == (long.class)) { editor.putLong(name, field.getLong(this)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3740/buggy-version/Aretha.src.com.aretha.content.config.PersistentConfig.java", "BodyUseAPI": [], "Fixed commit": "d5e96e3c94201f3e4ef62446c68fc5688573eb1f", "Url": "https://api.github.com/repos/TangKe/Aretha", "Date": "2014-08-29T02:22:52Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(m_Channels.isEmpty())) && (numberOfStepsToRemove <= (m_Channels.get(0).GetNumberOfSteps()))) { for (int i = 0; i < (m_Channels.size()); i++) { m_Channels.get(i).ResizeBy((-numberOfStepsToRemove)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4085/buggy-version/src.kvhc.player.Song.java", "BodyUseAPI": ["m_Channels.get(i).ResizeBy(int)", "java.util.ArrayList<kvhc.player.Channel>.size()", "java.util.ArrayList<kvhc.player.Channel>.get(int)"], "Fixed commit": "3b54defa42290d334c44e9335419678ef2bc8c2f", "Url": "https://api.github.com/repos/KVHC/adrumdrum", "Date": "2012-10-10T18:09:03Z"},
{"Line": "=>2082", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m.isBridge()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5231/buggy-version/zkbind.src.org.zkoss.bind.impl.BinderImpl.java", "BodyUseAPI": [], "Fixed commit": "c5946b61884f6b7da60e758e0359827f58263a2d", "Url": "https://api.github.com/repos/shenliow/zk", "Date": "2016-09-08T08:58:01Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mobi.wiegandtech.countingtheomer.WidgetMain.getDayOfOmer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dayOfOmer == 0) && ((java.util.Calendar.getInstance().get(java.util.Calendar.HOUR_OF_DAY)) < 16)) return \"Tonight is the first day of the omer.\"; else return (\"Last night / today is day \" + (dayOfOmer - 1)) + \" of the omer.\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/9085/buggy-version/src.mobi.wiegandtech.countingtheomer.WidgetMain.java", "BodyUseAPI": [], "Fixed commit": "4be86276aa7a642612fa6e84063672a9f85f8662", "Url": "https://api.github.com/repos/cdwiegand/Counting-the-Omer", "Date": "2011-04-20T14:29:53Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 0) { newargs = new java.lang.String[0]; }else { newargs = new java.lang.String[(args.length) - 1]; for (int i = 1; i <= (newargs.length); i++) { newargs[(i - 1)] = args[i]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5434/buggy-version/src.main.java.com.greatmancode.craftconomy3.commands.BukkitCommandManager.java", "BodyUseAPI": [], "Fixed commit": "37751590eb32e80635b735d84d8c8a548d771ef1", "Url": "https://api.github.com/repos/greatman/craftconomy3", "Date": "2012-08-10T18:49:51Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length()) == 0) { newargs = new java.lang.String[0]; }else { newargs = new java.lang.String[(args.length()) - 1]; for (int i = 1; i <= (newargs.length); i++) { newargs[(i - 1)] = args.getString(i); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5434/buggy-version/src.main.java.com.greatmancode.craftconomy3.commands.SpoutCommandManager.java", "BodyUseAPI": ["org.spout.api.command.CommandContext.length()", "org.spout.api.command.CommandContext.getString(int)"], "Fixed commit": "37751590eb32e80635b735d84d8c8a548d771ef1", "Url": "https://api.github.com/repos/greatman/craftconomy3", "Date": "2012-08-10T18:49:51Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapter) == null) { typical_if.android.fragment.FragmentWall.wallListView.setOnScrollListener(pauseOnScrollListener); adapter = new typical_if.android.adapter.WallAdapter(wall, inflater, fragmentManager, postColor, typical_if.android.fragment.FragmentWall.isSuggested); typical_if.android.fragment.FragmentWall.wallListView.setAdapter(adapter); }else { adapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8730/buggy-version/app.src.main.java.typical_if.android.fragment.FragmentWall.java", "BodyUseAPI": [], "Fixed commit": "684150751e673b14a249050c98a8b07e737a67a4", "Url": "https://api.github.com/repos/stan-ko/Typical_IF", "Date": "2014-09-10T15:36:20Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN_MR2)) { if (activity.isDestroyed()) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1898/buggy-version/common-utils.src.main.java.com.thapovan.android.commonutils.dialog.DialogUtil.java", "BodyUseAPI": [], "Fixed commit": "dfaf933d8acd227a2465a33721eb7513c2bfb501", "Url": "https://api.github.com/repos/thapovan-inc/android-modules", "Date": "2017-08-21T07:10:35Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((moreFilterPanel.getElement().getStyle().getDisplay().equalsIgnoreCase(\"block\")) && (isClickOnMoreFilter)) { moreFilterPanel.getElement().getStyle().setDisplay(Display.BLOCK); isClickOnMoreFilter = false; }else { moreFilterPanel.getElement().getStyle().setDisplay(Display.NONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4305/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.gsearch.SearchAbstractView.java", "BodyUseAPI": ["moreFilterPanel.getElement().getStyle().setDisplay(Display.NONE)", "moreFilterPanel.getElement().getStyle()", "org.ednovo.gooru.client.uc.HTMLEventPanel.getElement()", "org.ednovo.gooru.client.uc.HTMLEventPanel.getElement()", "moreFilterPanel.getElement().getStyle().setDisplay(Display.BLOCK)", "moreFilterPanel.getElement().getStyle()"], "Fixed commit": "97af0102652071aa234f394f0b46ef36cfa8be4c", "Url": "https://api.github.com/repos/mitraj/Gooru-Web", "Date": "2015-04-27T04:40:50Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isOnTrackerScreen()) imagesToUse.get(i).setVisible(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6589/buggy-version/src.TwoPanelTracker.java", "BodyUseAPI": [], "Fixed commit": "3133f0f3ab54ca83ffbc372acee383263ed08bde", "Url": "https://api.github.com/repos/xaelleone/reconnaissance-expert", "Date": "2016-03-17T20:31:10Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cs.hasPermission(\"points.admin\"))) { cs.sendMessage(((org.bukkit.ChatColor.RED) + \"You don't have permission to to that!\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4918/buggy-version/src.com.pvminecraft.points.commands.PointsCommand.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage(((org.bukkit.ChatColor.RED) + \"You don't have permission to to that!\"))"], "Fixed commit": "7fdd6d3d3352b049b739588cb092bd399f14c4c5", "Url": "https://api.github.com/repos/thisismichaelsmithsgithub/Points", "Date": "2011-12-04T01:51:25Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((action.equalsIgnoreCase(\"?\")) || (action.equalsIgnoreCase(\"help\"))) { showHelp(player); return true; }else if (action.equalsIgnoreCase(\"find\")) player.setCompassTarget(player.getLocation().getWorld().getSpawnLocation());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4918/buggy-version/src.com.pvminecraft.points.commands.WarpCommand.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "7fdd6d3d3352b049b739588cb092bd399f14c4c5", "Url": "https://api.github.com/repos/thisismichaelsmithsgithub/Points", "Date": "2011-12-04T01:51:25Z"},
{"Line": "=>1535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.lang.reflect.Modifier.isPublic(defaultConstructor.getModifiers()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2409/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory.java", "BodyUseAPI": [], "Fixed commit": "846bc1dd515f00df919740f513910fa1fa11c024", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-10-22T01:41:35Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Long, com.sangcomz.fishbun.bean.Album>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (allAlbum != null) { allAlbum.counter = totalCounter; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2296/buggy-version/FishBun.src.main.java.com.sangcomz.fishbun.ui.album.AlbumController.java", "BodyUseAPI": [], "Fixed commit": "98772507e604b012672ec6107eced2c18c8a0a3b", "Url": "https://api.github.com/repos/sangcomz/FishBun", "Date": "2017-06-18T15:16:58Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (language != null) { return callBackend((((((((((fremeNerEndpoint) + \"/datasets?format=\") + format) + \"&name=\") + name) + \"&description=\") + (java.net.URLEncoder.encode(description, \"UTF-8\"))) + \"&language=\") + language), HttpMethod.POST, nifParameters.getInput()); }else { return callBackend((((((((fremeNerEndpoint) + \"/datasets?format=\") + format) + \"&name=\") + name) + \"&description=\") + (java.net.URLEncoder.encode(description, \"UTF-8\"))), HttpMethod.POST, nifParameters.getInput()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1886/buggy-version/src.main.java.eu.freme.broker.eservices.FremeNER.java", "BodyUseAPI": ["eu.freme.broker.eservices.FremeNER.callBackend(java.lang.String,HttpMethod.POST,nifParameters.getInput())"], "Fixed commit": "f23027a40ea8096e363e198124b5d5c141e4c1db", "Url": "https://api.github.com/repos/freme-project/Broker", "Date": "2016-02-16T12:42:59Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (language != null) { if (!(SUPPORTED_LANGUAGES.contains(language))) { throw new eu.freme.broker.exception.BadRequestException(\"Unsupported language.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1886/buggy-version/src.main.java.eu.freme.broker.eservices.FremeNER.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.contains(java.lang.String)"], "Fixed commit": "f23027a40ea8096e363e198124b5d5c141e4c1db", "Url": "https://api.github.com/repos/freme-project/Broker", "Date": "2016-02-16T12:42:59Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((memoryEncounters[playerID]) == 1) { action = 1; }else { action = memory[playerID][0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2251/buggy-version/src.Agent.java", "BodyUseAPI": [], "Fixed commit": "91036250a5cf76752947d8a4792c28e71ef03d18", "Url": "https://api.github.com/repos/CC007/KAT-hwset-4", "Date": "2014-09-29T12:40:28Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (strategy.equals(\"ALL-C\")) { action = 1; }else if (strategy.equals(\"JOSS\")) { if ((r.nextInt(10)) == 0) { action = -1; }else if ((memoryEncounters[playerID]) == 1) { action = 1; }else { action = memory[playerID][0]; } }else if (strategy.equals(\"RANDOM\")) { if ((memoryEncounters[playerID]) == 1) { action = -1; }else if ((memory[playerID][0]) == 1) { if ((memoryEncounters[playerID]) < 4) { action = 1; }else if (((memoryOwnActions[playerID][0]) == (-1)) || ((memoryOwnActions[playerID][1]) == (-1))) { action = 1; }else { action = -1; } }else { action = memory[playerID][0]; } }else if (strategy.equals(\"RANDOM\")) { action = (r.nextBoolean()) ? 1 : -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2251/buggy-version/src.Agent.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "91036250a5cf76752947d8a4792c28e71ef03d18", "Url": "https://api.github.com/repos/CC007/KAT-hwset-4", "Date": "2014-09-29T12:40:28Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (0 != (cursor.getCount())) { cursor.moveToFirst(); account = new com.adrianodigiovanni.dailywifi.Account(cursor.getInt(cursor.getColumnIndexOrThrow(AccountsTable.COLUMN_ID)), cursor.getString(cursor.getColumnIndexOrThrow(AccountsTable.COLUMN_SSID)), cursor.getString(cursor.getColumnIndexOrThrow(AccountsTable.COLUMN_USERNAME)), cursor.getString(cursor.getColumnIndexOrThrow(AccountsTable.COLUMN_PASSWORD)), cursor.getInt(cursor.getColumnIndexOrThrow(AccountsTable.COLUMN_IS_COMPATIBLE)), cursor.getInt(cursor.getColumnIndexOrThrow(AccountsTable.COLUMN_IS_VALID))); cursor.close(); android.util.Log.d(com.adrianodigiovanni.dailywifi.Account.DEBUG_TAG, (\"Account found: \" + (account.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8272/buggy-version/src.com.adrianodigiovanni.dailywifi.Account.java", "BodyUseAPI": ["android.database.Cursor.getColumnIndexOrThrow(AccountsTable.COLUMN_USERNAME)", "android.database.Cursor.getString(cursor.getColumnIndexOrThrow(AccountsTable.COLUMN_SSID))", "android.database.Cursor.getColumnIndexOrThrow(AccountsTable.COLUMN_IS_COMPATIBLE)", "android.database.Cursor.getColumnIndexOrThrow(AccountsTable.COLUMN_SSID)", "android.database.Cursor.close()", "android.database.Cursor.moveToFirst()", "android.database.Cursor.getInt(cursor.getColumnIndexOrThrow(AccountsTable.COLUMN_IS_COMPATIBLE))", "android.database.Cursor.getString(cursor.getColumnIndexOrThrow(AccountsTable.COLUMN_USERNAME))", "android.database.Cursor.getString(cursor.getColumnIndexOrThrow(AccountsTable.COLUMN_PASSWORD))", "android.database.Cursor.getColumnIndexOrThrow(AccountsTable.COLUMN_IS_VALID)", "android.database.Cursor.getInt(cursor.getColumnIndexOrThrow(AccountsTable.COLUMN_ID))", "android.database.Cursor.getColumnIndexOrThrow(AccountsTable.COLUMN_ID)", "android.database.Cursor.getColumnIndexOrThrow(AccountsTable.COLUMN_PASSWORD)", "android.database.Cursor.getInt(cursor.getColumnIndexOrThrow(AccountsTable.COLUMN_IS_VALID))"], "Fixed commit": "3bd2a0e0e8b29798e3a0a1289f955d859b2563eb", "Url": "https://api.github.com/repos/adriano-di-giovanni/dailywifi-android", "Date": "2013-06-26T17:25:26Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((sb.length()) > 0) && ((sb.charAt(((sb.length()) - 1))) == ',')) { sb.deleteCharAt(((sb.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2214/buggy-version/src.main.java.com.guhanjie.service.OrderService.java", "BodyUseAPI": ["java.lang.StringBuilder.length()", "java.lang.StringBuilder.deleteCharAt(int)"], "Fixed commit": "fee494d9769c180ff6565f0927898b4a446af2f5", "Url": "https://api.github.com/repos/guhanjie/weixin-boot", "Date": "2016-10-11T16:38:02Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<structure.Terme>.indexOf(structure.Terme)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (index != (-1)) liste.add(liste.get(index)); else liste.add(t.clone());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7372/buggy-version/src.structure.Atome.java", "BodyUseAPI": ["java.util.ArrayList<structure.Terme>.get(int)", "java.util.ArrayList<structure.Terme>.add(liste.get(index))"], "Fixed commit": "e34242a24090d0ed3f1c478398fe13f348898a6a", "Url": "https://api.github.com/repos/sipi/N2P", "Date": "2011-11-09T15:08:34Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((feed.items) != null) { for (com.jukkanikki.plainrssreader.model.FeedItem item : feed.getItems()) { com.jukkanikki.plainrssreader.util.DbUtil.addArticle(db, item.getGuid(), item.getTitle(), item.getPubDate(), item.getLink(), item.getContent()); } android.util.Log.d(com.jukkanikki.plainrssreader.util.DbUtil.TAG, \"written articles to db\"); }else { android.util.Log.d(com.jukkanikki.plainrssreader.util.DbUtil.TAG, \"Nothing to be written\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8774/buggy-version/app.src.main.java.com.jukkanikki.plainrssreader.util.DbUtil.java", "BodyUseAPI": ["com.jukkanikki.plainrssreader.model.FeedWrapper.getItems()"], "Fixed commit": "b8915b57584ec3e34bc9715b3ae58fc8630a0908", "Url": "https://api.github.com/repos/nikkijuk/PlainRssReader", "Date": "2017-11-01T12:21:14Z"},
{"Line": "=>641", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (updateSyntaxHighlightingEDTidle) { updateSyntaxHighlightingEDTidle = false; javax.swing.SwingUtilities.invokeLater(new java.lang.Runnable() { public void run() { try { performSyntaxHighlighting(force); updateSyntaxHighlightingEDTidle = true; } catch (javax.swing.text.BadLocationException e) { e.printStackTrace(); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1665/buggy-version/robocode.ui.editor.src.main.java.net.sf.robocode.ui.editor.JavaDocument.java", "BodyUseAPI": [], "Fixed commit": "908dfbc72bd1b67cc03ac8902ef33379d70967ed", "Url": "https://api.github.com/repos/robo-code/robocode", "Date": "2013-07-16T22:32:04Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.alarm.isActivated())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6175/buggy-version/application.src.se.toxbee.sleepfighter.activity.AlarmActivity.java", "BodyUseAPI": [], "Fixed commit": "9f9d940ef97623afcabb3f541d9680a414249a80", "Url": "https://api.github.com/repos/Hasselmannen/sleepfighter", "Date": "2013-11-18T02:04:14Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isCovered(indexMatch, operator, condition.getLeft(), condition.getRight())) || (isCovered(indexMatch, operator, condition.getRight(), condition.getLeft()))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3978/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.filter.OFilterOptimizer.java", "BodyUseAPI": [], "Fixed commit": "32684bd05e8b29e5d08f64fec48c24667dce80ca", "Url": "https://api.github.com/repos/mcculls/orientdb", "Date": "2015-10-08T15:03:04Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((labelKeyUpHandler) != null) { labelKeyUpHandler.removeHandler(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8931/buggy-version/server.src.main.java.org.activityinfo.ui.client.component.formdesigner.properties.PropertiesPresenter.java", "BodyUseAPI": [], "Fixed commit": "463338f530072ce382a192f2fe4c41e36aa2d0f3", "Url": "https://api.github.com/repos/bedatadriven/activityinfo", "Date": "2014-07-11T11:43:23Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((-128) <= value) && (value <= 128)) { return cmu.conditional.One.IntegerCache.cache[(value + 128)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4333/buggy-version/VarexJ.src.main.cmu.conditional.One.java", "BodyUseAPI": [], "Fixed commit": "2773865ebe955046519eac8ba70502f6493cf0c1", "Url": "https://api.github.com/repos/meinicke/VarexJ", "Date": "2015-12-10T10:24:17Z"},
{"Line": "=>933", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p instanceof org.getspout.spoutapi.player.SpoutPlayer) ((org.getspout.spoutapi.player.SpoutPlayer) (p)).sendPacket(new org.getspout.spoutapi.packet.PacketSkinURL(getEntityId(), getSkin(((org.getspout.spoutapi.player.SpoutPlayer) (p)))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3245/buggy-version/src.org.getspout.spout.player.SpoutCraftPlayer.java", "BodyUseAPI": [], "Fixed commit": "73ad73f76f17cfe48dff23b36dcc726c3875cfcd", "Url": "https://api.github.com/repos/SpoutDev/Spout", "Date": "2011-12-08T12:24:51Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ica.LB.LbManager.getSaved()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (saved != null) showBattle(saved.getBattle(), saved.getScenario());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2847/buggy-version/src.ica.LB.MainActivity.java", "BodyUseAPI": ["ica.LB.MainActivity.showBattle(saved.getBattle(),saved.getScenario())", "ica.LB.Game.getScenario()", "ica.LB.Game.getBattle()"], "Fixed commit": "6d4c7d3cb82a0df6c3165a88cbf93edfe034657b", "Url": "https://api.github.com/repos/heatmiser328/LB", "Date": "2014-07-26T00:01:11Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) != null) { player.stop(); player.release(); player = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2847/buggy-version/src.ica.LB.Helpers.PlayAudio.java", "BodyUseAPI": [], "Fixed commit": "6d4c7d3cb82a0df6c3165a88cbf93edfe034657b", "Url": "https://api.github.com/repos/heatmiser328/LB", "Date": "2014-07-26T00:01:11Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.contains(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isGenericField) { adapterName = java.lang.String.format(\"new com.google.gson.reflect.TypeToken<%s>(){}\", gsonMethodType); }else { adapterName = gsonMethodType + \".class\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1028/buggy-version/gsonpath-compiler.src.main.java.gsonpath.generator.AutoGsonAdapterGenerator.java", "BodyUseAPI": [], "Fixed commit": "5e377b4054294ab5cd63d52a6543eea4ee5effad", "Url": "https://api.github.com/repos/LachlanMcKee/gsonpath", "Date": "2016-04-15T13:44:52Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mesfavoris.model.Bookmark.getPropertyValue(Bookmark.PROPERTY_COMMENT)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (comment == null) { comment = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7624/buggy-version/bundles.mesfavoris.src.mesfavoris.internal.views.comment.BookmarkCommentArea.java", "BodyUseAPI": [], "Fixed commit": "8244009fbd3b09ea0796c93433091ac1855cef85", "Url": "https://api.github.com/repos/cchabanois/mesfavoris", "Date": "2016-09-11T13:01:47Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dataSnapshot.getValue()) != null) { strUserCode = dataSnapshot.getValue().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6994/buggy-version/app.src.main.java.com.justorder.justordermanagement.ActivationActivity.java", "BodyUseAPI": ["com.google.firebase.database.DataSnapshot.getValue()", "dataSnapshot.getValue().toString()"], "Fixed commit": "029d7d4010c59f8c5e8b7298dbee128d1092a995", "Url": "https://api.github.com/repos/UmarZaii/JustOrderManagement", "Date": "2017-06-13T07:38:58Z"},
{"Line": "=>664", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (off > 0) { if (len > (m_Buffer.length)) len = m_Buffer.length; n = jtermios.JTermios.read(m_FD, m_Buffer, len); if (n > 0) java.lang.System.arraycopy(m_Buffer, 0, b, off, n); }else n = jtermios.JTermios.read(m_FD, b, len);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1683/buggy-version/src.purejavacomm.PureJavaSerialPort.java", "BodyUseAPI": ["java.lang.System.arraycopy(byte[],int,byte[],int,int)"], "Fixed commit": "0e5a6a9cb7a1e81adc271a1304d1f58398dfef8e", "Url": "https://api.github.com/repos/nyholku/purejavacomm", "Date": "2011-04-20T06:14:18Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5636/buggy-version/JavaLib.src.com.punchline.javalib.entities.components.generic.Health.java", "BodyUseAPI": [], "Fixed commit": "d87b0a81a2c7e01222dd80c421fa965eb484c5e6", "Url": "https://api.github.com/repos/PunchlineGames/JavaLib", "Date": "2013-09-11T19:24:43Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.equals(\"private Marker line = new Marker();\")) content.append(\"private String folderName = \\\"\").append(\"/tmp/java/INRecharge\\\";\").append(\"\\n\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2219/buggy-version/compiler.src.main.java.com.flytxt.compiler.Utils.java", "BodyUseAPI": [], "Fixed commit": "ff2acfe3d87d181a6e3870ed56726fc3d0432530", "Url": "https://api.github.com/repos/arunsoman/text-processor", "Date": "2016-10-20T08:18:39Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cmu.banana.classdiscuz.ws.remote.BackendConnector.regOrDropCourse(int,course.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ret < 0) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2206/buggy-version/app.src.main.java.cmu.banana.classdiscuz.ws.local.DatabaseHelper.java", "BodyUseAPI": [], "Fixed commit": "facfa0b5e718a368d5cb0d7a1e0c6a77812cffec", "Url": "https://api.github.com/repos/kewu1992/ClassDiscuz", "Date": "2015-12-07T07:16:23Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hasOpened) == false) { java.io.BufferedWriter out = new java.io.BufferedWriter(new java.io.FileWriter(save.getSelectedFile().getPath())); java.lang.String str = notepadWindow.getTextArea().getText(); for (int i = 0; i < (str.length()); i++) { if ((str.charAt(i)) == '\\n') { out.newLine(); }else out.write(str.charAt(i)); } out.close(); }else { java.io.BufferedWriter out = new java.io.BufferedWriter(new java.io.FileWriter(path)); java.lang.String str = notepadWindow.getTextArea().getText(); for (int i = 0; i < (str.length()); i++) { if ((str.charAt(i)) == '\\n') { out.newLine(); }else out.write(str.charAt(i)); } out.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1078/buggy-version/Notepad18.src.notepad18.buttons.FileMenu.java", "BodyUseAPI": [], "Fixed commit": "5e58ad3f841cf945a3eaa119707382f095c190b1", "Url": "https://api.github.com/repos/splucs/Notepad18", "Date": "2016-04-25T06:08:58Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Throwable.getCause()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (cause instanceof cascading.flow.stream.TrapException) handleReThrowableException(\"unable to write trap data, will not trap, rethrowing\", cause);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3523/buggy-version/cascading-core.src.main.java.cascading.flow.stream.TrapHandler.java", "BodyUseAPI": ["cascading.flow.stream.TrapHandler.handleReThrowableException(java.lang.String,java.lang.Throwable)"], "Fixed commit": "f2b479b7e96e0e0e0f63a349a07185b41bd93b5e", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2015-03-20T19:59:05Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.dyingUnits.size()) == 0) return !(this.isInTactics);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5620/buggy-version/core.src.bunzosteele.heroesemblem.model.BattleState.java", "BodyUseAPI": [], "Fixed commit": "128464e9ad44db261044b15e1073c4a2588cbf5f", "Url": "https://api.github.com/repos/bunzosteele/HeroesEmblemJava", "Date": "2015-12-07T08:16:53Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.getRoot()) != null) { result.getRoot().accept(visitor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4108/buggy-version/maven-resolver-impl.src.main.java.org.eclipse.aether.internal.impl.DefaultRepositorySystem.java", "BodyUseAPI": ["result.getRoot().accept(org.eclipse.aether.graph.DependencyVisitor)", "org.eclipse.aether.resolution.DependencyResult.getRoot()"], "Fixed commit": "3fc53c052f538169cb7dc6aa9ed9052514b569ca", "Url": "https://api.github.com/repos/ChristianSchulte/maven-resolver", "Date": "2017-03-17T21:07:13Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (field.startsWith(\"c\")) { mpType = Milepost.Type.CITY; cityName = field.substring(1); }else { map.TrainMap.log.warn(\"Unknown milepost type {}\", field); throw new train.GameException(train.GameException.BAD_MAP_DATA); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4797/buggy-version/trainserver.src.map.TrainMap.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "4c7a24ca09b3b0dbeabc416f0cd15b55666c94c3", "Url": "https://api.github.com/repos/Elvara11/Train-Game-14", "Date": "2014-07-10T03:59:52Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["db.getCollection(\"users\").find(eq(\"user_id\", userId))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (iterable.first().containsKey(\"password\")) { if (password.equals(iterable.first().get(\"password\"))) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5218/buggy-version/src.db.mongodb.MongoDBConnection.java", "BodyUseAPI": ["java.lang.String.equals(iterable.first().get(\"password\"))", "iterable.first().get(java.lang.String)", "com.mongodb.client.FindIterable<org.bson.Document>.first()"], "Fixed commit": "31919f5b1086003752c26970a11db2c83056e00d", "Url": "https://api.github.com/repos/yufengyuanx/EventRecommendationSystem", "Date": "2017-12-18T09:03:18Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defaultModel) != null) { org.cqframework.cql.cql2elm.DataType modelResult = defaultModel.resolveTypeName(typeName); if (modelResult != null) { return modelResult; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1352/buggy-version/Src.java.cql-to-elm.src.main.java.org.cqframework.cql.cql2elm.LibraryBuilder.java", "BodyUseAPI": [], "Fixed commit": "f02397bad1bb8c3d1d569ae496fa33a8f624a262", "Url": "https://api.github.com/repos/cqframework/clinical_quality_language", "Date": "2017-01-02T21:21:30Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraftforge.common.ForgeVersion.getMinorVersion()) >= 13) { NameWakander.NameWakander.addFluid(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/234/buggy-version/java.NameWakander.NameWakander.java", "BodyUseAPI": [], "Fixed commit": "a7b44fbfeb0b4d89ebbddf438126794b5e4bb69e", "Url": "https://api.github.com/repos/aksource/NameWakander", "Date": "2015-02-15T12:32:11Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ttworkbench.play.parameters.ipv6.composer.CustomWidgetComposer.DEBUG) java.lang.System.out.println(((((((\"[widgetAct] \\\"\" + (this.widget.getName())) + \"\\\" registered widget \") + widget) + \" to \") + validator) + \".\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5499/buggy-version/ttworkbench.play.parameters.ipv6.src.ttworkbench.play.parameters.ipv6.composer.CustomWidgetComposer.java", "BodyUseAPI": [], "Fixed commit": "2c694aeb9c08212d55d8e9b649c6efb5ceca656c", "Url": "https://api.github.com/repos/TestingTechnologies/PlayCustomParameters", "Date": "2014-03-24T11:58:24Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ttworkbench.play.parameters.ipv6.composer.CustomWidgetComposer.DEBUG) java.lang.System.out.println(((((((\"[widgetMsg] \\\"\" + (this.widget.getName())) + \"\\\" registered widget \") + widget) + \" to \") + validator) + \".\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5499/buggy-version/ttworkbench.play.parameters.ipv6.src.ttworkbench.play.parameters.ipv6.composer.CustomWidgetComposer.java", "BodyUseAPI": [], "Fixed commit": "2c694aeb9c08212d55d8e9b649c6efb5ceca656c", "Url": "https://api.github.com/repos/TestingTechnologies/PlayCustomParameters", "Date": "2014-03-24T11:58:24Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ttworkbench.play.parameters.ipv6.composer.CustomWidgetComposer.DEBUG) java.lang.System.out.println(((((((\"[editorMsg] \\\"\" + (this.widget.getName())) + \"\\\" registered editor \") + editor) + \" to \") + validator) + \".\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5499/buggy-version/ttworkbench.play.parameters.ipv6.src.ttworkbench.play.parameters.ipv6.composer.CustomWidgetComposer.java", "BodyUseAPI": [], "Fixed commit": "2c694aeb9c08212d55d8e9b649c6efb5ceca656c", "Url": "https://api.github.com/repos/TestingTechnologies/PlayCustomParameters", "Date": "2014-03-24T11:58:24Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ttworkbench.play.parameters.ipv6.composer.CustomWidgetComposer.DEBUG) java.lang.System.out.println(((((((\"[editorAct] \\\"\" + (this.widget.getName())) + \"\\\" registered editor \") + editor) + \" to \") + validator) + \".\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5499/buggy-version/ttworkbench.play.parameters.ipv6.src.ttworkbench.play.parameters.ipv6.composer.CustomWidgetComposer.java", "BodyUseAPI": [], "Fixed commit": "2c694aeb9c08212d55d8e9b649c6efb5ceca656c", "Url": "https://api.github.com/repos/TestingTechnologies/PlayCustomParameters", "Date": "2014-03-24T11:58:24Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x > 0) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/370/buggy-version/src.cs175.hw4.snakes.Walls.java", "BodyUseAPI": [], "Fixed commit": "7f242b87fdcca59664982d50312313864dde3bbb", "Url": "https://api.github.com/repos/swathi-k/HW4version2", "Date": "2014-11-17T20:37:25Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(avatar)) { view.setImageDrawable(android.support.v4.content.ContextCompat.getDrawable(view.getContext(), R.drawable.ic_account_circle_black_36dp)); }else { com.bumptech.glide.Glide.with(view.getContext()).load(avatar).into(view); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1462/buggy-version/android.app.src.main.java.com.google.firebase.codelab.friendlychat.mvvm.ui.base.BindingAdapter.java", "BodyUseAPI": ["com.bumptech.glide.Glide.with(view.getContext()).load(avatar).into(de.hdodenhof.circleimageview.CircleImageView)", "com.bumptech.glide.Glide.with(view.getContext()).load(java.lang.String)"], "Fixed commit": "3697b3c702378bcbcea44f117f2b339d519cab63", "Url": "https://api.github.com/repos/letrungkien0210/friendlychat", "Date": "2016-06-19T10:34:07Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ss > speed) && (speed > 0)) { ss = speed; }else if (speed == 0) { dm[((int) (adj.x))][((int) (adj.y))] = -2; nl[index] = adj; index++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/165/buggy-version/ShadowCraft.src.game.PathFinding.java", "BodyUseAPI": [], "Fixed commit": "4b97358a2736f7ba49a97b603bc38e84355b0d9b", "Url": "https://api.github.com/repos/KosmicCO/Hackathon-7-17", "Date": "2016-07-18T04:24:41Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (entries == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/404/buggy-version/src.main.java.net.openhft.chronicle.core.io.IOTools.java", "BodyUseAPI": [], "Fixed commit": "03f5b09af51af0e77594b4d414ace306867c4f0c", "Url": "https://api.github.com/repos/scottkidder/Chronicle-Core", "Date": "2016-03-03T12:24:19Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastIndex) == 100) lastIndex = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7567/buggy-version/src.Swapping.NextFit.java", "BodyUseAPI": [], "Fixed commit": "908f5776c2b53b0da657491218fcf494d642316b", "Url": "https://api.github.com/repos/CS149-3/homework4", "Date": "2016-03-03T07:14:27Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (endPointUrl != null) { java.lang.System.out.println(endPointUrl); overrides.setProperty(Constants.PROPERTY_ENDPOINT, endPointUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2498/buggy-version/src.main.java.jenkins.plugins.jclouds.JCloudsCloud.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.util.Properties.setProperty(Constants.PROPERTY_ENDPOINT,java.lang.String)"], "Fixed commit": "9c40b2b5bea151a6095d63da5a5494d6f6143cce", "Url": "https://api.github.com/repos/abayer/jclouds-plugin", "Date": "2012-03-27T06:48:43Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (object == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3353/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.io.orc.OrcStruct.java", "BodyUseAPI": [], "Fixed commit": "57946ee95a3fcae4e1c005ba932e17656971c938", "Url": "https://api.github.com/repos/dianping/hive", "Date": "2014-05-16T08:57:50Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset >= (struct.fields.length)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3353/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.io.orc.OrcStruct.java", "BodyUseAPI": [], "Fixed commit": "57946ee95a3fcae4e1c005ba932e17656971c938", "Url": "https://api.github.com/repos/dianping/hive", "Date": "2014-05-16T08:57:50Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dir.exists())) { dir.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/547/buggy-version/src.com.afforess.minecartmaniacore.utils.ItemUtils.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "0490697cbc3f1e256512e6f17bd42b74aa38ae79", "Url": "https://api.github.com/repos/N3X15/MinecartMania", "Date": "2011-12-12T17:54:20Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (docMap.containsKey(docKey)) { int exist_id = docMap.get(docKey); com.mpetri.TikaLuceneWarc.Document exist_doc = reader.document(exist_id); java.lang.String edocID = exist_doc.get(com.mpetri.TikaLuceneWarc.TikaLuceneWarc.FIELD_ID); LOG.error((((((\"Docmap already contains key \" + docKey) + \" with value \") + exist_id) + \" instead of \") + i)); LOG.error((((((\"Docmap already contains key \" + docKey) + \" with warcId \") + docWarcId) + \" instead of \") + edocID)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1923/buggy-version/src.main.java.com.mpetri.TikaLuceneWarc.TikaLuceneWarc.java", "BodyUseAPI": ["com.mpetri.TikaLuceneWarc.Logger.error(java.lang.String)", "com.mpetri.TikaLuceneWarc.Logger.error(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Fixed commit": "f9aff96a9ee44fedda1697bbdbe0fed1baccc223", "Url": "https://api.github.com/repos/mpetri/TikaLuceneWarc", "Date": "2017-05-11T00:59:08Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pendingHandler.session) != null) { pendingHandler.session.sendResponse(pendingRes, pendingHandler.originalRequestId); }else { sendResponse(pendingRes, pendingHandler.originalRequestId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/586/buggy-version/Tetrapod-Core.src.io.tetrapod.core.Session.java", "BodyUseAPI": ["pendingHandler.session.sendResponse(io.tetrapod.core.Response,pendingHandler.originalRequestId)", "io.tetrapod.core.Session.4.sendResponse(io.tetrapod.core.Response,pendingHandler.originalRequestId)"], "Fixed commit": "8cbc2d5875f525503677f1cfe0b31fc95895b359", "Url": "https://api.github.com/repos/tetrapods/core", "Date": "2015-06-01T19:59:48Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newValue != null) { boolean overrideNavigationIcon = ((boolean) (newValue)); ((de.mrapp.android.preference.activity.PreferenceActivity) (getActivity())).overrideNavigationIcon(overrideNavigationIcon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6720/buggy-version/example.src.main.java.de.mrapp.android.preference.activity.example.fragment.BehaviorPreferenceFragment.java", "BodyUseAPI": [], "Fixed commit": "467ca98f747b3f794589608fbc2096f886c8cdd8", "Url": "https://api.github.com/repos/michael-rapp/AndroidPreferenceActivity", "Date": "2017-02-16T22:11:20Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newValue != null) { boolean hideNavigation = ((boolean) (newValue)); ((de.mrapp.android.preference.activity.PreferenceActivity) (getActivity())).hideNavigation(hideNavigation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6720/buggy-version/example.src.main.java.de.mrapp.android.preference.activity.example.fragment.BehaviorPreferenceFragment.java", "BodyUseAPI": [], "Fixed commit": "467ca98f747b3f794589608fbc2096f886c8cdd8", "Url": "https://api.github.com/repos/michael-rapp/AndroidPreferenceActivity", "Date": "2017-02-16T22:11:20Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(pd.noLocation)) { tempMD.setDistance(pd.getDistance()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1430/buggy-version/app.src.main.java.com.aoxo.meneleo.PartyDetailsActivity.java", "BodyUseAPI": ["com.aoxo.meneleo.MarkerData.setDistance(pd.getDistance())", "com.aoxo.meneleo.PartyData.getDistance()"], "Fixed commit": "490d17803dc0699cf422a35656468ceef1ab95f1", "Url": "https://api.github.com/repos/JustynianWalizka/Meneleo", "Date": "2017-03-26T17:06:50Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.KeyEvent.getKeyCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.awt.event.KeyEvent.getKeyText(keyCode)) == \"Down\") { if ((thisBoard.sleepTime) == 2) { thisBoard.sleepTime = 1; }else if ((thisBoard.sleepTime) != 1) { thisBoard.sleepTime = 2; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2317/buggy-version/Board.java", "BodyUseAPI": [], "Fixed commit": "680d8cd3643159d9c1be772ba2ed02a0fe1c0937", "Url": "https://api.github.com/repos/JackBDu/shades", "Date": "2015-04-21T06:43:01Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (nes != null) { if ((nes.nextEpisodeData) != null) { dbao.updateNextEpisodeData(show, nes.nextEpisodeData.nextepidate, nes.nextEpisodeData.nexteid); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/219/buggy-version/src.main.java.org.damcode.www.mytv.FtvHandler.java", "BodyUseAPI": ["org.damcode.www.mytv.db.myTvDBAO.updateNextEpisodeData(java.lang.String,nes.nextEpisodeData.nextepidate,nes.nextEpisodeData.nexteid)"], "Fixed commit": "07377256e78a7356712b3f33df43602e762c4915", "Url": "https://api.github.com/repos/danofa/myTv", "Date": "2015-07-08T13:16:36Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isExistingDynamicShortcut(id))) { reapShortcutsForDynamicAdd(); sm.addDynamicShortcuts(java.util.Collections.singletonList(sinfo)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/9082/buggy-version/app.src.main.java.com.limelight.utils.ShortcutHelper.java", "BodyUseAPI": [], "Fixed commit": "f0e85c4c537dc0f001a083a61c5529863e3ef48b", "Url": "https://api.github.com/repos/moonlight-stream/moonlight-android", "Date": "2016-11-06T07:43:18Z"},
{"Line": "=>614", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((details.pairState) == (com.limelight.nvstream.http.PairingManager.PairState.PAIRED)) { shortcutHelper.createAppViewShortcut(details.uuid.toString(), details); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/9082/buggy-version/app.src.main.java.com.limelight.PcView.java", "BodyUseAPI": ["com.limelight.utils.ShortcutHelper.createAppViewShortcut(details.uuid.toString(),com.limelight.nvstream.http.ComputerDetails)", "details.uuid.toString()"], "Fixed commit": "f0e85c4c537dc0f001a083a61c5529863e3ef48b", "Url": "https://api.github.com/repos/moonlight-stream/moonlight-android", "Date": "2016-11-06T07:43:18Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (diff != null) { export.addAll(diff.diffToLines()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7529/buggy-version/src.edu.washington.cs.dericp.diffutils.UnifiedDiff.java", "BodyUseAPI": ["java.util.List<java.lang.String>.addAll(diff.diffToLines())", "edu.washington.cs.dericp.diffutils.Diff.diffToLines()"], "Fixed commit": "3b915d0808b41eb36cd55ef59ea480d298ed907a", "Url": "https://api.github.com/repos/dericp/diff-utils", "Date": "2016-01-31T12:40:21Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<calendar.Month>.indexOf(calendar.getCurrentMonth())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (now == 0) { calendar.addPastMonths(1); now = months.indexOf(calendar.getCurrentMonth()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4992/buggy-version/src.calendarGUI.MonthViewController.java", "BodyUseAPI": [], "Fixed commit": "e894bf361ca207c43134e57c53b355d54852cf5e", "Url": "https://api.github.com/repos/johansme/Fellesprosjektet", "Date": "2015-03-05T08:39:54Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (returnType instanceof java.lang.reflect.ParameterizedType) { returnType = ((java.lang.reflect.ParameterizedType) (returnType)).getRawType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1552/buggy-version/ethereum-java-core.src.main.java.ethereumjava.Utils.java", "BodyUseAPI": [], "Fixed commit": "0f1819944e80938491cb2f61f271a9c7729ea5dd", "Url": "https://api.github.com/repos/sqli-nantes/deprecated-ethereum-java", "Date": "2016-10-31T08:11:21Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.sun.jna.Platform.isAIX()) { com.orientechnologies.common.log.OLogManager.instance().warn(com.orientechnologies.common.directmemory.ODirectMemoryFactory.class, \"System is running on AIX OS, automatically switch to usage of Unsafe class\"); needToUseUnsafe = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1180/buggy-version/core.src.main.java.com.orientechnologies.common.directmemory.ODirectMemoryFactory.java", "BodyUseAPI": [], "Fixed commit": "01aa9d1932d4b43327899b3d5e0219caf6fdfb1d", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-05-22T11:31:07Z"},
{"Line": "=>1416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zstack.storage.ceph.backup.CephBackupStorageVO.getFsid()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((org.zstack.core.db.Q.New(org.zstack.storage.ceph.primary.CephPrimaryStorageVO.class).eq(CephPrimaryStorageVO_.fsid, fsid).find()) == null) { dbf.removeByPrimaryKey(fsid, org.zstack.storage.ceph.backup.CephCapacityVO.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7997/buggy-version/plugin.ceph.src.main.java.org.zstack.storage.ceph.backup.CephBackupStorageBase.java", "BodyUseAPI": ["org.zstack.storage.ceph.backup.CephBackupStorageBase.removeByPrimaryKey(java.lang.String,java.lang.Class)"], "Fixed commit": "430e3c095151c69361d14cf29d41b04b82f4d214", "Url": "https://api.github.com/repos/MaJin1996/zstack", "Date": "2017-03-20T01:34:58Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getActivity().getSupportFragmentManager().findFragmentByTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (frag == null) { loading = new com.owncloud.android.ui.dialog.LoadingDialog(getResources().getString(R.string.wait_a_moment)); android.support.v4.app.FragmentManager fm = getActivity().getSupportFragmentManager(); android.support.v4.app.FragmentTransaction ft = fm.beginTransaction(); loading.show(ft, DIALOG_WAIT_TAG); }else { loading = ((com.owncloud.android.ui.dialog.LoadingDialog) (frag)); loading.setShowsDialog(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3832/buggy-version/src.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": [], "Fixed commit": "be5dbcbb2e5afef17d47b4cbbf9e0eb08de69da4", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2015-08-13T18:11:58Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.compiere.model.MUOMConversion.getProductRateFrom(getCtx(),component.getM_Product_ID(),bomline.getC_UOM_ID())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (rate == null) costPrice = costPrice.multiply(java.math.BigDecimal.ONE); else costPrice = costPrice.multiply(rate);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2531/buggy-version/src.main.java.base.org.eevolution.process.RollupBillOfMaterial.java", "BodyUseAPI": ["java.math.BigDecimal.multiply(java.math.BigDecimal)"], "Fixed commit": "d65c90ad53ae32b65ed12f059dbb639893aa20c0", "Url": "https://api.github.com/repos/adempiere/extension_libero_manufacturing", "Date": "2014-12-05T00:58:59Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (child instanceof gwt.material.design.client.ui.MaterialLink) { gwt.material.design.client.ui.MaterialLink link = ((gwt.material.design.client.ui.MaterialLink) (child)); for (int i = 0; i < (link.getWidgetCount()); i++) { if ((link.getWidget(i)) instanceof gwt.material.design.client.ui.MaterialDropDown) { link.addClickHandler(new com.google.gwt.event.dom.client.ClickHandler() { @java.lang.Override public void onClick(com.google.gwt.event.dom.client.ClickEvent event) { event.stopPropagation(); } }); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8453/buggy-version/gwt-material.src.main.java.gwt.material.design.client.ui.MaterialDropDown.java", "BodyUseAPI": [], "Fixed commit": "5ad930b694bc6507b53f86e50879678740f2ee29", "Url": "https://api.github.com/repos/GwtMaterialDesign/gwt-material", "Date": "2016-02-11T11:37:50Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o instanceof java.util.Collection<?>) { if (!(((java.util.Collection<?>) (o)).isEmpty())) { return true; } }else if (o instanceof alien4cloud.model.components.ScalarPropertyValue) { if ((((alien4cloud.model.components.ScalarPropertyValue) (o)).getValue()) != null) { return true; } }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/280/buggy-version/alien4cloud-core.src.main.java.alien4cloud.tosca.serializer.ToscaSerializerUtils.java", "BodyUseAPI": [], "Fixed commit": "463bd7dc19ef6430dc5c5973c0b036d7b2e1dc24", "Url": "https://api.github.com/repos/igorng/alien4cloud", "Date": "2015-03-23T15:32:26Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSteps.size()) == 0) { nextStep(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6618/buggy-version/src.main.java.net.perkowitz.issho.hachi.modules.step.StepModule.java", "BodyUseAPI": [], "Fixed commit": "4dbfa2d8c43379c59c93b43b3c68ad23bdac1dde", "Url": "https://api.github.com/repos/perkowitz/issho", "Date": "2017-03-29T05:15:33Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.exists()) { com.photon.phresco.framework.api.ProjectAdministrator administrator = com.photon.phresco.framework.PhrescoFrameworkFactory.getProjectAdministrator(); administrator.updateTestConfiguration(project, envName, browser, builder.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6499/buggy-version/framework.phresco-framework-web.src.main.java.com.photon.phresco.framework.actions.applications.FunctionalUtil.java", "BodyUseAPI": [], "Fixed commit": "6ba4b4220dfc0187d0411a4ad046e118fcc9b2e0", "Url": "https://api.github.com/repos/phresco/phresco", "Date": "2012-07-20T14:40:42Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(org.apache.poi.ss.usermodel.Cell)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isDate) { java.util.Date date = cell.getDateCellValue(); java.lang.String dateString = new java.text.SimpleDateFormat(\"dd-MMM-yyyy\").format(date); productDocument.append(columnNames.get(columnIndex), dateString); }else { productDocument.append(columnNames.get(columnIndex), cell.getNumericCellValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7396/buggy-version/product-validation-system-jar.src.main.java.com.pvs.service.excel.ExcelFileHandler.java", "BodyUseAPI": [], "Fixed commit": "213c6d116be242428ea454e2e3cd8158ab153024", "Url": "https://api.github.com/repos/cskjha/pvs", "Date": "2015-12-09T18:27:25Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMyOrder.count()) == 0) { android.widget.Toast.makeText(getApplicationContext(), \"\u6ca1\u6709\u83dc\u54c1\u4fe1\u606f\uff01\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7123/buggy-version/src.com.htb.cnk.ui.base.OrderBaseActivity.java", "BodyUseAPI": [], "Fixed commit": "b9e536958b415ba2a2d992bea7122b4bcc1f8a5a", "Url": "https://api.github.com/repos/JoshTsang/cnk-orderPad", "Date": "2012-11-27T07:41:50Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((make.equalsIgnoreCase(\"make\")) || (model.equalsIgnoreCase(\"model\"))) || (yearString.equalsIgnoreCase(\"year\"))) { messageToast(DEFAULT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1524/buggy-version/app.src.main.java.edu.sodetzpurdue.gastimator_app.AddVehicleActivity.java", "BodyUseAPI": [], "Fixed commit": "176681a3ecae49e8aaa3f446df98ac3ce28cd545", "Url": "https://api.github.com/repos/kcsodetz/Gastimate", "Date": "2017-10-01T08:55:12Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (theVar == null) theVarTemp = xmlFile.getTag(\"model/kernel\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6546/buggy-version/src.VEW.Planktonica2.Planktonica.java", "BodyUseAPI": [], "Fixed commit": "433739868f630c30914efb44f96bae5f0c7280ce", "Url": "https://api.github.com/repos/RangerOfFire/Virtual-Ecology-Workbench", "Date": "2011-10-21T12:59:02Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (theVar != null) addVarPage.editThisVar(xmlFile.getTag(\"model\"), theFunction, group, theVar, AddVarPage.ALL);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6546/buggy-version/src.VEW.Planktonica2.Planktonica.java", "BodyUseAPI": ["VEW.Planktonica2.AddVarPage.editThisVar(xmlFile.getTag(\"model\"),VEW.Common.XML.XMLTag,VEW.Common.XML.XMLTag,VEW.Common.XML.XMLTag,AddVarPage.ALL)"], "Fixed commit": "433739868f630c30914efb44f96bae5f0c7280ce", "Url": "https://api.github.com/repos/RangerOfFire/Virtual-Ecology-Workbench", "Date": "2011-10-21T12:59:02Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mForSpinner.length) > 0) { return mForSpinner; }else { return new java.lang.String[]{ \"\u65e0\" }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/255/buggy-version/app.src.main.java.animalize.github.com.quantangshi.ListViewPack.TagSearchRVAdapter.java", "BodyUseAPI": [], "Fixed commit": "8d06da626ee4b1325c31757b7300a812e1f92b93", "Url": "https://api.github.com/repos/animalize/QuanTangshi", "Date": "2017-07-16T09:43:24Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mNavDrawerItems.contains(org.onebusaway.android.ui.NavigationDrawerFragment.NAVDRAWER_ITEM_PLAN_TRIP)) { overflowIndex += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/942/buggy-version/onebusaway-android.src.main.java.org.onebusaway.android.ui.NavigationDrawerFragment.java", "BodyUseAPI": [], "Fixed commit": "4b6480127794867fae095a2e785b09facf3e8003", "Url": "https://api.github.com/repos/acrown-msft/onebusaway-android", "Date": "2017-02-22T01:55:25Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((a) == 0) && ((java.lang.Math.abs(((p.getY()) - (b)))) < (e))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5495/buggy-version/prediccionPlanetas.src.main.java.com.example.utils.Recta.java", "BodyUseAPI": [], "Fixed commit": "71d3d1a8eaf3ff1623a4c8a1ac80d0ac7ced05fb", "Url": "https://api.github.com/repos/andrelata/prediccionClima", "Date": "2017-01-19T04:17:56Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(((a) - (p.getX())))) < (e)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5495/buggy-version/prediccionPlanetas.src.main.java.com.example.utils.Recta.java", "BodyUseAPI": [], "Fixed commit": "71d3d1a8eaf3ff1623a4c8a1ac80d0ac7ced05fb", "Url": "https://api.github.com/repos/andrelata/prediccionClima", "Date": "2017-01-19T04:17:56Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (message == null) { message = io.netty.buffer.Unpooled.EMPTY_BUFFER; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8584/buggy-version/handler.src.main.java.io.netty.handler.stream.ChunkedWriteHandler.java", "BodyUseAPI": [], "Fixed commit": "00f1533fa9d9ee344836e9632f4be59bd291858e", "Url": "https://api.github.com/repos/fredericBregier/netty", "Date": "2013-07-29T14:23:43Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (previewFiles == null) previewFiles = new java.util.ArrayList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5078/buggy-version/app.src.main.java.com.afollestad.polar.adapters.ZooperAdapter.java", "BodyUseAPI": [], "Fixed commit": "9af04de7f5061f2affb086595378436690164f52", "Url": "https://api.github.com/repos/frmz/polar-dashboard", "Date": "2016-10-30T19:18:24Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.data) != null) { state.data = ((org.apache.fop.util.AbstractPaintingState.AbstractData) (this.data.clone())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5372/buggy-version/src.java.org.apache.fop.util.AbstractPaintingState.java", "BodyUseAPI": [], "Fixed commit": "07264adcfd73ed4e4fc6dc76f8241d69f2f6b145", "Url": "https://api.github.com/repos/skynavga/fop", "Date": "2013-10-29T20:14:29Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (proposalsContext.getUser(request).getDefaultUser()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2625/buggy-version/portlets.proposals-portlet.src.main.java.org.xcolab.portlets.proposals.view.action.ProposalRequestMembershipActionController.java", "BodyUseAPI": [], "Fixed commit": "5ef680898f5c3e1b3314287dc6f3cb55062b8cb2", "Url": "https://api.github.com/repos/CCI-MIT/XCoLab", "Date": "2014-03-07T21:45:08Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activeCategory) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/384/buggy-version/app.src.main.java.dat255.refugeemap.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "fb42d597cc3a91bd52f9a654ee58eb3aa31acaaf", "Url": "https://api.github.com/repos/drualsk/RefugeeMap", "Date": "2016-10-20T17:31:24Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(trained)) { setComponents(keepers); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4850/buggy-version/src.main.java.edu.macalester.wpsemsim.sim.ensemble.FeatureGenerator.java", "BodyUseAPI": [], "Fixed commit": "1483348c788ddfd9be32ac7f4c3a520598660ced", "Url": "https://api.github.com/repos/shilad/wp-semantic-similarity", "Date": "2013-05-02T03:19:34Z"},
{"Line": "=>608", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((deadCardSkillUseInfo.getType()) == (cfvbaibai.cardfantasy.data.SkillType.\u4f20\u9001)) { cfvbaibai.cardfantasy.engine.skill.Transport.apply(this, deadCardSkillUseInfo.getSkill(), deadCard, killerCard.getOwner()); }else if ((deadCardSkillUseInfo.getType()) == (cfvbaibai.cardfantasy.data.SkillType.\u56de\u9b42)) { cfvbaibai.cardfantasy.engine.skill.Resurrection.apply(this, deadCardSkillUseInfo, deadCard); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7100/buggy-version/workspace.CardFantasyCore.src.cfvbaibai.cardfantasy.engine.SkillResolver.java", "BodyUseAPI": ["cfvbaibai.cardfantasy.engine.skill.Resurrection.apply(cfvbaibai.cardfantasy.engine.SkillResolver,cfvbaibai.cardfantasy.engine.SkillUseInfo,cfvbaibai.cardfantasy.engine.CardInfo)", "cfvbaibai.cardfantasy.engine.SkillUseInfo.getType()", "cfvbaibai.cardfantasy.engine.skill.Transport.apply(cfvbaibai.cardfantasy.engine.SkillResolver,deadCardSkillUseInfo.getSkill(),cfvbaibai.cardfantasy.engine.CardInfo,killerCard.getOwner())", "cfvbaibai.cardfantasy.engine.SkillUseInfo.getSkill()"], "Fixed commit": "14fc96cc7daec00782384a0d458baaa0dfe20a18", "Url": "https://api.github.com/repos/cfvbaibai/CardFantasy", "Date": "2015-01-15T17:55:34Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (nerr > 0) throw new java.lang.RuntimeException(((\"Encountered \" + nerr) + \" syntax errors.\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3620/buggy-version/src.main.java.de.huberlin.wbi.cfjava.cuneiform.Workflow.java", "BodyUseAPI": [], "Fixed commit": "dd2ac4f840047c894c874b48faf84924f1eedd1f", "Url": "https://api.github.com/repos/joergen7/cf-java", "Date": "2016-03-08T21:05:27Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (element.hasClass(\"tplTitolo\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2617/buggy-version/src.java.it.unimol.my.taxes.TaxesExtractor.java", "BodyUseAPI": [], "Fixed commit": "5b42465801ef272547383090dcd4cf5c1c97d2f6", "Url": "https://api.github.com/repos/myunimol/api", "Date": "2016-10-02T12:46:27Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (myUsers.get(myName).isRole(myRole)) { authorInterfaceHasManuscripts(); }else { authorInterfaceNoManuscripts(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7401/buggy-version/src.view.AuthorUI.java", "BodyUseAPI": [], "Fixed commit": "7e0c7635719aff83b634db92e050512be803f0f3", "Url": "https://api.github.com/repos/jakeknowles/blacksheep360", "Date": "2016-05-31T19:25:05Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerTeleportEvent.getPlayer()", "org.bukkit.event.player.PlayerTeleportEvent.getTo()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((target.getWorld()) == (player.getBedSpawnLocation().getWorld())) if ((target.distance(player.getBedSpawnLocation())) < 10) { savelogin.setDataVia1(player, event.getTo()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2033/buggy-version/CrazyLogin.src.de.st_ddt.crazylogin.CrazyLoginPlayerListener.java", "BodyUseAPI": ["de.st_ddt.crazyutil.PairList<org.bukkit.entity.Player, org.bukkit.Location>.setDataVia1(org.bukkit.entity.Player,event.getTo())", "org.bukkit.Location.distance(player.getBedSpawnLocation())", "org.bukkit.entity.Player.getBedSpawnLocation()"], "Fixed commit": "f9664e36b25b264540503bffea03cffc452431dd", "Url": "https://api.github.com/repos/ST-DDT/Crazy", "Date": "2012-04-05T21:54:18Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jitsi.videobridge.RawPacket.getSSRCAsLong(byte[],int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (ssrcToDeltaSinceLastAcceptedSeqNumber.containsKey(ssrc)) { delta = ssrcToDeltaSinceLastAcceptedSeqNumber.get(ssrc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1872/buggy-version/src.main.java.org.jitsi.videobridge.VideoChannel.java", "BodyUseAPI": ["java.util.Map<java.lang.Long, java.lang.Integer>.get(java.lang.Long)"], "Fixed commit": "d3064079fd2f3bdae8b10dd4eedc853e2ace7dd7", "Url": "https://api.github.com/repos/aaronkvanmeerten/jitsi-videobridge", "Date": "2016-06-13T17:06:49Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jitsi.videobridge.RTPUtils.subtractNumber(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((org.jitsi.videobridge.RTPUtils.sequenceNumberDiff(newSequenceNumber, highestSentSequenceNumber)) >= 0) { ssrcToLastAcceptedSeqNumber.put(ssrc, newSequenceNumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1872/buggy-version/src.main.java.org.jitsi.videobridge.VideoChannel.java", "BodyUseAPI": ["java.util.Map<java.lang.Long, java.lang.Integer>.put(java.lang.Long,int)"], "Fixed commit": "d3064079fd2f3bdae8b10dd4eedc853e2ace7dd7", "Url": "https://api.github.com/repos/aaronkvanmeerten/jitsi-videobridge", "Date": "2016-06-13T17:06:49Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jitsi.videobridge.RawPacket.getSSRCAsLong(byte[],int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (ssrcToLastAcceptedSeqNumber.containsKey(ssrc)) { int lastSeqNo = ssrcToLastAcceptedSeqNumber.get(ssrc); int delta = org.jitsi.videobridge.RTPUtils.subtractNumber(seqNumber, lastSeqNo); int lastDelta = delta; if (ssrcToDeltaSinceLastAcceptedSeqNumber.containsKey(ssrc)) { lastDelta = ssrcToDeltaSinceLastAcceptedSeqNumber.get(ssrc); } if ((org.jitsi.videobridge.RTPUtils.sequenceNumberDiff(delta, lastDelta)) >= 0) { ssrcToDeltaSinceLastAcceptedSeqNumber.put(ssrc, delta); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1872/buggy-version/src.main.java.org.jitsi.videobridge.VideoChannel.java", "BodyUseAPI": ["java.util.Map<java.lang.Long, java.lang.Integer>.put(java.lang.Long,int)", "java.util.Map<java.lang.Long, java.lang.Integer>.containsKey(java.lang.Long)", "java.util.Map<java.lang.Long, java.lang.Integer>.get(java.lang.Long)", "java.util.Map<java.lang.Long, java.lang.Integer>.get(java.lang.Long)"], "Fixed commit": "d3064079fd2f3bdae8b10dd4eedc853e2ace7dd7", "Url": "https://api.github.com/repos/aaronkvanmeerten/jitsi-videobridge", "Date": "2016-06-13T17:06:49Z"},
{"Line": "=>1325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (signature != null) { java.lang.StringBuffer newSignatureBuf = new java.lang.StringBuffer(); newSignatureBuf.append(signature); for (int i = interfaces.length; i < (newInterfaces.length); i++) { newSignatureBuf.append(((\"L\" + (newInterfaces[i])) + \";\")); } newSignature = newSignatureBuf.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8691/buggy-version/jpa.org.eclipse.persistence.jpa.src.org.eclipse.persistence.internal.jpa.weaving.ClassWeaver.java", "BodyUseAPI": ["java.lang.StringBuffer.append(java.lang.String)"], "Fixed commit": "f0f4173f3d96af384a933981bbb929fcdbe60cda", "Url": "https://api.github.com/repos/sabineheider/eclipselink.runtime", "Date": "2013-04-09T14:58:33Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((to.getReplicationGroupInstance()) == null) { com.emc.storageos.db.client.model.Volume backendVolume = dbClient.queryObject(com.emc.storageos.db.client.model.Volume.class, java.net.URI.create(backingVolume)); to.setReplicationGroupInstance(backendVolume.getReplicationGroupInstance()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4316/buggy-version/apisvc.src.main.java.com.emc.storageos.api.mapper.BlockMapper.java", "BodyUseAPI": ["com.emc.storageos.model.block.VolumeRestRep.setReplicationGroupInstance(backendVolume.getReplicationGroupInstance())"], "Fixed commit": "b0f8d702b4ee38b5e75791ecad5944798c03ac3a", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-01-19T22:41:36Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (unit == \"K\") { dist = dist * 1.609344; }else if (unit == \"N\") { dist = dist * 0.8684; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6880/buggy-version/src.main.java.com.hazardmanager.users.utilis.DistanceCalculator.java", "BodyUseAPI": [], "Fixed commit": "404f15d2c18af702ad4a594ed1af8c645283c43c", "Url": "https://api.github.com/repos/corneliusoficu/M3-MicroService", "Date": "2017-05-19T06:02:25Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(org.jtrfp.trcl.gui.ConfigWindow,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8065/buggy-version/src.main.java.org.jtrfp.trcl.gui.ConfigWindow.java", "BodyUseAPI": [], "Fixed commit": "a5920f5417d98acd510161bb3e233eb06de6bd30", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2015-10-05T06:05:29Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(org.jtrfp.trcl.gui.ConfigWindow,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8065/buggy-version/src.main.java.org.jtrfp.trcl.gui.ConfigWindow.java", "BodyUseAPI": [], "Fixed commit": "a5920f5417d98acd510161bb3e233eb06de6bd30", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2015-10-05T06:05:29Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.camel.util.ObjectHelper.isNotEmpty(remaining)) { configuration.updatePathConfig(remaining, this.getAuthorizationToken()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/519/buggy-version/components.camel-telegram.src.main.java.org.apache.camel.component.telegram.TelegramComponent.java", "BodyUseAPI": ["org.apache.camel.component.telegram.TelegramConfiguration.updatePathConfig(java.lang.String,java.lang.String)"], "Fixed commit": "3bb1039a9734f3301eceabd624ac823b3e31aa6f", "Url": "https://api.github.com/repos/objectiser/camel", "Date": "2017-02-08T12:36:19Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["snap.web.WebSite.getResponse(snap.web.WebRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((resp.getCode()) == (WebResponse.NOT_FOUND)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/825/buggy-version/src.snap.web.WebSite.java", "BodyUseAPI": [], "Fixed commit": "2ec9c82b1da1b3f0566afab46e6bc90061772440", "Url": "https://api.github.com/repos/reportmill/SnapKit", "Date": "2016-08-26T19:19:27Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/469/buggy-version/src.main.java.io.jboot.core.cache.redis.JbootRedisCacheImpl.java", "BodyUseAPI": [], "Fixed commit": "092738acea8e182ac423b35280b3e2b84795dc8c", "Url": "https://api.github.com/repos/kinbod/jboot", "Date": "2017-09-16T00:42:03Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(presentAndDisallowed.isEmpty())) { printMessage(javax.tools.Diagnostic.Kind.ERROR, element, constrained, (\" which is not allowed with \" + (formatAnnotations(presentAndDisallowed, \" or \"))), disallowAnnotations); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7460/buggy-version/src.main.java.com.overstock.constraint.verifier.DisallowAnnotationsVerifier.java", "BodyUseAPI": ["com.overstock.constraint.verifier.DisallowAnnotationsVerifier.formatAnnotations(java.util.List<javax.lang.model.type.TypeMirror>,java.lang.String)", "com.overstock.constraint.verifier.DisallowAnnotationsVerifier.printMessage(javax.tools.Diagnostic.Kind,javax.lang.model.element.Element,javax.lang.model.element.AnnotationMirror,(\" which is not allowed with \" + (formatAnnotations(presentAndDisallowed, \" or \"))),com.overstock.constraint.processor.ConstraintMirror)"], "Fixed commit": "aecd7138c48afb9d86ba61471b268ca5ec5d892e", "Url": "https://api.github.com/repos/overstock/annotation-constraints", "Date": "2013-02-20T21:37:03Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.overstock.constraint.verifier.VerifierUtils.getValuesAsTypes(requireAnnotationsOnSupertype.getAnnotation())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(requiredAnnotations.isEmpty())) { printMessage(javax.tools.Diagnostic.Kind.ERROR, element, constrained, (\" but does not have a supertype annotated with \" + (formatAnnotations(requiredAnnotations, \" or \"))), requireAnnotationsOnSupertype); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7460/buggy-version/src.main.java.com.overstock.constraint.verifier.RequireAnnotationsOnSupertypeVerifier.java", "BodyUseAPI": ["com.overstock.constraint.verifier.RequireAnnotationsOnSupertypeVerifier.printMessage(javax.tools.Diagnostic.Kind,javax.lang.model.element.Element,javax.lang.model.element.AnnotationMirror,(\" but does not have a supertype annotated with \" + (formatAnnotations(requiredAnnotations, \" or \"))),com.overstock.constraint.processor.ConstraintMirror)", "com.overstock.constraint.verifier.RequireAnnotationsOnSupertypeVerifier.formatAnnotations(java.util.List<javax.lang.model.type.TypeMirror>,java.lang.String)"], "Fixed commit": "aecd7138c48afb9d86ba61471b268ca5ec5d892e", "Url": "https://api.github.com/repos/overstock/annotation-constraints", "Date": "2013-02-20T21:37:03Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.overstock.constraint.verifier.VerifierUtils.getValuesAsTypes(requireSupertypes.getAnnotation())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(requiredSupertypes.isEmpty())) { printMessage(javax.tools.Diagnostic.Kind.ERROR, element, constrained, ((\" but does not have \" + (formatTypes(requiredSupertypes, \"\", \" or \"))) + \" as a supertype\"), requireSupertypes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7460/buggy-version/src.main.java.com.overstock.constraint.verifier.RequireSupertypesVerifier.java", "BodyUseAPI": ["com.overstock.constraint.verifier.RequireSupertypesVerifier.formatTypes(java.util.List<javax.lang.model.type.TypeMirror>,java.lang.String,java.lang.String)", "com.overstock.constraint.verifier.RequireSupertypesVerifier.printMessage(javax.tools.Diagnostic.Kind,javax.lang.model.element.Element,javax.lang.model.element.AnnotationMirror,((\" but does not have \" + (formatTypes(requiredSupertypes, \"\", \" or \"))) + \" as a supertype\"),com.overstock.constraint.processor.ConstraintMirror)"], "Fixed commit": "aecd7138c48afb9d86ba61471b268ca5ec5d892e", "Url": "https://api.github.com/repos/overstock/annotation-constraints", "Date": "2013-02-20T21:37:03Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.webapp.mgt.stub.types.carbon.WebappMetadata.getDisplayName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (displayName == null) { displayName = (org.wso2.carbon.appmgt.impl.discovery.Wso2AppServerDiscoveryHandler.AUTO_GENERATED_DISPLAY_NAME_PREFIX) + currentWebappId; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4658/buggy-version/components.appmgt.org.wso2.carbon.appmgt.impl.src.main.java.org.wso2.carbon.appmgt.impl.discovery.Wso2AppServerDiscoveryHandler.java", "BodyUseAPI": [], "Fixed commit": "02e1fa225ba67c334b7cb5585117c49cafb7cbcb", "Url": "https://api.github.com/repos/lakshani/carbon-appmgt", "Date": "2015-05-18T05:02:09Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (service.getKind().equalsIgnoreCase(ServiceDiscoveryConstants.KIND_EXTERNAL_SERVICE)) { org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.String> ipHostName = null; if (instanceObj != null) { ipHostName = ((org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.String>) (instanceObj)); } return new io.cattle.platform.servicediscovery.deployment.impl.unit.ExternalDeploymentUnitInstance(context, uuid, service, launchConfigName, ipHostName.getLeft(), ipHostName.getRight()); }else if (service.getKind().equalsIgnoreCase(ServiceDiscoveryConstants.KIND_BALANCER_SERVICE)) { io.cattle.platform.core.model.Instance instance = null; if (instanceObj != null) { instance = ((io.cattle.platform.core.model.Instance) (instanceObj)); } return new io.cattle.platform.servicediscovery.deployment.impl.unit.BalancerDeploymentUnitInstance(context, uuid, service, instanceName, instance, labels, launchConfigName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8579/buggy-version/code.iaas.service-discovery.server.src.main.java.io.cattle.platform.servicediscovery.deployment.impl.unit.DeploymentUnitInstanceFactoryImpl.java", "BodyUseAPI": ["io.cattle.platform.core.model.Service.getKind()", "service.getKind().equalsIgnoreCase(ServiceDiscoveryConstants.KIND_BALANCER_SERVICE)"], "Fixed commit": "28c3bde2f36c8934da0d32a3d49778ae0397f1c4", "Url": "https://api.github.com/repos/alena1108/cattle", "Date": "2016-08-08T23:29:02Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sukinsan.findfriends.utils.CacheUtils.getUser(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (foundUser != null) { participants.add(foundUser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/300/buggy-version/app.src.main.java.com.sukinsan.findfriends.entity.MeetUpPlace.java", "BodyUseAPI": ["java.util.List<com.sukinsan.findfriends.entity.User>.add(com.sukinsan.findfriends.entity.User)"], "Fixed commit": "23b1f25785fa3cf4c1d60932ec2416a39a7e99c6", "Url": "https://api.github.com/repos/victorpaul/natFinder", "Date": "2017-04-30T13:23:41Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["name.html().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((nameAndSurname.length) > 1) uInfo.setSurname(nameAndSurname[1]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/240/buggy-version/src.java.it.unimol.my.login.UnimolLoginParser.java", "BodyUseAPI": ["it.unimol.my.login.UserInformation.setSurname(java.lang.String)"], "Fixed commit": "049b875bc7da3fb9b12b805f7d85b019276d2c91", "Url": "https://api.github.com/repos/myunimol/api", "Date": "2017-06-06T21:49:40Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((flagImageView.callOnClick()) == true) flagImageView.setRotation(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1298/buggy-version/FlagQuiz1.app.src.main.java.com.deitel.flagquiz.QuizFragment.java", "BodyUseAPI": ["android.widget.ImageView.setRotation(int)"], "Fixed commit": "fd58fcdcb10e0e6a3e32b4df34d332a19859cd50", "Url": "https://api.github.com/repos/NazliMedghalchi/AndroidProject", "Date": "2015-10-08T03:47:50Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((taskmgt.Data.getCurrentUser()) instanceof taskmgt.Models.TeamLeader) { comboBox.addItem(taskmgt.Data.getCurrentUser().getEmail()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1215/buggy-version/src.taskmgt.ProjectTaskGUI.java", "BodyUseAPI": [], "Fixed commit": "ff56b56a8a6009f28c41fa697e00c07efaf7a6d7", "Url": "https://api.github.com/repos/aperauch/TMS-Twink", "Date": "2014-02-19T01:36:14Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newResult == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8270/buggy-version/app.src.main.java.com.example.yeelin.projects.betweenus.activity.SuggestionsActivity.java", "BodyUseAPI": [], "Fixed commit": "3d71b5f7b267b2c17af031e16c777a744d20b517", "Url": "https://api.github.com/repos/yeelin/betweenus", "Date": "2015-12-04T22:21:00Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getStringExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (passedUserName != null) { greetingTextView.setText(((\"Unclaimed swarms near \" + passedUserName) + \":\")); }else { greetingTextView.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1130/buggy-version/app.src.main.java.com.example.guest.iamhere.activities.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "7d979c17b4ec7691c01bac2f1eae2c50e24a3207", "Url": "https://api.github.com/repos/Atticus29/swarmReporter", "Date": "2017-06-28T19:50:54Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.egov.wcms.transaction.web.contract.WaterConnectionReq.getConnection()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(conn.getAddress().getPinCode())) { user.setPermanentPincode(conn.getAddress().getPinCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4926/buggy-version/wcms.wcms-connection.src.main.java.org.egov.wcms.transaction.service.WaterConnectionService.java", "BodyUseAPI": ["conn.getAddress().getPinCode()", "org.egov.wcms.transaction.model.User.setPermanentPincode(conn.getAddress().getPinCode())", "org.egov.wcms.transaction.model.Connection.getAddress()"], "Fixed commit": "99e2d70a95a6dd4ede560d6bdd9c8cdf8638ea87", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-09-04T05:42:41Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.egov.wcms.transaction.web.contract.WaterConnectionReq.getConnection()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(conn.getConnectionOwner().getEmailId())) { user.setEmailId(conn.getConnectionOwner().getEmailId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4926/buggy-version/wcms.wcms-connection.src.main.java.org.egov.wcms.transaction.service.WaterConnectionService.java", "BodyUseAPI": ["org.egov.wcms.transaction.model.Connection.getConnectionOwner()", "conn.getConnectionOwner().getEmailId()", "org.egov.wcms.transaction.model.User.setEmailId(conn.getConnectionOwner().getEmailId())"], "Fixed commit": "99e2d70a95a6dd4ede560d6bdd9c8cdf8638ea87", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-09-04T05:42:41Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.egov.wcms.transaction.web.contract.WaterConnectionReq.getConnection()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(conn.getAddress().getCity())) { user.setPermanentCity(conn.getAddress().getCity()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4926/buggy-version/wcms.wcms-connection.src.main.java.org.egov.wcms.transaction.service.WaterConnectionService.java", "BodyUseAPI": ["conn.getAddress().getCity()", "org.egov.wcms.transaction.model.User.setPermanentCity(conn.getAddress().getCity())", "org.egov.wcms.transaction.model.Connection.getAddress()"], "Fixed commit": "99e2d70a95a6dd4ede560d6bdd9c8cdf8638ea87", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-09-04T05:42:41Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.egov.wcms.transaction.web.contract.WaterConnectionReq.getConnection()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(conn.getAddress().getAddressLine1())) { user.setPermanentAddress(conn.getAddress().getAddressLine1()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4926/buggy-version/wcms.wcms-connection.src.main.java.org.egov.wcms.transaction.service.WaterConnectionService.java", "BodyUseAPI": ["conn.getAddress().getAddressLine1()", "org.egov.wcms.transaction.model.Connection.getAddress()", "org.egov.wcms.transaction.model.User.setPermanentAddress(conn.getAddress().getAddressLine1())"], "Fixed commit": "99e2d70a95a6dd4ede560d6bdd9c8cdf8638ea87", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-09-04T05:42:41Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.egov.wcms.transaction.web.contract.WaterConnectionReq.getConnection()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(conn.getConnectionOwner().getAadhaarNumber())) { user.setAadhaarNumber(conn.getConnectionOwner().getAadhaarNumber()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4926/buggy-version/wcms.wcms-connection.src.main.java.org.egov.wcms.transaction.service.WaterConnectionService.java", "BodyUseAPI": ["org.egov.wcms.transaction.model.Connection.getConnectionOwner()", "org.egov.wcms.transaction.model.User.setAadhaarNumber(conn.getConnectionOwner().getAadhaarNumber())", "conn.getConnectionOwner().getAadhaarNumber()"], "Fixed commit": "99e2d70a95a6dd4ede560d6bdd9c8cdf8638ea87", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-09-04T05:42:41Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.egov.wcms.transaction.web.contract.WaterConnectionReq.getConnection()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(conn.getConnectionOwner().getGender())) { user.setGender(conn.getConnectionOwner().getGender()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4926/buggy-version/wcms.wcms-connection.src.main.java.org.egov.wcms.transaction.service.WaterConnectionService.java", "BodyUseAPI": ["org.egov.wcms.transaction.model.User.setGender(conn.getConnectionOwner().getGender())", "conn.getConnectionOwner().getGender()", "org.egov.wcms.transaction.model.Connection.getConnectionOwner()"], "Fixed commit": "99e2d70a95a6dd4ede560d6bdd9c8cdf8638ea87", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-09-04T05:42:41Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"\".equalsIgnoreCase(itemid)) { request.setAttribute(\"adultCancel\", ticketData[0]); request.setAttribute(\"childCancel\", ticketData[1]); request.setAttribute(\"infantCancel\", ticketData[2]); }else { request.setAttribute(\"adultCancel\", \"0\"); request.setAttribute(\"childCancel\", \"0\"); request.setAttribute(\"infantCancel\", \"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2982/buggy-version/src.java.com.smi.travel.controller.OtherDetailController.java", "BodyUseAPI": [], "Fixed commit": "2f88b1095f17e6b0844c3880057dced544d21878", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-11-09T08:50:20Z"},
{"Line": "=>1964", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (joiningNodeId.equals(ctx.localNodeId())) desc.receivedOnDiscovery(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4408/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.cache.GridCacheProcessor.java", "BodyUseAPI": [], "Fixed commit": "21ea9f1d246a0bdbec24c02971d2631baa51bd95", "Url": "https://api.github.com/repos/apache/ignite", "Date": "2015-12-23T12:12:10Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((targetlocation.getBlock().getType()) == (org.bukkit.Material.AIR)) targetlocation.add(0, (-1), 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7945/buggy-version/Bending2.src.firebending.Lightning.java", "BodyUseAPI": ["org.bukkit.Location.add(int,int,int)"], "Fixed commit": "de4cf153b45798bbab05c0e0d7fc9dd6396f5558", "Url": "https://api.github.com/repos/superlode/MinecraftTLA", "Date": "2012-08-08T15:01:11Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tools.Tools.getTargettedEntity(org.bukkit.entity.Player,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (target == null) { if (target instanceof org.bukkit.entity.LivingEntity) { targetlocation = target.getLocation(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7945/buggy-version/Bending2.src.firebending.Lightning.java", "BodyUseAPI": ["org.bukkit.entity.Entity.getLocation()"], "Fixed commit": "de4cf153b45798bbab05c0e0d7fc9dd6396f5558", "Url": "https://api.github.com/repos/superlode/MinecraftTLA", "Date": "2012-08-08T15:01:11Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (intent != null) { showToast = intent.getBooleanExtra(org.balau.fakedawn.Alarm.EXTRA_SHOW_TOAST, false); }else { showToast = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7044/buggy-version/src.org.balau.fakedawn.Alarm.java", "BodyUseAPI": ["android.content.Intent.getBooleanExtra(java.lang.String,boolean)"], "Fixed commit": "aa76676ecfdb4390a15248bb69fbbff2127e08c6", "Url": "https://api.github.com/repos/balau/FakeDawn", "Date": "2012-08-23T17:00:55Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["what.Facade.getFacadeInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (f == null) { return controllers.Localize.get(\"Internal error!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7385/buggy-version/app.what.web.LogfileUpload.java", "BodyUseAPI": [], "Fixed commit": "0413977d278e368d52f36b20dea32a96b21430d3", "Url": "https://api.github.com/repos/Gruppe14/KIT-PSE", "Date": "2013-02-27T14:21:35Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((histogram) == null) throw new java.lang.IllegalStateException(\"Either compacted or expanded form has to be defined!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3582/buggy-version/extensions.hdrhistogram.src.main.java.org.radargun.stats.HistogramOperationStats.java", "BodyUseAPI": [], "Fixed commit": "9b570e3fd345dabc16f9c1609f3c72279d62ec37", "Url": "https://api.github.com/repos/rvansa/radargun", "Date": "2014-11-07T10:36:51Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((compacted) != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3582/buggy-version/extensions.hdrhistogram.src.main.java.org.radargun.stats.HistogramOperationStats.java", "BodyUseAPI": [], "Fixed commit": "9b570e3fd345dabc16f9c1609f3c72279d62ec37", "Url": "https://api.github.com/repos/rvansa/radargun", "Date": "2014-11-07T10:36:51Z"},
{"Line": "=>1810", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((op.id) != null) { cv = op.getContentValues(); cv.put(ObservationPhoto._SYNCED_AT, java.lang.System.currentTimeMillis()); getContentResolver().update(op.getUri(), cv, null, null); createdCount += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2824/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.INaturalistService.java", "BodyUseAPI": ["org.inaturalist.android.ObservationPhoto.getContentValues()", "getContentResolver().update(op.getUri(),android.content.ContentValues,<nulltype>,<nulltype>)", "org.inaturalist.android.ObservationPhoto.getUri()"], "Fixed commit": "d90ba5bc928513d25e7b5cf08793da5021712b5c", "Url": "https://api.github.com/repos/inaturalist/iNaturalistAndroid", "Date": "2017-03-31T10:28:00Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Double.isInfinite(result)) || (java.lang.Double.isNaN(result))) { result = java.lang.Double.MAX_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3289/buggy-version/src.main.org.deidentifier.arx.metric.v2.ILMultiDimensionalSum.java", "BodyUseAPI": [], "Fixed commit": "88efb95d33d55d2726ad342d5798ff6daa4c635f", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-11-04T10:46:58Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["job.getConfiguration().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((rmWebHost.startsWith(\"http://\")) || (rmWebHost.startsWith(\"https://\"))) { }else { rmWebHost = \"http://\" + rmWebHost; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6276/buggy-version/job.src.main.java.org.apache.kylin.job.common.MapReduceExecutable.java", "BodyUseAPI": [], "Fixed commit": "8b1e74f6ee17299a05daa13e05b4399ed53a1f5d", "Url": "https://api.github.com/repos/KylinOLAP/Kylin", "Date": "2015-02-10T04:30:05Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["job.getConfiguration().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(rmWebHost)) { return new org.apache.kylin.job.common.ExecuteResult(ExecuteResult.State.ERROR, \"yarn.resourcemanager.webapp.address is empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6276/buggy-version/job.src.main.java.org.apache.kylin.job.common.MapReduceExecutable.java", "BodyUseAPI": [], "Fixed commit": "8b1e74f6ee17299a05daa13e05b4399ed53a1f5d", "Url": "https://api.github.com/repos/KylinOLAP/Kylin", "Date": "2015-02-10T04:30:05Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (enabledArtifacts != null) { options.set(CodeGeneratorApi.ENABLED_ARTIFACTS, com.google.common.collect.Lists.newArrayList(enabledArtifacts)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8156/buggy-version/src.main.java.com.google.api.codegen.CodeGeneratorTool.java", "BodyUseAPI": ["com.google.api.tools.framework.tools.ToolOptions.set(CodeGeneratorApi.ENABLED_ARTIFACTS,com.google.common.collect.Lists.newArrayList(enabledArtifacts))", "com.google.common.collect.Lists.newArrayList(java.lang.String[])"], "Fixed commit": "6d9e4733700baa12ec126faeb5c4246fe73522f6", "Url": "https://api.github.com/repos/shinfan/toolkit", "Date": "2016-10-21T22:28:09Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["common.SqlHelper.select(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((res.getNString(currentID).toLowerCase()) == \"exit\") { res.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2807/buggy-version/src.server.ServerCore.java", "BodyUseAPI": ["java.sql.ResultSet.close()"], "Fixed commit": "13caa0d62f86ea1c16f8b8b361bb005f12238501", "Url": "https://api.github.com/repos/cr0ss0vr/mp-game-1", "Date": "2014-05-29T10:11:58Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (c.moveToFirst()) { do { android.ht.sportstatistik.datahandling.Spieler s = new android.ht.sportstatistik.datahandling.Spieler(); s.setVorname(c.getString(c.getColumnIndex(android.ht.sportstatistik.datahandling.DatabaseHelper.SPIELER_VORNAME))); s.setNachname(c.getString(c.getColumnIndex(android.ht.sportstatistik.datahandling.DatabaseHelper.SPIELER_NACHNAME))); s.setNummmer(c.getInt(c.getColumnIndex(android.ht.sportstatistik.datahandling.DatabaseHelper.SPIELER_NUMMER))); s.setId(c.getInt(c.getColumnIndex(android.ht.sportstatistik.datahandling.DatabaseHelper.KEY_ID))); if (c.getString(c.getColumnIndex(android.ht.sportstatistik.datahandling.DatabaseHelper.SPIELER_TORWART)).equals(\"Ja\")) { s.setTorwart(true); }else { s.setTorwart(false); } alleSpielerFromTeam.add(s); } while (c.moveToNext() ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8099/buggy-version/app.src.main.java.android.ht.sportstatistik.datahandling.DatabaseHelper.java", "BodyUseAPI": ["android.database.Cursor.getColumnIndex(java.lang.String)", "android.database.Cursor.getInt(c.getColumnIndex(android.ht.sportstatistik.datahandling.DatabaseHelper.SPIELER_NUMMER))", "android.database.Cursor.getString(c.getColumnIndex(android.ht.sportstatistik.datahandling.DatabaseHelper.SPIELER_VORNAME))", "c.getString(c.getColumnIndex(android.ht.sportstatistik.datahandling.DatabaseHelper.SPIELER_TORWART)).equals(java.lang.String)", "android.database.Cursor.getColumnIndex(java.lang.String)", "android.database.Cursor.getString(c.getColumnIndex(android.ht.sportstatistik.datahandling.DatabaseHelper.SPIELER_NACHNAME))", "android.database.Cursor.getColumnIndex(java.lang.String)", "android.database.Cursor.moveToNext()", "android.ht.sportstatistik.datahandling.Spieler.setNummmer(c.getInt(c.getColumnIndex(android.ht.sportstatistik.datahandling.DatabaseHelper.SPIELER_NUMMER)))", "android.database.Cursor.getColumnIndex(java.lang.String)", "android.database.Cursor.getString(c.getColumnIndex(android.ht.sportstatistik.datahandling.DatabaseHelper.SPIELER_TORWART))", "android.database.Cursor.getColumnIndex(java.lang.String)", "android.ht.sportstatistik.datahandling.Spieler.setNachname(c.getString(c.getColumnIndex(android.ht.sportstatistik.datahandling.DatabaseHelper.SPIELER_NACHNAME)))", "android.ht.sportstatistik.datahandling.Spieler.setVorname(c.getString(c.getColumnIndex(android.ht.sportstatistik.datahandling.DatabaseHelper.SPIELER_VORNAME)))", "android.database.Cursor.getInt(c.getColumnIndex(android.ht.sportstatistik.datahandling.DatabaseHelper.KEY_ID))", "android.ht.sportstatistik.datahandling.Spieler.setId(c.getInt(c.getColumnIndex(android.ht.sportstatistik.datahandling.DatabaseHelper.KEY_ID)))"], "Fixed commit": "7547c20d100f94e45a38094fe56b564c6c71012c", "Url": "https://api.github.com/repos/DerHexer17/SportStatistik", "Date": "2015-04-01T13:58:03Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.vorburger.adaptable.AdaptableUtil.getAdapterIfIsInstance(java.lang.Object,java.lang.Class<T>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result != null) return result;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6765/buggy-version/src.main.java.ch.vorburger.adaptable.AdaptableUtil.java", "BodyUseAPI": [], "Fixed commit": "9dce4feffedd126c79a944164338b97c8ca1ce39", "Url": "https://api.github.com/repos/vorburger/LeviatorWorld", "Date": "2013-09-30T19:10:57Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((firstTableModel.getRowCount()) != 0) { fillMarksTable(StudDetails.getValueAt(0, 1).toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3725/buggy-version/src.Forms.DisplayForm.java", "BodyUseAPI": [], "Fixed commit": "7fa5eeebee2afbf3fc74c0cb7219947f07b04463", "Url": "https://api.github.com/repos/Ashwinvalento/ResultExtractor", "Date": "2014-01-26T17:59:22Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (name == \"Forest\") { java.lang.System.out.println((\"\\n*****************************************************************\" + ((((((((((\"\\n* *\" + \"\\n* To continue to manufacture your weapon to defeat the monster, *\") + \"\\n* you can decide which item to pick from this location. *\") + \"\\n* *\") + \"\\n* *\") + \"\\n* *\") + \"\\n* N- Nails *\") + \"\\n* T- Thorns *\") + \"\\n* S- Sharpened piece of metal *\") + \"\\n* *\") + \"\\n*****************************************************************\"))); }else if (name == \"Junkyard\") { java.lang.System.out.println((\"\\n*****************************************************************\" + ((((((((((\"\\n* *\" + \"\\n* To continue to manufacture your weapon to defeat the monster, *\") + \"\\n* you can decide which item to pick from this location. *\") + \"\\n* *\") + \"\\n* *\") + \"\\n* *\") + \"\\n* G- Glass shards *\") + \"\\n* T- Thorns *\") + \"\\n* S- Sharpened piece of metal *\") + \"\\n* *\") + \"\\n*****************************************************************\"))); }else if (name == \"Forest2\") { java.lang.System.out.println((\"\\n*****************************************************************\" + ((((((((((\"\\n* *\" + \"\\n* To continue to manufacture your weapon to defeat the monster, *\") + \"\\n* you can decide which item to pick from this location. *\") + \"\\n* *\") + \"\\n* *\") + \"\\n* *\") + \"\\n* B- Barbed Wire *\") + \"\\n* G- Glass shards *\") + \"\\n* SS- Staples *\") + \"\\n* *\") + \"\\n*****************************************************************\"))); }else if (name == \"Forest3\") { java.lang.System.out.println((\"\\n*****************************************************************\" + ((((((((((\"\\n* *\" + \"\\n* To continue to manufacture your weapon to defeat the monster, *\") + \"\\n* you can decide which item to pick from this location. *\") + \"\\n* *\") + \"\\n* *\") + \"\\n* *\") + \"\\n* N- Nails *\") + \"\\n* B- Barbed Wire *\") + \"\\n* SS- Staples *\") + \"\\n* *\") + \"\\n*****************************************************************\"))); }else { java.lang.System.out.println((\"\\n*****************************************************************\" + ((((((((((\"\\n* *\" + \"\\n* To continue to manufacture your weapon to defeat the monster, *\") + \"\\n* you can decide which item to pick from this location. *\") + \"\\n* *\") + \"\\n* *\") + \"\\n* *\") + \"\\n* G- Glass shards *\") + \"\\n* T- Thorns *\") + \"\\n* SS- Staples *\") + \"\\n* *\") + \"\\n*****************************************************************\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5892/buggy-version/StrangerThings.src.project.strangerThings.view.PickUpItemView.java", "BodyUseAPI": [], "Fixed commit": "b30023aac70d41c256912b6ffa3f8e76ff2e5f5d", "Url": "https://api.github.com/repos/Yamisteven23/Peterson-AndohKesson-Team", "Date": "2016-12-14T20:03:17Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.Ben12345rocks.VotingPlugin.Config.ConfigVoteSites.getInstance().getExtraRewardWorld(voteSite.getSiteName(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (worlds != null) { for (java.lang.String worldName : worlds) { if (worldName != \"\") { if (worldName == world) { int worldRewards = com.Ben12345rocks.VotingPlugin.Data.Data.getInstance().getOfflineVotesWorld(this, voteSite.getSiteName(), reward, worldName); while (worldRewards > 0) { voteSite.giveExtraRewardReward(this, reward, 100); worldRewards--; } com.Ben12345rocks.VotingPlugin.Data.Data.getInstance().setOfflineVotesWorld(this, voteSite.getSiteName(), reward, worldName, 0); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2489/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Objects.User.java", "BodyUseAPI": [], "Fixed commit": "305037b8bf1c92104e7220c26b05bb037b77de9e", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-05-05T00:50:21Z"},
{"Line": "=>970", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fr.paris.lutece.portal.service.security.SecurityTokenService.getInstance().validate(request, fr.paris.lutece.portal.web.user.AdminUserJspBean.JSP_URL_MODIFY_USER))) { throw new fr.paris.lutece.portal.service.admin.AccessDeniedException(\"Invalid security token\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6045/buggy-version/src.java.fr.paris.lutece.portal.web.user.AdminUserJspBean.java", "BodyUseAPI": [], "Fixed commit": "65b128c157cadff1ad9e9af723f467de072b39f8", "Url": "https://api.github.com/repos/rzara/lutece-core", "Date": "2017-06-21T15:17:41Z"},
{"Line": "=>973", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == values) values = new java.lang.Object[]{ null };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/562/buggy-version/src.play.modules.morphia.Model.java", "BodyUseAPI": [], "Fixed commit": "eadd3f2f9062e107cc48a77f955730193a15f053", "Url": "https://api.github.com/repos/greenlaw110/play-morphia", "Date": "2012-03-20T07:45:05Z"},
{"Line": "=>1128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == params) params = new java.lang.Object[]{ null };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/562/buggy-version/src.play.modules.morphia.Model.java", "BodyUseAPI": [], "Fixed commit": "eadd3f2f9062e107cc48a77f955730193a15f053", "Url": "https://api.github.com/repos/greenlaw110/play-morphia", "Date": "2012-03-20T07:45:05Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.onelogin.sdk.conn.OneloginOAuthJSONAccessTokenResponse.getExpiresIn()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (expiresIn != null) { expiration = new org.joda.time.DateTime(((java.lang.System.currentTimeMillis()) + (expiresIn * 1000))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7623/buggy-version/src.main.java.com.onelogin.sdk.conn.Client.java", "BodyUseAPI": [], "Fixed commit": "eee7aeb8b755db1690b6103b81e2d617817e63c7", "Url": "https://api.github.com/repos/onelogin/onelogin-java-sdk", "Date": "2017-09-11T15:31:06Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.onelogin.sdk.conn.OneloginOAuthJSONAccessTokenResponse.getExpiresIn()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (expiresIn != null) { expiration = new org.joda.time.DateTime(((java.lang.System.currentTimeMillis()) + (expiresIn * 1000))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7623/buggy-version/src.main.java.com.onelogin.sdk.conn.Client.java", "BodyUseAPI": [], "Fixed commit": "eee7aeb8b755db1690b6103b81e2d617817e63c7", "Url": "https://api.github.com/repos/onelogin/onelogin-java-sdk", "Date": "2017-09-11T15:31:06Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((i > 0.6F) && (i < 0.8F)) { entity = new GameObjects.ShotgunPowerup(universe, player); }else if ((i > 0.4F) && (i < 0.6F)) { entity = new GameObjects.RestoreHealth(universe, player); }else if ((i > 0.2F) && (i < 0.4F)) { entity = new GameObjects.FlameThrowerPowerup(universe, player); }else if ((i > 0.15F) && (i < 0.2F)) { entity = new GameObjects.Invulnerable(universe, player); }else if ((i > 0.1) && (i < 0.15F)) { entity = new GameObjects.DamageMultiplier(universe, player); }else { entity = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2132/buggy-version/src.GameObjects.Box.java", "BodyUseAPI": [], "Fixed commit": "9d3692d0cd369d49c8130aaad05af3f26d621a21", "Url": "https://api.github.com/repos/ZombieGame/ZombieGame", "Date": "2013-11-24T09:10:02Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > 0) { logiikka.pallotTiedostosta(args[0], aurinkokunta); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3664/buggy-version/voimasimu.src.UI.Fysiikkalomake.java", "BodyUseAPI": ["UI.PalloLogiikka.pallotTiedostosta(java.lang.String,java.util.ArrayList<UI.Pallo>)"], "Fixed commit": "5f6089b6da37f9c1a4cdde7de3b3e3ee81ce182c", "Url": "https://api.github.com/repos/juhi24/voimasimu", "Date": "2012-10-09T10:43:00Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.R) <= (this.r)) { mt.weibo.model.Coordinate coord = new mt.weibo.model.Coordinate(this.lat, this.longi, this.R); this.list.add(coord); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6465/buggy-version/src.mt.weibo.common.CoodinatesGenerator.java", "BodyUseAPI": [], "Fixed commit": "7a0de23f0dab2735307de8bc8cc42d22a0331f1b", "Url": "https://api.github.com/repos/vincentgong7/SocialGlassWeibo", "Date": "2015-09-07T14:56:01Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((children) != null) { for (mjc.lexer.Node child : children) { if (child instanceof mjc.lexer.VarDecl) { ((mjc.lexer.VarDecl) (child)).pass2(symTable); }else { ((mjc.lexer.Stmt) (child)).pass2(symTable); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8139/buggy-version/src.mjc.lexer.MainClass.java", "BodyUseAPI": [], "Fixed commit": "4a4b553d87043ac8ac88497c8e3a17477bb5d41b", "Url": "https://api.github.com/repos/langest/komp14", "Date": "2014-04-01T13:59:47Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (timestampobj instanceof java.lang.Long) { timestamp = ((java.lang.Long) (timestampobj)).doubleValue(); }else { timestamp = ((java.lang.Double) (timestampobj)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5288/buggy-version/src.metrics.ReadFromOpenXCFile.java", "BodyUseAPI": [], "Fixed commit": "690c5f5341a7d70321fd4359a51efa8634963d62", "Url": "https://api.github.com/repos/HoneyDrive/HoneyDrive", "Date": "2016-02-26T10:14:42Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isChecked) { mInTimeCb.setChecked(false); mDateInfoLl.setVisibility(View.VISIBLE); mIsIntime = false; }else { if ((mGoodsNum) >= 12) { mInTimeCb.setChecked(false); mSetTimeCb.setChecked(true); mDateInfoLl.setVisibility(View.VISIBLE); mIsIntime = false; }else { mInTimeCb.setChecked(true); mDateInfoLl.setVisibility(View.GONE); mIsIntime = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6961/buggy-version/src.com.xgf.winecome.ui.activity.PersonInfoActivity.java", "BodyUseAPI": [], "Fixed commit": "465975937e4406fb4bfd43c09803009977557673", "Url": "https://api.github.com/repos/xiguofeng/WineCome", "Date": "2015-08-25T08:20:24Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dir.exists())) { dir.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6068/buggy-version/src.main.java.com.skcraft.launcher.Instance.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "accd34abf45ce93f46df9135ad6d78a95bbb19e1", "Url": "https://api.github.com/repos/MineYourMind/launcher", "Date": "2014-07-29T13:22:12Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) == (gui.view.NewPokemonView.State.END)) { main.Game.instance().popView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7140/buggy-version/src.gui.view.NewPokemonView.java", "BodyUseAPI": [], "Fixed commit": "8cf13e3679ed41d6d1b5658377b0d28c600c2ee2", "Url": "https://api.github.com/repos/leahfortier/pokemon", "Date": "2017-03-05T21:21:01Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!eventHappened) { doRandomEncounter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8848/buggy-version/project.src.tag3.gamelogic.PartyWrapper.java", "BodyUseAPI": [], "Fixed commit": "138465fc9bb9386de8a7ee8b15752e31d6122041", "Url": "https://api.github.com/repos/RadioLemon/TheArbitraryGameJam3_HighSchoolers", "Date": "2013-10-13T23:36:33Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((request.isProbe()) != null) && (request.isProbe())) { org.opendaylight.lispflowmapping.implementation.lisp.MapResolver.LOG.debug(\"Map-Resolver ignoring incoming RLOC probe control message.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4741/buggy-version/mappingservice.implementation.src.main.java.org.opendaylight.lispflowmapping.implementation.lisp.MapResolver.java", "BodyUseAPI": [], "Fixed commit": "17247b704d5b86808a5dbec7bdd3abe9423d9013", "Url": "https://api.github.com/repos/opendaylight/lispflowmapping", "Date": "2016-06-10T21:19:05Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((request.isSmr()) != null) && (request.isSmr())) { org.opendaylight.lispflowmapping.implementation.lisp.MapResolver.LOG.debug(\"Map-Resolver ignoring incoming SMR control message.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4741/buggy-version/mappingservice.implementation.src.main.java.org.opendaylight.lispflowmapping.implementation.lisp.MapResolver.java", "BodyUseAPI": [], "Fixed commit": "17247b704d5b86808a5dbec7bdd3abe9423d9013", "Url": "https://api.github.com/repos/opendaylight/lispflowmapping", "Date": "2016-06-10T21:19:05Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player.getWorld().getName().equals(\"world\")) org.c4k3.PvPTeleport.SQLite.worldLocsRemove(uuid);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2884/buggy-version/src.org.c4k3.PvPTeleport.TeleportBack.java", "BodyUseAPI": [], "Fixed commit": "6ff2a22f09181b91b5f03d60f230358b0e2536b4", "Url": "https://api.github.com/repos/C4K3/PvPTeleport", "Date": "2014-11-01T17:40:59Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((config.getFilters().pattern().compareTo(\".\")) == 0) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6495/buggy-version/src.main.java.cloudservices.brokerage.policy.crawling_services.crawler4jservice.crawler_logic.CustomCrawler.java", "BodyUseAPI": [], "Fixed commit": "c98716b898d81d240c3b19aadd619c97d137b902", "Url": "https://api.github.com/repos/arashk1368/crawler4jService", "Date": "2014-04-25T02:25:49Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(drawerView.equals(drawerLeftListView))) { super.onDrawerSlide(drawerView, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3080/buggy-version/04_AndroidIn24Hours.Hour13ApplicationDrawer.app.src.main.java.com.ggg.hour13applicationdrawer.MainActivity.java", "BodyUseAPI": ["android.support.v7.app.ActionBarDrawerToggle.onDrawerSlide(android.view.View,int)"], "Fixed commit": "c0e39442a78b820abe14481e04959d80e84dfb0c", "Url": "https://api.github.com/repos/gaga1227/_android", "Date": "2016-02-01T09:16:30Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["backtype.storm.tuple.Tuple.getStringByField(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (outputMap.containsKey(site)) { outputMap.put(site, ((outputMap.get(site)) + count)); }else { outputMap.put(site, count); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2207/buggy-version/src.main.java.helloworld.LearningStormGlobalAggBolt.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String,int)", "java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String,java.lang.Integer)", "java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Fixed commit": "53765b2cd28a65d6933092d7ac7ff94580e8f18a", "Url": "https://api.github.com/repos/jordan-young-vt/storm-sandbox", "Date": "2015-02-20T22:52:19Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (buttonMusic.isPressed()) { if (isChecked) { playController.fire(PlayController.Trigger.Play); }else { playController.fire(PlayController.Trigger.Stop); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2009/buggy-version/mobile.src.main.java.com.dtodorov.zerobeat.activities.PlayActivity.java", "BodyUseAPI": [], "Fixed commit": "8f2ae6fcba11cf0a4d69f28a7b4efb0d9d335ab0", "Url": "https://api.github.com/repos/dimant/ZeroBeat", "Date": "2017-07-22T19:17:30Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((poxProcess) != null) { poxProcess.destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7248/buggy-version/src.ru.mail.fedka2005.main.Controller.java", "BodyUseAPI": [], "Fixed commit": "a3e1d23da1c7a7c897cc1843280b6f4469ad64ca", "Url": "https://api.github.com/repos/fedor-goncharov/PoxWrapper", "Date": "2014-05-07T09:27:12Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.InputStream.read()", "java.io.InputStream.read()", "java.io.InputStream.read()", "java.io.InputStream.read()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((ch1 | ch2) | ch3) | ch4) < 0) throw new java.io.EOFException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7825/buggy-version/StdInClient.java", "BodyUseAPI": [], "Fixed commit": "85b026c8741d1c217bd4270301c8c11c96a7482d", "Url": "https://api.github.com/repos/pzemtsov/article-buffering-streams", "Date": "2015-01-29T21:01:50Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.camel.util.ObjectHelper.isEmpty(name)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6554/buggy-version/components.camel-core-osgi.src.main.java.org.apache.camel.core.osgi.OsgiClassResolver.java", "BodyUseAPI": [], "Fixed commit": "fca886e36625e40dd005adcce94685cbab243ee7", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-03-04T05:59:03Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((path.get(0).getType()) == 20) { java.lang.Integer lastIndex = totalPath.indexOf(path.get(0)); toReturn.add((\"Take the stairs to floor \" + (totalPath.get((lastIndex - 1)).getFloor()))); }else if (((path.get(0).getType()) > 5) && ((path.get(0).getType()) < 20)) { if (path.get(0).getBuilding().equals(outdoors)) { toReturn.add(\"Proceed to enter the building.\"); }else { toReturn.add(\"Proceed to the exit the building.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2318/buggy-version/src.main.java.pathfinding.TextualDirections.java", "BodyUseAPI": ["java.util.ArrayList<data.Node>.get(int)", "java.util.ArrayList<data.Node>.indexOf(path.get(0))", "path.get(0).getBuilding().equals(java.lang.String)", "java.util.ArrayList<data.Node>.get(int)", "java.util.ArrayList<data.Node>.get(int)", "path.get(0).getType()", "path.get(0).getType()", "java.util.ArrayList<data.Node>.get(int)", "path.get(0).getBuilding()"], "Fixed commit": "d367939ee9c51755a43a15a0053eb93e3c8ed911", "Url": "https://api.github.com/repos/CS3733-TeamAlpha/Project", "Date": "2017-03-01T04:59:16Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((path.get(i).getType()) == 20) && ((path.get((i - 1)).getType()) == 20)) { toReturn.add((\"Take the stairs to floor \" + (path.get((i - 1)).getFloor()))); }else if (tempN.equals(\"the hallway\")) { if (path.get((i - 2)).getBuilding().equals(outdoors)) { toReturn.add(((angles[tempA]) + \" and walk down the sidewalk.\")); }else { toReturn.add((((angles[tempA]) + \" and walk down \") + tempN)); } }else { toReturn.add(((((angles[tempA]) + \" towards \\\"\") + tempN) + \"\\\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2318/buggy-version/src.main.java.pathfinding.TextualDirections.java", "BodyUseAPI": ["path.get((i - 1)).getFloor()", "java.util.ArrayList<data.Node>.get(int)", "java.util.ArrayList<data.Node>.get(int)", "path.get((i - 2)).getBuilding()", "java.util.ArrayList<java.lang.String>.add((\"Take the stairs to floor \" + (path.get((i - 1)).getFloor())))", "path.get((i - 2)).getBuilding().equals(java.lang.String)"], "Fixed commit": "d367939ee9c51755a43a15a0053eb93e3c8ed911", "Url": "https://api.github.com/repos/CS3733-TeamAlpha/Project", "Date": "2017-03-01T04:59:16Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t.isAfter(end)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6246/buggy-version/src.core.schedule.DailySchedule.java", "BodyUseAPI": [], "Fixed commit": "e3c0f11a7016650ff219eab1a9120caab8e532a0", "Url": "https://api.github.com/repos/asermax/schl", "Date": "2012-08-16T04:39:08Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((fKeywordParameterDefaults) != null) && ((other.fKeywordParameterDefaults) == null)) || (((fKeywordParameterDefaults) == null) && ((other.fKeywordParameterDefaults) != null))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2912/buggy-version/src.org.eclipse.imp.pdb.facts.type.ConstructorType.java", "BodyUseAPI": [], "Fixed commit": "c8c678710137ddab4c7cd0939104f7cc7382c27c", "Url": "https://api.github.com/repos/cwi-swat/pdb.values", "Date": "2014-08-01T07:01:58Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((participantDTO.getEthnicity()) != null) { participant.setEthnicity(participantDTO.getEthnicity()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5201/buggy-version/WEB-INF.src.krishagni.catissueplus.bizlogic.ParticipantBizLogic.java", "BodyUseAPI": ["krishagni.catissueplus.dto.ParticipantDetailsDTO.getEthnicity()", "edu.wustl.catissuecore.domain.Participant.setEthnicity(participantDTO.getEthnicity())"], "Fixed commit": "c481ae155a3aea2ea289fb89b7d76af5912cb945", "Url": "https://api.github.com/repos/NCIP/catissue-core", "Date": "2014-02-19T02:33:23Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["conn.createQuery(com.lap.zuzuweb.dao.Sql2O.DeviceDaoBySql2O.SQL_GET_DEVICE_BY_DEVICE_ID).addParameter(\"device_id\", deviceID).executeAndFetch(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((devices.size()) == 0) { device = java.util.Optional.empty(); }else if ((devices.size()) == 1) { device = java.util.Optional.of(devices.get(0)); }else { throw new java.lang.RuntimeException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4315/buggy-version/web.src.main.java.com.lap.zuzuweb.dao.Sql2O.DeviceDaoBySql2O.java", "BodyUseAPI": ["java.util.List<com.lap.zuzuweb.model.Device>.get(int)", "java.util.List<com.lap.zuzuweb.model.Device>.size()", "java.util.Optional.of(devices.get(0))"], "Fixed commit": "bbfa6e77106dd049800bcbcfed405556ff360542", "Url": "https://api.github.com/repos/happylap/zuzu_web", "Date": "2016-05-16T03:01:39Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(out.endsWith(\"/\"))) { out = (out) + \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6444/buggy-version/src.main.java.py.gov.datos.DDGenerate.java", "BodyUseAPI": [], "Fixed commit": "25721ae98edf5e71fd2a820bda4b5cc64877aa71", "Url": "https://api.github.com/repos/rparrapy/ddgenerate", "Date": "2014-08-01T21:39:13Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Objects.equals(startDate, stopDate)) { isChecked = false; javax.swing.JOptionPane.showMessageDialog(panel, \"Days entered are the SAME\", \"Warning!\", javax.swing.JOptionPane.WARNING_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8904/buggy-version/PerfusionChargeTime.src.ui.ChargeUI.java", "BodyUseAPI": [], "Fixed commit": "0c50e24acafb8dc75419d474a5bda62fe74b2d8b", "Url": "https://api.github.com/repos/kimberle/ChargeTime", "Date": "2017-04-05T18:14:03Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.time.LocalDate.now().getDayOfMonth()) < 10) { today += \"0\" + (java.time.LocalDate.now().getDayOfMonth()); }else { today += java.time.LocalDate.now().getDayOfMonth(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8904/buggy-version/PerfusionChargeTime.src.ui.ChargeUI.java", "BodyUseAPI": [], "Fixed commit": "0c50e24acafb8dc75419d474a5bda62fe74b2d8b", "Url": "https://api.github.com/repos/kimberle/ChargeTime", "Date": "2017-04-05T18:14:03Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v7.widget.AppCompatSpinner.getSelectedItem()", "android.support.v7.widget.AppCompatSpinner.getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((((fromUnit == null) || (fromUnit == \"\")) || (toUnit == null)) || (toUnit == \"\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2343/buggy-version/app.src.main.java.cloch.demo.currencyconverter.business.AmountTextWatcher.java", "BodyUseAPI": [], "Fixed commit": "e80b9f9792acc2f3abe2d64a3a7d2776949eb305", "Url": "https://api.github.com/repos/clochgit/CurrencyConverterDemo", "Date": "2017-08-04T16:11:12Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.registry.core.service.RegistryService.getGovernanceSystemRegistry(org.wso2.carbon.event.core.internal.util.EventBrokerHolder.getInstance().getTenantId())", "org.wso2.carbon.event.core.internal.subscription.registry.RegistrySubscriptionManager.getResourcePath(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (userRegistry.resourceExists(resourcePath)) { userRegistry.delete(resourcePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2034/buggy-version/components.event.org.wso2.carbon.event.core.src.main.java.org.wso2.carbon.event.core.internal.subscription.registry.RegistrySubscriptionManager.java", "BodyUseAPI": ["org.wso2.carbon.registry.core.session.UserRegistry.delete(java.lang.String)"], "Fixed commit": "b09b1dd7e8cea7a9e8b27d6aac8aeca3b0aa779d", "Url": "https://api.github.com/repos/thusithathilina/carbon-commons", "Date": "2015-04-29T14:15:34Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.event.core.internal.subscription.registry.RegistrySubscriptionManager.getJMSSubResourcePath(java.lang.String,java.lang.String)", "org.wso2.carbon.registry.core.service.RegistryService.getGovernanceSystemRegistry(org.wso2.carbon.event.core.internal.util.EventBrokerHolder.getInstance().getTenantId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (userRegistry.resourceExists(jMSResourcePath)) { userRegistry.delete(jMSResourcePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2034/buggy-version/components.event.org.wso2.carbon.event.core.src.main.java.org.wso2.carbon.event.core.internal.subscription.registry.RegistrySubscriptionManager.java", "BodyUseAPI": ["org.wso2.carbon.registry.core.session.UserRegistry.delete(java.lang.String)"], "Fixed commit": "b09b1dd7e8cea7a9e8b27d6aac8aeca3b0aa779d", "Url": "https://api.github.com/repos/thusithathilina/carbon-commons", "Date": "2015-04-29T14:15:34Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getFirstColumnIndex()) == (-1)) && ((getLastColumnIndex()) != (-1))) { setFirstColumnIndex(getLastColumnIndex()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3647/buggy-version/com.notlob.jgrid.src.com.notlob.jgrid.model.Viewport.java", "BodyUseAPI": [], "Fixed commit": "617e1c0adf7f99ba79505dc976981e1bff65486d", "Url": "https://api.github.com/repos/GrandmasterTash/jGrid", "Date": "2015-05-19T14:36:39Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.newyith.generator.FortressGeneratorRunesManager.onSignChange(org.bukkit.entity.Player,org.bukkit.block.Block)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cancel) { event.setCancelled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1971/buggy-version/src.me.newyith.event.EventListener.java", "BodyUseAPI": [], "Fixed commit": "8351bdd2aa82a1629bfccdeffa317f760e3f0529", "Url": "https://api.github.com/repos/rockysims/fortressplugin", "Date": "2015-09-26T23:14:33Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(id.equals(\"\"))) { contactIdLong = java.lang.Long.parseLong(id); id = \"\"; image = android.graphics.BitmapFactory.decodeStream(openPhoto(contactIdLong)); contactIdLong = 0; if ((image) != null) { holder.profileImage.setImageBitmap(null); holder.profileImage.setImageBitmap(getCroppedBitmap(android.graphics.Bitmap.createScaledBitmap(image, 45, 45, false))); image = null; }else if (!(contact.getName().equals(\"\"))) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/221/buggy-version/app.src.main.java.com.codepath.finalproject.ComposeAdapter.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "5af632f354f5e894399a8306c45ace7402c5ae84", "Url": "https://api.github.com/repos/bcsam/FinalProject2.0", "Date": "2017-07-26T17:19:47Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((cpw.mods.fml.common.FMLCommonHandler.instance().getEffectiveSide()) == (cpw.mods.fml.relauncher.Side.CLIENT)) this.setBackgroundIcon(IEContent.itemShader.icons[3]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6443/buggy-version/src.main.java.blusunrize.immersiveengineering.common.gui.IESlot.java", "BodyUseAPI": [], "Fixed commit": "de91bbaae2861ab1845927f3d9f4f497edbe51dd", "Url": "https://api.github.com/repos/karakufire/ImmersiveEngineering", "Date": "2015-11-04T15:18:12Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getConstructor(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (constructor == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/927/buggy-version/src.main.java.org.aeonbits.owner.Converters.java", "BodyUseAPI": [], "Fixed commit": "26a984667ca36bffc542a55d1ef8f6c9b6cbeefa", "Url": "https://api.github.com/repos/lviggiano/owner", "Date": "2013-05-25T23:09:48Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getConstructor(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (constructor == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/927/buggy-version/src.main.java.org.aeonbits.owner.Converters.java", "BodyUseAPI": [], "Fixed commit": "26a984667ca36bffc542a55d1ef8f6c9b6cbeefa", "Url": "https://api.github.com/repos/lviggiano/owner", "Date": "2013-05-25T23:09:48Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Long, cn.momia.service.course.base.CourseSku>.get(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sku == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4378/buggy-version/course.service-course.src.main.java.cn.momia.service.course.base.impl.CourseServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "b350d7f54032ce3a55bdbfe8135c0d0430bd12ce", "Url": "https://api.github.com/repos/lovemomia/service", "Date": "2015-10-21T07:49:58Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.getRegionManager().praseRegionData(loc.getWorld(),chunk.getX(),chunk.getZ())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (regionData.getMembersUUID().equals(entity.getUniqueId())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5247/buggy-version/src.main.java.de.kekshaus.cubit.commandSuite.universalCommands.main.KickUniversal.java", "BodyUseAPI": [], "Fixed commit": "5f422a2aaae563f6805cbbf529919dc00a041dc2", "Url": "https://api.github.com/repos/MineGaming/cubit", "Date": "2017-03-24T15:26:59Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entity.hasPermission(plugin.getPermNodes().kickAdminBypass)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5247/buggy-version/src.main.java.de.kekshaus.cubit.commandSuite.universalCommands.main.KickUniversal.java", "BodyUseAPI": [], "Fixed commit": "5f422a2aaae563f6805cbbf529919dc00a041dc2", "Url": "https://api.github.com/repos/MineGaming/cubit", "Date": "2017-03-24T15:26:59Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.getRegionManager().praseRegionData(loc.getWorld(),chunk.getX(),chunk.getZ())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (plugin.getRegionManager().hasLandPermission(regionData, entity.getUniqueId())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5247/buggy-version/src.main.java.de.kekshaus.cubit.commandSuite.universalCommands.main.KickUniversal.java", "BodyUseAPI": [], "Fixed commit": "5f422a2aaae563f6805cbbf529919dc00a041dc2", "Url": "https://api.github.com/repos/MineGaming/cubit", "Date": "2017-03-24T15:26:59Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.upb.lina.cfg.controlflow.ControlFlowDiagram.getParameterVariables()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((parameterVariables.size()) > 1) { if (((parameterVariables.size()) == 2) && (!((parameterVariables.get(0).getNewName().equalsIgnoreCase(\"returnvalue\")) || (cfg.getParameterVariables().get(1).getNewName().equalsIgnoreCase(\"returnvalue\"))))) { needsInputFile = true; }else { needsInputFile = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8246/buggy-version/de.upb.lina.transformations.src.de.upb.lina.transformations.logic.GendataPrecomputer.java", "BodyUseAPI": ["java.util.List<de.upb.lina.cfg.controlflow.Variable>.size()", "parameterVariables.get(0).getNewName()", "java.util.List<de.upb.lina.cfg.controlflow.Variable>.get(int)", "parameterVariables.get(0).getNewName().equalsIgnoreCase(java.lang.String)"], "Fixed commit": "f7863e03352349ec7a69c7f7b373a2b0d74eef8f", "Url": "https://api.github.com/repos/oleg82upb/lina4wm-tools", "Date": "2016-09-08T11:01:05Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((left == (Type.TYPEINT)) && (right == (Type.TYPEFLOAT))) { return right; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7194/buggy-version/TBD.QL.src.ql.ast.visistor.TypeASTVisitor.java", "BodyUseAPI": [], "Fixed commit": "4c4b6342336dbe5d9d95ea4eda32592be75c5ac0", "Url": "https://api.github.com/repos/software-engineering-amsterdam/myriad-ql", "Date": "2017-02-21T10:24:12Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((t) != null) t.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2459/buggy-version/src.admin.StatusPanel.java", "BodyUseAPI": [], "Fixed commit": "2c104c2f536e84fb0e12d662dc6f396401b975c9", "Url": "https://api.github.com/repos/CS2212-2012-G2/SurvivorPool", "Date": "2012-03-26T16:11:13Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (base_info.contains(\"to\")) { java.lang.String[] tmp = base_info.split(\"to\"); java.lang.String start = tmp[0]; java.lang.String end = tmp[1]; startSites.add(((java.lang.Integer.parseInt(start.trim())) - 1)); endSites.add(java.lang.Integer.parseInt(end.trim())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6242/buggy-version/src.main.java.nl.wur.ssb.GenBankHandler.parser.InsdcParser.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "83b83cf2c5a4a2480fdaff491eb43da36e38360c", "Url": "https://api.github.com/repos/jessevdam/GenBankHandler", "Date": "2016-06-13T11:12:35Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(gameState.getActiveRound().getActiveTick().moveList.isEmpty())) { gameState.commitMove(lvToken, lvCards); setNextActivePlayer(); }else { gameState.rejectMove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8053/buggy-version/src.server.GameHandler.java", "BodyUseAPI": ["server.GameState.commitMove(library.GameState.PlayerToken,java.util.ArrayList<server.Card>)", "server.GameState.rejectMove()"], "Fixed commit": "b255e5bfbfeb1c79267174dcfcee695a2498dcb5", "Url": "https://api.github.com/repos/aureliailerua/Haggis_QFresh", "Date": "2014-11-29T16:08:41Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (read > 0) fo.write(buffer, 0, read);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8748/buggy-version/motech-cmslite-api.src.main.java.org.motechproject.cmslite.api.web.ResourceServlet.java", "BodyUseAPI": ["java.io.OutputStream.write(byte[],int,int)"], "Fixed commit": "387d85bdd952ef2cfa64e1bedf16e5a558d7f17a", "Url": "https://api.github.com/repos/motech/motech", "Date": "2011-09-28T10:42:58Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((fi != null) && (fi > 0)) { rawEntropy -= fi * (java.lang.Math.log(fi)); ttl += fi; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/595/buggy-version/jahmm.src.jahmm.jadetree.DecisionTreeUtils.java", "BodyUseAPI": ["java.lang.Math.log(java.lang.Integer)"], "Fixed commit": "eecf01b5fd1bfc14c55db730b25f7b58321fb76d", "Url": "https://api.github.com/repos/KommuSoft/jahmm", "Date": "2014-03-12T17:12:09Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.getAnnotation(java.lang.Class<? extends java.lang.annotation.Annotation>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (annotation == null) { java.lang.Object miThis = mi.getThis(); annotation = (miThis != null) ? miThis.getClass().getAnnotation(clazz) : null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/497/buggy-version/core.src.main.java.org.apache.shiro.aop.DefaultAnnotationResolver.java", "BodyUseAPI": [], "Fixed commit": "3ca513f1f2f0472251b73c16c1507034a7028b24", "Url": "https://api.github.com/repos/Collaborne/shiro", "Date": "2016-07-01T17:53:03Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((modelBids.size()) == 0) { deleteOldData(currentTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6806/buggy-version/app.src.main.java.com.dddev.market.place.core.service.UpdateService.java", "BodyUseAPI": [], "Fixed commit": "0b4bf6a5ffc8fea0d3719c404c532120d28dba07", "Url": "https://api.github.com/repos/ugar0ff/OfferFind-TemplatePoc-Android", "Date": "2016-04-13T15:38:20Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((opportunities.size()) == 0) { deleteOldData(currentTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6806/buggy-version/app.src.main.java.com.dddev.market.place.core.service.UpdateService.java", "BodyUseAPI": [], "Fixed commit": "0b4bf6a5ffc8fea0d3719c404c532120d28dba07", "Url": "https://api.github.com/repos/ugar0ff/OfferFind-TemplatePoc-Android", "Date": "2016-04-13T15:38:20Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((streamServiceConnect) != null) && (isBind)) { unbindService(streamServiceConnect); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6806/buggy-version/app.src.main.java.com.dddev.market.place.ui.activity.base.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "0b4bf6a5ffc8fea0d3719c404c532120d28dba07", "Url": "https://api.github.com/repos/ugar0ff/OfferFind-TemplatePoc-Android", "Date": "2016-04-13T15:38:20Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.dddev.market.place.utils.PreferencesUtils.getUserToken(this)) != null) { isBind = bindService(((com.dddev.market.place.core.AppOfferFind) (getApplicationContext())).getStreamServiceIntent(), streamServiceConnect, Context.BIND_AUTO_CREATE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6806/buggy-version/app.src.main.java.com.dddev.market.place.ui.activity.base.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "0b4bf6a5ffc8fea0d3719c404c532120d28dba07", "Url": "https://api.github.com/repos/ugar0ff/OfferFind-TemplatePoc-Android", "Date": "2016-04-13T15:38:20Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((storage_path_list.size()) >= 1) { downloadStreamFromFirebaseStorage(storage_path_list.get(0)); if ((storage_path_list.size()) >= 2) { downloadStreamFromFirebaseStorage(storage_path_list.get(1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4859/buggy-version/app.src.main.java.android.duke290.com.loco.StartActivity.java", "BodyUseAPI": ["android.duke290.com.loco.StartActivity.downloadStreamFromFirebaseStorage(java.lang.String)", "android.duke290.com.loco.StartActivity.downloadStreamFromFirebaseStorage(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.size()", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "8dcc8590c6c344c447f0cfdde69aa4627d05db15", "Url": "https://api.github.com/repos/fairbet/loco", "Date": "2017-04-18T19:43:19Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.ucchyocean.et.Messages.get(java.lang.String,java.lang.Object[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (msg.equals(\"\")) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2295/buggy-version/src.main.java.com.github.ucchyocean.et.TimerTask.java", "BodyUseAPI": [], "Fixed commit": "fe0121f446532537054838e8e1183dab6c70ded9", "Url": "https://api.github.com/repos/ucchyocean/ExpTimer", "Date": "2013-05-19T12:01:44Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.restexpress.pipeline.MessageContext.getResponse()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (response.isSerialized()) { org.restexpress.response.ResponseProcessorSetting settings = context.getResponseProcessorSetting(); if ((settings == null) && force) { settings = responseProcessorManager.resolve(context.getRequest(), response, force); } if (settings != null) { settings.serialize(response); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5800/buggy-version/restexpress-core.src.main.java.org.restexpress.pipeline.handler.DefaultRequestHandler.java", "BodyUseAPI": ["org.restexpress.response.ResponseProcessorManager.resolve(context.getRequest(),org.restexpress.Response,boolean)", "org.restexpress.response.ResponseProcessorSetting.serialize(org.restexpress.Response)"], "Fixed commit": "a8a5e7f37675a2e450899c0116f3b06023e3facd", "Url": "https://api.github.com/repos/geronimo-iia/RestExpress", "Date": "2014-12-04T10:11:53Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.aufdemrand.denizen.objects.properties.item.ItemFlags.flags()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((flags.size()) > 0) { return flags().identify(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2736/buggy-version/src.main.java.net.aufdemrand.denizen.objects.properties.item.ItemFlags.java", "BodyUseAPI": [], "Fixed commit": "2c5928bbc736661e1f8252dd52b4fd883abf43f8", "Url": "https://api.github.com/repos/mcmonkey4eva/Denizen", "Date": "2015-05-02T00:28:29Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((email_text.getText().toString().length()) == 0) editor.putString(\"email\", null); else editor.putString(\"email\", email_text.getText().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2748/buggy-version/app.src.main.java.com.fooding.companyapp.activity.EditActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "SharedPreferences.Editor.putString(java.lang.String,email_text.getText().toString())", "email_text.getText().toString()"], "Fixed commit": "a2aec787e4169167008152d8078031033fb872b1", "Url": "https://api.github.com/repos/CDP-Group2/FOODINGCOMPANY", "Date": "2017-12-07T07:40:35Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((address_text.getText().toString().length()) == 0) editor.putString(\"address\", null); else editor.putString(\"address\", address_text.getText().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2748/buggy-version/app.src.main.java.com.fooding.companyapp.activity.EditActivity.java", "BodyUseAPI": ["SharedPreferences.Editor.putString(java.lang.String,address_text.getText().toString())", "address_text.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "a2aec787e4169167008152d8078031033fb872b1", "Url": "https://api.github.com/repos/CDP-Group2/FOODINGCOMPANY", "Date": "2017-12-07T07:40:35Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((d == null) || ((d.getSummary()) == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/704/buggy-version/RequirementsDiscussionAnalyzer.src.main.java.org.computer.knauss.reqtDiscussion.ui.uiModel.DiscussionTableModel.java", "BodyUseAPI": [], "Fixed commit": "589cafc5a04ddb7b53afa4b6e6d2e1f89806e0f0", "Url": "https://api.github.com/repos/oerich/ReqtDisc", "Date": "2012-11-13T20:16:38Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.support.v4.content.ContextCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { requestPermissions(new java.lang.String[]{ Manifest.permission.WRITE_EXTERNAL_STORAGE }, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6096/buggy-version/lab.lab04.SimpleMyDot.app.src.main.java.kmitl.lab04.armhansa58070159.simplemydot.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b8b970f45937359adca08541a2d4365cfe576cae", "Url": "https://api.github.com/repos/armhansa/course-android-kmitl", "Date": "2017-09-20T12:36:01Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(collidable.isMovable())) { return; }else { throw new robertalblas.nordland.exception.CollisionException(collidables[mapIndex], \"Collision detected\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8109/buggy-version/Nordland.src.robertalblas.nordland.collision.CollisionMap.java", "BodyUseAPI": [], "Fixed commit": "9ec06255d4efbcff8f26c13e2367d20da9346cc2", "Url": "https://api.github.com/repos/RobertAlblas/Nordland", "Date": "2013-12-28T11:52:55Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (replacementIndex >= (elements.length())) { replacementIndex = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5519/buggy-version/core.src.main.java.org.renjin.primitives.subset.SubscriptOperation.java", "BodyUseAPI": [], "Fixed commit": "c4eda9cc9d14a211baab1413b5f5c32ecb3d99bd", "Url": "https://api.github.com/repos/bedatadriven/renjin", "Date": "2013-11-07T21:57:01Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playerNotificationCallback != null) com.joxad.android_easy_spotify.SpotifyPlayerManager.player.addPlayerNotificationCallback(SpotifyManager.playerNotificationCallback);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4456/buggy-version/android-easy-spotify.android-easy-spotify.src.main.java.com.joxad.android_easy_spotify.SpotifyPlayerManager.java", "BodyUseAPI": [], "Fixed commit": "bd811e7911e342faec1d95b8cfd7e38abb0ec615", "Url": "https://api.github.com/repos/joxad/android-easy-spotify", "Date": "2016-04-09T22:26:29Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connectionStateCallback != null) com.joxad.android_easy_spotify.SpotifyPlayerManager.player.addConnectionStateCallback(SpotifyManager.connectionStateCallback);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4456/buggy-version/android-easy-spotify.android-easy-spotify.src.main.java.com.joxad.android_easy_spotify.SpotifyPlayerManager.java", "BodyUseAPI": [], "Fixed commit": "bd811e7911e342faec1d95b8cfd7e38abb0ec615", "Url": "https://api.github.com/repos/joxad/android-easy-spotify", "Date": "2016-04-09T22:26:29Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.fs.Path.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pathName.split(\"=\").length) != 2) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4159/buggy-version/indexing-hadoop.src.main.java.io.druid.indexer.path.PartitionPathSpec.java", "BodyUseAPI": [], "Fixed commit": "508c944296546a2c555aa034d4e2cb8167b67211", "Url": "https://api.github.com/repos/sirpkt/druid", "Date": "2016-05-10T07:10:58Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((args.length) >= 3) { edu.jhu.cvrg.utilities.authentication.GlobusRESTAuthenticator.GO_HOST = args[2]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5652/buggy-version/src.edu.jhu.cvrg.utilities.authentication.GlobusRESTAuthenticator.java", "BodyUseAPI": [], "Fixed commit": "9c7656cb8059c1610f48658413fecf4944044832", "Url": "https://api.github.com/repos/CardioVascular-Research-Group/cvrg_authenticator", "Date": "2014-04-15T15:28:20Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!haveDomainUserRole) { roles.add(new org.springframework.security.core.authority.SimpleGrantedAuthority(ru.kolaer.server.webportal.beans.ToolsLDAP.DEFAULT_ROLE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8630/buggy-version/server.webportal.src.main.java.ru.kolaer.server.webportal.beans.ToolsLDAP.java", "BodyUseAPI": [], "Fixed commit": "8fc5193a5e00791b2f2f5ea8d192fd8920ec4847", "Url": "https://api.github.com/repos/danilovEY/Kolaer-systems", "Date": "2016-11-23T10:27:54Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (group.equals(ru.kolaer.server.webportal.beans.ToolsLDAP.DEFAULT_ROLE)) haveDomainUserRole = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8630/buggy-version/server.webportal.src.main.java.ru.kolaer.server.webportal.beans.ToolsLDAP.java", "BodyUseAPI": [], "Fixed commit": "8fc5193a5e00791b2f2f5ea8d192fd8920ec4847", "Url": "https://api.github.com/repos/danilovEY/Kolaer-systems", "Date": "2016-11-23T10:27:54Z"},
{"Line": "=>1218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((centerOnThisGuy.length()) > 0) { spinner.setSelection(((getThisGuysRow(centerOnThisGuy)) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3854/buggy-version/app.src.main.java.com.harnk.whereru.ShowMapActivity.java", "BodyUseAPI": ["com.harnk.whereru.ShowMapActivity.getThisGuysRow(java.lang.String)", "android.widget.Spinner.setSelection(int)"], "Fixed commit": "cb82ba159bc1dbe65fa88091ed702eb1853d1fae", "Url": "https://api.github.com/repos/harnk/android-whereru", "Date": "2016-04-21T03:48:01Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.data.jdbc.repository.support.JdbcBeanPropertyMapper<T>.read(org.springframework.data.jdbc.mapping.JdbcPersistentEntity<T>,org.springframework.data.jdbc.repository.support.DBObject)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (read instanceof org.springframework.data.jdbc.domain.JdbcPersistable) { @java.lang.SuppressWarnings(\"unchecked\") org.springframework.data.jdbc.domain.JdbcPersistable<T, ?> cast = org.springframework.data.jdbc.domain.JdbcPersistable.class.cast(read); cast.persist(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2674/buggy-version/src.main.java.org.springframework.data.jdbc.repository.support.JdbcBeanPropertyMapper.java", "BodyUseAPI": ["java.lang.Class.cast(T)"], "Fixed commit": "6b9d51b967e9b6a771d3ad0dbe4392638067953e", "Url": "https://api.github.com/repos/jihwan/spring-data-jdbc", "Date": "2016-05-25T09:25:39Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((claz == null) || (claz.isPrimitive())) { throw new com.alimuya.kevvy.reflect.exception.ConstructorReflectException(\"argument claz==null || claz.isPrimitive()\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4363/buggy-version/src.com.alimuya.kevvy.reflect.KevvyConstructorReflect.java", "BodyUseAPI": [], "Fixed commit": "7d1d9976025d1350d60df6252a49a983051a68b0", "Url": "https://api.github.com/repos/alimuya/kevvy-reflect", "Date": "2015-06-11T06:02:41Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (z <= i) { x[(i - z)] = new com.badlogic.gdx.scenes.scene2d.ui.Label(pisz, new com.badlogic.gdx.scenes.scene2d.ui.Label.LabelStyle(sofiaProSoftMedium46px, com.badlogic.gdx.graphics.Color.BLACK)); x[(i - z)].setPosition((((190 * w) + ((layout.width) / 2)) + 100), upY(((h * 75) + 150))); addActor(x[(i - z)]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1400/buggy-version/core.src.pl.edu.agh.polynomial.states.MenuScreen.java", "BodyUseAPI": [], "Fixed commit": "1b46e110bbc77f58ac1b1f2aa6b2b1dd1c59e7a7", "Url": "https://api.github.com/repos/piotrekm7/Polynomial", "Date": "2017-01-15T09:05:08Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.vhadoop.util.CompoundStatus.getFirstFailure(HadoopAdaptor.STATUS_GET_ACTIVE_TTS)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (activeTTsError != null) { java.lang.String[] failedTTs = getFailedTTsFromErrorMsg(activeTTsError.getMessage()); if (failedTTs != null) { for (java.lang.String failedTT : failedTTs) { com.vmware.vhadoop.vhm.strategy.ManualScaleStrategy._log.warning(((\"VM <%V\" + failedTT) + \"%V> did not successfully respond in a reasonable time\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/162/buggy-version/elastic-runtime2.src.main.java.com.vmware.vhadoop.vhm.strategy.ManualScaleStrategy.java", "BodyUseAPI": ["com.vmware.vhadoop.vhm.strategy.ManualScaleStrategy.CallableStrategy.getFailedTTsFromErrorMsg(activeTTsError.getMessage())", "com.vmware.vhadoop.util.CompoundStatus.TaskStatus.getMessage()"], "Fixed commit": "95065213118f8293d4bf079dc69d76e980e449ca", "Url": "https://api.github.com/repos/vmware-serengeti/vhm", "Date": "2013-06-14T01:12:36Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.vhadoop.util.CompoundStatus.getFirstFailure()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (firstGeneralError != null) { if (tlStatus.screenStatusesForSpecificFailures(new java.lang.String[]{ com.vmware.vhadoop.api.vhm.VCActions.VC_POWER_ON_STATUS_KEY, com.vmware.vhadoop.api.vhm.VCActions.VC_POWER_OFF_STATUS_KEY, com.vmware.vhadoop.api.vhm.ClusterMapReader.POWER_STATE_CHANGE_STATUS_KEY })) { limitEvent.reportError(((firstGeneralError.getMessage()) + \" however, powering on/off VMs succeeded;\")); }else { limitEvent.reportError(firstGeneralError.getMessage()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/162/buggy-version/elastic-runtime2.src.main.java.com.vmware.vhadoop.vhm.strategy.ManualScaleStrategy.java", "BodyUseAPI": ["com.vmware.vhadoop.vhm.events.SerengetiLimitInstruction.reportError(firstGeneralError.getMessage())", "com.vmware.vhadoop.vhm.events.SerengetiLimitInstruction.reportError(((firstGeneralError.getMessage()) + \" however, powering on/off VMs succeeded;\"))", "com.vmware.vhadoop.util.CompoundStatus.TaskStatus.getMessage()", "com.vmware.vhadoop.util.CompoundStatus.TaskStatus.getMessage()"], "Fixed commit": "95065213118f8293d4bf079dc69d76e980e449ca", "Url": "https://api.github.com/repos/vmware-serengeti/vhm", "Date": "2013-06-14T01:12:36Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (qu.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3280/buggy-version/squidlib.src.main.java.squidpony.squidgrid.gui.gdx.SquidInput.java", "BodyUseAPI": [], "Fixed commit": "37dea0f9c626c275a65525bbc47af0046d341485", "Url": "https://api.github.com/repos/SquidPony/SquidLib", "Date": "2017-07-26T14:44:07Z"},
{"Line": "=>973", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wasVisible) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6861/buggy-version/org.enigma.EnigmaRunner.java", "BodyUseAPI": [], "Fixed commit": "418a7f4ed8ae7455db69a5d448d232e1e6a472a2", "Url": "https://api.github.com/repos/enigma-dev/lgmplugin", "Date": "2014-10-06T22:25:08Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((data != null) && (!(data instanceof com.touchableheroes.drafts.spacerx.tx.Remove))) && (data instanceof com.touchableheroes.drafts.spacerx.spacerx.examples.step2.GameItemRecyclerViewAdapter.ListImpl)) { adapter.updateData(((com.touchableheroes.drafts.spacerx.spacerx.examples.step2.GameItemRecyclerViewAdapter.ListImpl) (data))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5944/buggy-version/app.src.main.java.com.touchableheroes.drafts.spacerx.spacerx.examples.step2.GameItemFragment.java", "BodyUseAPI": [], "Fixed commit": "22b65e534e62c4533143cc2023e492571d4155c8", "Url": "https://api.github.com/repos/drdrej/android-spacerx-playground", "Date": "2017-05-07T18:46:31Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wuhulala.cache.CacheService<java.lang.String, java.lang.Integer>.getExpireSeconds(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (remainSeconds != 0) { this.cacheService.setValue(ip, (useNumber + 1), remainSeconds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3550/buggy-version/src.main.java.com.wuhulala.auth.IpFilter.java", "BodyUseAPI": ["com.wuhulala.cache.CacheService<java.lang.String, java.lang.Integer>.setValue(java.lang.String,int,long)"], "Fixed commit": "d7ae6d3503598922af12ef8e04664e87fa68d8bd", "Url": "https://api.github.com/repos/wuhulala/qa-api", "Date": "2017-06-17T06:39:01Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type2 == null) { type2 = new com.iconmaster.source.compile.DataType(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/917/buggy-version/src.com.iconmaster.source.compile.DataType.java", "BodyUseAPI": [], "Fixed commit": "4c65156103178c71aff9d7ed09a6b018263e0b1f", "Url": "https://api.github.com/repos/iconmaster5326/Source", "Date": "2014-11-11T01:03:19Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type1 == null) { type1 = new com.iconmaster.source.compile.DataType(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/917/buggy-version/src.com.iconmaster.source.compile.DataType.java", "BodyUseAPI": [], "Fixed commit": "4c65156103178c71aff9d7ed09a6b018263e0b1f", "Url": "https://api.github.com/repos/iconmaster5326/Source", "Date": "2014-11-11T01:03:19Z"},
{"Line": "=>1320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(deviceSupportMultiPane())) layout.closeDrawer(drawer);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1979/buggy-version/MaterialNavigationDrawerLib.src.main.java.it.neokree.materialnavigationdrawer.MaterialNavigationDrawer.java", "BodyUseAPI": [], "Fixed commit": "ee44fe43743462dfe4c72f5adf6a01b63cc673d0", "Url": "https://api.github.com/repos/filipebezerra/HorariosRmtcGoiania", "Date": "2015-03-12T06:22:28Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((methodEntity.getMethodDeclaration().getBody().getStmts()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/9084/buggy-version/src.main.java.ch.zhaw.file_operations.UtilityClass.java", "BodyUseAPI": [], "Fixed commit": "9452d0829c026ee7b660bd6d101ecf748abf0197", "Url": "https://api.github.com/repos/serviceprototypinglab/podilizer", "Date": "2017-01-19T14:22:03Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["result.getCommandExecution().getCommand().getTask().getParameterMap().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((endDateParam != null) && (!(endDateParam.toString().isEmpty()))) { endDate = tr.org.liderahenk.usb.ltsp.commands.UsbFuseGroupCommand.cronToDate(endDateParam.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/814/buggy-version/lider-usb-ltsp.src.main.java.tr.org.liderahenk.usb.ltsp.commands.UsbFuseGroupCommand.java", "BodyUseAPI": ["tr.org.liderahenk.usb.ltsp.commands.UsbFuseGroupCommand.cronToDate(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "76c2427bf9a3003e5b2cd2e89229e356dbca614f", "Url": "https://api.github.com/repos/Pardus-LiderAhenk/lider-ahenk-usb-ltsp-plugin", "Date": "2017-09-08T15:31:07Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.beans.admin.AdminController.getUserFull(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((theModifiedUser.isPropertyUpdatableByUser(property.getKey())) || ((isAdmin()) && (theModifiedUser.isPropertyUpdatableByAdmin(property.getKey())))) { theModifiedUser.setValue(property.getKey(), property.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6839/buggy-version/war-core.src.main.java.com.silverpeas.socialnetwork.myProfil.control.MyProfilSessionController.java", "BodyUseAPI": ["com.stratelia.webactiv.beans.admin.UserFull.setValue(java.lang.String,java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()"], "Fixed commit": "dc5d11d070410c9c18ca58f68174ddb5a16c65bf", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2015-08-26T09:38:01Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInEditMode()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7980/buggy-version/launcher.src.main.java.com.benny.openlauncher.widget.AppDrawer.java", "BodyUseAPI": [], "Fixed commit": "9ae82b53f6a436c832140f3baa18c943b46eedd2", "Url": "https://api.github.com/repos/OpenLauncherTeam/openlauncher", "Date": "2016-12-01T12:53:58Z"},
{"Line": "=>2701", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getBlock().getDefinitelyReturns()) { result.append(makeFlowAppeaser(getBlock())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8541/buggy-version/src.com.redhat.ceylon.compiler.java.codegen.StatementTransformer.java", "BodyUseAPI": [], "Fixed commit": "a66c81f391471619a00a6b612457509a34b8dc6d", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2014-12-01T12:54:18Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toCharArray()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((chs[i]) != '#') ops.push(chs[i]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2187/buggy-version/src.stack.ExpressionEvaluation.java", "BodyUseAPI": ["java.util.Stack<java.lang.Character>.push(char)"], "Fixed commit": "bb98eff1628d5abd25cb786f9e6d07cbb72da2c2", "Url": "https://api.github.com/repos/lhyqie/InterviewGym", "Date": "2015-04-14T22:44:49Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((this.data) == null) { this.data = data; android.util.Log.i(com.kamys.github.myschedule.view.activity.MainActivity.TAG, (\"showData: data - \" + (this.data))); tabFragmentAdapter = new com.kamys.github.myschedule.logic.adapters.TabFragmentAdapter(getSupportFragmentManager(), data); viewPager.setAdapter(tabFragmentAdapter); tabLayout.setupWithViewPager(viewPager); tabManager = new com.kamys.github.myschedule.presenter.TabManager(tabLayout); }else { tabFragmentAdapter.updateLesson(data); this.data = data; android.util.Log.i(com.kamys.github.myschedule.view.activity.MainActivity.TAG, (\"showData: update data - \" + (this.data))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5677/buggy-version/app.src.main.java.com.kamys.github.myschedule.view.activity.MainActivity.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,(\"showData: data - \" + (this.data)))", "android.util.Log.i(java.lang.String,(\"showData: update data - \" + (this.data)))"], "Fixed commit": "ba2b8b2c1f020b2063cdeb535b655a31e4f13d54", "Url": "https://api.github.com/repos/Kamys/MySchedule", "Date": "2017-02-05T18:43:20Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((max - min) == 0) || ((max - min) == 1)) return max - min;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6464/buggy-version/src.no.runsafe.headhunters.Util.java", "BodyUseAPI": [], "Fixed commit": "364dfed8b9f1e8eba13b70da4de8cfb768d0415e", "Url": "https://api.github.com/repos/Naxanria/HeadHunters", "Date": "2013-07-04T00:16:10Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tabLoadedFlag) { view.selectTab(selectedTab); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/442/buggy-version/app.webapp.src.main.java.uk.ac.ebi.fg.annotare2.web.gwt.editor.client.activity.experiment.ExperimentTabBarActivity.java", "BodyUseAPI": [], "Fixed commit": "04803a6ba34e2c6eba0b5766ab10965a261b5d69", "Url": "https://api.github.com/repos/arrayexpress/annotare2", "Date": "2017-02-14T16:03:56Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.getPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(path.endsWith(\"/\"))) path = path + \"/\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6741/buggy-version/dlc-core.src.main.java.eu.fusepool.datalifecycle.utils.FileUtil.java", "BodyUseAPI": [], "Fixed commit": "8d0a47c13858c531ece028a412aa0064ac12d719", "Url": "https://api.github.com/repos/fusepool/datalifecycle", "Date": "2014-06-12T17:56:26Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["name.getText().toString().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((nameArray.length) > 2) { if (!(nameArray[1].isEmpty())) { editProfileModel.setFirstName((((nameArray[0]) + \" \") + (nameArray[1]))); } }else { editProfileModel.setFirstName(nameArray[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/943/buggy-version/app.src.main.java.com.snaphy.mapstrack.Fragment.ProfileFragment.java", "BodyUseAPI": ["com.snaphy.mapstrack.Model.EditProfileModel.setFirstName(java.lang.String)", "java.lang.String.isEmpty()", "com.snaphy.mapstrack.Model.EditProfileModel.setFirstName(java.lang.String)"], "Fixed commit": "305760278d8ab6f30948c6c74730896aae6675b2", "Url": "https://api.github.com/repos/SnaphyClients/MapsTrack", "Date": "2016-09-03T08:34:56Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (text.contains(\"95\")) { views.setImageViewResource(R.id.img_logo, R.drawable.ic_97); }else { views.setImageViewResource(R.id.img_logo, R.drawable.ic_104); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2986/buggy-version/app.src.main.java.com.android.rhm.radiostream.services.ServiceMusic.java", "BodyUseAPI": [], "Fixed commit": "abe2508bbe22f23856e6d953b62585845b5ac3a5", "Url": "https://api.github.com/repos/Soklundy/radiostream", "Date": "2017-05-19T02:34:06Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (propTypeNamespace == null) { propTypeNamespace = schemaNamespace; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6545/buggy-version/infra.prism.src.main.java.com.evolveum.midpoint.prism.parser.PrismBeanInspector.java", "BodyUseAPI": [], "Fixed commit": "90174c8cd441efe76f8b2036596e7c31202f93c1", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2014-05-27T11:09:42Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prismContext) != null) { com.evolveum.midpoint.prism.schema.PrismSchema schema = prismContext.getSchemaRegistry().findSchemaByCompileTimeClass(fieldType); if ((schema != null) && ((schema.getNamespace()) != null)) { propTypeNamespace = schema.getNamespace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6545/buggy-version/infra.prism.src.main.java.com.evolveum.midpoint.prism.parser.PrismBeanInspector.java", "BodyUseAPI": [], "Fixed commit": "90174c8cd441efe76f8b2036596e7c31202f93c1", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2014-05-27T11:09:42Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((slot.endsWith(\".\")) || (slot.endsWith(\")\"))) slot = slot.substring(0, ((slot.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4655/buggy-version/task.java.edu.wpi.cetask.Description.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "783b75332e01cdf09ea709f22e33bd0efc082554", "Url": "https://api.github.com/repos/charlesrich/Disco", "Date": "2016-04-05T03:09:01Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(n.isDay)) || ((n.getDayNumber()) != ((getDay()) - 1))) if ((((getPhase()) == (shared.logic.Narrator.NIGHT_START)) || (!(n.getBool(Rules.DAY_START)))) || ((n.getDayNumber()) != 1)) chats.add(em.getNightLog(VoidChat.KEY).getName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1032/buggy-version/event.Feedback.java", "BodyUseAPI": ["shared.logic.Narrator.getBool(Rules.DAY_START)", "shared.logic.Narrator.getDayNumber()"], "Fixed commit": "cb006527605a6c116570c111daff2e440187fdae", "Url": "https://api.github.com/repos/vossnarrator/TheNarrator", "Date": "2017-11-22T00:58:39Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) < 2) throw new com.beust.jcommander.ParameterException(\"Output file is not specified.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8314/buggy-version/src.main.java.com.milaboratory.mixcr.cli.ActionExportParameters.java", "BodyUseAPI": [], "Fixed commit": "9414eac91ed5723352556548af4dc6ed90a61d9a", "Url": "https://api.github.com/repos/milaboratory/mixcr", "Date": "2016-11-08T08:50:59Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGroup) != null) { mGroup.contactsRelation.add(mContact); mGroupsBox.put(mGroup); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1047/buggy-version/App.Contacts.app.src.main.java.me.saipathuri.contacts.EditContactActivity.java", "BodyUseAPI": [], "Fixed commit": "c29ce3865759c62a6e1ffc934169814d18d6d17c", "Url": "https://api.github.com/repos/saipathuri/3354-Team_Too", "Date": "2017-12-06T04:36:33Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (data != null) { if (data.hasExtra(Constants.SELECTED_GROUP_ID)) { long id = data.getLongExtra(Constants.SELECTED_GROUP_ID, 0); mGroup = mGroupsBox.get(id); mGroupTextView.setText(mGroup.getGroupName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1047/buggy-version/App.Contacts.app.src.main.java.me.saipathuri.contacts.EditContactActivity.java", "BodyUseAPI": ["android.content.Intent.hasExtra(Constants.SELECTED_GROUP_ID)", "android.content.Intent.getLongExtra(Constants.SELECTED_GROUP_ID,int)"], "Fixed commit": "c29ce3865759c62a6e1ffc934169814d18d6d17c", "Url": "https://api.github.com/repos/saipathuri/3354-Team_Too", "Date": "2017-12-06T04:36:33Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((array.size()) < 5) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4388/buggy-version/src.MiddlewareUnit.java", "BodyUseAPI": [], "Fixed commit": "d05c835e0cd485582f5bc9a3d6d63a44f9d76b3d", "Url": "https://api.github.com/repos/wuhongyu1992/MySQLMiddleware", "Date": "2014-04-05T21:35:23Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentBusiness) < ((Data.businessList.size()) - 1)) { currentBusiness += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7094/buggy-version/AdvertisementDatabase.src.database.layouts.PanelBusiness.java", "BodyUseAPI": [], "Fixed commit": "e57f43acd143d401c712987115bde29f2075d358", "Url": "https://api.github.com/repos/sevenfivenine/AdvertisementDatabase", "Date": "2013-12-12T02:52:58Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentBusiness) > 0) { currentBusiness -= 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7094/buggy-version/AdvertisementDatabase.src.database.layouts.PanelBusiness.java", "BodyUseAPI": [], "Fixed commit": "e57f43acd143d401c712987115bde29f2075d358", "Url": "https://api.github.com/repos/sevenfivenine/AdvertisementDatabase", "Date": "2013-12-12T02:52:58Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (index > (-1)) { switch (videoFileName.substring(index).toLowerCase()) { case \".mpd\" : return Video.VideoType.DASH; case \".mp4\" : return Video.VideoType.MP4; case \".m3u8\" : return Video.VideoType.HLS; default : return Video.VideoType.OTHER; } }else { if (mSrc.contains(\"mpd\")) return Video.VideoType.DASH; if (mSrc.contains(\"mp4\")) return Video.VideoType.MP4; if (mSrc.contains(\"m3u8\")) return Video.VideoType.HLS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7726/buggy-version/playerSDK.src.main.java.com.kaltura.playersdk.players.KIMAAdPlayer.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.toLowerCase()"], "Fixed commit": "6ab0cc799713fd1cc127f51eef845f983c52398d", "Url": "https://api.github.com/repos/objectiveCarlo/player-sdk-native-android", "Date": "2016-12-07T06:06:10Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (items != null) { for (T item : items) this.add(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1498/buggy-version/src.main.java.com.javalinq.implementations.QList.java", "BodyUseAPI": [], "Fixed commit": "452ba9fad7a5867af53a2fa9c3fb66e69baf1497", "Url": "https://api.github.com/repos/sircodesalotOfTheRound/javaLinq", "Date": "2014-09-08T22:22:34Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.service.PersistedModelLocalServiceRegistryUtil.getPersistedModelLocalService(entry.getClassName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (persistedModelLocalService instanceof com.liferay.portal.kernel.service.PersistedResourcedModelLocalService) { com.liferay.portal.kernel.service.PersistedResourcedModelLocalService persistedResourcedModelLocalService = ((com.liferay.portal.kernel.service.PersistedResourcedModelLocalService) (persistedModelLocalService)); java.util.List<? extends com.liferay.portal.kernel.model.PersistedModel> persistedModels = persistedResourcedModelLocalService.getPersistedModel(newClassPK); if (com.liferay.portal.kernel.util.ListUtil.isEmpty(persistedModels)) { return; } }else { persistedModelLocalService.getPersistedModel(newClassPK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1131/buggy-version/ratings-service.src.main.java.com.liferay.ratings.internal.exportimport.data.handler.RatingsEntryStagedModelDataHandler.java", "BodyUseAPI": ["com.liferay.portal.kernel.service.PersistedModelLocalService.getPersistedModel(long)"], "Fixed commit": "2e9dd733e710b60ee17e3707e015e8f3c3dddabc", "Url": "https://api.github.com/repos/liferay/com-liferay-ratings", "Date": "2017-07-18T15:08:40Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(jsonObject.isNull(org.orienteer.architect.util.JsonUtil.PROPERTIES))) { oClass.setProperties(org.orienteer.architect.util.JsonUtil.getOPropertyListFromJson(jsonObject.getJSONArray(org.orienteer.architect.util.JsonUtil.PROPERTIES))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5947/buggy-version/orienteer-architect.src.main.java.org.orienteer.architect.util.JsonUtil.java", "BodyUseAPI": ["org.orienteer.architect.util.OArchitectOClass.setProperties(java.util.List<org.orienteer.architect.util.OArchitectOProperty>)", "org.orienteer.architect.util.JsonUtil.getOPropertyListFromJson(jsonObject.getJSONArray(org.orienteer.architect.util.JsonUtil.PROPERTIES))", "org.apache.wicket.ajax.json.JSONObject.getJSONArray(java.lang.String)"], "Fixed commit": "a8c7841e686e7796d79cc6807cf1b7e03366074c", "Url": "https://api.github.com/repos/WeaxMe/Orienteer", "Date": "2017-08-09T12:53:22Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(jsonObject.isNull(org.orienteer.architect.util.JsonUtil.SUPER_CLASSES_NAMES))) { oClass.setSuperClassesNames(org.orienteer.architect.util.JsonUtil.getSuperClasses(jsonObject.getJSONArray(org.orienteer.architect.util.JsonUtil.SUPER_CLASSES_NAMES))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5947/buggy-version/orienteer-architect.src.main.java.org.orienteer.architect.util.JsonUtil.java", "BodyUseAPI": ["org.orienteer.architect.util.JsonUtil.getSuperClasses(jsonObject.getJSONArray(org.orienteer.architect.util.JsonUtil.SUPER_CLASSES_NAMES))", "org.orienteer.architect.util.OArchitectOClass.setSuperClassesNames(java.util.List<java.lang.String>)", "org.apache.wicket.ajax.json.JSONObject.getJSONArray(java.lang.String)"], "Fixed commit": "a8c7841e686e7796d79cc6807cf1b7e03366074c", "Url": "https://api.github.com/repos/WeaxMe/Orienteer", "Date": "2017-08-09T12:53:22Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(jsonObject.isNull(org.orienteer.architect.util.JsonUtil.PROPERTIES_FOR_DELETE))) { oClass.setPropertiesForDelete(org.orienteer.architect.util.JsonUtil.getOPropertyListFromJson(jsonObject.getJSONArray(org.orienteer.architect.util.JsonUtil.PROPERTIES_FOR_DELETE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5947/buggy-version/orienteer-architect.src.main.java.org.orienteer.architect.util.JsonUtil.java", "BodyUseAPI": ["org.orienteer.architect.util.JsonUtil.getOPropertyListFromJson(jsonObject.getJSONArray(org.orienteer.architect.util.JsonUtil.PROPERTIES_FOR_DELETE))", "org.apache.wicket.ajax.json.JSONObject.getJSONArray(java.lang.String)", "org.orienteer.architect.util.OArchitectOClass.setPropertiesForDelete(java.util.List<org.orienteer.architect.util.OArchitectOProperty>)"], "Fixed commit": "a8c7841e686e7796d79cc6807cf1b7e03366074c", "Url": "https://api.github.com/repos/WeaxMe/Orienteer", "Date": "2017-08-09T12:53:22Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currState) != 0) action = max(currQ); else action = ((int) (5 * (java.lang.Math.random())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3158/buggy-version/Driver.java", "BodyUseAPI": [], "Fixed commit": "2430398719efd80d375cf666da8a96ccd0a10c73", "Url": "https://api.github.com/repos/tunguyen17/graphics", "Date": "2016-07-05T15:04:56Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getUnhandledExceptionQueuedEvents().iterator()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (exceptionEventIterator.hasNext()) { for (javax.faces.event.ExceptionQueuedEvent currentExceptionEvent = exceptionEventIterator.next(); exceptionEventIterator.hasNext(); currentExceptionEvent = exceptionEventIterator.next()) { java.lang.Throwable currentException = currentExceptionEvent.getContext().getException(); while (((currentException instanceof javax.faces.FacesException) || (currentException instanceof javax.ejb.EJBException)) && ((currentException.getCause()) != null)) { currentException = currentException.getCause(); } if (currentException instanceof org.dejava.component.exception.localized.LocalizedException) { ((org.dejava.component.exception.localized.LocalizedException) (currentException)).addLocalizedMessages(getAppMessageHandler()); exceptionEventIterator.remove(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7160/buggy-version/components.Faces.src.main.java.org.dejava.component.faces.exception.AbstractExceptionHandler.java", "BodyUseAPI": ["java.util.Iterator<javax.faces.event.ExceptionQueuedEvent>.remove()", "java.util.Iterator<javax.faces.event.ExceptionQueuedEvent>.hasNext()", "java.util.Iterator<javax.faces.event.ExceptionQueuedEvent>.next()", "java.util.Iterator<javax.faces.event.ExceptionQueuedEvent>.next()"], "Fixed commit": "40046ef11168d1de40ece2f9e6eac8ad0da36a52", "Url": "https://api.github.com/repos/rvcoutinho/dejava", "Date": "2013-09-15T17:56:05Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.USE_CRASHLYTICS) { com.crashlytics.android.Crashlytics.log(priority, tag, message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8715/buggy-version/app.src.main.java.pl.pola_app.PolaApplication.java", "BodyUseAPI": [], "Fixed commit": "705eb27c2c842c06e14edaaf74081409f121273f", "Url": "https://api.github.com/repos/KlubJagiellonski/pola-android", "Date": "2015-10-27T11:22:14Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.USE_CRASHLYTICS) { io.fabric.sdk.android.Fabric.with(this, new com.crashlytics.android.Crashlytics()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8715/buggy-version/app.src.main.java.pl.pola_app.PolaApplication.java", "BodyUseAPI": [], "Fixed commit": "705eb27c2c842c06e14edaaf74081409f121273f", "Url": "https://api.github.com/repos/KlubJagiellonski/pola-android", "Date": "2015-10-27T11:22:14Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 0) { viewHolder.tvName.setText(context.getResources().getString(R.string.wc_row1)); }else { viewHolder.tvName.setText(item.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2787/buggy-version/DogReview.src.com.gso.dogreview.adapter.DogAdapter.java", "BodyUseAPI": [], "Fixed commit": "bac1af15423fdc74a98e96e007b1f601e38d14f3", "Url": "https://api.github.com/repos/thiendamvam/thinh", "Date": "2013-12-20T08:50:45Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["brooklyn.util.flags.TypeCoercions.tryCoerce(java.lang.Object,com.google.common.reflect.TypeToken<brooklyn.location.PortRange>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (maybePortRange.isPresentAndNonNull()) { brooklyn.location.PortRange p = maybePortRange.get(); if ((p != null) && (!(p.isEmpty()))) ports.add(p.iterator().next()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8727/buggy-version/software.base.src.main.java.brooklyn.entity.basic.SoftwareProcessImpl.java", "BodyUseAPI": ["brooklyn.util.guava.Maybe<brooklyn.location.PortRange>.get()"], "Fixed commit": "af19467ee1840daccba83ca09e04f17d69c081a7", "Url": "https://api.github.com/repos/apache/incubator-brooklyn", "Date": "2015-06-25T14:14:30Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["brooklyn.util.flags.TypeCoercions.tryCoerce(java.lang.Object,com.google.common.reflect.TypeToken<brooklyn.location.PortRange>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (maybePortRange.isPresentAndNonNull()) { brooklyn.location.PortRange p = maybePortRange.get(); if ((p != null) && (!(p.isEmpty()))) ports.add(p.iterator().next()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8727/buggy-version/software.base.src.main.java.brooklyn.entity.basic.SameServerDriverLifecycleEffectorTasks.java", "BodyUseAPI": ["brooklyn.util.guava.Maybe<brooklyn.location.PortRange>.get()"], "Fixed commit": "af19467ee1840daccba83ca09e04f17d69c081a7", "Url": "https://api.github.com/repos/apache/incubator-brooklyn", "Date": "2015-06-25T14:14:30Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (text.startsWith(\"-\")) { return new java.util.ArrayList<jp.ac.osaka_u.ist.sdl.mpanalyzer.data.Statement>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2113/buggy-version/MPAnalyzer.src.jp.ac.osaka_u.ist.sdl.mpanalyzer.StringUtility.java", "BodyUseAPI": [], "Fixed commit": "74129d0405cd37ad917400dcca72b3b285d5ef98", "Url": "https://api.github.com/repos/YoshikiHigo/MPAnalyzer", "Date": "2013-11-04T07:33:03Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (text.isEmpty()) { return new java.util.ArrayList<jp.ac.osaka_u.ist.sdl.mpanalyzer.data.Statement>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2113/buggy-version/MPAnalyzer.src.jp.ac.osaka_u.ist.sdl.mpanalyzer.StringUtility.java", "BodyUseAPI": [], "Fixed commit": "74129d0405cd37ad917400dcca72b3b285d5ef98", "Url": "https://api.github.com/repos/YoshikiHigo/MPAnalyzer", "Date": "2013-11-04T07:33:03Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(main.getParentFile().exists())) { main.getParentFile().mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6811/buggy-version/src.com.aim.wjcrouse913.NetherBan.PlayerInventoryScanner.java", "BodyUseAPI": ["java.io.File.getParentFile()", "java.io.File.mkdirs()"], "Fixed commit": "6b82c2f2fccadf7ff209209f97eb5fab8a20df05", "Url": "https://api.github.com/repos/DreadKyller/NetherBan", "Date": "2011-06-29T13:17:23Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.weather.repository.UserRepository.findByUsername(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (null == user) { throw new org.springframework.security.core.userdetails.UsernameNotFoundException((\"No user present with username: \" + username)); }else { java.util.List<org.springframework.security.core.GrantedAuthority> grantedAuthorities = new java.util.ArrayList<>(); for (com.weather.model.Role role : user.getRoles()) { grantedAuthorities.add(new org.springframework.security.core.authority.SimpleGrantedAuthority(role.getName())); } return new org.springframework.security.core.userdetails.User(user.getUsername(), user.getPassword(), grantedAuthorities); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3078/buggy-version/src.main.java.com.weather.service.UserDetailsServiceImpl.java", "BodyUseAPI": ["com.weather.model.User.getPassword()", "com.weather.model.User.getRoles()", "com.weather.model.User.getUsername()"], "Fixed commit": "2e50d0add85f7774cdf141fc2bc98c32bf78d3ce", "Url": "https://api.github.com/repos/kolisnuklesja/test_weather", "Date": "2017-02-02T10:02:05Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.deemsys.project.crashreports.CrashReportsDAO.getReportsByReportId(crashReportRestrictionForm.getReportId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (crashReports != null) { com.deemsys.project.entity.CrashReportRestriction crashReportRestriction = new com.deemsys.project.entity.CrashReportRestriction(crashReportRestrictionForm.getClientIp(), new org.joda.time.DateTime().toDate(), crashReportRestrictionForm.getStatus()); crashReportRestrictionDAO.merge(crashReportRestriction); return 1; }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1485/buggy-version/src.main.java.com.deemsys.project.crashreportrestriction.CrashReportRestrictionService.java", "BodyUseAPI": [], "Fixed commit": "3c8ce0c62238d60b682d147fc239d09c584428dd", "Url": "https://api.github.com/repos/Deemsys43230/WPR117_V1.0_CRM_APP_JAVA_ANGULAR", "Date": "2017-03-14T04:47:20Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isStandaloneNode || (org.wso2.carbon.utils.CarbonUtils.isWorkerNode())) { taskManager.registerTask(taskInfo); taskManager.scheduleTask(taskInfo.getName()); removeTask(taskDescription); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/775/buggy-version/components.mediation-ntask.src.main.java.org.wso2.carbon.mediation.ntask.NTaskTaskManager.java", "BodyUseAPI": [], "Fixed commit": "7ce83d1dca5f12fe46636a8355711a50ae8cd84f", "Url": "https://api.github.com/repos/maheeka/carbon-mediation", "Date": "2015-09-05T10:26:18Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (jedis != null) RedisManager.readJedisPool.returnBrokenResource(jedis);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6894/buggy-version/src.main.java.de.doridian.yiffbukkit.chatcomponent.RedisHandler.java", "BodyUseAPI": ["RedisManager.readJedisPool.returnBrokenResource(redis.clients.jedis.Jedis)"], "Fixed commit": "8c3552fe39b4e0ef391960ffdb8c58aed4abcd98", "Url": "https://api.github.com/repos/YiffBukkit/YiffBukkitChatComponent", "Date": "2014-05-11T12:34:50Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.zzm.bushu.app.adapter.BooksAdapter.getImageFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (imageFileEmpty(imageFile)) { downloadImage(imageFile, bookName); }else { android.widget.ImageView imageView = ((android.widget.ImageView) (gridView.findViewById(R.id.book_image))); imageView.setImageBitmap(android.graphics.BitmapFactory.decodeFile(imageFile.getAbsolutePath())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/4787/buggy-version/app.src.main.java.com.github.zzm.bushu.app.adapter.BooksAdapter.java", "BodyUseAPI": ["android.graphics.BitmapFactory.decodeFile(java.lang.String)", "java.io.File.getAbsolutePath()", "android.widget.ImageView.setImageBitmap(android.graphics.BitmapFactory.decodeFile(imageFile.getAbsolutePath()))", "com.github.zzm.bushu.app.adapter.BooksAdapter.downloadImage(java.io.File,java.lang.String)"], "Fixed commit": "a9d1980b94f9a21588ad7fcfa4ac1d7a9857ffde", "Url": "https://api.github.com/repos/zhaozhiming/Bushu", "Date": "2014-08-21T02:56:35Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (openmrsPassword != null) { OPENMRS_PWD = openmrsPassword; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/41/buggy-version/opensrp-connector.src.main.java.org.opensrp.connector.openmrs.PatientAtomfeed.java", "BodyUseAPI": [], "Fixed commit": "7fb780753cc10bf3105b0c335fad78cace79e9a5", "Url": "https://api.github.com/repos/OpenSRP/opensrp-server", "Date": "2016-04-28T13:25:49Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (jarFile == null) { scouter.agent.Configure.agent_dir_path = new java.io.File(\"./\").getAbsolutePath(); }else { scouter.agent.Configure.agent_dir_path = jarFile.getParent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6167/buggy-version/scouter.agent.java.src.scouter.agent.Configure.java", "BodyUseAPI": [], "Fixed commit": "fa13f0949b67bcdd1cacb527ed2db11f5f8fd542", "Url": "https://api.github.com/repos/scouter-project/scouter", "Date": "2016-05-26T01:00:53Z"},
{"Line": "=>7295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mResolveActivity.theme) == 0) { mResolveActivity.theme = R.style.Theme_DeviceDefault_Resolver; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8483/buggy-version/services.core.java.com.android.server.pm.PackageManagerService.java", "BodyUseAPI": [], "Fixed commit": "3a3c34c126c9773728093d34191ff7b17b9efd40", "Url": "https://api.github.com/repos/AICP/frameworks_base", "Date": "2015-09-19T13:43:04Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (language == null) languageId = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1221/buggy-version/src.main.java.com.pratilipi.data.type.gae.AuthorEntity.java", "BodyUseAPI": [], "Fixed commit": "a697d67c962c9f1f15a12513660eb7ae463e88ba", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-01-13T08:21:41Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (question != null) { for (com.qapro.entity.Question q : question.getQuestions()) { java.lang.System.out.println(\"3 - \"); java.lang.System.out.println(q.getText()); } request.setAttribute(\"question\", question); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3203/buggy-version/src.com.qapro.servlets.SelectAllQuestion.java", "BodyUseAPI": ["com.qapro.entity.GlobalData.getQuestions()", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,com.qapro.entity.GlobalData)"], "Fixed commit": "1dfb06ba192eeeaa761adebd4c0b5138b225c1df", "Url": "https://api.github.com/repos/Fewcharts/Fewcharts", "Date": "2015-07-08T21:33:41Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["SoundHolder.soundTable.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (tmp != null) thisSound = tmp.duplicate(); else return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5116/buggy-version/src.engine.entity.Entity.java", "BodyUseAPI": ["engine.sound.Sound.duplicate()"], "Fixed commit": "75621e9fdd03517cbec8962912ab168e1781f50a", "Url": "https://api.github.com/repos/iebaker/game-final-project", "Date": "2013-12-10T20:04:02Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lody.virtual.client.core.VirtualCore.findApp(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (setting == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3191/buggy-version/VirtualApp.lib.src.main.java.com.lody.virtual.client.core.VirtualCore.java", "BodyUseAPI": [], "Fixed commit": "5d9808efebab6d97f72f7abc409aba7e173fd4ee", "Url": "https://api.github.com/repos/JuneLeGency/VirtualApp", "Date": "2017-02-04T12:17:10Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.randomname.vkjokes.Models.WallPostModel.getPostPhotos()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((wallPhotos.size()) > 4) { customViewHolder.morePhoto.setText((\"+\" + ((wallPhotos.size()) - 4))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8803/buggy-version/app.src.main.java.com.randomname.vkjokes.Adapters.WallPostsAdapter.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.size()", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "82c3737c383a98c48a90b10c96164638ab19a849", "Url": "https://api.github.com/repos/borjom/Vk-best-jokes", "Date": "2015-10-22T10:44:10Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.randomname.vkjokes.Models.WallPostModel.getPostPhotos()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((wallPhotos.size()) > 4) { customViewHolder.morePhoto.setText((\"+\" + ((wallPhotos.size()) - 4))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8803/buggy-version/app.src.main.java.com.randomname.vkjokes.Adapters.WallPostsAdapter.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.size()", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "82c3737c383a98c48a90b10c96164638ab19a849", "Url": "https://api.github.com/repos/borjom/Vk-best-jokes", "Date": "2015-10-22T10:44:10Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isTouchEvent)) { mScale = 1; return super.dispatchTouchEvent(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2375/buggy-version/library.src.main.java.com.wingsofts.dragphotoview.DragPhotoView.java", "BodyUseAPI": [], "Fixed commit": "e9b8708e194fda8d0738f58caa010c1129c6828d", "Url": "https://api.github.com/repos/githubwing/DragPhotoView", "Date": "2016-12-23T06:26:21Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTranslateY) != 0) { isTouchEvent = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2375/buggy-version/library.src.main.java.com.wingsofts.dragphotoview.DragPhotoView.java", "BodyUseAPI": [], "Fixed commit": "e9b8708e194fda8d0738f58caa010c1129c6828d", "Url": "https://api.github.com/repos/githubwing/DragPhotoView", "Date": "2016-12-23T06:26:21Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((WindowManager.getImageCount()) == 0) IJ.openImage(\"img/SN33267.tif\").show(); else setImage();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6053/buggy-version/src.main.java.Spheroid_RGB.java", "BodyUseAPI": [], "Fixed commit": "55a9b5b941b64c9590393eae94586182b5d0f523", "Url": "https://api.github.com/repos/IamMM/Spheroid_RGB", "Date": "2016-11-03T04:24:25Z"},
{"Line": "=>601", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((WindowManager.getImageCount()) == 0) frame.dispose(); else imgList.removeItem(imagePlus.getTitle());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6053/buggy-version/src.main.java.Spheroid_RGB.java", "BodyUseAPI": [], "Fixed commit": "55a9b5b941b64c9590393eae94586182b5d0f523", "Url": "https://api.github.com/repos/IamMM/Spheroid_RGB", "Date": "2016-11-03T04:24:25Z"},
{"Line": "=>560", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obs.getID().equals(Global.PLAYER)) item.setAttribute(\"number\", ((((dataObstacles.Player) (obs)).getNumPlayer()) + \"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7991/buggy-version/src.interfaces.Edit.java", "BodyUseAPI": [], "Fixed commit": "6cada8175080d85353a4ce46d276e3ff551ff06c", "Url": "https://api.github.com/repos/KaiserMarco/Bubble-Master", "Date": "2016-10-19T10:47:42Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.freelancer.leetcode.LeetCode179.premium(java.util.List<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((y == 0) && ((java.lang.Integer.parseInt(z)) == 0)) { return \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/5684/buggy-version/src.main.java.com.freelancer.leetcode.LeetCode179.java", "BodyUseAPI": [], "Fixed commit": "d8a5b646ad793e404a6440e979085d99d71806fe", "Url": "https://api.github.com/repos/SoyeeDst/leetcode_solution", "Date": "2017-04-09T10:20:31Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result) { tokenText = tokenText.substring(matcher.start(), matcher.end()); }else for (lineNr++; lineNr < (lines.size()); lineNr++) { matcher = getEndPattern().matcher(lines.get(lineNr)); result = matcher.find((lineNr == begLineNr ? index : 0)); if (result) { tokenText += \"\\t\" + (lines.get(lineNr).substring(matcher.start(), matcher.end())); break; }else { tokenText += \"\\t\" + (lines.get(lineNr)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2250/buggy-version/src.java.mondo.token.MultiLineToken.java", "BodyUseAPI": [], "Fixed commit": "a638ec2d99ca553ee9de11e622887357cd579659", "Url": "https://api.github.com/repos/oprogramador/plezuro_js", "Date": "2015-11-20T23:12:11Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getEventType()) == (ZoomEvent.ZOOM_STARTED)) { resetHandlers(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3493/buggy-version/annotationtool.annotationtool.AnnotationToolApplication.java", "BodyUseAPI": [], "Fixed commit": "968be60b44b9670bf090ea7e173da6443d68be20", "Url": "https://api.github.com/repos/seedor87/scratchpad_project", "Date": "2017-06-01T19:09:52Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.ca.cwds.cals.persistence.hibernate.SQLTypes.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (sqlTypeEnum != null) { sqlType = sqlTypeEnum.getType(); }else { throw new java.lang.IllegalArgumentException(((\"The sqlType: \" + sqlTypeName) + \" is not supported\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3218/buggy-version/src.main.java.gov.ca.cwds.cals.persistence.hibernate.JsonType.java", "BodyUseAPI": ["gov.ca.cwds.cals.persistence.hibernate.SQLTypes.getType()"], "Fixed commit": "7b514ba22809b07d3b44fc0cbfafda9b98b56877", "Url": "https://api.github.com/repos/ca-cwds/cals-api", "Date": "2017-06-26T20:36:04Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (idx != 0) { addeparhackathon.ConsistentSalaries.a[idx] += v; if ((addeparhackathon.ConsistentSalaries.a[idx]) > 0) addeparhackathon.ConsistentSalaries.set.add(idx); else addeparhackathon.ConsistentSalaries.set.remove(idx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3497/buggy-version/HackerRank.src.addeparhackathon.ConsistentSalaries.java", "BodyUseAPI": ["java.util.HashSet<java.lang.Integer>.remove(int)", "java.util.HashSet<java.lang.Integer>.add(int)"], "Fixed commit": "5cfc2e3c0ac9e09b02a42bf7a294ec7879f8b72b", "Url": "https://api.github.com/repos/tyuan73/MyAlg", "Date": "2014-06-30T14:23:19Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((input.getOutputThread()) != null) { for (final java.lang.String c : newMode.getComponentToActionsMap().keySet()) { final java.util.Map<java.lang.String, java.util.List<de.bwravencl.controllerbuddy.input.action.IAction>> currentComponentToActionsMap = getActiveMode().getComponentToActionsMap(); if (currentComponentToActionsMap.containsKey(c)) { for (final de.bwravencl.controllerbuddy.input.action.IAction a : currentComponentToActionsMap.get(c)) { if ((a instanceof de.bwravencl.controllerbuddy.input.action.AxisToAxisAction) && (!(a instanceof de.bwravencl.controllerbuddy.input.action.AxisToRelativeAxisAction))) { final de.bwravencl.controllerbuddy.input.action.AxisToAxisAction axisToAxisAction = ((de.bwravencl.controllerbuddy.input.action.AxisToAxisAction) (a)); input.setAxis(axisToAxisAction.getVirtualAxis(), 0.0F); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7022/buggy-version/src.main.java.de.bwravencl.controllerbuddy.input.Profile.java", "BodyUseAPI": ["de.bwravencl.controllerbuddy.input.Input.setAxis(axisToAxisAction.getVirtualAxis(),float)"], "Fixed commit": "746c0c17bd81a845f417ac8ce11ef29c1511c713", "Url": "https://api.github.com/repos/bwRavencl/ControllerBuddy", "Date": "2016-10-08T12:10:48Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sammelbox.model.database.operations.DatabaseOperations.isAlbumQuicksearchable(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isQuickSearchable) { org.sammelbox.model.database.operations.DeleteOperations.dropIndex(oldAlbumName); org.sammelbox.model.database.operations.CreateOperations.createIndex(newAlbumName, quickSearchableColumnNames); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/2821/buggy-version/Sammelbox-Desktop.src.org.sammelbox.model.database.operations.UpdateOperations.java", "BodyUseAPI": [], "Fixed commit": "7d05b3a4372a4684310b61fff9ddc6a2d8e3a113", "Url": "https://api.github.com/repos/jeromewagener/Sammelbox", "Date": "2014-05-01T15:00:58Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (possibleBins.isEmpty()) fittingBin = null; else fittingBin = possibleBins.get(((possibleBins.size()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8264/buggy-version/bppAlgorithm.WorstFit.java", "BodyUseAPI": ["java.util.ArrayList<bppAlgorithm.Bin>.get(((possibleBins.size()) - 1))", "java.util.ArrayList<bppAlgorithm.Bin>.size()"], "Fixed commit": "ee3bfa11f6c7455231aa620f2a709bdebcc29202", "Url": "https://api.github.com/repos/luukholleman/ASRSJava", "Date": "2013-05-14T12:40:19Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (possibleBins.isEmpty()) fittingBin = null; else fittingBin = possibleBins.get(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8264/buggy-version/bppAlgorithm.BestFit.java", "BodyUseAPI": ["java.util.ArrayList<bppAlgorithm.Bin>.get(int)"], "Fixed commit": "ee3bfa11f6c7455231aa620f2a709bdebcc29202", "Url": "https://api.github.com/repos/luukholleman/ASRSJava", "Date": "2013-05-14T12:40:19Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (possibleBins.isEmpty()) fittingBin = null; else fittingBin = possibleBins.get(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8264/buggy-version/bppAlgorithm.FirstFit.java", "BodyUseAPI": ["java.util.ArrayList<bppAlgorithm.Bin>.get(int)"], "Fixed commit": "ee3bfa11f6c7455231aa620f2a709bdebcc29202", "Url": "https://api.github.com/repos/luukholleman/ASRSJava", "Date": "2013-05-14T12:40:19Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (possibleBins.isEmpty()) fittingBin = null; else fittingBin = possibleBins.get(((possibleBins.size()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/8264/buggy-version/bppAlgorithm.AlmostWorstFit.java", "BodyUseAPI": ["java.util.ArrayList<bppAlgorithm.Bin>.size()", "java.util.ArrayList<bppAlgorithm.Bin>.get(((possibleBins.size()) - 1))"], "Fixed commit": "ee3bfa11f6c7455231aa620f2a709bdebcc29202", "Url": "https://api.github.com/repos/luukholleman/ASRSJava", "Date": "2013-05-14T12:40:19Z"},
{"Line": "=>806", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(po.isUseTaxIndicator())) { if (po instanceof org.kuali.kfs.module.purap.document.PurchaseOrderRetransmitDocument) { totalDollarAmount = ((org.kuali.kfs.module.purap.document.PurchaseOrderRetransmitDocument) (po)).getTotalDollarAmountForRetransmit(); }else { totalDollarAmount = po.getTotalDollarAmount(); } }else { if (po instanceof org.kuali.kfs.module.purap.document.PurchaseOrderRetransmitDocument) { totalDollarAmount = ((org.kuali.kfs.module.purap.document.PurchaseOrderRetransmitDocument) (po)).getTotalPreTaxDollarAmountForRetransmit(); }else { totalDollarAmount = po.getTotalPreTaxDollarAmount(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/3908/buggy-version/kfs-purap.src.main.java.org.kuali.kfs.module.purap.pdf.PurchaseOrderPdf.java", "BodyUseAPI": ["org.kuali.kfs.module.purap.document.PurchaseOrderDocument.getTotalDollarAmount()", "org.kuali.kfs.module.purap.document.PurchaseOrderDocument.getTotalPreTaxDollarAmount()"], "Fixed commit": "455acc41da223a84253152515ae23d85cc734714", "Url": "https://api.github.com/repos/ua-eas/kfs", "Date": "2017-03-19T14:36:29Z"},
{"Line": "=>8", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.model.getGrid()[move.getX()][move.getY()]) != 0) throw new MoveOccurredException(\"Illegal move, move has already occured\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/7220/buggy-version/tictactoe.src.TTTC.java", "BodyUseAPI": [], "Fixed commit": "c716535680ef987315aee1c73dfec7c06ac8d6fe", "Url": "https://api.github.com/repos/rpg711/cs520", "Date": "2017-10-22T00:13:14Z"},
{"Line": "=>788", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i == (length - 1)) || (i == ((data.length) - 1))) word = (org.iaik.net.utils.NetUtils.toInt(data[i])) << 8; else word = ((int) (((org.iaik.net.utils.NetUtils.toInt(data[i])) << 8) | (org.iaik.net.utils.NetUtils.toInt(data[(i + 1)]))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1320/buggy-version/org.iaik.net.utils.NetUtils.java", "BodyUseAPI": ["org.iaik.net.utils.NetUtils.toInt(byte)", "org.iaik.net.utils.NetUtils.toInt(byte)", "org.iaik.net.utils.NetUtils.toInt(byte)"], "Fixed commit": "89102d3fa48b2b271c5dbe3309d1189778bdf8b8", "Url": "https://api.github.com/repos/skillii/RNKN", "Date": "2011-04-07T13:04:00Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["session.createCriteria(de.giftbox.domain.Benutzer.class).add(org.hibernate.criterion.Restrictions.eq(\"id_Benutzer\", id)).list()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((b.size()) > 0) { return b.get(0); }else { de.giftbox.domain.Benutzer ben = new de.giftbox.domain.Benutzer(); ben.setId_Benutzer((-1)); return ben; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1216/buggy-version/src.main.java.de.giftbox.daoImpl.BenutzerDAOImpl.java", "BodyUseAPI": ["java.util.List<de.giftbox.domain.Benutzer>.get(int)"], "Fixed commit": "6f93b65bafc0070160f97a56d22145c7fbd9c9df", "Url": "https://api.github.com/repos/KonstantinPasternack/GiftTest", "Date": "2013-06-24T14:52:43Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["session.createCriteria(de.giftbox.domain.Benutzer.class).add(org.hibernate.criterion.Restrictions.eq(\"username\", username)).list()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((b.size()) > 0) { return b.get(0); }else { de.giftbox.domain.Benutzer ben = new de.giftbox.domain.Benutzer(); ben.setId_Benutzer((-1)); return ben; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/1216/buggy-version/src.main.java.de.giftbox.daoImpl.BenutzerDAOImpl.java", "BodyUseAPI": ["java.util.List<de.giftbox.domain.Benutzer>.get(int)"], "Fixed commit": "6f93b65bafc0070160f97a56d22145c7fbd9c9df", "Url": "https://api.github.com/repos/KonstantinPasternack/GiftTest", "Date": "2013-06-24T14:52:43Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(player.worldObj.isRemote)) { if ((res != null) && ((res.component) != null)) { net.minecraftforge.common.ForgeDirection connDir = res.component.dir; if (((connDir != null) && (connDir != (net.minecraftforge.common.ForgeDirection.UNKNOWN))) && (containsExternalConnection(connDir))) { crazypants.enderio.machine.monitor.MJReaderPacketHandler.getInstance().sendInfoMessage(player, this, player.getCurrentEquippedItem()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V72/6793/buggy-version/common.crazypants.enderio.conduit.item.ItemConduit.java", "BodyUseAPI": ["net.minecraft.entity.player.EntityPlayer.getCurrentEquippedItem()", "crazypants.enderio.machine.monitor.MJReaderPacketHandler.getInstance().sendInfoMessage(net.minecraft.entity.player.EntityPlayer,crazypants.enderio.conduit.item.ItemConduit,player.getCurrentEquippedItem())"], "Fixed commit": "a6450a281837ae8c37a12ae98700bdb8fe7bc32b", "Url": "https://api.github.com/repos/CrazyPants/EnderIO", "Date": "2014-02-20T02:19:06Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof net.minecraft.block.Block) { uId = cpw.mods.fml.common.registry.GameRegistry.findUniqueIdentifierFor(((net.minecraft.block.Block) (obj))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6890/buggy-version/java.ak.VillagerTweaks.VillagerInteractHook.java", "BodyUseAPI": [], "Fixed commit": "138a902e459e2f7b031a3d983254071e11b049a9", "Url": "https://api.github.com/repos/aksource/VillagerTweaks", "Date": "2014-11-08T10:48:00Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof net.minecraft.item.Item) { uId = cpw.mods.fml.common.registry.GameRegistry.findUniqueIdentifierFor(((net.minecraft.item.Item) (obj))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6890/buggy-version/java.ak.VillagerTweaks.VillagerInteractHook.java", "BodyUseAPI": [], "Fixed commit": "138a902e459e2f7b031a3d983254071e11b049a9", "Url": "https://api.github.com/repos/aksource/VillagerTweaks", "Date": "2014-11-08T10:48:00Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getEngine().isDevMode()) { java.net.URL url = springResource.getURL(); if (ResourceUtils.URL_PROTOCOL_FILE.equals(url.getProtocol())) { return org.rythmengine.utils.IO.readContentAsString(springResource.getFile()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4660/buggy-version/src.main.java.org.rythmengine.spring.SpringTemplateResource.java", "BodyUseAPI": [], "Fixed commit": "675ab7a6525c8627e9090f1ee765641ecac172ae", "Url": "https://api.github.com/repos/greenlaw110/spring-rythm", "Date": "2014-03-27T22:22:53Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((element.getUserData(com.consol.citrus.admin.spring.config.RemoveSpringBeanFilter.DELETE_NODE_MARKER)) != null) { if ((element.getNodeType()) == (org.w3c.dom.Node.ELEMENT_NODE)) { markChildElementsForDeletion(((org.w3c.dom.Element) (element))); } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3323/buggy-version/modules.citrus-admin.src.main.java.com.consol.citrus.admin.spring.config.RemoveSpringBeanFilter.java", "BodyUseAPI": ["org.w3c.dom.Node.getNodeType()"], "Fixed commit": "91017aaf452040637ae3062f6a67c989a5fc79aa", "Url": "https://api.github.com/repos/christophd/citrus", "Date": "2013-07-05T12:13:54Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["networkInfo[android.net.ConnectivityManager.TYPE_WIFI].isConnected()", "networkInfo[android.net.ConnectivityManager.TYPE_MOBILE].isConnected()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!mobile) && (!wifi)) onlineStatus = com.anderscore.simpleandroidchat.Constants.OnlineStatus.OFFLINE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7455/buggy-version/src.com.anderscore.simpleandroidchat.MessengerService.java", "BodyUseAPI": [], "Fixed commit": "288307cf57ddf8739a929b8bd0db0e65c65a7a40", "Url": "https://api.github.com/repos/mjohenneken/SimpleAndroidChat", "Date": "2014-08-21T17:42:42Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((packet.getElemName()) == (tigase.server.Message.ELEM_NAME)) && ((packet.getStanzaTo()) != null)) && ((packet.getStanzaTo().getResource()) != null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/142/buggy-version/src.main.java.tigase.xmpp.impl.OfflineMessages.java", "BodyUseAPI": [], "Fixed commit": "84e8478849f44c4226bbd0fa6e1880740d48de0d", "Url": "https://api.github.com/repos/kontalk/tigase-server", "Date": "2016-04-20T17:54:55Z"},
{"Line": "=>1699", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getMech()) instanceof megamek.common.TripodMech) { cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_TRIPOD]); }else { switch (getMech().getTechLevel()) { case megamek.common.TechConstants.T_INTRO_BOXSET : cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_STANDARD]); break; case megamek.common.TechConstants.T_CLAN_TW : cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_STANDARD]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_INDUSTRIAL]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_SMALL]); break; case megamek.common.TechConstants.T_IS_TW_NON_BOX : cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_STANDARD]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_INDUSTRIAL]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_SMALL]); break; case megamek.common.TechConstants.T_CLAN_ADVANCED : cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_STANDARD]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_INDUSTRIAL]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_SMALL]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_COMMAND_CONSOLE]); break; case megamek.common.TechConstants.T_IS_ADVANCED : cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_STANDARD]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_INDUSTRIAL]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_SMALL]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_COMMAND_CONSOLE]); break; case megamek.common.TechConstants.T_CLAN_EXPERIMENTAL : cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_STANDARD]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_INDUSTRIAL]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_SMALL]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_COMMAND_CONSOLE]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_PRIMITIVE]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_PRIMITIVE_INDUSTRIAL]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_TORSO_MOUNTED]); break; case megamek.common.TechConstants.T_IS_EXPERIMENTAL : cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_STANDARD]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_INDUSTRIAL]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_SMALL]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_COMMAND_CONSOLE]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_PRIMITIVE]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_PRIMITIVE_INDUSTRIAL]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_TORSO_MOUNTED]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_INTERFACE]); break; case megamek.common.TechConstants.T_CLAN_UNOFFICIAL : cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_STANDARD]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_INDUSTRIAL]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_SMALL]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_COMMAND_CONSOLE]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_PRIMITIVE]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_PRIMITIVE_INDUSTRIAL]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_TORSO_MOUNTED]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_DUAL]); break; case megamek.common.TechConstants.T_IS_UNOFFICIAL : cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_STANDARD]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_INDUSTRIAL]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_SMALL]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_COMMAND_CONSOLE]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_PRIMITIVE]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_PRIMITIVE_INDUSTRIAL]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_TORSO_MOUNTED]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_INTERFACE]); cockpitType.addItem(megamek.common.Mech.COCKPIT_SHORT_STRING[megamek.common.Mech.COCKPIT_DUAL]); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5356/buggy-version/src.megameklab.com.ui.Mek.tabs.StructureTab.java", "BodyUseAPI": [], "Fixed commit": "7c283b832a366f7f7338d42d0d1673e9180f9a7c", "Url": "https://api.github.com/repos/wildj79/megameklab", "Date": "2016-08-13T21:13:27Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jloda.gui.director.ProjectManager.isQuitting()) { try { if (runJustBeforeQuit != null) runJustBeforeQuit.run(); } catch (java.lang.Exception ex) { jloda.gui.director.Basic.caught(ex); } jloda.gui.director.ProgramProperties.store(); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2057/buggy-version/src.jloda.gui.director.ProjectManager.java", "BodyUseAPI": [], "Fixed commit": "7201a24d39d67cf2fe397787c9639b0c21aeb665", "Url": "https://api.github.com/repos/danielhuson/jloda", "Date": "2016-08-24T06:05:04Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isVisible())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5901/buggy-version/src.main.java.net.nikr.eve.jeveasset.gui.shared.components.JDropDownButton.java", "BodyUseAPI": [], "Fixed commit": "f52c4d0a8854e5c479a9f781e5d30b04bc889fb3", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2016-08-14T10:20:04Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(userPushPullTextField.getText().equals(\"\"))) { java.lang.String tmpUserPushPull = userPushPullTextField.getText(); if (!(tmpUserPushPull.equals(org.publicmain.common.Config.getConfig().getBackupDBChoosenUsername()))) { org.publicmain.common.Config.getConfig().setBackupDBChoosenUsername(userPushPullTextField.getText()); changes = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/9141/buggy-version/publicMAIN.src.org.publicmain.gui.SettingsWindow.java", "BodyUseAPI": ["org.publicmain.common.Config.getConfig().setBackupDBChoosenUsername(java.lang.String)", "javax.swing.JTextField.getText()", "javax.swing.JTextField.getText()"], "Fixed commit": "371b478bfce79975ca5680fee4f5295b68c9150e", "Url": "https://api.github.com/repos/tkessels/publicMain", "Date": "2013-04-30T12:15:35Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ipBackupTextField.getText().equals(\"\"))) { java.lang.String tmpBackupIp = ipBackupTextField.getText(); if (!(tmpBackupIp.equals(org.publicmain.common.Config.getConfig().getBackupDBIP()))) { org.publicmain.common.Config.getConfig().setBackupDBIP(ipBackupTextField.getText()); changes = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/9141/buggy-version/publicMAIN.src.org.publicmain.gui.SettingsWindow.java", "BodyUseAPI": ["javax.swing.JTextField.getText()", "javax.swing.JTextField.getText()", "org.publicmain.common.Config.getConfig().setBackupDBIP(java.lang.String)"], "Fixed commit": "371b478bfce79975ca5680fee4f5295b68c9150e", "Url": "https://api.github.com/repos/tkessels/publicMain", "Date": "2013-04-30T12:15:35Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(userkey.equals(\"\"))) { message.setText(mess); projectName.setText(\"\"); if (mess.contains(\"SAVE_PROJECT_SUCCESS\")) model.addRow(new java.lang.Object[]{ userkey }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1027/buggy-version/src.jacs.gui.ProjectManage.java", "BodyUseAPI": ["javax.swing.table.DefaultTableModel.addRow(java.lang.Object[])"], "Fixed commit": "675cd1c08d2179cbfc4a01242f1933b255bd168e", "Url": "https://api.github.com/repos/JACS-SKE/eXceedVoteServer", "Date": "2012-12-19T16:52:39Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (configData.isUseBossBar()) { bossbarTitleTemplate = configData.getMessages().get(\"bossbarTitle\"); if (((bossbarTitleTemplate) == null) || (bossbarTitleTemplate.equals(\"\"))) { bossbarTitleTemplate = \"&6\u6b8b\u308a\u6642\u9593 - %s\"; } bossbarTitleTemplate = com.github.ucchyocean.et.Utility.replaceColorCode(bossbarTitleTemplate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6199/buggy-version/src.main.java.com.github.ucchyocean.et.TimerTask.java", "BodyUseAPI": [], "Fixed commit": "0490a3d5192194a36ca1efa3c9b4a2786326ae5b", "Url": "https://api.github.com/repos/ucchyocean/ExpTimer", "Date": "2014-06-28T08:36:05Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.gip.tablecross.util.StringUtil.isEmpty(nameKanji)) || (\"null\".equals(nameKanji))) { this.nameKanji = \"\"; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1388/buggy-version/TableCross.src.com.gip.tablecross.object.User.java", "BodyUseAPI": [], "Fixed commit": "2d4bd59d06d80b3a3e25c2dabfa7bea8ab000466", "Url": "https://api.github.com/repos/gbrse04/tbl_cr_aos", "Date": "2014-12-16T18:53:53Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c == null) || ((c.getAction()) == null)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/689/buggy-version/jLOAF.src.org.jLOAF.reasoning.SimpleKNN.java", "BodyUseAPI": [], "Fixed commit": "514d85ebb59011dd113b0384d53f8a0d3bd4c173", "Url": "https://api.github.com/repos/CalebChan/jLOAF", "Date": "2014-06-03T20:09:32Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.min(rectangles.get(i).getX1(),rectangles.get(i).getX2())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((java.lang.Math.abs(((ballPosX) - (move_x)))) < (java.lang.Math.abs(left))) { move_x *= -1; }else if ((java.lang.Math.abs(((ballPosX) - (move_x)))) > (java.lang.Math.abs(right))) { move_x *= -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7169/buggy-version/core.src.com.ru.tgra.assignment2.CannonGame.java", "BodyUseAPI": ["java.lang.Math.abs(float)"], "Fixed commit": "64aeb47c9a7b628aa2e51cfc2d7c3fe8c2da1f2c", "Url": "https://api.github.com/repos/TGRAmodd/CannonGame", "Date": "2015-09-14T13:39:41Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (min == max) scaledData.put(1.0, entry.getValue()); else { java.lang.Double value = ((entry.getKey()) - min) / (max - min); scaledData.put(value, entry.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3650/buggy-version/src.main.java.eu.socialsensor.sfc.builder.SolrQueryBuilder.java", "BodyUseAPI": [], "Fixed commit": "043430db60f6a64e58906ec12ab3a331b34ec85c", "Url": "https://api.github.com/repos/socialsensor/socialsensor-query-builder", "Date": "2014-05-28T08:30:36Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((expensesAdapter.getCount()) > 5) { android.view.View item = expensesAdapter.getView(0, null, myExpenseList); item.measure(0, 0); android.view.ViewGroup.LayoutParams params = new android.view.ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ((int) (5.5 * (item.getMeasuredHeight())))); myExpenseList.setLayoutParams(params); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3821/buggy-version/app.src.main.java.mcgyvers.mobitrip.Current_trip.java", "BodyUseAPI": ["mcgyvers.mobitrip.Current_trip.ExpensesAdapter.getView(int,<nulltype>,android.widget.ListView)"], "Fixed commit": "4e427bc46ab27406c79a723f04d59e3c5dd77795", "Url": "https://api.github.com/repos/Shanto16/project404", "Date": "2017-11-30T00:31:28Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMessageAdapter) == null) { setupListAdapter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/314/buggy-version/HoloIRC.src.main.java.com.fusionx.lightirc.ui.ChannelFragment.java", "BodyUseAPI": [], "Fixed commit": "e605a9f9c62cc758d49d0c5a2bc5b2caa371d0e5", "Url": "https://api.github.com/repos/tilal6991/HoloIRC", "Date": "2013-12-02T17:52:42Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMessageAdapter) == null) { setupListAdapter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/314/buggy-version/HoloIRC.src.main.java.com.fusionx.lightirc.ui.UserFragment.java", "BodyUseAPI": [], "Fixed commit": "e605a9f9c62cc758d49d0c5a2bc5b2caa371d0e5", "Url": "https://api.github.com/repos/tilal6991/HoloIRC", "Date": "2013-12-02T17:52:42Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPage == 1) && (recipeCount <= 7)) { recipeCount++; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5755/buggy-version/src.scraper.Scraper.java", "BodyUseAPI": [], "Fixed commit": "4750a56faa248045823343feb5b8390201690350", "Url": "https://api.github.com/repos/rdlin/FoodPulseScraper", "Date": "2014-09-14T00:22:44Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3400/buggy-version/components.formats-common.src.loci.common.Location.java", "BodyUseAPI": [], "Fixed commit": "c649ffc99281db74fff9a9b5ae5c2891acc792c3", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2014-04-24T03:49:54Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((!(com.btwasilow.musicplayer.component.FileButton.getInstance().isSelected())) && (!(com.btwasilow.musicplayer.component.EditButton.getInstance().isSelected()))) && (!(com.btwasilow.musicplayer.component.ViewButton.getInstance().isSelected()))) && (!(com.btwasilow.musicplayer.component.ControlsButton.getInstance().isSelected()))) { updateMusicLibrarySongSelectionClickState(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/180/buggy-version/src.main.java.com.btwasilow.musicplayer.input.InputHandler.java", "BodyUseAPI": [], "Fixed commit": "0d69171f357a43bbb9401f34ee98f89b3eecc555", "Url": "https://api.github.com/repos/brentwasilow/Music-Player", "Date": "2017-03-09T06:33:19Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (midEles == null) { midEles = doc.select(\"div.standard-holder-in\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1913/buggy-version/OVWMigration.src.main.com.cisco.dse.global.migration.web.WebVariation8.java", "BodyUseAPI": [], "Fixed commit": "078950f17532632d1c38b49bf1524754a271a886", "Url": "https://api.github.com/repos/shreyabhatnagar/OVWMigration", "Date": "2016-02-24T13:55:56Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (format == null) { throw new java.lang.RuntimeException((\"Unrecognized file extension: \" + (file.getAbsolutePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4007/buggy-version/org.gitools.ui.app.src.main.java.org.gitools.ui.app.actions.file.OpenFileFromFilesystemAction.java", "BodyUseAPI": [], "Fixed commit": "aeef57556462868d5f0d4bed11dc2f48245bc23f", "Url": "https://api.github.com/repos/gitools/gitools", "Date": "2014-06-04T17:13:05Z"},
{"Line": "=>744", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (info.packageName.startsWith(\"com.android.system.core.\")) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3861/buggy-version/MyLook.app.src.main.java.com.qianqi.mylook.model.PackageModel.java", "BodyUseAPI": [], "Fixed commit": "bce49191490c75b869aa8fcd25584c0e479ff6f7", "Url": "https://api.github.com/repos/guang84299/tb", "Date": "2017-08-15T09:50:35Z"},
{"Line": "=>742", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (info.packageName.startsWith(\"com.qwert.poiuy\")) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3861/buggy-version/MyLook.app.src.main.java.com.qianqi.mylook.model.PackageModel.java", "BodyUseAPI": [], "Fixed commit": "bce49191490c75b869aa8fcd25584c0e479ff6f7", "Url": "https://api.github.com/repos/guang84299/tb", "Date": "2017-08-15T09:50:35Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (EntityModel.ID_COL.equals(colName)) { return com.turbomanage.storm.apt.entity.EntityModel.ID_COL; }else { return colName.toUpperCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/42/buggy-version/impl.src.com.turbomanage.storm.apt.entity.FieldModel.java", "BodyUseAPI": ["java.lang.String.toUpperCase()"], "Fixed commit": "5b239f22d531f00483d329008ad256f6ca3c7159", "Url": "https://api.github.com/repos/turbomanage/storm-gen", "Date": "2013-01-24T16:28:29Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bson.Document.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((feed_ids == null) || (feed_ids.isEmpty())) { throw new com.example.exceptions.FeedReaderException(\"This user isn't subscribed to any feed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7480/buggy-version/src.main.java.com.example.dataservice.DataManagement.java", "BodyUseAPI": [], "Fixed commit": "172a5d8e27e85bda5f482714a82aa90c62bd329e", "Url": "https://api.github.com/repos/deepika087/feedsreader", "Date": "2017-11-05T21:12:58Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bson.Document.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((artcile_ids == null) || (artcile_ids.isEmpty())) { return articles; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7480/buggy-version/src.main.java.com.example.dataservice.DataManagement.java", "BodyUseAPI": [], "Fixed commit": "172a5d8e27e85bda5f482714a82aa90c62bd329e", "Url": "https://api.github.com/repos/deepika087/feedsreader", "Date": "2017-11-05T21:12:58Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<org.jacop.core.IntVar, java.lang.Integer>.get(org.jacop.core.IntVar)", "org.jacop.core.TimeStamp<java.lang.Integer>.value()", "org.jacop.core.TimeStamp<java.lang.Integer>.value()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((posVar < currentLB) || (posVar > currentUB)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2363/buggy-version/src.main.java.org.jacop.constraints.Among.java", "BodyUseAPI": [], "Fixed commit": "a996f04b360749e3ad8291c6188c9f1abfb13d04", "Url": "https://api.github.com/repos/radsz/jacop", "Date": "2013-08-29T17:17:04Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(org.nutz.lang.Strings.isBlank(lc.beanName()))) { msgLoader = config.getIoc().get(lc.type(), lc.beanName()); }else { msgLoader = org.nutz.lang.Mirror.me(lc.type()).born(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5534/buggy-version/src.org.nutz.mvc.impl.NutLoading.java", "BodyUseAPI": ["org.nutz.mvc.annotation.Localization.beanName()", "org.nutz.mvc.annotation.Localization.type()", "org.nutz.lang.Mirror.me(lc.type())", "config.getIoc().get(lc.type(),lc.beanName())", "org.nutz.mvc.annotation.Localization.type()", "org.nutz.lang.Mirror.me(lc.type()).born()"], "Fixed commit": "80add336e24ce7809e6fca8be749d7e8a7c618d5", "Url": "https://api.github.com/repos/lzxz1234/nutz", "Date": "2012-06-28T16:16:41Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((curCh) != null) { de.looksgood.ani.Ani.to(curCh, ((float) (0.001)), \"x\", mouseX); de.looksgood.ani.Ani.to(curCh, ((float) (0.001)), \"y\", mouseY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8636/buggy-version/src.main.java.MainApplet.java", "BodyUseAPI": [], "Fixed commit": "17025f462e8d28ddb7104542b5e5d4a39e0bab19", "Url": "https://api.github.com/repos/emily051485/SoftwareStudioAssignment6", "Date": "2016-05-03T16:40:48Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((curCh) != null) { if ((((curCh.getX()) - 15) >= 500) && (((curCh.getX()) + 15) <= 900)) { if ((((curCh.getY()) - 15) >= 100) && (((curCh.getY()) + 15) <= 500)) { } }else { curCh.initial(); curCh = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8636/buggy-version/src.main.java.MainApplet.java", "BodyUseAPI": [], "Fixed commit": "17025f462e8d28ddb7104542b5e5d4a39e0bab19", "Url": "https://api.github.com/repos/emily051485/SoftwareStudioAssignment6", "Date": "2016-05-03T16:40:48Z"},
{"Line": "=>824", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["state.value()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (accum != null) { return combineFn.extractOutput(accum, context); }else { return combineFn.extractOutput(combineFn.createAccumulator(context), context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1691/buggy-version/runners.flink.src.main.java.org.apache.beam.runners.flink.translation.wrappers.streaming.state.FlinkStateInternals.java", "BodyUseAPI": ["org.apache.beam.runners.flink.translation.wrappers.streaming.state.FlinkStateInternals.FlinkCombiningStateWithContext.extractOutput(AccumT,CombineWithContext.Context)"], "Fixed commit": "de38410d3e2cf9c6edff9438d539929777ad7915", "Url": "https://api.github.com/repos/baibaichen/beam", "Date": "2017-04-20T12:27:31Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUris()) != null) { removeAllWatchContentUris(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6676/buggy-version/src.main.java.com.mridang.cyanight.ImprovedExtension.java", "BodyUseAPI": [], "Fixed commit": "45be9a1f090047bf073bad69c2ab6e071867b859", "Url": "https://api.github.com/repos/mridang/dashclock-cyanight", "Date": "2015-03-29T09:10:13Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((android.support.v4.app.ActivityCompat.checkSelfPermission(this.getContext(), Manifest.permission.ACCESS_FINE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) && ((android.support.v4.app.ActivityCompat.checkSelfPermission(this.getContext(), Manifest.permission.ACCESS_COARSE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3813/buggy-version/app.src.main.java.com.app.sample.messenger.fragment.PageMapFragment.java", "BodyUseAPI": [], "Fixed commit": "0d389cd6318614009b47617c26c0d6f8806092e6", "Url": "https://api.github.com/repos/dongdong1225/Saluto_android", "Date": "2016-09-02T12:41:20Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (l != null) { teleport_location.put(p, l); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4654/buggy-version/src.main.java.tw.mics.spigot.plugin.mkess.schedule.NetherDoorTeleport.java", "BodyUseAPI": ["java.util.HashMap<org.bukkit.entity.Player, org.bukkit.Location>.put(org.bukkit.entity.Player,org.bukkit.Location)"], "Fixed commit": "990af8c725c21d910eb18b1ba3883963a3e1061b", "Url": "https://api.github.com/repos/MkIIServer/MkEss", "Date": "2016-11-25T09:40:15Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastGoodLocation) == null) { lastGoodLocation = currentLocation; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1763/buggy-version/src.fr.jayps.android.AdvancedLocation.java", "BodyUseAPI": [], "Fixed commit": "53dfa9fb3a90701a5315f9ee6b81bade85cb6627", "Url": "https://api.github.com/repos/jay3/AdvancedLocation", "Date": "2014-06-16T21:50:54Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numTabsOpen) > 0) { tabs[currTab].setBackgroundColor(Color.BLUE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3535/buggy-version/Prototype1.app.src.main.java.com.example.singi_000.prototype1.InscriptionActivity.java", "BodyUseAPI": [], "Fixed commit": "10121535b2a5322d288a4600bdcdcdb4b86f1ba7", "Url": "https://api.github.com/repos/jafrancis/COMP4721-Team-Project-Frontend", "Date": "2015-03-04T21:52:25Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pane.getTabCount()) == 0) { org.datavyu.Datavyu.getView().safeQuit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6827/buggy-version/src.main.java.org.datavyu.views.TabWithCloseButton.java", "BodyUseAPI": [], "Fixed commit": "2b2cd4d19675a3f150992295431a32b8a6b4c231", "Url": "https://api.github.com/repos/databrary/datavyu", "Date": "2014-07-23T21:21:31Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ctx.eContainer()) instanceof com.rockwellcollins.atc.agree.agree.NestedDotID) { return org.eclipse.xtext.scoping.Scopes.scopeFor(components, IScope.NULLSCOPE); }else { return org.eclipse.xtext.scoping.Scopes.scopeFor(components, getScope(ctx.eContainer(), ref)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5925/buggy-version/fm-workbench.agree.com.rockwellcollins.atc.agree.src.com.rockwellcollins.atc.agree.scoping.AgreeScopeProvider.java", "BodyUseAPI": ["com.rockwellcollins.atc.agree.scoping.AgreeScopeProvider.getScope(ctx.eContainer(),org.eclipse.emf.ecore.EReference)", "org.eclipse.xtext.scoping.Scopes.scopeFor(java.util.Set<org.osate.aadl2.Element>,getScope(ctx.eContainer(), ref))", "com.rockwellcollins.atc.agree.agree.NestedDotID.eContainer()"], "Fixed commit": "8196321b49fdb5a743bbf70f1397bcecf91f7174", "Url": "https://api.github.com/repos/smaccm/smaccm", "Date": "2014-03-28T19:10:44Z"},
{"Line": "=>724", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cAList.size()) == 0) { cAList.add(java.awt.Color.RED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7019/buggy-version/src.f13dlaproject.DLAFrame.java", "BodyUseAPI": ["java.util.ArrayList<java.awt.Color>.add(java.awt.Color)"], "Fixed commit": "ddb11aa199469941bd015277078a59e893cde455", "Url": "https://api.github.com/repos/westernsystems/f13DLAProject", "Date": "2013-11-15T05:00:20Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player.getWallet()) < 20) { java.lang.System.out.println(\"Got $20? Nah you broke.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5730/buggy-version/src.main.java.io.zipcoder.zealotscasino.WarDealer.java", "BodyUseAPI": [], "Fixed commit": "9bbc546e618a79ef93828f6e55adc25ef4a53755", "Url": "https://api.github.com/repos/aaronclong/ZealotsCasino2", "Date": "2017-05-11T18:02:32Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["neoe.build.tools.Copy1.execute()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cnt > 0) neoe.build.BuildMain.log((((prj.name) + \":jar copied to \") + (jf.getAbsolutePath())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2954/buggy-version/src.neoe.build.BuildMain.java", "BodyUseAPI": [], "Fixed commit": "9220b3bab8926ef12a2c37a7d7b39cff4908f270", "Url": "https://api.github.com/repos/neoedmund/neoebuild", "Date": "2017-11-14T07:25:00Z"},
{"Line": "=>778", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menuTimerKiller) != null) { removeAds = menuTimerKiller.findItem(R.id.menu_remove_ads); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5936/buggy-version/app.src.main.java.uk.co.pranacreative.timekiller.TimeKillerActivity.java", "BodyUseAPI": [], "Fixed commit": "3b1099469de0227cde6da3c8732105ddff241d05", "Url": "https://api.github.com/repos/philipmiesbauer/TimeKiller", "Date": "2017-12-06T21:16:25Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(activePlayer.getIsComputer())) net.white_it.ships.Aktionen.spielstand();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8358/buggy-version/net.white_it.ships.Aktionen.java", "BodyUseAPI": [], "Fixed commit": "675b35fe7979c70d8bf82b658b36d6fb2058923b", "Url": "https://api.github.com/repos/HochschuleBremen-MI-2014/MI14-Prog2-C-Gruppe5", "Date": "2015-07-02T12:12:31Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (target == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7533/buggy-version/uiview.src.main.java.com.angcyo.uiview.utils.Reflect.java", "BodyUseAPI": [], "Fixed commit": "a02292f533ad254a042ab9a7887acefacc8080b5", "Url": "https://api.github.com/repos/angcyo/RLibrary", "Date": "2017-04-16T03:37:00Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dateString.isEmpty()) { date = java.time.LocalDate.now(); }else { java.lang.String[] dateArray = dateString.split(\"\\\\.\"); int year = java.lang.Integer.parseInt(dateArray[2]); int month = java.lang.Integer.parseInt(dateArray[1]); int day = java.lang.Integer.parseInt(dateArray[0]); date = java.time.LocalDate.of(year, month, day); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/875/buggy-version/src.main.java.lv.javaguru.cashflow.web.UploadPdfController.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "5d96cf7b5f1fece23e17d9b78363a2ff5345ef47", "Url": "https://api.github.com/repos/AKalinins/Java2CashFlow", "Date": "2017-09-12T11:19:05Z"},
{"Line": "=>967", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (curminutes < 10) { curtxtMin.setText((\"0\" + (curminutes.toString()))); }else { curtxtMin.setText(curminutes.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2448/buggy-version/SRCMarineInfo1.src.main.java.com.cnsintegration.srcmarineinfo1.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "java.lang.Integer.toString()", "android.widget.TextView.setText(java.lang.String)", "java.lang.Integer.toString()"], "Fixed commit": "49967a7af00a3ad60b4e4ec665bd5326270a7354", "Url": "https://api.github.com/repos/Jprioleau83/SRC_apps", "Date": "2015-09-24T21:17:43Z"},
{"Line": "=>957", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (minutes < 10) { txtMin.setText((\"0\" + (minutes.toString()))); }else { txtMin.setText(minutes.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2448/buggy-version/SRCMarineInfo1.src.main.java.com.cnsintegration.srcmarineinfo1.MainActivity.java", "BodyUseAPI": ["java.lang.Integer.toString()", "android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.setText(java.lang.String)", "java.lang.Integer.toString()"], "Fixed commit": "49967a7af00a3ad60b4e4ec665bd5326270a7354", "Url": "https://api.github.com/repos/Jprioleau83/SRC_apps", "Date": "2015-09-24T21:17:43Z"},
{"Line": "=>875", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sdk < (android.os.Build.VERSION_CODES.JELLY_BEAN)) { cv1.setBackgroundDrawable(this.getResources().getDrawable(R.drawable.greyradial)); }else { cv1.setBackground(this.getResources().getDrawable(R.drawable.greyradial)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2448/buggy-version/SRCMarineInfo1.src.main.java.com.cnsintegration.srcmarineinfo1.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "49967a7af00a3ad60b4e4ec665bd5326270a7354", "Url": "https://api.github.com/repos/Jprioleau83/SRC_apps", "Date": "2015-09-24T21:17:43Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (text.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5664/buggy-version/src.main.java.com.drmattyg.nanokaraoke.video.KaraokeScreen.java", "BodyUseAPI": [], "Fixed commit": "47f2e890d43e95627679a800f8335d23667d94fa", "Url": "https://api.github.com/repos/drmattyg/KarProcess", "Date": "2015-07-03T18:00:26Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mSearchWord.getText().length()) != 0) { translateText(mSearchWord.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/171/buggy-version/app.src.main.java.kg.manasdict.android.app.ui.fragment.drawer.MainFragment.java", "BodyUseAPI": ["kg.manasdict.android.app.ui.fragment.drawer.MainFragment.3.translateText(mSearchWord.getText().toString())", "android.widget.EditText.getText()", "mSearchWord.getText().toString()"], "Fixed commit": "b9e310ff6d9c21d435b51c41965bcc1f9a3df289", "Url": "https://api.github.com/repos/Elbar/ManasDict", "Date": "2016-04-02T13:27:14Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(worldIn.isRemote)) { worldIn.spawnEntityInWorld(demon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6164/buggy-version/src.main.java.com.fvg.blackmagic.blocks.SpawnBlock.java", "BodyUseAPI": ["net.minecraft.world.World.spawnEntityInWorld(net.minecraft.entity.monster.EntityZombie)"], "Fixed commit": "7b8a02394ee48c86a5f03ff28262397a5c4920ea", "Url": "https://api.github.com/repos/FlamingVikingGoat/BlackMagic", "Date": "2017-12-04T03:44:41Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getTopSolidOrLiquidBlock(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (y > ((world.getHeight()) - 5)) { y = (world.getHeight()) / 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7934/buggy-version/src.main.java.com.mcjty.rftools.dimension.world.WorldGenerationTools.java", "BodyUseAPI": ["net.minecraft.world.World.getHeight()"], "Fixed commit": "8dea51c7c72f6f1f603b6d27dffdc52d34615030", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2015-01-12T05:02:27Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.matthias.findpark.display.DeviceDisplay.getStatusBarHeight(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((screenHeight - statusBarHeight) != 0) { return (heightPixels + statusBarHeight) / (screenHeight - statusBarHeight); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/324/buggy-version/app.src.main.java.com.android.matthias.findpark.display.DeviceDisplay.java", "BodyUseAPI": [], "Fixed commit": "12d9f04d36e284bae5aa7267bb85c2e671913fbb", "Url": "https://api.github.com/repos/matthiaslao/justparktest", "Date": "2014-12-16T01:35:42Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.next()) user.setPhoto(result.getString(\"photo\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8289/buggy-version/src.org.iiitb.action.LoginAction.java", "BodyUseAPI": ["org.iiitb.model.User.setPhoto(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)"], "Fixed commit": "8dde54ad200e9c5fa97880810ae35413a362bcb8", "Url": "https://api.github.com/repos/prkreddy/studentInfo", "Date": "2014-02-16T06:32:15Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.openapi.vfs.LocalFileSystem.getInstance().findFileByPath(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (file == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1919/buggy-version/IdeaPlugin.mps-java.debugger.src.jetbrains.mps.idea.debugger.GeneratedSourcePosition.java", "BodyUseAPI": [], "Fixed commit": "9317f148ed5ef85438e99abd330d38826c0e9455", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2012-06-18T15:21:50Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jetbrains.mps.vfs.IFile.getDescendant(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(file.exists())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1919/buggy-version/IdeaPlugin.mps-java.debugger.src.jetbrains.mps.idea.debugger.GeneratedSourcePosition.java", "BodyUseAPI": [], "Fixed commit": "9317f148ed5ef85438e99abd330d38826c0e9455", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2012-06-18T15:21:50Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jetbrains.mps.smodel.SModelDescriptor.getModule()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(module instanceof jetbrains.mps.idea.core.project.SolutionIdea)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1919/buggy-version/IdeaPlugin.mps-java.debugger.src.jetbrains.mps.idea.debugger.GeneratedSourcePosition.java", "BodyUseAPI": [], "Fixed commit": "9317f148ed5ef85438e99abd330d38826c0e9455", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2012-06-18T15:21:50Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(session.isLoggedIn())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3196/buggy-version/app.src.main.java.com.example.ebuspass.ebuspassapp.helper.SyncPass.java", "BodyUseAPI": [], "Fixed commit": "35fafc48ab4e6808d6abf056ea9123750b65fd40", "Url": "https://api.github.com/repos/KulbirJ/EbusPassApp", "Date": "2016-03-22T20:08:29Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (phi < (java.lang.Math.toRadians((-(Balls.MAXIMUM_ANGLE))))) phi = java.lang.Math.toRadians((-(Balls.MAXIMUM_ANGLE)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3903/buggy-version/Balls.java", "BodyUseAPI": ["java.lang.Math.toRadians(int)"], "Fixed commit": "d98f0189789409b299f9da1d7aa792278b24bd25", "Url": "https://api.github.com/repos/nuttt/Pong", "Date": "2012-10-04T16:24:38Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (phi > (java.lang.Math.toRadians(Balls.MAXIMUM_ANGLE))) phi = java.lang.Math.toRadians(Balls.MAXIMUM_ANGLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3903/buggy-version/Balls.java", "BodyUseAPI": ["java.lang.Math.toRadians(int)"], "Fixed commit": "d98f0189789409b299f9da1d7aa792278b24bd25", "Url": "https://api.github.com/repos/nuttt/Pong", "Date": "2012-10-04T16:24:38Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(phi)) < (java.lang.Math.toRadians(5))) phi = ((java.lang.Math.random()) * 10) - 5;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3903/buggy-version/Balls.java", "BodyUseAPI": [], "Fixed commit": "d98f0189789409b299f9da1d7aa792278b24bd25", "Url": "https://api.github.com/repos/nuttt/Pong", "Date": "2012-10-04T16:24:38Z"},
{"Line": "=>690", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mcjty.rftoolscontrol.logic.compiled.CompiledOpcode.getParameters()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parIndex >= (parameters.size())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7692/buggy-version/src.main.java.mcjty.rftoolscontrol.blocks.processor.ProcessorTileEntity.java", "BodyUseAPI": [], "Fixed commit": "d9010b87be9a3dbb66a527230f8e3eed68e4fe36", "Url": "https://api.github.com/repos/McJtyMods/RFToolsControl", "Date": "2016-09-07T03:27:59Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mActionHandler) != null) { mActionHandler.sendEmptyMessage(com.hinohunomi.bgbeacon.BeaconService.ActionHandler.ACT_BEACON_DISABLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7983/buggy-version/src.android.BeaconService.java", "BodyUseAPI": [], "Fixed commit": "f675ec928f88fddf5fd18cbc1f33cef3e4869806", "Url": "https://api.github.com/repos/shimitei/cordova-plugin-bgbeacon", "Date": "2016-06-01T14:25:47Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mActionHandler) != null) { unregisterReceiver(broadcastReceiver); mActionHandler.abortBeacon(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7983/buggy-version/src.android.BeaconService.java", "BodyUseAPI": [], "Fixed commit": "f675ec928f88fddf5fd18cbc1f33cef3e4869806", "Url": "https://api.github.com/repos/shimitei/cordova-plugin-bgbeacon", "Date": "2016-06-01T14:25:47Z"},
{"Line": "=>856", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Block.blocksList[id]) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5250/buggy-version/src.client.nbxlite.ODNBXlite.java", "BodyUseAPI": [], "Fixed commit": "6d45332be618a79e2e08cba504a1f86eca62323b", "Url": "https://api.github.com/repos/Exalm/Minecraft-mods", "Date": "2012-09-15T08:00:44Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasVotes == true) { developerModels.add(developerModel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6466/buggy-version/src.main.java.org.diningdevelopers.service.DecisionService.java", "BodyUseAPI": [], "Fixed commit": "b0697536d789e7864665887d279ca9b25c947258", "Url": "https://api.github.com/repos/nilseckert/diningdevelopersdilema", "Date": "2013-01-22T07:38:13Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (args.has(\"brushResolution\")) { int brushRes = args.getInt(\"brushResolution\"); traceMan.setDeltaT(((long) (java.lang.Math.ceil((((to - from) * selector) / ((java.lang.Math.sqrt(res)) / brushRes)))))); }else { traceMan.setDeltaT(((long) (java.lang.Math.ceil((((to - from) * selector) / res))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4071/buggy-version/sources.appsgate-project.communication-components.TraceMan.src.main.java.appsgate.lig.ehmi.trace.listener.TraceCmdListener.java", "BodyUseAPI": ["org.json.JSONObject.getInt(java.lang.String)"], "Fixed commit": "790d471de5af99d0ab926b6d1f8c20c6cb4e8f45", "Url": "https://api.github.com/repos/appsgate2015/appsgate", "Date": "2014-09-10T13:00:52Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result) { accessToken.setAccessToken(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8650/buggy-version/weixin-common.src.main.java.com.riversoft.weixin.common.WxClient.java", "BodyUseAPI": [], "Fixed commit": "9f95dcb807c0678470216df7e330ac8c3f537718", "Url": "https://api.github.com/repos/borball/weixin-sdk", "Date": "2016-03-04T02:25:58Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(readQueue.isEmpty())) { packet = readQueue.remove(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6843/buggy-version/src.main.java.com.github.aklatt1194.SuperAwesomeOverlay.network.SimpleSocket.java", "BodyUseAPI": ["java.util.List<com.github.aklatt1194.SuperAwesomeOverlay.network.SimpleDatagramPacket>.remove(int)"], "Fixed commit": "283e9d442edcb9def85c037f7db3904a8b9cfab8", "Url": "https://api.github.com/repos/aklatt1194/SuperAwesomeOverlay", "Date": "2014-12-05T13:49:32Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(readQueue.isEmpty())) { return readQueue.remove(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6843/buggy-version/src.main.java.com.github.aklatt1194.SuperAwesomeOverlay.network.SimpleSocket.java", "BodyUseAPI": ["java.util.List<com.github.aklatt1194.SuperAwesomeOverlay.network.SimpleDatagramPacket>.remove(int)"], "Fixed commit": "283e9d442edcb9def85c037f7db3904a8b9cfab8", "Url": "https://api.github.com/repos/aklatt1194/SuperAwesomeOverlay", "Date": "2014-12-05T13:49:32Z"},
{"Line": "=>3612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (urlPath != null) { java.lang.String path = urlPath; int index = path.indexOf(\"/services/soap\"); if ((index != (-1)) && (index != 0)) { contextPath = path.substring(0, index); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5547/buggy-version/main.plugins.org.talend.mdm.workbench.src.com.amalto.workbench.utils.Util.java", "BodyUseAPI": [], "Fixed commit": "5bf5dbd474fcf2371e8dcdced5206823674efcbd", "Url": "https://api.github.com/repos/Talend/tmdm-studio-se", "Date": "2017-08-04T10:24:12Z"},
{"Line": "=>1670", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((refName != null) && (schema != null)) { org.eclipse.emf.common.util.EList<org.eclipse.xsd.XSDElementDeclaration> eDecls = schema.getElementDeclarations(); if ((refName.indexOf(\" : \")) != (-1)) { refName = refName.substring(0, refName.indexOf(\" : \")); } for (org.eclipse.xsd.XSDElementDeclaration d : eDecls) { if (d.getQName().equals(refName)) { return d; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5547/buggy-version/main.plugins.org.talend.mdm.workbench.src.com.amalto.workbench.utils.Util.java", "BodyUseAPI": ["org.eclipse.xsd.XSDSchema.getElementDeclarations()", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "5bf5dbd474fcf2371e8dcdced5206823674efcbd", "Url": "https://api.github.com/repos/Talend/tmdm-studio-se", "Date": "2017-08-04T10:24:12Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.ArrayAdapter<java.lang.Integer>.getPosition(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pos < 0) { mYear = currentYear; pos = mAdapter.getPosition(mYear); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4330/buggy-version/deufeitage.src.main.java.de.micmun.android.deufeitage.FeiTagDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "75187783a239dac98007be7d055d2660c0fe1930", "Url": "https://api.github.com/repos/MicMun/DeuFeiTage", "Date": "2014-05-27T15:51:28Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.helioviewer.jhv.base.Globals.IS_WINDOWS) java.lang.System.setProperty(\"sun.java2d.noddraw\", \"true\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/573/buggy-version/src.org.helioviewer.jhv.JHelioviewer.java", "BodyUseAPI": [], "Fixed commit": "2b49527319477e1c927349630a8f4807f278c0f2", "Url": "https://api.github.com/repos/Helioviewer-Project/JHelioviewer", "Date": "2017-05-29T21:50:35Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((body) == null) { return null; }else if ((charset) != null) { try { return new java.lang.String(body, charset); } catch (java.io.UnsupportedEncodingException e) { return new java.lang.String(body); } }else { return new java.lang.String(body); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6761/buggy-version/src.main.java.com.github.seratch.signedrequest4j.HttpResponse.java", "BodyUseAPI": [], "Fixed commit": "24f98c74209f14eb53abf89589f8cfb294e4cf0c", "Url": "https://api.github.com/repos/seratch/signedrequest4j", "Date": "2011-10-17T07:19:11Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.http.client.utils.URLEncodedUtils.format(java.util.List<org.apache.http.NameValuePair>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((queryString != null) && (!(queryString.isEmpty()))) { url = (url.contains(\"?\")) ? (url + \"&\") + queryString : (url + \"?\") + queryString; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6761/buggy-version/src.main.java.com.github.seratch.signedrequest4j.SignedRequestApacheHCImpl.java", "BodyUseAPI": [], "Fixed commit": "24f98c74209f14eb53abf89589f8cfb294e4cf0c", "Url": "https://api.github.com/repos/seratch/signedrequest4j", "Date": "2011-10-17T07:19:11Z"},
{"Line": "=>602", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cascading.flow.planner.graph.ElementGraph.getEdgeTarget(cascading.flow.planner.Scope)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((nextElement instanceof cascading.pipe.Splice) && (((cascading.pipe.Splice) (nextElement)).isJoin())) && ((previousEdge.getOrdinal()) != 0)) scope.setNonBlocking(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3580/buggy-version/cascading-core.src.main.java.cascading.flow.planner.graph.ElementGraphs.java", "BodyUseAPI": [], "Fixed commit": "b154550f5aa43949e338e18ce3ec66a34b55fcbe", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2016-01-14T21:52:32Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isColliding(collection, offset))) { yPosition += com.zelda.game.Hero.SPEED; com.zelda.network.ServerWriter.sendMessage(\"0001U\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7155/buggy-version/ZeldaX.core.src.com.zelda.game.Hero.java", "BodyUseAPI": [], "Fixed commit": "6da0fe6d7bdf37d7e7c1989ad3b4df718d7f49dd", "Url": "https://api.github.com/repos/Easihh/laughing-avenger", "Date": "2016-12-22T01:09:15Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.imagesearch.model.data.ImageData>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((imageData.getBitmap()) != null) holder.imageView.setImageBitmap(imageData.getBitmap()); else picasso.load(imageData.getImageUrl()).into(holder.imageView);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2008/buggy-version/app.src.main.java.com.imagesearch.view.ImagesAdapter.java", "BodyUseAPI": ["picasso.load(imageData.getImageUrl()).into(android.widget.ImageView)", "com.squareup.picasso.Picasso.load(imageData.getImageUrl())", "android.widget.ImageView.setImageBitmap(imageData.getBitmap())", "com.imagesearch.model.data.ImageData.getImageUrl()", "com.imagesearch.model.data.ImageData.getBitmap()"], "Fixed commit": "f3bb077fad0fc5f8878ca83d9c745166c616e86b", "Url": "https://api.github.com/repos/giladop/FlickrImageSearch", "Date": "2017-02-28T06:28:09Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sIDs.length) > 0) { for (java.lang.String sID : sIDs) { int id = java.lang.Integer.parseInt(sID); for (java.lang.Object o : ul.people) { if ((((com.hotmale.packagefriendfinder.Friends.Friend) (o)).id) == id) { ((com.hotmale.packagefriendfinder.Friends.Friend) (o)).is_my_friend = true; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1918/buggy-version/app.src.main.java.com.hotmale.packagefriendfinder.Database.java", "BodyUseAPI": [], "Fixed commit": "d396c6a8552f946c94e0e92774a89311b40ef78d", "Url": "https://api.github.com/repos/schavery/Package_Friend_Finder", "Date": "2015-06-07T21:17:16Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.baswell.easybeans.OpenTypeMapping.getElementTypeMapping()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((elementTypeMapping.getSimpleClass()) == (java.lang.String.class)) { java.lang.reflect.Array.set(array, i, (listObj == null ? null : listObj.toString())); }else { java.lang.reflect.Array.set(array, i, listObj); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3704/buggy-version/src.main.java.org.baswell.easybeans.OpenTypeMapper.java", "BodyUseAPI": [], "Fixed commit": "eb1087fda04509ea1f746ee2c11ed23dffc6ce66", "Url": "https://api.github.com/repos/baswerc/easybeans", "Date": "2015-02-08T02:21:44Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(coldFeetList.contains(eventWrapper.getPlayer().getName()))) return de.tobiyas.racesandclasses.traitcontainer.interfaces.TraitResults.False();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/705/buggy-version/ColdFeetTrait.src.trait.ColdFeetTrait.java", "BodyUseAPI": [], "Fixed commit": "7488cd9245b895d7d4a30b1499a2c8baf7d89cdb", "Url": "https://api.github.com/repos/tobiyas/AllTraits", "Date": "2014-10-20T19:05:24Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((typeRowBegin_.get(type)) == null) || ((typeRowEnd_.get(type)) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/655/buggy-version/nb-cppcheck.src.org.johngull.netbeans.cppcheck.StaticAnalysisModel.java", "BodyUseAPI": [], "Fixed commit": "9c66ae30b8cd4d08ac24760a4c36f279aeca4213", "Url": "https://api.github.com/repos/johngull/nb-cppcheck", "Date": "2013-01-03T15:11:11Z"},
{"Line": "=>901", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastHash == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4354/buggy-version/src.main.java.org.mapdb.HTreeMap.java", "BodyUseAPI": [], "Fixed commit": "6a03547994bfa3692d8fc6ac9e24298aa45cb1d2", "Url": "https://api.github.com/repos/jankotek/MapDB", "Date": "2013-01-12T01:41:38Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (person != null) { this.eligibleStaff.add(person); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6879/buggy-version/src.DepartmentSubsystem.Service.java", "BodyUseAPI": ["java.util.ArrayList<DepartmentSubsystem.Staff>.add(DepartmentSubsystem.Staff)"], "Fixed commit": "e64c9bf8e893337d1b7b71a963fa25a74865b608", "Url": "https://api.github.com/repos/SE2017B/Iteration2", "Date": "2017-11-27T01:19:16Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<com.salesforce.phoenix.util.ImmutableBytesPtr, java.util.Map<com.salesforce.phoenix.execute.PColumn, byte[]>>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (newRow != null) { for (java.util.Map.Entry<com.salesforce.phoenix.execute.PColumn, byte[]> valueEntry : newRow.entrySet()) { existingValues.put(valueEntry.getKey(), valueEntry.getValue()); } existingRows.put(rowEntry.getKey(), existingValues); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5099/buggy-version/src.main.java.com.salesforce.phoenix.execute.MutationState.java", "BodyUseAPI": ["java.util.Map<com.salesforce.phoenix.execute.PColumn, byte[]>.entrySet()"], "Fixed commit": "5c130d8efc12b6ceb5c0335f307766182995e25e", "Url": "https://api.github.com/repos/colorant/phoenix", "Date": "2013-05-14T07:41:57Z"},
{"Line": "=>1119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uiWindow.isJumpToErrorChecked()) jumpToOffset(startLoc);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8571/buggy-version/src.coq.cqDataObject.java", "BodyUseAPI": [], "Fixed commit": "5a4e2fcbec729a604004fee7236704ee8019bfc2", "Url": "https://api.github.com/repos/aa755/nbcoq", "Date": "2015-02-10T02:07:57Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDetached()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5091/buggy-version/app.src.main.java.com.nulldreams.wowpaper.fragment.PaperListFragment.java", "BodyUseAPI": [], "Fixed commit": "a2843dca295773cb5a3b474e24f2136bc441d75f", "Url": "https://api.github.com/repos/boybeak/WowPaper", "Date": "2017-04-12T07:27:33Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mFile.exists()) { if (!(mFile.delete())) { flushAndClose(); if (!(mFile.delete())) { throw new com.velasolaris.plugin.controller.spi.PluginControllerException(((getName()) + \"Failed to delete old CSV file.\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4938/buggy-version/src.main.java.de.htw.berlin.io.csv.plugins.CSVWriterController.java", "BodyUseAPI": ["java.io.File.delete()", "java.io.File.delete()"], "Fixed commit": "23342fbecd95a594e67633f77d8883d613915584", "Url": "https://api.github.com/repos/MrcJkb/Polysun-IO-Plugin", "Date": "2017-08-06T07:55:55Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (preRun && ((mFile) != null)) { flushAndClose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4938/buggy-version/src.main.java.de.htw.berlin.io.csv.plugins.CSVWriterController.java", "BodyUseAPI": [], "Fixed commit": "23342fbecd95a594e67633f77d8883d613915584", "Url": "https://api.github.com/repos/MrcJkb/Polysun-IO-Plugin", "Date": "2017-08-06T07:55:55Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.floor(deadPlayer.posY)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tombY < 0) { return; }else if (tombY > 255) { tombY = 255; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/9182/buggy-version/DeathEventHook.java", "BodyUseAPI": [], "Fixed commit": "6314023a6eaa7d63cf9e167a09ed7fcfcc9d730a", "Url": "https://api.github.com/repos/cyanobacteruim/TombStone", "Date": "2013-10-05T02:44:09Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(this.hasAreaAttack())) && (doingAction)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6106/buggy-version/src.game.enemies.ArcherProjectile.java", "BodyUseAPI": [], "Fixed commit": "db3441e57af066ad9b6dc648763504f6b209444c", "Url": "https://api.github.com/repos/Senarii/GameEngine", "Date": "2017-05-24T16:15:08Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(this.hasAreaAttack())) && (doingAction)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6106/buggy-version/src.game.friendly.CatapultProjectile.java", "BodyUseAPI": [], "Fixed commit": "db3441e57af066ad9b6dc648763504f6b209444c", "Url": "https://api.github.com/repos/Senarii/GameEngine", "Date": "2017-05-24T16:15:08Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((find(net.frontlinesms.plugins.patientview.ui.administration.tabs.VaccineAdministrationPanelController.ADD_DOSE_BUTTON)) != null) { ui.setEnabled(find(net.frontlinesms.plugins.patientview.ui.administration.tabs.VaccineAdministrationPanelController.ADD_DOSE_BUTTON), true); java.util.List<net.frontlinesms.plugins.patientview.data.domain.vaccine.VaccineDose> doses = vaccineDoseDao.getDosesForVaccine(getCurrentlySelectedVaccine()); if ((doses.size()) == 0) { ui.setEnabled(find(net.frontlinesms.plugins.patientview.ui.administration.tabs.VaccineAdministrationPanelController.EDIT_DOSE_BUTTON), false); ui.setEnabled(find(net.frontlinesms.plugins.patientview.ui.administration.tabs.VaccineAdministrationPanelController.DELETE_DOSE_BUTTON), false); }else { ui.setEnabled(find(net.frontlinesms.plugins.patientview.ui.administration.tabs.VaccineAdministrationPanelController.EDIT_DOSE_BUTTON), true); ui.setEnabled(find(net.frontlinesms.plugins.patientview.ui.administration.tabs.VaccineAdministrationPanelController.DELETE_DOSE_BUTTON), true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3275/buggy-version/src.main.java.net.frontlinesms.plugins.patientview.ui.administration.tabs.VaccineAdministrationPanelController.java", "BodyUseAPI": ["net.frontlinesms.plugins.patientview.ui.administration.tabs.VaccineAdministrationPanelController.find(java.lang.String)", "net.frontlinesms.plugins.patientview.ui.administration.tabs.VaccineAdministrationPanelController.setEnabled(find(net.frontlinesms.plugins.patientview.ui.administration.tabs.VaccineAdministrationPanelController.ADD_DOSE_BUTTON),boolean)"], "Fixed commit": "1beab8300643313ea7112898db46308c4d0a321e", "Url": "https://api.github.com/repos/medic/PatientView", "Date": "2011-06-28T14:29:45Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vaccineDao.getAllVaccines().size()) == 0) { ui.setEnabled(find(net.frontlinesms.plugins.patientview.ui.administration.tabs.VaccineAdministrationPanelController.REMOVE_VACCINE_BUTTON), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3275/buggy-version/src.main.java.net.frontlinesms.plugins.patientview.ui.administration.tabs.VaccineAdministrationPanelController.java", "BodyUseAPI": [], "Fixed commit": "1beab8300643313ea7112898db46308c4d0a321e", "Url": "https://api.github.com/repos/medic/PatientView", "Date": "2011-06-28T14:29:45Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uiElement instanceof org.eclipse.e4.ui.model.application.ui.basic.MTrimmedWindow) { if ((windowRenderer) == null) { windowRenderer = new au.gov.ga.earthsci.application.compatibility.WindowRenderer(); initRenderer(windowRenderer); } return windowRenderer; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1229/buggy-version/plugins.au.gov.ga.earthsci.application.src.au.gov.ga.earthsci.application.compatibility.WorkbenchRendererFactoryFixed.java", "BodyUseAPI": [], "Fixed commit": "958b8693544d39ab75a1e89f2eddb4bf19fcbd83", "Url": "https://api.github.com/repos/GeoscienceAustralia/earthsci", "Date": "2014-05-30T03:59:11Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (application == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8844/buggy-version/modules.application.src.main.java.com.sldeditor.ui.layout.SLDEditorDefaultLayout.java", "BodyUseAPI": [], "Fixed commit": "d1e1289c51eee210977ee913a47c29a6543c0883", "Url": "https://api.github.com/repos/robward-scisys/sldeditor", "Date": "2017-01-30T16:05:10Z"},
{"Line": "=>1082", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, ? extends net.openhft.lang.model.FieldModel>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (model2.isArray()) add *= model2.indexSize().value();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4018/buggy-version/lang.src.main.java.net.openhft.lang.model.DataValueGenerator.java", "BodyUseAPI": ["model2.indexSize().value()", "net.openhft.lang.model.FieldModel.indexSize()"], "Fixed commit": "83d9087ea5291a56ee038e79df85ccbf97e26368", "Url": "https://api.github.com/repos/OpenHFT/Java-Lang", "Date": "2014-12-16T05:05:29Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((acceptedOffers.size()) > 0) { block.updateOfferStatus(getOperations(recommendations)); }else { block.updateOfferStatus(java.util.Optional.empty()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6081/buggy-version/src.main.java.org.apache.mesos.scheduler.plan.DefaultBlockScheduler.java", "BodyUseAPI": [], "Fixed commit": "06d96211034a5587472d7134f00d5f55717d2ac2", "Url": "https://api.github.com/repos/mesosphere/dcos-commons", "Date": "2016-08-28T23:27:51Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.mrCookieSlime.Slimefun.api.BlockStorage.getStorage(e.getWorld())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (storage != null) storage.onChunkLoad(e.getChunk());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4585/buggy-version/src.me.mrCookieSlime.Slimefun.main.java", "BodyUseAPI": ["me.mrCookieSlime.Slimefun.api.BlockStorage.onChunkLoad(e.getChunk())"], "Fixed commit": "7c941c9f9a01ec56664e002d66c34ad6fa09f922", "Url": "https://api.github.com/repos/TheBusyBiscuit/Slimefun4", "Date": "2015-09-24T10:13:32Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (version == null) { version = com.mucommander.VersionChecker.getInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5120/buggy-version/src.main.com.mucommander.ui.dialog.startup.CheckVersionDialog.java", "BodyUseAPI": [], "Fixed commit": "cb816388f822d86835dabbc4b7c9ceaf80268644", "Url": "https://api.github.com/repos/trol73/mucommander", "Date": "2014-01-19T19:56:11Z"},
{"Line": "=>1308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s1 instanceof org.jgll.grammar.slot.KeywordGrammarSlot) { org.jgll.grammar.slot.KeywordGrammarSlot keywordSlot1 = ((org.jgll.grammar.slot.KeywordGrammarSlot) (s1)); org.jgll.grammar.slot.KeywordGrammarSlot keywordSlot2 = ((org.jgll.grammar.slot.KeywordGrammarSlot) (s2)); return ((keywordSlot1.getKeyword().equals(keywordSlot2.getKeyword())) && (keywordSlot1.getPreConditions().equals(keywordSlot2.getPreConditions()))) && (keywordSlot1.next().getPopActions().equals(keywordSlot2.next().getPopActions())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/9145/buggy-version/src.org.jgll.grammar.GrammarBuilder.java", "BodyUseAPI": [], "Fixed commit": "135a1fe4a54a3748ee36894d3d40e7ac3b072656", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2013-09-20T14:55:10Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value == null) { dummyValue = null; }else if (org.datacleaner.util.ReflectionUtils.isArray(value)) { int length = java.lang.reflect.Array.getLength(value); for (int i = 0; i < length; i++) { final org.datacleaner.api.InputColumn<?> inputColumn = ((org.datacleaner.api.InputColumn<?>) (java.lang.reflect.Array.get(value, i))); _inputColumns.add(inputColumn); } if (_inputColumns.isEmpty()) { dummyValue = null; }else { dummyValue = _inputColumns.iterator().next(); } }else { final org.datacleaner.api.InputColumn<?> col = ((org.datacleaner.api.InputColumn<?>) (value)); _inputColumns.add(col); dummyValue = col; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3152/buggy-version/engine.core.src.main.java.org.datacleaner.job.builder.AnalyzerComponentBuilder.java", "BodyUseAPI": ["java.lang.reflect.Array.getLength(java.lang.Object)", "java.lang.reflect.Array.get(java.lang.Object,int)", "org.datacleaner.util.ReflectionUtils.isArray(java.lang.Object)"], "Fixed commit": "156ee0abf29864b75e9e26d26c6388817f36a9b4", "Url": "https://api.github.com/repos/datacleaner/DataCleaner", "Date": "2015-09-07T11:25:09Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.googlecode.jmxtrans.model.Query.getAttr()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((queryAttributes == null) || ((queryAttributes.size()) == 0)) { attributes = new java.util.ArrayList<java.lang.String>(); for (javax.management.MBeanAttributeInfo attrInfo : info.getAttributes()) { attributes.add(attrInfo.getName()); } }else { attributes = queryAttributes; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7009/buggy-version/src.com.googlecode.jmxtrans.util.JmxUtils.java", "BodyUseAPI": [], "Fixed commit": "05eb983b4102e4215a857a79b42139c07ad82096", "Url": "https://api.github.com/repos/demonix/jmxtrans", "Date": "2014-09-18T11:39:19Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(MainViewController.PRE_LOGIN_REFERRER_KEY)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((org.xcolab.portlets.loginregister.singlesignon.Validator.isNull(redirectUrl)) || (org.xcolab.portlets.loginregister.singlesignon.Validator.isBlank(redirectUrl))) redirectUrl = themeDisplay.getURLHome();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4628/buggy-version/portlets.loginregister-portlet.src.main.java.org.xcolab.portlets.loginregister.singlesignon.OpenIdController.java", "BodyUseAPI": [], "Fixed commit": "3d5e1714ca1f1be86aaa43bb3b0b6c48bbce64b9", "Url": "https://api.github.com/repos/CCI-MIT/XCoLab", "Date": "2014-08-18T12:20:42Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((aiD.amountCardsInDeck()) > 0) { pulledFromD = aiD.fetch(); ai.endTurnCardDrow(pulledFromD); java.lang.String cName = pulledFromD.getName(); java.lang.System.out.println((\"Ai pulled from deck \" + cName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/532/buggy-version/src.com.company.AI.java", "BodyUseAPI": ["com.company.Deck.fetch()"], "Fixed commit": "b05eb992b5b966eb5d35cb282b743c2665891dfe", "Url": "https://api.github.com/repos/Faxar/iDEA.Cards", "Date": "2016-05-11T18:56:46Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.weblite.codename1.mapper.DataMapper.get(java.util.Map,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (v == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1367/buggy-version/src.ca.weblite.codename1.mapper.DataMapper.java", "BodyUseAPI": [], "Fixed commit": "5deeedbff1177189646fa806ad88e9a9e522dc37", "Url": "https://api.github.com/repos/shannah/cn1-data-utils", "Date": "2016-02-02T16:39:31Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5850/buggy-version/src.jade.ui.View.java", "BodyUseAPI": [], "Fixed commit": "7e3dc53537b68174225c732386249d8e1cab73a6", "Url": "https://api.github.com/repos/luetge/der-pazifist", "Date": "2013-03-13T17:03:56Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (current.isEnd()) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7188/buggy-version/src.main.java.phonedirectory.PhoneDirectoryTrie.java", "BodyUseAPI": [], "Fixed commit": "34c0153935e07839e7c1574d7920aa20287a4f60", "Url": "https://api.github.com/repos/manoharprabhu/PhoneNumberDirectory", "Date": "2014-11-01T20:24:20Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fileXNumber == fileYNumber) result = 0; else if (fileXNumber < fileYNumber) result = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6249/buggy-version/src.main.java.org.emerjoin.arqiva.core.TopicFileComparator.java", "BodyUseAPI": [], "Fixed commit": "853663a205bfeccb6dea27eec428c3800d318582", "Url": "https://api.github.com/repos/Emerjoin/Arqiva-core", "Date": "2017-03-19T07:39:14Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fileFolder.exists())) fileFolder.mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2330/buggy-version/app.src.main.java.com.cjp.crosswalk.MainActivity.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "c440ed0ee24183711cde080e35bc6dff13393796", "Url": "https://api.github.com/repos/shark5/Crosswalk", "Date": "2017-05-22T05:57:09Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.exists())) { android.util.Log.d(com.cjp.crosswalk.MainActivity.TAG, \"file create success \"); file.createNewFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2330/buggy-version/app.src.main.java.com.cjp.crosswalk.MainActivity.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "c440ed0ee24183711cde080e35bc6dff13393796", "Url": "https://api.github.com/repos/shark5/Crosswalk", "Date": "2017-05-22T05:57:09Z"},
{"Line": "=>2025", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((entry.getKey()) != null) && ((entry.getValue()) != null)) { job.set(entry.getKey(), entry.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2346/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.exec.Utilities.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "org.apache.hadoop.mapred.JobConf.set(java.lang.String,java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()"], "Fixed commit": "a7e4f84eef83bfc1903e3e113a529123893e9159", "Url": "https://api.github.com/repos/terrancesnyder/hive", "Date": "2014-03-14T23:26:08Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((!(isTaskRoot())) && (getIntent().hasCategory(Intent.CATEGORY_LAUNCHER))) && ((getIntent().getAction()) != null)) && (getIntent().getAction().equals(Intent.ACTION_MAIN))) { finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8554/buggy-version/app.src.main.java.com.randomappsinc.studentpicker.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7f3638d0a352c2d8206645cbd7b120e0f25324c7", "Url": "https://api.github.com/repos/Gear61/Random-Name-Picker", "Date": "2016-05-19T05:49:16Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (type != null) { q.bindValue(\"entityType\", org.phenotips.entities.internal.AbstractPrimaryEntityGroup.getLocalSerializer().serialize(type)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7124/buggy-version/components.entities.api.src.main.java.org.phenotips.entities.internal.AbstractPrimaryEntityGroup.java", "BodyUseAPI": ["org.xwiki.query.Query.bindValue(java.lang.String,org.phenotips.entities.internal.AbstractPrimaryEntityGroup.getLocalSerializer().serialize(type))", "org.phenotips.entities.internal.AbstractPrimaryEntityGroup.getLocalSerializer().serialize(org.xwiki.model.reference.EntityReference)"], "Fixed commit": "e018d59f138a6225ee9f518842be95c4a082492e", "Url": "https://api.github.com/repos/a-gvo/phenotips", "Date": "2016-08-31T20:25:02Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["populateValueRequest.getFieldManager().getFieldValue(java.io.Serializable,populateValueRequest.getProperty().getName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (date != null) { oldValue = populateValueRequest.getDataFormatProvider().getSimpleDateFormatter().format(date); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3176/buggy-version/admin.broadleaf-open-admin-platform.src.main.java.org.broadleafcommerce.openadmin.server.service.persistence.module.provider.BasicFieldPersistenceProvider.java", "BodyUseAPI": ["populateValueRequest.getDataFormatProvider().getSimpleDateFormatter().format(java.util.Date)"], "Fixed commit": "09e5c0471de5149f7a4f7d0fc7bedd7f5cd39242", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2013-08-06T18:46:16Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(connected)) { handleError(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/198/buggy-version/src.rearth.networking.ComputerStats.java", "BodyUseAPI": [], "Fixed commit": "4f9afb52e734ff7d84ad7412ea9771fc46c7e352", "Url": "https://api.github.com/repos/Rearth/Raspi-HomeUI", "Date": "2016-10-05T12:28:15Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.app.FragmentManager.findFragmentByTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mFragment == null) { com.android.packitup.ItemsFragment itemsFragment = new com.android.packitup.ItemsFragment(); getSupportFragmentManager().beginTransaction().add(R.id.frame_main, itemsFragment, com.android.packitup.MainActivity.TAG_ITEMS_FRAGMENT).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5395/buggy-version/app.src.main.java.com.android.packitup.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "90ae01a546e2d167610d678c761a16cbb7e6f21c", "Url": "https://api.github.com/repos/enigma108/PackItUp", "Date": "2016-02-24T11:39:31Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.JsonObject.get(handler.getName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (settingsElement == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4711/buggy-version/src.main.java.org.monospark.actioncontrol.config.ConfigCategory.java", "BodyUseAPI": [], "Fixed commit": "baf3293905c4548d63cac71dd01dab305f60bc36", "Url": "https://api.github.com/repos/Monospark/ActionControl", "Date": "2015-12-18T13:08:34Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.webstorm.symbols.SymbolUtils.getSymbolFromPsiElement(com.intellij.psi.PsiElement)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (searchedSymbolText == null) { return com.google.common.collect.Lists.newArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4198/buggy-version/src.com.webstorm.symbols.angular.AngularSymbolReferencesSearch.java", "BodyUseAPI": [], "Fixed commit": "b23967410cea0b040b1e41cee3693aa2a212a21d", "Url": "https://api.github.com/repos/ziolko/intellij-javascript-symbols", "Date": "2016-04-18T20:17:41Z"},
{"Line": "=>924", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.smi.travel.datalayer.dao.impl.PaymentAirTicketImpl.getPaymentAirlineList(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((paymentAirlineList.size()) > 0) { paymentAirline.setPaymentAirlineListReportDataSource(new net.sf.jasperreports.engine.data.JRBeanCollectionDataSource(paymentAirlineList)); }else { paymentAirline.setPaymentAirlineListReportDataSource(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5778/buggy-version/src.java.com.smi.travel.datalayer.dao.impl.PaymentAirTicketImpl.java", "BodyUseAPI": ["com.smi.travel.datalayer.report.model.PaymentAirline.setPaymentAirlineListReportDataSource(net.sf.jasperreports.engine.data.JRBeanCollectionDataSource)"], "Fixed commit": "28d020d686d0c67d87ecb2b558acdf9458474dec", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-11-17T10:49:52Z"},
{"Line": "=>931", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.smi.travel.datalayer.dao.impl.PaymentAirTicketImpl.getPaymentAirlineRefund(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((paymentAirlineRefundList.size()) > 0) { paymentAirline.setPaymentAirlineRefundReportDataSource(new net.sf.jasperreports.engine.data.JRBeanCollectionDataSource(paymentAirlineRefundList)); }else { paymentAirline.setPaymentAirlineRefundReportDataSource(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5778/buggy-version/src.java.com.smi.travel.datalayer.dao.impl.PaymentAirTicketImpl.java", "BodyUseAPI": ["com.smi.travel.datalayer.report.model.PaymentAirline.setPaymentAirlineRefundReportDataSource(net.sf.jasperreports.engine.data.JRBeanCollectionDataSource)"], "Fixed commit": "28d020d686d0c67d87ecb2b558acdf9458474dec", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-11-17T10:49:52Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((playerToDisconnect.getLobby()) != null) lobbyManager.removeFromLobby(playerToDisconnect);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/983/buggy-version/src.Server.src.PlayerManager.java", "BodyUseAPI": ["LobbyManager.removeFromLobby(Player)"], "Fixed commit": "fa224a7999669570edb71572d43482ce54e0d72e", "Url": "https://api.github.com/repos/Trishun/PPZ_Project", "Date": "2017-05-29T20:57:31Z"},
{"Line": "=>845", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (sLogDir != null) { try { i5.las2peer.logging.L2pLogger.setGlobalLogDirectory(sLogDir); } catch (java.lang.Exception ex) { i5.las2peer.tools.L2pNodeLauncher.printWarning((((\"couldn't use '\" + sLogDir) + \"' as log directory.\") + ex)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2904/buggy-version/src.main.java.i5.las2peer.tools.L2pNodeLauncher.java", "BodyUseAPI": ["i5.las2peer.logging.L2pLogger.setGlobalLogDirectory(java.lang.String)", "i5.las2peer.tools.L2pNodeLauncher.printWarning(java.lang.String)"], "Fixed commit": "c7cc1b05fea074e59df7a5e352001e69e7c8123a", "Url": "https://api.github.com/repos/rwth-acis/las2peer", "Date": "2015-11-28T16:33:31Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((customer.getValue()) > (heap.peek().getValue())) { heap.poll(); heap.offer(customer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6820/buggy-version/src.heap.topNcustomers.TopNCustomers.java", "BodyUseAPI": ["java.util.PriorityQueue<java.util.Map.Entry<java.lang.String, java.lang.Integer>>.offer(java.util.Map.Entry<java.lang.String, java.lang.Integer>)", "java.util.PriorityQueue<java.util.Map.Entry<java.lang.String, java.lang.Integer>>.poll()"], "Fixed commit": "6c8a1f9693d1b5de89031b61069d3852efcdb4ed", "Url": "https://api.github.com/repos/asraf209/programming-interview-questions", "Date": "2016-07-23T21:16:02Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (specifiedPath != null) { paths.add(specifiedPath); }else { if (path != null) { paths.add(path); } for (java.lang.String p : java.lang.System.getProperty(\"java.library.path\").split(java.io.File.pathSeparator)) { if (p != null) { paths.add(p); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1309/buggy-version/java.src.main.java.org.wildfly.openssl.SSL.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "588e4c9495bd8ca3dd61f6359cddce63da85719a", "Url": "https://api.github.com/repos/wildfly/wildfly-openssl", "Date": "2017-02-23T02:11:46Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (searchString == null) type = \"default\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6807/buggy-version/src.at.fh.swenga.project.controller.ActivityController.java", "BodyUseAPI": [], "Fixed commit": "f42ea2158570772904ae3a5927e86c56b2de982a", "Url": "https://api.github.com/repos/hoxhagra14/fhj.swenga.project.meet", "Date": "2016-06-21T23:48:37Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connection) != null) { connection.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/82/buggy-version/src.main.java.dao.AbstractDAO.java", "BodyUseAPI": [], "Fixed commit": "a1e9bd1fce68579b81ca26a3ee5bc2c58ee95d6d", "Url": "https://api.github.com/repos/LogvinovIvan/carShop", "Date": "2016-03-31T11:43:06Z"},
{"Line": "=>678", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dci1901.isChecked()) { sI.put(\"dci20\", (dci2099.isChecked() ? \"99\" : dci2001.getText().toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2865/buggy-version/app.src.main.java.edu.aku.hassannaqvi.dss_census_mother.activities.SectionIActivity.java", "BodyUseAPI": [], "Fixed commit": "ada511e46b6c013d8e18df65921d08d762bcd15c", "Url": "https://api.github.com/repos/shznaqvi/DSS-Selected", "Date": "2017-10-27T06:01:35Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (url.isEmpty()) { view.setImageResource(R.drawable.ic_compass_white_50dp); }else { com.squareup.picasso.Picasso picasso = com.squareup.picasso.Picasso.with(org.tndata.android.compass.util.ImageLoader.mContext); picasso.setIndicatorsEnabled(BuildConfig.DEBUG); com.squareup.picasso.RequestCreator request = picasso.load(url); if (options.mUsePlaceholder) { request.placeholder(R.drawable.ic_compass_white_50dp); } request.into(view); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1830/buggy-version/src.main.java.org.tndata.android.compass.util.ImageLoader.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.load(java.lang.String)"], "Fixed commit": "17c85fbc940ee5e5f070ed02d5fbe44f5f476daf", "Url": "https://api.github.com/repos/tndatacommons/android-app", "Date": "2016-05-17T16:35:52Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((mainName == null) ^ (offName == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7397/buggy-version/src.main.java.com.skyisland.questmanager.player.skill.defaults.TrappingSkill.java", "BodyUseAPI": [], "Fixed commit": "8ff1d579b4012ebca773c2e66d4d6196c9180f3f", "Url": "https://api.github.com/repos/Dove-Bren/QuestManager", "Date": "2016-07-10T05:10:33Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((((inHand == null) || (offHand == null)) || ((inHand.getType()) != (e.getPlayer().getInventory().getItemInOffHand().getType()))) || ((inHand.getDurability()) != (e.getPlayer().getInventory().getItemInOffHand().getDurability()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7397/buggy-version/src.main.java.com.skyisland.questmanager.player.skill.defaults.TrappingSkill.java", "BodyUseAPI": [], "Fixed commit": "8ff1d579b4012ebca773c2e66d4d6196c9180f3f", "Url": "https://api.github.com/repos/Dove-Bren/QuestManager", "Date": "2016-07-10T05:10:33Z"},
{"Line": "=>469", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((offHand.hasItemMeta()) && (offHand.getItemMeta().hasDisplayName())) offName = offHand.getItemMeta().getDisplayName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7397/buggy-version/src.main.java.com.skyisland.questmanager.player.skill.defaults.TrappingSkill.java", "BodyUseAPI": ["offHand.getItemMeta().getDisplayName()", "org.bukkit.inventory.ItemStack.getItemMeta()"], "Fixed commit": "8ff1d579b4012ebca773c2e66d4d6196c9180f3f", "Url": "https://api.github.com/repos/Dove-Bren/QuestManager", "Date": "2016-07-10T05:10:33Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inHand.hasItemMeta()) && (inHand.getItemMeta().hasDisplayName())) mainName = inHand.getItemMeta().getDisplayName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7397/buggy-version/src.main.java.com.skyisland.questmanager.player.skill.defaults.TrappingSkill.java", "BodyUseAPI": ["inHand.getItemMeta().getDisplayName()", "org.bukkit.inventory.ItemStack.getItemMeta()"], "Fixed commit": "8ff1d579b4012ebca773c2e66d4d6196c9180f3f", "Url": "https://api.github.com/repos/Dove-Bren/QuestManager", "Date": "2016-07-10T05:10:33Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(cuPath.startsWith(\"/LambdaProjects/\"))) { japa.parser.ast.CompilationUnit cu = classEntity.getCu(); java.lang.String packagePath = cu.getPackage().getName().toString(); packagePath = packagePath.replace('.', '/'); java.lang.String absolutePath = (path + packagePath) + \"/\"; java.io.File file = new java.io.File(absolutePath); if (!(file.exists())) { file.mkdirs(); } ch.zhaw.file_operations.UtilityClass.writeCuToFile((absolutePath + (classEntity.getPath().toFile().getName())), cu); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2599/buggy-version/src.main.java.ch.zhaw.file_operations.SupportClassTreeCreator.java", "BodyUseAPI": [], "Fixed commit": "2c7e6b5cb576516d81d6f61e0928666b81065998", "Url": "https://api.github.com/repos/serviceprototypinglab/podilizer", "Date": "2017-01-23T14:34:27Z"},
{"Line": "=>914", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((head.level) != (concurrentskip.ConcurrentSkipListMap.TOP)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4353/buggy-version/SkipTrieProject.ConcurrentSkipListMap.java", "BodyUseAPI": [], "Fixed commit": "d6cdc35e12f80ab51464a127527a55d98ce09750", "Url": "https://api.github.com/repos/JoeLeavitt/SkipTrie", "Date": "2017-04-10T20:42:18Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((branchFilterType) == null) { branchFilterType = (org.apache.commons.lang.StringUtils.isNotBlank(branchFilterName)) ? com.dabsquared.gitlabjenkins.trigger.filter.BranchFilterType.valueOf(branchFilterName) : com.dabsquared.gitlabjenkins.trigger.filter.BranchFilterType.All; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/808/buggy-version/src.main.java.com.dabsquared.gitlabjenkins.GitLabPushTrigger.java", "BodyUseAPI": [], "Fixed commit": "8eb7adb04caec27373f439266757248f986b7b53", "Url": "https://api.github.com/repos/jenkinsci/gitlab-plugin", "Date": "2016-07-20T20:38:20Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (viewModels == null) { add(null, viewType); }else { addAll(viewModels, viewType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/87/buggy-version/adapter.src.main.java.com.github.markzhai.recyclerview.MultiTypeAdapter.java", "BodyUseAPI": ["com.github.markzhai.recyclerview.MultiTypeAdapter.addAll(java.util.List,int)"], "Fixed commit": "355dd4b04d781240a5fb40ef6cb11d95f84b28fa", "Url": "https://api.github.com/repos/markzhai/DataBindingAdapter", "Date": "2016-10-28T14:25:51Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((javafx.scene.control.TextField) (field.control)).getText().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((numbers.length) < 2) { to = from; }else { to = java.lang.Double.parseDouble(numbers[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7108/buggy-version/src.main.java.com.bunjlabs.classificator.editor.ClassEditorController.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "eb076aecb54aaa5f24b1cd3ccb0d9ba9cb602db4", "Url": "https://api.github.com/repos/Show-vars/Classificator", "Date": "2016-04-28T13:10:13Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasChat) { server.addContext(\"/chat\", new webserver.chat.ChatHandler()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8307/buggy-version/src.radio3.Radio3.java", "BodyUseAPI": [], "Fixed commit": "8f181d4c604607acec79ec39bef51b2d6e42a0b0", "Url": "https://api.github.com/repos/krisraich/WebRadio", "Date": "2017-03-09T10:29:00Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (swatch == null) return this.mainSwatch; else return swatch;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8251/buggy-version/app.src.main.java.go.xzillion.com.xzilliongo.common.MyAppTheme.java", "BodyUseAPI": [], "Fixed commit": "92e023129f1e2a7a0ecb63209c0e153f5b3be689", "Url": "https://api.github.com/repos/Xzillion/XzillionGo", "Date": "2016-10-24T19:12:55Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (request != null) { suite.setExtraInfo(request.getParameter(\"extraInfo\")); suite.setInitJS(request.getParameter(\"initJS\")); setReporters(suite, request); setIssueCreators(suite, request); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3732/buggy-version/sahi-core.src.main.java.net.sf.sahi.command.Suite.java", "BodyUseAPI": ["net.sf.sahi.test.SahiTestSuite.setInitJS(request.getParameter(\"initJS\"))", "net.sf.sahi.command.Suite.setReporters(net.sf.sahi.test.SahiTestSuite,net.sf.sahi.request.HttpRequest)", "net.sf.sahi.request.HttpRequest.getParameter(java.lang.String)", "net.sf.sahi.command.Suite.setIssueCreators(net.sf.sahi.test.SahiTestSuite,net.sf.sahi.request.HttpRequest)", "net.sf.sahi.test.SahiTestSuite.setExtraInfo(request.getParameter(\"extraInfo\"))", "net.sf.sahi.request.HttpRequest.getParameter(java.lang.String)"], "Fixed commit": "6edb4a0b76ffabd5e9ca16346fa955faa592ca76", "Url": "https://api.github.com/repos/headissue/Sahi", "Date": "2014-04-25T12:26:54Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((destinationMarker) != null) { destinationMarker.remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3782/buggy-version/app.src.main.java.com.sabututexp.uberapp.activities.CustomerMapActivity.java", "BodyUseAPI": [], "Fixed commit": "932c82db9421b55455dc6d4e4cd969ee41c162c3", "Url": "https://api.github.com/repos/Sabu0050/UberApp", "Date": "2017-11-01T19:00:12Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAction) != (com.cordova.plugin.android.fingerprintauth.FingerprintAuth.CordovaAction.AVAILABILITY)) { if (!(arg_object.has(\"clientId\"))) { com.cordova.plugin.android.fingerprintauth.FingerprintAuth.mPluginResult = new org.apache.cordova.PluginResult(PluginResult.Status.ERROR); com.cordova.plugin.android.fingerprintauth.FingerprintAuth.mCallbackContext.error(\"Missing required parameters.\"); com.cordova.plugin.android.fingerprintauth.FingerprintAuth.mCallbackContext.sendPluginResult(com.cordova.plugin.android.fingerprintauth.FingerprintAuth.mPluginResult); return true; } com.cordova.plugin.android.fingerprintauth.FingerprintAuth.mClientId = arg_object.getString(\"clientId\"); if (arg_object.has(\"username\")) { com.cordova.plugin.android.fingerprintauth.FingerprintAuth.mUsername = arg_object.getString(\"username\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8163/buggy-version/src.android.FingerprintAuth.java", "BodyUseAPI": [], "Fixed commit": "2b34c561bfbcdd4a9de66b0a256bb9253acdc127", "Url": "https://api.github.com/repos/mjwheatley/cordova-plugin-android-fingerprint-auth", "Date": "2016-12-26T01:08:47Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JList.getSelectedValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (selectedValue != null) { secondDataModel.removeElement(selectedValue); firstDataModel.addElement(selectedValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1775/buggy-version/src.lists.JListHelper.java", "BodyUseAPI": ["javax.swing.DefaultListModel.removeElement(java.lang.Object)", "javax.swing.DefaultListModel.addElement(java.lang.Object)"], "Fixed commit": "874c3e4a44e8c11744c04b264a86f4a27a1a76ab", "Url": "https://api.github.com/repos/SonOfC/TTLF_Textfields-Tables-Lists-Filters", "Date": "2014-10-17T03:49:43Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JList.getSelectedValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (selectedValue != null) { firstDataModel.removeElement(selectedValue); secondDataModel.addElement(selectedValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1775/buggy-version/src.lists.JListHelper.java", "BodyUseAPI": ["javax.swing.DefaultListModel.removeElement(java.lang.Object)", "javax.swing.DefaultListModel.addElement(java.lang.Object)"], "Fixed commit": "874c3e4a44e8c11744c04b264a86f4a27a1a76ab", "Url": "https://api.github.com/repos/SonOfC/TTLF_Textfields-Tables-Lists-Filters", "Date": "2014-10-17T03:49:43Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.redhat.ceylon.compiler.java.codegen.Decl.isLocal(declarationModel)) { prevSyntheticClassBody = expressionGen().withinSyntheticClassBody(true); }else { prevSyntheticClassBody = expressionGen().isWithinSyntheticClassBody(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7548/buggy-version/src.com.redhat.ceylon.compiler.java.codegen.CeylonTransformer.java", "BodyUseAPI": [], "Fixed commit": "d569f0cef070931a803e27cd0c96f1e6cf96c356", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2015-03-23T12:17:41Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPropertyList().size()) == 1) { org.sola.clients.beans.application.ApplicationPropertyBean onlyOneProperty = getPropertyList().get(0); selectedProperty = onlyOneProperty; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2190/buggy-version/beans.src.main.java.org.sola.clients.beans.application.ApplicationBean.java", "BodyUseAPI": [], "Fixed commit": "9d4876dc93b3064e2622b2fa15ab2dfa15810b0a", "Url": "https://api.github.com/repos/SOLA-FAO/clients", "Date": "2012-08-20T12:58:53Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(in.hasNext())) { throw new aya.exceptions.SyntaxError((\"Expected escape character: \" + in)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8716/buggy-version/src.aya.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "c407cf7ff1f7844de4a5c18330105b0eafbc696f", "Url": "https://api.github.com/repos/nick-paul/aya-lang", "Date": "2017-05-11T18:17:42Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<loop.Context>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(context.thisFunction.patternMatching)) && ((context.thisFunction.children().size()) > 1)) { for (int i = 1; i < (context.thisFunction.children().size()); i++) { methodVisitor.visitInsn(loop.POP); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7614/buggy-version/src.loop.AsmCodeEmitter.java", "BodyUseAPI": ["context.thisFunction.children().size()", "context.thisFunction.children()"], "Fixed commit": "6557a31228d5a4aa332ca89a5a7d0c9d95fd364c", "Url": "https://api.github.com/repos/yohanbeschi/loop", "Date": "2012-08-19T06:47:59Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isMuted()) { onMuteTrackClicked(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/836/buggy-version/app.src.main.java.com.spazomatic.nabsta.audio.TrackMessenger.java", "BodyUseAPI": [], "Fixed commit": "f54882567391a8ef0c2a70d28ea6e10007ff1b11", "Url": "https://api.github.com/repos/DumDumDesigns/Nabsta", "Date": "2015-06-07T02:22:15Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id == (R.id.bColorChange)) npb.setLabelText(\"# Colors\"); else if (id == (R.id.bWidthChange)) npb.setLabelText(\"Width\"); else if (id == (R.id.bHeightChange)) npb.setLabelText(\"Height\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4612/buggy-version/com.picogram.awesomeness.src.com.picogram.awesomeness.CreateFragment.java", "BodyUseAPI": [], "Fixed commit": "4d6a0e355cad59ff75de5b7eb2c0660a6000427f", "Url": "https://api.github.com/repos/justinmwarner/Picogram", "Date": "2014-04-16T15:19:24Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sagebionetworks.repo.manager.AccessRequirementUtil.unmetDownloadAccessRequirementIdsForEntity(org.sagebionetworks.repo.model.UserInfo,java.lang.String,java.util.List<java.lang.String>,org.sagebionetworks.repo.model.NodeDAO,org.sagebionetworks.repo.model.AccessRequirementDAO)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (accessRequirementIds.isEmpty()) { return AuthorizationManagerUtil.AUTHORIZED; }else { return org.sagebionetworks.repo.manager.AuthorizationManagerUtil.accessDenied(\"There are unmet access requirements that must be met to read content in the requested container.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3726/buggy-version/services.repository-managers.src.main.java.org.sagebionetworks.repo.manager.EntityPermissionsManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "8bd7a17480788577201a694994e2a15ed36dd621", "Url": "https://api.github.com/repos/Sage-Bionetworks/Synapse-Repository-Services", "Date": "2014-10-29T01:16:04Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Display.impl.isScrollWheeling())) { fireActionEvent(x, y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5144/buggy-version/CodenameOne.src.com.codename1.ui.Button.java", "BodyUseAPI": [], "Fixed commit": "6c095298127c2cc4f3fba35675e36bf645b44b59", "Url": "https://api.github.com/repos/saeder/CodenameOne", "Date": "2017-01-12T17:42:51Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parameterValue.replace(\" \", \"+\").equalsIgnoreCase(value)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7876/buggy-version/hdiv-core.src.main.java.org.hdiv.util.HDIVUtil.java", "BodyUseAPI": [], "Fixed commit": "296899e495e332e842d73dc090e72e306321b57d", "Url": "https://api.github.com/repos/hdiv/hdiv", "Date": "2017-11-13T16:37:59Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.benjp.services.DBCursor.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((doc.get(\"fullname\")) != null) fullname = doc.get(\"fullname\").toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4066/buggy-version/server.src.main.java.org.benjp.services.UserService.java", "BodyUseAPI": ["org.benjp.services.DBObject.get(java.lang.String)", "doc.get(\"fullname\").toString()"], "Fixed commit": "1ee60c82fa55931f3c2d606b242b3d6de2d4ad1c", "Url": "https://api.github.com/repos/benjp/chat", "Date": "2012-11-21T18:56:26Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEmpty())) { if ((currentPos) > (com.coderave.raveplayer.PlayList.NO_POSITION)) { return playlist.get(currentPos); } setCurrent(0); return playlist.get(currentPos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4173/buggy-version/app.src.main.java.com.coderave.raveplayer.PlayList.java", "BodyUseAPI": [], "Fixed commit": "5f4a7a97a05668f68df4c933c6e1f14b51dd8dac", "Url": "https://api.github.com/repos/owenlilly/musicplayer", "Date": "2016-05-15T05:32:08Z"},
{"Line": "=>498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.currentTimeMillis()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(ev.endsBefore(curTime))) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4990/buggy-version/Wearable.src.main.java.de.wildwebmaster.avo.AvoWatchFaceService.java", "BodyUseAPI": [], "Fixed commit": "bf354790d6d63470e53dd5bed47cbbe4b076552c", "Url": "https://api.github.com/repos/vahldiek/AvoWatchFaces", "Date": "2014-12-24T05:49:11Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((incomes) == 0) && ((expenses) == 0)) { setChartNoDataMessage(); }else { drawChart(); doBalance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3088/buggy-version/app.src.main.java.es.upsa.mimo.android.diexpenses.fragments.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "4e36a6fe04df9b530d978128a063939dff5374c4", "Url": "https://api.github.com/repos/sepulvedablanco/diexpenses-android", "Date": "2016-05-01T15:12:05Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bounswegroup3.db.UserDAO.getUserByEmail(credentials.getEmail())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((failedLoginDAO.attemptsInLastFiveMinutes(user.getId())) >= 5) { failedLoginDAO.addAttempt(user.getId()); throw new bounswegroup3.auth.UnauthorizedException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2515/buggy-version/backend.src.main.java.bounswegroup3.resource.SessionResource.java", "BodyUseAPI": ["bounswegroup3.model.User.getId()", "bounswegroup3.db.FailedLoginDAO.addAttempt(user.getId())"], "Fixed commit": "acced4684c54e1df41561af5cf6aed069b2cc922", "Url": "https://api.github.com/repos/bounswe/bounswe2016group3", "Date": "2016-10-28T08:31:05Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(use64Bit)) { for (int i = 0; i < (markers.length); i++) { markers[i] = (markers[i]) & 4294967295L; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4598/buggy-version/components.formats-gpl.src.loci.formats.in.NDPIReader.java", "BodyUseAPI": [], "Fixed commit": "0dc753717547b37a9cf5886a7be0975fb08874f3", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-05-21T10:12:20Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((conMgr) != null) { final android.net.NetworkInfo netInfo = conMgr.getNetworkInfo(ConnectivityManager.TYPE_MOBILE); if (netInfo != null) { currentNetworkSubType = netInfo.getSubtype(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/239/buggy-version/native.SalesforceSDK.src.com.salesforce.androidsdk.auth.HttpAccess.java", "BodyUseAPI": [], "Fixed commit": "c621ff81008fcd8d3c33bde7777be22f7ec8ec74", "Url": "https://api.github.com/repos/forcedotcom/SalesforceMobileSDK-Android", "Date": "2012-07-05T18:33:18Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isDoubleSlab)) { for (int i = 0; i < (getMetaCount()); ++i) { list.add(new net.minecraft.item.ItemStack(item, 1, damageDropped(i))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6585/buggy-version/src.main.java.org.pfaa.geologica.block.SlabBlock.java", "BodyUseAPI": [], "Fixed commit": "0847cf855bcd1ba48670de8b2a1aa02e37726cec", "Url": "https://api.github.com/repos/lawremi/PerFabricaAdAstra", "Date": "2014-05-11T01:27:12Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (ai != null) { ai.destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/491/buggy-version/store.src.main.java.org.gephi.graph.store.IndexImpl.java", "BodyUseAPI": ["org.gephi.graph.store.IndexImpl.AbstractIndex.destroy()"], "Fixed commit": "ce3194e2c41b5b1fc758e9d6ac6f54c925265cd2", "Url": "https://api.github.com/repos/gephi/graphstore", "Date": "2015-08-31T15:12:54Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ok) _stream_in[i].time = ((double) (_readPos[i])) / (_stream_in[i].sr);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8592/buggy-version/libssj.src.main.java.hcm.ssj.core.Transformer.java", "BodyUseAPI": [], "Fixed commit": "e21a7c6fed3354fac641e8eec669f40f288238ff", "Url": "https://api.github.com/repos/hcmlab/ssj", "Date": "2017-01-20T14:56:43Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ok) _stream_in[i].time = ((double) (_readPos[i])) / (_stream_in[i].sr);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8592/buggy-version/libssj.src.main.java.hcm.ssj.core.Consumer.java", "BodyUseAPI": [], "Fixed commit": "e21a7c6fed3354fac641e8eec669f40f288238ff", "Url": "https://api.github.com/repos/hcmlab/ssj", "Date": "2017-01-20T14:56:43Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isConnected()) { producerCallback.onSessionStart(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7179/buggy-version/src.main.java.com.youku.cloud.taskmanager.client.ProducerClient.java", "BodyUseAPI": [], "Fixed commit": "266b05aa7c415aba15cd4e105253cb5b7a162b46", "Url": "https://api.github.com/repos/liulietao/TaskManager", "Date": "2016-08-31T11:00:30Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isConnected()) { isRegistered = true; consumerCallback.onSessionStart(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7179/buggy-version/src.main.java.com.youku.cloud.taskmanager.client.ConsumerClient.java", "BodyUseAPI": [], "Fixed commit": "266b05aa7c415aba15cd4e105253cb5b7a162b46", "Url": "https://api.github.com/repos/liulietao/TaskManager", "Date": "2016-08-31T11:00:30Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isConnected()) { managerCallback.onSessionStart(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7179/buggy-version/src.main.java.com.youku.cloud.taskmanager.client.ManagerClient.java", "BodyUseAPI": [], "Fixed commit": "266b05aa7c415aba15cd4e105253cb5b7a162b46", "Url": "https://api.github.com/repos/liulietao/TaskManager", "Date": "2016-08-31T11:00:30Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mesh.getTriangleCount(lod)) < 0) || ((mesh.getVertexCount()) < 0)) throw new java.lang.IllegalStateException(\"Invalid triangle or vertex count on this mesh. Call .updateCounts() before rendering\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/707/buggy-version/jme3-core.src.main.java.com.jme3.renderer.Statistics.java", "BodyUseAPI": [], "Fixed commit": "7e30e844b6cde56f80468fa534746e3d039e6176", "Url": "https://api.github.com/repos/MeFisto94/jmonkeyengine", "Date": "2015-09-06T13:48:22Z"},
{"Line": "=>722", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bufSize == 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/707/buggy-version/jme3-core.src.main.java.com.jme3.scene.Mesh.java", "BodyUseAPI": [], "Fixed commit": "7e30e844b6cde56f80468fa534746e3d039e6176", "Url": "https://api.github.com/repos/MeFisto94/jmonkeyengine", "Date": "2015-09-06T13:48:22Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.eclipse.scout.sdk.util.type.TypeUtility.getSuperTypeHierarchy(sourceType).contains(org.eclipse.scout.sdk.util.type.TypeUtility.getType(IRuntimeClasses.IButton))) { return \"execClickAction\"; }else { return \"execAction\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4738/buggy-version/org.eclipse.scout.sdk.saml.importer.src.org.eclipse.scout.sdk.saml.importer.operation.logic.LogicSnippetInfoFactory.java", "BodyUseAPI": [], "Fixed commit": "044af513b6246e26e4c7b6401b0833632d35c86c", "Url": "https://api.github.com/repos/BSI-Business-Systems-Integration-AG/org.eclipse.scout.xtext", "Date": "2013-04-09T15:25:34Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((n.e.accept(this)) instanceof visitor.BooleanType)) { error.complain(((\"In \" + (st)) + \" while statement requires expression to return boolean\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6565/buggy-version/src.visitor.TypeBindVisitor.java", "BodyUseAPI": [], "Fixed commit": "1e2dc128ce3254b77ec04f2566e52d5f45fbdc53", "Url": "https://api.github.com/repos/torandi/komp12", "Date": "2012-04-27T00:22:59Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((n.e.accept(this)) instanceof visitor.BooleanType)) { error.complain(((\"In \" + (st)) + \" if statement requires expression to return boolean\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6565/buggy-version/src.visitor.TypeBindVisitor.java", "BodyUseAPI": [], "Fixed commit": "1e2dc128ce3254b77ec04f2566e52d5f45fbdc53", "Url": "https://api.github.com/repos/torandi/komp12", "Date": "2012-04-27T00:22:59Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((str.time) != null) { data.put(str.time.getTime(), str); if ((str.coords.alt_valid) && (str.checksum_valid)) ascentRate.AddData(str.time.getTime(), str.coords.altitude); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2963/buggy-version/rtty_dev.src.ukhas.Payload.java", "BodyUseAPI": ["str.time.getTime()", "java.util.TreeMap<java.lang.Long, ukhas.Telemetry_string>.put(str.time.getTime(),ukhas.Telemetry_string)", "ukhas.AscentRate.AddData(str.time.getTime(),str.coords.altitude)", "str.time.getTime()"], "Fixed commit": "8d329953e343e63d95be95a4154d3463034b853d", "Url": "https://api.github.com/repos/mattbrejza/rtty_modem", "Date": "2013-01-22T12:30:42Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((str.time) != null) data.put(java.lang.Long.valueOf(str.time.getTime()), str);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2963/buggy-version/rtty_dev.src.ukhas.Payload.java", "BodyUseAPI": [], "Fixed commit": "8d329953e343e63d95be95a4154d3463034b853d", "Url": "https://api.github.com/repos/mattbrejza/rtty_modem", "Date": "2013-01-22T12:30:42Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (config.getDetectGPUs()) { com.sheepit.client.hardware.gpu.GPU.generate(); }else { new java.util.LinkedList<com.sheepit.client.hardware.gpu.GPUDevice>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5200/buggy-version/src.com.sheepit.client.hardware.gpu.GPU.java", "BodyUseAPI": [], "Fixed commit": "410fbd1c472894e8d78c919b1d2518f8950221a0", "Url": "https://api.github.com/repos/laurent-clouet/sheepit-client", "Date": "2017-09-29T09:20:53Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.hsr.servicecutter.model.repository.UserSystemRepository.findOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result == null) { throw new ch.hsr.servicecutter.rest.ResourceNotFoundException((\"System with id \" + id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3227/buggy-version/Engine.src.main.java.ch.hsr.servicecutter.EngineService.java", "BodyUseAPI": [], "Fixed commit": "37726c4cbd829955995128c86e46e9ba49c855d2", "Url": "https://api.github.com/repos/ServiceCutter/ServiceCutter", "Date": "2016-04-05T19:26:23Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { com.udevel.popularmovies.fragment.DetailFragment detailFragment = ((com.udevel.popularmovies.fragment.DetailFragment) (getSupportFragmentManager().findFragmentById(R.id.fragment_detail_holder))); detailFragment.setMovie(movieId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8508/buggy-version/PopularMovies.app.src.main.java.com.udevel.popularmovies.activity.DetailActivity.java", "BodyUseAPI": [], "Fixed commit": "1e05d03de8a156821881c8e7069ccad863c41d83", "Url": "https://api.github.com/repos/uDevel/Udacity-Project-1-PopularMovies", "Date": "2015-09-10T04:41:18Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connection) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2600/buggy-version/hexa.core.src.main.java.fr.lteconsulting.hexa.server.qpath.Database.java", "BodyUseAPI": [], "Fixed commit": "904d3f2a35438f7b4d725ef220cc18fb38fda5d7", "Url": "https://api.github.com/repos/ltearno/hexa.tools", "Date": "2014-08-31T07:13:00Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (configuration.getAllowParallellization()) { java.lang.System.out.println(\"Doing search with parallellization\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5819/buggy-version/src.main.java.index.FuzzySearchIndex.java", "BodyUseAPI": [], "Fixed commit": "27fd986943310925e3da2793de631bca94663f96", "Url": "https://api.github.com/repos/estenhl/graph_genome_java", "Date": "2016-04-09T23:00:16Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((jsonObject.get(\"multimedia\")) instanceof org.json.JSONArray) { org.json.JSONArray mediaArray = jsonObject.getJSONArray(\"multimedia\"); for (int i = 0; i < (mediaArray.length()); i++) { org.json.JSONObject mediaObject = mediaArray.getJSONObject(i); news.agoda.com.sample.MediaEntity mediaEntity = new news.agoda.com.sample.MediaEntity(mediaObject); mediaEntityList.add(mediaEntity); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5114/buggy-version/app.src.main.java.news.agoda.com.sample.NewsEntity.java", "BodyUseAPI": [], "Fixed commit": "7b74a40fa368337e3c51804c16b8dd2187a2bc00", "Url": "https://api.github.com/repos/jhoon/challenge", "Date": "2015-12-12T16:47:08Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(com.huetoyou.chatexchange.ui.activity.main.MainActivity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (huePrefs.getBoolean(\"FLAG_restartMain\", false)) { super.onCreate(null); huePrefs.edit().putBoolean(\"FLAG_restartMain\", false).apply(); }else { super.onCreate(savedInstanceState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1952/buggy-version/app.src.main.java.com.huetoyou.chatexchange.ui.activity.main.MainActivity.java", "BodyUseAPI": ["huePrefs.edit().putBoolean(java.lang.String,boolean)", "huePrefs.edit().putBoolean(\"FLAG_restartMain\", false).apply()", "android.content.SharedPreferences.edit()"], "Fixed commit": "8b3cdb710274180e1d6d325d8cacacf66993508f", "Url": "https://api.github.com/repos/HueToYou/ChatExchange-old", "Date": "2017-07-17T12:37:36Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.games.leaderboard.Leaderboards.LoadPlayerScoreResult.getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((status.getStatusCode()) == (com.google.android.gms.games.GamesStatusCodes.STATUS_OK)) { com.google.android.gms.games.leaderboard.LeaderboardScore score = result.getScore(); int scoreValue = ((int) (score.getRawScore())); android.util.Log.d(\"godot\", (\"GPGS: Leaderboard values is \" + scoreValue)); org.godotengine.godot.GodotLib.calldeferred(instance_id, \"_on_leaderboard_get_value\", new java.lang.Object[]{ scoreValue }); }else if ((status.getStatusCode()) == (com.google.android.gms.games.GamesStatusCodes.STATUS_CLIENT_RECONNECT_REQUIRED)) { android.util.Log.d(\"godot\", \"GPGS: Leaderboard reconnecting required\"); client.reconnect(); }else { android.util.Log.d(\"godot\", (\"GPGS: Leaderboard connection error -> \" + (status.getStatusMessage()))); org.godotengine.godot.GodotLib.calldeferred(instance_id, \"_on_leaderboard_get_value_error\", new java.lang.Object[]{ }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6829/buggy-version/gpgs.android.GodotGooglePlayGameServices.java", "BodyUseAPI": ["com.google.android.gms.common.api.Status.getStatusMessage()", "com.google.android.gms.common.api.Status.getStatusCode()", "android.util.Log.d(java.lang.String,(\"GPGS: Leaderboard connection error -> \" + (status.getStatusMessage())))"], "Fixed commit": "5a8f1e5f16f8680eae028ca5fec78477e160057e", "Url": "https://api.github.com/repos/kloder-games/godot-gpgs", "Date": "2016-06-28T06:31:56Z"},
{"Line": "=>4189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ut.dph.dao.transactionOutDAO.getTransactionDetails(transactionInDetails.gettransactionTargetId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (origReferralTransaction != null) { com.ut.dph.model.batchUploads origbatchUploadDetails = transactionInDAO.getBatchDetails(origReferralTransaction.getbatchUploadId()); referralDate = origbatchUploadDetails.getdateSubmitted().toString(); eRefId = origbatchUploadDetails.getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4115/buggy-version/src.main.java.com.ut.dph.service.impl.transactionInManagerImpl.java", "BodyUseAPI": ["com.ut.dph.dao.transactionInDAO.getBatchDetails(origReferralTransaction.getbatchUploadId())", "com.ut.dph.model.transactionTarget.getbatchUploadId()"], "Fixed commit": "9dfe562eea53647f61db224f8ab530e8d06c7914", "Url": "https://api.github.com/repos/thenhkid/universalTranslator", "Date": "2017-06-21T21:14:38Z"},
{"Line": "=>4719", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sandboxEnvironmentObject.isEmpty())) { environmentObject.put(APIConstants.GATEWAY_ENV_TYPE_SANDBOX, sandboxEnvironmentObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8720/buggy-version/components.apimgt.org.wso2.carbon.apimgt.hostobjects.src.main.java.org.wso2.carbon.apimgt.hostobjects.APIStoreHostObject.java", "BodyUseAPI": ["org.json.simple.JSONObject.put(APIConstants.GATEWAY_ENV_TYPE_SANDBOX,org.json.simple.JSONObject)"], "Fixed commit": "5fde6c956d71059ce53dac9aa748daf3091f564c", "Url": "https://api.github.com/repos/lakmali/carbon-apimgt", "Date": "2015-05-28T18:10:36Z"},
{"Line": "=>4716", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(productionEnvironmentObject.isEmpty())) { environmentObject.put(APIConstants.GATEWAY_ENV_TYPE_PRODUCTION, productionEnvironmentObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8720/buggy-version/components.apimgt.org.wso2.carbon.apimgt.hostobjects.src.main.java.org.wso2.carbon.apimgt.hostobjects.APIStoreHostObject.java", "BodyUseAPI": ["org.json.simple.JSONObject.put(APIConstants.GATEWAY_ENV_TYPE_PRODUCTION,org.json.simple.JSONObject)"], "Fixed commit": "5fde6c956d71059ce53dac9aa748daf3091f564c", "Url": "https://api.github.com/repos/lakmali/carbon-apimgt", "Date": "2015-05-28T18:10:36Z"},
{"Line": "=>4722", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(hybridEnvironmentObject.isEmpty())) { environmentObject.put(APIConstants.GATEWAY_ENV_TYPE_HYBRID, hybridEnvironmentObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8720/buggy-version/components.apimgt.org.wso2.carbon.apimgt.hostobjects.src.main.java.org.wso2.carbon.apimgt.hostobjects.APIStoreHostObject.java", "BodyUseAPI": ["org.json.simple.JSONObject.put(APIConstants.GATEWAY_ENV_TYPE_HYBRID,org.json.simple.JSONObject)"], "Fixed commit": "5fde6c956d71059ce53dac9aa748daf3091f564c", "Url": "https://api.github.com/repos/lakmali/carbon-apimgt", "Date": "2015-05-28T18:10:36Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (world.isRemote) { GraveStone.tileentity.TileEntityGSMemorial entity = ((GraveStone.tileentity.TileEntityGSMemorial) (world.getBlockTileEntity(x, y, z))); if (entity != null) { java.lang.String deathText = entity.getDeathText(); if (!(deathText.equals(\"\"))) { entityPlayer.sendChatToPlayer(deathText); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3444/buggy-version/block.BlockGSMemorial.java", "BodyUseAPI": ["net.minecraft.world.World.getBlockTileEntity(int,int,int)"], "Fixed commit": "4a2875675d312cad66ceaa176f49c7a3975faa8d", "Url": "https://api.github.com/repos/NightKosh/GraveStone-mod", "Date": "2013-05-05T12:28:20Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == (org.theeuropeanlibrary.model.common.qualifier.Language.HEB)) return \"he\"; else return locale.getLanguage();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2075/buggy-version/model.common.src.main.java.org.theeuropeanlibrary.model.common.qualifier.Language.java", "BodyUseAPI": [], "Fixed commit": "311553dc5457e2f973ae1f05ea69df0c9d9a5bab", "Url": "https://api.github.com/repos/europeana/uim-core", "Date": "2014-05-12T10:56:34Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.wildfly.security.manager.WildFlySecurityManager.isChecking()) { return java.security.AccessController.doPrivileged(new java.security.PrivilegedAction<javax.ejb.EJBObject>() { @java.lang.Override public javax.ejb.EJBObject run() { return org.jboss.ejb.client.EJBClient.createProxy(new org.jboss.ejb.client.StatefulEJBLocator<javax.ejb.EJBObject>(((java.lang.Class<javax.ejb.EJBObject>) (view.getViewClass())), locatorAppName, getModuleName(), getComponentName(), getDistinctName(), getSessionIdOf(ctx), getCache().getStrictAffinity(), org.wildfly.security.manager.WildFlySecurityManager.getPropertyPrivileged(ServerEnvironment.NODE_NAME, null))); } }); }else { return org.jboss.ejb.client.EJBClient.createProxy(new org.jboss.ejb.client.StatefulEJBLocator<javax.ejb.EJBObject>(((java.lang.Class<javax.ejb.EJBObject>) (view.getViewClass())), locatorAppName, getModuleName(), getComponentName(), getDistinctName(), getSessionIdOf(ctx), this.getCache().getStrictAffinity(), org.wildfly.security.manager.WildFlySecurityManager.getPropertyPrivileged(ServerEnvironment.NODE_NAME, null))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4960/buggy-version/ejb3.src.main.java.org.jboss.as.ejb3.component.stateful.StatefulSessionComponent.java", "BodyUseAPI": [], "Fixed commit": "3fa4ae76e8f9071d523faf0b9e449bdc51346340", "Url": "https://api.github.com/repos/johnaohara/wildfly", "Date": "2014-07-11T21:14:00Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSameYear()) { if ((start.isFirstDayOfYear()) && (end.isLastDayOfYear())) return java.lang.String.valueOf(start.getYear()); if ((start.equals(start.getFirstDateOfMonth())) && (end.equals(end.getLastDateOfMonth()))) { if ((start.getMonth()) == (end.getMonth())) return start.formatLongMonthYear(); return ((start.formatLongMonthYear()) + \" - \") + (end.formatLongMonthYear()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2438/buggy-version/src.main.java.ilarkesto.core.time.DateRange.java", "BodyUseAPI": [], "Fixed commit": "a9830e4494d37c55d3a78f1b0a0238de68f61ce3", "Url": "https://api.github.com/repos/Kunagi/ilarkesto", "Date": "2014-11-04T14:06:02Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cpw.mods.fml.common.FMLCommonHandler.instance().getSide()) == (cpw.mods.fml.relauncher.Side.CLIENT)) { TickrateChanger.INSTANCE.updateClientTickrate(ticksPerSecond); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/550/buggy-version/src.main.java.me.guichaguri.tickratechanger.api.TickrateAPI.java", "BodyUseAPI": [], "Fixed commit": "15a7417c630b1167456216be2f6aa050156459e8", "Url": "https://api.github.com/repos/Guichaguri/TickrateChanger", "Date": "2015-07-27T20:47:55Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sound.isPlaying()) { sound.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7549/buggy-version/app.src.main.java.com.example.yana.alphabetter.LearnActivity.java", "BodyUseAPI": ["android.media.MediaPlayer.stop()"], "Fixed commit": "d61c1d4535384e0a78c09b2c724b71899fcf81e6", "Url": "https://api.github.com/repos/khjharris/EC327_Project", "Date": "2017-12-10T00:23:44Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (disguiser == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2443/buggy-version/src.me.libraryaddict.disguise.DisguiseAPI.java", "BodyUseAPI": [], "Fixed commit": "e80523c59f81af8df3331cb3e148983731a77f88", "Url": "https://api.github.com/repos/libraryaddict/LibsDisguises", "Date": "2013-08-08T17:56:13Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pr) == null) { org.jenkinsci.plugins.ghprb.GhprbPullRequestMerge.logger.log(java.util.logging.Level.INFO, (\"Pull request is null for ID: \" + (cause.getPullID()))); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1280/buggy-version/src.main.java.org.jenkinsci.plugins.ghprb.GhprbPullRequestMerge.java", "BodyUseAPI": [], "Fixed commit": "6ce75ce97dd7ac0933b7dbc9446c03864faea6ed", "Url": "https://api.github.com/repos/mdelapenya/ghprb-plugin", "Date": "2014-08-05T21:07:08Z"},
{"Line": "=>841", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((opts.getLogDir()) != null) && ((testPath) != null)) { java.lang.String logDir = ((opts.getLogDir()) + \"/\") + (testPath); addMissingInfo(logDir, test.getResult()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6147/buggy-version/teamengine-core.src.main.java.com.occamlab.te.TECore.java", "BodyUseAPI": ["com.occamlab.te.RuntimeOptions.getLogDir()"], "Fixed commit": "adf9b13ce66258afa22e0b2b678cff3ab83d11c1", "Url": "https://api.github.com/repos/opengeospatial/teamengine", "Date": "2016-08-03T04:10:25Z"},
{"Line": "=>940", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (search.getMidLocations().get(((search.getMidLocations().size()) - 1)).isSame(search.getEnd())) search.getMidLocations().remove(((search.getMidLocations().size()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4607/buggy-version/Java.Coolgoole.src.coolgle.mainGui.java", "BodyUseAPI": ["search.getMidLocations().remove(((search.getMidLocations().size()) - 1))", "search.getMidLocations().size()", "coolgle.Search.getMidLocations()", "coolgle.Search.getMidLocations()"], "Fixed commit": "a503bc06f039764cd97bd3ffe460e4caf12c161c", "Url": "https://api.github.com/repos/spawndys/Cava", "Date": "2013-12-04T23:33:05Z"},
{"Line": "=>939", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (search.getMidLocations().get(0).isSame(search.getStart())) search.getMidLocations().remove(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4607/buggy-version/Java.Coolgoole.src.coolgle.mainGui.java", "BodyUseAPI": ["search.getMidLocations().remove(int)", "coolgle.Search.getMidLocations()"], "Fixed commit": "a503bc06f039764cd97bd3ffe460e4caf12c161c", "Url": "https://api.github.com/repos/spawndys/Cava", "Date": "2013-12-04T23:33:05Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(employeeForm.isNewEmployee())) { employeeForm.setUpdatedOn(employeeService.findOne(employeeForm.getEmployeeId()).getUpdatedOn()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1629/buggy-version/src.main.java.com.colptha.controllers.EmployeeController.java", "BodyUseAPI": ["com.colptha.dom.command.EmployeeForm.getEmployeeId()", "com.colptha.dom.command.EmployeeForm.setUpdatedOn(employeeService.findOne(employeeForm.getEmployeeId()).getUpdatedOn())", "employeeService.findOne(employeeForm.getEmployeeId()).getUpdatedOn()", "com.colptha.services.EmployeeService.findOne(employeeForm.getEmployeeId())"], "Fixed commit": "6d96f1808e7f2462e906f967c5d0c2b98ecf457b", "Url": "https://api.github.com/repos/Colptha/spring-warehouse-demo", "Date": "2017-05-15T21:10:54Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((name.length()) < 3) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5900/buggy-version/src.main.java.ee.ignorance.transformiceapi.protocol.server.FriendListResponse.java", "BodyUseAPI": [], "Fixed commit": "c03f9cb0d16968fc2bbb0a54424bb1d6c546db39", "Url": "https://api.github.com/repos/ignorance77/TransformiceAPI", "Date": "2011-06-07T03:44:14Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((t == ((int) (offsetStartDays))) && (t == ((int) (offsetEndDays)))) { for (int a = offsetStartSlot; a <= offsetEndSlot; a++) { (monthEventNumbers[t][a])++; } }else if (t == ((int) (offsetStartDays))) { for (int a = offsetStartSlot; a < 3; a++) { (monthEventNumbers[t][a])++; } }else if (t == ((int) (offsetEndDays))) { for (int a = 0; a < offsetEndSlot; a++) { (monthEventNumbers[t][a])++; } }else { for (int a = 0; a < 3; a++) { (monthEventNumbers[t][a])++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5658/buggy-version/src.carelender.view.CalenderRenderer.java", "BodyUseAPI": [], "Fixed commit": "27408bec39db05af0d3b629d74570beec330dc96", "Url": "https://api.github.com/repos/cs2103aug2015-t10-4j/main", "Date": "2015-10-27T17:29:40Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<de.hanbei.httpserver.common.Method, de.hanbei.httpserver.URIResponseMapping>.get(request.getMethod())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mapping == null) { return defaultResponse; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5244/buggy-version/src.main.java.de.hanbei.httpserver.MockHttpServer.java", "BodyUseAPI": [], "Fixed commit": "a8343f9786e80438681ce8b2666459e910b01a4b", "Url": "https://api.github.com/repos/hanbei/mock-httpserver", "Date": "2011-05-19T14:02:16Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (history.isEmpty()) return current;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5916/buggy-version/main.java.com.brentandjody.stenoime.Translator.SimpleTranslator.java", "BodyUseAPI": [], "Fixed commit": "7017f60328bd6d400f853859a68757e32f79874f", "Url": "https://api.github.com/repos/brentn/StenoIME", "Date": "2014-01-23T16:39:51Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (history.isEmpty()) return current;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5916/buggy-version/main.java.com.brentandjody.stenoime.Translator.SimpleTranslator.java", "BodyUseAPI": [], "Fixed commit": "7017f60328bd6d400f853859a68757e32f79874f", "Url": "https://api.github.com/repos/brentn/StenoIME", "Date": "2014-01-23T16:39:51Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trustAll) factory.setSSLContext(org.appspot.apprtc.NaiveSSLContext.getInstance(\"TLS\")); else factory.setSSLContext(sslContext);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/674/buggy-version/app.src.main.java.org.appspot.apprtc.WebSocketChannelClient.java", "BodyUseAPI": [], "Fixed commit": "e4fd457537add85734f9da184f78de45a0973dec", "Url": "https://api.github.com/repos/inspiraluna/AppRTC-Android", "Date": "2016-10-25T14:37:20Z"},
{"Line": "=>2443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.pivotal.gemfirexd.internal.engine.distributed.utils.GemFireXDUtils.TraceExecution) { com.pivotal.gemfirexd.internal.shared.common.sanity.SanityManager.DEBUG_PRINT(GfxdConstants.TRACE_EXECUTION, (((((((\"in procedure COMMIT_SNAPSHOT_TXID() afer commit\" + txId) + \" for connid \") + (tc.getConnectionID())) + \" TxManager \") + (com.gemstone.gemfire.internal.cache.TXManagerImpl.getCurrentTXId())) + \" snapshot tx : \") + (TXManagerImpl.snapshotTxState.get()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1546/buggy-version/gemfirexd.core.src.main.java.com.pivotal.gemfirexd.internal.engine.ddl.catalog.GfxdSystemProcedures.java", "BodyUseAPI": [], "Fixed commit": "5d442f5a8a2dc1d3e7d8c75ff115790343cb24d8", "Url": "https://api.github.com/repos/SnappyDataInc/snappy-store", "Date": "2017-06-02T23:24:35Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((elements[i].getFirstChild()) != null) { result += (((languages[i]) + \" : \") + (elements[i].getFirstChild().getNodeValue())) + \"\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6489/buggy-version/app.src.main.java.com.star.translation.MainActivity.java", "BodyUseAPI": ["org.w3c.dom.Node.getNodeValue()", "org.w3c.dom.Element.getFirstChild()"], "Fixed commit": "b3770c8b6c201b64b6deeeea0529ed406297aaf3", "Url": "https://api.github.com/repos/crystalDf/How-to-Make-Android-Apps-Chapter-16-Translation", "Date": "2015-08-05T14:53:12Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) == null) { booleanValue = null; }else if ((value.equalsIgnoreCase(\"true\")) || (value.equals(\"1\"))) { booleanValue = true; }else if ((value.equalsIgnoreCase(\"false\")) || (value.equals(\"0\"))) { booleanValue = false; }else { booleanValue = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/854/buggy-version/de.bund.bfr.knime.gis.src.de.bund.bfr.knime.gis.views.canvas.highlighting.LogicalHighlightCondition.java", "BodyUseAPI": [], "Fixed commit": "03403b0a0e70ff1ebffb41a329aaf0fb349f37cc", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2015-04-08T14:10:42Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.spencernetdevelopment.arguments.StaticPagesTerminal.getArguments(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (arguments.hasAssetprefixinbrowser()) { com.spencernetdevelopment.StaticPages.assetPrefixInBrowser = arguments.getAssetprefixinbrowser(); if ((\"/\".equals(com.spencernetdevelopment.StaticPages.assetPrefixInBrowser)) || (com.spencernetdevelopment.StaticPages.assetPrefixInBrowser.endsWith(\"/\"))) { com.spencernetdevelopment.StaticPages.assetPrefixInBrowser = com.spencernetdevelopment.StaticPages.assetPrefixInBrowser.replaceAll(\"/+$\", \"\"); } }else { com.spencernetdevelopment.StaticPages.assetPrefixInBrowser = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7571/buggy-version/src.com.spencernetdevelopment.StaticPages.java", "BodyUseAPI": ["com.spencernetdevelopment.arguments.StaticPagesArguments.getAssetprefixinbrowser()"], "Fixed commit": "2f5cef4f18513fa4b8e41e6f84e78865c0bb0b74", "Url": "https://api.github.com/repos/jsdevel/StaticPages", "Date": "2013-04-26T07:31:29Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listener) != null) listener.onLocationChanged(location);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7070/buggy-version/Lokemon.src.android.lbg.LBGLocationAdapter.java", "BodyUseAPI": [], "Fixed commit": "4ce59a011b0048087c0b01f57383f3c99535e774", "Url": "https://api.github.com/repos/rdrey/LoBReTiMMGaP", "Date": "2011-10-06T12:41:41Z"},
{"Line": "=>630", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((networkBinder) != null) networkBinder.sendGameUpdate(msg);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7070/buggy-version/Lokemon.src.android.lokemon.Game.java", "BodyUseAPI": [], "Fixed commit": "4ce59a011b0048087c0b01f57383f3c99535e774", "Url": "https://api.github.com/repos/rdrey/LoBReTiMMGaP", "Date": "2011-10-06T12:41:41Z"},
{"Line": "=>656", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((networkBinder) != null) networkBinder.sendGameUpdate(new android.lokemon.NetworkMessage(\"ExitedBattle\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7070/buggy-version/Lokemon.src.android.lokemon.Game.java", "BodyUseAPI": [], "Fixed commit": "4ce59a011b0048087c0b01f57383f3c99535e774", "Url": "https://api.github.com/repos/rdrey/LoBReTiMMGaP", "Date": "2011-10-06T12:41:41Z"},
{"Line": "=>809", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.kuali.rice.kns.web.ui.Field.getPropertyValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (propertyValue != null) { return java.lang.Boolean.parseBoolean(propertyValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7826/buggy-version/rice-middleware.impl.src.main.java.org.kuali.rice.kew.impl.document.search.DocumentSearchCriteriaBoLookupableHelperService.java", "BodyUseAPI": ["java.lang.Boolean.parseBoolean(java.lang.String)"], "Fixed commit": "5eddc49af1cd772c9b7dc07c2dc2c7f3e6b1b607", "Url": "https://api.github.com/repos/kuali/rice", "Date": "2016-08-28T06:32:59Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((slots[0].id) == (slots[1].id)) && ((player.getItem(slots[0].id).amount) < 2)) { slots[1] = null; }else { if ((player.getItem(slots[0].id).amount) == 0) slots[0] = null; if ((player.getItem(slots[1].id).amount) == 0) slots[1] = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2046/buggy-version/src.GameStates.CraftingState.java", "BodyUseAPI": ["Entity.Player.Player.getItem(slots[0].id)", "Entity.Player.Player.getItem(slots[1].id)"], "Fixed commit": "86a087599ca12bc4849c441f06281b1b86d5b0a0", "Url": "https://api.github.com/repos/SpokenBanana/SpookyScaryScarecrow", "Date": "2014-11-17T20:35:15Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.kylin.job.streaming.KafkaRequester.getLastOffset(kafkaClusterConfig.getTopic(),int,kafka.api.OffsetRequest.EarliestTime(),kafka.cluster.Broker,org.apache.kylin.job.streaming.KafkaClusterConfig)", "java.util.Map<java.lang.Integer, java.lang.Long>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (committedOffset < earliestOffset) { org.apache.kylin.job.streaming.StreamingBootstrap.logger.warn(java.lang.String.format(\"invalid offset:%d, earliestOffset:%d; Will use earliestOffset as committedOffset.\", committedOffset, earliestOffset)); committedOffset = earliestOffset; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8599/buggy-version/job.src.main.java.org.apache.kylin.job.streaming.StreamingBootstrap.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String)", "java.lang.String.format(java.lang.String,long,long)"], "Fixed commit": "d4e5120f3b721d66052acf7b196958efbccad00f", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2015-06-08T03:24:23Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Lists.newArrayListWithExpectedSize(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((batches.get(i).size()) > 0) batch = org.apache.kylin.streaming.MicroStreamBatch.union(batch, batches.get(i));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8599/buggy-version/streaming.src.main.java.org.apache.kylin.streaming.StreamBuilder.java", "BodyUseAPI": ["org.apache.kylin.streaming.MicroStreamBatch.union(org.apache.kylin.streaming.MicroStreamBatch,batches.get(i))", "java.util.ArrayList<org.apache.kylin.streaming.MicroStreamBatch>.get(int)"], "Fixed commit": "d4e5120f3b721d66052acf7b196958efbccad00f", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2015-06-08T03:24:23Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["presentationlayer.ChecklistUI.getIntent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((intent != null) && (intent.getBooleanExtra(NoteInterface.OPEN_SAVED, false))) { businesslayer.CheckListWrapper wrapper = ((businesslayer.CheckListWrapper) (intent.getSerializableExtra(NoteInterface.DATA))); assert wrapper != null; if (wrapper.hasNoteTitle()) editName.setText(wrapper.getNoteTitle()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/398/buggy-version/app.src.main.java.presentationlayer.ChecklistUI.java", "BodyUseAPI": ["android.content.Intent.getSerializableExtra(NoteInterface.DATA)"], "Fixed commit": "b5706615c48796fe6e4db88c1e47f4f78033e4d2", "Url": "https://api.github.com/repos/kush93/Handy", "Date": "2016-04-11T16:00:32Z"},
{"Line": "=>528", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mSuggestionIndex) < (mProbableItemsList.size())) { mNewItemEditText.setText(mProbableItemsList.get(((mSuggestionIndex)++))); }else { mNewItemEditText.setText(\"\"); android.util.Log.d(com.nbossard.packlist.gui.TripDetailFragment.TAG, \"No more suggestion\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2301/buggy-version/app.src.main.groovy.com.nbossard.packlist.gui.TripDetailFragment.java", "BodyUseAPI": ["android.support.v7.widget.AppCompatAutoCompleteTextView.setText(java.lang.String)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "2c1688ff693c515d3170164f1ca43b2da3892800", "Url": "https://api.github.com/repos/nbossard/packlist", "Date": "2016-07-15T12:13:04Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((heightInput.getText().toString().equals(\"\")) || (weightInput.getText().toString().equals(\"\"))) { zScore.setText(R.string.zscore_empty); }else { h = java.lang.Double.parseDouble(heightInput.getText().toString()); w = java.lang.Double.parseDouble(weightInput.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/807/buggy-version/app.src.main.java.com.babyandi.stephnoutsa.babyandi.ZScore.java", "BodyUseAPI": ["java.lang.Double.parseDouble(weightInput.getText().toString())", "android.widget.EditText.getText()", "java.lang.Double.parseDouble(heightInput.getText().toString())", "weightInput.getText().toString()", "heightInput.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "f4eaad33760b9f544c586fb5a14aecec22cf0c1f", "Url": "https://api.github.com/repos/stephanenoutsa/motherslove", "Date": "2016-08-03T01:46:47Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (other == (this)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2684/buggy-version/src.mygame.SharedConstructors.java", "BodyUseAPI": [], "Fixed commit": "d37a6f570c4b6a0402cfa56710194e659880a4c6", "Url": "https://api.github.com/repos/devinbost/jMathGame3d", "Date": "2014-06-21T07:14:38Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (other == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2684/buggy-version/src.mygame.SharedConstructors.java", "BodyUseAPI": [], "Fixed commit": "d37a6f570c4b6a0402cfa56710194e659880a4c6", "Url": "https://api.github.com/repos/devinbost/jMathGame3d", "Date": "2014-06-21T07:14:38Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fromType instanceof wyil.lang.Type.Char) { to = wyil.lang.Constant.V_INTEGER(java.math.BigInteger.valueOf(((int) (((wyil.lang.Constant.Char) (from)).value)))); }else if (fromType instanceof wyil.lang.Type.Union) { if (from instanceof wyil.lang.Constant.Char) { wyil.lang.Constant.Char fromchar = ((wyil.lang.Constant.Char) (from)); to = wyil.lang.Constant.V_INTEGER(java.math.BigInteger.valueOf(((int) (fromchar.value)))); }else { to = ((wyil.lang.Constant.Integer) (from)); } }else { wycc.lang.SyntaxError.internalFailure(\"Not implemented!\", \"ConvertInterpreter.java\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8817/buggy-version/modules.wyopcl.src.wyopcl.interpreter.C.ConvertInterpreter.java", "BodyUseAPI": [], "Fixed commit": "c3adb2c457e131f71ec74f9b3849145b22bf31e4", "Url": "https://api.github.com/repos/samminweng/WhileyOpenCL", "Date": "2014-08-14T17:49:25Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUserName()) != null) { microsoft.exchange.webservices.data.ArrayList<java.lang.String> authPrefs = new microsoft.exchange.webservices.data.ArrayList<java.lang.String>(); authPrefs.add(AuthSchemes.NTLM); rcBuilder.setTargetPreferredAuthSchemes(authPrefs).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7727/buggy-version/src.main.java.microsoft.exchange.webservices.data.HttpClientWebRequest.java", "BodyUseAPI": [], "Fixed commit": "cccad1573182b6da5486474c861f5117aa78f740", "Url": "https://api.github.com/repos/rlambrechts/ews-java-api", "Date": "2015-01-06T16:23:29Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(target.exists())) { target.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7317/buggy-version/src.com.parent.management.db.ManagementProvider.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "b01939e845b4471688dc312d806112972c2d46d2", "Url": "https://api.github.com/repos/GloriaGuo/Management", "Date": "2013-04-06T16:31:50Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(target.exists())) { boolean rtn = target.mkdirs(); if (!rtn) { android.util.Log.e(com.parent.management.db.ManagementProvider.TAG, (\"Couldn't mkdir: \" + (com.parent.management.db.ManagementProvider.EXTERNAL_STORAGE_PATH))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7317/buggy-version/src.com.parent.management.db.ManagementProvider.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "b01939e845b4471688dc312d806112972c2d46d2", "Url": "https://api.github.com/repos/GloriaGuo/Management", "Date": "2013-04-06T16:31:50Z"},
{"Line": "=>687", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldBeFlatened()) { return type.getProtectedTiles(); }else { return new jsettlers.common.position.RelativePoint[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7315/buggy-version/jsettlers.logic.src.jsettlers.logic.buildings.Building.java", "BodyUseAPI": [], "Fixed commit": "2c30c2bebdb45e3fd3341435ef7d0e8f8d0b90de", "Url": "https://api.github.com/repos/jsettlers/settlers-remake", "Date": "2015-09-29T10:45:29Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yamlin.BO.TransactionBO.getTransactions(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((transactionList.size()) > 0) { l.setSinceId(transactionList.get(((transactionList.size()) - 1)).getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/380/buggy-version/src.main.java.com.yamlin.WebappHandlerImpl.java", "BodyUseAPI": ["java.util.List<com.yamlin.Transaction>.size()", "transactionList.get(((transactionList.size()) - 1)).getId()", "java.util.List<com.yamlin.Transaction>.get(((transactionList.size()) - 1))", "com.yamlin.TransactionList.setSinceId(transactionList.get(((transactionList.size()) - 1)).getId())"], "Fixed commit": "f355892af00ffbfc9a2a81bc678e706bff6c2bc5", "Url": "https://api.github.com/repos/yamlin/Trader-Webapp", "Date": "2017-02-11T14:57:25Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((form) != null) { return form; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2566/buggy-version/app.src.main.java.org.openlmis.core.presenter.MMIAFormPresenter.java", "BodyUseAPI": [], "Fixed commit": "dc5522412ab1d1c7e41c429f418f0f163c7ae6ff", "Url": "https://api.github.com/repos/SIGLUS/lmis-moz-mobile", "Date": "2015-08-19T08:04:41Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opendaylight.yang.gen.v1.urn.opendaylight.lfm.mapping.database.rev150314.mapping.database.InstanceId.getMapping()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (ms != null) { mappings.addAll(ms); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3312/buggy-version/mappingservice.implementation.src.main.java.org.opendaylight.lispflowmapping.implementation.mdsal.DataStoreBackEnd.java", "BodyUseAPI": ["java.util.List<org.opendaylight.yang.gen.v1.urn.opendaylight.lfm.mapping.database.rev150314.db.instance.Mapping>.addAll(java.util.List<org.opendaylight.yang.gen.v1.urn.opendaylight.lfm.mapping.database.rev150314.db.instance.Mapping>)"], "Fixed commit": "aa485bd9cd21f1019ba1245e288d0923aa2adb8b", "Url": "https://api.github.com/repos/opendaylight/lispflowmapping", "Date": "2015-06-18T09:09:50Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof org.openrdf.model.Literal) { org.openrdf.model.Literal literal = ((org.openrdf.model.Literal) (value)); org.openrdf.model.URI datatype = literal.getDatatype(); if ((datatype != null) && (XMLSchema.STRING.equals(datatype))) { value = new io.konig.core.impl.KonigLiteral(literal.stringValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1102/buggy-version/konig-shacl.src.main.java.io.konig.shacl.PropertyConstraint.java", "BodyUseAPI": [], "Fixed commit": "437aff1ccdd15cd983f80637febd21fafe29728a", "Url": "https://api.github.com/repos/konigio/konig", "Date": "2016-04-15T00:31:45Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (jsonObjectName == null) { result = prop.getProperty(propertyName); }else { result = prop.getProperty(((jsonObjectName + (RKGenConstants.DOT)) + propertyName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8596/buggy-version/rkgen.src.main.java.com.rkgen.jsontorestkitgenerator.RKObjectNamesProvider.java", "BodyUseAPI": ["java.util.Properties.getProperty(((jsonObjectName + (RKGenConstants.DOT)) + propertyName))"], "Fixed commit": "1225aa37a0a01aa8b0f55210267ddae4f55fafb2", "Url": "https://api.github.com/repos/michaelchan0427/rkgen", "Date": "2012-11-17T22:52:07Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((staffRights) < 2) { server.world.entity.player.content.AssignWeaponInterface.reset(player); server.world.entity.player.content.AssignWeaponInterface.changeFightType(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5337/buggy-version/src.server.world.entity.player.Player.java", "BodyUseAPI": [], "Fixed commit": "656a8c1ad1c8031ee8c629b2d138d9e49ab1a48b", "Url": "https://api.github.com/repos/lare96/asteria-2.0", "Date": "2014-06-06T03:43:29Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((updateDialog) != null) { updateDialog.setListener(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8786/buggy-version/MyApplication.app.src.main.java.com.example.jeff.myapplication.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "57a2a4d64f9475983db651844798c24d58ddf784", "Url": "https://api.github.com/repos/cyzhan/sg", "Date": "2017-10-02T13:23:43Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connectFailDialog) != null) { connectFailDialog.setListener(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8786/buggy-version/MyApplication.app.src.main.java.com.example.jeff.myapplication.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "57a2a4d64f9475983db651844798c24d58ddf784", "Url": "https://api.github.com/repos/cyzhan/sg", "Date": "2017-10-02T13:23:43Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<de.geeksfactory.opacclient.objects.Starred>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((item.getTitle()) != null) tv.setText(android.text.Html.fromHtml(item.getTitle())); else tv.setText(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7509/buggy-version/src.de.geeksfactory.opacclient.frontend.StarredAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(android.text.Html.fromHtml(item.getTitle()))", "android.text.Html.fromHtml(item.getTitle())", "de.geeksfactory.opacclient.objects.Starred.getTitle()"], "Fixed commit": "7fe6ad7a848a1900cea4726a63c6fff5af598ec8", "Url": "https://api.github.com/repos/raphaelm/opacclient", "Date": "2012-11-02T12:28:39Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends se.emilsjolander.sprinkles.QueryResult>.isAnnotationPresent(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!isAutoGenerateColumnNames) && (!(field.isAnnotationPresent(se.emilsjolander.sprinkles.annotations.Column.class)))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8527/buggy-version/library.src.main.java.se.emilsjolander.sprinkles.ModelInfo.java", "BodyUseAPI": [], "Fixed commit": "fb1e167a448ed2644f027dba85ab922c18eb35e2", "Url": "https://api.github.com/repos/lsjwzh/sprinkles", "Date": "2014-10-24T16:19:28Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((brain_type) != null) { insertExperimentRun.setString(4, brain_type.getSimpleName()); }else { insertExperimentRun.setNull(4, java.sql.Types.VARCHAR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4650/buggy-version/src.siver.experiments.InprogressExperiment.java", "BodyUseAPI": [], "Fixed commit": "92e859f2d2224e495fd52f43e83e4c4d9f6f5222", "Url": "https://api.github.com/repos/henryaddison/siver", "Date": "2012-08-20T12:18:32Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ratingsFolder.delete()) { android.util.Log.i(\"LoadProfiles\", \"Success!\"); }else { android.util.Log.i(\"LoadProfiles\", \"Failure!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8086/buggy-version/src.com.Centaurii.app.RatingCalculator.tasks.LoadProfiles.java", "BodyUseAPI": [], "Fixed commit": "914cf0e4bd5fb3eb58f8b6431e556a4cd283727b", "Url": "https://api.github.com/repos/aschuster3/GameRatingCalculator", "Date": "2013-10-28T20:08:03Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(matchesByScoreHeap.isEmpty())) { throw new java.lang.RuntimeException(\"Did not exhaust matchesByScoreHeap\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5093/buggy-version/core.src.main.java.com.github.gumtreediff.matchers.heuristic.fgp.FingerprintMatcher.java", "BodyUseAPI": [], "Fixed commit": "6e21ac2da25a5a3f5f305a9d2b0e94b6ee609683", "Url": "https://api.github.com/repos/softdevteam/gumtree", "Date": "2016-04-28T12:00:13Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (builder.toString().trim().replace(\" \", \"\").isEmpty()) { throw new java.io.IOException(\"Empty settings file\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4034/buggy-version/src.main.java.com.andreistraut.monkins.model.ConfigurationManager.java", "BodyUseAPI": [], "Fixed commit": "1140b60320270edef3e2e162ce975404b31c6fb3", "Url": "https://api.github.com/repos/Andrei-Straut/monkins", "Date": "2015-07-22T11:09:33Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((noteOff) != null) noteOff.setOnset(((long) (realOffset)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5329/buggy-version/src.net.muse.data.NoteData.java", "BodyUseAPI": [], "Fixed commit": "2bd4941accaaa42774e70b75b653f25972f8b417", "Url": "https://api.github.com/repos/muse324/mixtract", "Date": "2017-06-23T05:24:06Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((noteOn) != null) noteOn.setOnset(((long) (onset)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5329/buggy-version/src.net.muse.data.NoteData.java", "BodyUseAPI": [], "Fixed commit": "2bd4941accaaa42774e70b75b653f25972f8b417", "Url": "https://api.github.com/repos/muse324/mixtract", "Date": "2017-06-23T05:24:06Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (RESULT_OK)) { com.codepath.apps.basictwitter.models.Tweet tweet = ((com.codepath.apps.basictwitter.models.Tweet) (data.getSerializableExtra(\"tweet\"))); aTweets.insert(tweet, 0); aTweets.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8442/buggy-version/src.com.codepath.apps.basictwitter.TimelineActivity.java", "BodyUseAPI": [], "Fixed commit": "33ae500ed7283509834376b44447ec83c6c1cc33", "Url": "https://api.github.com/repos/calren/SimpleTwitterClient", "Date": "2014-06-24T05:36:28Z"},
{"Line": "=>1419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(refreshLock)) { rigViewModel.setRockDensity(s.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2723/buggy-version/app.src.main.java.com.teamshi.collectionsystem3.SPTRigActivity.java", "BodyUseAPI": [], "Fixed commit": "1199fb8cfeb5d1fe5fe3260240499c6ae30d744b", "Url": "https://api.github.com/repos/TeamShi/CollectionSystem3", "Date": "2016-12-16T09:26:47Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gameController.GameRuler.isWin()) == 0) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/587/buggy-version/src.userInterface.ingameController.java", "BodyUseAPI": [], "Fixed commit": "67eb5af2cb983dc1e334981a9053733826a51086", "Url": "https://api.github.com/repos/JunHo-Seo/appAGOG", "Date": "2016-11-12T16:43:20Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((query.length()) > 999) { params = new com.lsj.trans.params.HttpPostParams(); }else { params = new com.lsj.trans.params.HttpGetParams(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5851/buggy-version/src.com.lsj.Trans.GoogleDispatch.java", "BodyUseAPI": [], "Fixed commit": "c8e60155026e61b3a90cd4a4553e1e8fefff948c", "Url": "https://api.github.com/repos/lsj9383/translate-set", "Date": "2017-01-20T03:08:28Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.lang.model.element.Name.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"this\".equals(memberName)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7388/buggy-version/src.main.java.de.markiewb.netbeans.plugins.hints.structure.AddThisToMember.java", "BodyUseAPI": [], "Fixed commit": "ea3850ee491026f660872679c9222bb17291089c", "Url": "https://api.github.com/repos/markiewb/nb-additional-hints", "Date": "2014-06-03T20:35:34Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((typedDef.getResultType()) == null) { typedDef.typeHasErrors(true); typedDef.hasErrors(Definition.TypeCheckingStatus.HAS_ERRORS); }else { typedDef.hasErrors(((typedDef.getElimTree()) != null ? Definition.TypeCheckingStatus.NO_ERRORS : Definition.TypeCheckingStatus.HAS_ERRORS)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4852/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.typechecking.DefinitionCheckType.java", "BodyUseAPI": ["com.jetbrains.jetpad.vclang.typechecking.FunctionDefinition.getElimTree()", "com.jetbrains.jetpad.vclang.typechecking.FunctionDefinition.hasErrors(Definition.TypeCheckingStatus.HAS_ERRORS)", "com.jetbrains.jetpad.vclang.typechecking.FunctionDefinition.hasErrors(((typedDef.getElimTree()) != null ? Definition.TypeCheckingStatus.NO_ERRORS : Definition.TypeCheckingStatus.HAS_ERRORS))", "com.jetbrains.jetpad.vclang.typechecking.FunctionDefinition.typeHasErrors(boolean)"], "Fixed commit": "ba6456b946cd6c689cdd89c77de2ee5dbf434ef3", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2017-02-09T10:36:10Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bRecord == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5396/buggy-version/igcParser.src.main.java.com.shollmann.android.igcparser.util.WaypointUtilities.java", "BodyUseAPI": [], "Fixed commit": "e6d6a4fa9804e592924d9943537f00b2e3038753", "Url": "https://api.github.com/repos/santiago-hollmann/igcparser", "Date": "2017-06-02T17:40:43Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (igcFile != null) { org.greenrobot.eventbus.EventBus.getDefault().post(new com.shollmann.igcparser.events.FileClickEvent(new java.io.File(igcFile.getFilePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5396/buggy-version/app.src.main.java.com.shollmann.igcparser.ui.viewholder.FileViewHolder.java", "BodyUseAPI": ["com.shollmann.android.igcparser.model.IGCFile.getFilePath()", "org.greenrobot.eventbus.EventBus.getDefault().post(com.shollmann.igcparser.events.FileClickEvent)"], "Fixed commit": "e6d6a4fa9804e592924d9943537f00b2e3038753", "Url": "https://api.github.com/repos/santiago-hollmann/igcparser", "Date": "2017-06-02T17:40:43Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (choice == 9) pieceOnTile = new King(((x) + ((width) / 4)), ((y) + ((height) / 4)), ((width) / 2), ((height) / 2), white);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3006/buggy-version/Tile.java", "BodyUseAPI": [], "Fixed commit": "e23f482c6e3e45a319dd9b3561e95ab5867fb02c", "Url": "https://api.github.com/repos/gutekun2/CS196", "Date": "2013-12-04T18:48:25Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (phase == 9) phase = 3;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3006/buggy-version/GamePanel.java", "BodyUseAPI": [], "Fixed commit": "e23f482c6e3e45a319dd9b3561e95ab5867fb02c", "Url": "https://api.github.com/repos/gutekun2/CS196", "Date": "2013-12-04T18:48:25Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["microbat.model.AttributionVar.getReadTraceNode()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (readTraceNode != null) { path = new microbat.model.trace.PathInstance(suspiciousNode, readTraceNode); isPathInPattern = (Settings.potentialCorrectPatterns.containsPattern(path)) ? true : false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2340/buggy-version/microbat.src.main.microbat.recommendation.StepRecommender.java", "BodyUseAPI": [], "Fixed commit": "6f5b49dd96884d8def7e7820aecf524cc0842491", "Url": "https://api.github.com/repos/sunjun-group/Ziyuan", "Date": "2016-02-25T11:06:21Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((referenceFront.getNumberOfPoints()) > 0) { hypervolumeValue.push(new org.uma.jmetal.qualityindicator.impl.hypervolume.PISAHypervolume<S>(referenceFront).evaluate(getNonDominatedSolutions(org.uma.jmetal.algorithm.multiobjective.nsgaii.NSGAIIMeasures.getPopulation()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2524/buggy-version/jmetal-algorithm.src.main.java.org.uma.jmetal.algorithm.multiobjective.nsgaii.NSGAIIMeasures.java", "BodyUseAPI": ["org.uma.jmetal.measure.impl.BasicMeasure<java.lang.Double>.push(new org.uma.jmetal.qualityindicator.impl.hypervolume.PISAHypervolume<S>(referenceFront).evaluate(getNonDominatedSolutions(org.uma.jmetal.algorithm.multiobjective.nsgaii.NSGAIIMeasures.getPopulation())))", "org.uma.jmetal.qualityindicator.impl.hypervolume.PISAHypervolume<S>.evaluate(getNonDominatedSolutions(org.uma.jmetal.algorithm.multiobjective.nsgaii.NSGAIIMeasures.getPopulation()))"], "Fixed commit": "c015b2134c255ce0c9e7d0e473772c91092cc1b5", "Url": "https://api.github.com/repos/jMetal/jMetal", "Date": "2017-12-13T09:53:46Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.connection) != null) { plugin.vlog.info(\"Found database file, Loading now...\"); plugin.vlog.info(\"Storage loaded!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/296/buggy-version/src.main.java.com.commodore.verifyme.util.StorageUtils.java", "BodyUseAPI": [], "Fixed commit": "60799cac93c02248f1a58ff6e4bc1883da45603b", "Url": "https://api.github.com/repos/Commodore64x/VerifyMe", "Date": "2017-11-06T10:39:05Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(matches.isEmpty())) { return matches.peek(); }else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5704/buggy-version/assignment-1.code.src.TPEStack.java", "BodyUseAPI": ["java.util.Stack<Match>.peek()"], "Fixed commit": "8b1d28082790d93eb0b6af6a7cab1842492dff96", "Url": "https://api.github.com/repos/fabcouwer/webdatamanagement", "Date": "2014-05-20T12:56:40Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (proxySelector != null) { java.net.ProxySelector.setDefault(proxySelector); }else { java.net.ProxySelector.setDefault(DirectProxySelector.DIRECT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/9130/buggy-version/soapui.src.main.java.com.eviware.soapui.impl.wsdl.support.http.ProxyUtils.java", "BodyUseAPI": ["java.net.ProxySelector.setDefault(java.net.ProxySelector)"], "Fixed commit": "46218eefdf24cb9ba0ec7fa61daa8db5ef62ac65", "Url": "https://api.github.com/repos/pellcorp/soapui", "Date": "2017-02-09T05:57:25Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.opengamma.analytics.util.time.TimeCalculator.getTimeBetween(org.threeten.bp.ZonedDateTime,org.threeten.bp.LocalDate)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (timeToSettlement == 0) { timeToSettlement = 0.0015; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7223/buggy-version/projects.OG-Analytics.src.main.java.com.opengamma.analytics.financial.equity.option.EquityIndexOptionDefinition.java", "BodyUseAPI": [], "Fixed commit": "b4b6c925b7f27ad5451b34872fe6b59525eea66d", "Url": "https://api.github.com/repos/OpenGamma/OG-Platform", "Date": "2013-03-28T14:39:31Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.opengamma.analytics.util.time.TimeCalculator.getTimeBetween(org.threeten.bp.ZonedDateTime,_underlying.getSettlementDate())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (timeToFutureDelivery == 0) { timeToFutureDelivery = 0.0015; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7223/buggy-version/projects.OG-Analytics.src.main.java.com.opengamma.analytics.financial.equity.option.EquityIndexFutureOptionDefinition.java", "BodyUseAPI": [], "Fixed commit": "b4b6c925b7f27ad5451b34872fe6b59525eea66d", "Url": "https://api.github.com/repos/OpenGamma/OG-Platform", "Date": "2013-03-28T14:39:31Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.opengamma.analytics.util.time.TimeCalculator.getTimeBetween(org.threeten.bp.ZonedDateTime,_underlying.getExpiryDate())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (timeToFutureFixing == 0) { timeToFutureFixing = 0.0015; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7223/buggy-version/projects.OG-Analytics.src.main.java.com.opengamma.analytics.financial.equity.option.EquityIndexFutureOptionDefinition.java", "BodyUseAPI": [], "Fixed commit": "b4b6c925b7f27ad5451b34872fe6b59525eea66d", "Url": "https://api.github.com/repos/OpenGamma/OG-Platform", "Date": "2013-03-28T14:39:31Z"},
{"Line": "=>871", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (coordinatorUnknown()) this.wait(retryBackoffMs); else this.wait(retryBackoffMs);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7605/buggy-version/clients.src.main.java.org.apache.kafka.clients.consumer.internals.AbstractCoordinator.java", "BodyUseAPI": [], "Fixed commit": "0f8ad921af73ce023cc39be715501058ee30d086", "Url": "https://api.github.com/repos/MonsantoCo/kafka", "Date": "2017-02-17T19:06:01Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((((lineSplit[i].toLowerCase().equals(\"true\")) || (lineSplit[i].equals(\"1\"))) || (lineSplit[i].toLowerCase().equals(\"false\"))) || (lineSplit[i].equals(\"0\"))) { trueAttributeList.add(lineSplit[(i - 1)]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6471/buggy-version/src.JSONWriter.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "977edb83fa5c4f323dc1aa1eac40e0235f53e2f7", "Url": "https://api.github.com/repos/andybergon/agiw-data-extraction", "Date": "2016-10-16T21:04:04Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type.equals(\"uint16\")) return ((java.lang.Integer) (value));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/9138/buggy-version/model-based-configurable-nat.src.main.java.org.onosproject.model.based.configurable.nat.StateListenerNew.java", "BodyUseAPI": [], "Fixed commit": "5750970d706086ea615d9ae2f18df0bc882175f3", "Url": "https://api.github.com/repos/netgroup-polito/onos-applications", "Date": "2017-05-15T10:04:18Z"},
{"Line": "=>838", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.onosproject.model.based.configurable.nat.StateListenerNew.getLeafValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (value != null) { java.lang.Object parsed = personalizedSerialization(((varWithoutIndexes + \"/\") + fieldName), value); if (java.lang.Boolean.class.isAssignableFrom(parsed.getClass())) ((com.fasterxml.jackson.databind.node.ObjectNode) (toRet)).put(fieldName, ((java.lang.Boolean) (parsed))); else if (java.lang.Long.class.isAssignableFrom(parsed.getClass())) ((com.fasterxml.jackson.databind.node.ObjectNode) (toRet)).put(fieldName, ((java.lang.Long) (parsed))); else if (java.lang.Double.class.isAssignableFrom(parsed.getClass())) ((com.fasterxml.jackson.databind.node.ObjectNode) (toRet)).put(fieldName, ((java.lang.Double) (parsed))); else ((com.fasterxml.jackson.databind.node.ObjectNode) (toRet)).put(fieldName, ((java.lang.String) (parsed))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/9138/buggy-version/model-based-configurable-nat.src.main.java.org.onosproject.model.based.configurable.nat.StateListenerNew.java", "BodyUseAPI": ["org.onosproject.model.based.configurable.nat.StateListenerNew.personalizedSerialization(java.lang.String,java.lang.Object)"], "Fixed commit": "5750970d706086ea615d9ae2f18df0bc882175f3", "Url": "https://api.github.com/repos/netgroup-polito/onos-applications", "Date": "2017-05-15T10:04:18Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (type == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/9138/buggy-version/model-based-configurable-nat.src.main.java.org.onosproject.model.based.configurable.nat.StateListenerNew.java", "BodyUseAPI": [], "Fixed commit": "5750970d706086ea615d9ae2f18df0bc882175f3", "Url": "https://api.github.com/repos/netgroup-polito/onos-applications", "Date": "2017-05-15T10:04:18Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type.equals(\"string\")) return value.toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/9138/buggy-version/model-based-configurable-nat.src.main.java.org.onosproject.model.based.configurable.nat.StateListenerNew.java", "BodyUseAPI": [], "Fixed commit": "5750970d706086ea615d9ae2f18df0bc882175f3", "Url": "https://api.github.com/repos/netgroup-polito/onos-applications", "Date": "2017-05-15T10:04:18Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.command.getTask().getParameters().getChildren().size()) == 0) { splitPane.toggle(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2729/buggy-version/src.main.java.uk.co.nickthecoder.wrkfoo.CommandPanel.java", "BodyUseAPI": [], "Fixed commit": "98bde228995309860a34ac8c6394d79fdaeeac3d", "Url": "https://api.github.com/repos/nickthecoder/wrkfoo", "Date": "2017-02-28T19:36:34Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof eg.edu.guc.rolltheball.logic.grammer.Variable) return (((eg.edu.guc.rolltheball.logic.grammer.Variable) (obj)).hashCode()) == (hashCode()); else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1744/buggy-version/src.eg.edu.guc.rolltheball.logic.grammer.Variable.java", "BodyUseAPI": [], "Fixed commit": "5ef2ef23dd10d5c00e9fe38e97b44eadeb081433", "Url": "https://api.github.com/repos/medo/RollTheBall", "Date": "2015-12-01T21:26:33Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((behind) != null) behind.ahead = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7202/buggy-version/Car.java", "BodyUseAPI": [], "Fixed commit": "5d5a04ccc47da0f573810daa973f3356dbbd9e8a", "Url": "https://api.github.com/repos/MMazzocchi/Car", "Date": "2013-12-01T21:12:46Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (turn == 0) { turn = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5950/buggy-version/seleniumhelper.ShowdownHelper.java", "BodyUseAPI": [], "Fixed commit": "8e7615611661a7c1746c539e3981687401e298a3", "Url": "https://api.github.com/repos/rissole/geniusect-selenium", "Date": "2013-01-04T23:16:43Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.olat.core.gui.components.form.flexible.elements.SingleSelection.isSelected(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (perAnswer) { for (org.olat.ims.qti21.ui.editor.interactions.FIBScoreController.FIBEntryWrapper wrapper : wrappers) { java.lang.Double points = wrapper.getEntry().getScore(); if ((points != null) && ((points.doubleValue()) == (-1.0))) { wrapper.getEntry().setScore(1.0); wrapper.getPointsEl().setValue(\"1.0\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2148/buggy-version/src.main.java.org.olat.ims.qti21.ui.editor.interactions.FIBScoreController.java", "BodyUseAPI": [], "Fixed commit": "55095892b1c8f8f2ca166f18d60c81029729bb95", "Url": "https://api.github.com/repos/klemens/openolat", "Date": "2017-05-22T14:15:43Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, org.sonar.api.rules.Rule>.get(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (rule != null) { org.sonar.api.rule.RuleKey ruleKey = org.sonar.api.rule.RuleKey.of(rule.getRepositoryKey(), rule.getKey()); dto.toRequirement(ruleKey, characteristic); }else { dto.toRequirement(null, characteristic); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3087/buggy-version/sonar-core.src.main.java.org.sonar.core.technicaldebt.TechnicalDebtFinder.java", "BodyUseAPI": ["org.sonar.api.rule.RuleKey.of(rule.getRepositoryKey(),rule.getKey())", "org.sonar.api.rules.Rule.getRepositoryKey()", "org.sonar.api.rules.Rule.getKey()"], "Fixed commit": "d04ee98793f413c08b5ea89ab248aa803f308fb6", "Url": "https://api.github.com/repos/SonarSource/sonar", "Date": "2013-11-27T15:37:31Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(c.attributes.containsKey(\"params\"))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4232/buggy-version/app.src.main.java.com.github.ksoichiro.android.mdslide.Page.java", "BodyUseAPI": [], "Fixed commit": "322c9c3f61702a4180bcb99b92dab2e023467aa8", "Url": "https://api.github.com/repos/ksoichiro/md-slide-android", "Date": "2014-06-28T17:48:13Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pluginsEnabled) != (config.pluginsEnabled)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/621/buggy-version/config.Config.java", "BodyUseAPI": [], "Fixed commit": "6e80c6e37b94aefc34931b44c5fac9c58e180e26", "Url": "https://api.github.com/repos/veraPDF/veraPDF-library", "Date": "2016-04-26T09:00:20Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((date) == null) { android.util.Log.e(\"Input\", \"date error\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/9151/buggy-version/app.src.main.java.com.erichay.bestschedule.EditTask.java", "BodyUseAPI": [], "Fixed commit": "d9a0fd8231f69c0a78bf0b1909f53e13e9363196", "Url": "https://api.github.com/repos/ehay64/BestSchedule", "Date": "2017-01-22T01:39:20Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(saveInstanceStateCalled)) { getSupportFragmentManager().beginTransaction().replace(R.id.mainFrame, mainFragments[position]).commit(); com.kenumir.eventclip.EventClip.deliver(EventNames.REPLAIO_TAB_OPENED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7883/buggy-version/app.src.main.java.com.wt.pinger.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7860b6af585965d392520e3655f64fb5f4dd5e50", "Url": "https://api.github.com/repos/kenumir/Pinger", "Date": "2017-03-26T10:19:17Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.github.afide.api.app.Application.logger.isInfoEnabled()) { com.github.afide.api.app.Application.logger.info(\"Received tx value: {}\", com.github.afide.api.app.Application.byteArrayToHexSring(tx)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1570/buggy-version/modules.server.src.main.java.com.github.afide.api.app.Application.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String,java.lang.String)"], "Fixed commit": "9fd8979758d1010221ea40acebded62728a957ae", "Url": "https://api.github.com/repos/afide/capraia", "Date": "2017-03-22T01:35:49Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.github.afide.api.app.Application.logger.isDebugEnabled()) { com.github.afide.api.app.Application.logger.debug((\"Received tx value: \" + (com.github.afide.api.app.Application.byteArrayToHexSring(tx)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1570/buggy-version/modules.server.src.main.java.com.github.afide.api.app.Application.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "9fd8979758d1010221ea40acebded62728a957ae", "Url": "https://api.github.com/repos/afide/capraia", "Date": "2017-03-22T01:35:49Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.github.afide.api.app.Application.logger.isDebugEnabled()) { com.github.afide.api.app.Application.logger.debug(\"hash={}\", com.github.afide.api.app.Application.byteArrayToHex(lastBlockHash)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1570/buggy-version/modules.server.src.main.java.com.github.afide.api.app.Application.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,java.lang.String)"], "Fixed commit": "9fd8979758d1010221ea40acebded62728a957ae", "Url": "https://api.github.com/repos/afide/capraia", "Date": "2017-03-22T01:35:49Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.github.afide.api.app.Application.logger.isDebugEnabled()) { com.github.afide.api.app.Application.logger.debug(\"hash={} height={}\", com.github.afide.api.app.Application.byteArrayToHex(lastBlockHash), lastBlockHeight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1570/buggy-version/modules.server.src.main.java.com.github.afide.api.app.Application.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,java.lang.String,long)"], "Fixed commit": "9fd8979758d1010221ea40acebded62728a957ae", "Url": "https://api.github.com/repos/afide/capraia", "Date": "2017-03-22T01:35:49Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (compare > 0) { this.target1 = target1; this.target2 = target2; this.one = target1.getNormalizedSentences(); this.two = target2.getNormalizedSentences(); }else { if ((compare == 0) && ((target1.getOrder()) > (target2.getOrder()))) { this.target1 = target1; this.target2 = target2; this.one = target1.getNormalizedSentences(); this.two = target2.getNormalizedSentences(); }else { this.target1 = target2; this.target2 = target1; this.one = target2.getNormalizedSentences(); this.two = target1.getNormalizedSentences(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3785/buggy-version/src.main.java.decrescendo.smithwaterman.SmithWaterman.java", "BodyUseAPI": [], "Fixed commit": "439ba256162042b889a7eac023d035893202f9df", "Url": "https://api.github.com/repos/y-yusuke/Decrescendo", "Date": "2016-09-11T08:44:24Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.giavacms.richcontent.repository.RichContentRepository.getListSize(getSearch())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size == 0) { return new java.util.ArrayList<org.giavacms.richcontent.model.RichContent>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4733/buggy-version/richcontent.src.main.java.org.giavacms.richcontent.controller.request.RichContentRandomRequestController.java", "BodyUseAPI": [], "Fixed commit": "a0a42e52ddc23e97c8f163a299ab8041fc83f85f", "Url": "https://api.github.com/repos/giavacms/giavacms", "Date": "2013-10-14T08:10:44Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((distance) == 0) || ((elapsedTime) == 0)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7335/buggy-version/app.src.main.java.letshangllc.allfitness.ClassObjects.cardio.CardioSet.java", "BodyUseAPI": [], "Fixed commit": "fa3bc7bf4225ac37dd8ea9e58613ae19c5a28c96", "Url": "https://api.github.com/repos/cburnham4/TotalFitness", "Date": "2016-07-07T12:34:27Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == 1) { beautyListAdapter.refreshBeautyList(baseDatas, startPosition); }else { beautyListAdapter.refreshBeautyList(baseDatas); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4750/buggy-version/app.src.main.java.com.inn.inn.secondpage.SecondFragment.java", "BodyUseAPI": [], "Fixed commit": "bd28453c4b009e4223a6ddebb6414556276477c2", "Url": "https://api.github.com/repos/Mranso/inn", "Date": "2017-01-12T07:02:03Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node == (getOwner())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8969/buggy-version/neutron-examples.neutron-examples-ui.src.main.java.zhy2002.examples.lodgement.rule.EmploymentTypeChangedRuleImpl.java", "BodyUseAPI": [], "Fixed commit": "0757ba96f06e104a05b30829e4217ef3c1a6d1a4", "Url": "https://api.github.com/repos/zhy2002/neutron", "Date": "2017-05-16T11:41:44Z"},
{"Line": "=>536", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.assoc2) != null) { if ((this.isM3uaConnectionActive2) != active) { this.isM3uaConnectionActive2 = active; this.testerHost.sendNotif(org.mobicents.protocols.ss7.tools.simulator.level1.M3uaMan.SOURCE_NAME, (\"M3ua connection2 is \" + (active ? \"active\" : \"not active\")), this.assoc2.getName(), Level.INFO); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/304/buggy-version/tools.simulator.core.src.main.java.org.mobicents.protocols.ss7.tools.simulator.level1.M3uaMan.java", "BodyUseAPI": [], "Fixed commit": "fcb4e5d740ce93a09fcacf3baf22d76aef8ccfba", "Url": "https://api.github.com/repos/Mobicents/jss7", "Date": "2013-09-09T14:49:12Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hearthsim.event.deathrattle.DeathrattleAction.performAction(com.hearthsim.card.minion.Minion,com.hearthsim.model.PlayerSide,com.hearthsim.util.tree.HearthTreeNode,com.hearthsim.card.Deck,com.hearthsim.card.Deck)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((playerSide.getPlayer(toRet).getMinions().size()) + (numMinions_)) > 7) numMinionsToActuallySummon = 7 - (playerSide.getPlayer(toRet).getMinions().size());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3165/buggy-version/src.main.java.com.hearthsim.event.deathrattle.DeathrattleSummonMinionAction.java", "BodyUseAPI": ["com.hearthsim.model.PlayerSide.getPlayer(com.hearthsim.util.tree.HearthTreeNode)", "playerSide.getPlayer(toRet).getMinions().size()", "playerSide.getPlayer(toRet).getMinions()"], "Fixed commit": "62a44be040f72b095f851c17fd48ae5feb258c55", "Url": "https://api.github.com/repos/oyachai/HearthSim", "Date": "2014-12-29T05:57:49Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.csstudio.utility.toolbox.services.FirmaService.findFirmaLike(supplier.getValue())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (similarCompanies != null) { fittingCompanies = similarCompanies; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8680/buggy-version/applications.plugins.org.csstudio.utility.toolbox.src.org.csstudio.utility.toolbox.view.wizard.pdfimport.PdfImportWizardPage3.java", "BodyUseAPI": [], "Fixed commit": "f69b10c3a8197864ca64615a46847b132854b04e", "Url": "https://api.github.com/repos/Desy-extern/cs-studio", "Date": "2017-12-20T15:27:17Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.g414.st9.proto.service.store.KeyValueStorage.clearRequested(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((clearResponse.getStatus()) != (Status.NO_CONTENT.getStatusCode())) { return clearResponse; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5978/buggy-version/src.main.java.com.g414.st9.proto.service.ImportExportResource.java", "BodyUseAPI": [], "Fixed commit": "cf64f154aebd93dbbaeeb41765db6a0b01d0b52e", "Url": "https://api.github.com/repos/sunnygleason/st9-proto-service", "Date": "2011-08-08T16:56:49Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(id.equals(error.id))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2179/buggy-version/dictatetrainer-model.src.main.java.cz.muni.fi.dictatetrainer.error.model.Error.java", "BodyUseAPI": [], "Fixed commit": "ebb8e1051599cdc4594288393acf00ad5e49715b", "Url": "https://api.github.com/repos/xrumanov/dictatetrainer", "Date": "2015-11-30T09:52:38Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(student.equals(error.student))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2179/buggy-version/dictatetrainer-model.src.main.java.cz.muni.fi.dictatetrainer.error.model.Error.java", "BodyUseAPI": [], "Fixed commit": "ebb8e1051599cdc4594288393acf00ad5e49715b", "Url": "https://api.github.com/repos/xrumanov/dictatetrainer", "Date": "2015-11-30T09:52:38Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.wso2.andes.tools.utils.MessageTracer.isEnabled()) { for (org.wso2.andes.kernel.AndesMessage message : currentMessageList) { org.wso2.andes.tools.utils.MessageTracer.trace(message, MessageTracer.CONTENT_WRITTEN_TO_DB); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/526/buggy-version/modules.andes-core.broker.src.main.java.org.wso2.andes.kernel.disruptor.inbound.MessageWriter.java", "BodyUseAPI": [], "Fixed commit": "5a906f6cb9b84452bd7bf84aa9e889a088293ada", "Url": "https://api.github.com/repos/ThilankaBowala/andes", "Date": "2015-08-24T10:06:56Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.wso2.andes.kernel.slot.SlotDeliveryWorker.log.isDebugEnabled()) { org.wso2.andes.kernel.slot.SlotDeliveryWorker.log.debug((((\"Tracker rejected message id= \" + (currentMessage.getMessageID())) + \" from buffering \") + \"to deliver. This is an already buffered message\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/526/buggy-version/modules.andes-core.broker.src.main.java.org.wso2.andes.kernel.slot.SlotDeliveryWorker.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug((((\"Tracker rejected message id= \" + (currentMessage.getMessageID())) + \" from buffering \") + \"to deliver. This is an already buffered message\"))"], "Fixed commit": "5a906f6cb9b84452bd7bf84aa9e889a088293ada", "Url": "https://api.github.com/repos/ThilankaBowala/andes", "Date": "2015-08-24T10:06:56Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.ImmutableSet.copyOf(this.getEntities().values())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(entities.isEmpty())) { this.processEntities(entities); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3143/buggy-version/Fallout-Equestria-The-Game.src.entityFramework.GroupedEntitySystem.java", "BodyUseAPI": ["entityFramework.GroupedEntitySystem.processEntities(com.google.common.collect.ImmutableSet<entityFramework.IEntity>)"], "Fixed commit": "b246e13e6fce6e48983663b84e57ac46131e1a27", "Url": "https://api.github.com/repos/Akodiat/Fallout-Equestria", "Date": "2012-03-27T15:24:48Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cb.needPromotion) { java.lang.System.out.println(\"Proceda com a promo\u00e7\u00e3o antes de fazer jogadas.\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3160/buggy-version/core.src.com.mygdx.game.ChessLogic.java", "BodyUseAPI": [], "Fixed commit": "95b0019a3c3871eea488596f882a42a08bcbfc16", "Url": "https://api.github.com/repos/FelipeDaCosta/xadrez-TP1", "Date": "2017-12-07T13:19:26Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Gdx.app.getType().equals(Application.ApplicationType.Android)) { entityID = java.lang.Integer.parseInt(bivalue[1]); tileID = java.lang.Integer.parseInt(bivalue[3]); }else { entityID = java.lang.Integer.parseInt(bivalue[0]); tileID = java.lang.Integer.parseInt(bivalue[2]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/601/buggy-version/core.src.com.unlucky.map.TileMap.java", "BodyUseAPI": [], "Fixed commit": "7931ffed4edce5b1c38cf456c53148fb741627ed", "Url": "https://api.github.com/repos/mingli1/Unlucky", "Date": "2017-11-24T21:06:07Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((circle.getMacAddress()) != null) { if (circle.getMacAddress().equals(child.getLocationMAC())) { canvas.drawText(child.getName(), ((circle.centerX) - 30), ((circle.centerY) + margin), textChildPaint); canvas.drawCircle(((circle.centerX) - 40), (((circle.centerY) + margin) - 10), 10, smallCirclePaint); margin += 20; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4465/buggy-version/app.src.main.java.bigbrother.child_monitoring_system.FloorView.java", "BodyUseAPI": ["java.lang.String.equals(child.getLocationMAC())", "android.graphics.Canvas.drawText(child.getName(),int,int,android.graphics.Paint)", "bigbrother.child_monitoring_system.FloorView.CircleArea.getMacAddress()", "android.graphics.Canvas.drawCircle(int,int,int,android.graphics.Paint)"], "Fixed commit": "4e190b588df78d12fedf6b7bdfa8a5b559635b54", "Url": "https://api.github.com/repos/LukaASoban/Child-Monitoring-System", "Date": "2017-03-15T18:48:38Z"},
{"Line": "=>658", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!peerNameFound) { ((org.jdiameter.client.api.controller.IRealm) (r)).addPeerName(peerURI.getFQDN()); org.jdiameter.server.impl.MutablePeerTableImpl.logger.debug(\"Adding peerName-{} to realm-{}\", peerURI.getFQDN(), realm); }else { org.jdiameter.server.impl.MutablePeerTableImpl.logger.debug(\"Skipped adding peerName-{} to realm-{}, because it already exists\", peerURI.getFQDN(), realm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1569/buggy-version/core.jdiameter.impl.src.main.java.org.jdiameter.server.impl.MutablePeerTableImpl.java", "BodyUseAPI": [], "Fixed commit": "91eecc878c88c144f68093f19faa5d34af663e58", "Url": "https://api.github.com/repos/ssserj/jdiameter", "Date": "2015-09-02T09:10:50Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (master == null) master = new edu.cmu.ml.proppr.prove.wam.WamBaseProgram();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7995/buggy-version/src.java.main.edu.cmu.ml.proppr.prove.wam.WamQueryProgram.java", "BodyUseAPI": [], "Fixed commit": "0745f1d40112db77236d2d55ca92a79cde63d55e", "Url": "https://api.github.com/repos/TeamCohen/ProPPR", "Date": "2015-09-18T19:10:02Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.util.math.AxisAlignedBB.calculateIntercept(net.minecraft.util.math.Vec3d,net.minecraft.util.math.Vec3d)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (crankTopPos != null) { lookObject = crankTopPos; distance = start.distanceTo(crankTopPos.hitVec); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1183/buggy-version/src.main.java.tech.flatstone.appliedlogistics.common.blocks.misc.BlockCrank.java", "BodyUseAPI": ["net.minecraft.util.math.Vec3d.distanceTo(crankTopPos.hitVec)"], "Fixed commit": "f305836a591f3d9e1e995b8ff0fd8dbd34543a0c", "Url": "https://api.github.com/repos/FlatStoneTech/AppliedLogistics", "Date": "2016-06-13T02:06:53Z"},
{"Line": "=>767", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rule.isFunction()) { rule = rule.getFreshRule(termContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3816/buggy-version/src.javasources.KTool.src.org.kframework.backend.java.symbolic.KILtoBackendJavaKILTransformer.java", "BodyUseAPI": ["org.kframework.backend.java.kil.Rule.getFreshRule(org.kframework.backend.java.kil.TermContext)"], "Fixed commit": "7e21421e5daa6ca8da617075857a6df3374aa549", "Url": "https://api.github.com/repos/dwightguth/k", "Date": "2014-05-20T20:32:02Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.app.woney.activity.MainActivity.currentPosition) == 1) { startActivity(new android.content.Intent(this, com.app.woney.dialog.WinDialog.class)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1324/buggy-version/app.src.main.java.com.app.woney.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "cf04ff7589131196fd39d4ce43314ed61a7f65e5", "Url": "https://api.github.com/repos/dazlee/Woney-Android", "Date": "2016-12-20T17:32:39Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.listReservations.getReservations()) != null) { for (int i = 0; i < (listReservations.getReservations().size()); ++i) { if (!(listReservations.getReservations().get(i).isAccepted())) listBorrowing.add(listReservations.getReservations().get(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3460/buggy-version/src.Gestion.ListBorrowing.java", "BodyUseAPI": [], "Fixed commit": "e331dcd8ce307f4e0758846631030ca45e4aa5cc", "Url": "https://api.github.com/repos/lykin06/gestionnaire", "Date": "2014-01-24T14:12:49Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.ebi.pride.utilities.data.controller.DataAccessController.getPeptideTheoreticalMz(java.lang.Comparable,java.lang.Comparable)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (theoreticalMz == (-1)) deltaMass = uk.ac.ebi.pride.utilities.mol.MoleculeUtilities.calculateDeltaMz(sequence, mz, charge, ptmMasses); else deltaMass = uk.ac.ebi.pride.utilities.mol.MoleculeUtilities.calculateDeltaMz(mz, charge, theoreticalMz);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7025/buggy-version/src.main.java.uk.ac.ebi.pride.toolsuite.gui.component.table.TableDataRetriever.java", "BodyUseAPI": ["uk.ac.ebi.pride.utilities.mol.MoleculeUtilities.calculateDeltaMz(double,java.lang.Integer,double)"], "Fixed commit": "54b17ec62b78e230bbc1c5fd5ef85cc8a70530a9", "Url": "https://api.github.com/repos/PRIDE-Toolsuite/pride-inspector", "Date": "2015-02-06T17:00:24Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e instanceof wycs.io.Expr.TupleLoad) { write(wf, ((wycs.io.Expr.TupleLoad) (e))); }else { internalFailure((\"unknown expression encountered \" + e), wf.filename(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1061/buggy-version/modules.wycs.src.wycs.io.WycsFilePrinter.java", "BodyUseAPI": ["wycs.io.WycsFilePrinter.internalFailure((\"unknown expression encountered \" + e),wf.filename(),wycs.io.Expr)"], "Fixed commit": "b45b95ef21eacd55cce4f163d1011c027d5444d0", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2013-03-22T07:53:54Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((split.length) == 1) files[i][1] = new java.io.File(java.lang.System.getProperty(\"user.dir\")); else files[i][1] = new java.io.File(split[1]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5899/buggy-version/src.com.coddotech.teamsubb.updater.VersionUpdate.java", "BodyUseAPI": [], "Fixed commit": "ec22864a658d44dfc6238a5b12da66b2601fc028", "Url": "https://api.github.com/repos/coddo/TeamSubb-Updater", "Date": "2014-02-14T22:43:19Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stacksync.desktop.db.models.CloneWorkspace.clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((remote.getParentId()) != null) { com.stacksync.desktop.db.models.CloneFile parentCF = db.getFileOrFolder(remote.getParentId()); remote.setPathWorkspace((((parentCF.getFile().getAbsolutePath()) + (java.io.File.separator)) + (uwn.getFolderName()))); }else { remote.setPathWorkspace((\"/\" + (uwn.getFolderName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6344/buggy-version/src.com.stacksync.desktop.syncserver.RemoteClientImpl.java", "BodyUseAPI": ["com.stacksync.desktop.db.DatabaseHelper.getFileOrFolder(remote.getParentId())", "com.stacksync.desktop.db.models.CloneWorkspace.setPathWorkspace((\"/\" + (uwn.getFolderName())))", "com.stacksync.desktop.db.models.CloneWorkspace.getParentId()", "com.stacksync.desktop.db.models.CloneWorkspace.setPathWorkspace((((parentCF.getFile().getAbsolutePath()) + (java.io.File.separator)) + (uwn.getFolderName())))"], "Fixed commit": "123a14d7757d02b83717e1cdd62184bfceb01c9c", "Url": "https://api.github.com/repos/stacksync/desktop", "Date": "2014-03-11T10:55:44Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.Color) != color) { this.previousStates.add(this.Color); this.Color = color; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3561/buggy-version/app.src.main.java.com.somestupidappproject.betago.Point.java", "BodyUseAPI": [], "Fixed commit": "655be3bdcf237957fdc8bade846858cddd76f075", "Url": "https://api.github.com/repos/sshwang/BetaGo", "Date": "2017-07-14T03:22:26Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (JbootrpcConfig.REGISTRY_TYPE_CONSUL.equals(jbootrpcConfig.getRegistryType())) { registryConfig.setRegProtocol(\"jbootconsul\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1108/buggy-version/src.main.java.io.jboot.core.rpc.motan.JbootMotanrpc.java", "BodyUseAPI": [], "Fixed commit": "7b6a46a10c5d00e5131905a91465a7550ff44d7c", "Url": "https://api.github.com/repos/yangfuhai/jboot", "Date": "2017-11-10T06:11:36Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.unicaen.info.dnr.rssapp.manager.EntryManager.getItemsById(bundle.getLong(\"id\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((items.get(i).getStringPubDate()) != \"\") element.put(\"date\", ((java.text.DateFormat.getDateTimeInstance().format(items.get(i).getPubDate())) + \"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1343/buggy-version/app.src.main.java.fr.unicaen.info.dnr.rssapp.RssItemActivity.java", "BodyUseAPI": ["items.get(i).getPubDate()", "java.util.List<fr.unicaen.info.dnr.rssapp.entity.RSSItem>.get(int)", "java.text.DateFormat.format(items.get(i).getPubDate())", "java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,((java.text.DateFormat.getDateTimeInstance().format(items.get(i).getPubDate())) + \"\"))"], "Fixed commit": "d6d542276630a97fa5117eabc28cbd3460d8ba1b", "Url": "https://api.github.com/repos/yboyer/rssfeed_reader", "Date": "2017-01-25T14:00:40Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.worldObj.isRemote)) { net.minecraft.client.Minecraft.getMinecraft().thePlayer.addChatMessage(new net.minecraft.util.ChatComponentText((\"Multiblock completeness: \" + complete))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7145/buggy-version/src.main.java.com.johngalt.gulch.tileentities.GaltMoldStationTileEntity.java", "BodyUseAPI": [], "Fixed commit": "67c2094479df699cbe6faf235629274d9a1bd3da", "Url": "https://api.github.com/repos/Aristo7/Gulch", "Date": "2014-11-03T00:39:35Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (playerArgs.has(\"ps\")) { ps = playerArgs.get(\"ps\").toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4581/buggy-version/app.src.main.java.org.schabi.newpipe.extractor.services.youtube.YoutubeStreamExtractor.java", "BodyUseAPI": [], "Fixed commit": "851028997afa8b5a7b6c62bb7cd74a50bd19a57b", "Url": "https://api.github.com/repos/rrooij/NewPipe", "Date": "2016-02-21T20:15:39Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.search.UserSearchProperty.isCaseInsensitive()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (caseInsensitive) { hay = hay.toLowerCase(); needle = needle.toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6175/buggy-version/core.src.main.java.hudson.model.AutoCompletionCandidates.java", "BodyUseAPI": [], "Fixed commit": "6b933bd383824e94f672b8e3bd66ed36f111a7a0", "Url": "https://api.github.com/repos/DavidRutqvist/jenkins", "Date": "2016-10-11T14:38:23Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jtalks.jcommune.web.dto.EditUserProfileDto.getUserContactsDto()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dto == null) { return contacts; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4461/buggy-version/jcommune-view.jcommune-web-controller.src.main.java.org.jtalks.jcommune.web.dto.EditUserProfileDto.java", "BodyUseAPI": [], "Fixed commit": "e2ec71b1c4e22c8bdbc4dd575f19d504b7b13cd4", "Url": "https://api.github.com/repos/jtalks-org/jcommune", "Date": "2014-03-11T18:46:14Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.floor(float)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (r == max) { r--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8837/buggy-version/src.main.java.Helpers.MathHelper.java", "BodyUseAPI": [], "Fixed commit": "2fa350110f2accd3184093435c741f994ae3171d", "Url": "https://api.github.com/repos/robag-agrav/Neural-Network", "Date": "2017-04-03T07:48:05Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numberOfTricksPlayed) >= 10) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1678/buggy-version/RookAndroid.src.com.plnu.gamecode.Game.java", "BodyUseAPI": [], "Fixed commit": "753f727c08fa551bd4d267b95fcdf3f8aec1beac", "Url": "https://api.github.com/repos/kendallhwilson/KoorAndroid", "Date": "2015-02-02T12:32:17Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(packageName.equals(com.plugin.core.PluginLoader.getApplicatoin().getPackageName()))) { com.plugin.content.PluginDescriptor pluginDescriptor = com.plugin.core.manager.PluginManagerHelper.getPluginDescriptorByPluginId(packageName); if (pluginDescriptor != null) { return com.plugin.core.PluginLoader.getApplicatoin().getPackageManager().getPackageArchiveInfo(pluginDescriptor.getInstalledPath(), ((int) (args[1]))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/912/buggy-version/PluginCore.src.com.plugin.core.systemservice.AndroidAppIPackageManager.java", "BodyUseAPI": ["com.plugin.core.manager.PluginManagerHelper.getPluginDescriptorByPluginId(java.lang.String)"], "Fixed commit": "dae40db1f21b0e25c3b90f5ebbcd203b6a1c5712", "Url": "https://api.github.com/repos/limpoxe/Android-Plugin-Framework", "Date": "2016-03-28T06:38:03Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(packageName.equals(com.plugin.core.PluginLoader.getApplicatoin().getPackageName()))) { com.plugin.content.PluginDescriptor pluginDescriptor = com.plugin.core.manager.PluginManagerHelper.getPluginDescriptorByPluginId(packageName); if (pluginDescriptor != null) { return com.plugin.core.systemservice.AndroidAppIPackageManager.getApplicationInfo(pluginDescriptor); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/912/buggy-version/PluginCore.src.com.plugin.core.systemservice.AndroidAppIPackageManager.java", "BodyUseAPI": ["com.plugin.core.manager.PluginManagerHelper.getPluginDescriptorByPluginId(java.lang.String)"], "Fixed commit": "dae40db1f21b0e25c3b90f5ebbcd203b6a1c5712", "Url": "https://api.github.com/repos/limpoxe/Android-Plugin-Framework", "Date": "2016-03-28T06:38:03Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((oldFileName) != null) { java.io.File tempFile = new java.io.File(oldFileName); tempFile.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4097/buggy-version/source-code.app.src.main.java.org.buildmlearn.toolkit.activity.TemplateEditor.java", "BodyUseAPI": [], "Fixed commit": "05b40afdbda1459ccd9366b4ea5cac0c1a7c582b", "Url": "https://api.github.com/repos/BuildmLearn/BuildmLearn-Toolkit-Android", "Date": "2015-06-23T09:54:34Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((com.fuelbuddy.mobile.map.event.OnPriceClickEvent) (event)).getGasStationModel()) != null) { com.fuelbuddy.mobile.model.GasStationModel gasStationModel = ((com.fuelbuddy.mobile.map.event.OnPriceClickEvent) (event)).getGasStationModel(); mapController.centerOnPosition(true, com.fuelbuddy.mobile.util.MapUtil.getLatLng(gasStationModel.getGasStationLatitude(), gasStationModel.getGasStationLongitude())); mCallbacks.onInfoShow(gasStationModel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2004/buggy-version/presentation.src.main.java.com.fuelbuddy.mobile.map.fragment.MapFragment.java", "BodyUseAPI": ["com.fuelbuddy.mobile.base.Event.getGasStationModel()"], "Fixed commit": "15faea1d8f3241e061189ad863225e6f57f7a613", "Url": "https://api.github.com/repos/otofsky/FuelBuddy", "Date": "2017-04-17T13:39:00Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listLatLng != null) && (!(listLatLng.isEmpty()))) { for (com.google.android.gms.maps.model.LatLng latLng : listLatLng) { bounds.include(latLng); } mMap.animateCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngBounds(bounds.build(), 200)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2004/buggy-version/presentation.src.main.java.com.fuelbuddy.mobile.map.controller.MapController.java", "BodyUseAPI": [], "Fixed commit": "15faea1d8f3241e061189ad863225e6f57f7a613", "Url": "https://api.github.com/repos/otofsky/FuelBuddy", "Date": "2017-04-17T13:39:00Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.as.console.client.widgets.forms.Form<org.jboss.as.console.client.domain.model.Server>.getChangedValues()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (changedValues.containsKey(\"portOffset\")) changedValues.put(\"socketBinding\", updatedEntity.getSocketBinding());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2063/buggy-version/standalone.src.main.java.org.jboss.as.console.client.domain.hosts.ServerConfigView.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,updatedEntity.getSocketBinding())"], "Fixed commit": "47717ae051e0b1e8a84c5b6a2c9093c8f41f11c5", "Url": "https://api.github.com/repos/heiko-braun/as7-console", "Date": "2011-04-26T13:00:17Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p2 == (notAllowed)) return p1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4760/buggy-version/mod.pattern.src.main.com.thaiopensource.relaxng.pattern.ValidatorPatternBuilder.java", "BodyUseAPI": [], "Fixed commit": "ce84875644b1ac7a11277617dcf602194b7dff36", "Url": "https://api.github.com/repos/relaxng/jing-trang", "Date": "2013-03-30T01:22:45Z"},
{"Line": "=>562", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(clSel instanceof com.orientechnologies.orient.server.distributed.OLocalClusterStrategy)) throw new com.orientechnologies.orient.server.distributed.ODistributedException(((\"Cannot install local cluster strategy on class '\" + (cls.getName())) + \"'\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1487/buggy-version/distributed.src.main.java.com.orientechnologies.orient.server.distributed.ODistributedStorage.java", "BodyUseAPI": [], "Fixed commit": "5a4f8e919c043f350cab5e1587c8cb525078d049", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-04-21T08:41:28Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ops.length) == 1) { return ops[0].compute(input, output); }else { @java.lang.SuppressWarnings(\"unchecked\") net.imglib2.ops.operation.UnaryOutputOperation<B, B>[] follower = new net.imglib2.ops.operation.UnaryOutputOperation[(ops.length) - 1]; java.lang.System.arraycopy(ops, 1, follower, 0, follower.length); return net.imglib2.ops.operation.Operations.compute(input, output, ops[0], net.imglib2.ops.operation.Operations.concat(follower)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5919/buggy-version/ops.src.main.java.net.imglib2.ops.operation.Operations.java", "BodyUseAPI": ["java.lang.System.arraycopy(net.imglib2.ops.operation.UnaryOutputOperation<B, B>[],int,net.imglib2.ops.operation.UnaryOutputOperation<B, B>[],int,follower.length)", "ops[0].compute(B,B)", "net.imglib2.ops.operation.Operations.compute(B,B,ops[0],net.imglib2.ops.operation.PipedUnaryOperation)"], "Fixed commit": "9d94a1a3a2b768305bc14fdaa9f87c51459c6fc3", "Url": "https://api.github.com/repos/imagej/imglib", "Date": "2013-07-19T12:10:07Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["janala.interpreters.Frame.pop()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((ref.concrete) == null) { currentFrame.push(PlaceHolder.instance); }else { currentFrame.push(new janala.interpreters.IntValue(ref.concrete.length)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/62/buggy-version/src.janala.interpreters.ConcolicInterpreter.java", "BodyUseAPI": ["janala.interpreters.Frame.push(janala.interpreters.IntValue)"], "Fixed commit": "1a5c55de2ee48fc2fdf30d9b79c661b6dcc1de8e", "Url": "https://api.github.com/repos/ksen007/janala2", "Date": "2013-12-09T05:52:21Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((dataFormat) == null) || (dataFormat.isEmpty())) { dateFormatter = java.text.DateFormat.getDateInstance(java.text.DateFormat.DEFAULT, workbook.getLocale()); }else { dateFormatter = new java.text.SimpleDateFormat(dataFormat, workbook.getLocale()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/510/buggy-version/meja.src.com.dua3.meja.model.generic.GenericCellStyle.java", "BodyUseAPI": [], "Fixed commit": "1771255ec3b5dcee08730813ef612aed6b49e647", "Url": "https://api.github.com/repos/xzel23/meja", "Date": "2015-07-22T12:03:11Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (funct.equals(\"print\")) { args = input.substring(((input.indexOf(\"(\")) + 1), input.indexOf(\")\")).split(\",\"); }else { args = input.substring(((input.indexOf(\"(\")) + 1), input.indexOf(\")\")).replaceAll(\" \", \"\").split(\",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1030/buggy-version/src.main.java.com.florianwoelki.flow.function.FunctionManager.java", "BodyUseAPI": [], "Fixed commit": "bc3c5a25406e8f8e56ba92452f1e084ca6010759", "Url": "https://api.github.com/repos/FlorianWoelki/Flow-Lang", "Date": "2016-11-15T12:18:28Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.PsiElement.getPrevPsiSibling()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (previous instanceof com.jetbrains.php.lang.documentation.phpdoc.psi.impl.PhpDocCommentImpl) { previous = ((com.jetbrains.php.lang.documentation.phpdoc.psi.impl.PhpDocCommentImpl) (previous)).getPrevPsiSibling(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6723/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.MultiAssignmentUsageInspector.java", "BodyUseAPI": [], "Fixed commit": "8a825692624e146735a5e6f1fc84f39f024ba8b5", "Url": "https://api.github.com/repos/kalessil/phpinspectionsea", "Date": "2016-11-05T17:42:24Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (getMissingLocaleVersionMap().containsKey(localeId)) { return getMissingLocaleVersionMap().get(localeId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4873/buggy-version/zanata-war.src.main.java.org.zanata.action.VersionGroupHomeAction.java", "BodyUseAPI": ["java.util.Map<org.zanata.common.LocaleId, java.util.List<org.zanata.model.HProjectIteration>>.get(org.zanata.common.LocaleId)"], "Fixed commit": "c5d18c14e40138a374259dc0f43d145cdf7eee4d", "Url": "https://api.github.com/repos/zanata/zanata-server", "Date": "2013-11-22T04:01:47Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (line.contains(io.github.achtern.AchternEngine.core.resource.fileparser.GLSLParser.TOKEN_SINGLE_LINE_COMMENT)) { line = line.substring(0, line.indexOf(io.github.achtern.AchternEngine.core.resource.fileparser.GLSLParser.TOKEN_SINGLE_LINE_COMMENT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5551/buggy-version/src.main.java.io.github.achtern.AchternEngine.core.resource.fileparser.GLSLParser.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "2dad90bc3071ceccea3b508a675dc648b20f34dd", "Url": "https://api.github.com/repos/achtern/AchternEngine", "Date": "2014-08-15T13:49:42Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.core.startLine) == (this.core.endLine)) { text.append(this.core.startLine); }else { text.append(this.core.startLine); text.append(\"...\"); text.append(this.core.endLine); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3687/buggy-version/TinyPDG.src.yoshikihigo.tinypdg.cfg.node.CFGNode.java", "BodyUseAPI": ["java.lang.StringBuilder.append(this.core.startLine)", "java.lang.StringBuilder.append(this.core.startLine)", "java.lang.StringBuilder.append(this.core.endLine)"], "Fixed commit": "e64294395fc4faf4f06760541231e802e300bcb8", "Url": "https://api.github.com/repos/YoshikiHigo/TinyPDG", "Date": "2013-05-23T05:05:01Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data.isEmpty()) activity.getEmptyTextView().setVisibility(View.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5251/buggy-version/app.src.main.java.learn.com.smssender.screen.controller.MainController.java", "BodyUseAPI": [], "Fixed commit": "80a472db7a0a3dc6d5a2997458166e216d613686", "Url": "https://api.github.com/repos/umarfarisi/SMSSenders", "Date": "2017-05-13T18:00:50Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.rokru.experiment_x.ExperimentX.titleBar) setPreferredSize(size);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/9071/buggy-version/src.com.rokru.experiment_x.gui.MainMenu.java", "BodyUseAPI": [], "Fixed commit": "b405cb7c2f7be25b2b39fe7ab51b45ff6461fb91", "Url": "https://api.github.com/repos/coolawesomeme/Experiment-X", "Date": "2014-09-15T01:00:51Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (elist != null) { checkExpressionSubtree(elist, getIndent(), false, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1356/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.indentation.NewHandler.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.checks.indentation.NewHandler.checkExpressionSubtree(com.puppycrawl.tools.checkstyle.api.DetailAST,getIndent(),boolean,boolean)"], "Fixed commit": "c5735a082408a0c414437527f53b0f8009c8da76", "Url": "https://api.github.com/repos/yliu224/checkstyle", "Date": "2017-03-15T16:57:42Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parts.length) > 0) { normalized = parts[0]; filing = parts[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4983/buggy-version/src.main.java.edu.upenn.library.solrplugins.MultiPartString.java", "BodyUseAPI": [], "Fixed commit": "b43d4d360e2a98f36238ab71ff5cad3864b20d68", "Url": "https://api.github.com/repos/codeforkjeff/solrplugins", "Date": "2016-10-28T21:06:33Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (cr != null) { cr.setEntity(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/9103/buggy-version/modules.jersey.src.main.java.org.atmosphere.jersey.util.JerseyBroadcasterUtil.java", "BodyUseAPI": ["com.sun.jersey.spi.container.ContainerResponse.setEntity(<nulltype>)"], "Fixed commit": "b7f2c875c37289752aeb75465ae02cfebc9446ec", "Url": "https://api.github.com/repos/Atmosphere/atmosphere", "Date": "2011-12-20T13:47:28Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.gmail.jakekinsella.robot.PathPart>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pathPart == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/311/buggy-version/src.com.gmail.jakekinsella.robot.LinePath.java", "BodyUseAPI": [], "Fixed commit": "4b54dade2c43ae6dd639a83eb17b0eb510af42fa", "Url": "https://api.github.com/repos/TheLocust3/FRC-AI-Engine", "Date": "2017-01-31T15:34:19Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currentPath) != null) { com.gmail.jakekinsella.robot.PathPart currentPart = this.currentPath.getCurrentPath(); if (currentPart != null) { currentPart.execute(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/311/buggy-version/src.com.gmail.jakekinsella.robot.RobotControl.java", "BodyUseAPI": [], "Fixed commit": "4b54dade2c43ae6dd639a83eb17b0eb510af42fa", "Url": "https://api.github.com/repos/TheLocust3/FRC-AI-Engine", "Date": "2017-01-31T15:34:19Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((pupil.center.x) == 0) && ((pupil.center.y) == 0)) { reset(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4483/buggy-version/src.OctoEye.java", "BodyUseAPI": [], "Fixed commit": "400045c0709e3cb76aed9b18e2a76e5279df7883", "Url": "https://api.github.com/repos/muellmat/OctoEye", "Date": "2014-12-17T12:13:27Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((usrNameEditText.getText().toString().equals(\"\")) || (usrPassEditText.getText().toString().equals(\"\"))) toastMsg(\"\u7528\u6237\u540d\u6216\u5bc6\u7801\u4e0d\u80fd\u4e3a\u7a7a\"); else login();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2406/buggy-version/git@github.com:richarddan.Inquiry.git.wa.android.common.activity.WelcomeActivity.src.wa.android.common.activity.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "8f5d8c2f59a54f2307ca4f40dfb93fba91aba764", "Url": "https://api.github.com/repos/richarddan/Inquiry", "Date": "2012-12-07T02:24:52Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<Stretch>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((stretch.getDriver()) != null) { int driver = (stretch.getDriver().key()) - 2012; drivers[driver] += stretch.duration(); daily_drivers[driver] = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1488/buggy-version/Timetable.java", "BodyUseAPI": ["stretch.getDriver().key()", "Stretch.duration()", "Stretch.getDriver()"], "Fixed commit": "f29a041e95b3d231d4f85cdaeb6c0304dcfa25f6", "Url": "https://api.github.com/repos/nicgarner/IBMS", "Date": "2013-03-20T22:27:05Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (content.equals(oldContent)) { content += ((\"\\n\" + (setting.getKey())) + \" = \") + (setting.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4716/buggy-version/src.com.gitblit.FileSettings.java", "BodyUseAPI": [], "Fixed commit": "f3ff376a5eb945f15329b66bbb7d69ed3ca2ce3f", "Url": "https://api.github.com/repos/jcrygier/gitblit", "Date": "2012-08-04T00:39:50Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["infinity.gui.hexview.ResourceMenuCreator.createStructEntries(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(list.isEmpty())) { popup.addSeparator(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8861/buggy-version/src.infinity.gui.hexview.ResourceMenuCreator.java", "BodyUseAPI": [], "Fixed commit": "52a04d6f27514c82b5bdb50ea360ab02168d7f94", "Url": "https://api.github.com/repos/NearInfinityBrowser/NearInfinity", "Date": "2014-11-01T17:26:03Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((record.level()) == null) return record.msg();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/169/buggy-version/src.com.poixson.commonjava.xLogger.formatters.defaultLogFormatter.java", "BodyUseAPI": ["com.poixson.commonjava.xLogger.xLogRecord.msg()"], "Fixed commit": "ad70786c3ec7292a833c24097c9b9cc608b56605", "Url": "https://api.github.com/repos/GrowControl/pxnCommon", "Date": "2015-03-05T21:43:06Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((state1.getNextState(ch)) == null) || ((state2.getNextState(ch)) == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6808/buggy-version/src.lab2.automata.Automata.java", "BodyUseAPI": [], "Fixed commit": "c9788abe6952747531eaa940ac29a9a077618607", "Url": "https://api.github.com/repos/WslF/equivalent-automates", "Date": "2014-11-16T20:22:15Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i.range()) != null) { annotation.registerFix(new org.sonarlint.intellij.actions.NoSonarIntentionAction(i.range())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3313/buggy-version/src.main.java.org.sonarlint.intellij.editor.SonarExternalAnnotator.java", "BodyUseAPI": ["org.sonarlint.intellij.issue.IssuePointer.range()", "com.intellij.lang.annotation.Annotation.registerFix(org.sonarlint.intellij.actions.NoSonarIntentionAction)"], "Fixed commit": "911d5ab7664c8a60011d82b77802af131224aeb1", "Url": "https://api.github.com/repos/SonarSource/sonarlint-intellij", "Date": "2016-01-13T08:20:55Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((embeddedServer) == null) { embeddedServer = com.amazonaws.serverless.proxy.spark.embeddedserver.LambdaEmbeddedServerFactory.getServerInstance(); if ((startupHandler) != null) { startupHandler.onStartup(com.amazonaws.serverless.proxy.spark.SparkLambdaContainerHandler.getServletContext()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6697/buggy-version/aws-serverless-java-container-spark.src.main.java.com.amazonaws.serverless.proxy.spark.SparkLambdaContainerHandler.java", "BodyUseAPI": [], "Fixed commit": "0e762c6a886581131f55898d1caa1e9dba1137ee", "Url": "https://api.github.com/repos/awslabs/aws-serverless-java-container", "Date": "2017-07-03T19:34:38Z"},
{"Line": "=>508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (appVariantContext.getAtlasExtension().getMultiDexConfigs())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4756/buggy-version/atlas-gradle-plugin.atlas-plugin.src.main.java.com.taobao.android.builder.manager.AtlasAppTaskManager.java", "BodyUseAPI": [], "Fixed commit": "ff9cc7c657052d8d9e256aed537f3b3b814c1634", "Url": "https://api.github.com/repos/alibaba/atlas", "Date": "2017-05-15T05:47:23Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (view != null) { final ch.blinkenlights.android.vanilla.MediaAdapter.ViewHolder tmpHolder = ((ch.blinkenlights.android.vanilla.MediaAdapter.ViewHolder) (view.getTag())); expandable = tmpHolder.expandable; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6209/buggy-version/src.ch.blinkenlights.android.vanilla.MediaAdapter.java", "BodyUseAPI": ["android.view.View.getTag()"], "Fixed commit": "7096db11c3ae8fed82b3ebc5c644985b4b2ddb95", "Url": "https://api.github.com/repos/mpr90/vanilla", "Date": "2013-06-21T12:04:58Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (options.isUpdateOnly()) { return true; }else { return generateExternalReports(engine); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8203/buggy-version/src.main.java.org.jenkinsci.plugins.DependencyCheck.DependencyCheckExecutor.java", "BodyUseAPI": [], "Fixed commit": "58422e5084bcc3203b43ef1a74628c4964b03ffa", "Url": "https://api.github.com/repos/jenkinsci/dependency-check-plugin", "Date": "2017-06-18T03:04:47Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (success == false) db.clearInstructions();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2825/buggy-version/src.Model.Processor.java", "BodyUseAPI": [], "Fixed commit": "3ce81f1415c5cb27b03ce683b2d173d72a11978f", "Url": "https://api.github.com/repos/Vandenn/MicroMIPSAlpha", "Date": "2016-12-11T15:17:45Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.remoting.Channel.current()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currentChannel == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1180/buggy-version/src.main.java.org.jenkinsci.plugins.gitclient.LegacyCompatibleGitAPIImpl.java", "BodyUseAPI": [], "Fixed commit": "2ffa3b8a67e954c99121c54f8a953d1d53bb08c8", "Url": "https://api.github.com/repos/MarkEWaite/git-client-plugin", "Date": "2017-12-25T18:45:20Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.remoting.Channel.current()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currentChannel == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1180/buggy-version/src.main.java.org.jenkinsci.plugins.gitclient.AbstractGitAPIImpl.java", "BodyUseAPI": [], "Fixed commit": "2ffa3b8a67e954c99121c54f8a953d1d53bb08c8", "Url": "https://api.github.com/repos/MarkEWaite/git-client-plugin", "Date": "2017-12-25T18:45:20Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.acc.parser.StatSequence.parse()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((rightTree.getJoin()) != null) { join.setRight(rightTree.getJoin()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1147/buggy-version/src.com.acc.parser.WhileParser.java", "BodyUseAPI": ["com.acc.structure.BasicBlock.setRight(rightTree.getJoin())", "com.acc.parser.Result.getJoin()"], "Fixed commit": "5e32ff528b7ab91a511581bc58b13ff4c7f3112a", "Url": "https://api.github.com/repos/SEresearch/acc", "Date": "2015-03-09T01:08:23Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i) != 0) { mCountDownTimer.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/439/buggy-version/MyApplication4.app.src.main.java.com.example.stefmaggle.myapplication.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9c33de02063ed6011a0140d3aa2001a003f0b7db", "Url": "https://api.github.com/repos/Raph33000/Miskino", "Date": "2015-12-08T17:21:34Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["r48.map.mapinfos.IRMLikeMapInfoBackend.getOrderOfMap(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (order != origOrder) return r48.map.mapinfos.MapInfoReparentUtil.findChildrenLastOrder(key, operators);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3470/buggy-version/src.main.java.r48.map.mapinfos.MapInfoReparentUtil.java", "BodyUseAPI": [], "Fixed commit": "1803ffde0d3512fb62f1cbd3620c56a03df53a6e", "Url": "https://api.github.com/repos/20kdc/gabien-app-r48", "Date": "2017-06-15T19:18:16Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["r48.map.mapinfos.IRMLikeMapInfoBackend.getOrderOfMap(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (order2 > order) { order = order2; key = key2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3470/buggy-version/src.main.java.r48.map.mapinfos.MapInfoReparentUtil.java", "BodyUseAPI": [], "Fixed commit": "1803ffde0d3512fb62f1cbd3620c56a03df53a6e", "Url": "https://api.github.com/repos/20kdc/gabien-app-r48", "Date": "2017-06-15T19:18:16Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["guiHands[playerNumber].getClickedCard(mouseClickList.poll())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cardIndex == (-1)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1539/buggy-version/src.ca.claytonrogers.Client.Application.java", "BodyUseAPI": [], "Fixed commit": "02a079c22aa48ec48777cbcd986d8ebcb0143ee6", "Url": "https://api.github.com/repos/clayton-rogers/12Golf", "Date": "2015-07-14T04:20:10Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lanthanh.admin.icareapp.Register.SignInFragment.parseJWT(jObJWT.getString(\"jwt\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (check) { if (sharedPref.getString(\"active\", \"0\").equals(\"0\")) { ((com.lanthanh.admin.icareapp.Register.RegisterActivity) (getActivity())).navigateToUserInfo(); }else { ((com.lanthanh.admin.icareapp.Register.RegisterActivity) (getActivity())).navigateToBookingActivity(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3806/buggy-version/iCareApp.app.src.main.java.com.lanthanh.admin.icareapp.Register.SignInFragment.java", "BodyUseAPI": [], "Fixed commit": "feccf5ec85b2597ca9d91fd3356b5caa500dc23d", "Url": "https://api.github.com/repos/LiamNguyen/DrQMuller-AndroidProject", "Date": "2016-12-05T00:39:49Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((validateChecksum) && (i == ((argv.length) - 1))) { specifiedChecksum = argv[i]; }else { org.joval.oval.di.Main.print(org.joval.oval.di.Main.getMessage(\"WARNING_ARG\", argv[i])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3948/buggy-version/src.org.joval.oval.di.ExecutionState.java", "BodyUseAPI": ["org.joval.oval.di.Main.getMessage(java.lang.String,java.lang.String)", "org.joval.oval.di.Main.print(org.joval.oval.di.Main.getMessage(\"WARNING_ARG\", argv[i]))"], "Fixed commit": "339bebf18c895e6d5c3175bc758b8ec5a2ab1b3b", "Url": "https://api.github.com/repos/joval/jOVAL", "Date": "2012-06-11T17:55:03Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (innerIterator.hasNext()) { return innerIterator.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3020/buggy-version/junior.junior_chapter_001.src.main.java.ru.job4j.iterators.Converter.java", "BodyUseAPI": ["java.util.Iterator<java.lang.Integer>.next()"], "Fixed commit": "e1cec8dc7e0df92cd029a89080193c32b9e5905e", "Url": "https://api.github.com/repos/ryazanovvv/vryazanov", "Date": "2017-12-15T11:39:53Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (innerIterator.hasNext()) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3020/buggy-version/junior.junior_chapter_001.src.main.java.ru.job4j.iterators.Converter.java", "BodyUseAPI": [], "Fixed commit": "e1cec8dc7e0df92cd029a89080193c32b9e5905e", "Url": "https://api.github.com/repos/ryazanovvv/vryazanov", "Date": "2017-12-15T11:39:53Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(iterator.hasNext())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3020/buggy-version/junior.junior_chapter_001.src.main.java.ru.job4j.iterators.Converter.java", "BodyUseAPI": [], "Fixed commit": "e1cec8dc7e0df92cd029a89080193c32b9e5905e", "Url": "https://api.github.com/repos/ryazanovvv/vryazanov", "Date": "2017-12-15T11:39:53Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (iterator.hasNext()) { innerIterator = iterator.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3020/buggy-version/junior.junior_chapter_001.src.main.java.ru.job4j.iterators.Converter.java", "BodyUseAPI": ["java.util.Iterator<java.util.Iterator<java.lang.Integer>>.next()"], "Fixed commit": "e1cec8dc7e0df92cd029a89080193c32b9e5905e", "Url": "https://api.github.com/repos/ryazanovvv/vryazanov", "Date": "2017-12-15T11:39:53Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((innerIterator) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3020/buggy-version/junior.junior_chapter_001.src.main.java.ru.job4j.iterators.Converter.java", "BodyUseAPI": [], "Fixed commit": "e1cec8dc7e0df92cd029a89080193c32b9e5905e", "Url": "https://api.github.com/repos/ryazanovvv/vryazanov", "Date": "2017-12-15T11:39:53Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((answer) != null) { target.tell(answer, getContext().parent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6630/buggy-version/publisher-commons.src.main.java.nl.idgis.publisher.database.AutoCommit.java", "BodyUseAPI": [], "Fixed commit": "f7720faafc593813e8e8c51ba9702cb99f20f985", "Url": "https://api.github.com/repos/IDgis/geo-publisher", "Date": "2015-01-28T16:39:40Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ignoreWounds) { if ((getWS()) != 0) { int wounds = damage / (getWS()); if (wounds > 0) { setWUNDEN(((getWUNDEN()) + wounds)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/9005/buggy-version/src.easykampf.Person.java", "BodyUseAPI": [], "Fixed commit": "80091ca32ddbdecf8f745f6155087557c61d0154", "Url": "https://api.github.com/repos/ccjj/rohaldors_dojo", "Date": "2016-08-11T19:10:35Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (filename == null) return retVal;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2308/buggy-version/media.src.main.java.ca.phon.media.util.MediaLocator.java", "BodyUseAPI": [], "Fixed commit": "f68d2a390a7fa7b7679da3b40c5836cffa5e3fdb", "Url": "https://api.github.com/repos/ghedlund/phon", "Date": "2014-09-28T18:33:50Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getEditor().getSession().getDate()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (sessionDate != null) retVal.setDate(sessionDate.toDate());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2308/buggy-version/app.src.main.java.ca.phon.app.session.editor.view.session_information.SessionInfoEditorView.java", "BodyUseAPI": ["org.joda.time.DateTime.toDate()", "ca.phon.ui.text.DatePicker.setDate(sessionDate.toDate())"], "Fixed commit": "f68d2a390a7fa7b7679da3b40c5836cffa5e3fdb", "Url": "https://api.github.com/repos/ghedlund/phon", "Date": "2014-09-28T18:33:50Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getEditor().getSession().getDate()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (sessionDate != null) dateField.setDate(sessionDate.toDate());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2308/buggy-version/app.src.main.java.ca.phon.app.session.editor.view.session_information.SessionInfoEditorView.java", "BodyUseAPI": ["ca.phon.ui.text.DatePicker.setDate(sessionDate.toDate())", "org.joda.time.DateTime.toDate()"], "Fixed commit": "f68d2a390a7fa7b7679da3b40c5836cffa5e3fdb", "Url": "https://api.github.com/repos/ghedlund/phon", "Date": "2014-09-28T18:33:50Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ChartFrameFactory.ChartFrameFactory.createChartFrame(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (chartFrame == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8240/buggy-version/Visualization.Visualization.TableSelectionHandler.java", "BodyUseAPI": [], "Fixed commit": "937a444eb9fb2bd93d903257d952336c5115ed26", "Url": "https://api.github.com/repos/ionambrinoc/raspberry", "Date": "2013-04-30T10:20:02Z"},
{"Line": "=>2243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (fileName != null) { if (((fileName.startsWith(\"\\\"\")) && (fileName.endsWith(\"\\\"\"))) || ((fileName.startsWith(\"'\")) && (fileName.endsWith(\"'\")))) { fileName = fileName.substring(1, ((fileName.length()) - 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1664/buggy-version/tools.src.main.java.com.orientechnologies.orient.console.OConsoleDatabaseApp.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.length()", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "713c04a3108fb0311092903daeea89d52eb82332", "Url": "https://api.github.com/repos/e-d/orientdb", "Date": "2016-09-19T22:04:21Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(_currentWordState.equals(WordState.INCORRECT))) { _quizModel.nextWord(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4396/buggy-version/src.WordResultScene.java", "BodyUseAPI": [], "Fixed commit": "bff6a9163f10cfefe7cd5951fc25bb88609d47f4", "Url": "https://api.github.com/repos/FMcIntosh/VoxProtoFAM", "Date": "2016-09-17T05:42:12Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["util.BackupUtils.getRestoreStatus(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((restoreStatus.getStatus()) == (BackupRestoreStatus.Status.RESTORE_FAILED)) || ((restoreStatus.getStatus()) == (BackupRestoreStatus.Status.RESTORING))) { backup.status = restoreStatus.getStatus().name(); if ((restoreStatus.getStatus()) == (BackupRestoreStatus.Status.RESTORE_FAILED)) { backup.error = restoreStatus.getDetails(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/421/buggy-version/vipr-portal.portal.app.controllers.Backup.java", "BodyUseAPI": ["com.emc.vipr.model.sys.backup.BackupRestoreStatus.getStatus()", "com.emc.vipr.model.sys.backup.BackupRestoreStatus.getStatus()", "com.emc.vipr.model.sys.backup.BackupRestoreStatus.getDetails()", "restoreStatus.getStatus().name()"], "Fixed commit": "f4deeb3a9d72cb57ffd064719c1b41d72fc9e2e7", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-03-16T08:13:21Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["util.BackupUtils.getRestoreStatus(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((restoreStatus.getStatus()) == (BackupRestoreStatus.Status.RESTORE_FAILED)) { backup.error = restoreStatus.getDetails(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/421/buggy-version/vipr-portal.portal.app.controllers.Backup.java", "BodyUseAPI": ["com.emc.vipr.model.sys.backup.BackupRestoreStatus.getDetails()"], "Fixed commit": "f4deeb3a9d72cb57ffd064719c1b41d72fc9e2e7", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-03-16T08:13:21Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value == null) { statement.setNull(index, sqlType); }else { statement.setObject(index, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4508/buggy-version/dbfit-java.core.src.main.java.dbfit.fixture.StatementExecution.java", "BodyUseAPI": ["java.sql.PreparedStatement.setObject(int,java.lang.Object)"], "Fixed commit": "df11e7f96cd4fba3d6466229c5d4a5b478acbc8a", "Url": "https://api.github.com/repos/pstnotpd/dbfit", "Date": "2014-06-13T20:19:41Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((banner) instanceof ss.com.bannerslider.banners.BitmapBanner) { imageView.setImageBitmap(((ss.com.bannerslider.banners.BitmapBanner) (banner)).getBitmap()); }else { final ss.com.bannerslider.banners.RemoteBanner remoteBanner = ((ss.com.bannerslider.banners.RemoteBanner) (banner)); if (((remoteBanner.getErrorDrawable()) == null) && ((remoteBanner.getPlaceHolder()) == null)) { com.squareup.picasso.Picasso.with(getActivity()).load(remoteBanner.getUrl()).into(imageView); }else { if (((remoteBanner.getPlaceHolder()) != null) && ((remoteBanner.getErrorDrawable()) != null)) { com.squareup.picasso.Picasso.with(getActivity()).load(remoteBanner.getUrl()).placeholder(remoteBanner.getPlaceHolder()).error(remoteBanner.getErrorDrawable()).into(imageView); }else if ((remoteBanner.getErrorDrawable()) != null) { com.squareup.picasso.Picasso.with(getActivity()).load(remoteBanner.getUrl()).error(remoteBanner.getErrorDrawable()).into(imageView); }else if ((remoteBanner.getPlaceHolder()) != null) { com.squareup.picasso.Picasso.with(getActivity()).load(remoteBanner.getUrl()).placeholder(remoteBanner.getPlaceHolder()).into(imageView); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5372/buggy-version/bannerslider.src.main.java.ss.com.bannerslider.views.fragments.BannerFragment.java", "BodyUseAPI": [], "Fixed commit": "b0f840b49c9689b5edf5a214c6a27dfa370d4090", "Url": "https://api.github.com/repos/carvaldo/Banner-Slider", "Date": "2017-09-19T15:21:24Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (bitmap != null) this.photo.setImageBitmap(bitmap);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6203/buggy-version/app.src.main.java.it.polito.mad.insane.lab4.adapters.DishesRecyclerAdapter.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)"], "Fixed commit": "e7cb911a76dc3674cd34153890359b5f044f09fa", "Url": "https://api.github.com/repos/Ricoblack/Lab4", "Date": "2016-08-23T16:55:12Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.activiti.cycle.impl.connector.fs.FileSystemConnector.getBasePath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"\".equals(basePath)) { return path; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6869/buggy-version/modules.activiti-cycle.src.main.java.org.activiti.cycle.impl.connector.fs.FileSystemConnector.java", "BodyUseAPI": [], "Fixed commit": "220a2ecf2687e7474d05d0c4d26a655d893b528f", "Url": "https://api.github.com/repos/Activiti/Activiti", "Date": "2011-03-08T13:56:55Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(canonicalPath.startsWith(canonicalBasePath))) { throw new org.activiti.cycle.RepositoryException(((((((((\"Unable to determine local path (path: '\" + path) + \"' canonicalPath: '\") + canonicalPath) + \"', base path: '\") + basePath) + \"', canonicalBasePath: '\") + canonicalBasePath) + \"'): \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6869/buggy-version/modules.activiti-cycle.src.main.java.org.activiti.cycle.impl.connector.fs.FileSystemConnector.java", "BodyUseAPI": [], "Fixed commit": "220a2ecf2687e7474d05d0c4d26a655d893b528f", "Url": "https://api.github.com/repos/Activiti/Activiti", "Date": "2011-03-08T13:56:55Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sourceforge.subsonic.service.SecurityService.getCurrentUsername(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((((player != null) && ((player.getUsername()) != null)) && (username != null)) && (!(player.getUsername().equals(username)))) { player = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4664/buggy-version/subsonic-main.src.main.java.net.sourceforge.subsonic.service.PlayerService.java", "BodyUseAPI": [], "Fixed commit": "cf641402836f98bb9dfd12b9331a9d398c7d3beb", "Url": "https://api.github.com/repos/hakko/subsonic", "Date": "2012-11-09T20:12:16Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result) == null) throw new org.openmicroscopy.shoola.env.data.DSOutOfServiceException(((\"Cannot start the \" + \"rendering engine for pixelsID \") + pixelsID));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6288/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.env.data.views.calls.RenderingControlLoader.java", "BodyUseAPI": [], "Fixed commit": "817b189bd89fc956d9bcbae36e1c1c361608f616", "Url": "https://api.github.com/repos/openmicroscopy/openmicroscopy", "Date": "2014-10-31T14:24:41Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (varName.equals(\"product\")) { value = product; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2007/buggy-version/src.main.java.com.liferay.faces.util.el.internal.UtilELResolver.java", "BodyUseAPI": [], "Fixed commit": "de5bccc1aa9bd31b2fe3986fea9c74f68984ec04", "Url": "https://api.github.com/repos/liferay/liferay-faces-util", "Date": "2016-07-13T18:20:31Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getSource()) == (cboFontSize)) { if (cboFontSize.getSelectedItem().equals(cboFontSize.getSelectedItem())) { lblStatus.setText((\"The font size was changed to \" + (cboFontSize.getSelectedItem()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4575/buggy-version/src.main.java.com.samovich.cop2800.chapter15.assignmnet.SimpleTextEditorGUI.java", "BodyUseAPI": [], "Fixed commit": "f0cfcf4de9c56571cb1a3d20a479a01178c30047", "Url": "https://api.github.com/repos/vsamov/java", "Date": "2016-07-30T19:35:06Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getSource()) == (cboFont)) { if (cboFont.getSelectedItem().equals(cboFont.getSelectedItem())) { lblStatus.setText((\"The font style was changed to \" + (cboFont.getSelectedItem()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4575/buggy-version/src.main.java.com.samovich.cop2800.chapter15.assignmnet.SimpleTextEditorGUI.java", "BodyUseAPI": [], "Fixed commit": "f0cfcf4de9c56571cb1a3d20a479a01178c30047", "Url": "https://api.github.com/repos/vsamov/java", "Date": "2016-07-30T19:35:06Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (viewObject instanceof android.graphics.drawable.Drawable) { drawable = ((android.graphics.drawable.Drawable) (viewObject)); }else if (viewObject instanceof android.widget.ImageView) { drawable = com.grosner.painter.PainterUtils.getDrawable(cloneDrawable, paint, ((android.widget.ImageView) (viewObject)).getDrawable()); ((android.widget.ImageView) (viewObject)).setImageDrawable(drawable); }else if (viewObject instanceof android.widget.TextView) { android.graphics.drawable.Drawable[] drawables = ((android.widget.TextView) (viewObject)).getCompoundDrawables(); for (int i = 0; i < (drawables.length); i++) { android.graphics.drawable.Drawable d = drawables[i]; if (d != null) { drawable = d; drawables[i] = com.grosner.painter.PainterUtils.getDrawable(cloneDrawable, paint, d); break; } } ((android.widget.TextView) (viewObject)).setCompoundDrawables(drawables[0], drawables[1], drawables[2], drawables[3]); }else if (viewObject instanceof android.view.MenuItem) { drawable = com.grosner.painter.PainterUtils.getDrawable(cloneDrawable, paint, ((android.view.MenuItem) (viewObject)).getIcon()); ((android.view.MenuItem) (viewObject)).setIcon(drawable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4858/buggy-version/library.src.main.java.com.grosner.painter.IconPainter.java", "BodyUseAPI": [], "Fixed commit": "b4a1bebfe6b7c15a7f7e882fc3b1025c77e8e983", "Url": "https://api.github.com/repos/agrosner/Painter", "Date": "2014-07-21T16:23:21Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.activeUser) == null) { this.activeUser = new model.User(); this.activeUser.setRole(Role.DEFAULT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2444/buggy-version/operationManager.src.main.java.session.OperationManagerWebSession.java", "BodyUseAPI": [], "Fixed commit": "d878b7e94e0562c642989bd0bad02ae72f8b41db", "Url": "https://api.github.com/repos/e0828330/operationManager", "Date": "2014-05-15T21:13:07Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(txtAnsiLumens.getText().equals(\"\"))) { projector.setAnsiLumens(java.lang.Integer.parseInt(txtAnsiLumens.getText().toString())); }else { projector.setAnsiLumens(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2614/buggy-version/src.View.Projectors.add.java", "BodyUseAPI": ["javax.swing.JTextField.getText()", "java.lang.Integer.parseInt(java.lang.String)", "Model.Projector.setAnsiLumens(int)", "java.lang.String.toString()"], "Fixed commit": "dd7c24da5cba26dd7d3495da2b18344a3daecd9f", "Url": "https://api.github.com/repos/jeffersonbehling/SuperDataShow-mvc", "Date": "2017-10-22T01:24:40Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gregtech.api.util.GT_ModHandler.addCraftingRecipe(net.minecraft.item.ItemStack,((GT_ModHandler.RecipeBits.DO_NOT_CHECK_FOR_COLLISIONS) | (GT_ModHandler.RecipeBits.BUFFERED)),java.lang.Object[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (added) { GT_Values.RA.addAssemblerRecipe(gregtech.api.util.GT_OreDictUnificator.get(OrePrefixes.wireGt01, material, 8), gregtech.api.util.GT_OreDictUnificator.get(OrePrefixes.gearGtSmall, material, 1), result, 400, 2); if (useNEI) { linkManager.getLink(co.q64.exgregilo.link.nei.NEI.class).addItemVariant(linkManager.getLink(co.q64.exgregilo.link.gregtech.GregTech.class).getTools(), result); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1203/buggy-version/src.main.java.co.q64.exgregilo.link.gregtech.tools.WireMesh.java", "BodyUseAPI": [], "Fixed commit": "f29e24a877f1b2f9e3e61d3887cf339cb5d039b0", "Url": "https://api.github.com/repos/Quantum64/ExGregilo", "Date": "2017-12-15T03:35:55Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (reason != (QueryStopReason.End)) { if ((this.stopReason) == null) this.stopReason = reason; scheduler.stop(reason); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8231/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.DefaultQuery.java", "BodyUseAPI": ["org.araqne.logdb.query.engine.QueryTaskScheduler.stop(org.araqne.logdb.QueryStopReason)"], "Fixed commit": "654964f1e32550411d4996ab4198f8516979fe0d", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-08-25T11:00:38Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { getWindow().getDecorView().setSystemUiVisibility(((((((android.view.View.SYSTEM_UI_FLAG_LOW_PROFILE) | (android.view.View.SYSTEM_UI_FLAG_FULLSCREEN)) | (android.view.View.SYSTEM_UI_FLAG_LAYOUT_STABLE)) | (android.view.View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION)) | (android.view.View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY)) | (android.view.View.SYSTEM_UI_FLAG_HIDE_NAVIGATION))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5003/buggy-version/app.src.main.java.me.zeerooo.materialfb.Activities.Video.java", "BodyUseAPI": [], "Fixed commit": "7ccd7e8b9c396ffb049c33305dfea307399b322a", "Url": "https://api.github.com/repos/glacion/MaterialFBook", "Date": "2017-05-02T17:21:01Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { getWindow().getDecorView().setSystemUiVisibility(((((((android.view.View.SYSTEM_UI_FLAG_LOW_PROFILE) | (android.view.View.SYSTEM_UI_FLAG_FULLSCREEN)) | (android.view.View.SYSTEM_UI_FLAG_LAYOUT_STABLE)) | (android.view.View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION)) | (android.view.View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY)) | (android.view.View.SYSTEM_UI_FLAG_HIDE_NAVIGATION))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5003/buggy-version/app.src.main.java.me.zeerooo.materialfb.Activities.Photo.java", "BodyUseAPI": [], "Fixed commit": "7ccd7e8b9c396ffb049c33305dfea307399b322a", "Url": "https://api.github.com/repos/glacion/MaterialFBook", "Date": "2017-05-02T17:21:01Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportActionBar()) != null) { getSupportActionBar().setDisplayHomeAsUpEnabled(true); getSupportActionBar().setDisplayShowTitleEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5003/buggy-version/app.src.main.java.me.zeerooo.materialfb.Activities.Photo.java", "BodyUseAPI": [], "Fixed commit": "7ccd7e8b9c396ffb049c33305dfea307399b322a", "Url": "https://api.github.com/repos/glacion/MaterialFBook", "Date": "2017-05-02T17:21:01Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportActionBar()) != null) getSupportActionBar().setDisplayHomeAsUpEnabled(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5003/buggy-version/app.src.main.java.me.zeerooo.materialfb.Activities.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "7ccd7e8b9c396ffb049c33305dfea307399b322a", "Url": "https://api.github.com/repos/glacion/MaterialFBook", "Date": "2017-05-02T17:21:01Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (title != 0) { builder.title(title); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7967/buggy-version/src.main.java.com.arcao.geocaching4locus.fragment.dialog.AbstractErrorDialogFragment.java", "BodyUseAPI": ["MaterialDialog.Builder.title(int)"], "Fixed commit": "5877d92855eef52160b8acf7ba025c04c03abe23", "Url": "https://api.github.com/repos/arcao/Geocaching4Locus", "Date": "2015-09-15T05:00:27Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user_id) != null) phoneTxt.setText(phone.substring(3));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6998/buggy-version/app.src.main.java.ks.com.ksgas.customer.BookCylinder.java", "BodyUseAPI": [], "Fixed commit": "59a90df07da7c79680f7f2d35387b029c5923062", "Url": "https://api.github.com/repos/Jagam2888/KSGas", "Date": "2016-10-20T08:49:06Z"},
{"Line": "=>469", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (url.contains(\"/secur/frontdoor.jsp\")) { try { java.util.List<org.apache.http.NameValuePair> parameters = org.apache.http.client.utils.URLEncodedUtils.parse(new java.net.URI(url), \"UTF-8\"); for (org.apache.http.NameValuePair p : parameters) { if (p.getName().equals(\"retURL\")) url = p.getValue(); } } catch (java.lang.Exception e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5414/buggy-version/src.android.libs.SalesforceSDK.src.com.salesforce.androidsdk.ui.sfhybrid.SalesforceDroidGapActivity.java", "BodyUseAPI": ["org.apache.http.client.utils.URLEncodedUtils.parse(java.net.URI,java.lang.String)"], "Fixed commit": "3341668c994df5c7a6a0dbdf257165d82d945dea", "Url": "https://api.github.com/repos/micheletriaca/SalesforceMobileSDK-CordovaPlugin", "Date": "2015-04-29T16:17:36Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (initialized) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6914/buggy-version/xmvn-core.src.main.java.org.fedoraproject.xmvn.resolver.impl.MetadataResolver.java", "BodyUseAPI": [], "Fixed commit": "60753bb8a4d46750093539e4217dc123550bdaf7", "Url": "https://api.github.com/repos/mbooth101/xmvn", "Date": "2014-06-06T11:16:10Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (firebaseUser != null) { return firebaseUser.getEmail(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1127/buggy-version/app.src.main.java.fr.istic.m2miage.heybuddy.firebase.FirebaseUtil.java", "BodyUseAPI": ["com.google.firebase.auth.FirebaseUser.getEmail()"], "Fixed commit": "68f6ba5570966d8ebad4a7e0881c46e4706b2f62", "Url": "https://api.github.com/repos/quentin29200/Hey_Buddy", "Date": "2017-01-19T20:56:21Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.disconnectHandler) != null) { this.disconnectHandler.handle(packet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6424/buggy-version/src.main.java.com.nhncorp.mods.socket.io.impl.DefaultSocketIOSocket.java", "BodyUseAPI": [], "Fixed commit": "0baa5a08a845cb55a88f4deba8c96f7b06070882", "Url": "https://api.github.com/repos/keesun/mod-socket-io", "Date": "2013-05-23T07:16:58Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.wpi.first.wpilibj.Joystick.getRawAxis(HardwareIDs.CLIMBER_MOTOR_AXIS)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((java.lang.Math.abs(newClimbValue)) < (Systems.ClimberAssembly.CLIMBER_MOTOR_DEAD_ZONE)) || (newClimbValue > 0.0)) newClimbValue = 0.0; else if (((java.lang.Math.abs(newClimbValue)) >= (Systems.ClimberAssembly.CLIMBER_MOTOR_DEAD_ZONE)) && (newClimbValue < 0.0)) newClimbValue *= Systems.ClimberAssembly.CLIMB_MOTOR_FACTOR;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4217/buggy-version/Steamworks1778.src.Systems.ClimberAssembly.java", "BodyUseAPI": ["java.lang.Math.abs(double)"], "Fixed commit": "931c69b78060cc83e17aaa65ec4ccdac6020de33", "Url": "https://api.github.com/repos/MTHSRoboticsClub/FRC-2017", "Date": "2017-03-04T15:52:59Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.type) == null) return this.suit.toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1133/buggy-version/src.cards.Card.java", "BodyUseAPI": [], "Fixed commit": "4096b76e7725a65f15a200d6f330ecaee399687f", "Url": "https://api.github.com/repos/NoodyYeung/PokerGame", "Date": "2017-11-05T03:39:49Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(continuePlaying)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2672/buggy-version/Chess.java", "BodyUseAPI": [], "Fixed commit": "aeb777638bd59a3c454a8076be004d2dcc646db2", "Url": "https://api.github.com/repos/kchen29/Chess", "Date": "2017-01-28T00:46:02Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (rb != null) rb.setChecked(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1421/buggy-version/app.src.main.java.pylapp.smoothclicker.android.views.RadioButtonGroupTableLayout.java", "BodyUseAPI": ["android.widget.RadioButton.setChecked(boolean)"], "Fixed commit": "caa32e3088933e4ae43bf240882117da64099e91", "Url": "https://api.github.com/repos/pylapp/SmoothClicker", "Date": "2016-07-26T12:48:09Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (rb != null) rb.setChecked(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1421/buggy-version/app.src.main.java.pylapp.smoothclicker.android.views.RadioButtonGroupTableLayout.java", "BodyUseAPI": ["android.widget.RadioButton.setChecked(boolean)"], "Fixed commit": "caa32e3088933e4ae43bf240882117da64099e91", "Url": "https://api.github.com/repos/pylapp/SmoothClicker", "Date": "2016-07-26T12:48:09Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pylapp.smoothclicker.android.views.RadioButtonGroupTableLayout.findViewById(R.id.rbUnitTimeH)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (rb != null) rb.setChecked(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1421/buggy-version/app.src.main.java.pylapp.smoothclicker.android.views.RadioButtonGroupTableLayout.java", "BodyUseAPI": ["android.widget.RadioButton.setChecked(boolean)"], "Fixed commit": "caa32e3088933e4ae43bf240882117da64099e91", "Url": "https://api.github.com/repos/pylapp/SmoothClicker", "Date": "2016-07-26T12:48:09Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (rb != null) rb.setChecked(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1421/buggy-version/app.src.main.java.pylapp.smoothclicker.android.views.RadioButtonGroupTableLayout.java", "BodyUseAPI": ["android.widget.RadioButton.setChecked(boolean)"], "Fixed commit": "caa32e3088933e4ae43bf240882117da64099e91", "Url": "https://api.github.com/repos/pylapp/SmoothClicker", "Date": "2016-07-26T12:48:09Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (orgUnitId == null) { return org.sigmah.shared.dto.referential.PrivacyGroupPermissionEnum.WRITE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5602/buggy-version/src.main.java.org.sigmah.shared.util.ProfileUtils.java", "BodyUseAPI": [], "Fixed commit": "e5c3a19c4fc026a3fa673299b5195b094af9e757", "Url": "https://api.github.com/repos/Raphcal/sigmah", "Date": "2016-08-16T15:42:56Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.exists())) file.createNewFile();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3436/buggy-version/src.main.java.com.extrahardmode.config.messages.MessageConfig.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "c78f0d6d6b2b2ba746c3ffd81a9f8e3d4293b3e1", "Url": "https://api.github.com/repos/Di3mex/ExtraHardMode", "Date": "2013-09-06T20:27:48Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTotalDamage()) == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4383/buggy-version/GameServer.src.org.moparscape.msc.gs.model.mini.Damage.java", "BodyUseAPI": [], "Fixed commit": "bf92ee7a3e57c5fc5e735aebb55390047ae11c56", "Url": "https://api.github.com/repos/Lothy/MoparClassic", "Date": "2012-03-15T06:25:02Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTotalDamage()) == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4383/buggy-version/GameServer.src.org.moparscape.msc.gs.model.mini.Damage.java", "BodyUseAPI": [], "Fixed commit": "bf92ee7a3e57c5fc5e735aebb55390047ae11c56", "Url": "https://api.github.com/repos/Lothy/MoparClassic", "Date": "2012-03-15T06:25:02Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTotalDamage()) == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4383/buggy-version/GameServer.src.org.moparscape.msc.gs.model.mini.Damage.java", "BodyUseAPI": [], "Fixed commit": "bf92ee7a3e57c5fc5e735aebb55390047ae11c56", "Url": "https://api.github.com/repos/Lothy/MoparClassic", "Date": "2012-03-15T06:25:02Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDownload) != null) { mDownload.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2425/buggy-version/src.com.ds.avare.ChartsDownloadActivity.java", "BodyUseAPI": [], "Fixed commit": "e313c5e3f827baac1413fc9702e1a0ec8e37ece0", "Url": "https://api.github.com/repos/apps4av/avare", "Date": "2013-03-21T14:30:35Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mProgressDialog) != null) { try { mProgressDialog.dismiss(); } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2425/buggy-version/src.com.ds.avare.ChartsDownloadActivity.java", "BodyUseAPI": [], "Fixed commit": "e313c5e3f827baac1413fc9702e1a0ec8e37ece0", "Url": "https://api.github.com/repos/apps4av/avare", "Date": "2013-03-21T14:30:35Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (outputPath.toFile().exists()) { outputPath.toFile().delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5766/buggy-version/src.crypto015.Main.java", "BodyUseAPI": ["java.io.File.delete()", "java.nio.file.Path.toFile()"], "Fixed commit": "c0a0d2f5a3c5e88fe416833a85b997ac96dec0d3", "Url": "https://api.github.com/repos/platinumjesus/crypto015", "Date": "2015-04-29T10:21:16Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.googlecode.prmf.Player>.indexOf(com.googlecode.prmf.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index == (-1)) com.googlecode.prmf.Communicator.getInstance().sendMessage(destination, (user + \" is not part of the game!\")); else { players.remove(index); com.googlecode.prmf.Communicator.getInstance().sendMessage(destination, (user + \" has quit the game!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4273/buggy-version/src.com.googlecode.prmf.Pregame.java", "BodyUseAPI": ["java.util.ArrayList<com.googlecode.prmf.Player>.remove(int)"], "Fixed commit": "89482cb816561093bad2f9d9783979b0c7498931", "Url": "https://api.github.com/repos/miorel/prmf", "Date": "2010-03-29T04:16:02Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (rootDirAttribute != null) { isRootDirectory = ((java.lang.Boolean) (rootDirAttribute)); }else { isRootDirectory = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/265/buggy-version/genie-web.src.main.java.com.netflix.genie.web.resources.handlers.GenieResourceHttpRequestHandler.java", "BodyUseAPI": [], "Fixed commit": "4cddd111bc80fe8bd64fda91ac221f7536f81e75", "Url": "https://api.github.com/repos/tgianos/genie", "Date": "2016-09-26T20:04:17Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((recipient.getEmail()) == null) || ((recipient.getEmail().trim().length()) == 0)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/639/buggy-version/nyla.solutions.postit.src.main.java.nyla.solutions.net.postit.PostItMgr.java", "BodyUseAPI": [], "Fixed commit": "48b5983bf26dfce8aef33587d9d1aae5bc761d68", "Url": "https://api.github.com/repos/nyla-solutions/nyla", "Date": "2017-03-23T13:15:18Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(owner.worldObj.isRemote)) { for (int i = 0; i < (inventoryItems.length); i++) { final net.minecraft.item.ItemStack stack = inventoryItems[i]; if (stack != null) { owner.entityDropItem(stack, owner.worldObj.rand.nextFloat()); setInventorySlotContents(i, null); } } onInventoryChanged(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1774/buggy-version/Minecraft.1.7.2.src.main.java.spiderqueen.inventory.Inventory.java", "BodyUseAPI": ["owner.worldObj.rand.nextFloat()", "net.minecraft.entity.EntityLivingBase.entityDropItem(net.minecraft.item.ItemStack,owner.worldObj.rand.nextFloat())"], "Fixed commit": "c5360b1d7727344988f16aa9289c0fd0dd426429", "Url": "https://api.github.com/repos/WildBamaBoy/spider-queen-remastered", "Date": "2014-04-29T00:25:08Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.getSearchResult()) != null) { searchResult.addAll(result.getSearchResult()); if ((result.getSearchResult().size()) == 20) { getView().setChildPageNumber(((getView().getChildPageNumber()) + 1)); setPaginatedChilds(courseId, unitId, lessonId, typeVal, isDataCalled, currentTreeItem); }else { getView().setChildPageNumber(1); getView().getChildFolderItems(currentTreeItem, searchResult); searchResult.clear(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1833/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.gshelf.ShelfMainPresenter.java", "BodyUseAPI": ["org.ednovo.gooru.application.shared.model.folder.FolderListDo.getSearchResult()", "result.getSearchResult().size()", "java.util.List<org.ednovo.gooru.application.shared.model.folder.FolderDo>.addAll(result.getSearchResult())", "org.ednovo.gooru.application.shared.model.folder.FolderListDo.getSearchResult()"], "Fixed commit": "49d9b8cb60373894b395fb3d6f2c6994cce24212", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-09-29T09:21:30Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["semantic.Table.lookup(tree.getChild(i).getVal())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (lookup == null) { if (tree.getChild((i + 1)).getId().equals(\"ArraySize\")) { symbolTable.insert(tree.getChild(i).getVal(), \"array\", true); }else if (tree.getChild((i + 1)).getId().equals(\"Integer\")) { symbolTable.insert(tree.getChild(i).getVal(), \"int\", true); } }else { lookup.setInitialized(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3702/buggy-version/src.semantic.SemanticChecker.java", "BodyUseAPI": ["semantic.Symbol.setInitialized()"], "Fixed commit": "49e15f24e6713e207e86de2f6ebafceb1899667a", "Url": "https://api.github.com/repos/rpedro10/COMP", "Date": "2017-05-28T23:52:50Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.romainpiel.lib.bus.BusManager.get().getUiBus().getLastEvent()) == (com.romainpiel.lib.bus.UIEvent.BACKGROUND)) { stopSelf(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5849/buggy-version/Meatspace.src.main.java.com.romainpiel.meatspace.service.ChatService.java", "BodyUseAPI": [], "Fixed commit": "1daaa45b39667fa89bd35ae08f2b86998542f3c0", "Url": "https://api.github.com/repos/RomainPiel/meatspace-android", "Date": "2014-01-08T10:13:51Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.region) == null) { if (((ep.getInterface()) == (p.perspective)) && (!(isEndpointV3(ep.getURL())))) return ep.getURL().toString(); }else { if ((((ep.getInterface()) == (p.perspective)) && (!(isEndpointV3(ep.getURL())))) && (ep.getRegion().equals(p.region))) return ep.getURL().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7146/buggy-version/core.src.main.java.org.openstack4j.openstack.identity.internal.DefaultEndpointURLResolver.java", "BodyUseAPI": ["ep.getRegion().equals(p.region)"], "Fixed commit": "0842525fc862f3528aad5f430d8eefe5b1b7dd9e", "Url": "https://api.github.com/repos/assistanz/openstack4j", "Date": "2015-03-18T13:18:52Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((errors.size()) > 0) codeSegment.removeAll();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1350/buggy-version/src.view.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "827149da6aeb10e3df42756b8fc05001e0bb1c31", "Url": "https://api.github.com/repos/Lafor8/MiniMIPS", "Date": "2015-11-30T18:53:04Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((env.enclosingClass) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5140/buggy-version/java-squid.src.main.java.org.sonar.java.resolve.Resolve.java", "BodyUseAPI": [], "Fixed commit": "33c484d6a898b8603e20dbbb06a2ffdcd8510f5d", "Url": "https://api.github.com/repos/SonarSource/sonar-java", "Date": "2014-10-29T13:32:31Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.mskcc.cbio.oncokb.util.CacheUtils.VUS.containsKey(entrezGeneId)) { return org.mskcc.cbio.oncokb.util.CacheUtils.VUS.get(entrezGeneId); }else { org.mskcc.cbio.oncokb.model.Gene gene = org.mskcc.cbio.oncokb.util.GeneUtils.getGeneByEntrezId(entrezGeneId); if (gene != null) { org.mskcc.cbio.oncokb.util.CacheUtils.synEvidences(); } return org.mskcc.cbio.oncokb.util.CacheUtils.VUS.get(entrezGeneId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1264/buggy-version/core.src.main.java.org.mskcc.cbio.oncokb.util.CacheUtils.java", "BodyUseAPI": ["org.mskcc.cbio.oncokb.util.GeneUtils.getGeneByEntrezId(java.lang.Integer)", "java.util.Map<java.lang.Integer, java.util.Set<org.mskcc.cbio.oncokb.model.Alteration>>.get(java.lang.Integer)", "java.util.Map<java.lang.Integer, java.util.Set<org.mskcc.cbio.oncokb.model.Alteration>>.get(java.lang.Integer)"], "Fixed commit": "95c77da1f3c8e98cfb5dd750a1ee58954a415fcb", "Url": "https://api.github.com/repos/zhx828/oncokb", "Date": "2017-03-13T19:21:04Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mti.webshare.dao.FileDAO.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (file == null) { return \"File not found\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3376/buggy-version/WebShare.src.main.java.com.mti.webshare.webservice.WebService.java", "BodyUseAPI": [], "Fixed commit": "3fc4c454d4d30ae35a373d3a8eb6cccf1b897a72", "Url": "https://api.github.com/repos/yoan-durand/Projet-J2EE", "Date": "2012-07-06T15:11:55Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mti.webshare.dao.UserDAO.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (u == null) { return \"User not found\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3376/buggy-version/WebShare.src.main.java.com.mti.webshare.webservice.WebService.java", "BodyUseAPI": [], "Fixed commit": "3fc4c454d4d30ae35a373d3a8eb6cccf1b897a72", "Url": "https://api.github.com/repos/yoan-durand/Projet-J2EE", "Date": "2012-07-06T15:11:55Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (frameNode == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3875/buggy-version/src.main.java.org.cojen.tupl.Split.java", "BodyUseAPI": [], "Fixed commit": "7c3de283656c70e920fb41a81429803a740b85b5", "Url": "https://api.github.com/repos/cojen/Tupl", "Date": "2015-12-23T23:50:20Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gameRef.getPlatform().getType()) == (Platform.Type.CLIENT)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3675/buggy-version/src.main.java.com.skelril.skree.content.registry.item.generic.Luminositor.java", "BodyUseAPI": [], "Fixed commit": "496c8505a266c29cdb8cdfd8a695c77eb515e580", "Url": "https://api.github.com/repos/Skelril/Skree", "Date": "2015-06-06T00:01:08Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uniol.apt.module.ModuleInput.getParameter(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pn.getEdges().isEmpty()) { output.setReturnValue(\"plain\", java.lang.Boolean.class, java.lang.Boolean.TRUE); output.setReturnValue(\"time\", java.lang.Double.class, 0.0); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3867/buggy-version/src.uniol.apt.gpu.plain.CLPlainModule.java", "BodyUseAPI": [], "Fixed commit": "10b84fa42f0b61fed062475a9681335116136ed2", "Url": "https://api.github.com/repos/renke/apt", "Date": "2013-05-31T16:50:22Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getTo()) > (collisionItem.getTo())) { if ((item.getTo()) < (previousItem.getTo())) { collisionItem.setTo(item.getTo()); collisionItem.setDateTo(item.getDateTo()); }else { collisionItem.setTo(previousItem.getTo()); collisionItem.setDateTo(previousItem.getDateTo()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3289/buggy-version/qcadoo-view.src.main.java.com.qcadoo.view.internal.components.ganttChart.GanttChartComponentState.java", "BodyUseAPI": ["com.qcadoo.view.internal.components.ganttChart.GanttChartConflictItem.setDateTo(previousItem.getDateTo())", "com.qcadoo.view.internal.components.ganttChart.GanttChartConflictItem.setDateTo(item.getDateTo())", "com.qcadoo.view.internal.components.ganttChart.GanttChartConflictItem.setTo(item.getTo())", "com.qcadoo.view.api.components.ganttChart.GanttChartItem.getTo()", "com.qcadoo.view.api.components.ganttChart.GanttChartItem.getDateTo()", "com.qcadoo.view.internal.components.ganttChart.GanttChartConflictItem.setTo(previousItem.getTo())", "com.qcadoo.view.api.components.ganttChart.GanttChartItem.getTo()"], "Fixed commit": "208e37f0e5617b5183bf46797850983f65541d86", "Url": "https://api.github.com/repos/qcadoo/qcadoo", "Date": "2011-07-01T09:44:41Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dataSeriesWriters.containsKey(desc.getMeasurementId()))) { cn.edu.tsinghua.tsfile.timeseries.write.page.IPageWriter pageWriter = new cn.edu.tsinghua.tsfile.timeseries.write.page.PageWriterImpl(desc); cn.edu.tsinghua.tsfile.timeseries.write.series.ISeriesWriter seriesWriter = new cn.edu.tsinghua.tsfile.timeseries.write.series.SeriesWriterImpl(deltaObjectId, desc, pageWriter, pageSizeThreshold); this.dataSeriesWriters.put(desc.getMeasurementId(), seriesWriter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3315/buggy-version/src.main.java.cn.edu.tsinghua.tsfile.timeseries.write.series.RowGroupWriterImpl.java", "BodyUseAPI": ["cn.edu.tsinghua.tsfile.timeseries.write.desc.MeasurementDescriptor.getMeasurementId()", "java.util.Map<java.lang.String, cn.edu.tsinghua.tsfile.timeseries.write.series.ISeriesWriter>.put(desc.getMeasurementId(),cn.edu.tsinghua.tsfile.timeseries.write.series.ISeriesWriter)"], "Fixed commit": "8176842c69b58065b753459fb12ed3089ab4ff01", "Url": "https://api.github.com/repos/thulab/tsfile", "Date": "2017-09-22T12:33:41Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.magestore.app.util.StringUtil.isNullOrEmpty(qty)) { qty = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2073/buggy-version/LibMagestore.src.main.java.com.magestore.app.pos.model.catalog.PosProduct.java", "BodyUseAPI": [], "Fixed commit": "5199538278bc9eef1f2bda55e1e7225ed2254a7f", "Url": "https://api.github.com/repos/miketrueplus/MagestorePOSAndroid", "Date": "2017-08-11T10:03:32Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ofn.service.BlogPost.getBody()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((i + 1) < (textToSearchForTags.length())) && ((textToSearchForTags.charAt(i)) == '&')) && ((textToSearchForTags.charAt((i + 1))) == '#')) { i += 2; }else { i++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3021/buggy-version/OneFinalNote.src.main.java.com.ofn.service.BlogServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "60931fde0455cc84903a85d304e78582a629abfb", "Url": "https://api.github.com/repos/theuwtseth/SoftwareGuildJavaCapstoneAug2017", "Date": "2017-11-08T03:11:44Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((doc.getSchemaClass()) == null) throw new com.orientechnologies.orient.core.exception.OValidationException(((((((\"The field '\" + (p.getFullName())) + \"' has been declared as \") + (p.getType())) + \" with linked class '\") + embeddedClass) + \"' but the record has no class\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7535/buggy-version/core.src.main.java.com.orientechnologies.orient.core.record.ORecordSchemaAwareAbstract.java", "BodyUseAPI": [], "Fixed commit": "b0f873dbcbedafd91cf13f996640c918eb202292", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2013-10-15T01:19:52Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((android.widget.EditText) (findViewById(R.id.latitude_in))).getText().toString()", "((android.widget.EditText) (findViewById(R.id.longitude_in))).getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((latitudeET.isEmpty()) || (longitudeET.isEmpty())) { android.widget.Toast.makeText(this, \"Latitude or Longitude is blank\", Toast.LENGTH_LONG).show(); }else { try { java.lang.Double.parseDouble(latitudeET); java.lang.Double.parseDouble(longitudeET); a2340.uberofcleanwater.model.WaterReport waterReport = new a2340.uberofcleanwater.model.WaterReport(nameET, java.lang.Double.parseDouble(latitudeET), java.lang.Double.parseDouble(longitudeET), a2340.uberofcleanwater.model.WaterReport.stringToWT(waterTypeET), a2340.uberofcleanwater.model.WaterReport.stringToWC(waterConditionET)); a2340.uberofcleanwater.model.ReportList.addReport(db, waterReport); android.widget.Toast.makeText(this, \"Submission Successful\", Toast.LENGTH_LONG).show(); finish(); } catch (java.lang.NumberFormatException ex) { android.widget.Toast.makeText(this, \"Latitude or Longitude is not a number\", Toast.LENGTH_LONG).show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3390/buggy-version/app.src.main.java.a2340.uberofcleanwater.controller.SubmitReportActivity.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "b1e04360f062d2ef512c3e17cc181c67fadf84c4", "Url": "https://api.github.com/repos/rscsam/UberOfCleanWater2340", "Date": "2017-03-01T03:45:58Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isNotLogin(req)) { showLoginPage(req, resp); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/460/buggy-version/src.main.java.com.bodejidi.Manager.java", "BodyUseAPI": ["com.bodejidi.Manager.showLoginPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"], "Fixed commit": "a1313ec0e01bfba1effb09c2b1c8e235f5433641", "Url": "https://api.github.com/repos/shihang1228/laughing-octo-bear", "Date": "2014-04-05T10:37:04Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(validateHAInfo(clusterCreate.getNodeGroups()))) { com.vmware.bdd.cli.commands.CommandsUtils.printCmdFailure(Constants.OUTPUT_OBJECT_CLUSTER, name, Constants.OUTPUT_OP_CREATE, Constants.OUTPUT_OP_RESULT_FAIL, ((Constants.PARAM_CLUSTER_SPEC_HA_ERROR) + specFilePath)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1480/buggy-version/cli.src.main.java.com.vmware.bdd.cli.commands.ClusterCommands.java", "BodyUseAPI": [], "Fixed commit": "c68e72503c85d44d2eda41ff62a7b67e6d9c2680", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2012-07-27T22:27:47Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stdout) != null) try { stdout.close(); } catch (java.lang.RuntimeException ne) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1338/buggy-version/src.main.java.javax.shell.Process.java", "BodyUseAPI": [], "Fixed commit": "10f1f1855a606a3a6cd4df55aba5cb16c9b960f9", "Url": "https://api.github.com/repos/luca-vercelli/java-shell", "Date": "2016-01-21T16:20:34Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.shc.lostorion.states.PlayState.CURRENT_LEVEL) >= (Resources.LEVELS.size())) { LostOrion.INSTANCE.setGameState(new com.shc.lostorion.states.GameOverState()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2774/buggy-version/LostOrionCore.src.main.java.com.shc.lostorion.states.PlayState.java", "BodyUseAPI": [], "Fixed commit": "25e245d18ce54d5a6fb8e200ca2602c460d292bb", "Url": "https://api.github.com/repos/sriharshachilakapati/Lost-Orion", "Date": "2016-08-30T13:50:53Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInTransfer) referenceCMPsCalculator.computeReferenceCMPsStartingFromDoubleSupport(isStanding, supportSide); else referenceCMPsCalculator.computeReferenceCMPsStartingFromSingleSupport(supportSide);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7307/buggy-version/CommonWalkingControlModules.src.us.ihmc.commonWalkingControlModules.instantaneousCapturePoint.icpOptimization.ICPOptimizationInputHandler.java", "BodyUseAPI": [], "Fixed commit": "6d29ff4fa35a2cbff5acf6a25bc23f0dbd8452a0", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2017-02-07T15:49:15Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mongodb.DBCollection.findOne(com.mongodb.BasicDBObject)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (job != null) { trigger.setJobKey(new org.quartz.JobKey(((java.lang.String) (job.get(com.mulesoft.quartz.mongo.MongoDBJobStore.JOB_KEY_NAME))), ((java.lang.String) (job.get(com.mulesoft.quartz.mongo.MongoDBJobStore.JOB_KEY_GROUP))))); return trigger; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5832/buggy-version/src.main.java.com.mulesoft.quartz.mongo.MongoDBJobStore.java", "BodyUseAPI": ["com.mongodb.DBObject.get(java.lang.String)", "org.quartz.spi.OperableTrigger.setJobKey(org.quartz.JobKey)", "com.mongodb.DBObject.get(java.lang.String)"], "Fixed commit": "dbd6f1d5810d3acb23074984f5ab34bc2e84d71b", "Url": "https://api.github.com/repos/mulesoft-labs/quartz-mongodb", "Date": "2011-08-01T14:37:54Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cxf.jaxrs.utils.InjectionUtils.isSupportedCollectionOrArray(java.lang.Class<?>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lastTry || (!returnCollection)) { valueObjectValue = nextObject; }else { java.lang.Class<?> collCls = (org.apache.olingo.odata2.api.servicedocument.Collection.class.isAssignableFrom(valueType)) ? valueType : returnType; valueObjectValue = getCollectionSingleton(collCls, nextObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1625/buggy-version/rt.rs.extensions.search.src.main.java.org.apache.cxf.jaxrs.ext.search.AbstractSearchConditionParser.java", "BodyUseAPI": [], "Fixed commit": "42f1c303547c0e6dd5ddc722be4b8f7d71d78c6b", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2017-01-26T17:46:09Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (listener != null) listener.onCheckerDownloadSuccess(new java.io.File(downloadPath));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7994/buggy-version/library.src.main.java.com.allenliu.versionchecklib.core.DownloadManager.java", "BodyUseAPI": ["com.allenliu.versionchecklib.callback.DownloadListener.onCheckerDownloadSuccess(java.io.File)"], "Fixed commit": "adccede94ded10758a849754583840ead7ba18dd", "Url": "https://api.github.com/repos/AlexLiuSheng/CheckVersionLib", "Date": "2017-08-30T10:32:58Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.selectBlock) == null) { stack = new net.minecraft.item.ItemStack(net.minecraft.init.Blocks.GRASS); this.selectBlock = new com.xray.client.gui.helper.HelperBlock(oreInfo.getOreName(), net.minecraft.init.Blocks.GRASS, stack, stack.getItem(), stack.getItem().getRegistryName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7482/buggy-version/src.main.java.com.xray.client.gui.GuiEditOre.java", "BodyUseAPI": [], "Fixed commit": "6cd3b755a6357b8e6105f3278450800108a8e000", "Url": "https://api.github.com/repos/MichaelHillcox/XRay-Mod", "Date": "2017-07-12T20:08:15Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (stack != null) { if (!(com.xray.common.helper.ItemStackHelper.isEmpty(stack))) this.selectBlock = new com.xray.client.gui.helper.HelperBlock(stack.getDisplayName(), net.minecraft.block.Block.getBlockFromItem(stack.getItem()), stack, stack.getItem(), stack.getItem().getRegistryName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7482/buggy-version/src.main.java.com.xray.client.gui.GuiEditOre.java", "BodyUseAPI": [], "Fixed commit": "6cd3b755a6357b8e6105f3278450800108a8e000", "Url": "https://api.github.com/repos/MichaelHillcox/XRay-Mod", "Date": "2017-07-12T20:08:15Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (params != null) { final int paramsSize = params.length; if (paramsSize > 0) { sbUrl.append(params[0].getName()).append(\"=\").append(params[0].getValue()); for (int i = 1; i < paramsSize; i++) { sbUrl.append(\"&\").append(params[i].getName()).append(\"=\").append(params[i].getValue()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7989/buggy-version/src.main.java.it.geosolutions.geoserver.rest.GeoServerRESTPublisher.java", "BodyUseAPI": ["params[0].getValue()", "sbUrl.append(\"&\").append(params[i].getName()).append(\"=\").append(params[i].getValue())", "java.lang.StringBuilder.append(params[0].getName())", "sbUrl.append(params[0].getName()).append(\"=\").append(params[0].getValue())", "params[0].getName()", "params[i].getName()", "java.lang.StringBuilder.append(java.lang.String)", "params[i].getValue()", "java.lang.StringBuilder.append(params[i].getName())", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "64502efd0e4a6061821cf280d9fc95599330a56e", "Url": "https://api.github.com/repos/geosolutions-it/geoserver-manager", "Date": "2011-12-15T14:29:44Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (newRoot == null) { cgModelRoot = null; }else { cgModelRoot = newRoot.clone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1155/buggy-version/src.main.java.maud.CgmView.java", "BodyUseAPI": ["com.jme3.scene.Spatial.clone()"], "Fixed commit": "db60553c3df31edbe4587ede728d824e29dec449", "Url": "https://api.github.com/repos/stephengold/Maud", "Date": "2017-05-29T18:22:02Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getCorrectWordform()) == v\u0101rdforma) kopija.setCorrectWordform(klons);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3968/buggy-version/src.main.java.lv.semti.morphology.analyzer.Word.java", "BodyUseAPI": [], "Fixed commit": "3af7a94e1dc5e4c5317f34ae25af18028f836bf6", "Url": "https://api.github.com/repos/PeterisP/morphology", "Date": "2012-10-22T06:41:53Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (name.equalsIgnoreCase(user.nickname)) { if (((moderator) == null) || (!(moderator.nickname.equalsIgnoreCase(user.nickname)))) { models.Logger.info((((\"Setting moderator of room \" + (name)) + \" to user \") + (user.nickname))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3918/buggy-version/app.models.Room.java", "BodyUseAPI": ["models.Logger.info((((\"Setting moderator of room \" + (name)) + \" to user \") + (user.nickname)))", "moderator.nickname.equalsIgnoreCase(user.nickname)"], "Fixed commit": "df0bfcd0c13a5f136414c2904a7038365b2e4e3f", "Url": "https://api.github.com/repos/eltmon/auricle", "Date": "2017-04-22T20:43:04Z"},
{"Line": "=>851", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controllers.Room.retrieveRoomQueue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (roomQueue != null) { java.util.ArrayList<controllers.LibraryItem> items = roomQueue.items; for (controllers.LibraryItem item : items) { if (litem.track.artist.equalsIgnoreCase(item.track.artist)) { artistPlays++; } if (litem.album.equalsIgnoreCase(item.album)) { artistPlays++; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3918/buggy-version/app.controllers.Auricle.java", "BodyUseAPI": [], "Fixed commit": "df0bfcd0c13a5f136414c2904a7038365b2e4e3f", "Url": "https://api.github.com/repos/eltmon/auricle", "Date": "2017-04-22T20:43:04Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (type == null) { switch (com.modcrafting.diablodrops.DiabloDrops.getInstance().getSingleRandom().nextInt(5)) { case 1 : type = com.modcrafting.diablodrops.items.Socket.SkullType.WITHER; break; case 2 : type = com.modcrafting.diablodrops.items.Socket.SkullType.ZOMBIE; break; case 3 : type = com.modcrafting.diablodrops.items.Socket.SkullType.PLAYER; break; case 4 : type = com.modcrafting.diablodrops.items.Socket.SkullType.CREEPER; break; default : type = com.modcrafting.diablodrops.items.Socket.SkullType.SKELETON; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2580/buggy-version/src.com.modcrafting.diablodrops.items.Socket.java", "BodyUseAPI": [], "Fixed commit": "bf81cf81f98a308ca6164ae1ff4cfeb2d99b7b1e", "Url": "https://api.github.com/repos/deathmarine/DiabloDrops", "Date": "2013-01-01T05:18:18Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(left.model.contains(m.name))) left.model.addElement(m.name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4740/buggy-version/src.adminmodule.AdminFrame.java", "BodyUseAPI": ["left.model.addElement(m.name)"], "Fixed commit": "e3ff782f1de2f3cfcd9c73c3532a5702f8fc7cad", "Url": "https://api.github.com/repos/yihaozhou/CS509_TeamE_WPIWayFinder", "Date": "2015-11-10T06:28:36Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((l.locationID) != (-1)) box.setSelectedItem(l.category.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4740/buggy-version/src.adminmodule.LocationEdit.java", "BodyUseAPI": [], "Fixed commit": "e3ff782f1de2f3cfcd9c73c3532a5702f8fc7cad", "Url": "https://api.github.com/repos/yihaozhou/CS509_TeamE_WPIWayFinder", "Date": "2015-11-10T06:28:36Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fs > 0) { cb = endBlock; while ((cb - 2) > startBlock) { cb -= 2; ls = targetRaf.read(java.nio.ByteBuffer.wrap(byteBuffer, 0, bs), ((cb - 1) * bs)); org.hackerrank.java.interview.misc.sorting.ExternalSortInPlace.innerSort.sort(byteBuffer, totalRead(fs, ls)); targetRaf.write(java.nio.ByteBuffer.wrap(byteBuffer, 0, ls), ((cb - 1) * bs)); } targetRaf.write(java.nio.ByteBuffer.wrap(byteBuffer, bs, fs), ((endBlock - 1) * bs)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4774/buggy-version/java-8.src.main.java.org.hackerrank.java.interview.misc.sorting.ExternalSortInPlace.java", "BodyUseAPI": ["java.nio.channels.FileChannel.write(java.nio.ByteBuffer,int)", "org.hackerrank.java.interview.misc.sorting.ExternalSortInPlace.InternalMergeSort.sort(byte[],int)", "org.hackerrank.java.interview.misc.sorting.ExternalSortInPlace.totalRead(int,int)", "java.nio.ByteBuffer.wrap(byte[],int,int)"], "Fixed commit": "f360729eafd79e00f496b4f191b5820100eac5d3", "Url": "https://api.github.com/repos/andrewkandzuba/hackerrank", "Date": "2016-12-22T15:35:13Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Integer.parseInt(max_up_txt.getText())) < 0) { max_up_txt.setText(\"\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8701/buggy-version/src.Gui.java", "BodyUseAPI": ["javax.swing.JTextField.setText(java.lang.String)"], "Fixed commit": "30ed2af740b6df7f3b15d63d5e300f76ce3a19e2", "Url": "https://api.github.com/repos/priyam10/RUBTClient", "Date": "2014-12-08T15:38:57Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Integer.parseInt(max_slots_txt.getText())) < 0) { max_slots_txt.setText(\"\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8701/buggy-version/src.Gui.java", "BodyUseAPI": ["javax.swing.JTextField.setText(java.lang.String)"], "Fixed commit": "30ed2af740b6df7f3b15d63d5e300f76ce3a19e2", "Url": "https://api.github.com/repos/priyam10/RUBTClient", "Date": "2014-12-08T15:38:57Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Integer.parseInt(max_dl_txt.getText())) < 0) { max_dl_txt.setText(\"\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8701/buggy-version/src.Gui.java", "BodyUseAPI": ["javax.swing.JTextField.setText(java.lang.String)"], "Fixed commit": "30ed2af740b6df7f3b15d63d5e300f76ce3a19e2", "Url": "https://api.github.com/repos/priyam10/RUBTClient", "Date": "2014-12-08T15:38:57Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.CountDownLatch.await(long,java.util.concurrent.TimeUnit)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (completedResult) { com.hpe.application.automation.tools.octane.buildLogs.LogDispatcher.logger.error(((\"timed out sending logs to - \" + (workspaces.size())) + \" workspaces.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3177/buggy-version/src.main.java.com.hpe.application.automation.tools.octane.buildLogs.LogDispatcher.java", "BodyUseAPI": [], "Fixed commit": "b2116677315123fe545424bbdf99ff391c548399", "Url": "https://api.github.com/repos/eladaz/hpaa-octane-dev", "Date": "2017-09-04T13:12:57Z"},
{"Line": "=>1455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (unameLength != 10) check_as400.send(\"\\t\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4157/buggy-version/check_as400.java", "BodyUseAPI": [], "Fixed commit": "c681203771a3c565c54d37d77bf099ead1491cba", "Url": "https://api.github.com/repos/cjt74392/check_as400", "Date": "2015-10-22T06:38:42Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dayOfWeek == (org.joda.time.DateTimeConstants.SUNDAY)) { int week = date.getWeekOfWeekyear(); LOGGER.debug(\"Current week {} and desired week {}\", week, (week - 1)); returnDate = returnDate.withWeekOfWeekyear((week - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4300/buggy-version/src.main.java.com.roosterpark.rptime.service.TimeSheetService.java", "BodyUseAPI": [], "Fixed commit": "af6e6f6c43b581cbc80937129c2575686b5902aa", "Url": "https://api.github.com/repos/scandeezy/rpTime", "Date": "2013-11-08T22:53:25Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(ru.ratadubna.dubnabus.SimpleContentActivity)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(preferences.getBoolean(ModelFragment.TAXI_DIALOG_SHOWED, false))) && (!(ru.ratadubna.dubnabus.DubnaBusActivity.isPackageInstalled(getResources().getString(R.string.taxi_app_package), this)))) { ru.ratadubna.dubnabus.ModelFragment.showPromoDialog(this, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1272/buggy-version/src.ru.ratadubna.dubnabus.SimpleContentActivity.java", "BodyUseAPI": [], "Fixed commit": "ba0a493157612ecde00db72d741791f8906b4129", "Url": "https://api.github.com/repos/dmide/DubnaBus", "Date": "2015-02-23T15:12:35Z"},
{"Line": "=>1067", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasSetZooKeeper.await(zkSessionTimeout, java.util.concurrent.TimeUnit.MILLISECONDS))) { org.apache.hadoop.ha.ActiveStandbyElector.LOG.debug(\"Event received with stale zk\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5663/buggy-version/hadoop-common-project.hadoop-common.src.main.java.org.apache.hadoop.ha.ActiveStandbyElector.java", "BodyUseAPI": [], "Fixed commit": "9803ae374f69942aec82ec6eeeb9722523a1ade0", "Url": "https://api.github.com/repos/apache/hadoop", "Date": "2015-01-06T03:45:23Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(word.trim().isEmpty())) { words.add(word); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8054/buggy-version/src.main.java.seedu.commando.logic.parser.SequentialParser.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "98311ad609231001b600904c2876798735b26d6e", "Url": "https://api.github.com/repos/CS2103AUG2016-W13-C3/main", "Date": "2016-10-16T05:48:24Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uk.co.oliwali.HawkEye.util.Config.isLogged(DataType.CONTAINER_TRANSACTION)) pm.registerEvent(Type.PLAYER_MOVE, monitorPlayerListener, Event.Priority.Monitor, this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5201/buggy-version/src.uk.co.oliwali.HawkEye.HawkEye.java", "BodyUseAPI": [], "Fixed commit": "a8146c67fecb8ab4fade3779471ce1e8d57d6813", "Url": "https://api.github.com/repos/oliverwoodings/HawkEye", "Date": "2011-08-19T12:06:07Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.co.oliwali.HawkEye.util.InventoryUtil.createDifferenceString(java.util.HashMap<java.lang.String, java.lang.Integer>,java.util.HashMap<java.lang.String, java.lang.Integer>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((diff.length()) > 1) uk.co.oliwali.HawkEye.database.DataManager.addEntry(new uk.co.oliwali.HawkEye.entry.ContainerEntry(player, access.loc, diff));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5201/buggy-version/src.uk.co.oliwali.HawkEye.ContainerAccessManager.java", "BodyUseAPI": ["uk.co.oliwali.HawkEye.database.DataManager.addEntry(uk.co.oliwali.HawkEye.entry.ContainerEntry)"], "Fixed commit": "a8146c67fecb8ab4fade3779471ce1e8d57d6813", "Url": "https://api.github.com/repos/oliverwoodings/HawkEye", "Date": "2011-08-19T12:06:07Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (contentType != null) { if (contentType.toLowerCase().contains(com.bolyartech.forge.server.route.RequestContextImpl.CONTENT_TYPE_FORM_ENCODED.toLowerCase())) { com.bolyartech.forge.server.route.RequestContextImpl.extractParameters(com.google.common.io.CharStreams.toString(httpReq.getReader()), mPostParams); }else if (contentType.toLowerCase().contains(com.bolyartech.forge.server.route.RequestContextImpl.CONTENT_TYPE_MULTIPART.toLowerCase())) { mIsMultipart = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/9010/buggy-version/src.main.java.com.bolyartech.forge.server.route.RequestContextImpl.java", "BodyUseAPI": [], "Fixed commit": "a5bb84dad1774999c716108a75770f655b129175", "Url": "https://api.github.com/repos/ogrebgr/forge-server", "Date": "2017-10-26T14:49:47Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (grayscale) builder.colorType(ColorType.GRAY_SCALE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/232/buggy-version/src.cafe.image.writer.TIFFWriter.java", "BodyUseAPI": [], "Fixed commit": "8b4dda21f5eef2893786f2823b46af3dffd2a1a0", "Url": "https://api.github.com/repos/dragon66/icafe", "Date": "2014-12-22T20:55:44Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (State.MATCHING.equals(state)) { resumeScript(); matchList.clear(); waitForRoundtime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4302/buggy-version/src.main.java.pw.ry4n.dr.engine.sf.StormFrontInterpreter.java", "BodyUseAPI": [], "Fixed commit": "7533b07bc3faa37c8cfaecbd8923dbb4faced591", "Url": "https://api.github.com/repos/ry4npw/dragonrealms-dobby", "Date": "2015-12-19T20:20:40Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (deviceName == null) { deviceName = org.webrtc.CameraEnumerationAndroid.getDeviceName(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2430/buggy-version/dConnectDevicePlugin.dConnectDeviceWebRTC.app.src.main.java.org.deviceconnect.android.deviceplugin.webrtc.core.MediaStream.java", "BodyUseAPI": [], "Fixed commit": "814596328b7708410d5ba74602338d6a144767d5", "Url": "https://api.github.com/repos/DeviceConnect/DeviceConnect-Android", "Date": "2016-01-29T03:51:25Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"+\".equals(code)) { MoveToFront.decode(); }else { java.lang.System.out.println(\"Usage: java MoveToFront (+|-) < filename\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/927/buggy-version/algorithms-2.burrows.src.main.java.MoveToFront.java", "BodyUseAPI": [], "Fixed commit": "e71f9687005515d7d42174f4f9daca16f820f123", "Url": "https://api.github.com/repos/theeban275/coursera-assignments", "Date": "2016-05-08T05:34:48Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"+\".equals(code)) { BurrowsWheeler.decode(); }else { java.lang.System.out.println(\"Usage: java BurrowsWheeler (+|-) < filename\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/927/buggy-version/algorithms-2.burrows.src.main.java.BurrowsWheeler.java", "BodyUseAPI": [], "Fixed commit": "e71f9687005515d7d42174f4f9daca16f820f123", "Url": "https://api.github.com/repos/theeban275/coursera-assignments", "Date": "2016-05-08T05:34:48Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.text.DecimalFormatSymbols.getDecimalSeparator()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (decimalSeparator != '.') { factorFieldText = factorFieldText.replace(decimalSeparator, '.'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8812/buggy-version/java.src.jmri.jmrit.simpleclock.SimpleClockFrame.java", "BodyUseAPI": ["java.lang.String.replace(char,char)"], "Fixed commit": "69f0c086b2da38e8f29ba4b01ddea7d5f05e1887", "Url": "https://api.github.com/repos/rhwood/JMRI", "Date": "2016-11-14T19:31:53Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.Date.class.isAssignableFrom(arg.getClass())) { stringArgs[len] = new java.text.SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss.SSS\").format(arg); }else { stringArgs[len] = arg.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4025/buggy-version/app.src.main.java.db.juhaku.juhakudb.filter.Predicate.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(java.lang.Object)", "java.lang.Object.toString()"], "Fixed commit": "d7b28bd84ef38ef6c6bc81409c295d85eab39d9e", "Url": "https://api.github.com/repos/juhaku/juhakudb", "Date": "2017-05-13T20:18:16Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((location != null) && (location.hasAccuracy())) && ((location.getAccuracy()) < (com.donbosco.android.porlosjovenes.services.LocationProvider.MIN_ACCURACY))) mLocationCallback.handleNewLocation(location);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3326/buggy-version/app.src.main.java.com.donbosco.android.porlosjovenes.services.LocationProvider.java", "BodyUseAPI": ["com.donbosco.android.porlosjovenes.services.LocationProvider.LocationCallback.handleNewLocation(android.location.Location)"], "Fixed commit": "a27709e3253ee724ee86cd5a9dd131839865d094", "Url": "https://api.github.com/repos/fredoariaudo/DonBosco", "Date": "2017-08-31T15:06:36Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["LocationServices.FusedLocationApi.getLastLocation(com.google.android.gms.common.api.GoogleApiClient)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (((location != null) && (location.hasAccuracy())) && ((location.getAccuracy()) < (com.donbosco.android.porlosjovenes.services.LocationProvider.MIN_ACCURACY))) mLocationCallback.handleInitialLocation(location);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3326/buggy-version/app.src.main.java.com.donbosco.android.porlosjovenes.services.LocationProvider.java", "BodyUseAPI": ["com.donbosco.android.porlosjovenes.services.LocationProvider.LocationCallback.handleInitialLocation(android.location.Location)"], "Fixed commit": "a27709e3253ee724ee86cd5a9dd131839865d094", "Url": "https://api.github.com/repos/fredoariaudo/DonBosco", "Date": "2017-08-31T15:06:36Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mBookData.authors.size()) != 0) { book_author.setText(mBookData.authors.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3090/buggy-version/app.src.main.java.com.bookstore.bookdetail.BookDetailListViewAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(mBookData.authors.get(0))", "mBookData.authors.get(int)"], "Fixed commit": "2ac343708352f780c857b5b54f4761757a447231", "Url": "https://api.github.com/repos/chenshengfa1990/BookStore", "Date": "2016-04-23T19:36:28Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getRanges().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(requestedRange.equals(response.getEntity().getRange()))) { if (rangedEntity) { getLogger().info(\"The range of the response entity is not equal to the requested one.\"); } if (((response.getEntity().getSize()) > (org.restlet.representation.Representation.UNKNOWN_SIZE)) && ((requestedRange.getSize()) > (response.getEntity().getAvailableSize()))) { requestedRange.setSize(Range.SIZE_MAX); } response.setEntity(new org.restlet.engine.application.RangeRepresentation(response.getEntity(), requestedRange)); response.setStatus(Status.SUCCESS_PARTIAL_CONTENT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4188/buggy-version/modules.org.restlet.src.org.restlet.engine.application.RangeFilter.java", "BodyUseAPI": ["org.restlet.Response.getEntity()", "org.restlet.Response.getEntity()", "response.getEntity().getSize()", "org.restlet.data.Range.setSize(Range.SIZE_MAX)", "org.restlet.Response.setEntity(org.restlet.engine.application.RangeRepresentation)", "org.restlet.Response.getEntity()", "org.restlet.Response.setStatus(Status.SUCCESS_PARTIAL_CONTENT)", "response.getEntity().getAvailableSize()", "org.restlet.data.Range.getSize()"], "Fixed commit": "242cd2ab9a71208c487b82f5cabbb57b7d3d3582", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2012-06-27T14:35:31Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (temp_time.equals(\"close\")) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7163/buggy-version/src.main.java.com.weego.main.util.OpenTimeUtil.java", "BodyUseAPI": [], "Fixed commit": "877c359b10e1c3b3f0e71b82fa2994def7e26c2d", "Url": "https://api.github.com/repos/hezhensong/weego_main", "Date": "2016-03-30T02:55:12Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (temp_time.equals(\"allday\")) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7163/buggy-version/src.main.java.com.weego.main.util.OpenTimeUtil.java", "BodyUseAPI": [], "Fixed commit": "877c359b10e1c3b3f0e71b82fa2994def7e26c2d", "Url": "https://api.github.com/repos/hezhensong/weego_main", "Date": "2016-03-30T02:55:12Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMarkerLocation) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6243/buggy-version/app.src.main.java.com.example.nightingale.qwalk.View.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "fed7934b427715564e33155a4ca81ddf7102feb2", "Url": "https://api.github.com/repos/olssonelina/Programmeringsprinsessorna", "Date": "2017-05-11T22:40:37Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!matchFound) { EventBus.INSTANCE.publish(EventBus.Event.LOGIN_FAILED, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1334/buggy-version/Dat367_Grupp10.app.src.main.java.edu.ctl.pinjobs.User.LoginModel.java", "BodyUseAPI": [], "Fixed commit": "f1db0bb6e12bd5bbdc12227828bc7bddf0b025cd", "Url": "https://api.github.com/repos/sCarlman/oop-project", "Date": "2015-05-08T11:32:13Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.getNode(label)) != null) { this.getNode(label).add(instance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4790/buggy-version/src.xlong.cell.instances.SparseVectorMultiLabelTreeInstances.java", "BodyUseAPI": ["this.getNode(label).add(xlong.cell.instance.SparseVectorMultiLabelInstance)", "xlong.cell.instances.SparseVectorMultiLabelTreeInstances.getNode(java.lang.String)"], "Fixed commit": "8acb4432ea4f6903eda417554803a3270a4ae05a", "Url": "https://api.github.com/repos/lxastro/project-HC", "Date": "2014-09-02T14:24:55Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (localTopology == null) { return null; }else { com.google.common.base.Optional<com.jivesoftware.os.miru.service.partition.MiruLocalHostedPartition<?>> partition = localTopology.getPartition(key); return partition.orNull(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4060/buggy-version/code.com.jivesoftware.os.miru.miru-service.src.main.java.com.jivesoftware.os.miru.service.partition.cluster.MiruClusterExpectedTenants.java", "BodyUseAPI": ["com.jivesoftware.os.miru.service.partition.cluster.MiruTenantTopology<?>.getPartition(com.jivesoftware.os.miru.api.MiruPartitionCoord)"], "Fixed commit": "3ee69a8452bb0833c2a5bbfa47b40a601a068e10", "Url": "https://api.github.com/repos/jivesoftware/miru", "Date": "2015-03-04T21:44:47Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.module.kenyaemr.fragment.controller.AdminEditAccountFragmentController.EditLoginDetailsForm.getUserToSave(org.openmrs.Person)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((user.getUserId()) == null) { org.openmrs.api.context.Context.getUserService().saveUser(user, newPassword); }else { org.openmrs.api.context.Context.getUserService().saveUser(user, null); if (newPassword != null) { org.openmrs.api.context.Context.getUserService().changePassword(user, newPassword); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2061/buggy-version/omod.src.main.java.org.openmrs.module.kenyaemr.fragment.controller.AdminEditAccountFragmentController.java", "BodyUseAPI": ["org.openmrs.api.context.Context.getUserService().saveUser(org.openmrs.User,java.lang.String)", "org.openmrs.api.context.Context.getUserService().saveUser(org.openmrs.User,<nulltype>)", "org.openmrs.api.context.Context.getUserService().changePassword(org.openmrs.User,java.lang.String)"], "Fixed commit": "dc5afb4d998d45af7003dcfcf5c0aa570a3482d4", "Url": "https://api.github.com/repos/ningosi/openmrs-module-kenyaemr", "Date": "2012-12-12T08:27:35Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.Paint.getTextAlign()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cnt == 0) && (txtAlign != (Paint.Align.LEFT))) paintV.setTextAlign(Paint.Align.LEFT);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/9155/buggy-version/ntchart.src.main.java.ru.turbomolot.ntchart.axis.AxisLine.java", "BodyUseAPI": [], "Fixed commit": "fc69877a7b23c742959a11410a09596aecec104c", "Url": "https://api.github.com/repos/TurboMolot/NTChart", "Date": "2017-10-09T13:17:49Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.Paint.getTextAlign()", "ru.turbomolot.ntchart.axis.AxisLine.getValuePaint()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cnt == 0) && (txtAlign != (paintV.getTextAlign()))) paintV.setTextAlign(txtAlign);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/9155/buggy-version/ntchart.src.main.java.ru.turbomolot.ntchart.axis.AxisLine.java", "BodyUseAPI": ["android.graphics.Paint.setTextAlign(Paint.Align)"], "Fixed commit": "fc69877a7b23c742959a11410a09596aecec104c", "Url": "https://api.github.com/repos/TurboMolot/NTChart", "Date": "2017-10-09T13:17:49Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == map) { map = new java.util.HashMap<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6/buggy-version/core.src.main.java.io.puremetrics.sdk.PureMetrics.java", "BodyUseAPI": [], "Fixed commit": "8ed24531c63b435bac4e0157f754993e6c8519e4", "Url": "https://api.github.com/repos/PureMetrics/puremetrics-android-sdk", "Date": "2016-11-11T09:43:08Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.JoinedChannels.contains(newChan.getName()))) { this.JoinedChannels.add(newChan.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6608/buggy-version/src.main.java.uk.co.CyniCode.CyniChat.Chatting.UserDetails.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(newChan.getName())", "uk.co.CyniCode.CyniChat.Channel.Channel.getName()"], "Fixed commit": "23e8595a23ccdcd11f5b98612c7f7a3084f8afea", "Url": "https://api.github.com/repos/m477h3w1012/CyniChat", "Date": "2013-07-07T00:20:38Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.JoinedChannels.contains(newChan.getName()))) { this.JoinedChannels.add(newChan.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6608/buggy-version/src.main.java.uk.co.CyniCode.CyniChat.Chatting.UserDetails.java", "BodyUseAPI": ["uk.co.CyniCode.CyniChat.Channel.Channel.getName()", "java.util.List<java.lang.String>.add(newChan.getName())"], "Fixed commit": "23e8595a23ccdcd11f5b98612c7f7a3084f8afea", "Url": "https://api.github.com/repos/m477h3w1012/CyniChat", "Date": "2013-07-07T00:20:38Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Count > 0) { for (int i = 0; i < Count; i++) { uk.co.CyniCode.CyniChat.CyniChat.printDebug((\"Iteration = \" + i)); uk.co.CyniCode.CyniChat.CyniChat.printDebug((\"Removed \" + (all[i].getDisplayName()))); event.getRecipients().remove(all[i]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6608/buggy-version/src.main.java.uk.co.CyniCode.CyniChat.Chatting.Chatter.java", "BodyUseAPI": [], "Fixed commit": "23e8595a23ccdcd11f5b98612c7f7a3084f8afea", "Url": "https://api.github.com/repos/m477h3w1012/CyniChat", "Date": "2013-07-07T00:20:38Z"},
{"Line": "=>1278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((isPM == true) && ((results[0]) == 24)) && ((results[1]) == 0)) { results[0] = 12; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8569/buggy-version/src.EzParser.java", "BodyUseAPI": [], "Fixed commit": "0a635bacdc2552459117a64d6d64bcfb40804a5f", "Url": "https://api.github.com/repos/cs2103aug2014-t09-3j/main", "Date": "2014-10-21T19:29:20Z"},
{"Line": "=>1282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((isPM == false) && ((results[0]) == 12)) && ((results[1]) == 0)) { results[0] = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8569/buggy-version/src.EzParser.java", "BodyUseAPI": [], "Fixed commit": "0a635bacdc2552459117a64d6d64bcfb40804a5f", "Url": "https://api.github.com/repos/cs2103aug2014-t09-3j/main", "Date": "2014-10-21T19:29:20Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(index.isEmpty())) { mCurrentValue = index.first(); mPosition = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3573/buggy-version/microdb-runtime.src.main.java.com.devsmart.microdb.MapDBDriver.java", "BodyUseAPI": ["com.devsmart.microdb.MapDBDriver.MapDBCursor.first()"], "Fixed commit": "d39c6d263ae35971be43b13422e7e7920d4ed163", "Url": "https://api.github.com/repos/dinocore1/MicroDb", "Date": "2016-05-13T17:39:23Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mKeys.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3573/buggy-version/microdb-runtime.src.main.java.com.devsmart.microdb.MapDBDriver.java", "BodyUseAPI": [], "Fixed commit": "d39c6d263ae35971be43b13422e7e7920d4ed163", "Url": "https://api.github.com/repos/dinocore1/MicroDb", "Date": "2016-05-13T17:39:23Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (au.com.mineauz.MobHunting.commands.LearnCommand.playerStore.containsKey(player)) return au.com.mineauz.MobHunting.commands.LearnCommand.playerStore.get(player.getUniqueId()).getLearningMode(); else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6806/buggy-version/src.au.com.mineauz.MobHunting.commands.LearnCommand.java", "BodyUseAPI": ["au.com.mineauz.MobHunting.commands.LearnCommand.playerStore.get(player.getUniqueId()).getLearningMode()", "org.bukkit.entity.Player.getUniqueId()", "java.util.HashMap<java.util.UUID, au.com.mineauz.MobHunting.storage.PlayerStore>.get(player.getUniqueId())"], "Fixed commit": "e7a5c88cb2277e2f30b2f098aa1aa5709c8f6598", "Url": "https://api.github.com/repos/rlf/MobHunting", "Date": "2015-12-20T11:24:39Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((A.numRows) < (A.numCols)) throw new java.lang.IllegalArgumentException(\"Can't solve for wide systems. More variables than equations.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/412/buggy-version/main.core.src.org.ejml.alg.dense.linsol.qr.LinearSolverQrHouseCol.java", "BodyUseAPI": [], "Fixed commit": "42ab3f676a576f7dee726da759fbe403c07df9b0", "Url": "https://api.github.com/repos/nknize/ejml", "Date": "2014-11-17T22:13:19Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cfvbaibai.cardfantasy.engine.skill.SoulSeal.soulSealed(resolver, attacker)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7384/buggy-version/workspace.CardFantasyCore.src.cfvbaibai.cardfantasy.engine.skill.SoulControl.java", "BodyUseAPI": [], "Fixed commit": "482b17102a34408f225149a61ad7858c76fff6c8", "Url": "https://api.github.com/repos/cfvbaibai/CardFantasy", "Date": "2016-04-22T03:56:18Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input.charAt((i - 1))) == '.') temp = temp + \"*\\n\"; else temp = temp + \"\\n*\\n\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/65/buggy-version/src.miniDB.main.java", "BodyUseAPI": [], "Fixed commit": "7be756db7f701b31135b02140b033278f44e2829", "Url": "https://api.github.com/repos/a4027971/miniDB", "Date": "2016-04-17T14:59:26Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.talend.designer.core.model.utils.emf.talendfile.MetadataType>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (EConnectionType.FLOW_MAIN.getName().equals(metadataType.getConnector())) { metadataType.setConnector(Connector.MAIN_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6350/buggy-version/main.plugins.org.talend.designer.core.generic.src.main.java.org.talend.designer.core.generic.model.migration.NewComponentFrameworkMigrationTask.java", "BodyUseAPI": ["org.talend.designer.core.model.utils.emf.talendfile.MetadataType.setConnector(Connector.MAIN_NAME)"], "Fixed commit": "03068a2a6e6867f80980c292bee8dae24bdb889d", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2016-04-26T06:56:34Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((savedInstanceState != null) && (savedInstanceState.containsKey(com.example.fragmentproject.WebFragment.URL_KEY))) { mUrl = savedInstanceState.getString(com.example.fragmentproject.WebFragment.URL_KEY); }else if (((getArguments()) != null) && (getArguments().containsKey(\"url\"))) { mUrl = getArguments().getString(\"url\"); setWebPage(mUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3942/buggy-version/src.com.example.fragmentproject.WebFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String)"], "Fixed commit": "6b12b2b05fe1e13992338f88e24cdea06cb65dd0", "Url": "https://api.github.com/repos/insearching/FragmentProject", "Date": "2013-11-25T10:37:03Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.projectfloodlight.openflow.protocol.OFHello.getVersion()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((version.compareTo(factory.getVersion())) < 0) { factory = org.projectfloodlight.openflow.protocol.OFFactories.getFactory(version); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5002/buggy-version/src.main.java.net.floodlightcontroller.core.internal.OFChannelHandler.java", "BodyUseAPI": ["org.projectfloodlight.openflow.protocol.OFFactories.getFactory(org.projectfloodlight.openflow.protocol.OFVersion)"], "Fixed commit": "269add55f00aede3d93ee13e2f38424a02c2b74f", "Url": "https://api.github.com/repos/rizard/floodlight", "Date": "2015-03-20T14:18:18Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (d == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2254/buggy-version/src.se.freedrikp.econview.database.SQLiteDatabase.java", "BodyUseAPI": [], "Fixed commit": "7b670a4dc6b43f51092b3483db3a95eae7174ac3", "Url": "https://api.github.com/repos/freedrikp/Econview", "Date": "2016-08-13T19:06:11Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentAdmin.getCommonBrewSupplies()) != null) { java.util.Collections.sort(currentAdmin.getCommonBrewSupplies(), new java.util.Comparator<com.openbrew.openbrewweb.model.CommonBrewSupplies>() { @java.lang.Override public int compare(com.openbrew.openbrewweb.model.CommonBrewSupplies c1, com.openbrew.openbrewweb.model.CommonBrewSupplies c2) { if ((c1.getBoilTime()) > (c2.getBoilTime())) return -1; if ((c1.getBoilTime()) < (c2.getBoilTime())) return 1; return 0; } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8247/buggy-version/src.main.java.com.openbrew.openbrewweb.beans.AdministrationFrames.SysAdmin.java", "BodyUseAPI": ["com.openbrew.openbrewweb.model.Administration.getCommonBrewSupplies()", "java.util.Collections.sort(currentAdmin.getCommonBrewSupplies(),java.util.Comparator<com.openbrew.openbrewweb.model.CommonBrewSupplies>)"], "Fixed commit": "3569ef7e19c0909dee10f63c444a8a628c659653", "Url": "https://api.github.com/repos/donaldchapman/openBrewWeb", "Date": "2016-11-02T17:20:30Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.jboss.ejb.client.EJBClient.isEJBProxy(proxy))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3031/buggy-version/src.main.java.org.jboss.ejb.client.EJBClient.java", "BodyUseAPI": [], "Fixed commit": "9a0a68eef6a4b1f3647160957a7a2cfd22775efd", "Url": "https://api.github.com/repos/jaikiran/jboss-ejb-client", "Date": "2011-12-20T11:51:49Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.ejb.client.EJBInvocationHandler.forProxy(proxy).getWeakAffinity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (affinity instanceof org.jboss.ejb.client.NodeAffinity) { return ((org.jboss.ejb.client.NodeAffinity) (affinity)).getNodeName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3031/buggy-version/src.main.java.org.jboss.ejb.client.EJBClient.java", "BodyUseAPI": [], "Fixed commit": "9a0a68eef6a4b1f3647160957a7a2cfd22775efd", "Url": "https://api.github.com/repos/jaikiran/jboss-ejb-client", "Date": "2011-12-20T11:51:49Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.ejb.client.EJBInvocationHandler.forProxy(proxy).getWeakAffinity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (affinity instanceof org.jboss.ejb.client.ClusterAffinity) { return ((org.jboss.ejb.client.ClusterAffinity) (affinity)).getClusterName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3031/buggy-version/src.main.java.org.jboss.ejb.client.EJBClient.java", "BodyUseAPI": [], "Fixed commit": "9a0a68eef6a4b1f3647160957a7a2cfd22775efd", "Url": "https://api.github.com/repos/jaikiran/jboss-ejb-client", "Date": "2011-12-20T11:51:49Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (tracks == null) { java.lang.CharSequence text = \"Opps something went wrong, please try again.\"; int duration = android.widget.Toast.LENGTH_SHORT; android.widget.Toast toast = android.widget.Toast.makeText(getActivity().getApplicationContext(), text, duration); toast.show(); }else { topTrackAdapter.clear(); if ((tracks.tracks.size()) > 0) { for (kaaes.spotify.webapi.android.models.Track track : tracks.tracks) { topTrackAdapter.add(track); } }else { android.widget.TextView zView = ((android.widget.TextView) (getActivity().findViewById(R.id.noTracksMessage))); zView.setText(\"Sorry, we were unable to determine the top tracks\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1958/buggy-version/app.src.main.java.app.com.victorioussolutions.spotifystreamermulti_mode.ArtistDetailFragment.java", "BodyUseAPI": ["tracks.tracks.size()"], "Fixed commit": "26075ff6c52b0b8570fb9a7f2c00a6bf129ad86c", "Url": "https://api.github.com/repos/WarrickF/SpotifyStreamerMultMode", "Date": "2015-09-13T14:03:35Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result < 0) { result = -result; if (result < 0) { result = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8458/buggy-version/main.src.main.java.net.oneandone.stool.util.Pool.java", "BodyUseAPI": [], "Fixed commit": "573258a4c41582da01d89929b1d2fe50c398ba28", "Url": "https://api.github.com/repos/mlhartme/stool", "Date": "2015-11-23T11:44:46Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mnishiguchi.android.criminalintent.Utils.hasTwoPane(getActivity())) { setLastItemSelected(); getActivity().setTitle(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7618/buggy-version/src.com.mnishiguchi.android.criminalintent.CrimeListFragment.java", "BodyUseAPI": [], "Fixed commit": "2cb2eca93badc4af598017acd28c92d50e59e540", "Url": "https://api.github.com/repos/mnishiguchi/CriminalIntent", "Date": "2014-11-26T23:29:53Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { courses = parse(new java.io.ByteArrayInputStream(responseObject.getBytes(java.nio.charset.StandardCharsets.UTF_8))); }else { courses = parse(new java.io.ByteArrayInputStream(responseObject.getBytes())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2995/buggy-version/app.src.main.java.edu.temple.tuhub.CoursesSearchAllFragment.java", "BodyUseAPI": [], "Fixed commit": "26a777703d71e74a367dcaadf2c4aedf6e3d4afb", "Url": "https://api.github.com/repos/tuhub/TUHub-Android", "Date": "2017-05-01T16:42:59Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((req.getQueryString()) != null) { path = (path + \"?\") + (req.getQueryString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/9161/buggy-version/src.main.java.org.warcbase.browser.WarcBrowserServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getQueryString()"], "Fixed commit": "ffec5b2caa3d8cd7e7c6fc0c34bfd82dbe2d8e92", "Url": "https://api.github.com/repos/lintool/warcbase", "Date": "2014-08-11T23:59:55Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Boolean>.getOrDefault(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!keyPushed) && (keyCode.equals(\"Space\"))) { keyPushed = PicassoEngine.Input.keysDown.getOrDefault(\" \", false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/730/buggy-version/src.PicassoEngine.Input.java", "BodyUseAPI": [], "Fixed commit": "5207a0c2af46967d448fbfe8d9b83a9ff30e1696", "Url": "https://api.github.com/repos/Keavon/Picasso", "Date": "2015-05-31T01:52:37Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_SPACE)) PicassoEngine.Input.setKeyDown(\"Space\"); else if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_LEFT)) PicassoEngine.Input.setKeyDown(\"Left\"); else if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_RIGHT)) PicassoEngine.Input.setKeyDown(\"Right\"); else if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_UP)) PicassoEngine.Input.setKeyDown(\"Up\"); else if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_DOWN)) PicassoEngine.Input.setKeyDown(\"Down\"); else { PicassoEngine.Input.setKeyDown(java.awt.event.KeyEvent.getKeyText(e.getKeyCode())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/730/buggy-version/src.PicassoEngine.KeyInput.java", "BodyUseAPI": ["java.awt.event.KeyEvent.getKeyCode()", "java.awt.event.KeyEvent.getKeyCode()", "java.awt.event.KeyEvent.getKeyCode()", "java.awt.event.KeyEvent.getKeyCode()", "java.awt.event.KeyEvent.getKeyCode()", "java.awt.event.KeyEvent.getKeyText(int)", "PicassoEngine.Input.setKeyDown(java.lang.String)"], "Fixed commit": "5207a0c2af46967d448fbfe8d9b83a9ff30e1696", "Url": "https://api.github.com/repos/Keavon/Picasso", "Date": "2015-05-31T01:52:37Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_SPACE)) PicassoEngine.Input.setKeyUp(\"Space\"); else if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_LEFT)) PicassoEngine.Input.setKeyUp(\"Left\"); else if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_RIGHT)) PicassoEngine.Input.setKeyUp(\"Right\"); else if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_UP)) PicassoEngine.Input.setKeyUp(\"Up\"); else if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_DOWN)) PicassoEngine.Input.setKeyUp(\"Down\"); else { PicassoEngine.Input.setKeyUp(java.awt.event.KeyEvent.getKeyText(e.getKeyCode())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/730/buggy-version/src.PicassoEngine.KeyInput.java", "BodyUseAPI": ["java.awt.event.KeyEvent.getKeyCode()", "java.awt.event.KeyEvent.getKeyText(int)", "java.awt.event.KeyEvent.getKeyCode()", "java.awt.event.KeyEvent.getKeyCode()", "java.awt.event.KeyEvent.getKeyCode()", "PicassoEngine.Input.setKeyUp(java.lang.String)", "java.awt.event.KeyEvent.getKeyCode()"], "Fixed commit": "5207a0c2af46967d448fbfe8d9b83a9ff30e1696", "Url": "https://api.github.com/repos/Keavon/Picasso", "Date": "2015-05-31T01:52:37Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(parser.hasSection(\"Machine\"))) { parser.addSection(\"Machine\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/256/buggy-version/RemoteSpiNNaker.RemoteSpiNNakerJobProcessManager.src.main.java.uk.ac.manchester.cs.spinnaker.jobprocess.impl.PyNNJobProcess.java", "BodyUseAPI": ["org.ini4j.ConfigParser.addSection(java.lang.String)"], "Fixed commit": "49e94d12613df2e020027ca2bb9437ea76423712", "Url": "https://api.github.com/repos/SpiNNakerManchester/RemoteSpiNNaker", "Date": "2015-06-29T12:54:59Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((record.getReferenceIndex()) > (interval.referenceIndex)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1980/buggy-version/src.java.htsjdk.samtools.CRAMFileReader.java", "BodyUseAPI": [], "Fixed commit": "38ec4b3ee42b39d16f5ce6a33ee18d61e854551e", "Url": "https://api.github.com/repos/samtools/htsjdk", "Date": "2016-01-14T13:25:02Z"},
{"Line": "=>530", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!refMatch) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1980/buggy-version/src.java.htsjdk.samtools.CRAMFileReader.java", "BodyUseAPI": [], "Fixed commit": "38ec4b3ee42b39d16f5ce6a33ee18d61e854551e", "Url": "https://api.github.com/repos/samtools/htsjdk", "Date": "2016-01-14T13:25:02Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["WorldGuardNoFly.map.get(p.getWorld().getName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (regions == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/10/buggy-version/src.com.ferdz.worldguardnofly.handler.WGPlayerListener.java", "BodyUseAPI": [], "Fixed commit": "86b3d2ca52d5a4f2f26e95ebc655c0fe692cbf17", "Url": "https://api.github.com/repos/Ferdzz/WorldGuardNoFly", "Date": "2016-01-23T08:38:49Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((numbers.get(i)) % 1) == 0) result += ((int) (numbers.get(i).intValue())); else result += java.lang.Double.toString(numbers.get(i));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3052/buggy-version/src.edu.ucsb.cs56.projects.utilities.calculator.Calculator.java", "BodyUseAPI": ["java.lang.Double.intValue()", "java.util.ArrayList<java.lang.Double>.get(int)", "java.lang.Double.toString(java.lang.Double)", "java.util.ArrayList<java.lang.Double>.get(int)"], "Fixed commit": "661b14d57e97cbcd417f8a61cd1b64d9f199ef0b", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-utilities-calculator", "Date": "2017-11-16T00:53:47Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.Math.abs(((coordinates[0]) - (view.getX())))) < (EPSILON)) && ((java.lang.Math.abs(((coordinates[1]) - (view.getY())))) < (EPSILON))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/162/buggy-version/cardsLayout.src.main.java.ua.jenshensoft.cardslayout.views.layout.bars.CardsLayoutWithBars.java", "BodyUseAPI": [], "Fixed commit": "6f04bb4e5494d01d53a2ee284556f3cce32ff9af", "Url": "https://api.github.com/repos/JenshenSoft/CardsLayoutSample", "Date": "2017-06-29T16:58:25Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (intent != null) { mVersionInfo = ((com.fjg.android.zxing.utils.VersionInfo) (intent.getSerializableExtra(\"VersionInfo\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6669/buggy-version/app.src.main.java.com.fjg.android.zxing.utils.DownloadService.java", "BodyUseAPI": ["android.content.Intent.getSerializableExtra(java.lang.String)"], "Fixed commit": "c76d3228aed14535949e5a802ecb57f675a59453", "Url": "https://api.github.com/repos/damonfu/Qrcode", "Date": "2016-11-18T03:13:09Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((round) < max) max = round;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8791/buggy-version/src.io.github.ryandmaier.holycow.Engine.java", "BodyUseAPI": [], "Fixed commit": "5708379b577bbbfca5f64e9a5e06e2bbd39b513d", "Url": "https://api.github.com/repos/ryandmaier/holy-cow", "Date": "2016-10-12T03:58:14Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fst instanceof reclang.ExtendEnv) { reclang.ExtendEnv f = ((reclang.ExtendEnv) (fst)); return new reclang.ExtendEnv(appendEnv(f.saved_env(), snd), f.var(), f.val()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1486/buggy-version/src.reclang.Evaluator.java", "BodyUseAPI": [], "Fixed commit": "4eb8aaefc7d942b704f615dbf64afa22bd0725a2", "Url": "https://api.github.com/repos/hridesh/reclang", "Date": "2014-09-20T18:49:57Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedHashMap<K, V>.remove(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (value != null) { this.evictionListener.onEviction(((K) (key)), value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1222/buggy-version/src.main.java.com.cetsoft.imcache.heap.HeapCache.java", "BodyUseAPI": ["this.evictionListener.onEviction(java.lang.Object,V)"], "Fixed commit": "eb4c467532132e9908bb4dc310592fc08c989c64", "Url": "https://api.github.com/repos/Cetsoft/imcache", "Date": "2013-09-16T12:34:38Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((artistList) != null) && ((artistList.size()) > 0)) { outState.putParcelableArray(ARTIST_LIST_BUNDLE_KEY, artistList.toArray(new br.com.tassioauad.spotifystreamer.model.entity.Artist[artistList.size()])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4924/buggy-version/app.src.main.java.br.com.tassioauad.spotifystreamer.view.activity.SearchArtistActivity.java", "BodyUseAPI": ["java.util.List<br.com.tassioauad.spotifystreamer.model.entity.Artist>.toArray(br.com.tassioauad.spotifystreamer.model.entity.Artist[])", "android.os.Bundle.putParcelableArray(java.lang.String,artistList.toArray(new br.com.tassioauad.spotifystreamer.model.entity.Artist[artistList.size()]))", "java.util.List<br.com.tassioauad.spotifystreamer.model.entity.Artist>.size()"], "Fixed commit": "9b6099556eff9dd3cfc559e0729d27b03deae3ce", "Url": "https://api.github.com/repos/tassioauad/SpotifyStreamer", "Date": "2015-06-25T23:45:41Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((warnData.size()) > 5) { warnData = warnData.subList(0, 4); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4622/buggy-version/SmartBridge.app.src.main.java.com.captain.smartbridge.UI.Activity.Monitor.SensorCurveActivity.java", "BodyUseAPI": ["java.util.List<com.captain.smartbridge.model.other.MonData>.subList(int,int)"], "Fixed commit": "803ae0e724ba0f94727e02a303f8eb520599d3ef", "Url": "https://api.github.com/repos/moneyDboat/SmartBridge", "Date": "2017-08-22T06:14:47Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (count != 0) { player.sendMessage(((((\"[jaoPost] \" + (org.bukkit.ChatColor.GREEN)) + \"jaotan\u304b\u3089\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\") + count) + \"\u4ef6\u3042\u308a\u307e\u3059\uff01\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3910/buggy-version/src.main.java.com.jaoafa.jaoPost.JaoPost.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(((((\"[jaoPost] \" + (org.bukkit.ChatColor.GREEN)) + \"jaotan\u304b\u3089\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\") + count) + \"\u4ef6\u3042\u308a\u307e\u3059\uff01\"))"], "Fixed commit": "abd6985bf1b091e4640ba2d415519c84127a50d5", "Url": "https://api.github.com/repos/jaoafa/jaoPost", "Date": "2017-01-09T08:33:57Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.items) != items) selectedItems.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2390/buggy-version/android-easy-core.src.main.java.com.easy.adapter.EasyAdapter.java", "BodyUseAPI": [], "Fixed commit": "3f843e9ec1e6f38da4150eb436db1255f09e50c0", "Url": "https://api.github.com/repos/jokehuang/android-easy", "Date": "2016-06-04T16:04:21Z"},
{"Line": "=>1256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (guess != null) android.util.Log.i(\"fplan.regexp\", (((\"QNH guess: \" + (guess.qnh)) + \" from: \") + (guess.descr)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7872/buggy-version/flightplanner.src.se.flightplanner2.Nav.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,(((\"QNH guess: \" + (guess.qnh)) + \" from: \") + (guess.descr)))"], "Fixed commit": "500bf37402fe3b773a0edf675eeaa23989cd5b0d", "Url": "https://api.github.com/repos/avl/androidflightplanner", "Date": "2013-06-14T21:07:37Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fenixedu.bennu.core.util.CookieReaderUtils.getCookieForName(java.lang.String,javax.servlet.http.HttpServletRequest)", "request.getServletContext().getContextPath()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((cookie == null) || (!(contextPath.equals(cookie.getValue())))) { javax.servlet.http.Cookie newCookie = new javax.servlet.http.Cookie(org.fenixedu.bennu.core.filters.ContextPathFilter.CONTEXT_PATH_COOKIE_NAME, contextPath); newCookie.setPath(\"/\"); httpServletResponse.addCookie(newCookie); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7325/buggy-version/server.bennu-core.src.main.java.org.fenixedu.bennu.core.filters.ContextPathFilter.java", "BodyUseAPI": [], "Fixed commit": "51971501474c87704469abc00d85937436da3e14", "Url": "https://api.github.com/repos/FenixEdu/bennu", "Date": "2014-02-13T19:59:46Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((op) == (wyone.core.Expr.NOp.SETGEN)) { return (\"{\" + args) + \"}\"; }else if ((op) == (wyone.core.Expr.NOp.BAGGEN)) { return (\"{|\" + args) + \"|}\"; }else { return (\"[\" + args) + \"]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7996/buggy-version/modules.wyone.src.wyone.core.Expr.java", "BodyUseAPI": [], "Fixed commit": "2abc1e30df48ecb1a2e7c97b3a969305cff67563", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2012-09-11T17:42:03Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(dataSnapshot.getValue().toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (count > 0) friendFollowingCountReference.setValue((count - 1)); else friendFollowingCountReference.setValue(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4979/buggy-version/app.src.main.java.com.manoeuvres.android.database.DatabaseHelper.java", "BodyUseAPI": ["com.google.firebase.database.DatabaseReference.setValue(int)"], "Fixed commit": "49509ef31a61671ee9fc21b6fc8dce3b189d7dab", "Url": "https://api.github.com/repos/h1man5hu/Manoeuvres", "Date": "2016-11-04T12:58:53Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(dataSnapshot.getValue().toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (count > 0) friendFollowersCountReference.setValue((count - 1)); else friendFollowersCountReference.setValue(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4979/buggy-version/app.src.main.java.com.manoeuvres.android.database.DatabaseHelper.java", "BodyUseAPI": ["com.google.firebase.database.DatabaseReference.setValue(int)"], "Fixed commit": "49509ef31a61671ee9fc21b6fc8dce3b189d7dab", "Url": "https://api.github.com/repos/h1man5hu/Manoeuvres", "Date": "2016-11-04T12:58:53Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(dataSnapshot.getValue().toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (count > 0) friendRequestsCountReference.setValue((count - 1)); else friendRequestsCountReference.setValue(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4979/buggy-version/app.src.main.java.com.manoeuvres.android.database.DatabaseHelper.java", "BodyUseAPI": ["com.google.firebase.database.DatabaseReference.setValue(int)"], "Fixed commit": "49509ef31a61671ee9fc21b6fc8dce3b189d7dab", "Url": "https://api.github.com/repos/h1man5hu/Manoeuvres", "Date": "2016-11-04T12:58:53Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(dataSnapshot.getValue().toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (count > 0) com.manoeuvres.android.database.DatabaseHelper.mUserFollowersCountReference.setValue((count - 1)); else com.manoeuvres.android.database.DatabaseHelper.mUserFollowersCountReference.setValue(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4979/buggy-version/app.src.main.java.com.manoeuvres.android.database.DatabaseHelper.java", "BodyUseAPI": ["com.google.firebase.database.DatabaseReference.setValue(int)"], "Fixed commit": "49509ef31a61671ee9fc21b6fc8dce3b189d7dab", "Url": "https://api.github.com/repos/h1man5hu/Manoeuvres", "Date": "2016-11-04T12:58:53Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(dataSnapshot.getValue().toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (count > 0) com.manoeuvres.android.database.DatabaseHelper.mUserRequestsCountReference.setValue((count - 1)); else com.manoeuvres.android.database.DatabaseHelper.mUserRequestsCountReference.setValue(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4979/buggy-version/app.src.main.java.com.manoeuvres.android.database.DatabaseHelper.java", "BodyUseAPI": ["com.google.firebase.database.DatabaseReference.setValue(int)"], "Fixed commit": "49509ef31a61671ee9fc21b6fc8dce3b189d7dab", "Url": "https://api.github.com/repos/h1man5hu/Manoeuvres", "Date": "2016-11-04T12:58:53Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(dataSnapshot.getValue().toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (count > 0) com.manoeuvres.android.database.DatabaseHelper.mUserFollowingCountReference.setValue((count - 1)); else com.manoeuvres.android.database.DatabaseHelper.mUserFollowingCountReference.setValue(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4979/buggy-version/app.src.main.java.com.manoeuvres.android.database.DatabaseHelper.java", "BodyUseAPI": ["com.google.firebase.database.DatabaseReference.setValue(int)"], "Fixed commit": "49509ef31a61671ee9fc21b6fc8dce3b189d7dab", "Url": "https://api.github.com/repos/h1man5hu/Manoeuvres", "Date": "2016-11-04T12:58:53Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (tagsWithBoolList != null) { for (org.skywalking.apm.trace.tag.BooleanTagItem item : tagsWithBoolList) { if (tag.key().equals(item.getKey())) { return item.getValue(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7639/buggy-version/apm-sniffer.apm-sniffer-mock.src.main.java.org.skywalking.apm.sniffer.mock.trace.tags.BooleanTagReader.java", "BodyUseAPI": [], "Fixed commit": "903a2a17a0aeeff6bdca90499225488386b7e75a", "Url": "https://api.github.com/repos/JThink/sky-walking", "Date": "2017-06-09T14:35:50Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.lucene.document.InetAddressPoint.encode(java.net.InetAddress)", "org.apache.lucene.document.InetAddressPoint.encode(java.net.InetAddress)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((org.apache.lucene.util.StringHelper.compare(org.apache.lucene.document.InetAddressRange.BYTES, minEncoded, 0, maxEncoded, 0)) > 0) { throw new java.lang.IllegalArgumentException(\"min value cannot be greater than max value for InetAddressRange field\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3162/buggy-version/lucene.misc.src.java.org.apache.lucene.document.InetAddressRange.java", "BodyUseAPI": [], "Fixed commit": "2bdb3c7d1e738bbcfffa45bf47639446b0734f0f", "Url": "https://api.github.com/repos/apache/lucene-solr", "Date": "2017-04-05T16:10:15Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fin) { m2.find(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/590/buggy-version/ex6.src.oop.ex6.variables.Function.java", "BodyUseAPI": [], "Fixed commit": "2cacb8ffc5cd92a45c176cb99ab979084bcba397", "Url": "https://api.github.com/repos/efi136/ex6_OOP_2016", "Date": "2016-06-14T05:40:31Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tcpPacket.getSeqNum()) == (base)) { java.util.Set<java.lang.Integer> sentSeqNums = sentRequests.keySet(); if ((sentSeqNums.size()) > 0) base = java.util.Collections.min(sentSeqNums); else base = tcpPacket.getACK(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6232/buggy-version/src.MSTCP.vegas.more.MSTCPRequesterConnection.java", "BodyUseAPI": ["MSTCP.vegas.more.TCPPacket.getACK()"], "Fixed commit": "5134310a4f4bce85233039d93e9fdcf30eb49aa2", "Url": "https://api.github.com/repos/ndavison21/MSTCP", "Date": "2017-05-09T16:28:09Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (id instanceof edu.swmed.qbrc.auth.cashmac.server.acl.utils.NoInterceptionWrapper) { edu.swmed.qbrc.auth.cashmac.server.hibernate.interceptors.CasHmacInterceptor.log.trace(((\"Skip Read: \" + (entity.getClass().getName())) + \" was wrapped with NoInterceptionWrapper class.\")); return super.onLoad(entity, id, state, propertyNames, types); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6721/buggy-version/cashmac-server.src.main.java.edu.swmed.qbrc.auth.cashmac.server.hibernate.interceptors.CasHmacInterceptor.java", "BodyUseAPI": ["org.hibernate.EmptyInterceptor.onLoad(java.lang.Object,java.io.Serializable,java.lang.Object[],java.lang.String[],org.hibernate.type.Type[])"], "Fixed commit": "dde1673cbb1f3c60f9dadab748bf43403f1bf4d1", "Url": "https://api.github.com/repos/QBRC/CasHmac", "Date": "2013-05-23T23:47:21Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["appeng.block.storage.BlockChest.getTileEntity(net.minecraft.world.World,int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (GuiBridge.GUI_CHEST.hasPermissions(tg, x, y, z, net.minecraftforge.common.util.ForgeDirection.values()[side], p)) { tg.openGui(p, ch, cell, side); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2906/buggy-version/src.main.java.appeng.block.storage.BlockChest.java", "BodyUseAPI": ["appeng.tile.storage.TileChest.openGui(net.minecraft.entity.player.EntityPlayer,appeng.api.storage.ICellHandler,net.minecraft.item.ItemStack,int)"], "Fixed commit": "15640f5eae80f29c612b929f931089d0bb8ef677", "Url": "https://api.github.com/repos/thepaperpilot/Applied-Energistics-2", "Date": "2014-09-25T22:25:31Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.clerezza.rdf.core.sparql.query.Query.getQueryPattern()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (queryPattern == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1759/buggy-version/rdf.core.src.main.java.org.apache.clerezza.rdf.core.sparql.SparqlPreParser.java", "BodyUseAPI": [], "Fixed commit": "f9dd60554089d7582b1df42de8f8c2c5f8089850", "Url": "https://api.github.com/repos/apache/clerezza", "Date": "2014-01-24T20:56:46Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.clerezza.rdf.core.sparql.query.Query.getQueryPattern()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (queryPattern != null) { java.util.Set<org.apache.clerezza.rdf.core.sparql.query.GraphPattern> graphPatterns = queryPattern.getGraphPatterns(); for (org.apache.clerezza.rdf.core.sparql.query.GraphPattern graphPattern : graphPatterns) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1759/buggy-version/rdf.core.src.main.java.org.apache.clerezza.rdf.core.sparql.SparqlPreParser.java", "BodyUseAPI": ["org.apache.clerezza.rdf.core.sparql.query.GroupGraphPattern.getGraphPatterns()"], "Fixed commit": "f9dd60554089d7582b1df42de8f8c2c5f8089850", "Url": "https://api.github.com/repos/apache/clerezza", "Date": "2014-01-24T20:56:46Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index > 0) { artifactId = artifactId.substring(0, index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5947/buggy-version/src.main.java.eu.miman.forge.plugin.util.NazgulPrjUtil.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "c35b7b7555852ede23f3c428d9b1516a994df235", "Url": "https://api.github.com/repos/miman/miman-forge-plugin-util", "Date": "2014-01-25T15:28:40Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.forge.resources.Resource<?>.getChild(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (parentDir == null) { parentDir = ((org.jboss.forge.resources.DirectoryResource) (child)).getChild((artifactId + \"-parent\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5947/buggy-version/src.main.java.eu.miman.forge.plugin.util.NazgulPrjUtil.java", "BodyUseAPI": [], "Fixed commit": "c35b7b7555852ede23f3c428d9b1516a994df235", "Url": "https://api.github.com/repos/miman/miman-forge-plugin-util", "Date": "2014-01-25T15:28:40Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (vest.has(\"thumbnail_images\")) { org.json.JSONObject thumbnailJSON = vest.getJSONObject(\"thumbnail_images\"); imageURL = thumbnailJSON.getJSONObject(\"full\").getString(\"url\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7143/buggy-version/app.src.main.java.com.vesti.fonis.fonisvesti.NewsDownloaderService.java", "BodyUseAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Fixed commit": "cee2ea943bd22af9b6bfe599d97c39cff6ddcebc", "Url": "https://api.github.com/repos/FonisVesti/FonisVesti", "Date": "2016-05-07T23:52:52Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((commentMap.get(\"type\")) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1435/buggy-version/app.src.main.java.com.fudi.fudi.back.CommentSection.java", "BodyUseAPI": [], "Fixed commit": "d6680e64818051556e6b5737082765039755b21c", "Url": "https://api.github.com/repos/nuplex/Fudi", "Date": "2016-05-10T23:06:01Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mButtonTexts.length) == 1) { return getSingleItemBg(); }else if (index == 0) { return getFirstItemBg(); }else if (index == ((mButtonTexts.length) - 1)) { return getLastItemBg(); }else { return getNormalItemBg(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2129/buggy-version/app.src.main.java.com.rod.springbutton.SpringButton.java", "BodyUseAPI": [], "Fixed commit": "4927af762621f6c50f65fd4dd19a5fc2aefc52ba", "Url": "https://api.github.com/repos/RodZhang/SpringButton", "Date": "2016-06-15T13:33:20Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (finalYielder != null) { finalYielder.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4223/buggy-version/common.src.main.java.io.druid.common.guava.CombiningSequence.java", "BodyUseAPI": ["com.metamx.common.guava.Yielder<T>.close()"], "Fixed commit": "4df923243ca450447fee550a1c02a90b3a5730cf", "Url": "https://api.github.com/repos/sirpkt/druid", "Date": "2016-05-02T01:08:54Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((comments) != null) { comments = reverseComments(comments); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1043/buggy-version/src.ch.bbc.rottengold.controller.CommentController.java", "BodyUseAPI": [], "Fixed commit": "d8017bfc85bedf9b9790322dea4a75218928380b", "Url": "https://api.github.com/repos/zniedl-bbc/rottengold_WEB", "Date": "2016-12-13T08:12:11Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastPosition) != null) { mapView.setCenter(new org.mapsforge.core.GeoPoint(lastPosition.getLat(), lastPosition.getLon())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6907/buggy-version/src.at.dornbirn.LostActivity.java", "BodyUseAPI": [], "Fixed commit": "b07a76b0c00e3457443609266c01c1c9cc2758d7", "Url": "https://api.github.com/repos/Fafin/LOST", "Date": "2012-06-21T17:29:41Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (0 == (com.zion.htf.adapter.LineUpPagerAdapter.stages.size())) { org.michenux.android.db.sqlite.SQLiteDatabaseHelper dbHelper = com.zion.htf.Application.getDbHelper(); android.database.Cursor cursor = dbHelper.getReadableDatabase().rawQuery(\"SELECT * FROM lst__stages;\", null); while (cursor.moveToNext()) { com.zion.htf.adapter.LineUpPagerAdapter.stages.add(cursor.getString(0)); } cursor.close(); dbHelper.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8219/buggy-version/src.com.zion.htf.adapter.LineUpPagerAdapter.java", "BodyUseAPI": [], "Fixed commit": "c506170ba37114c733cfdf4d8bf43fc27106dc8d", "Url": "https://api.github.com/repos/sbooob/Hadra-Trance-Festival", "Date": "2013-08-15T23:28:17Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getClickedBlock()) == null) for (org.bukkit.inventory.ItemStack leftOver : event.getPlayer().getInventory().addItem(new org.bukkit.inventory.ItemStack(org.bukkit.Material.EXP_BOTTLE, bottleCount)).values()) event.getPlayer().getWorld().dropItemNaturally(event.getPlayer().getLocation(), leftOver); else event.getClickedBlock().getWorld().dropItemNaturally(event.getClickedBlock().getLocation(), new org.bukkit.inventory.ItemStack(org.bukkit.Material.EXP_BOTTLE, bottleCount));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/527/buggy-version/src.main.java.com.sk89q.craftbook.mech.XPStorer.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "event.getClickedBlock().getWorld()", "event.getPlayer().getWorld().dropItemNaturally(event.getPlayer().getLocation(),org.bukkit.inventory.ItemStack)", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "org.bukkit.event.player.PlayerInteractEvent.getClickedBlock()", "event.getPlayer().getWorld()", "org.bukkit.event.player.PlayerInteractEvent.getClickedBlock()", "event.getPlayer().getLocation()", "event.getClickedBlock().getLocation()", "event.getPlayer().getInventory().addItem(new org.bukkit.inventory.ItemStack(org.bukkit.Material.EXP_BOTTLE, bottleCount)).values()", "event.getPlayer().getInventory().addItem(org.bukkit.inventory.ItemStack)", "event.getPlayer().getInventory()", "event.getClickedBlock().getWorld().dropItemNaturally(event.getClickedBlock().getLocation(),org.bukkit.inventory.ItemStack)"], "Fixed commit": "f5354de9e2f34aa10f7d27232d73de018bc1ab54", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2014-04-07T06:52:35Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.christopher.cs499.createAccount.4.gaveValidPassword(password.getText().toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (validPassword) { boolean passwordsMatch = passwordsMatch(password.getText().toString(), confirmPassword.getText().toString()); setPasswordMatchError(passwordsMatch, passwordError); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2389/buggy-version/app.src.main.java.com.example.christopher.cs499.createAccount.java", "BodyUseAPI": [], "Fixed commit": "64fa85c661d7e3c7fc01eeade32fd24b40509458", "Url": "https://api.github.com/repos/Christopher-Will/CS499_app", "Date": "2017-11-06T21:46:21Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sound) { player.playSound(player.getLocation(), Sound.ORB_PICKUP, 1.0F, 0.5F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4787/buggy-version/src.craftoplugin.core.CraftoMessenger.java", "BodyUseAPI": [], "Fixed commit": "fbe21cbb64bfb7b9aca8632609aad862f976c1d6", "Url": "https://api.github.com/repos/Craftolution/CraftoPlugin", "Date": "2015-01-22T20:57:09Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (returnedChannel.isOpen()) { returnedChannel.configureBlocking(false); returnedChannel.register(selector, java.nio.channels.SelectionKey.OP_READ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1322/buggy-version/src.main.java.net.IOControl.java", "BodyUseAPI": ["java.nio.channels.SocketChannel.register(java.nio.channels.Selector,int)", "java.nio.channels.SocketChannel.configureBlocking(boolean)"], "Fixed commit": "a29dbd2ec02fe6aa61f80b69d63f279582bc7269", "Url": "https://api.github.com/repos/tcz19920402/iocontrol", "Date": "2015-10-04T05:36:44Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (opt.contains(\"lakeTile\")) { playing = updateCurrentPlayer(gameObj, playing); gameObj.setPlayerCurrentTurn(playing); exchangeRun = false; dedicationRun = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7015/buggy-version/src.edu.concordia.app.model.NormalGamePlay.java", "BodyUseAPI": [], "Fixed commit": "31afeb01146478cf9a857f45cf1200cf8e2d2290", "Url": "https://api.github.com/repos/rohannyk/alpha-lan-terns", "Date": "2015-08-12T02:38:12Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (e != null) { for (org.kuali.rice.kim.api.identity.principal.Principal p : e.getPrincipals()) { org.kuali.rice.kim.impl.identity.PersonImpl person = convertEntityToPerson(e, p); person.setActive(e.isActive()); retval.add(person); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7912/buggy-version/kim.kim-ldap.src.main.java.edu.arizona.kim.service.impl.UaPersonService.java", "BodyUseAPI": ["edu.arizona.kim.service.impl.UaPersonService.convertEntityToPerson(org.kuali.rice.kim.api.identity.entity.EntityDefault,org.kuali.rice.kim.api.identity.principal.Principal)", "org.kuali.rice.kim.impl.identity.PersonImpl.setActive(e.isActive())", "org.kuali.rice.kim.api.identity.entity.EntityDefault.isActive()", "org.kuali.rice.kim.api.identity.entity.EntityDefault.getPrincipals()"], "Fixed commit": "51df0c6cba027938fb89d033e4ec64fffa037e8c", "Url": "https://api.github.com/repos/ua-eas/ksd-kc5.2.1-rice", "Date": "2015-08-26T21:50:19Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fileIndex.containsFile(encodedFile.getFilePath())) { fileIndex.handleFileModification(encodedFile); }else { fileIndex.addFile(encodedFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/1362/buggy-version/src.main.java.indexer.handler.IndexUpdater.java", "BodyUseAPI": ["indexer.index.FileIndex.handleFileModification(indexer.utils.EncodedFile)", "indexer.index.FileIndex.addFile(indexer.utils.EncodedFile)"], "Fixed commit": "bcbd8081916941a2f4102f1cf7045ec660b951c8", "Url": "https://api.github.com/repos/octomarat/JavaIndexer", "Date": "2014-10-20T01:09:45Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(result.isPresent())) { throw new java.lang.ClassNotFoundException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5170/buggy-version/modules.API.src.main.java.com.comphenix.protocol.utility.CachedPackage.java", "BodyUseAPI": [], "Fixed commit": "36b5670b3ddb5b2f7f70689f45d48538da1b0321", "Url": "https://api.github.com/repos/dmulloy2/ProtocolLib", "Date": "2016-11-26T11:50:27Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode != (android.app.Activity.RESULT_OK)) { mUpdatingDataProgress.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/7957/buggy-version/SmartReceiptsLibrary.src.main.java.co.smartreceipts.android.fragments.ReceiptsListFragment.java", "BodyUseAPI": [], "Fixed commit": "88833dbac2593782695a90f3902f11d3d2e2f483", "Url": "https://api.github.com/repos/wbaumann/SmartReceiptsLibrary", "Date": "2016-10-20T18:12:21Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((null != handler) && (!(handler.equals(\"/select\")))) { query.setQueryType(handler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3934/buggy-version/src.main.java.org.mule.modules.SolrConnector.java", "BodyUseAPI": ["org.apache.solr.client.solrj.SolrQuery.setQueryType(java.lang.String)"], "Fixed commit": "c85d82201bc8e1e62cc8f6107298de5e00c0337e", "Url": "https://api.github.com/repos/ttennebkram/mule-module-solr", "Date": "2014-04-18T03:11:32Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.geworkbenchweb.pojos.Network.getEdgeNumber()", "org.geworkbenchweb.pojos.Network.getNodeNumber()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((edgeNumber + nodeNumber) <= (org.geworkbenchweb.plugins.NetworkViewer.limit_num)) { option = org.geworkbenchweb.plugins.NetworkViewer.DisplayOption.CYTOSCAPE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4800/buggy-version/src.main.java.org.geworkbenchweb.plugins.NetworkViewer.java", "BodyUseAPI": [], "Fixed commit": "25e0b95b488a08aa393cd9a0ac8cb1b12ad5ddb5", "Url": "https://api.github.com/repos/geworkbench-group/geworkbench-web", "Date": "2014-08-15T16:38:30Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((touchedShape) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8989/buggy-version/app.src.main.java.com.example.sabila.handymind.tools.SelectionTool.java", "BodyUseAPI": [], "Fixed commit": "1fef511ea73ca691612a74a91d2930d117815762", "Url": "https://api.github.com/repos/bellaarnindya/HandyMind", "Date": "2017-12-15T14:03:24Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.ucscclasssearch.BookmarkManager.getBookmarks(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (courses == null) courses = new java.util.ArrayList<com.github.ucscclasssearch.Course>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5364/buggy-version/src.com.github.ucscclasssearch.BookmarkManager.java", "BodyUseAPI": [], "Fixed commit": "1e09a5f79c486c818e3a913b877ae335d7c5d8b5", "Url": "https://api.github.com/repos/MaxLaumeister/UCSCClassSearch", "Date": "2014-06-08T21:08:14Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(killContaminationDeliveries.contains(d.getId()))) { result.add(d.getRecipientId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/9162/buggy-version/de.bund.bfr.knime.openkrise.src.de.bund.bfr.knime.openkrise.Tracing.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(d.getRecipientId())", "de.bund.bfr.knime.openkrise.common.Delivery.getRecipientId()"], "Fixed commit": "2052f82edb28056495e2cbd5744793faf55bfbde", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2015-10-01T11:16:02Z"},
{"Line": "=>1282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.inaturalist.android.INaturalistService.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (json == null) return new org.inaturalist.android.BetterJSONObject();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2302/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.INaturalistService.java", "BodyUseAPI": [], "Fixed commit": "19cb21d3f65e624585199065ced114828ad32fe6", "Url": "https://api.github.com/repos/budowski/iNaturalistAndroid", "Date": "2016-05-22T06:51:10Z"},
{"Line": "=>921", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.continuous)) { item.setPeriod(this.type.id); for (com.sodiumcow.cc.Schedule.Calendar c : this.calendars) { c.transcribe(item.addCalendar()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/686/buggy-version/src.com.sodiumcow.cc.Schedule.java", "BodyUseAPI": [], "Fixed commit": "a26c003402f74e8cba5ed064d1a6f7fe4e4f89a4", "Url": "https://api.github.com/repos/jthielens/cleo-core", "Date": "2014-10-01T16:37:40Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(end.isEmpty())) { if (utility.Keyword.getMeaning(data.get(i).getValue(Keyword.TYPE)).equals(Keyword.FLOATING)) { data.get(i).setValue(Keyword.TYPE, java.lang.String.valueOf(Keyword.DEADLINE)); } data.get(i).setValue(Keyword.END, end); }else { if (utility.Keyword.getMeaning(data.get(i).getValue(Keyword.TYPE)).equals(Keyword.DEADLINE)) { data.get(i).setValue(Keyword.TYPE, java.lang.String.valueOf(Keyword.FLOATING)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4941/buggy-version/src.pact.DataHandler.java", "BodyUseAPI": ["data.get(i).setValue(Keyword.END,java.lang.String)"], "Fixed commit": "bc636165a40998a998421e83793891e4d986a88d", "Url": "https://api.github.com/repos/cs2103aug2014-w11-3j/Pact", "Date": "2014-11-03T12:37:46Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eligoDto.isXlsxFormat()) { org.apache.poi.xssf.usermodel.XSSFWorkbook workbook = new org.apache.poi.xssf.usermodel.XSSFWorkbook(file); sheet = workbook.getSheetAt(0); }else { org.apache.poi.hssf.usermodel.HSSFWorkbook workbook = new org.apache.poi.hssf.usermodel.HSSFWorkbook(file); sheet = workbook.getSheetAt(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6694/buggy-version/gde-webapp.src.main.java.com.nagarro.gde.controller.EligoController.java", "BodyUseAPI": [], "Fixed commit": "1ba4386066365239b3e825ef8845b878494f55d5", "Url": "https://api.github.com/repos/nagarro-gde/GDE", "Date": "2015-02-26T04:55:59Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.NodeList.item(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (child.getNodeName().equals(\"Author\")) { java.lang.String author = parseAuthor(child); authors.add(author); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6448/buggy-version/src.main.java.us.percept.pile.repo.pubmed.PubmedSource.java", "BodyUseAPI": ["us.percept.pile.repo.pubmed.PubmedSource.parseAuthor(org.w3c.dom.Node)"], "Fixed commit": "ab5640cb8e2087455aae525db6aebcd1c47156c1", "Url": "https://api.github.com/repos/spartango/Pile", "Date": "2013-08-21T05:48:56Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((event.getAppliedEffects()) != null) && (event.getAppliedEffects().contains(effect.getId()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6441/buggy-version/Mage.src.mage.abilities.effects.ContinuousEffects.java", "BodyUseAPI": [], "Fixed commit": "1a1fc092213032149ce93055e6dfd7099c3cf29d", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2014-07-31T13:16:48Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nodes.size()) == 0) nodes.add(new rules.TreeNode(null));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/4221/buggy-version/src.main.java.rules.SipSingle.java", "BodyUseAPI": ["java.util.Deque<rules.TreeNode>.add(rules.TreeNode)"], "Fixed commit": "bba8d5e3e0d2a367138f4ad929b287b1dcc497e7", "Url": "https://api.github.com/repos/keeps/roda-in", "Date": "2015-10-20T16:54:27Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN)) { intBuffer.rewind(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2820/buggy-version/Android.src.com.visor.knight.NativeConverter.java", "BodyUseAPI": [], "Fixed commit": "a77efc6733d05b4c76b1a6381415fea3043f6311", "Url": "https://api.github.com/repos/eternalmatt/KnightVisor", "Date": "2013-07-02T01:56:57Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((processingTimes.size()) != (weights.size())) || ((processingTimes.size()) != (dueTimes.size()))) { throw new java.io.IOException(\"The numbers of entries for processing times, weights and/or due times did not match up.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8612/buggy-version/src.main.java.outfrost.algorithmdesign.JobOrderLoader.java", "BodyUseAPI": [], "Fixed commit": "14e64d5ade3de8d46ac4829be93824bc30bc816a", "Url": "https://api.github.com/repos/outfrost/algorithm-design", "Date": "2017-12-22T22:47:00Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.typesafe.config.Config.getConfig(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (appConfig.hasPath(AlertEmailConstants.CC_RECIPIENTS)) { mailProps.setCc(appConfig.getString(AlertEmailConstants.CC_RECIPIENTS)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/3027/buggy-version/eagle-core.eagle-app.eagle-app-base.src.main.java.org.apache.eagle.app.service.ApplicationEmailService.java", "BodyUseAPI": ["com.typesafe.config.Config.getString(AlertEmailConstants.CC_RECIPIENTS)", "org.apache.eagle.common.mail.AlertEmailContext.setCc(appConfig.getString(AlertEmailConstants.CC_RECIPIENTS))"], "Fixed commit": "5d6533c4a7ddd37a6f45c60e2105a4fc5724c044", "Url": "https://api.github.com/repos/qingwen220/eagle", "Date": "2016-12-14T09:53:32Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.droneWrapper.isTesting()) { console.getOutputStream().println(\"DRONE STARTED IN TESTING MODE\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/2328/buggy-version/src.de.yadrone.apps.cdio.Program.java", "BodyUseAPI": [], "Fixed commit": "bcaa9eebb556856f53bb91130831f49ad1170418", "Url": "https://api.github.com/repos/Trivivium/CDIO-4", "Date": "2017-06-05T13:33:51Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentCal) instanceof cajac.aliveline.CalendarFragment.CalendarDayFragment) { switchFrame(new cajac.aliveline.CalendarFragment.CalendarDayFragment()); }else { switchFrame(new cajac.aliveline.CalendarFragment.CalendarMonthFragment()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/8397/buggy-version/app.src.main.java.cajac.aliveline.CalendarFragment.java", "BodyUseAPI": [], "Fixed commit": "f93b8f208510a0e7bf18ac2163401fdd76903c45", "Url": "https://api.github.com/repos/jmaeda/Aliveline", "Date": "2015-07-11T15:59:23Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.yarn.server.nodemanager.containermanager.resourceplugin.fpga.IntelFpgaOpenclPlugin.InnerShellExecutor.getMajorAndMinorNumber(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null != majorMinorNumber) { java.lang.String[] mmn = majorMinorNumber.split(\":\"); this.aliasMap.put(majorMinorNumber, aliasName); list.add(new org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.fpga.FpgaResourceAllocator.FpgaDevice(getFpgaType(), java.lang.Integer.parseInt(mmn[0]), java.lang.Integer.parseInt(mmn[1]), null, fields[0], aliasName, fields[1], fields[2], fields[3])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/6258/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-nodemanager.src.main.java.org.apache.hadoop.yarn.server.nodemanager.containermanager.resourceplugin.fpga.IntelFpgaOpenclPlugin.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "896034a58424467b0da1e38748d5b69849a5e526", "Url": "https://api.github.com/repos/tangzhankun/hadoop", "Date": "2017-11-22T12:40:36Z"},
{"Line": "=>2409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (record != null) { if ((record.isActive()) && (!(record.isValid()))) { record.setExpirationTime(java.lang.Long.MAX_VALUE); record.setMaxIdle(java.lang.Long.MAX_VALUE); } storeProceed(cmap, request); }else { returnResponse(request); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V73/5215/buggy-version/hazelcast.src.main.java.com.hazelcast.impl.ConcurrentMapManager.java", "BodyUseAPI": ["com.hazelcast.impl.Record.setExpirationTime(long)", "com.hazelcast.impl.Record.setMaxIdle(long)", "com.hazelcast.impl.Record.isActive()", "com.hazelcast.impl.Record.isValid()"], "Fixed commit": "7ce39fd33c4d9a87d2dd4ee542e29573c60f4b19", "Url": "https://api.github.com/repos/hazelcast/hazelcast", "Date": "2012-05-24T12:15:44Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (anyAreSet(channelState, ((org.jboss.remoting3.remote.RemoteConnectionHandler.RECEIVED_CLOSE_REQ) | (org.jboss.remoting3.remote.RemoteConnectionHandler.SENT_CLOSE_REQ)))) { pendingChannels.remove(pendingChannel); result.setCancelled(); return org.xnio.IoUtils.nullCancellable(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1870/buggy-version/src.main.java.org.jboss.remoting3.remote.RemoteConnectionHandler.java", "BodyUseAPI": [], "Fixed commit": "771985f76cb956d392f698ffcde5d50fdc608399", "Url": "https://api.github.com/repos/dmlloyd/jboss-remoting", "Date": "2016-01-28T18:13:55Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.syzton.sunread.model.book.Dictionary.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (label.equals(\"\u6240\u6709\u7c7b\u522b\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8884/buggy-version/SunReadSource.src.main.java.com.syzton.sunread.service.organization.ClazzRepositoryService.java", "BodyUseAPI": [], "Fixed commit": "d1e87daad97bbddcb49d48bda69b3ede3728f8e8", "Url": "https://api.github.com/repos/xxing1982/EDU_SYZT", "Date": "2015-09-02T02:33:03Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hour) > 9) { if ((minute) > 9) { _editText.setText(new java.lang.StringBuilder().append(hour).append(\":\").append(minute)); }else { _editText.setText(new java.lang.StringBuilder().append(hour).append(\":\").append(0).append(minute)); } }else { if ((minute) > 9) { _editText.setText(new java.lang.StringBuilder().append(0).append(hour).append(\":\").append(minute)); }else { _editText.setText(new java.lang.StringBuilder().append(0).append(hour).append(\":\").append(0).append(minute)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7630/buggy-version/app.src.main.java.layout.MyEditTextTimePicker.java", "BodyUseAPI": [], "Fixed commit": "6f88e89bff80940b90555a678306fa3ab11ec652", "Url": "https://api.github.com/repos/noah-trilling/diabeteseselfmanagement_wundergrads", "Date": "2016-08-20T21:33:40Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getResources().getString(R.string.locale).equals(\"global\")) { android.content.Intent intent = new android.content.Intent(this, com.gmail.appytalkteam.appytalkcore.LanguageSelectorActivity.class); startActivity(intent); }else { android.content.Intent intent = new android.content.Intent(this, com.gmail.appytalkteam.appytalkcore.CategorySelectorActivity.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6504/buggy-version/app.src.main.java.com.gmail.appytalkteam.appytalkcore.QuizActivity.java", "BodyUseAPI": [], "Fixed commit": "024220515d8a5ba9e55fb4181efc9382117b1984", "Url": "https://api.github.com/repos/lewismcgeary/VocabBuilder", "Date": "2015-07-23T14:40:25Z"},
{"Line": "=>1461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tmp.indexOf(\"oracle.sql.TIMESTAMPTZ\")) >= 0) { tmp = rs.getTimestamp(1).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5157/buggy-version/src.org.citydb.modules.common.balloon.BalloonTemplateHandlerImpl.java", "BodyUseAPI": [], "Fixed commit": "20a6f489d01e11cd7a0cf4ce33d496e5d18e958e", "Url": "https://api.github.com/repos/3dcitydb/importer-exporter", "Date": "2015-03-11T09:39:44Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.se.ebid.dao.TransactionDAO.findByTransactionID(long)", "com.se.ebid.dao.ItemDAO.findByItemID(transaction.getItemID())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((item.getQuantity()) < (transaction.getQuantity())) { return TransactionService.ERR_NOT_ENOUGH_QTY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6513/buggy-version/src.main.java.com.se.ebid.service.TransactionServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "c0bbfc3007dc05b3688f5fd4945cfddee55e42f3", "Url": "https://api.github.com/repos/quxiz/ebid", "Date": "2014-12-03T13:35:01Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.se.ebid.service.TransactionService.checkOutTransaction(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (success == (com.se.ebid.service.TransactionService.ERR_NOT_ENOUGH_QTY)) { model.addAttribute(\"isSuccess\", false); model.addAttribute(\"text\", \"\u0e08\u0e33\u0e19\u0e27\u0e19\u0e2a\u0e34\u0e19\u0e04\u0e49\u0e32\u0e1b\u0e31\u0e08\u0e08\u0e38\u0e1a\u0e31\u0e19\u0e44\u0e21\u0e48\u0e40\u0e1e\u0e35\u0e22\u0e07\u0e1e\u0e2d \u0e01\u0e23\u0e38\u0e13\u0e32\u0e15\u0e34\u0e14\u0e15\u0e48\u0e2d\u0e23\u0e30\u0e1a\u0e1a\u0e0a\u0e33\u0e23\u0e30\u0e40\u0e07\u0e34\u0e19(PayPal)\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e41\u0e08\u0e49\u0e07\u0e1b\u0e31\u0e0d\u0e2b\u0e32 \u0e41\u0e25\u0e30\u0e02\u0e2d\u0e23\u0e31\u0e1a\u0e40\u0e07\u0e34\u0e19\u0e04\u0e37\u0e19\"); }else { model.addAttribute(\"isSuccess\", false); model.addAttribute(\"text\", \"\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e43\u0e19\u0e01\u0e32\u0e23\u0e0a\u0e33\u0e23\u0e30\u0e40\u0e07\u0e34\u0e19 \u0e2b\u0e32\u0e01\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14 \u0e01\u0e23\u0e38\u0e13\u0e32\u0e41\u0e08\u0e49\u0e07\u0e1c\u0e39\u0e49\u0e41\u0e25\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6513/buggy-version/src.main.java.com.se.ebid.controller.CheckOutController.java", "BodyUseAPI": [], "Fixed commit": "c0bbfc3007dc05b3688f5fd4945cfddee55e42f3", "Url": "https://api.github.com/repos/quxiz/ebid", "Date": "2014-12-03T13:35:01Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.MSSE.MobileDVR.fragments.info.ShowInfoFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (arguments == null) { view = new android.widget.TextView(getActivity()); ((android.widget.TextView) (view)).setGravity(Gravity.CENTER); ((android.widget.TextView) (view)).setText(getString(R.string.no_show_info)); }else { view = inflater.inflate(R.layout.show_details, container, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1567/buggy-version/src.com.MSSE.MobileDVR.fragments.info.ShowInfoFragment.java", "BodyUseAPI": [], "Fixed commit": "791d6fe986d09c8a7279dbf7e50447ca5cea3eb6", "Url": "https://api.github.com/repos/ward0093/MobileDVR", "Date": "2013-05-09T02:32:30Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.MSSE.MobileDVR.fragments.info.ShowInfoFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (arguments == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1567/buggy-version/src.com.MSSE.MobileDVR.fragments.info.ShowInfoFragment.java", "BodyUseAPI": [], "Fixed commit": "791d6fe986d09c8a7279dbf7e50447ca5cea3eb6", "Url": "https://api.github.com/repos/ward0093/MobileDVR", "Date": "2013-05-09T02:32:30Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.mich1eal.ivanpah.activities.Setup.settings.contains(getString(R.string.config))) { int checkId = (com.mich1eal.ivanpah.activities.Setup.settings.getBoolean(getString(R.string.config), false)) ? 0 : 1; com.mich1eal.ivanpah.activities.Setup.radios.check(com.mich1eal.ivanpah.activities.Setup.radios.getChildAt(checkId).getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4794/buggy-version/app.src.main.java.com.mich1eal.ivanpah.activities.Setup.java", "BodyUseAPI": ["android.content.SharedPreferences.getBoolean(getString(R.string.config),boolean)"], "Fixed commit": "58f112a19a442f1915f34f733322c3688352ea10", "Url": "https://api.github.com/repos/mich1eal/Ivanpah", "Date": "2017-10-17T05:15:41Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.resolve(java.nio.file.Path)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(path.equals(targetImage))) com.kodcu.other.IOHelper.copy(path, targetImage);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/9141/buggy-version/src.main.java.com.kodcu.service.ParserService.java", "BodyUseAPI": ["com.kodcu.other.IOHelper.copy(java.nio.file.Path,java.nio.file.Path)"], "Fixed commit": "dc01b00cb54e07f23272ac110cd5e6947d4767d3", "Url": "https://api.github.com/repos/asciidocfx/AsciidocFX", "Date": "2015-02-01T09:44:43Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.resolve(java.nio.file.Path)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(path.equals(targetPath))) com.kodcu.other.IOHelper.copy(path, targetPath);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/9141/buggy-version/src.main.java.com.kodcu.service.ParserService.java", "BodyUseAPI": ["com.kodcu.other.IOHelper.copy(java.nio.file.Path,java.nio.file.Path)"], "Fixed commit": "dc01b00cb54e07f23272ac110cd5e6947d4767d3", "Url": "https://api.github.com/repos/asciidocfx/AsciidocFX", "Date": "2015-02-01T09:44:43Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getExternalPriceModelService().getExternalPriceModelForService(org.oscm.internal.vo.VOServiceDetails)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (priceModel == null) { throw new org.oscm.internal.pricemodel.external.ExternalPriceModelException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/852/buggy-version/oscm-portal.javasrc.org.oscm.ui.dialog.classic.pricemodel.external.ExternalServicePriceModelCtrl.java", "BodyUseAPI": [], "Fixed commit": "e065ca72f96297d1c471d3d2893086749b80f092", "Url": "https://api.github.com/repos/servicecatalog/development", "Date": "2016-05-02T07:46:06Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pageSize == (DimensionSettings.AUTO)) throw new java.lang.IllegalArgumentException(\"Both page size and sheet size are auto. Cannot resolve final size.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/726/buggy-version/src.com.github.singond.pdfriend.imposition.Overlay.java", "BodyUseAPI": [], "Fixed commit": "f119801a704ff508d1874ab54f2444d4a1d946bf", "Url": "https://api.github.com/repos/Singond/PDFriend", "Date": "2017-11-09T19:38:21Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((visitListCombo.getItemCount()) > 0) { java.lang.String[] splits = visitListCombo.getText().split(\" - \"); java.lang.String projectNameContent = ((beamlineListCombo.getText()) + \"-\") + (splits[0]); lblDefaultProjectname.setText((\"DEF: \" + projectNameContent)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5646/buggy-version/uk.ac.diamond.scisoft.beamlineexplorer.rcp.src.uk.ac.diamond.scisoft.beamlineexplorer.rcp.wizards.BeamlineDataWizardPage.java", "BodyUseAPI": ["visitListCombo.getText().split(java.lang.String)", "org.eclipse.swt.widgets.Combo.getText()"], "Fixed commit": "93430542ce617d8b4a51467dc2eea8316a6d136d", "Url": "https://api.github.com/repos/DawnScience/scisoft-ui", "Date": "2013-03-26T14:03:16Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof java.nio.file.NoSuchFileException) { return \"missing\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7496/buggy-version/src.jse.Data.java", "BodyUseAPI": [], "Fixed commit": "952e01bf3917ff595dec2675521facdb339d8580", "Url": "https://api.github.com/repos/QuaintShanty/JavaSearchEngine", "Date": "2017-03-22T09:17:56Z"},
{"Line": "=>1035", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((game.getContainer()) != null) { game.getContainer().setTargetFrameRate(fps); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4107/buggy-version/src.cell2D.CellGame.java", "BodyUseAPI": ["org.newdawn.slick.state.StateBasedGame.getContainer()", "game.getContainer().setTargetFrameRate(int)"], "Fixed commit": "dd0397bed9f09ce58b38fa83ac76e0130f5b3a17", "Url": "https://api.github.com/repos/AndrewHeyman/Cell2D", "Date": "2017-03-22T18:19:15Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (root != null) { this.root = root; this.size = toTupleArray().size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7132/buggy-version/src.main.java.ua.yandex.shad.utils.TSTree.java", "BodyUseAPI": [], "Fixed commit": "c0ca72c08b0e6243c52d0915bc3a1f99dd522f66", "Url": "https://api.github.com/repos/vlfom/ys15fomenko-hw2", "Date": "2015-10-24T15:05:23Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (creations != null) { for (java.util.Map.Entry<java.lang.String, java.lang.Object> entry : creations.entrySet()) { java.util.Map singleCreation = ((java.util.Map) (entry.getValue())); android.util.Log.d(TAG, \"received creation\"); android.util.Log.d(TAG, (\"adding message: \" + (singleCreation.get(\"message\").toString()))); outputMessageList.add(singleCreation.get(\"message\").toString()); if (singleCreation.get(\"type\").equals(\"image\")) { android.util.Log.d(TAG, \"storage paths found\"); storage_path_list.add(singleCreation.get(\"extra_storage_path\").toString()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2287/buggy-version/app.src.main.java.android.duke290.com.loco.StartActivity.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.entrySet()"], "Fixed commit": "9dd1da89a21037a352566bfb64885595674121ce", "Url": "https://api.github.com/repos/fairbet/loco", "Date": "2017-04-18T21:29:33Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6685/buggy-version/src.gui.propertysheet.types.StringProperty.java", "BodyUseAPI": [], "Fixed commit": "b26025de10530fde8274212e3d0a2a140a3714fe", "Url": "https://api.github.com/repos/zetool/components-property", "Date": "2015-09-12T23:43:04Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (object instanceof com.alibaba.fastjson.parser.deserializer.ExtraProcessable) { com.alibaba.fastjson.parser.deserializer.ExtraProcessable extraProcessable = ((com.alibaba.fastjson.parser.deserializer.ExtraProcessable) (object)); extraProcessable.processExtra(key, value); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6547/buggy-version/src.main.java.com.alibaba.fastjson.serializer.FilterUtils.java", "BodyUseAPI": [], "Fixed commit": "823ea13a0298380c602ee4c791fd0b988af3ad3b", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-04-16T08:18:26Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((codeLines.size()) == 0) return new java.util.ArrayList<java.lang.Integer>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1892/buggy-version/src.main.java.jscover.report.JSONDataMerger.java", "BodyUseAPI": [], "Fixed commit": "8a6925ebbea8d4336ede7f07aac08ec3a4442e57", "Url": "https://api.github.com/repos/tntim96/JSCover", "Date": "2013-07-13T10:19:23Z"},
{"Line": "=>4939", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sessionFactory.getCurrentSession().createSQLQuery(sql).setResultTransformer(org.hibernate.transform.Transformers.aliasToBean(com.ut.dph.model.messagePatients.class))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((query.list().size()) > 1) { return ((com.ut.dph.model.messagePatients) (query.list().get(0))); }else { return ((com.ut.dph.model.messagePatients) (query.uniqueResult())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8049/buggy-version/src.main.java.com.ut.dph.dao.impl.transactionInDAOImpl.java", "BodyUseAPI": ["org.hibernate.Query.list()", "query.list().get(int)", "org.hibernate.Query.uniqueResult()"], "Fixed commit": "fb9690f62d11c76a49251d883ca81a55d7c2dc3b", "Url": "https://api.github.com/repos/thenhkid/universalTranslator", "Date": "2016-01-28T14:45:13Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(path.startsWith(\"file:/\"))) && (path.startsWith(\"file:\"))) { path = \"file:/\" + (path.substring(5, path.length())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6158/buggy-version/portal-impl.src.com.liferay.portal.module.framework.RuntimeServiceLoaderCondition.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "fdddfd63f3c944e2c8cac3da8436de9112009a32", "Url": "https://api.github.com/repos/CsabaTurcsan/liferay-portal", "Date": "2015-09-24T21:18:42Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(statusManager.areParametersUpdated())) { com.brainydroid.daydreaming.background.Logger.i(com.brainydroid.daydreaming.ui.dashboard.DashboardActivity.TAG, \"parameters not downloaded yet, not updating timestamp\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1779/buggy-version/daydreaming.src.main.java.com.brainydroid.daydreaming.ui.dashboard.DashboardActivity.java", "BodyUseAPI": [], "Fixed commit": "d861119e973471a66805b0c501242f90a394a1b6", "Url": "https://api.github.com/repos/daydreaming-experiment/app", "Date": "2014-08-28T18:10:50Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Vector.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((ev.getEndDate()) != null) { return ((((((ev.getTimeString()) + \" on \") + (ev.getStartDate().getShortDateString())) + \" - \") + (ev.getEndTimeString())) + \" on \") + (ev.getEndDate().getShortDateString()); }else { return ((ev.getTimeString()) + \" - \") + (ev.getEndTimeString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4513/buggy-version/src.net.sf.memoranda.ui.EventsTable.java", "BodyUseAPI": ["net.sf.memoranda.Event.getEndTimeString()", "net.sf.memoranda.Event.getTimeString()", "net.sf.memoranda.Event.getTimeString()", "net.sf.memoranda.Event.getStartDate()", "net.sf.memoranda.Event.getEndDate()", "ev.getEndDate().getShortDateString()", "ev.getStartDate().getShortDateString()", "net.sf.memoranda.Event.getEndTimeString()"], "Fixed commit": "924c5daf4f837075f8d1c3d8f0029c9c972794a5", "Url": "https://api.github.com/repos/ser316asu/Zehlendorf_SER316", "Date": "2017-04-10T04:30:15Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((e.getEndDate()) != null) { s += ((((((((((((((\"<tr>\\n<td>\" + icon) + \"</td>\") + \"<td nowrap class=\\\"eventtime\\\">\") + (e.getTimeString())) + \" on \") + (e.getStartDate().getShortDateString())) + \" - \") + (e.getEndTimeString())) + \" on \") + (e.getEndDate().getShortDateString())) + \"</td>\") + \"<td width=\\\"100%\\\" class=\\\"eventtext\\\">&nbsp;&nbsp;\") + txt) + \"</td>\\n\") + \"</tr>\"; }else { s += ((((((((((\"<tr>\\n<td>\" + icon) + \"</td>\") + \"<td nowrap class=\\\"eventtime\\\">\") + (e.getTimeString())) + \" - \") + (e.getEndTimeString())) + \"</td>\") + \"<td width=\\\"100%\\\" class=\\\"eventtext\\\">&nbsp;&nbsp;\") + txt) + \"</td>\\n\") + \"</tr>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4513/buggy-version/src.net.sf.memoranda.util.AgendaGenerator.java", "BodyUseAPI": ["net.sf.memoranda.Event.getTimeString()", "net.sf.memoranda.Event.getEndDate()", "e.getStartDate().getShortDateString()", "net.sf.memoranda.Event.getEndTimeString()", "net.sf.memoranda.Event.getEndTimeString()", "e.getEndDate().getShortDateString()", "net.sf.memoranda.Event.getStartDate()", "net.sf.memoranda.Event.getTimeString()"], "Fixed commit": "924c5daf4f837075f8d1c3d8f0029c9c972794a5", "Url": "https://api.github.com/repos/ser316asu/Zehlendorf_SER316", "Date": "2017-04-10T04:30:15Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startTime) == 0) { synchronized(this) { if ((startTime) == 0) { startTime = java.lang.System.currentTimeMillis(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4687/buggy-version/components.analytics-io.org.wso2.carbon.analytics.eventsink.src.main.java.org.wso2.carbon.analytics.eventsink.internal.AnalyticsDSConnector.java", "BodyUseAPI": [], "Fixed commit": "432698832e568c4dc8af0f5b4c19b0293bde0e0b", "Url": "https://api.github.com/repos/thiliA/carbon-analytics", "Date": "2016-07-04T11:19:07Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["call.require(\"command\").asString().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((commandData.length) == 0) { throw sirius.kernel.health.Exceptions.createHandled().withSystemErrorMessage(\"Please enter a command!\").handle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7577/buggy-version/src.main.java.sirius.web.health.console.ConsoleService.java", "BodyUseAPI": [], "Fixed commit": "0fb7f19335c7ebdf7fe70a48cebf76e4a3109440", "Url": "https://api.github.com/repos/scireum/sirius-web", "Date": "2017-08-11T12:27:04Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newVac.getSide_administered_left()) == true) auditLogLineItem.setNew_value(\"Left\"); else auditLogLineItem.setNew_value(\"Right\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3830/buggy-version/api.src.main.java.org.openmrs.module.vaccinations.api.impl.UtilsServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "0b48abfb25e997fc90274c22450a2f4abc17a086", "Url": "https://api.github.com/repos/lordogoo/Vaccinations", "Date": "2015-12-23T05:11:20Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getParentFile()) != null) getParentFile().mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7579/buggy-version/WraithEngine.src.wraith.library.File.BinaryFile.CompactBinaryFile.java", "BodyUseAPI": [], "Fixed commit": "0ed588d53968c1e7fa6620d5e0036f12bc16920d", "Url": "https://api.github.com/repos/TheDudeFromCI/WraithEngine", "Date": "2015-01-11T06:56:01Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(con.isFinishing())) { dialog.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7480/buggy-version/DissonantCooperation.src.com.mcindoe.dissonantcooperation.views.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "a87ea6c42c627929db360b51f912d86ee2637c67", "Url": "https://api.github.com/repos/rmcindoe3/Dissonant-Cooperation", "Date": "2014-04-12T10:21:11Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(con.isFinishing())) { dialog.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7480/buggy-version/DissonantCooperation.src.com.mcindoe.dissonantcooperation.views.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "a87ea6c42c627929db360b51f912d86ee2637c67", "Url": "https://api.github.com/repos/rmcindoe3/Dissonant-Cooperation", "Date": "2014-04-12T10:21:11Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((progressFragment) != null) progressFragment.dismissAllowingStateLoss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5406/buggy-version/src.org.qii.weiciyuan.ui.send.CommentNewActivity.java", "BodyUseAPI": [], "Fixed commit": "473707c61d54c10eb3bc4afc18e3f7712463409b", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-09T06:53:00Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(line)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2016/buggy-version/xmen-common.src.main.java.com.solid4j.xmen.common.extension.ExtensionLoader.java", "BodyUseAPI": [], "Fixed commit": "64361ed6861a1a0d8eb5dc23040a5f9777b536ca", "Url": "https://api.github.com/repos/solidwang/xmen", "Date": "2017-09-05T08:49:03Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((PlatformPropsImpl.CPU_ARCH.getFamily()) == (Platform.CPUFamily.ARM)) && (PlatformPropsImpl.LITTLE_ENDIAN)) { return com.jogamp.common.os.MachineDescription.StaticConfig.ARMle_EABI; }else if ((PlatformPropsImpl.OS_TYPE) == (Platform.OSType.WINDOWS)) { return com.jogamp.common.os.MachineDescription.StaticConfig.X86_32_WINDOWS; }else if ((PlatformPropsImpl.OS_TYPE) == (Platform.OSType.MACOS)) { return com.jogamp.common.os.MachineDescription.StaticConfig.X86_32_MACOS; }else if ((PlatformPropsImpl.OS_TYPE) == (Platform.OSType.SUNOS)) { if ((PlatformPropsImpl.CPU_ARCH) == (Platform.CPUType.SPARC_32)) { return com.jogamp.common.os.MachineDescription.StaticConfig.SPARC_32_SUNOS; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3194/buggy-version/src.java.jogamp.common.os.MachineDescriptionRuntime.java", "BodyUseAPI": [], "Fixed commit": "3cf28f2980b1593e4b32230d5206decd6afe2cbb", "Url": "https://api.github.com/repos/rhatcher/gluegen", "Date": "2013-06-13T18:53:44Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (true) throw new java.lang.NullPointerException((111 + \"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/93/buggy-version/src.main.java.org.freeplace.cloudide.controller.AppController.java", "BodyUseAPI": [], "Fixed commit": "9b632a3bdc6ad0079de898879cae9f9e26e0cc72", "Url": "https://api.github.com/repos/freePlace/CloudIDE", "Date": "2016-01-29T16:49:52Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (displayWriter != null) { displayWriter.println(\"begin\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5569/buggy-version/src.main.java.edu.nyu.cs.hps.evasion.game.GameHost.java", "BodyUseAPI": ["java.io.PrintWriter.println(java.lang.String)"], "Fixed commit": "cb575e5ccc190624ade4f062763cd107702fbc00", "Url": "https://api.github.com/repos/danielrotar/evasion", "Date": "2016-10-23T00:17:43Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((subSelect.getWithItemsList()) != null) { for (net.sf.jsqlparser.util.WithItem withItem : subSelect.getWithItemsList()) { withItem.accept(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8834/buggy-version/src.main.java.net.sf.jsqlparser.util.TablesNamesFinder.java", "BodyUseAPI": ["net.sf.jsqlparser.util.SubSelect.getWithItemsList()"], "Fixed commit": "276ddc8a4dd8bf73cc2710761c345ba4bf7f71d3", "Url": "https://api.github.com/repos/opeongo/JSqlParser", "Date": "2016-08-04T01:44:08Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.raf.length()) > (header.headerLength)) { this.raf.seek(((this.raf.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3737/buggy-version/src.main.java.com.linuxense.javadbf.DBFWriter.java", "BodyUseAPI": [], "Fixed commit": "9cc57cadf8ae622041aea3f8abce860288bca04a", "Url": "https://api.github.com/repos/albfernandez/javadbf", "Date": "2017-08-09T21:51:21Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getNewValue()) instanceof ultraextreme.model.enemy.IEnemy) { entity = ((ultraextreme.model.enemy.AbstractEnemy) (event.getNewValue())).getShip(); }else { entity = ((ultraextreme.model.entity.AbstractEntity) (event.getNewValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8663/buggy-version/src.ultraextreme.controller.GameLoop.java", "BodyUseAPI": ["java.beans.PropertyChangeEvent.getNewValue()", "java.beans.PropertyChangeEvent.getNewValue()", "java.lang.Object.getShip()"], "Fixed commit": "af55ded7ac5229548de3e1d6001acabaaae9f511", "Url": "https://api.github.com/repos/DAT255-group20/UltraExtreme", "Date": "2012-09-29T08:14:32Z"},
{"Line": "=>728", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mPost.getContentText()) != null) && (!(mPost.getContentText().toString().equalsIgnoreCase(\"null\")))) postContentTextView.setText(mPost.getContentText()); else postContentTextView.setText(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7905/buggy-version/CNAndroidApp.src.main.java.com.thecn.app.tools.controllers.PostViewController.java", "BodyUseAPI": ["android.widget.TextView.setText(mPost.getContentText())", "com.thecn.app.models.content.Post.getContentText()"], "Fixed commit": "d79ea888e281de6ec2804e0273a07fd1d72ad062", "Url": "https://api.github.com/repos/milanmanvar/CNAndroidApp-Milan", "Date": "2016-06-06T05:11:52Z"},
{"Line": "=>498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (releaseDate != null) { try { java.util.Date relDate = formatter.parse(releaseDate); pdbHeader.setModDate(relDate); } catch (java.text.ParseException e) { org.biojava.nbio.structure.io.mmtf.MmtfStructureReader.logger.warn(\"Could not parse date string '{}', release/modification date will be unavailable\", releaseDate); } }else { pdbHeader.setModDate(new java.util.Date(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8642/buggy-version/biojava-structure.src.main.java.org.biojava.nbio.structure.io.mmtf.MmtfStructureReader.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,java.lang.String)", "java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "180aa27e9798b3260d7509440234e9e569539b8a", "Url": "https://api.github.com/repos/josemduarte/biojava", "Date": "2016-05-24T14:53:42Z"},
{"Line": "=>487", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (depositionDate != null) { try { java.util.Date depDate = formatter.parse(depositionDate); pdbHeader.setDepDate(depDate); } catch (java.text.ParseException e) { org.biojava.nbio.structure.io.mmtf.MmtfStructureReader.logger.warn(\"Could not parse date string '{}', depositon date will be unavailable\", depositionDate); } }else { pdbHeader.setDepDate(new java.util.Date(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8642/buggy-version/biojava-structure.src.main.java.org.biojava.nbio.structure.io.mmtf.MmtfStructureReader.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)", "org.slf4j.Logger.warn(java.lang.String,java.lang.String)"], "Fixed commit": "180aa27e9798b3260d7509440234e9e569539b8a", "Url": "https://api.github.com/repos/josemduarte/biojava", "Date": "2016-05-24T14:53:42Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.candidates[rank]) == null) { return \"Nobody\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5542/buggy-version/Ballot.java", "BodyUseAPI": [], "Fixed commit": "b4fd86b7e1f506bb5d70670107dd740d7df88f95", "Url": "https://api.github.com/repos/Kassmanben/VotingSystems", "Date": "2017-09-20T23:48:20Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) == 2) { if (args[0].equalsIgnoreCase(\"chop\")) { java.lang.System.out.println(args[1].replace(\"eclipse/cauldron/src/main/java/\", \"\")); return; } }else java.lang.System.out.println(((\"You gave : \" + (args.length)) + \" args. Usage: java makepatch FILENAME / chop ECLIPSE_CAULDRON_NAME\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4697/buggy-version/makepatch.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "c36c0759fd2c0d60a538ace121b3d6d7ec27b2e3", "Url": "https://api.github.com/repos/CyberdyneCC/Thermos", "Date": "2016-01-19T07:36:06Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["api.XTradeAPI.isRecordExisted(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (r != null) { java.lang.System.out.println(r.toString()); }else { java.lang.System.out.println(\"No matched record.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5757/buggy-version/XTrade.src.client.Client2.java", "BodyUseAPI": ["java.io.PrintStream.println(r.toString())", "object.Record.toString()"], "Fixed commit": "d533ea6d411f9545f3d50a734192952d4a7d4c00", "Url": "https://api.github.com/repos/jasonchenliang/XTrade", "Date": "2013-06-02T02:00:45Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.util.Objects.isNull(getDriver(url)))) { connection = getDriver(url).connect(url, info); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4953/buggy-version/neo4j-jdbc-driver.src.main.java.org.neo4j.jdbc.Driver.java", "BodyUseAPI": ["org.neo4j.jdbc.Driver.getDriver(java.lang.String)", "org.neo4j.jdbc.BaseDriver.connect(java.lang.String,java.util.Properties)"], "Fixed commit": "7fdd45e448f36c99eacdeb334d8ddadac4665f72", "Url": "https://api.github.com/repos/larusba/neo4j-jdbc", "Date": "2017-11-19T04:46:27Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Class>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fieldName.equals(javaGenConfig.getEntityPrimaryKeyName())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4178/buggy-version/rgclient.src.main.java.org.rg.core.javagen.JavaDaoGen.java", "BodyUseAPI": [], "Fixed commit": "15e077c57e97e578c50eb7c8ff57b43f7a29e0ee", "Url": "https://api.github.com/repos/jiangfuqiang/rg", "Date": "2017-03-27T07:00:29Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.languagetool.rules.RuleMatch.getSuggestedReplacements()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((replacements.size()) > 0) { result = result.replace(error, match.getSuggestedReplacements().get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3422/buggy-version/src.main.java.chatbot.lib.handlers.TextHandler.java", "BodyUseAPI": [], "Fixed commit": "76abf8f8995cfa4d02c362cc26848ba4683f5982", "Url": "https://api.github.com/repos/dbpedia/chatbot", "Date": "2017-08-11T10:12:38Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (matrix instanceof org.gitools.matrix.model.hashmatrix.TriangularHashMatrix) { this.diagonal = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1444/buggy-version/org.gitools.matrix.src.main.java.org.gitools.matrix.model.MatrixPosition.java", "BodyUseAPI": [], "Fixed commit": "b7f0da7fc080ce97745237713987ae6e5259a723", "Url": "https://api.github.com/repos/gitools/gitools", "Date": "2014-03-03T22:43:10Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diagonal) { return doInvert(identifiers); }else { return identifiers; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1444/buggy-version/org.gitools.matrix.src.main.java.org.gitools.matrix.model.MatrixPosition.java", "BodyUseAPI": [], "Fixed commit": "b7f0da7fc080ce97745237713987ae6e5259a723", "Url": "https://api.github.com/repos/gitools/gitools", "Date": "2014-03-03T22:43:10Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((S.getDegree()) < n) || ((lambda.getDegree()) < L)) { throw com.google.zxing.ChecksumException.getChecksumInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8358/buggy-version/core.src.main.java.com.google.zxing.pdf417.decoder.ec.ErrorCorrection.java", "BodyUseAPI": [], "Fixed commit": "6f752dc744a92bad3860fc3cfa092266eb73ec1e", "Url": "https://api.github.com/repos/angelnar87/zxing", "Date": "2014-03-26T18:26:36Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(target instanceof net.minecraft.entity.player.EntityPlayerMP)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6617/buggy-version/src.main.java.com.forgeessentials.commands.util.ModuleCommandsEventHandler.java", "BodyUseAPI": [], "Fixed commit": "7759a45585c547f4444a1b7e05ef0f60d3c8cbc1", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentials", "Date": "2015-05-29T06:20:19Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMaxRetaliate[player]) == 0) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5243/buggy-version/gunslinger.g4.GameHistory.java", "BodyUseAPI": [], "Fixed commit": "0cfc2fc8fc3c23095c3019e44eee775aa4c5d3b6", "Url": "https://api.github.com/repos/jrbalsano/gunslinger", "Date": "2013-09-22T21:32:05Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (world.getBlock(((int) (x)), ((int) (y))).isSolid(world, ((int) (x)), ((int) (y)))) if (stray.util.MathHelper.intersects(((int) (x)), ((int) (y)), 1, 1, x, y, (8 * (stray.world.World.tilepartx)), (8 * (stray.world.World.tileparty)))) { lifetime = -1; prelife = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7423/buggy-version/src.stray.util.Particle.java", "BodyUseAPI": ["stray.util.MathHelper.intersects(float,float,int,int,float,float,(8 * (stray.world.World.tilepartx)),(8 * (stray.world.World.tileparty)))"], "Fixed commit": "1e157219f70517e33f5b4d4043b4e78cf16136b9", "Url": "https://api.github.com/repos/chrislo27/Stray-core", "Date": "2015-01-20T00:12:51Z"},
{"Line": "=>1796", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.googlecode.mgwt.ui.client.MGWT.getOsDetection().isDesktop())) { orientationChangeRegistration = com.googlecode.mgwt.ui.client.MGWT.addOrientationChangeHandler(new com.googlecode.mgwt.dom.client.event.orientation.OrientationChangeHandler() { @java.lang.Override public void onOrientationChanged(com.googlecode.mgwt.dom.client.event.orientation.OrientationChangeEvent event) { if (shouldHandleResize) { resize(); } } }); }else { orientationChangeRegistration = com.google.gwt.user.client.Window.addResizeHandler(new com.google.gwt.event.logical.shared.ResizeHandler() { @java.lang.Override public void onResize(com.google.gwt.event.logical.shared.ResizeEvent event) { if (shouldHandleResize) { resize(); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4761/buggy-version/src.main.java.com.googlecode.mgwt.ui.client.widget.impl.ScrollPanelTouchImpl.java", "BodyUseAPI": [], "Fixed commit": "602d1bb847ab6902d631a8b0cf2127cf17e5feb4", "Url": "https://api.github.com/repos/ckuetbach/mgwt", "Date": "2012-07-14T14:19:36Z"},
{"Line": "=>866", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mPref.isSimulationMode()) { android.location.Location l = mDestination.getLocation(); mLocationView.updateParams(new com.ds.avare.gps.GpsParams(l)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2750/buggy-version/src.com.ds.avare.LocationActivity.java", "BodyUseAPI": [], "Fixed commit": "c076cc481da90cafb6633c5c053b425307243654", "Url": "https://api.github.com/repos/apps4av/avare", "Date": "2013-08-30T22:17:15Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((kbArticle.getKbFolderId()) == (com.liferay.knowledge.base.constants.KBFolderConstants.DEFAULT_PARENT_FOLDER_ID)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/757/buggy-version/modules.apps.knowledge-base.knowledge-base-web.src.main.java.com.liferay.knowledge.base.web.internal.selector.KBFolderKBArticleSelector.java", "BodyUseAPI": [], "Fixed commit": "d755d8064a464fe30ed3e91353b88e1584f897d7", "Url": "https://api.github.com/repos/stmerriss/liferay-portal", "Date": "2017-03-29T07:52:07Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((temp.length()) == 0) return checkProhibited(str);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4356/buggy-version/src.cCalculator.GrammarCheck.java", "BodyUseAPI": [], "Fixed commit": "877e03d174613bcbfda2289b8db8b0e9e8ce1f88", "Url": "https://api.github.com/repos/mathiasplans/ComplextCalculator", "Date": "2017-04-30T19:27:17Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recordings.size()) == 0) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2170/buggy-version/core.src.main.java.com.automation.remarks.video.RecordingUtils.java", "BodyUseAPI": [], "Fixed commit": "4e8279a3f61cb7875188b72ddd140abdbc0e3b42", "Url": "https://api.github.com/repos/asolntsev/VideoRecorder", "Date": "2016-06-18T08:55:28Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((end - i) < remsize) { remsize = ((int) (end - i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3916/buggy-version/src.java.iota.FileRecordSeq.java", "BodyUseAPI": [], "Fixed commit": "fee91b721b621d5d94dfb52e5ac6d8db763eecec", "Url": "https://api.github.com/repos/thebusby/iota", "Date": "2017-04-14T19:37:09Z"},
{"Line": "=>1378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOpenSettingDropDown) { settingOptionsPopup.setVisible(true); logoutPanelVc.show(); isOpenSettingDropDown = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2428/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.home.HeaderUc.java", "BodyUseAPI": [], "Fixed commit": "e84a6395b8bc97fd1ca0222db250ff9a031ef96e", "Url": "https://api.github.com/repos/suryanarayanakb/Gooru-Web", "Date": "2015-02-03T12:49:00Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.emf.ecore.impl.MinimalEObjectImpl.eBasicSettings()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result == null) { eSettings(); result = super.eBasicSettings(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4288/buggy-version/de.hub.emffrag.src.de.hub.emffrag.fragmentation.AccessNotifyingEObjectImpl.java", "BodyUseAPI": [], "Fixed commit": "5a16ac1341c523900cf306478bc3a3b24671bb81", "Url": "https://api.github.com/repos/markus1978/emf-fragments", "Date": "2015-08-11T12:29:44Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Jama.Matrix.normF()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Double.isNaN(normF)) || ((iterations++) > (maxIterations))) { return new double[]{ java.lang.Double.NaN, java.lang.Double.NaN }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/324/buggy-version/src.main.org.deidentifier.arx.risk.AlgorithmNewtonRaphson.java", "BodyUseAPI": [], "Fixed commit": "bfe2e0c2ee817a74017ca7150859b19560cf73f3", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2015-03-04T15:39:34Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (control.objectsToLoad != null) control.objects.addAll(control.objectsToLoad);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7725/buggy-version/src.control.Controller.java", "BodyUseAPI": [], "Fixed commit": "8e003a327b455e96e67406bd3a411a7d5ea43025", "Url": "https://api.github.com/repos/ngc7293/UFRLRPG", "Date": "2015-04-26T21:41:41Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((searchFilterParcelable) != null) { buildSearchQuery(searchFilterParcelable); }else { urlSearchQuery.setLength(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7265/buggy-version/app.src.main.java.com.walmart.gridimagesearch.activities.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "c354c1afb1706fb13ab7af20e7d4f3a470d90f6f", "Url": "https://api.github.com/repos/nirusr/GridImageSearch", "Date": "2015-10-21T04:39:19Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getTime()) != (-1)) ze.setTime(entry.getTime());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3065/buggy-version/src.soot.jimple.infoflow.android.axml.ApkHandler.java", "BodyUseAPI": ["java.util.zip.ZipEntry.getTime()", "java.util.zip.ZipEntry.setTime(long)"], "Fixed commit": "03d56e2519f3eabc483c2df6bf67769ff3df42ad", "Url": "https://api.github.com/repos/wsnavely/soot-infoflow-android", "Date": "2015-06-24T11:13:09Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getSize()) != (-1)) ze.setSize(entry.getSize());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3065/buggy-version/src.soot.jimple.infoflow.android.axml.ApkHandler.java", "BodyUseAPI": ["java.util.zip.ZipEntry.getSize()", "java.util.zip.ZipEntry.setSize(long)"], "Fixed commit": "03d56e2519f3eabc483c2df6bf67769ff3df42ad", "Url": "https://api.github.com/repos/wsnavely/soot-infoflow-android", "Date": "2015-06-24T11:13:09Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getCrc()) != (-1)) ze.setCrc(entry.getCrc());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3065/buggy-version/src.soot.jimple.infoflow.android.axml.ApkHandler.java", "BodyUseAPI": ["java.util.zip.ZipEntry.getCrc()", "java.util.zip.ZipEntry.setCrc(long)"], "Fixed commit": "03d56e2519f3eabc483c2df6bf67769ff3df42ad", "Url": "https://api.github.com/repos/wsnavely/soot-infoflow-android", "Date": "2015-06-24T11:13:09Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 11) { net.neevek.android.lib.paginize.util.AnnotationUtils.sSetListenerMethodMap.put(View.OnLayoutChangeListener.class, \"addOnLayoutChangeListener\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5526/buggy-version/PaginizeLib.src.net.neevek.android.lib.paginize.util.AnnotationUtils.java", "BodyUseAPI": [], "Fixed commit": "068195ca9a385a2673c9b95c39ebf4a9d0658f62", "Url": "https://api.github.com/repos/neevek/Paginize", "Date": "2015-05-25T07:16:24Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(mConfirmPassword)) { mConfirmPasswordView.setError(getString(R.string.error_field_required)); focusView = mConfirmPasswordView; cancel = true; }else if (!(mPassword.toString().equals(mConfirmPassword.toString()))) { mConfirmPasswordView.setError(getString(R.string.error_mismatch_password)); focusView = mConfirmPasswordView; cancel = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4482/buggy-version/app.src.main.java.com.happen.app.SignupActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.toString()"], "Fixed commit": "7ebe3906f90d1cd87490ecca8246920ceae2207b", "Url": "https://api.github.com/repos/nyi/happen-android", "Date": "2014-02-12T01:53:02Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.neamar.kiss.KissApplication.getDataHandler(this).getAppProvider()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((appProvider != null) && (appProvider.isLoaded())) checkShowFavoritesBar();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5036/buggy-version/app.src.main.java.fr.neamar.kiss.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f75152bb45be6afe8c328e9c5cd785dc5c94af7b", "Url": "https://api.github.com/repos/nmitsou/KISS", "Date": "2016-07-16T16:24:26Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((v.getProfession()) != null) { this.actionData.profession = v.getProfession().toString().toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3728/buggy-version/src.main.java.me.botsko.prism.actions.EntityAction.java", "BodyUseAPI": ["v.getProfession().toString()", "org.bukkit.entity.Villager.getProfession()", "v.getProfession().toString().toLowerCase()"], "Fixed commit": "0d5fab8e1383ae8184573344666c073cd8e4eb98", "Url": "https://api.github.com/repos/Dykam/Prism", "Date": "2014-04-01T14:29:07Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.ConnectivityManager.getActiveNetworkInfo()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (!((networkInfo != null) && (networkInfo.isConnected()))) { if (((noInternetConnection) == null) || (!(noInternetConnection.isShowing()))) noInternetConnection = new com.leaf.clips.presenter.NoInternetAlert().show(this); else informationManager.downloadMapOfVisibleBeacons(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1202/buggy-version/app.src.main.java.com.leaf.clips.presenter.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "1974c9716a21c71e5f10b46a598a989733f5883f", "Url": "https://api.github.com/repos/LeafSWE/clips", "Date": "2016-06-11T10:04:25Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (\"sc:Manifest\".equalsIgnoreCase(type)) { fillFromJsonObject(jsonObject, manifestSummary); iiifManifestSummaryRepository.save(manifestSummary); }else if (\"sc:Collection\".equalsIgnoreCase(type)) { java.lang.Object manifestsNode = jsonObject.get(\"manifests\"); if ((manifestsNode != null) && (org.json.simple.JSONArray.class.isAssignableFrom(manifestsNode.getClass()))) { org.json.simple.JSONArray manifests = ((org.json.simple.JSONArray) (manifestsNode)); for (java.lang.Object manifest : manifests) { org.json.simple.JSONObject manifestObj = ((org.json.simple.JSONObject) (manifest)); java.lang.String uri = ((java.lang.String) (manifestObj.get(\"@id\"))); java.lang.String manifestType = ((java.lang.String) (manifestObj.get(\"@type\"))); if (\"sc:Manifest\".equalsIgnoreCase(manifestType)) { com.datazuul.iiif.bookshelf.model.IiifManifestSummary childManifestSummary = new com.datazuul.iiif.bookshelf.model.IiifManifestSummary(); childManifestSummary.setManifestUri(uri); enrichAndSave(childManifestSummary); } } } java.lang.Object collectionsNode = jsonObject.get(\"collections\"); if ((collectionsNode != null) && (org.json.simple.JSONArray.class.isAssignableFrom(collectionsNode.getClass()))) { org.json.simple.JSONArray collections = ((org.json.simple.JSONArray) (collectionsNode)); for (java.lang.Object collection : collections) { org.json.simple.JSONObject collectionObj = ((org.json.simple.JSONObject) (collection)); java.lang.String uri = ((java.lang.String) (collectionObj.get(\"@id\"))); java.lang.String collectionType = ((java.lang.String) (collectionObj.get(\"@type\"))); if ((\"sc:Manifest\".equalsIgnoreCase(collectionType)) || (\"sc:Collection\".equalsIgnoreCase(collectionType))) { com.datazuul.iiif.bookshelf.model.IiifManifestSummary childManifestSummary = new com.datazuul.iiif.bookshelf.model.IiifManifestSummary(); childManifestSummary.setManifestUri(uri); enrichAndSave(childManifestSummary); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8245/buggy-version/src.main.java.com.datazuul.iiif.bookshelf.business.service.impl.IiifManifestSummaryServiceImpl.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "3785260607b91f7c85ac2832198ec4d04da700ce", "Url": "https://api.github.com/repos/dbmdz/iiif-bookshelf-webapp", "Date": "2016-04-08T15:31:35Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (version != null) { manifestSummary.setVersion(version); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8245/buggy-version/src.main.java.com.datazuul.iiif.bookshelf.business.service.impl.IiifManifestSummaryServiceImpl.java", "BodyUseAPI": ["com.datazuul.iiif.bookshelf.model.IiifManifestSummary.setVersion(com.datazuul.iiif.presentation.api.model.Version)"], "Fixed commit": "3785260607b91f7c85ac2832198ec4d04da700ce", "Url": "https://api.github.com/repos/dbmdz/iiif-bookshelf-webapp", "Date": "2016-04-08T15:31:35Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.json.simple.JSONArray.class.isAssignableFrom(contextNode.getClass())) { org.json.simple.JSONArray contexts = ((org.json.simple.JSONArray) (contextNode)); for (java.lang.Object context : contexts) { version = com.datazuul.iiif.presentation.api.model.Version.getVersion(((java.lang.String) (context))); if (version != null) { break; } } }else { version = com.datazuul.iiif.presentation.api.model.Version.getVersion(((java.lang.String) (contextNode))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8245/buggy-version/src.main.java.com.datazuul.iiif.bookshelf.business.service.impl.IiifManifestSummaryServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "3785260607b91f7c85ac2832198ec4d04da700ce", "Url": "https://api.github.com/repos/dbmdz/iiif-bookshelf-webapp", "Date": "2016-04-08T15:31:35Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.Uri.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (uri.getScheme().startsWith(\"file\")) { uri = android.support.v4.content.FileProvider.getUriForFile(this, ((getApplicationContext().getPackageName()) + \".provider\"), new java.io.File(uri.getPath())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/465/buggy-version/library.src.main.java.com.cube.storm.ui.activity.StormWebActivity.java", "BodyUseAPI": ["android.net.Uri.getPath()", "android.support.v4.content.FileProvider.getUriForFile(com.cube.storm.ui.activity.StormWebActivity,((getApplicationContext().getPackageName()) + \".provider\"),java.io.File)"], "Fixed commit": "934f8bc29bb71702aa17ffe89a0fe4d6cd1b8dd0", "Url": "https://api.github.com/repos/3sidedcube/Android-LightningUi", "Date": "2017-05-23T11:52:51Z"},
{"Line": "=>1311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (var instanceof com.sun.jdi.CharValue) { return (\"'\" + (((com.sun.jdi.CharValue) (var)).value())) + \"'\"; }else if (var instanceof com.sun.jdi.ObjectReference) { com.sun.jdi.Value strValue = invoke(((com.sun.jdi.ObjectReference) (var)), \"toString\", new java.util.ArrayList()); if (strValue == null) return \"\"; java.lang.String v = strValue.toString(); if ((v.startsWith(\"\\\"\")) && (v.endsWith(\"\\\"\"))) { v = v.substring(1, ((v.length()) - 1)); } return v; }else if (var instanceof java.lang.String) { return (\"\\\"\" + ((java.lang.String) (var))) + \"\\\"\"; }else { return var.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/859/buggy-version/sztools.java.com.google.code.vimsztool.debug.eval.ExpEval.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "879c1ce8bd8f9b2665481f9ce81441419ebd3e23", "Url": "https://api.github.com/repos/shrekwang/vim-sztool", "Date": "2013-10-18T11:18:14Z"},
{"Line": "=>1316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.code.vimsztool.debug.eval.ExpEval.invoke(java.lang.Object,java.lang.String,java.util.ArrayList)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (strValue == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/859/buggy-version/sztools.java.com.google.code.vimsztool.debug.eval.ExpEval.java", "BodyUseAPI": [], "Fixed commit": "879c1ce8bd8f9b2665481f9ce81441419ebd3e23", "Url": "https://api.github.com/repos/shrekwang/vim-sztool", "Date": "2013-10-18T11:18:14Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (0 == i) { sheet.setColumnWidth(i, 3000); }else if (2 == i) { sheet.setColumnWidth(i, 5000); }else { sheet.autoSizeColumn(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5644/buggy-version/HDX-System.src.main.java.org.ocha.hdx.exporter.country.ExporterCountryOverview_XLSX.java", "BodyUseAPI": ["org.apache.poi.xssf.usermodel.XSSFSheet.setColumnWidth(int,int)", "org.apache.poi.xssf.usermodel.XSSFSheet.setColumnWidth(int,int)", "org.apache.poi.xssf.usermodel.XSSFSheet.autoSizeColumn(int)"], "Fixed commit": "01079526a8f58a419acf1e3647448b7016c68018", "Url": "https://api.github.com/repos/OCHA-DAP/DAP-System", "Date": "2014-03-11T15:28:00Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (0 == i) { sheet.setColumnWidth(i, 3000); }else if (4 == i) { sheet.setColumnWidth(i, 20000); }else { sheet.autoSizeColumn(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5644/buggy-version/HDX-System.src.main.java.org.ocha.hdx.exporter.country.AbstractExporterCountry_XLSX.java", "BodyUseAPI": ["org.apache.poi.xssf.usermodel.XSSFSheet.autoSizeColumn(int)", "org.apache.poi.xssf.usermodel.XSSFSheet.setColumnWidth(int,int)", "org.apache.poi.xssf.usermodel.XSSFSheet.setColumnWidth(int,int)"], "Fixed commit": "01079526a8f58a419acf1e3647448b7016c68018", "Url": "https://api.github.com/repos/OCHA-DAP/DAP-System", "Date": "2014-03-11T15:28:00Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.dataStore.getClaimAt(org.bukkit.Location,boolean,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (claim == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3374/buggy-version/src.au.com.mineauz.buildtools.protection.GPPlugin.java", "BodyUseAPI": [], "Fixed commit": "0d1728b39713a7cea954987173feec24ab73974b", "Url": "https://api.github.com/repos/AddstarMC/BuildTools", "Date": "2015-01-11T05:57:28Z"},
{"Line": "=>1107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sagebionetworks.repo.model.dao.FileHandleDao.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(authorizationManager.canAccessRawFileHandleByCreator(userInfo, handleIdToCopyFrom, originalFileHandle.getCreatedBy()).getAuthorized())) { throw new org.sagebionetworks.repo.model.UnauthorizedException(((\"Only the creator of a file handle can create a copy. File handle id=\" + handleIdToCopyFrom) + \" is not owned by you\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2733/buggy-version/services.repository-managers.src.main.java.org.sagebionetworks.repo.manager.file.FileHandleManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "fbbf49fd214df3c1d0ddf1eb48c5bb5f6b195d99", "Url": "https://api.github.com/repos/Sage-Bionetworks/Synapse-Repository-Services", "Date": "2015-07-31T16:59:23Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (response.isSuccess()) { com.classtranscribe.classcapture.models.User loggedInUser = response.body(); this.defaultRealm.beginTransaction(); this.defaultRealm.copyToRealmOrUpdate(loggedInUser); this.defaultRealm.commitTransaction(); dialog.dismiss(); this.goToMainActivity(); }else { dialog.dismiss(); android.widget.Toast.makeText(this, getString(R.string.login_error_message), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5441/buggy-version/app.src.main.java.com.classtranscribe.classcapture.controllers.activities.LoginActivity.java", "BodyUseAPI": ["retrofit.Response<com.classtranscribe.classcapture.models.User>.body()"], "Fixed commit": "cb51ac2f8fe06811bdb85d10fbb75c23d2322811", "Url": "https://api.github.com/repos/cs-education/ClassCapture_AndroidApp", "Date": "2016-01-28T06:26:55Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(field.isEmpty())) { this.setsumoHit(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3699/buggy-version/Client.WindChuckers_Main.Model_Extend.Tower.java", "BodyUseAPI": [], "Fixed commit": "982c79579c774f130b5cb25c8276a7ddf812e2f1", "Url": "https://api.github.com/repos/Foxodg/WindChuckers", "Date": "2017-07-19T14:23:47Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tvResourcesList.isEmpty())) { int loaded = tvResourceMapper.batchInsert(tvResourcesList); total += loaded; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1752/buggy-version/client-web-crawler.src.main.java.vip.fanrong.service.ZmzCrawlerService.java", "BodyUseAPI": ["vip.fanrong.mapper.TvResourceMapper.batchInsert(java.util.List<vip.fanrong.service.TvResource>)"], "Fixed commit": "c0c5b15635d0577a19711d1533d47523a840197c", "Url": "https://api.github.com/repos/r0n9/spring-cloud", "Date": "2017-12-19T01:46:08Z"},
{"Line": "=>621", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spanValue) instanceof gov.nasa.arc.mct.fastplot.view.TimeSpanTextField) { add(javax.swing.Box.createHorizontalStrut(((gov.nasa.arc.mct.fastplot.view.PlotSettingsControlPanel.INTERCONTROL_HORIZONTAL_SPACING) + 3))); add(new javax.swing.JLabel(gov.nasa.arc.mct.fastplot.view.PlotSettingsControlPanel.BUNDLE.getString(\"YearSpan\"))); add(javax.swing.Box.createHorizontalStrut(((gov.nasa.arc.mct.fastplot.view.PlotSettingsControlPanel.INTERCONTROL_HORIZONTAL_SPACING) + 3))); add(timeSpanValue.getYearSpanValue()); }else { add(boxOnRight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1206/buggy-version/fastPlotViews.src.main.java.gov.nasa.arc.mct.fastplot.view.PlotSettingsControlPanel.java", "BodyUseAPI": [], "Fixed commit": "3d9f5e98f94be3d4ff1dde800e5fbe4ab70873e2", "Url": "https://api.github.com/repos/debmalyaroy/mct", "Date": "2012-08-14T18:43:05Z"},
{"Line": "=>1134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spanValue) instanceof gov.nasa.arc.mct.fastplot.view.TimeSpanTextField) { add(javax.swing.Box.createHorizontalStrut(((gov.nasa.arc.mct.fastplot.view.PlotSettingsControlPanel.INTERCONTROL_HORIZONTAL_SPACING) + 3))); add(new javax.swing.JLabel(gov.nasa.arc.mct.fastplot.view.PlotSettingsControlPanel.BUNDLE.getString(\"YearSpan\"))); add(javax.swing.Box.createHorizontalStrut(((gov.nasa.arc.mct.fastplot.view.PlotSettingsControlPanel.INTERCONTROL_HORIZONTAL_SPACING) + 3))); add(timeSpanValue.getYearSpanValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1206/buggy-version/fastPlotViews.src.main.java.gov.nasa.arc.mct.fastplot.view.PlotSettingsControlPanel.java", "BodyUseAPI": [], "Fixed commit": "3d9f5e98f94be3d4ff1dde800e5fbe4ab70873e2", "Url": "https://api.github.com/repos/debmalyaroy/mct", "Date": "2012-08-14T18:43:05Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position.isWorking()) positions.put(positionName, position);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/655/buggy-version/planning.src.main.java.com.github.pjpo.planning.jours.JourChuMtp.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, com.github.pjpo.planning.lignes.Position>.put(java.lang.String,com.github.pjpo.planning.lignes.Position)"], "Fixed commit": "a540bef540cae04e478a73170a860cca85d29d60", "Url": "https://api.github.com/repos/pjpo/CPlan", "Date": "2015-05-19T20:43:46Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (viewerId.equals(participant.getId())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4823/buggy-version/app.model.ActivityDetail.java", "BodyUseAPI": [], "Fixed commit": "02a810430d841b5fe89f0074fa36427ea00e1cf5", "Url": "https://api.github.com/repos/genxium/PlayHongKongResort", "Date": "2014-08-17T17:08:26Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bitdubai.android_core.app.common.version_1.apps_manager.FermatAppsManager.selectRuntimeManager(com.bitdubai.fermat_api.layer.all_definition.navigation_structure.enums.FermatAppType)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (runtimeManager != null) for (java.lang.String key : fermatAppsManager.selectRuntimeManager(fermatAppType).getListOfAppsPublicKey()) { appsInstalledInDevice.put(key, fermatAppType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7855/buggy-version/fermat-android-core.src.main.java.com.bitdubai.android_core.app.common.version_1.apps_manager.AppsConfiguration.java", "BodyUseAPI": [], "Fixed commit": "8d434ff86dedea2edf1b8436c36c66447cc7b067", "Url": "https://api.github.com/repos/Fermat-ORG/fermat-framework", "Date": "2016-03-11T21:13:31Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((winner == (Winner.PLAYER1)) && ((this.playerID) == 1)) return 1; else if ((winner == (Winner.PLAYER2)) && ((this.playerID) == 2)) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7527/buggy-version/GameLogic.java", "BodyUseAPI": [], "Fixed commit": "4d1182b2c5ad51ce2131ba0fb4acde843990379d", "Url": "https://api.github.com/repos/nielssj/JN-SISP", "Date": "2013-03-17T22:50:46Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7424/buggy-version/sprite-font-builder.src.main.java.com.github.ykiselev.gfx.sprite.font.builder.CharacterRangeTab.java", "BodyUseAPI": [], "Fixed commit": "59274c731ac67b1362b7d1e8044962e48d2e414a", "Url": "https://api.github.com/repos/YKiselev/sprite-font", "Date": "2017-11-25T13:06:45Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lpparam.packageName.equals(com.trypto.android.xbettercam.APP_PACKAGE_CAMERA)) { @java.lang.SuppressWarnings({ \"unchecked\", \"rawtypes\" }) final java.lang.Class<? extends java.lang.Enum> CapturingMode = ((java.lang.Class<? extends java.lang.Enum>) (de.robv.android.xposed.XposedHelpers.findClass(com.trypto.android.xbettercam.PATH_CAPTURING_MODE, lpparam.classLoader))); @java.lang.SuppressWarnings(\"unchecked\") final java.lang.Enum<?> enumPhoto = java.lang.Enum.valueOf(CapturingMode, \"NORMAL\"); modLastCapturingMode(lpparam, CapturingMode, enumPhoto); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5075/buggy-version/src.com.trypto.android.xbettercam.XBetterCam.java", "BodyUseAPI": ["de.robv.android.xposed.XposedHelpers.findClass(com.trypto.android.xbettercam.PATH_CAPTURING_MODE,lpparam.classLoader)", "com.trypto.android.xbettercam.XBetterCam.modLastCapturingMode(de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam,java.lang.Class<? extends java.lang.Enum>,java.lang.Enum<?>)"], "Fixed commit": "5685fe90fec3e4b3c635b3e517f9bab4daf188c4", "Url": "https://api.github.com/repos/tryptophane/xperia-camera-enhancements", "Date": "2015-12-03T23:29:23Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(input.isEmpty())) { nextState(state(), 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2932/buggy-version/src.WiSAR.Agents.OperatorGUIRole.java", "BodyUseAPI": [], "Fixed commit": "30ac6d5f06bc3d11952df94d5e583693e9f43488", "Url": "https://api.github.com/repos/tjflexmaster/UAV_ROLE_MODEL", "Date": "2013-05-28T23:27:34Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!containFlag) && (!timeFlag)) { ru.khl.bot.utils.Connection.LOGGER.info(((\"Put the game \" + who) + \" into map...\")); ru.khl.bot.utils.Connection.GAME_MAP.put(who, how); ru.khl.bot.utils.Connection.getInfo(stringBuilder, when, who, how); }else if (containFlag && (!timeFlag)) { ru.khl.bot.utils.Connection.LOGGER.info(\"Waiting...\"); }else if (containFlag && timeFlag) { ru.khl.bot.utils.Connection.getInfo(stringBuilder, when, who, how); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6714/buggy-version/src.main.java.ru.khl.bot.utils.Connection.java", "BodyUseAPI": [], "Fixed commit": "38d4b21df7110e4fd8a4a85c51d92d32cc0a73e7", "Url": "https://api.github.com/repos/schepach/TelegramKHLBot", "Date": "2017-02-21T17:29:41Z"},
{"Line": "=>856", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getActivity().getSupportFragmentManager().findFragmentByTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fragment2 != null) getActivity().getSupportFragmentManager().beginTransaction().remove(fragment3).commit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3401/buggy-version/WorkoutLog.src.com.workout.log.ExerciseSpecific.java", "BodyUseAPI": [], "Fixed commit": "cf7f2a5ee939281ad65b1794e4bbd144ac67e631", "Url": "https://api.github.com/repos/es059/Mobile-Anwendungen", "Date": "2014-09-07T15:01:23Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_dirtyFlag) || (_presenter.getDirtyFlag())) { edu.utah.sci.cyclist.core.ui.wizards.SaveWsWizard wizard = new edu.utah.sci.cyclist.core.ui.wizards.SaveWsWizard(); javafx.beans.property.ObjectProperty<java.lang.Boolean> selection = wizard.show(_screen.getParent().getScene().getWindow()); selection.addListener(new javafx.beans.value.ChangeListener<java.lang.Boolean>() { @java.lang.Override public void changed(javafx.beans.value.ObservableValue<? extends java.lang.Boolean> arg0, java.lang.Boolean oldVal, java.lang.Boolean newVal) { if (newVal) { save(); } selectWorkspace(); } }); }else { selectWorkspace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3051/buggy-version/cyclist.src.edu.utah.sci.cyclist.core.controller.CyclistController.java", "BodyUseAPI": [], "Fixed commit": "52751bcece72883d850616dd2c1a0a17a258ae38", "Url": "https://api.github.com/repos/cyclus/cyclist2", "Date": "2014-04-08T16:35:08Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mShouldUpdateView) { ((com.shanejansen.mvpandroid.mvp.BasePresenter) (mPresenter)).viewReady(); mShouldUpdateView = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6459/buggy-version/mvpandroid.src.main.java.com.shanejansen.mvpandroid.fragments.MvpFragment.java", "BodyUseAPI": [], "Fixed commit": "9cd0e4d81c68e3d8ae028022f65139442c87b3e4", "Url": "https://api.github.com/repos/ShaneJansen/MvpAndroid", "Date": "2017-05-15T01:15:48Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.heimuheimu.naiverpc.monitor.ExecutionTimeInfo.getCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (executionCount > (lastExecutionCount)) { avgExecTimeData.value = (totalExecutionTime - (lastTotalExecutionTime)) / (executionCount - (lastExecutionCount)); }else { avgExecTimeData.value = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3731/buggy-version/src.main.java.com.heimuheimu.naiverpc.monitor.reporter.FalconRpcClientReporter.java", "BodyUseAPI": [], "Fixed commit": "8cd9810f1d93fff0ace9e7f7d34e84725bdf5b45", "Url": "https://api.github.com/repos/heimuheimu/naiverpc", "Date": "2017-06-21T12:05:39Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.heimuheimu.naiverpc.monitor.ExecutionTimeInfo.getCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (executionCount > (lastExecutionCount)) { avgExecTimeData.value = (totalExecutionTime - (lastTotalExecutionTime)) / (executionCount - (lastExecutionCount)); }else { avgExecTimeData.value = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3731/buggy-version/src.main.java.com.heimuheimu.naiverpc.monitor.reporter.FalconRpcServerReporter.java", "BodyUseAPI": [], "Fixed commit": "8cd9810f1d93fff0ace9e7f7d34e84725bdf5b45", "Url": "https://api.github.com/repos/heimuheimu/naiverpc", "Date": "2017-06-21T12:05:39Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (existingArgs != null) { newArgs = new java.lang.String[(existingArgs.length) + 3]; java.lang.System.arraycopy(existingArgs, 0, newArgs, 3, existingArgs.length); }else { newArgs = new java.lang.String[3]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7087/buggy-version/src.net.nightwhistler.pageturner.library.LibraryDatabaseHelper.java", "BodyUseAPI": ["java.lang.System.arraycopy(java.lang.String[],int,java.lang.String[],int,int)"], "Fixed commit": "dccd57589be0852ccd3ba71c7bf1af79f1d236cd", "Url": "https://api.github.com/repos/NightWhistler/PageTurner", "Date": "2013-05-26T13:14:49Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["first.getInfo().getFeature(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(cw.getInfo().getFeature(\"paradigm\").equals(initialPos))) { array = forms.putArray(cw.getInfo().getFeature(\"paradigm\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3526/buggy-version/src.de.unitrier.daalft.pali.tools.WordConverter.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.node.ObjectNode.putArray(cw.getInfo().getFeature(\"paradigm\"))", "de.unitrier.daalft.pali.morphology.element.ConstructedWord.getInfo()", "cw.getInfo().getFeature(java.lang.String)"], "Fixed commit": "0614db2547e68cd7ea4f2814bff2e06988ec781b", "Url": "https://api.github.com/repos/daalft/PaliNLP2", "Date": "2014-05-21T11:40:14Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((locationVisit.getVisitLevel()) == null) { locationVisit.setVisitLevel(org.openhds.mobile.activity.BaselineActivity.VISIT_LEVEL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7578/buggy-version/src.main.java.org.openhds.mobile.activity.BaselineActivity.java", "BodyUseAPI": ["org.openhds.mobile.model.LocationVisit.setVisitLevel(java.lang.String)"], "Fixed commit": "54978c225136c8de58ead900a20ac0dcf36c13f9", "Url": "https://api.github.com/repos/SwissTPH/openhds-tablet", "Date": "2016-07-27T08:16:04Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ThreadLocal<java.lang.Long>.get()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (micros == null) micros = 0L;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6104/buggy-version/driver-core.src.main.java.com.datastax.driver.core.CountingTimestampGenerator.java", "BodyUseAPI": [], "Fixed commit": "743191e11f5ddf41cb3b6fc259042cba967a5760", "Url": "https://api.github.com/repos/brandonkearby/java-driver", "Date": "2014-10-02T22:29:36Z"},
{"Line": "=>724", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(didPlayerHaveTrumpSevenInUltiGame)) { winSayer = false; }else { if (activePlayerWhoTookCards != activePlayerSayer) { winSayer = false; }else if (activePlayerSayer.getUltiPlayer().isLastCardTrumpSeven()) { winSayer = true; }else { winSayer = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5126/buggy-version/UltiCardGame.src.ulti.UltiGame.java", "BodyUseAPI": [], "Fixed commit": "ac79868d2a34e2e531fc59dd5200b321627fdb11", "Url": "https://api.github.com/repos/enepeti/szoftarch-ulti", "Date": "2015-11-29T12:23:33Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mSnackbar) == null) || (!(mSnackbar.isShown()))) { mFab.setTranslationY(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3969/buggy-version/app.src.main.java.com.learnit.learnit.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2a8a8a7466ce0d61dcaa3d9b8e810242faa2aa59", "Url": "https://api.github.com/repos/niosus/LearnIt-Reincarnation", "Date": "2016-02-02T22:57:39Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((event.getEntity()) instanceof org.bukkit.entity.Player)) { com.chaseoes.mobninja.MobNinjaGame game = com.chaseoes.mobninja.GameUtilities.getCurrentGame(player); com.chaseoes.mobninja.NinjaPlayer np = game.getNinjaPlayers().get(player.getName()); np.setKills((-1)); game.getScoreboard().update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3467/buggy-version/src.main.java.com.chaseoes.mobninja.listeners.EntityDamageByEntityListener.java", "BodyUseAPI": [], "Fixed commit": "c9e1fb9cc3a3e3372b7104cadcb5add4eccdbffc", "Url": "https://api.github.com/repos/chaseoes/MobNinja", "Date": "2013-12-08T04:38:17Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"\".equals(queryString)) { return allClips; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6542/buggy-version/app.src.main.java.com.catchingnow.tinyclipboardmanager.Storage.java", "BodyUseAPI": [], "Fixed commit": "c309c42b5eb2624798a31c1a2e3f0f43ee36edc5", "Url": "https://api.github.com/repos/heruoxin/Clip-Stack", "Date": "2015-02-09T17:34:06Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sourceCard.faceUp) != true) sourceCard.flip();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7398/buggy-version/src.GameView.java", "BodyUseAPI": ["CardLabel.flip()"], "Fixed commit": "35703b94ac9f8e7843457a88456fea0fc5b98ee5", "Url": "https://api.github.com/repos/swiftstrife/Assig6", "Date": "2017-02-15T07:48:23Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (n < 6) { super.setSpeed(n); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8956/buggy-version/Bug.java", "BodyUseAPI": ["Entity.setSpeed(int)"], "Fixed commit": "7b2c8a4c0ed108b436f6cd67da1295efedee4440", "Url": "https://api.github.com/repos/elc1798/revenge-of-the-octocat", "Date": "2015-01-14T13:22:19Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((javax.faces.context.FacesContext.getCurrentInstance()) != null) { locale = javax.faces.context.FacesContext.getCurrentInstance().getViewRoot().getLocale(); }else { locale = java.util.Locale.getDefault(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6342/buggy-version/imixs-marty-ejb.src.main.java.org.imixs.marty.util.WorkitemComparator.java", "BodyUseAPI": [], "Fixed commit": "b204619a1bf24748fd2b3063c944ed4822deb587", "Url": "https://api.github.com/repos/imixs/imixs-marty", "Date": "2015-02-06T15:02:57Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["commit.getMsg().contains(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (containsABug) { writer.write(commit.getHash(), containsABug); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/660/buggy-version/src.main.java.tutorial.q2.CommitsWithBugVisitor.java", "BodyUseAPI": ["br.com.metricminer2.persistence.PersistenceMechanism.write(commit.getHash(),boolean)"], "Fixed commit": "9b0307a08c20be9602f201805397cc5533a8d770", "Url": "https://api.github.com/repos/mauricioaniche/repodriller-tutorial", "Date": "2015-09-21T17:57:36Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((objectsLength) >= (objects.length)) { amidst.map.MapObject[] tempObjects = new amidst.map.MapObject[(objects.length) << 1]; for (int i = 0; i < (objects.length); i++) tempObjects[i] = objects[i]; objects = tempObjects; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1651/buggy-version/src.amidst.map.Fragment.java", "BodyUseAPI": [], "Fixed commit": "136c3284b6ee74124d332e9b2600c848a473a44c", "Url": "https://api.github.com/repos/skiphs/AMIDST", "Date": "2014-01-11T04:36:29Z"},
{"Line": "=>1037", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bookmark == 0) { bookmark = bookmarkState(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7541/buggy-version/Mage.src.mage.game.GameImpl.java", "BodyUseAPI": [], "Fixed commit": "edd1563c12422f69c10bc76d310e0a84421ab4a2", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2014-08-18T19:58:43Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.apifest.oauth20.ApplicationInfo.loadFromClientCredentials(com.apifest.oauth20.ClientCredentials)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (creds == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8037/buggy-version/apifest-oauth20.src.main.java.com.apifest.oauth20.persistence.redis.RedisDBManager.java", "BodyUseAPI": [], "Fixed commit": "8ce4e4ff6c1ed36d3db8fadc6c97667758eafbb6", "Url": "https://api.github.com/repos/apostolterziev/apifest-oauth20", "Date": "2016-02-01T09:27:46Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.apifest.oauth20.persistence.redis.LuaScripts.runScript(ScriptType.GET_ALL_APPS,java.util.List<java.lang.String>,java.util.List<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((allApps == null) || (allApps.isEmpty())) { return list; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8037/buggy-version/apifest-oauth20.src.main.java.com.apifest.oauth20.persistence.redis.RedisDBManager.java", "BodyUseAPI": [], "Fixed commit": "8ce4e4ff6c1ed36d3db8fadc6c97667758eafbb6", "Url": "https://api.github.com/repos/apostolterziev/apifest-oauth20", "Date": "2016-02-01T09:27:46Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["securityData.getCurrentDocDeny().get(SecurityConstants.EVERYONE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((deniedPerms != null) && (deniedPerms.contains(SecurityConstants.EVERYTHING))) { blockRightInheritance = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2487/buggy-version/nuxeo-platform-webapp-core.src.main.java.org.nuxeo.ecm.webapp.security.SecurityActionsBean.java", "BodyUseAPI": [], "Fixed commit": "4198660f7fb11953108f5771fb234ce4c148e47a", "Url": "https://api.github.com/repos/nuxeo/nuxeo-dm", "Date": "2014-09-09T17:32:48Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index == 0) { result = start.getValue(); start = start.getNext(); }else { LNode<T> current = start; for (int x = 0; x < (index - 1); x++) { current = current.getNext(); } LNode<T> previous = current; LNode<T> toBeRemoved = previous.getNext(); LNode<T> next = toBeRemoved.getNext(); previous.setNext(next); (size)--; result = toBeRemoved.getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2164/buggy-version/08linkedlist.MyLinkedList.java", "BodyUseAPI": [], "Fixed commit": "73fe18a35fc3f244da3c73a18a5469235976188a", "Url": "https://api.github.com/repos/chiudaniels/MKS22X-HW", "Date": "2016-03-28T04:08:43Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasFocus()) { showDropDown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8131/buggy-version/awlib.src.main.java.de.aw.awlib.views.AWAutoCompleteTextView.java", "BodyUseAPI": [], "Fixed commit": "410d0dd389829ee22ec112edfb8b077b52922c6e", "Url": "https://api.github.com/repos/gitwalex/AWLib", "Date": "2017-03-29T13:44:52Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRecyclerView) != null) { android.support.v7.widget.RecyclerView.LayoutManager manager = mRecyclerView.getLayoutManager(); if ((manager != null) && (manager instanceof android.support.v7.widget.LinearLayoutManager)) { return ((android.support.v7.widget.LinearLayoutManager) (manager)).findFirstVisibleItemPosition(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8131/buggy-version/awlib.src.main.java.de.aw.awlib.recyclerview.AWBaseRecyclerViewFragment.java", "BodyUseAPI": [], "Fixed commit": "410d0dd389829ee22ec112edfb8b077b52922c6e", "Url": "https://api.github.com/repos/gitwalex/AWLib", "Date": "2017-03-29T13:44:52Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastVersionDate) == null) { return null; }else { return lastVersionDate.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4426/buggy-version/src.main.java.metricapp.entity.Element.java", "BodyUseAPI": [], "Fixed commit": "a9cd9fd2e5f5ec6dfcc6c3770a4c893957852e5b", "Url": "https://api.github.com/repos/metricAppTeam/metricapp-server", "Date": "2016-07-09T22:42:37Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastVersionDate) == null) { return null; }else { return creationDate.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4426/buggy-version/src.main.java.metricapp.entity.Element.java", "BodyUseAPI": [], "Fixed commit": "a9cd9fd2e5f5ec6dfcc6c3770a4c893957852e5b", "Url": "https://api.github.com/repos/metricAppTeam/metricapp-server", "Date": "2016-07-09T22:42:37Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((dataSet) != null) && ((dataSet.getPhotos()) != null)) { result.addAll(org.openstreetmap.josm.plugins.openstreetcam.util.Util.nearbyPhotos(dataSet.getPhotos(), selectedPhoto, nearbyCount)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/625/buggy-version/src.org.openstreetmap.josm.plugins.openstreetcam.gui.layer.OpenStreetCamLayer.java", "BodyUseAPI": ["java.util.Set<org.openstreetmap.josm.plugins.openstreetcam.entity.Photo>.addAll(org.openstreetmap.josm.plugins.openstreetcam.util.Util.nearbyPhotos(dataSet.getPhotos(), selectedPhoto, nearbyCount))", "org.openstreetmap.josm.plugins.openstreetcam.util.Util.nearbyPhotos(dataSet.getPhotos(),org.openstreetmap.josm.plugins.openstreetcam.entity.Photo,int)", "org.openstreetmap.josm.plugins.openstreetcam.entity.DataSet.getPhotos()"], "Fixed commit": "79dfab2d36d363fef6650ed0f997b4400f921dc5", "Url": "https://api.github.com/repos/openstreetcam/josm-plugin", "Date": "2017-04-12T11:14:33Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((usrValue != null) && (usrValue.equals(userValue))) { return logLevel; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8051/buggy-version/assertj-log.src.main.java.org.assertj.log.LogLevelMap.java", "BodyUseAPI": [], "Fixed commit": "818d0706e84e66388c20b0205d05e89ab3f5e435", "Url": "https://api.github.com/repos/fduminy/assertj-log", "Date": "2015-11-11T16:09:42Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stmtName == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8020/buggy-version/src.frontend.org.voltdb.ProcedureStatsCollector.java", "BodyUseAPI": [], "Fixed commit": "12891a6dbe84c5bd80e30c6b39068a5a48151a74", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2017-03-13T20:00:31Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"New\".equalsIgnoreCase(value)) { return org.jenkinsci.plugins.codedx.model.StatisticGroup.Unresolved; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4856/buggy-version/src.main.java.org.jenkinsci.plugins.codedx.model.StatisticGroup.java", "BodyUseAPI": [], "Fixed commit": "36048953a0daf21d285ba11b254e900cef38dea5", "Url": "https://api.github.com/repos/jenkinsci/codedx-plugin", "Date": "2017-02-15T21:20:10Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!setContextFlag) { setContext(object, fieldName); setContextFlag = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1830/buggy-version/src.main.java.com.alibaba.fastjson.parser.DefaultJSONParser.java", "BodyUseAPI": [], "Fixed commit": "c2030aa940e61e04fce2f79452aefd59dc53c4f5", "Url": "https://api.github.com/repos/AlibabaTech/fastjson", "Date": "2012-06-07T07:53:54Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<com.google.android.gms.maps.model.Marker, de.ferienakademie.neverrest.model.Challenge>.get(com.google.android.gms.maps.model.Marker)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mChallenge.getType().equals(MetricType.VERTICALDISTANCE)) { final android.view.animation.RotateAnimation rotateAnim = new android.view.animation.RotateAnimation(0.0F, 90, android.view.animation.RotateAnimation.RELATIVE_TO_SELF, 0.5F, android.view.animation.RotateAnimation.RELATIVE_TO_SELF, 0.5F); rotateAnim.setDuration(0); rotateAnim.setFillAfter(true); image.startAnimation(rotateAnim); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6061/buggy-version/nEVERrEST.app.src.main.java.de.ferienakademie.neverrest.view.FindChallengesActivity.java", "BodyUseAPI": [], "Fixed commit": "bb35938be91bb534ccc81eb380abb1352df46b25", "Url": "https://api.github.com/repos/Maddoc42/Ferienakademie2014Client", "Date": "2014-10-02T07:05:01Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (alreadyExtractedClasses == null) { alreadyExtractedClasses = new java.util.HashSet<>(java.util.Arrays.asList(new java.lang.String[]{ entityClass.getName() })); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8213/buggy-version/src.main.java.com.negod.generics.persistence.GenericDao.java", "BodyUseAPI": [], "Fixed commit": "f56200cebcfc161d7b96cf2adde8584aa74d750a", "Url": "https://api.github.com/repos/negod/JEE-Generics-Persistence", "Date": "2017-07-30T13:39:40Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (alreadyExtractedClasses.contains(clazz.getName())) { continue; }else { alreadyExtractedClasses.add(clazz.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8213/buggy-version/src.main.java.com.negod.generics.persistence.GenericDao.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)", "java.lang.Class<?>.getName()"], "Fixed commit": "f56200cebcfc161d7b96cf2adde8584aa74d750a", "Url": "https://api.github.com/repos/negod/JEE-Generics-Persistence", "Date": "2017-07-30T13:39:40Z"},
{"Line": "=>1600", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wyil.lang.Type.isSubtype(wyil.lang.Type.Process(Type.T_ANY), iter)) { wyil.lang.Type.Process p = ((wyil.lang.Type.Process) (iter)); iter = p.element(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5067/buggy-version/src.wyil.lang.Code.java", "BodyUseAPI": [], "Fixed commit": "555f8f779d90fb62525ce3b736e4b522767dfa34", "Url": "https://api.github.com/repos/zmthy/WhileyCompiler", "Date": "2011-09-18T05:50:07Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((metadata) != null) { metadata.close(); metadata = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6298/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.record.ODatabaseRecordAbstract.java", "BodyUseAPI": [], "Fixed commit": "4504bde1c5f198a0d41ca22d92f9a304937cb541", "Url": "https://api.github.com/repos/nuvolabase/orientdb", "Date": "2013-01-20T14:18:27Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bod != 0) bod -= this.bodCounter; else bod += this.bodCounter;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5417/buggy-version/src.nl.han.ica.ap.boerenbridge.speler.computer.algoritme.willekeurig.BodBepaler.java", "BodyUseAPI": [], "Fixed commit": "1fa20d31ee9ccf5e238940ea7ffef95723847893", "Url": "https://api.github.com/repos/JorisBloemen/boerenbridge-game", "Date": "2016-05-13T12:10:48Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (formatPattern == null) { return FieldModeType.DATE_TIME; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7722/buggy-version/Introspect.src.nth.introspect.layer5provider.reflection.behavior.fieldmode.FieldModeFactory.java", "BodyUseAPI": [], "Fixed commit": "199adad15c4cd3ba3cc8e3f5f01b869029eda6a6", "Url": "https://api.github.com/repos/ntenhoeve/Reflect-Framework", "Date": "2015-08-03T19:01:12Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type.equals(\"note\")) { java.lang.String message = request.getParameter(\"text\"); Classes.Notification notification = new Classes.Notification(Classes.Notification.NotificationTypeEnum.message, message, user, target, false); manager.addNotification(notification); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2953/buggy-version/src.Servlets.NotificationCheckerServlet.java", "BodyUseAPI": [], "Fixed commit": "183e23e58f90e05c7c3f7dcf6007b162ac876c1c", "Url": "https://api.github.com/repos/Nop1ks/Immutable", "Date": "2017-07-12T17:24:43Z"},
{"Line": "=>655", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["m_mngr.getNativeAdapter().getState()", "java.lang.reflect.Method.invoke(m_mngr.getNativeAdapter())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((state == (BleStatuses.STATE_BLE_ON)) && (state2 == (com.idevicesinc.sweetblue.BleManagerState.OFF.getNativeCode()))) { return state2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/673/buggy-version/app.src.main.java.com.idevicesinc.sweetblue.P_BleManager_Listeners.java", "BodyUseAPI": [], "Fixed commit": "80a037f66541d401f31319a58992e4dec7f49f82", "Url": "https://api.github.com/repos/iDevicesInc/SweetBlue", "Date": "2016-03-28T17:29:16Z"},
{"Line": "=>1029", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mobicents.slee.resource.sip11.SipResourceAdaptor.getDialogWrapper(javax.sip.Dialog)", "gov.nist.javax.sip.stack.SIPTransaction.getDialog()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (((d != null) && (dw != null)) && (((d.getState()) == null) || ((d.getState()) == (javax.sip.DialogState.TERMINATED)))) { processDialogTerminated(dw); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6643/buggy-version/resources.sip11.ra.src.main.java.org.mobicents.slee.resource.sip11.SipResourceAdaptor.java", "BodyUseAPI": ["org.mobicents.slee.resource.sip11.SipResourceAdaptor.processDialogTerminated(org.mobicents.slee.resource.sip11.wrappers.DialogWrapper)"], "Fixed commit": "dd0217701b5b95df801cedfcdd2360b8d6a19136", "Url": "https://api.github.com/repos/Mobicents/jain-slee.sip", "Date": "2014-07-30T14:42:20Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(pair.getSecondo())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (num <= 0) num = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7962/buggy-version/src.main.java.isti.cnr.sse.Statistics.java", "BodyUseAPI": [], "Fixed commit": "10b8e09f1cb12c08638df6ead3bf186469f59344", "Url": "https://api.github.com/repos/imatesiu/UIProveHW", "Date": "2016-12-08T17:40:14Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(worldObj.isRemote)) { burst(newTuple, \"enchantmenttable\", EnumAura.WHITE_AURA, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/9124/buggy-version/src.main.java.pixlepix.auracascade.block.tile.TileBookshelfCoordinator.java", "BodyUseAPI": [], "Fixed commit": "214296ba5e6d90ff491ffbac432eaf29462fcc8f", "Url": "https://api.github.com/repos/AdlyTempleton/Aura-Cascade", "Date": "2015-07-04T22:21:04Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((translationFile) != null) { serializeAll(translationFile.getAbsolutePath()); }else { serializeAll(getTranslationFileName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8175/buggy-version/src.SlonGui.java", "BodyUseAPI": [], "Fixed commit": "8241cea6a25058398b1cd5d8aac200f88175a3c3", "Url": "https://api.github.com/repos/SlavaTodorova/Slon", "Date": "2016-02-24T16:39:15Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((translationFile) != null) { fullName = translationFile.getAbsolutePath(); stem = fullName.substring(0, ((fullName.length()) - 4)); }else { fullName = sourceFile.getAbsolutePath(); stem = fullName.substring(0, ((fullName.length()) - 3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8175/buggy-version/src.SlonGui.java", "BodyUseAPI": [], "Fixed commit": "8241cea6a25058398b1cd5d8aac200f88175a3c3", "Url": "https://api.github.com/repos/SlavaTodorova/Slon", "Date": "2016-02-24T16:39:15Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (theTranslationFile.exists()) { translationFile = theTranslationFile; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8175/buggy-version/src.SlonGui.java", "BodyUseAPI": [], "Fixed commit": "8241cea6a25058398b1cd5d8aac200f88175a3c3", "Url": "https://api.github.com/repos/SlavaTodorova/Slon", "Date": "2016-02-24T16:39:15Z"},
{"Line": "=>1040", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (activity instanceof android.app.Activity) { android.content.Intent intent = ((android.app.Activity) (activity)).getIntent(); if (intent != null) { net.osmand.plus.activities.MapActivity.prevActivityIntent = new android.content.Intent(intent); net.osmand.plus.activities.MapActivity.prevActivityIntent.putExtra(net.osmand.plus.activities.MapActivity.INTENT_KEY_PARENT_MAP_ACTIVITY, true); }else { net.osmand.plus.activities.MapActivity.prevActivityIntent = null; } }else { net.osmand.plus.activities.MapActivity.prevActivityIntent = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/738/buggy-version/OsmAnd.src.net.osmand.plus.activities.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "f95a34f335af67b0949770a03405e663baa2a610", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2016-02-20T15:18:11Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataString.length()) >= 2048) { EnviroMine.logger.log(Level.ERROR, \"Tracker Sync data too long! Problems may occur client side while parsing!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5145/buggy-version/src.main.java.enviromine.handlers.EM_StatusManager.java", "BodyUseAPI": [], "Fixed commit": "ea68789dbb2f798038123f9217fae7c94dbdc5d8", "Url": "https://api.github.com/repos/Funwayguy/EnviroMine-1.7", "Date": "2014-08-17T23:31:26Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((next.size()) == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3862/buggy-version/src.uk.co.ignignokt.markov.irc.Irc.java", "BodyUseAPI": [], "Fixed commit": "0f8485def6e15f8bba2694b107a6b185492844c5", "Url": "https://api.github.com/repos/seadog/markov", "Date": "2011-08-29T19:38:57Z"},
{"Line": "=>652", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.idega.user.business.GroupBusiness.getParentGroups(com.idega.user.data.User,java.util.Map<?, ?>,java.util.Map<?, ?>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (groups != null) groups.addAll(groupsToCheckForPermissions);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6665/buggy-version/src.java.com.idega.core.accesscontrol.business.AccessControl.java", "BodyUseAPI": ["java.util.Collection<com.idega.user.data.Group>.addAll(java.util.Collection<com.idega.user.data.Group>)"], "Fixed commit": "cbb52a50e2eee5924f86e96cf934fc60db87988f", "Url": "https://api.github.com/repos/idega/com.idega.core", "Date": "2012-11-26T09:11:04Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrofit.RetrofitError.getBodyAs(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (errorResponse != null) { returnThrowable = new amatkivskiy.gitter.rx.sdk.model.error.GitterApiException(errorResponse); returnThrowable.setStackTrace(cause.getStackTrace()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5430/buggy-version/library.src.main.java.amatkivskiy.gitter.rx.sdk.api.BaseApiClient.java", "BodyUseAPI": [], "Fixed commit": "b15cbc5bbce9e1ea320f34d2199f0cc625b31bba", "Url": "https://api.github.com/repos/Gitteroid/GitterJavaSDK", "Date": "2015-10-03T06:33:05Z"},
{"Line": "=>458", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fgraph != null) { org.apache.sysml.api.jmlc.PreparedScript.LOG.warn(((\"Failed to enable function recompile for recursive '\" + fkey) + \"'.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6056/buggy-version/src.main.java.org.apache.sysml.api.jmlc.PreparedScript.java", "BodyUseAPI": [], "Fixed commit": "ebb6ea6128b4babc6ffe07e2fc7f9666593a76b1", "Url": "https://api.github.com/repos/dhutchis/systemml", "Date": "2017-09-15T08:05:22Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<K, java.util.HashSet<V>>.get(K)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (resultSet == null) { return null; }else { return new java.util.HashSet<>(resultSet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3409/buggy-version/src.main.java.org.util.collection.MapToSets.java", "BodyUseAPI": [], "Fixed commit": "6638433a28be52246b928d7c887fb2c93384265d", "Url": "https://api.github.com/repos/Wesss/general-utils", "Date": "2016-10-14T06:24:31Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.Data.mmp) != null) { Data.mmp.repaint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/491/buggy-version/src.gui.LevelPanel.java", "BodyUseAPI": [], "Fixed commit": "79d201544dd9e9bc69bec4689c6fe61046119b74", "Url": "https://api.github.com/repos/Detea/PekaED", "Date": "2017-10-23T21:55:55Z"},
{"Line": "=>715", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.GINGERBREAD_MR1)) { mBitmapCanvas.setBitmap(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/9040/buggy-version/MPChartLib.src.main.java.com.github.mikephil.charting.renderer.LineChartRenderer.java", "BodyUseAPI": [], "Fixed commit": "dd372ff00bd51d47a2a8aa9bb9fbe3c2c11bbb84", "Url": "https://api.github.com/repos/dzungpv/MPAndroidChart", "Date": "2016-11-04T03:34:51Z"},
{"Line": "=>985", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.GINGERBREAD_MR1)) { mBitmapCanvas.setBitmap(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/9040/buggy-version/MPChartLib.src.main.java.com.github.mikephil.charting.renderer.PieChartRenderer.java", "BodyUseAPI": [], "Fixed commit": "dd372ff00bd51d47a2a8aa9bb9fbe3c2c11bbb84", "Url": "https://api.github.com/repos/dzungpv/MPAndroidChart", "Date": "2016-11-04T03:34:51Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getUserPrincipal()) == null) request.login(user.getLogin(), password);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/9123/buggy-version/src.main.java.command.ResetPassword.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.login(user.getLogin(),java.lang.String)"], "Fixed commit": "e48987ac7a5d144bb6a054271ee8bf02972aced4", "Url": "https://api.github.com/repos/MaximMaltsev94/contacts", "Date": "2017-05-02T13:40:45Z"},
{"Line": "=>6394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.ge.research.sadl.sADL.SadlSimpleTypeReference) (sadlTypeRef)).isList()) { rsrc = createListSubclass(null, strSRUri, sadlTypeRef.eResource()); }else { rsrc = getTheJenaModel().getOntClass(strSRUri); if (rsrc == null) { return createOntClass(strSRUri, ((com.hp.hpl.jena.ontology.OntClass) (null))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4553/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlModelProcessor.java", "BodyUseAPI": [], "Fixed commit": "ed281d7e9b3bcf17232f550fa04b04ba490a2d39", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2017-10-16T15:16:12Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.qvdev.apps.readerkid.BaseArticlesFragment.getItemWrapper(android.view.View)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(android.text.TextUtils.isEmpty(article.getImageUrl()))) { options = android.support.v4.app.ActivityOptionsCompat.makeSceneTransitionAnimation(getActivity(), articleImagePair); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3635/buggy-version/Android.SDK.app.src.main.java.com.qvdev.apps.readerkid.BaseArticlesFragment.java", "BodyUseAPI": [], "Fixed commit": "7b7b0db7e4452d80e12bb57e7b3283be34391c6c", "Url": "https://api.github.com/repos/QVDev/BlendleSDK", "Date": "2015-10-27T18:12:10Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((todoItem.getDescription()) == null) || ((todoItem.getDescription().trim().length()) == 0)) { tvTaskDescription.setText(\"-\"); }else { tvTaskDescription.setText(todoItem.getDescription()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6658/buggy-version/app.src.main.java.com.iesebre.dam2.max.todosandroid.TaskDetailActivity.java", "BodyUseAPI": ["com.iesebre.dam2.max.todosandroid.models.TodoItem.getDescription()", "android.widget.TextView.setText(todoItem.getDescription())"], "Fixed commit": "4ff3c8b4b79d8e948b62c5782f6de2725e79b4e4", "Url": "https://api.github.com/repos/maksymkhar/TodoAndroid-MD", "Date": "2016-03-26T22:28:14Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((todoItem.getDescription()) == null) || ((todoItem.getDescription().trim().length()) == 0)) { tvTaskDescription.setText(\"-\"); }else { tvTaskDescription.setText(todoItem.getDescription()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6658/buggy-version/app.src.main.java.com.iesebre.dam2.max.todosandroid.fragments.TaskDetailFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(todoItem.getDescription())", "com.iesebre.dam2.max.todosandroid.models.TodoItem.getDescription()"], "Fixed commit": "4ff3c8b4b79d8e948b62c5782f6de2725e79b4e4", "Url": "https://api.github.com/repos/maksymkhar/TodoAndroid-MD", "Date": "2016-03-26T22:28:14Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isReady())) { synchronized(this) { if (!(isReady())) { synchronized(dependentTasks) { dependentTasks.add(task); } }else { submit(task); } } }else { submit(task); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5966/buggy-version/src.main.java.ru.spbau.mit.ThreadPoolImpl.java", "BodyUseAPI": [], "Fixed commit": "1e77a036ff2d702e6f2cf54ea102c4d948744c77", "Url": "https://api.github.com/repos/mchernyavsky-edu/au-java-fall-2017", "Date": "2017-09-28T07:02:01Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((rawDir != null) && (rawDir.startsWith(InstalledPack.MODPACKS_DIR))) { rawDir = new java.io.File(directories.getModpacksDirectory(), rawDir.substring(11)).getAbsolutePath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1022/buggy-version/src.main.java.net.technicpack.launchercore.modpacks.ModpackModel.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.io.File.getAbsolutePath()"], "Fixed commit": "9b344b41f44053f537475d64366a59d7cf1589f2", "Url": "https://api.github.com/repos/wiktorek140/LauncherCoreV3", "Date": "2014-03-29T18:26:20Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.technicpack.launchercore.modpacks.InstalledPack.getDirectory()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((rawDir != null) && (rawDir.startsWith(InstalledPack.LAUNCHER_DIR))) { rawDir = new java.io.File(directories.getLauncherDirectory(), rawDir.substring(9)).getAbsolutePath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1022/buggy-version/src.main.java.net.technicpack.launchercore.modpacks.ModpackModel.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "java.lang.String.substring(int)"], "Fixed commit": "9b344b41f44053f537475d64366a59d7cf1589f2", "Url": "https://api.github.com/repos/wiktorek140/LauncherCoreV3", "Date": "2014-03-29T18:26:20Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (modifyIndex <= (UserInterface.taskList.size())) { return modifyIndex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6378/buggy-version/src.ui.list.swing.TextFieldListener.java", "BodyUseAPI": [], "Fixed commit": "323d6057e655b2106acf0aed85f1debe8364a2b8", "Url": "https://api.github.com/repos/CS2103jan2015-w13-2j/main", "Date": "2015-04-10T07:48:48Z"},
{"Line": "=>665", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (followingList.getJSONObject(i).has(\"customFields\")) { java.util.ArrayList<org.ednovo.gooru.application.shared.model.user.CustomFieldDo> customFields = org.ednovo.gooru.application.server.serializer.JsonDeserializer.deserialize(followingList.getJSONObject(i).getJSONArray(\"customFields\").toString(), new com.fasterxml.jackson.core.type.TypeReference<java.util.ArrayList<org.ednovo.gooru.application.shared.model.user.CustomFieldDo>>() {}); userFollowDo.setCustomFields(customFields); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1563/buggy-version/src.main.java.org.ednovo.gooru.application.server.service.UserServiceImpl.java", "BodyUseAPI": ["followingList.getJSONObject(i).getJSONArray(\"customFields\").toString()", "org.ednovo.gooru.application.server.serializer.JsonDeserializer.deserialize(followingList.getJSONObject(i).getJSONArray(\"customFields\").toString(),com.fasterxml.jackson.core.type.TypeReference<java.util.ArrayList<org.ednovo.gooru.application.shared.model.user.CustomFieldDo>>)", "followingList.getJSONObject(i).getJSONArray(java.lang.String)", "org.json.JSONArray.getJSONObject(int)"], "Fixed commit": "61af6603a76e6a10a3b2fc6918c1001782460b53", "Url": "https://api.github.com/repos/chandrasekharv/Gooru-Web", "Date": "2015-10-05T09:30:05Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (width > (getOffsetWidth())) setWidth((width + 20)); else if ((initialWidth) != (-1)) setWidth(initialWidth);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2761/buggy-version/jbpm-console-ng-human-tasks-forms.jbpm-console-ng-human-tasks-forms-client.src.main.java.org.jbpm.console.ng.ht.forms.client.display.views.PopupFormDisplayerView.java", "BodyUseAPI": ["org.jbpm.console.ng.ht.forms.client.display.views.PopupFormDisplayerView.2.setWidth(int)"], "Fixed commit": "5669d3301b13a457f19c22db8b98a505c609ea70", "Url": "https://api.github.com/repos/emilianoandre/jbpm-console-ng", "Date": "2014-12-22T12:49:12Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dc.getGpuResourceCache().get(tile.getRi().getVboCacheKey())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (vboIds != null) { gl.glBindBuffer(GL2.GL_ARRAY_BUFFER, vboIds[0]); gl.glBufferData(GL2.GL_ARRAY_BUFFER, ((vertices.limit()) * 4), vertices.rewind(), GL2.GL_DYNAMIC_DRAW); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2803/buggy-version/Common.src.main.java.au.gov.ga.worldwind.common.terrain.WireframeRectangularTessellator.java", "BodyUseAPI": ["javax.media.opengl.GL2.glBindBuffer(GL2.GL_ARRAY_BUFFER,int)"], "Fixed commit": "2d3c93095e1c50e780696616107512c1a53a8a0e", "Url": "https://api.github.com/repos/ga-m3dv/ga-worldwind-suite", "Date": "2012-08-22T23:11:19Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data >= 4) && (data < 12)) { if (data >= 8) { return ((byte) (data - 4)); } return ((byte) (data + 4)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/69/buggy-version/src.main.java.com.intellectualcrafters.plot.generator.HybridPlotWorld.java", "BodyUseAPI": [], "Fixed commit": "98fd62bbc29c08ee6054fc23c91dbb72893c53cc", "Url": "https://api.github.com/repos/Mayomi/PlotSquared-Chinese", "Date": "2015-06-25T12:10:43Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getX()) > 0) return 360 - (java.lang.Math.toDegrees(java.lang.Math.acos(temp))); else return java.lang.Math.toDegrees(java.lang.Math.acos(temp));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1093/buggy-version/Ex3.src.Vector2f.java", "BodyUseAPI": [], "Fixed commit": "43e2bfb28f7f8154bef47ebde38beee9f37e4a1f", "Url": "https://api.github.com/repos/itai-m/Games-in-Java", "Date": "2015-08-30T21:21:21Z"},
{"Line": "=>707", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jpexs.decompiler.flash.abc.ABC.findBody(ins.operands[0])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (innerBody != null) { innerBody.getCode().calculateDebugFileLine(debugFile, debugLine, 0, abc, new java.util.HashSet()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8055/buggy-version/libsrc.ffdec_lib.src.com.jpexs.decompiler.flash.abc.avm2.AVM2Code.java", "BodyUseAPI": ["com.jpexs.decompiler.flash.abc.types.MethodBody.getCode()", "innerBody.getCode().calculateDebugFileLine(java.lang.String,int,int,com.jpexs.decompiler.flash.abc.ABC,java.util.HashSet)"], "Fixed commit": "e5a11a577b9b842e5e85c1b3dff1d34f07df6c3c", "Url": "https://api.github.com/repos/Jackkal/jpexs-decompiler", "Date": "2015-07-10T21:55:36Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapter) != null) { android.database.Cursor cursor = db.getNear(com.lorenzbi.portalalert.ListFragment.lng, com.lorenzbi.portalalert.ListFragment.lat); android.database.Cursor oldcursor = adapter.swapCursor(cursor); oldcursor.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6922/buggy-version/client.src.com.lorenzbi.portalalert.ListFragment.java", "BodyUseAPI": [], "Fixed commit": "18abf366e18340c2d78ae90dafb5973448a5edac", "Url": "https://api.github.com/repos/Lorenzbi/portalalert", "Date": "2014-04-06T19:07:40Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (variables.containsKey(\"START\")) { newFile.add((\"start 0x\" + (java.lang.Integer.toHexString(variables.get(\"START\"))))); }else { newFile.add(\"start 0x0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5114/buggy-version/src.org.codeProcessing.activities.PreProcessor.java", "BodyUseAPI": ["java.lang.Integer.toHexString(java.lang.Integer)", "java.util.List<java.lang.String>.add(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Fixed commit": "2081622d7b37ffdb8bb25085c5858618fe3abdcb", "Url": "https://api.github.com/repos/samysweb/MiMaSimu", "Date": "2016-12-01T17:41:26Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextBucketsSize > (java.lang.Integer.MAX_VALUE)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6878/buggy-version/processing.src.main.java.io.druid.query.groupby.epinephelinae.ByteBufferHashTable.java", "BodyUseAPI": [], "Fixed commit": "590633c595c3af75d65c522377328e1ef39fd5e8", "Url": "https://api.github.com/repos/apache/incubator-druid", "Date": "2017-11-17T16:19:16Z"},
{"Line": "=>859", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scan.nextToken.equals(\"by\")) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/437/buggy-version/src.havabol.Parser.java", "BodyUseAPI": [], "Fixed commit": "731734657990e3ff30c0c51253eac8007fa53743", "Url": "https://api.github.com/repos/bucknercd/Interpreter", "Date": "2017-04-08T00:43:00Z"},
{"Line": "=>902", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(startIdent.value)", "havabol.SymbolTable.getSymbol(scan.currentToken.tokenStr)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((java.lang.Integer.parseInt(startIdent.value)) != start) { i = java.lang.Integer.parseInt(startIdent.value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/437/buggy-version/src.havabol.Parser.java", "BodyUseAPI": ["java.lang.Integer.parseInt(startIdent.value)"], "Fixed commit": "731734657990e3ff30c0c51253eac8007fa53743", "Url": "https://api.github.com/repos/bucknercd/Interpreter", "Date": "2017-04-08T00:43:00Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((orderWatch.fulfilled) == 100) && ((marketOrder.volRemaining) != (marketOrder.volEntered))) { --(orderWatch.fulfilled); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1899/buggy-version/src.de.matdue.isk.EveApiUpdaterService.java", "BodyUseAPI": [], "Fixed commit": "6ca4e391b43daec00fdfddcf3d04050760f3b2b2", "Url": "https://api.github.com/repos/matdue/ISK", "Date": "2012-07-21T13:54:39Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dialogs.hasIdentifiableDialog(shopId))) { pl.mmorpg.prototype.client.userinterface.dialogs.ShopDialog shop = new pl.mmorpg.prototype.client.userinterface.dialogs.ShopDialog(\"Shop\", dialogs, shopId, shopItems); positionDialogNearMouse(shop); dialogs.add(shop); stage.addActor(shop); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3311/buggy-version/Client.core.src.pl.mmorpg.prototype.client.userinterface.UserInterface.java", "BodyUseAPI": ["pl.mmorpg.prototype.client.input.ActorManipulator.add(pl.mmorpg.prototype.client.userinterface.dialogs.ShopDialog)"], "Fixed commit": "10e0430cf1cdaa2d309cc8303607e92a53f1409c", "Url": "https://api.github.com/repos/MMORPG-Prototype/MMORPG_Prototype", "Date": "2017-06-07T22:37:14Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (isPackageExisted(a[0])) { if ((a[2]) == null) a[2] = \"false\"; if ((a[3]) == null) a[3] = \"false\"; tempora.add(new nave.com.desplugando.apptocheck(a[0], java.lang.Integer.parseInt(a[1]), a[2], a[3])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2833/buggy-version/Desplugando.app.src.main.java.nave.com.desplugando.MainActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.util.List<nave.com.desplugando.apptocheck>.add(nave.com.desplugando.apptocheck)"], "Fixed commit": "0be095a74c8cde45a2f4ffc994bc45db5a406470", "Url": "https://api.github.com/repos/nathanvmag/10Plugando", "Date": "2017-09-19T15:09:58Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, example.banking.domain.Account>.get(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (account == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1401/buggy-version/src.main.java.example.banking.dao.InMemoryAccountDao.java", "BodyUseAPI": [], "Fixed commit": "7bb5aecfc9b94e29d736e0d8b0fd7dc5d8bb1daf", "Url": "https://api.github.com/repos/thenewcircle/class-3980", "Date": "2015-04-29T13:55:52Z"},
{"Line": "=>783", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Bukkit.getPluginManager().getPermission(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (perm != null) { if (com.Ben12345rocks.VotingPlugin.Config.Config.getInstance().getGiveDefaultPermission()) { perm.setDefault(PermissionDefault.TRUE); }else { perm.setDefault(PermissionDefault.OP); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/472/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Main.java", "BodyUseAPI": ["org.bukkit.permissions.Permission.setDefault(PermissionDefault.OP)", "org.bukkit.permissions.Permission.setDefault(PermissionDefault.TRUE)"], "Fixed commit": "6ff6b14c2d7bf0e00d7ab55b945f8e31af73e225", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2017-10-29T16:45:12Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (tenantIDs != null) { uriBuilder = uriBuilder.queryParam(SearchConstants.TENANT_IDS_PARAM, tenantIDs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7813/buggy-version/vipr-portal.vipr-client.src.java.com.emc.vipr.client.catalog.Orders2.java", "BodyUseAPI": ["javax.ws.rs.core.UriBuilder.queryParam(SearchConstants.TENANT_IDS_PARAM,java.lang.String)"], "Fixed commit": "0df6d2f7bb1c779a0d57ca6bbbe5c26d77559d05", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-12-29T07:04:54Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.goodfood.service.CalcService.getCalcByIdUser(com.goodfood.model.User,com.goodfood.util.Util.getDate(1),com.goodfood.util.Util.getDate(0))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (calcFoodList != null) { for (com.goodfood.model.CalcFood calcs : calcFoodList) { calories += ((calcs.getFood().getKcal()) * (calcs.getValue())) / 100.0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1410/buggy-version/src.main.java.com.goodfood.controller.CalcController.java", "BodyUseAPI": [], "Fixed commit": "848ae288528f4f54b782894d78fb3d2832b653fe", "Url": "https://api.github.com/repos/motomen/my-qualification-work", "Date": "2015-03-14T20:07:15Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"6_or_more_seats\".equalsIgnoreCase(carType)) carTypeArr = seats6.split(\":\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2344/buggy-version/src.main.java.com.cheapRide.service.impl.RideEstimateServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "afd0b8c6e194d6e828601ae5c2fab5a99d565c79", "Url": "https://api.github.com/repos/litpuvn/cheapride", "Date": "2017-04-26T06:06:37Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"luxury_4_seats\".equalsIgnoreCase(carType)) carTypeArr = lux4.split(\":\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2344/buggy-version/src.main.java.com.cheapRide.service.impl.RideEstimateServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "afd0b8c6e194d6e828601ae5c2fab5a99d565c79", "Url": "https://api.github.com/repos/litpuvn/cheapride", "Date": "2017-04-26T06:06:37Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(mJsonLObjectTourDetails.isNull(\"picturespath\"))) { for (int j = 0; j < (mJsonLObjectTourDetails.getJSONArray(\"picturespath\").length()); j++) { java.lang.String picturesPath = mJsonLObjectTourDetails.getJSONArray(\"picturespath\").getString(j); picturesPathList.add(picturesPath); } tourDetailModel.setPicturesPath(picturesPathList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3849/buggy-version/Zirbl001.app.src.main.java.hsaugsburg.zirbl001.Datamanagement.JSONTourDetail.java", "BodyUseAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)", "org.json.JSONObject.getJSONArray(java.lang.String)", "mJsonLObjectTourDetails.getJSONArray(\"picturespath\").length()", "mJsonLObjectTourDetails.getJSONArray(\"picturespath\").getString(int)"], "Fixed commit": "10bd81e8f696eca669d18ac56b6adc62e528b389", "Url": "https://api.github.com/repos/coList/Zirbl", "Date": "2017-06-28T23:03:17Z"},
{"Line": "=>583", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diff < 0) { log.debug(\"Packed Buffering: Got Old Packed, throw away but send ACK\"); advertisedWindow = calcAdvWinSize(); sendACK(packet, advertisedWindow); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4335/buggy-version/org.iaik.net.RUDP.RUDPConnection.java", "BodyUseAPI": [], "Fixed commit": "e4d85c57374ac2c2a75805f0bb7f45f11d19f671", "Url": "https://api.github.com/repos/skillii/RNKN", "Date": "2011-06-20T10:07:13Z"},
{"Line": "=>496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sun.jdi.ReferenceType.fieldByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((n.getValue(value)) != null) { result.add(traceprinter.Json.createArrayBuilder().add(convertValue(n.getValue(key))).add(convertValue(n.getValue(value))).build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2443/buggy-version/cp.traceprinter.JDI2JSON.java", "BodyUseAPI": ["traceprinter.Json.createArrayBuilder().add(convertValue(n.getValue(key))).add(traceprinter.JsonValue)", "traceprinter.JsonArrayBuilder.add(traceprinter.Json.createArrayBuilder().add(convertValue(n.getValue(key))).add(convertValue(n.getValue(value))).build())", "traceprinter.Json.createArrayBuilder().add(convertValue(n.getValue(key))).add(convertValue(n.getValue(value))).build()", "traceprinter.Json.createArrayBuilder().add(traceprinter.JsonValue)", "com.sun.jdi.ObjectReference.getValue(com.sun.jdi.Field)", "stHandler.convertValue(com.sun.jdi.Value)", "com.sun.jdi.ObjectReference.getValue(com.sun.jdi.Field)", "stHandler.convertValue(com.sun.jdi.Value)"], "Fixed commit": "900a223832b821408d72ae6ebd7050cfceb99908", "Url": "https://api.github.com/repos/daveagp/java_jail", "Date": "2014-04-10T18:51:21Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userService.getByEmail(user.getEmail())) == null) { userService.create(user); return new org.springframework.http.ResponseEntity(user, org.springframework.http.HttpStatus.CREATED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2650/buggy-version/src.main.java.br.edu.ufcg.es.controller.RegisterController.java", "BodyUseAPI": ["br.edu.ufcg.es.service.UserService.create(br.edu.ufcg.es.model.User)"], "Fixed commit": "588f9b76c12d8493b7f54784d2a1f58b30d2f79c", "Url": "https://api.github.com/repos/BrenoSouza/TeamUp-server", "Date": "2017-08-05T02:19:35Z"},
{"Line": "=>690", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.teiid.authoring.share.services.StringUtils.isEmpty(testSqlTextArea.getText())) { java.lang.String testQuery = ((((((org.teiid.authoring.share.Constants.SELECT_STAR_FROM) + (org.teiid.authoring.share.Constants.SPACE)) + (serviceName)) + (org.teiid.authoring.share.Constants.DOT)) + (org.teiid.authoring.share.Constants.SERVICE_VIEW_NAME)) + (org.teiid.authoring.share.Constants.SPACE)) + (org.teiid.authoring.share.Constants.LIMIT_10); testSqlTextArea.setText(testQuery); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6763/buggy-version/teiid-authoring-webapp.src.main.java.org.teiid.authoring.client.widgets.ViewEditorPanel.java", "BodyUseAPI": ["com.google.gwt.user.client.ui.TextArea.setText(java.lang.String)"], "Fixed commit": "6bf9b36ae451554cc382b9b3138ecc41e014f029", "Url": "https://api.github.com/repos/mdrillin/teiid-authoring", "Date": "2014-12-15T21:43:10Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Environment.getExternalStorageState().equals(android.os.Environment.MEDIA_MOUNTED)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sdcardExist) { sdcardDir = android.os.Environment.getExternalStorageDirectory(); }else { sdcardDir = android.os.Environment.getDownloadCacheDirectory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5914/buggy-version/app.src.main.java.com.forthorn.projecting.util.LogUtils.java", "BodyUseAPI": [], "Fixed commit": "21b572d0b87f8d11502d5b2b0e47b577331bf617", "Url": "https://api.github.com/repos/forthorn/Projecting", "Date": "2017-12-28T03:13:30Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dir.exists())) { dir.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5914/buggy-version/app.src.main.java.com.forthorn.projecting.util.LogUtils.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "21b572d0b87f8d11502d5b2b0e47b577331bf617", "Url": "https://api.github.com/repos/forthorn/Projecting", "Date": "2017-12-28T03:13:30Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.getName().endsWith(\"xes\")) return createXesParser();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4684/buggy-version/src.de.uni.freiburg.iig.telematik.swat.workbench.action.SciffAnalyzeAction.java", "BodyUseAPI": [], "Fixed commit": "eac7458f838ff3863d5cd5b2ce889959f18600a6", "Url": "https://api.github.com/repos/iig-uni-freiburg/SWAT20", "Date": "2015-10-07T11:43:11Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i >= 5) { for (int b = 0; b <= (i - 5); b++) java.lang.System.out.print(\" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4291/buggy-version/src.tinf11bc.kbs.yavalath.logic.Yavalath.java", "BodyUseAPI": [], "Fixed commit": "c4645c4d2b1ae6069c6887502c2547cc5a652799", "Url": "https://api.github.com/repos/belafarinrod91/KBSYavalath", "Date": "2013-09-19T07:43:16Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.internal.compiler.lookup.BlockScope.getMethod(extensionMethod.declaringClass,methodCall.selector,argumentTypes.toArray(new org.eclipse.jdt.internal.compiler.lookup.TypeBinding[0]),org.eclipse.jdt.internal.compiler.ast.MessageSend)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((fixedBinding.declaringClass) != null) { scope.problemReporter().invalidMethod(methodCall, fixedBinding); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4306/buggy-version/src.eclipse.lombok.eclipse.agent.PatchExtensionMethod.java", "BodyUseAPI": ["scope.problemReporter().invalidMethod(org.eclipse.jdt.internal.compiler.ast.MessageSend,org.eclipse.jdt.internal.compiler.lookup.MethodBinding)"], "Fixed commit": "215bcde6a5dfb89da678d5226e5a991241c2d131", "Url": "https://api.github.com/repos/peichhorn/lombok-pg", "Date": "2011-12-05T10:56:05Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getMinutes(endTime)) < 10) { string = (((\"\" + (getHours(endTime))) + \":\") + \"0\") + (getMinutes(endTime)); }else { string = ((\"\" + (getHours(endTime))) + \":\") + (getMinutes(endTime)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2065/buggy-version/IFC_Source_Code.src.gui.TimeSlot.java", "BodyUseAPI": ["gui.TimeSlot.getHours(int)", "gui.TimeSlot.getMinutes(int)", "gui.TimeSlot.getMinutes(int)", "gui.TimeSlot.getHours(int)"], "Fixed commit": "ee8aa55ab51ae8b96d2d5af2332ecd7b7e8ab928", "Url": "https://api.github.com/repos/luyuzheng/IFC-Scheduler", "Date": "2012-12-09T18:59:46Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getMinutes(startTime)) < 10) { string = (((\"\" + (getHours(startTime))) + \":\") + \"0\") + (getMinutes(startTime)); }else { string = ((\"\" + (getHours(startTime))) + \":\") + (getMinutes(startTime)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2065/buggy-version/IFC_Source_Code.src.gui.TimeSlot.java", "BodyUseAPI": ["gui.TimeSlot.getHours(int)", "gui.TimeSlot.getMinutes(int)", "gui.TimeSlot.getHours(int)", "gui.TimeSlot.getMinutes(int)"], "Fixed commit": "ee8aa55ab51ae8b96d2d5af2332ecd7b7e8ab928", "Url": "https://api.github.com/repos/luyuzheng/IFC-Scheduler", "Date": "2012-12-09T18:59:46Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(alive)) { b.putPeg(java.awt.Color.yellow, doc.getRow(), doc.getCol()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5608/buggy-version/src.CatchGame.java", "BodyUseAPI": [], "Fixed commit": "963a5094e4d471ee4d19ad06e2a1fae2313e9153", "Url": "https://api.github.com/repos/stahc1596/12U-A4-DaleksGame", "Date": "2017-10-27T13:48:35Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.sbml.layoutconverter.SBMLModelCompleter.document.getLevel()) == (SBMLUtil.DEFAULT_SBML_LEVEL)) { if ((org.sbml.layoutconverter.SBMLModelCompleter.model.findUnitDefinition(UnitDefinition.SUBSTANCE)) != null) { org.sbml.layoutconverter.SBMLModelCompleter.model.setSubstanceUnits(UnitDefinition.SUBSTANCE); org.sbml.layoutconverter.SBMLModelCompleter.model.setExtentUnits(org.sbml.layoutconverter.SBMLModelCompleter.model.getSubstanceUnits()); } if ((org.sbml.layoutconverter.SBMLModelCompleter.model.findUnitDefinition(UnitDefinition.AREA)) != null) { org.sbml.layoutconverter.SBMLModelCompleter.model.setAreaUnits(UnitDefinition.AREA); } if ((org.sbml.layoutconverter.SBMLModelCompleter.model.findUnitDefinition(UnitDefinition.VOLUME)) != null) { org.sbml.layoutconverter.SBMLModelCompleter.model.setVolumeUnits(UnitDefinition.VOLUME); } if ((org.sbml.layoutconverter.SBMLModelCompleter.model.findUnitDefinition(UnitDefinition.LENGTH)) != null) { org.sbml.layoutconverter.SBMLModelCompleter.model.setLengthUnits(UnitDefinition.LENGTH); } if ((org.sbml.layoutconverter.SBMLModelCompleter.model.findUnitDefinition(UnitDefinition.TIME)) != null) { org.sbml.layoutconverter.SBMLModelCompleter.model.setTimeUnits(UnitDefinition.TIME); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2837/buggy-version/src.org.sbml.layoutconverter.SBMLModelCompleter.java", "BodyUseAPI": [], "Fixed commit": "d069ec3a70d9bd020a9ec9a42aac992f49bbcb86", "Url": "https://api.github.com/repos/funasoul/celldesigner-parser", "Date": "2017-07-11T14:16:38Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.wifi.WifiManager.getScanResults()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (results == null) { size = 0; }else { size = results.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4773/buggy-version/app.src.main.java.com.example.jjamie.virtualadhoc.ConnectionManager.java", "BodyUseAPI": ["java.util.List<android.net.wifi.ScanResult>.size()"], "Fixed commit": "1f8b5e122f49593f7fea529fa51a8dab46e6b7ba", "Url": "https://api.github.com/repos/JJamiie/VirtualAdhoc", "Date": "2016-02-21T15:38:02Z"},
{"Line": "=>2808", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["clouds.client.basic.PersonalCloud.sendQueries(java.util.ArrayList<xdi2.core.xri3.XDI3Segment>,<nulltype>,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (responseFromThisCloud != null) { xdi2.core.Graph responseGraph3 = responseFromThisCloud.getGraph(); xdi2.core.ContextNode responseRootContext3 = responseGraph3.getRootContextNode(); xdi2.core.util.iterators.ReadOnlyIterator<xdi2.core.Literal> allLiteralsFromResponse = responseRootContext3.getAllLiterals(); for (xdi2.core.Literal lit : allLiteralsFromResponse) { xdiResponse += ((((lit.getContextNode().toString()) + \"/&/\") + \"\\\"\") + (lit.getLiteralDataString())) + \"\\\"\\n\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3435/buggy-version/src.main.java.clouds.client.basic.PersonalCloud.java", "BodyUseAPI": ["xdi2.messaging.MessageResult.getGraph()"], "Fixed commit": "861212fe09df5cba75b84c0fd472b55c3bc18385", "Url": "https://api.github.com/repos/animeshc/clouds-client-basic", "Date": "2013-10-18T21:50:50Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ecocean.servlet.Shepherd.getEncounter(request.getParameter(\"number\"))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (enc2add == null) throw new java.lang.RuntimeException((\"invalid encounter id=\" + (request.getParameter(\"number\"))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8059/buggy-version/src.main.java.org.ecocean.servlet.IndividualAddEncounter.java", "BodyUseAPI": [], "Fixed commit": "7da179f30d0834c1808d5c495a388c41e7f534a2", "Url": "https://api.github.com/repos/WildbookOrg/Wildbook", "Date": "2016-08-30T18:37:05Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value instanceof java.lang.String) { return com.alibaba.fastjson.JSON.parseObject(((java.lang.String) (value))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2929/buggy-version/src.main.java.com.alibaba.fastjson.JSONObject.java", "BodyUseAPI": [], "Fixed commit": "c81301d22ad37d26db21061209881b1065981790", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-08-25T02:49:20Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c1 == null) ^ (c2 == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1560/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.util.ui.colourpicker.ColourPickerUtil.java", "BodyUseAPI": [], "Fixed commit": "c8041ea9a70c7bee79ebbb5fdf6d543104b5ca59", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2017-06-30T03:55:37Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.openmicroscopy.shoola.util.CommonsLangUtils.isNotEmpty(model.getLUT())) fireChangeEvent(PaintPotUI.LUT_PROPERTY); else fireChangeEvent(PaintPotUI.COLOUR_CHANGED_PROPERTY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1560/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.util.ui.colourpicker.RGBControl.java", "BodyUseAPI": [], "Fixed commit": "c8041ea9a70c7bee79ebbb5fdf6d543104b5ca59", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2017-06-30T03:55:37Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fn.get(\"uuid\").getValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(previous_words.contains(guid_word))) { str += ((((((\"(WordSequenceLink (stv 1.0 1.0)\\n\" + \" (WordInstanceNode \\\"\") + guid_word) + \"\\\")\\n\") + \" (NumberNode \\\"\") + (getSeqNo())) + \"\\\")\\n\") + \")\\n\"; previous_words.add(guid_word); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2446/buggy-version/src.java.relex.output.OpenCogScheme.java", "BodyUseAPI": ["java.util.HashSet<java.lang.String>.add(java.lang.String)"], "Fixed commit": "aef3957ec9faac5bea80c9505ac8e1b8a8dcf898", "Url": "https://api.github.com/repos/opencog/relex", "Date": "2014-06-09T19:59:42Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != file) file.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6250/buggy-version/src.main.java.com.gmail.kunicins.olegs.gridfs_server.Main.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "86e79bc7c033133200ecf619ae6a28a2b7754cca", "Url": "https://api.github.com/repos/OlegKunitsyn/gridfs-server", "Date": "2016-10-02T12:03:49Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.util.TypeUtils.buildBeanInfo(java.lang.Class<?>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((beanInfo.fields.length) == 0) && (java.lang.Iterable.class.isAssignableFrom(clazz))) { return MiscCodec.instance; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1844/buggy-version/src.main.java.com.alibaba.fastjson.serializer.SerializeConfig.java", "BodyUseAPI": [], "Fixed commit": "575058ea3df4a6e6301dd3f41f73795c8a8db225", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-05-20T21:31:28Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.oracle.truffle.r.runtime.data.RArgsValuesAndNames.getArgument(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dotArg instanceof com.oracle.truffle.r.runtime.data.RPromise) { com.oracle.truffle.r.runtime.env.REnvironment origEnv = env; env = com.oracle.truffle.r.runtime.env.REnvironment.emptyEnv(); args.add(com.oracle.truffle.r.runtime.nodes.RCodeBuilder.argument(RSyntaxNode.LAZY_DEPARSE, dots.getSignature().getName(j), accept(contents))); env = origEnv; }else { args.add(com.oracle.truffle.r.runtime.nodes.RCodeBuilder.argument(RSyntaxNode.LAZY_DEPARSE, dots.getSignature().getName(j), accept(contents))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/161/buggy-version/com.oracle.truffle.r.runtime.src.com.oracle.truffle.r.runtime.RSubstitute.java", "BodyUseAPI": [], "Fixed commit": "110cfe738c549d852ac14666a926ff25ac67004f", "Url": "https://api.github.com/repos/oracle/fastr", "Date": "2017-04-24T15:51:07Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (controller.getGameControl().getAssassin().getName().equals(damaged.getName())) { killPlayer(damaged, damager); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2773/buggy-version/src.tenny1028.assassin.events.PlayerEvents.java", "BodyUseAPI": ["tenny1028.assassin.events.PlayerEvents.killPlayer(org.bukkit.entity.Player,org.bukkit.entity.Player)"], "Fixed commit": "07beea1612d3934f6634d3d7fe68ac288280cf28", "Url": "https://api.github.com/repos/DrOverbuild/AssassinMinigame", "Date": "2016-06-27T19:51:30Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xmlcalabash.runtime.XAtomicStep.getExtensionAttribute(com.xmlcalabash.library.QName)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (msg != null) { java.lang.System.err.println((\"Message: \" + msg)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7175/buggy-version/src.main.java.com.xmlcalabash.library.DefaultStep.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "976688081404c56d881da48ef514f30d47a039d2", "Url": "https://api.github.com/repos/ndw/xmlcalabash1", "Date": "2016-08-14T16:06:32Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((params.length) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7466/buggy-version/src.io.github.davidg95.JTill.jtillserver.ProductSelectDialog.java", "BodyUseAPI": [], "Fixed commit": "6a5aaa569b1e970b200625a66727ffd4a85a789b", "Url": "https://api.github.com/repos/davidg95/JTillServer", "Date": "2017-12-20T19:04:08Z"},
{"Line": "=>848", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isMobileDriver())) { getElement().sendKeys(net.thucydides.core.pages.Keys.chord(Keys.CONTROL, \"a\"), Keys.DELETE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1877/buggy-version/core.src.main.java.net.thucydides.core.pages.WebElementFacadeImpl.java", "BodyUseAPI": [], "Fixed commit": "911799b02a2d987ac49ac41f1735925b173538cd", "Url": "https://api.github.com/repos/mikezx6r/serenity-core", "Date": "2014-12-11T22:32:38Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((cr != null) && (isStatusCodeOK(cr, restPath))) { return ((T) (cr.getEntity(clazz))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7583/buggy-version/src.main.java.org.igniterealtime.restclient.RestClient.java", "BodyUseAPI": ["com.sun.jersey.api.client.ClientResponse.getEntity(java.lang.Class<T>)"], "Fixed commit": "4304f7b7013fafbde91f8091e4d9943d24933a3c", "Url": "https://api.github.com/repos/igniterealtime/REST-API-Client", "Date": "2015-06-15T17:02:28Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data[(iRow1 + 1)]) != 0) subCollisionCount++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/9106/buggy-version/src.server.model.map.MapInfo.java", "BodyUseAPI": [], "Fixed commit": "6170fa8adf1cdc80c8869d8f1c08a969fb2c45e9", "Url": "https://api.github.com/repos/otruffer/Ape_On_Tape", "Date": "2012-12-05T21:10:45Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data[iRow2]) != 0) subCollisionCount++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/9106/buggy-version/src.server.model.map.MapInfo.java", "BodyUseAPI": [], "Fixed commit": "6170fa8adf1cdc80c8869d8f1c08a969fb2c45e9", "Url": "https://api.github.com/repos/otruffer/Ape_On_Tape", "Date": "2012-12-05T21:10:45Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data[(iRow2 + 1)]) != 0) subCollisionCount++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/9106/buggy-version/src.server.model.map.MapInfo.java", "BodyUseAPI": [], "Fixed commit": "6170fa8adf1cdc80c8869d8f1c08a969fb2c45e9", "Url": "https://api.github.com/repos/otruffer/Ape_On_Tape", "Date": "2012-12-05T21:10:45Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data[iRow1]) != 0) subCollisionCount++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/9106/buggy-version/src.server.model.map.MapInfo.java", "BodyUseAPI": [], "Fixed commit": "6170fa8adf1cdc80c8869d8f1c08a969fb2c45e9", "Url": "https://api.github.com/repos/otruffer/Ape_On_Tape", "Date": "2012-12-05T21:10:45Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (birthday == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/603/buggy-version/src.main.java.com.spontaneous.server.model.entity.User.java", "BodyUseAPI": [], "Fixed commit": "5480602e1901cc3576f277a5092137d13cc1e792", "Url": "https://api.github.com/repos/itaispiegel/spontaneous-server", "Date": "2016-02-08T14:50:07Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nonSched.get(position).getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nsType.equalsIgnoreCase(\"PLAYER\")) { sLabel = nonSched.get(position).getName(); }else { sLabel = nonSched.get(position).getContent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7339/buggy-version/java.mm.belii4.form.schedule.NonSchedListAdapter.java", "BodyUseAPI": [], "Fixed commit": "2ded85f18b29fc355761a7a747aefc13fa13c8ed", "Url": "https://api.github.com/repos/mye-morr/belii4", "Date": "2016-11-14T02:42:54Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Lista.size()) < 1) { android.widget.Toast.makeText(this, \"Cannot have a blank List, please go back and add some items\", Toast.LENGTH_LONG).show(); }else { java.util.Random r = new java.util.Random(); int RandomNumber = r.nextInt(Lista.size()); java.lang.String winner = \"The item chosen at random is \" + (Lista.get(RandomNumber)); android.widget.Toast.makeText(this, winner, Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4015/buggy-version/app.src.main.java.com.example.porf.pickone.SeeList.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.size()", "java.util.Random.nextInt(int)", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "060ee0e8c48bc90eb4edaa77a37dfdf8bf778691", "Url": "https://api.github.com/repos/porf25/PickOne", "Date": "2015-04-11T15:50:36Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (accountName != null) { com.ustadmobile.nanolrs.core.model.User agentUser = userManager.findById(dbContext, accountName); if (agentUser != null) { agent.setUser(agentUser); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8570/buggy-version/nanolrs-core.src.main.java.com.ustadmobile.nanolrs.core.endpoints.XapiAgentEndpoint.java", "BodyUseAPI": ["com.ustadmobile.nanolrs.core.manager.UserManager.findById(java.lang.Object,java.lang.String)"], "Fixed commit": "2dae3911f09c15865e7776da7619cbe97d09370f", "Url": "https://api.github.com/repos/UstadMobile/NanoLRS", "Date": "2017-08-10T00:58:18Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.geneix.bottle.WordReader.LOG.isInfoEnabled()) { com.geneix.bottle.WordReader.LOG.info(java.lang.String.format(\"Buffer length: %s\", bufferLength)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/9098/buggy-version/wordcount.src.main.java.com.geneix.bottle.WordReader.java", "BodyUseAPI": ["org.apache.commons.logging.Log.info(java.lang.String)"], "Fixed commit": "b84e753469b4ca6b1a92f4d28bdd159a712fd852", "Url": "https://api.github.com/repos/eastlondoner/bottle", "Date": "2014-10-20T18:30:50Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (adapter instanceof com.yarolegovich.discretescrollview.InfiniteScrollAdapter) { destination = ((com.yarolegovich.discretescrollview.InfiniteScrollAdapter) (adapter)).getClosestPosition(destination); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1346/buggy-version/sample.src.main.java.com.yarolegovich.discretescrollview.sample.DiscreteScrollViewOptions.java", "BodyUseAPI": [], "Fixed commit": "007518250f239401fbd7aace0dd3a6afce0f7e6b", "Url": "https://api.github.com/repos/jonathan-caryl/DiscreteScrollView", "Date": "2017-05-13T17:54:22Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((splitStr.length) > 1) { remoteEnvMap.put(splitStr[0], splitStr[1]); }else if ((splitStr.length) == 1) { remoteEnvMap.put(splitStr[0], \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3640/buggy-version/rdt.org.eclipse.ptp.rdt.sync.core.src.org.eclipse.ptp.rdt.sync.core.remotemake.SyncCommandLauncher.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "8f720cf947017935ba6a3ec099cabe6045d5b9e3", "Url": "https://api.github.com/repos/rolandschulz/PTP", "Date": "2011-06-15T13:27:48Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((endPosition) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4563/buggy-version/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java", "BodyUseAPI": [], "Fixed commit": "259ff3853ec65f9dfe71c6e6f9df5fdbf5ee47dd", "Url": "https://api.github.com/repos/ggevay/flink", "Date": "2016-01-17T20:39:57Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.charAt(2)) == ':') { return info.longnetpro.common.util.fs.FilePathUtils.universalize(p.substring(1), separatorChar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3118/buggy-version/src.info.longnetpro.common.util.fs.FilePathUtils.java", "BodyUseAPI": ["java.lang.String.substring(int)", "info.longnetpro.common.util.fs.FilePathUtils.universalize(java.lang.String,char)"], "Fixed commit": "5825178bba9d6e872c6ad70f726d7d60301edb13", "Url": "https://api.github.com/repos/longnetpro/common", "Date": "2016-08-25T21:10:51Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (end > (json.length())) end = json.length();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8445/buggy-version/src.org.fanwenjie.briefjson.JSONParseException.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "f8b480b202b02a50a0a2514334752f989f127653", "Url": "https://api.github.com/repos/fan-wenjie/briefJson-Java", "Date": "2015-03-06T02:53:12Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (bugs != null) isBug[i] = bugs.contains(b);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3603/buggy-version/app.android.src.edu.berkeley.cs.amplab.carat.android.suggestions.HogBugSuggestionsAdapter.java", "BodyUseAPI": [], "Fixed commit": "9f97cfc0c6fdc234a497c1b1a349bf976f235484", "Url": "https://api.github.com/repos/amplab/carat", "Date": "2012-05-07T20:39:06Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mandatory) { answer = routeContext.mandatoryLookup(ref, org.apache.camel.builder.ErrorHandlerBuilder.class); }else { answer = routeContext.lookup(ref, org.apache.camel.builder.ErrorHandlerBuilder.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6230/buggy-version/camel-core.src.main.java.org.apache.camel.builder.ErrorHandlerBuilderRef.java", "BodyUseAPI": [], "Fixed commit": "2b6feb622ece62c077991953218e431a9acf7cf8", "Url": "https://api.github.com/repos/chanakaudaya/camel", "Date": "2015-09-25T14:26:39Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tileEntity.getWorldObj().isRemote)) { tileEntity.getWorldObj().markBlockForUpdate(tileEntity.xCoord, tileEntity.yCoord, tileEntity.zCoord); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3216/buggy-version/src.main.java.pixlepix.auracascade.gui.ContainerCoordinator.java", "BodyUseAPI": ["tileEntity.getWorldObj().markBlockForUpdate(tileEntity.xCoord,tileEntity.yCoord,tileEntity.zCoord)", "pixlepix.auracascade.block.tile.TileBookshelfCoordinator.getWorldObj()"], "Fixed commit": "5593b257a574411622160f6d918289f664e3a24f", "Url": "https://api.github.com/repos/AdlyTempleton/Aura-Cascade", "Date": "2015-02-01T16:29:42Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mToast) == null) { mToast = android.widget.Toast.makeText(mContext, message, Toast.LENGTH_SHORT); }else { mToast.setText(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8340/buggy-version/app.src.main.java.com.owm.translation.view.translation.FloatTranslationView.java", "BodyUseAPI": [], "Fixed commit": "1b7cbdecb5a4031b5b9133728a6978ed6cca00ea", "Url": "https://api.github.com/repos/trrying/Translation", "Date": "2016-11-08T08:42:21Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(source.getKommentars().isEmpty())) { utlatande.getKommentarer().addAll(source.getKommentars()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6376/buggy-version/ts-bas.src.main.java.se.inera.certificate.modules.ts_bas.model.converter.TransportToExternalConverter.java", "BodyUseAPI": ["utlatande.getKommentarer().addAll(source.getKommentars())", "se.inera.certificate.modules.ts_bas.model.external.Utlatande.getKommentars()"], "Fixed commit": "f76540857d16594d143bb0f8df1e0289be07fb00", "Url": "https://api.github.com/repos/sklintyg/intygstyper", "Date": "2014-02-11T08:57:44Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(source.getKommentarer().isEmpty())) { utlatande.getKommentars().addAll(source.getKommentarer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6376/buggy-version/ts-bas.src.main.java.se.inera.certificate.modules.ts_bas.model.converter.ExternalToTransportConverter.java", "BodyUseAPI": ["utlatande.getKommentars().addAll(source.getKommentarer())", "se.inera.certificate.ts_bas.model.v1.Utlatande.getKommentarer()"], "Fixed commit": "f76540857d16594d143bb0f8df1e0289be07fb00", "Url": "https://api.github.com/repos/sklintyg/intygstyper", "Date": "2014-02-11T08:57:44Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<io.github.zachohara.percussionpacker.cardentity.CardEntity>.indexOf(io.github.zachohara.percussionpacker.cardentity.CardEntity)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parentIndex == (-1)) { parentIndex = this.findGhostCard(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8086/buggy-version/src.io.github.zachohara.percussionpacker.column.CardList.java", "BodyUseAPI": [], "Fixed commit": "0011c7bb0aaf603f680a5174e0d2cacdab8f6db3", "Url": "https://api.github.com/repos/ZachOhara/Percussion-Packer", "Date": "2016-05-26T02:09:47Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isAlive())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6446/buggy-version/de.futjikato.javahasen.simulation.Creature.java", "BodyUseAPI": [], "Fixed commit": "8378a941a700fa65462dc416dd9e4f52a8955fe1", "Url": "https://api.github.com/repos/futjikato/HAW-PR1-FuechseUndHasenJava", "Date": "2012-10-30T19:09:43Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(de.matzefratze123.heavyspleef.HeavySpleef.getSystemConfig().getBoolean(\"auto-update\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3252/buggy-version/src.main.java.de.matzefratze123.heavyspleef.listener.UpdateListener.java", "BodyUseAPI": [], "Fixed commit": "ef2f07208b8dcf1a4b42cea14beaa7db318c35cd", "Url": "https://api.github.com/repos/matzefratze123/HeavySpleef", "Date": "2013-11-13T13:06:11Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(R.id.headline)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (headlineTextView != null) { java.lang.String headlineText = ((java.lang.String) (headlineTextView.getText())); com.crashlytics.android.Crashlytics.log(Log.ERROR, in.sahildave.gazetti.news_activities.WebsiteListFragment.TAG, (\"Is headlineText null - \" + (null == headlineText))); setActivatedPosition(position); mItemSelectedCallback.onItemSelected(headlineText, customAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4030/buggy-version/src.in.sahildave.gazetti.news_activities.WebsiteListFragment.java", "BodyUseAPI": ["android.widget.TextView.getText()"], "Fixed commit": "e8d499751c5a94c5b2888d66adccb0c1db64d385", "Url": "https://api.github.com/repos/sahildave/Gazetti_Newspaper_Reader", "Date": "2014-10-06T13:11:43Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(java.lang.String)", "java.lang.Integer.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((width <= 0) || (height <= 0)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6790/buggy-version/src.at.pwd.asciishop.app.ShopApp.java", "BodyUseAPI": [], "Fixed commit": "68dcdfa3f931a19383ee019ed124cd5dffd34da5", "Url": "https://api.github.com/repos/metzzo/Programmierpraxis_Sem1_2014", "Date": "2014-12-02T12:50:56Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((query) == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6310/buggy-version/GridImageSearch.src.main.java.com.codepath.example.gridimagesearch.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "229ed3bedc8c09ca32edfc671efe2f4002e4587f", "Url": "https://api.github.com/repos/hectorups/Grid-Image-Search", "Date": "2014-01-25T23:30:01Z"},
{"Line": "=>578", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pageCountForStorage) > 3) { com.google.gwt.user.client.Window.scrollTo(0, ((getWidgetHeight()) * 4)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5396/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.gsearch.SearchAbstractView.java", "BodyUseAPI": [], "Fixed commit": "f739ce79ea0b78102ae7ec408d165ad6185789c5", "Url": "https://api.github.com/repos/mitraj/Gooru-Web", "Date": "2015-05-04T10:58:00Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["KeywordAnalyzer.getFacetIRI(org.semanticweb.owlapi.model.OWLClass,java.util.HashSet<org.semanticweb.owlapi.model.IRI>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (parentFacet == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5454/buggy-version/src.KeywordAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "bb47e7623a1b88d70f7dd9c80d03622494246881", "Url": "https://api.github.com/repos/adamschachne/JSON-Text-Analyzer", "Date": "2016-06-21T04:57:42Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["realm.getClass().getName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (name.equals(\"org.apache.shiro.realm.jdbc.JdbcRealm\")) { usersList.addAll(getUserListObj.getUserList(((org.apache.shiro.realm.jdbc.JdbcRealm) (realm)))); }else if (name.equals(\"org.apache.shiro.realm.jdbc.ZeppelinJdbcRealm\")) { usersList.addAll(getUserListObj.getUserList(((org.apache.zeppelin.realm.ZeppelinJdbcRealm) (realm)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6367/buggy-version/zeppelin-server.src.main.java.org.apache.zeppelin.rest.SecurityRestApi.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "7014badad70aaac02c5e247a3cd894cd74ce6899", "Url": "https://api.github.com/repos/YuanGunGun/zeppelin", "Date": "2017-06-17T16:56:35Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((be.ugent.oomo.groep12.studgent.utilities.LocationUtil.listenerLocation) != null) { if (((location != null) && ((location.getLatitude()) != 0)) && ((location.getLongitude()) != 0)) be.ugent.oomo.groep12.studgent.utilities.LocationUtil.listenerLocation.locationIsChanged(location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2896/buggy-version/src.be.ugent.oomo.groep12.studgent.utilities.LocationUtil.java", "BodyUseAPI": [], "Fixed commit": "727ad35f6bf71ae029a969bd6811e4692d2775d8", "Url": "https://api.github.com/repos/studgent/android", "Date": "2014-05-13T10:15:26Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (cable == null) { nwf.createCable(taskID, \"UTP Cable\"); cable = cableDAO.getFreeCable(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5376/buggy-version/NotusOSS-war.src.java.nc.notus.dashboards.SubmitTask.java", "BodyUseAPI": [], "Fixed commit": "5253d9d5f32d56140cfcbbbb87777247ab66b173", "Url": "https://api.github.com/repos/niralittle/Notus", "Date": "2014-05-05T12:35:56Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (port == null) { nwf.createRouter(taskID, portQuantity); port = portDAO.getFreePort(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5376/buggy-version/NotusOSS-war.src.java.nc.notus.dashboards.SubmitTask.java", "BodyUseAPI": [], "Fixed commit": "5253d9d5f32d56140cfcbbbb87777247ab66b173", "Url": "https://api.github.com/repos/niralittle/Notus", "Date": "2014-05-05T12:35:56Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, eem.frame.bot.fighterBot>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (eBot.isItMasterBotDriver()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2476/buggy-version/bot.fighterBot.java", "BodyUseAPI": [], "Fixed commit": "f1ae7a2687769cb8884af97006d5420facc22ad1", "Url": "https://api.github.com/repos/evgmik/robocode_bots.frame-lib", "Date": "2015-10-19T00:10:48Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["AbstractDb.addressProvider.getAliases()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (addressAlias.containsKey(address.getAddress())) { java.lang.String alias = addressAlias.get(address.getAddress()); address.setAlias(alias); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5032/buggy-version/bitherj.src.main.java.net.bither.bitherj.core.AddressManager.java", "BodyUseAPI": ["net.bither.bitherj.core.HDMAddress.getAddress()", "java.util.Map<java.lang.String, java.lang.String>.get(address.getAddress())", "net.bither.bitherj.core.HDMAddress.setAlias(java.lang.String)"], "Fixed commit": "42a2501ea9ed83cb6a03522ca7896ac1c75b38af", "Url": "https://api.github.com/repos/bither/bitherj", "Date": "2015-03-03T08:20:34Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["AbstractDb.addressProvider.getAliases()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (addressAlias.containsKey(address.getAddress())) { java.lang.String alias = addressAlias.get(address.getAddress()); address.setAlias(alias); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5032/buggy-version/bitherj.src.main.java.net.bither.bitherj.core.AddressManager.java", "BodyUseAPI": ["net.bither.bitherj.core.Address.setAlias(java.lang.String)", "net.bither.bitherj.core.Address.getAddress()", "java.util.Map<java.lang.String, java.lang.String>.get(address.getAddress())"], "Fixed commit": "42a2501ea9ed83cb6a03522ca7896ac1c75b38af", "Url": "https://api.github.com/repos/bither/bitherj", "Date": "2015-03-03T08:20:34Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hdmKeychain) != null) { for (net.bither.bitherj.core.HDMAddress address : hdmKeychain.getAllCompletedAddresses()) { if (addressAlias.containsKey(address.getAddress())) { java.lang.String alias = addressAlias.get(address.getAddress()); address.setAlias(alias); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5032/buggy-version/bitherj.src.main.java.net.bither.bitherj.core.AddressManager.java", "BodyUseAPI": [], "Fixed commit": "42a2501ea9ed83cb6a03522ca7896ac1c75b38af", "Url": "https://api.github.com/repos/bither/bitherj", "Date": "2015-03-03T08:20:34Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["AbstractDb.addressProvider.getAliases()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (addressAlias.containsKey(address.getAddress())) { java.lang.String alias = addressAlias.get(address.getAddress()); address.setAlias(alias); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5032/buggy-version/bitherj.src.main.java.net.bither.bitherj.core.AddressManager.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(address.getAddress())", "net.bither.bitherj.core.Address.getAddress()", "net.bither.bitherj.core.Address.setAlias(java.lang.String)"], "Fixed commit": "42a2501ea9ed83cb6a03522ca7896ac1c75b38af", "Url": "https://api.github.com/repos/bither/bitherj", "Date": "2015-03-03T08:20:34Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (singleResult != null) { results.add(singleResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2055/buggy-version/structr-core.src.main.java.org.structr.core.Result.java", "BodyUseAPI": [], "Fixed commit": "15a5181f2565bdc4492bd66d837e34ea77fa0586", "Url": "https://api.github.com/repos/structr/structr", "Date": "2014-02-26T15:48:51Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentToken.getType()) == (Token.ID)) { previousToken = currentToken; realName = processIdentifier(false).expressionName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7878/buggy-version/phase4.Parser.java", "BodyUseAPI": [], "Fixed commit": "7b32e28f7bee562361d5fe0cdb3d1f57af96694d", "Url": "https://api.github.com/repos/oritaty/CompilerProject", "Date": "2017-01-19T22:38:48Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.commonjava.maven.ext.manip.io.ModelIO.resolveProperty(model.getProperties(),child.getValue())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((replacement != null) && ((replacement.length()) > 0)) { logger.debug((((\"Replacing child value \" + (child.getValue())) + \" with \") + replacement)); child.setValue(replacement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7071/buggy-version/io.src.main.java.org.commonjava.maven.ext.manip.io.ModelIO.java", "BodyUseAPI": ["org.codehaus.plexus.util.xml.Xpp3Dom.setValue(java.lang.String)", "org.slf4j.Logger.debug((((\"Replacing child value \" + (child.getValue())) + \" with \") + replacement))"], "Fixed commit": "c47f7ea5c87871c25ad3395bcf395dae073abd1d", "Url": "https://api.github.com/repos/jdcasey/pom-manipulation-ext", "Date": "2015-11-10T12:17:00Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((data == null) || ((data.size()) == 0)) { data = innerIngester.getStream().drain(); macrobase.ingest.DiskCachingIngester.log.info(\"Writing out loaded data...\"); writeOutData(data); macrobase.ingest.DiskCachingIngester.log.info(\"...done writing!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/133/buggy-version/src.main.java.macrobase.ingest.DiskCachingIngester.java", "BodyUseAPI": [], "Fixed commit": "b591cae2a709946f0ef39f89cbd556b26f85c6d5", "Url": "https://api.github.com/repos/kexinrong/macrobase", "Date": "2016-06-02T03:09:11Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((objList.size()) > 0) { arrayName = objList.get(0).getClass().getSimpleName(); }else { arrayName = \"empty\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/9138/buggy-version/src.main.java.org.openbox.sf5.common.JsonObjectFiller.java", "BodyUseAPI": ["T.getClass()", "java.lang.Class<? extends java.lang.Object>.getSimpleName()", "java.util.List<T>.get(int)"], "Fixed commit": "9c54b28237728dd4a858293456e8f217788d22cb", "Url": "https://api.github.com/repos/detec/SF5JSF", "Date": "2015-11-13T04:29:57Z"},
{"Line": "=>2051", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((tree.name) == (names.error)) || (tree.type.isErroneous())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4133/buggy-version/OpenJML.src.com.sun.tools.javac.comp.JmlAttr.java", "BodyUseAPI": [], "Fixed commit": "7b36726c647041e14ce5f96fa0344abb7a8bbf83", "Url": "https://api.github.com/repos/OpenJML/OpenJML", "Date": "2016-11-19T19:24:24Z"},
{"Line": "=>5750", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(that.type.isErroneous())) checkVarMods(that);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4133/buggy-version/OpenJML.src.com.sun.tools.javac.comp.JmlAttr.java", "BodyUseAPI": ["com.sun.tools.javac.comp.JmlAttr.checkVarMods(org.jmlspecs.openjml.JmlTree.JmlVariableDecl)"], "Fixed commit": "7b36726c647041e14ce5f96fa0344abb7a8bbf83", "Url": "https://api.github.com/repos/OpenJML/OpenJML", "Date": "2016-11-19T19:24:24Z"},
{"Line": "=>771", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.plugins.android_emulator.EmulatorConfig.EmulatorDeletionTask.getAvdMetadataFile()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(avdMetaDataFile.delete())) { hudson.plugins.android_emulator.AndroidEmulator.log(logger, hudson.plugins.android_emulator.Messages.FAILED_TO_DELETE_FILE(avdMetaDataFile.getAbsolutePath())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/611/buggy-version/src.main.java.hudson.plugins.android_emulator.EmulatorConfig.java", "BodyUseAPI": ["hudson.plugins.android_emulator.AndroidEmulator.log(java.io.PrintStream,hudson.plugins.android_emulator.Messages.FAILED_TO_DELETE_FILE(avdMetaDataFile.getAbsolutePath()))", "hudson.plugins.android_emulator.Messages.FAILED_TO_DELETE_FILE(java.lang.String)", "java.io.File.getAbsolutePath()"], "Fixed commit": "c8cf471eb4019765901b6d5eed6d458cc3d856d4", "Url": "https://api.github.com/repos/redeamer/android-emulator-plugin", "Date": "2017-11-28T14:18:51Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sdCardRequired && (sdCardFile.exists())) { if (!(sdCardFile.delete())) { hudson.plugins.android_emulator.AndroidEmulator.log(logger, hudson.plugins.android_emulator.Messages.FAILED_TO_DELETE_FILE(sdCardFile.getAbsolutePath())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/611/buggy-version/src.main.java.hudson.plugins.android_emulator.EmulatorConfig.java", "BodyUseAPI": ["java.io.File.delete()", "hudson.plugins.android_emulator.AndroidEmulator.log(java.io.PrintStream,hudson.plugins.android_emulator.Messages.FAILED_TO_DELETE_FILE(sdCardFile.getAbsolutePath()))", "java.io.File.getAbsolutePath()", "hudson.plugins.android_emulator.Messages.FAILED_TO_DELETE_FILE(java.lang.String)"], "Fixed commit": "c8cf471eb4019765901b6d5eed6d458cc3d856d4", "Url": "https://api.github.com/repos/redeamer/android-emulator-plugin", "Date": "2017-11-28T14:18:51Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(InputFragment.AbleToRead)) { java.lang.String text = (\"please use your \" + (InputFragment.WeakArm)) + \" hand more.\"; infoText.setText((((\"Keep going, \" + (InputFragment.ChildName)) + \". And \") + text)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8923/buggy-version/HelpingHand.app.src.main.java.com.example.wenzhao.helpinghand.ble.pro.Fragment.ProcessFragment.java", "BodyUseAPI": [], "Fixed commit": "0351249be929b044ed29340004330b550ea93fd5", "Url": "https://api.github.com/repos/sherryzw/Android-APP-HelpingHand", "Date": "2016-03-11T05:28:33Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mythicDrops.getPopulatingSettings().getWorld(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pw.getTiers().isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1575/buggy-version/src.main.java.net.nunnerycode.bukkit.mythicdrops.populating.PopulatingListener.java", "BodyUseAPI": [], "Fixed commit": "7e7a84c540126670197dd7af87f10e359830a127", "Url": "https://api.github.com/repos/Nunnery/MythicDrops", "Date": "2014-04-13T18:51:11Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((documentStr.toString().trim().length()) > 0) { java.lang.String[] lines = documentStr.toString().split(\"\\\\n\"); if ((lines.length) > 4) { if (!(edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet.processDocument(file.getName(), (((file.getName()) + \".\") + id), documentStr.toString().trim(), ternaryClass))) { if (prevDocument != null) { java.lang.System.out.println((\"Prior to failure, the most recent processed document was: \" + prevDocument)); } r.close(); java.lang.System.exit(0); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/436/buggy-version/src.main.java.edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet.java", "BodyUseAPI": ["edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet.processDocument(java.lang.String,java.lang.String,java.lang.String,edu.psu.ist.acs.micro.mid.data.annotation.nlp.AnnotationTypeNLPMID.TernaryRelevanceClass)", "java.lang.String.trim()", "java.lang.String.split(java.lang.String)", "java.lang.StringBuilder.toString()", "java.lang.StringBuilder.toString()"], "Fixed commit": "879b0a44459caf04fa49d4211af5e69cc2f58e6e", "Url": "https://api.github.com/repos/forkunited/micro-mid", "Date": "2016-02-09T03:41:47Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.holodeckb2b.interfaces.persistency.entities.IMessageUnitEntity.getPModeId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(org.holodeckb2b.common.util.Utils.isNullOrEmpty(pmodeId))) { log.debug(((\"Set P-Mode Id [\" + pmodeId) + \"] for generated Error Message\")); updateManager.setPModeId(errorMessage, pmodeId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3590/buggy-version/modules.holodeckb2b-core.src.main.java.org.holodeckb2b.ebms3.handlers.inflow.ProcessGeneratedErrors.java", "BodyUseAPI": ["org.holodeckb2b.persistency.dao.StorageManager.setPModeId(org.holodeckb2b.interfaces.persistency.entities.IErrorMessageEntity,java.lang.String)", "org.holodeckb2b.ebms3.handlers.inflow.ProcessGeneratedErrors.debug(java.lang.String)"], "Fixed commit": "792cffe78e64cc787ab2a721c477a67ffb54bc7c", "Url": "https://api.github.com/repos/MockerTim/Holodeck-B2B", "Date": "2017-04-19T19:12:43Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.Math.abs(drivex)) + (java.lang.Math.abs(drivey))) > 0.0) { scale = java.lang.Math.abs((magnitude / (java.lang.Math.max(java.lang.Math.abs(unitx), java.lang.Math.abs(unity))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7697/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.Robot.java", "BodyUseAPI": [], "Fixed commit": "4ac3587d70b169c21a6585423d4f67802a308b17", "Url": "https://api.github.com/repos/FTC-4160/ftc_app", "Date": "2016-11-18T02:27:17Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node.isMeasure()) { measure = node; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3544/buggy-version/src.main.java.fi.thl.pivot.model.PivotCellKeyGenerator.java", "BodyUseAPI": [], "Fixed commit": "1c071afbebf9b86f43eac300f0db31a2d9fbeadd", "Url": "https://api.github.com/repos/THLfi/tiku", "Date": "2017-02-07T11:52:15Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (typeElement.getNestingKind().isNested()) { java.lang.String namePrefix = internalName.substring(0, internalName.lastIndexOf('/')); internalName = (namePrefix + \"$\") + className; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6011/buggy-version/annotation.src.dshell.annotation.AnnotationProcessor.java", "BodyUseAPI": [], "Fixed commit": "db8f2ba4eb067223c9f5b25abb3cb03ccc55db17", "Url": "https://api.github.com/repos/sekiguchi-nagisa/DShell", "Date": "2014-08-19T06:52:44Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((startHour.equals(\"23\")) && (endHour.equals(\"00\"))) { int tmpDate = java.lang.Integer.parseInt(dateStr); tmpDate++; endDateStr = \"\" + tmpDate; edu.wisc.ssec.mcidasv.chooser.SuomiNPPChooser.logger.info(\"Granule time spanning days case handled ok...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/489/buggy-version/edu.wisc.ssec.mcidasv.chooser.SuomiNPPChooser.java", "BodyUseAPI": [], "Fixed commit": "d057661fa3eb4820887221d693ebb2da4b59484b", "Url": "https://api.github.com/repos/mcidasv/mcidasv", "Date": "2013-01-14T22:31:17Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (start_textField.getText().contains(\",\")) { startN = mapController.getCollectionOfNodes().getNodeWithName(start_textField.getText().split(\", \")[1]); }else { startN = mapController.getCollectionOfNodes().getNodeWithName(start_textField.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5881/buggy-version/src.main.java.patientMain.patientMainController.java", "BodyUseAPI": ["mapController.getCollectionOfNodes().getNodeWithName(start_textField.getText().split(\", \")[1])", "patientMain.TextField.getText()", "mapController.getCollectionOfNodes().getNodeWithName(start_textField.getText())", "start_textField.getText().split(java.lang.String)", "patientMain.TextField.getText()"], "Fixed commit": "3f21ceb1517c051526b383a49ac515cf57048a12", "Url": "https://api.github.com/repos/gftabor/Soft-Eng", "Date": "2017-04-19T15:21:02Z"},
{"Line": "=>2338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.sbml.jsbml.ASTNode.logger.isDebugEnabled()) { org.sbml.jsbml.ASTNode.logger.debug((\"ASTNode.deriveUnit - before simplify - units = \" + (org.sbml.jsbml.UnitDefinition.printUnits(derivedUnit)))); org.sbml.jsbml.ASTNode.logger.debug((\"ASTNode.deriveUnit - after simplify - units = \" + (org.sbml.jsbml.UnitDefinition.printUnits(simplifiedUnit)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/451/buggy-version/core.src.org.sbml.jsbml.ASTNode.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug((\"ASTNode.deriveUnit - before simplify - units = \" + (org.sbml.jsbml.UnitDefinition.printUnits(derivedUnit))))", "org.apache.log4j.Logger.debug((\"ASTNode.deriveUnit - after simplify  - units = \" + (org.sbml.jsbml.UnitDefinition.printUnits(simplifiedUnit))))"], "Fixed commit": "ba9edd4acc8c3c5d02575fb60131fc98b67db6e4", "Url": "https://api.github.com/repos/sbmlteam/jsbml", "Date": "2017-09-20T15:56:06Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((thisImageView) != null) { thisImageView.setVisibility(View.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8986/buggy-version/app.src.main.java.org.philadelphiagamelab.scavunt.TakePictureFragment.java", "BodyUseAPI": [], "Fixed commit": "e3a192dff34acc417ac43b1c865c0584be2c172c", "Url": "https://api.github.com/repos/PhiladelphiaGameLab/scavunt", "Date": "2014-08-14T19:44:44Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gridViewAdapter) != null) { gridViewAdapter.updateDelegate(o); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5161/buggy-version/app.src.main.java.fragments.Lists.GridView.GridViewFragment.java", "BodyUseAPI": [], "Fixed commit": "507fae847ba713bc1d3ca265f076e8048741f400", "Url": "https://api.github.com/repos/jordanmamroud/jmbasicandroidlibrary", "Date": "2017-07-11T17:34:45Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) != null) timer.start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4726/buggy-version/src.main.battlecode.client.viewer.MatchPlayer.java", "BodyUseAPI": [], "Fixed commit": "a1279a67420f1ece0f8e61938dc785cafe49d179", "Url": "https://api.github.com/repos/toby1984/battlecode-client", "Date": "2014-01-13T04:43:28Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) != null) timer.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4726/buggy-version/src.main.battlecode.client.viewer.MatchPlayer.java", "BodyUseAPI": [], "Fixed commit": "a1279a67420f1ece0f8e61938dc785cafe49d179", "Url": "https://api.github.com/repos/toby1984/battlecode-client", "Date": "2014-01-13T04:43:28Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (columnLength > length) { length = columnLength; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6595/buggy-version/data.orm.src.main.java.leap.orm.generator.AutoIdGenerator.java", "BodyUseAPI": [], "Fixed commit": "e297a20feb1e6b34573619fd2442b399602efb75", "Url": "https://api.github.com/repos/leapframework/framework", "Date": "2016-07-13T10:39:04Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mod < (mStepSize)) { mod = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1850/buggy-version/library.src.main.java.com.fuzzproductions.ratingbar.RatingBar.java", "BodyUseAPI": [], "Fixed commit": "f17ffd2c2957005948735e526cb23e3016b9b42a", "Url": "https://api.github.com/repos/fuzz-productions/RatingBar", "Date": "2016-08-26T15:41:21Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(col_default.equals(\"NULL\"))) query = (((query + \"'\") + col_default) + \"'\") + \", \"; else query = (query + \"NULL\") + \", \";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5592/buggy-version/src.jasper.db.InsertInTable.java", "BodyUseAPI": [], "Fixed commit": "d788f9fb2b20737f6f4bc6b9c48ceaafab52198a", "Url": "https://api.github.com/repos/shashwatdixit124/Jasper", "Date": "2017-04-18T18:51:23Z"},
{"Line": "=>508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (duration <= 0) duration = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1471/buggy-version/app.src.main.java.com.x1unix.avi.PlayerActivity.java", "BodyUseAPI": [], "Fixed commit": "e207afeb85c4c178717e9525d42da8f255b7e577", "Url": "https://api.github.com/repos/x1unix/Avi", "Date": "2017-03-18T17:42:47Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mServer.getPort()) == (-1)) { throw new java.lang.Exception(\"Server start failed!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6710/buggy-version/src.main.java.org.tuntuni.video.Dialer.java", "BodyUseAPI": [], "Fixed commit": "7e9c2768084808e2727bc6eecd46c1568908787f", "Url": "https://api.github.com/repos/dipu-bd/Tuntuni", "Date": "2016-09-10T19:43:41Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_scanner) getView().displayErrorMessage(\"Count cannot be less than 1.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2628/buggy-version/src.gui.batches.AddItemBatchController.java", "BodyUseAPI": [], "Fixed commit": "18cc6153d2ca57d167891821a52b90ec5cf7ad6d", "Url": "https://api.github.com/repos/CS340Group/hit", "Date": "2012-11-08T20:06:55Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lastWorldFlagUpdateIndex != (-1)) { lmr.randomizer.rcd.object.WriteByteOperation flagUpdate = objectToModify.getWriteByteOperations().get(lastWorldFlagUpdateIndex); if ((flagUpdate.getValue()) != 2) { flagUpdate.setValue(2); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1406/buggy-version/src.main.java.lmr.randomizer.update.RcdObjectTracker.java", "BodyUseAPI": ["objectToModify.getWriteByteOperations().get(int)"], "Fixed commit": "f203f124bfaca6c442a6c8644e57073b8b6f7241", "Url": "https://api.github.com/repos/thezerothcat/LaMulanaRandomizer", "Date": "2017-07-24T01:42:56Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((easy.caesar.code.CaesarCode.alphabet.indexOf(buf)) >= 0) { pos = ((easy.caesar.code.CaesarCode.alphabet.indexOf(buf)) + (step)) % (easy.caesar.code.CaesarCode.lng); resultString = resultString.concat(easy.caesar.code.CaesarCode.alphabet.substring(pos, ((pos) + 1))); }else { resultString = resultString.concat(originalString.substring(i, (i + 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7759/buggy-version/src.easy.caesar.code.CaesarCode.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(char)", "java.lang.String.concat(java.lang.String)"], "Fixed commit": "aec82004d588d3fe7d78ca57446bcebcdf732c2e", "Url": "https://api.github.com/repos/AcoustickSan/CaesarCode", "Date": "2013-10-04T20:24:07Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((easy.caesar.code.CaesarCode.alphabet.indexOf(buf)) >= 0) { pos = (((easy.caesar.code.CaesarCode.alphabet.indexOf(buf)) - (step)) + (easy.caesar.code.CaesarCode.lng)) % (easy.caesar.code.CaesarCode.lng); resultString = resultString.concat(easy.caesar.code.CaesarCode.alphabet.substring(pos, ((pos) + 1))); }else { resultString = resultString.concat(originalString.substring(i, (i + 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7759/buggy-version/src.easy.caesar.code.CaesarCode.java", "BodyUseAPI": ["java.lang.String.indexOf(char)", "java.lang.String.substring(int,int)", "java.lang.String.concat(java.lang.String)"], "Fixed commit": "aec82004d588d3fe7d78ca57446bcebcdf732c2e", "Url": "https://api.github.com/repos/AcoustickSan/CaesarCode", "Date": "2013-10-04T20:24:07Z"},
{"Line": "=>1644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uPbFraction) != null) { retVal += ((((\"> 206/238: \" + (uPbFraction.getRadiogenicIsotopeDateByName(RadDates.age206_238r).formatValueAndTwoSigmaForPublicationSigDigMode(\"ABS\", (-6), 2))) + \"> 207/235: \") + (uPbFraction.getRadiogenicIsotopeDateByName(RadDates.age207_235r).formatValueAndTwoSigmaForPublicationSigDigMode(\"ABS\", (-6), 2))) + \"> 207/206: \") + (uPbFraction.getRadiogenicIsotopeDateByName(RadDates.age207_206r).formatValueAndTwoSigmaForPublicationSigDigMode(\"ABS\", (-6), 2)); }else { retVal += \" could not be processed at this time.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4457/buggy-version/src.main.java.org.earthtime.Tripoli.fractions.TripoliFraction.java", "BodyUseAPI": [], "Fixed commit": "2d3a5b060d042dfdde7917eb3805de5aa50a3e69", "Url": "https://api.github.com/repos/bowring/ET_Redux", "Date": "2016-11-02T11:20:34Z"},
{"Line": "=>955", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (daysPenalty != 0) { daysPenalty = daysPenalty / (fineCost); daysPenalty = daysInterval - daysPenalty; }else { daysPenalty = daysInterval; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/9112/buggy-version/Web_App.WebApi.jwl-api.src.main.java.jwl.fpt.service.imp.BookBorrowService.BookBorrowService.java", "BodyUseAPI": [], "Fixed commit": "a3b85069e0951147acfa520cb023067b00085f63", "Url": "https://api.github.com/repos/kyokid/JWL", "Date": "2017-05-03T03:09:45Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((marker) == 0) { throw new java.lang.IllegalStateException(); }else { ensureCapacity(elements.length); java.lang.System.arraycopy(elements, 0, this.elements, size, elements.length); size += elements.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1305/buggy-version/src.main.java.org.foxlabs.peg4j.LocalStack.java", "BodyUseAPI": [], "Fixed commit": "1f70d5559da379fa50744b2b497bad276ecaf68d", "Url": "https://api.github.com/repos/foxinboxx/foxlabs-peg4j", "Date": "2015-07-14T11:31:16Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((marker) == 0) { throw new java.lang.IllegalStateException(); }else { ensureCapacity(1); elements[((size)++)] = element; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1305/buggy-version/src.main.java.org.foxlabs.peg4j.LocalStack.java", "BodyUseAPI": [], "Fixed commit": "1f70d5559da379fa50744b2b497bad276ecaf68d", "Url": "https://api.github.com/repos/foxinboxx/foxlabs-peg4j", "Date": "2015-07-14T11:31:16Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (r.equals(rank.VIP)) { return org.bukkit.ChatColor.GREEN; }else if ((r.equals(rank.PREMIUM)) || (r.equals(rank.PRO))) { return org.bukkit.ChatColor.GOLD; }else if (r.equals(rank.USER)) { return org.bukkit.ChatColor.GRAY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2037/buggy-version/RankAPI.src.de.pongy.rankapi.RankColor.java", "BodyUseAPI": ["de.pongy.rankapi.RankAPI.rank.equals(rank.USER)", "de.pongy.rankapi.RankAPI.rank.equals(rank.PREMIUM)", "de.pongy.rankapi.RankAPI.rank.equals(rank.PRO)"], "Fixed commit": "9b1c7db83b9c8435d4a803f8db1d6f7e89e75afe", "Url": "https://api.github.com/repos/pongy20/RankAPI", "Date": "2017-11-05T19:27:47Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.codename1.impl.android.InPlaceEditView.isEditing()) { com.codename1.impl.android.AndroidImplementation.stopEditing(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5258/buggy-version/Ports.Android.src.com.codename1.impl.android.CodenameOneActivity.java", "BodyUseAPI": [], "Fixed commit": "3fea3c6ecb81aa220b159d7d22f4236b796dd8e4", "Url": "https://api.github.com/repos/saeder/CodenameOne", "Date": "2017-01-12T18:12:09Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opencloudb.mysql.nio.handler.MultiNodeHandler.decrementCountBy(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (canClose) { setFail((\"backend connect: \" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6136/buggy-version/src.main.java.org.opencloudb.mysql.nio.handler.MultiNodeHandler.java", "BodyUseAPI": [], "Fixed commit": "eb4333ae12c030b53c9a5be3811737e92e8deb05", "Url": "https://api.github.com/repos/xfworld/Mycat-Server", "Date": "2016-03-26T09:02:52Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mailbox.add(new org.netlight.messaging.actors.RichMessage(message, ctx, java.lang.System.currentTimeMillis(), weight))) { load.getAndAdd(weight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6744/buggy-version/core.src.main.java.org.netlight.messaging.actors.DefaultActor.java", "BodyUseAPI": ["org.netlight.util.concurrent.AtomicIntegerField.getAndAdd(int)"], "Fixed commit": "91f977051418f8726f5d29d160d8387d5cb70a68", "Url": "https://api.github.com/repos/ahmadmo/NetLight", "Date": "2016-01-25T07:27:12Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cocoon.environment.Request.getParameter(java.lang.String)", "org.dspace.app.xmlui.aspect.shoppingcart.ShoppingCart.getCountry()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((country != null) && (!(country.equals(countryOriginal)))) { shoppingCart.setCountry(country); }else { if ((country != null) && ((country.length()) == 0)) { shoppingCart.setCountry(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3042/buggy-version/dspace.modules.payment-system.payment-webapp.src.main.java.org.dspace.app.xmlui.aspect.shoppingcart.FlowShoppingcartUtils.java", "BodyUseAPI": ["org.dspace.app.xmlui.aspect.shoppingcart.ShoppingCart.setCountry(java.lang.String)", "java.lang.String.length()"], "Fixed commit": "63dfd6d1dc99f563c69b75d3c23f38f75bb7f5d0", "Url": "https://api.github.com/repos/datadryad/dryad-repo", "Date": "2013-10-10T21:57:44Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.blub.repository.DocumentRepository.findOne(recievedDocument.getGraphId())", "org.blub.service.DocumentService.deserializeDocumentString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (recievedDocument.getPrimary_document_id().getDomain().equals(oldDocument.getPrimary_document_id().getDomain())) { newDocumentID.setDomain(oldDocument.getPrimary_document_id().getDomain()); }else { newDocumentID.setDomain(recievedDocument.getPrimary_document_id().getDomain()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6369/buggy-version/src.main.java.org.blub.controller.DocumentController.java", "BodyUseAPI": ["org.blub.domain.Document_id.setDomain(recievedDocument.getPrimary_document_id().getDomain())", "org.blub.domain.Document_id.setDomain(oldDocument.getPrimary_document_id().getDomain())", "oldDocument.getPrimary_document_id().getDomain()", "org.blub.domain.Document.getPrimary_document_id()", "org.blub.domain.Document.getPrimary_document_id()", "recievedDocument.getPrimary_document_id().getDomain()"], "Fixed commit": "b57df3dd91ac8d204430013666ef502e920bb6ba", "Url": "https://api.github.com/repos/neo8ba8dms/neo_ba_dms", "Date": "2016-03-06T15:13:45Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entry.getValue().contains(co.cask.cdap.data2.metadata.dataset.MetadataDataset.TAGS_SEPARATOR)) { valueIndexes.addAll(java.util.Arrays.asList(co.cask.cdap.data2.metadata.dataset.MetadataDataset.TAGS_SEPARATOR_PATTERN.split(entry.getValue()))); }else { valueIndexes.add(entry.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/149/buggy-version/cdap-data-fabric.src.main.java.co.cask.cdap.data2.metadata.dataset.MetadataDataset.java", "BodyUseAPI": ["co.cask.cdap.data2.metadata.dataset.MetadataEntry.getValue()", "java.util.Set<java.lang.String>.addAll(java.util.List)", "co.cask.cdap.data2.metadata.dataset.MetadataEntry.getValue()", "java.util.Arrays.asList(java.lang.String[])", "java.util.Set<java.lang.String>.add(entry.getValue())", "java.util.regex.Pattern.split(entry.getValue())"], "Fixed commit": "0f7538413af2b5ded028ceddd076756bd81c80ef", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2016-01-15T02:27:56Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reminder) == null) reminder = new com.admuc.locationreminders.models.ManualReminder();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4918/buggy-version/app.src.main.java.com.admuc.locationreminders.activities.ManageActivity.java", "BodyUseAPI": [], "Fixed commit": "be0d1be1dc64910bdec10dd4f34e0f45df649251", "Url": "https://api.github.com/repos/mlipke/LocationReminders", "Date": "2015-11-13T15:49:12Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reminder) == null) reminder = new com.admuc.locationreminders.models.AutomaticReminder();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4918/buggy-version/app.src.main.java.com.admuc.locationreminders.activities.ManageActivity.java", "BodyUseAPI": [], "Fixed commit": "be0d1be1dc64910bdec10dd4f34e0f45df649251", "Url": "https://api.github.com/repos/mlipke/LocationReminders", "Date": "2015-11-13T15:49:12Z"},
{"Line": "=>1170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((info.mServiceClass) == ((com.android.internal.telephony.CommandsInterface.SERVICE_CLASS_DATA_SYNC) + (com.android.internal.telephony.CommandsInterface.SERVICE_CLASS_PACKET))) { cfInfo.serviceClass = info.mServiceClass; }else { cfInfo.serviceClass = com.android.internal.telephony.CommandsInterface.SERVICE_CLASS_VOICE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2734/buggy-version/src.java.com.android.internal.telephony.imsphone.ImsPhone.java", "BodyUseAPI": [], "Fixed commit": "9717537265f7397e6d6d1742ee132d5968ee3beb", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-frameworks-opt-telephony", "Date": "2015-12-14T13:14:41Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.NamedNodeMap.item(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (attribute.getNodeValue().contains(\"#\")) { attribute.setNodeValue(attribute.getNodeValue().substring(attribute.getNodeValue().indexOf(\"#\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2992/buggy-version/addins.src.nota.oxygen.epub.ConcatEpubOperation.java", "BodyUseAPI": ["org.w3c.dom.Attr.setNodeValue(java.lang.String)", "org.w3c.dom.Attr.getNodeValue()", "java.lang.String.substring(int)", "org.w3c.dom.Attr.getNodeValue()", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "d25c7bd8ecb6b19030f3f32c3f9d733a2d8916d9", "Url": "https://api.github.com/repos/Notalib/nota.oxygen", "Date": "2014-12-08T10:07:05Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (in.getVersion().onOrAfter(Version.V_1_5_0)) { tookInMillis = in.readVLong(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/777/buggy-version/src.main.java.org.elasticsearch.action.termvector.TermVectorResponse.java", "BodyUseAPI": ["org.elasticsearch.common.io.stream.StreamInput.readVLong()"], "Fixed commit": "15fe3490bb1d747d473e1525ef63b44501610f0a", "Url": "https://api.github.com/repos/elastic/elasticsearch", "Date": "2015-02-16T18:49:03Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (in.getVersion().onOrAfter(Version.V_1_4_0_Beta1)) { artificial = in.readBoolean(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/777/buggy-version/src.main.java.org.elasticsearch.action.termvector.TermVectorResponse.java", "BodyUseAPI": ["org.elasticsearch.common.io.stream.StreamInput.readBoolean()"], "Fixed commit": "15fe3490bb1d747d473e1525ef63b44501610f0a", "Url": "https://api.github.com/repos/elastic/elasticsearch", "Date": "2015-02-16T18:49:03Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (out.getVersion().onOrAfter(Version.V_1_5_0)) { out.writeVLong(tookInMillis); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/777/buggy-version/src.main.java.org.elasticsearch.action.termvector.TermVectorResponse.java", "BodyUseAPI": ["org.elasticsearch.common.io.stream.StreamOutput.writeVLong(long)"], "Fixed commit": "15fe3490bb1d747d473e1525ef63b44501610f0a", "Url": "https://api.github.com/repos/elastic/elasticsearch", "Date": "2015-02-16T18:49:03Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (out.getVersion().onOrAfter(Version.V_1_4_0_Beta1)) { out.writeBoolean(artificial); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/777/buggy-version/src.main.java.org.elasticsearch.action.termvector.TermVectorResponse.java", "BodyUseAPI": ["org.elasticsearch.common.io.stream.StreamOutput.writeBoolean(boolean)"], "Fixed commit": "15fe3490bb1d747d473e1525ef63b44501610f0a", "Url": "https://api.github.com/repos/elastic/elasticsearch", "Date": "2015-02-16T18:49:03Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPrompt().defaultResponse) != null) numberPicker.setCurrent(getPrompt().defaultResponse);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1187/buggy-version/ohmage.src.main.java.org.ohmage.prompts.NumberPrompt.java", "BodyUseAPI": [], "Fixed commit": "7affa08dbcca3d3e182ce0463c0349ab34ec020b", "Url": "https://api.github.com/repos/ohmage/android", "Date": "2014-03-30T18:37:58Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.length()) < (s.length())) return sb.toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6451/buggy-version/src.main.java.ArraysStrings.Compressor.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()"], "Fixed commit": "61355618351feb1df9ce2111e91ec908ddeb1fbd", "Url": "https://api.github.com/repos/yolgun/ctci", "Date": "2016-12-04T20:11:18Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(stats.get(inf).containsKey(depth))) { stats.get(inf).put(depth, new org.data2semantics.mustard.util.Pair<java.lang.Double, java.lang.Double>(0.0, 0.0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6344/buggy-version/mustard-experiments.src.main.java.org.data2semantics.mustard.experiments.SimpleGraphFeaturesAMExperiment.java", "BodyUseAPI": ["java.util.Map<java.lang.Boolean, java.util.Map<java.lang.Integer, org.data2semantics.mustard.util.Pair<java.lang.Double, java.lang.Double>>>.get(boolean)", "stats.get(inf).put(int,org.data2semantics.mustard.util.Pair<java.lang.Double, java.lang.Double>)"], "Fixed commit": "afe02c7bce27cc40c8a31d5716705dcae8d3226a", "Url": "https://api.github.com/repos/Data2Semantics/mustard", "Date": "2014-10-11T15:26:51Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((presenter.getSelectedFolder()) == null) { searchPresenter.fireActiveQuery(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3322/buggy-version/src.main.java.org.iplantc.core.uidiskresource.client.presenters.handlers.DiskResourcesEventHandler.java", "BodyUseAPI": [], "Fixed commit": "5231b5c2a91eea58a7fcb6cda9575bf5713b9172", "Url": "https://api.github.com/repos/iPlantCollaborativeOpenSource/ui-disk-resource-module", "Date": "2014-01-28T00:05:08Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getToBlock().getState()", "java.util.Arrays.asList(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (fluidBlocks.contains(to.getTypeId())) { data.setData(((byte) ((from.getRawData()) + 1))); from.setData(data); }else if (((to.getTypeId()) == 8) || ((to.getTypeId()) == 9)) { from.setTypeId(((event.getFace()) == (org.bukkit.block.BlockFace.DOWN) ? 10 : 4)); data.setData(((byte) (0))); from.setData(data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5725/buggy-version/src.uk.co.oliwali.HawkEye.listeners.MonitorBlockListener.java", "BodyUseAPI": ["org.bukkit.block.BlockState.getTypeId()", "org.bukkit.block.BlockState.getTypeId()"], "Fixed commit": "4d93fbf7bdf6ce80524e80c602278344a6139661", "Url": "https://api.github.com/repos/oliverwoodings/HawkEye", "Date": "2011-12-15T14:16:07Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.security.Signature.getInstance(Sdk.SIGNATURE_ALGORITHM)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(signature.verify(org.apache.commons.codec.binary.Base64.decodeBase64(baseEncoded64Signature.getBytes(Sdk.CHARACTER_ENCODING))))) { throw new java.lang.SecurityException(\"Failed to verify the signature/certificate for the provided speechlet request\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3833/buggy-version/src.com.amazon.speech.speechlet.authentication.SpeechletRequestSignatureVerifier.java", "BodyUseAPI": [], "Fixed commit": "7411ac4246115f5d3db03d9477a6818ad57aa977", "Url": "https://api.github.com/repos/alexa/alexa-skills-kit-sdk-for-java", "Date": "2016-02-06T01:08:49Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((portType.getLabel()) != null) { if ((portType.getLabel().getValue()) != null) sLSPort.setLabel(portType.getLabel().getValue()); if ((portType.getLabel().getLabeltype()) != null) sLSPort.setLabelType(portType.getLabel().getLabeltype()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2911/buggy-version/modules.topology-common.src.main.java.net.es.topology.common.converter.nml.NMLVisitor.java", "BodyUseAPI": ["portType.getLabel().getValue()", "net.es.topology.common.records.nml.Port.setLabel(portType.getLabel().getValue())", "portType.getLabel().getValue()", "net.es.topology.common.converter.nml.PortType.getLabel()", "net.es.topology.common.converter.nml.PortType.getLabel()", "net.es.topology.common.records.nml.Port.setLabelType(portType.getLabel().getLabeltype())", "net.es.topology.common.converter.nml.PortType.getLabel()", "portType.getLabel().getLabeltype()", "net.es.topology.common.converter.nml.PortType.getLabel()", "portType.getLabel().getLabeltype()"], "Fixed commit": "c0b252fbbb694a2e66ee7c6ee324301a2c70fb09", "Url": "https://api.github.com/repos/ahassany/topology-service", "Date": "2013-06-28T22:56:49Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isChecked) { if ((selectedProducts.indexOf(product)) == (-1)) { selectedProducts.add(product); } }else { if ((selectedProducts.indexOf(product)) != (-1)) { selectedProducts.remove(product); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8831/buggy-version/app.src.main.java.com.google.ar.core.examples.java.helloar.CustomAdapter.java", "BodyUseAPI": [], "Fixed commit": "dd905b9bde8c589f920277607d3b2622131ed1b6", "Url": "https://api.github.com/repos/GeorgianB/DrHouseApp", "Date": "2017-09-10T01:47:07Z"},
{"Line": "=>702", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isNewHost)) { getButton(com.cubrid.cubridmanager.ui.host.dialog.HostDialog.CONNECT_ID).setEnabled(true); getButton(com.cubrid.cubridmanager.ui.host.dialog.HostDialog.TEST_CONNECT_ID).setEnabled(true); }else { getButton(com.cubrid.cubridmanager.ui.host.dialog.HostDialog.CONNECT_ID).setEnabled(isEnabled); getButton(com.cubrid.cubridmanager.ui.host.dialog.HostDialog.TEST_CONNECT_ID).setEnabled(isEnabled); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2817/buggy-version/com.cubrid.cubridmanager.ui.src.com.cubrid.cubridmanager.ui.host.dialog.HostDialog.java", "BodyUseAPI": [], "Fixed commit": "a350b1bb6ca3336dfb60e1b3a03609354c7084c5", "Url": "https://api.github.com/repos/paulgheorghecristian/cubrid-manager", "Date": "2017-01-03T13:38:56Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kerberos.KDC.requestServerTicket(kerberos.Ticket,kerberos.Auth,fileServer.getName(),long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(serverTicketResponse.decrypt(tgsSessionKey))) { serverTicketResponse.printError(\"Invalid session key.\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7922/buggy-version/kerberos.Client.java", "BodyUseAPI": ["kerberos.TicketResponse.printError(java.lang.String)"], "Fixed commit": "469e256e939c032119f90521969c237bd95e5757", "Url": "https://api.github.com/repos/Shivon/IT-Sicherheit-04", "Date": "2016-01-19T23:30:34Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(command.equals(\"showFile\"))) { java.lang.System.out.println(\"Command not know - available: showFile\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7922/buggy-version/kerberos.Server.java", "BodyUseAPI": [], "Fixed commit": "469e256e939c032119f90521969c237bd95e5757", "Url": "https://api.github.com/repos/Shivon/IT-Sicherheit-04", "Date": "2016-01-19T23:30:34Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.dataFile.exists())) { this.dataFile.createNewFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1665/buggy-version/src.me.itsatacoshop247.TreeAssist.blocklists.FlatFileBlockList.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "02619a7b27ae6aea052a82ea4b17e0f1e5d2b898", "Url": "https://api.github.com/repos/slipcor/TreeAssist", "Date": "2016-03-10T11:26:48Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["actorMessage.getRequest().get(JsonKey.PERIOD)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (\"5w\".equalsIgnoreCase(periodStr)) { java.util.Map<java.lang.String, java.lang.Object> dateMap = getStartAndEndDateForDay(periodStr); dateRangeFilter.put(org.sunbird.metrics.actors.LTE, ((java.lang.String) (dateMap.get(endDate)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7824/buggy-version/actors.src.main.java.org.sunbird.metrics.actors.CourseMetricsActor.java", "BodyUseAPI": ["org.sunbird.metrics.actors.CourseMetricsActor.getStartAndEndDateForDay(java.lang.String)"], "Fixed commit": "b1ea5e024e0607967d802b154a96e25470e1ec45", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2017-11-15T05:46:23Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.getMessage().contains(((\"column \" + (com.catchat.app.CatChatContentProvider.MESSAGE_PARSE_ID)) + \" is not unique\"))) { messageAlreadyInsertedException = true; }else { android.util.Log.e(\"CatChatProvider\", \"Exception whilst inserting\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/9022/buggy-version/app.src.main.java.com.catchat.app.CatChatContentProvider.java", "BodyUseAPI": ["android.util.Log.e(java.lang.String,java.lang.String,java.lang.Exception)"], "Fixed commit": "cb567e74d2f2ef1a6570e71af5a82e2a83660953", "Url": "https://api.github.com/repos/cat-chat/cat-chat-android", "Date": "2014-06-16T23:13:52Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"defaultKieSession\".equals(ksessionName)) { model.setKSessionName(null); }else { model.setKSessionName(ksessionName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4760/buggy-version/optaplanner-wb-screens.optaplanner-wb-solver-editor.optaplanner-wb-solver-editor-client.src.main.java.org.optaplanner.workbench.screens.solver.client.editor.ScoreDirectorFactoryForm.java", "BodyUseAPI": ["org.optaplanner.workbench.screens.solver.model.ScoreDirectorFactoryConfigModel.setKSessionName(java.lang.String)"], "Fixed commit": "70b847223ed105c2930f3d92b4baad74103a9b2e", "Url": "https://api.github.com/repos/Rikkola/optaplanner-wb", "Date": "2016-03-11T15:21:32Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (notEnterLoginPage) { mScreenService.show(org.doubango.imsdroid.Screens.ScreenFuncTest.class, \"FuncTest\"); notEnterLoginPage = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8118/buggy-version/src.org.doubango.imsdroid.Screens.ScreenXYZLogin.java", "BodyUseAPI": [], "Fixed commit": "8b631215f4bdc5b45735eed79d23abbf7e606dda", "Url": "https://api.github.com/repos/terryli0925/IMSdroid", "Date": "2015-04-07T08:40:06Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (tp == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7122/buggy-version/src.collate.TextPane.java", "BodyUseAPI": [], "Fixed commit": "b142cd1267b67d293890976148b66f80da94b311", "Url": "https://api.github.com/repos/supremeedible/collate", "Date": "2016-11-21T23:51:37Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(outputDir.isDirectory())) outputDir.mkdir();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7624/buggy-version/src.main.java.uk.ac.ebi.pamela.layoutpipeline.exec.PipelineExec.java", "BodyUseAPI": [], "Fixed commit": "dc63a89ffec98b0942f881e069de8bb12a962b00", "Url": "https://api.github.com/repos/pcm32/LayoutPipeline", "Date": "2013-06-20T15:18:43Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (id < ((TrackHandler.types.size()) - 1)) { te.type = TrackHandler.types.get((id + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4549/buggy-version/src.main.java.robomuss.rc.events.BlockClickedEvent.java", "BodyUseAPI": ["TrackHandler.types.get(int)"], "Fixed commit": "7fee1fc0b2c8cfd41428fdc7150acaca73109067", "Url": "https://api.github.com/repos/ModForgery/Rollercoaster", "Date": "2014-09-03T15:49:32Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Boolean.getBoolean(\"saturn.embeddedzk\")) { com.vip.saturn.job.console.springboot.SaturnConsoleApp.embeddedZookeeper = new org.apache.curator.test.TestingServer(2181); com.vip.saturn.job.console.springboot.SaturnConsoleApp.embeddedZookeeper.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2029/buggy-version/saturn-console.src.main.java.com.vip.saturn.job.console.springboot.SaturnConsoleApp.java", "BodyUseAPI": [], "Fixed commit": "b1cca327a1b14ff53a14efba829ef7ad93074980", "Url": "https://api.github.com/repos/vipshop/Saturn", "Date": "2017-07-18T04:19:31Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapterPosition < 0) || (adapterPosition >= (mNotes.size()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/676/buggy-version/app.src.main.java.roy.myclear.activity.NoteActivity.java", "BodyUseAPI": [], "Fixed commit": "eadf909262ee537959e982c43f1b88bdc5cdc910", "Url": "https://api.github.com/repos/luhongwu/POne", "Date": "2017-07-06T09:35:25Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapterPosition < 0) || (adapterPosition >= (mCategories.size()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/676/buggy-version/app.src.main.java.roy.myclear.activity.CategoryActivity.java", "BodyUseAPI": [], "Fixed commit": "eadf909262ee537959e982c43f1b88bdc5cdc910", "Url": "https://api.github.com/repos/luhongwu/POne", "Date": "2017-07-06T09:35:25Z"},
{"Line": "=>3187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sbml.jsbml.ASTNode.getChild(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((child.getType()) == (ASTNode.Type.REAL)) && ((child.getMantissa()) < 0)) { child.setValue((-(child.getMantissa()))); minus.addChild(child); }else { minus.addChild(child); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8299/buggy-version/extensions.arrays.src.org.sbml.jsbml.ext.arrays.compiler.VectorCompiler.java", "BodyUseAPI": ["org.sbml.jsbml.ASTNode.getMantissa()", "org.sbml.jsbml.ASTNode.addChild(org.sbml.jsbml.ASTNode)", "org.sbml.jsbml.ASTNode.setValue((-(child.getMantissa())))", "org.sbml.jsbml.ASTNode.addChild(org.sbml.jsbml.ASTNode)"], "Fixed commit": "00874cc610ae584219a575dc259e7dd34ff2c500", "Url": "https://api.github.com/repos/sbmlteam/jsbml", "Date": "2016-06-21T22:44:16Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.metaborg.core.language.ILanguageImpl.facet(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (baseFacet == null) { org.metaborg.spoofax.core.language.dialect.DialectProcessor.logger.debug((\"Active Stratego language implementation has no syntax facet, \" + \"Stratego dialects cannot be updated\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/741/buggy-version/org.metaborg.spoofax.core.src.main.java.org.metaborg.spoofax.core.language.dialect.DialectProcessor.java", "BodyUseAPI": [], "Fixed commit": "b0a7dbaf409f217df0507c8f695ff4e59e4e9e6b", "Url": "https://api.github.com/repos/metaborg/spoofax", "Date": "2016-06-15T12:13:41Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(txtDisplay.getText().contains(\".\"))) { txtDisplay.setText(((txtDisplay.getText()) + (btnComma.getText()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6915/buggy-version/Tutorials.AwesomeCalculator.src.jCalculator.JavaCalculator.java", "BodyUseAPI": ["javax.swing.JTextField.getText()", "javax.swing.JTextField.setText(java.lang.String)"], "Fixed commit": "98d7572c36749e07032c334195ce0927055a2a2a", "Url": "https://api.github.com/repos/TOENITG/13Te-William.Leven", "Date": "2014-11-05T11:22:19Z"},
{"Line": "=>479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"(\".equals(txtDisplay.getText().substring(((txtDisplay.getText().length()) - 1)))) { txtDisplay.setText(((txtDisplay.getText()) + \"(\")); }else if (((countSchar(txtDisplay.getText(), \")\".charAt(0))) + (countSchar(opDisplay.getText(), \")\".charAt(0)))) < ((countSchar(txtDisplay.getText(), \"(\".charAt(0))) + (countSchar(opDisplay.getText(), \"(\".charAt(0))))) { opDisplay.setText((((opDisplay.getText()) + (txtDisplay.getText())) + \")\")); txtDisplay.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6915/buggy-version/Tutorials.AwesomeCalculator.src.jCalculator.JavaCalculator.java", "BodyUseAPI": ["javax.swing.JTextField.setText(java.lang.String)", "javax.swing.JTextField.getText()", "javax.swing.JTextField.getText()", "javax.swing.JTextField.setText(java.lang.String)", "javax.swing.JTextField.setText(java.lang.String)", "javax.swing.JTextField.getText()", "jCalculator.JavaCalculator.countSchar(java.lang.String,char)", "jCalculator.JavaCalculator.countSchar(java.lang.String,char)", "javax.swing.JTextField.getText()"], "Fixed commit": "98d7572c36749e07032c334195ce0927055a2a2a", "Url": "https://api.github.com/repos/TOENITG/13Te-William.Leven", "Date": "2014-11-05T11:22:19Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i < 12) && ((guiTab) == 1)) { if (!(this.mergeItemStack(itemstack1, 12, this.inventorySlots.size(), true))) return null; }else { if ((!(barrel.getSealed())) && ((guiTab) == 1)) { if (!(this.mergeItemStack(itemstack1, 0, 12, false))) { return null; } }else if ((!(barrel.getSealed())) && ((guiTab) == 0)) { if (!(this.mergeItemStack(itemstack1, 0, 1, false))) { return null; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8621/buggy-version/src.Common.com.bioxx.tfc.Containers.ContainerBarrel.java", "BodyUseAPI": [], "Fixed commit": "fc52febf8a70d6766e79c0c39ba132d67832279b", "Url": "https://api.github.com/repos/Deadrik/TFCraft", "Date": "2014-10-08T18:55:39Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i < 9) && ((guiTab) == 1)) { if (!(this.mergeItemStack(itemstack1, 9, this.inventorySlots.size(), true))) return null; }else { if ((!(barrel.getSealed())) && ((guiTab) == 1)) { if (!(this.mergeItemStack(itemstack1, 0, 9, false))) { return null; } }else if ((!(barrel.getSealed())) && ((guiTab) == 0)) { if (!(this.mergeItemStack(itemstack1, 0, 1, false))) { return null; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8621/buggy-version/src.Common.com.bioxx.tfc.Containers.ContainerLargeVessel.java", "BodyUseAPI": [], "Fixed commit": "fc52febf8a70d6766e79c0c39ba132d67832279b", "Url": "https://api.github.com/repos/Deadrik/TFCraft", "Date": "2014-10-08T18:55:39Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.modelManager.getActiveOntology()) != null) update();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3149/buggy-version/src.main.java.org.swrltab.ui.SWRLTab.java", "BodyUseAPI": [], "Fixed commit": "1120610551e4f36ea43559cc927cfb8006ce6cb6", "Url": "https://api.github.com/repos/protegeproject/swrltab-plugin", "Date": "2014-08-28T21:14:39Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.modelManager.getActiveOntology()) != null) update();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3149/buggy-version/src.main.java.org.swrltab.ui.SQWRLTab.java", "BodyUseAPI": [], "Fixed commit": "1120610551e4f36ea43559cc927cfb8006ce6cb6", "Url": "https://api.github.com/repos/protegeproject/swrltab-plugin", "Date": "2014-08-28T21:14:39Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (ch.njol.skript.Skript.classExists(\"org.bukkit.event.player.PlayerInteractAtEvent\")) eventTypes = ch.njol.util.coll.CollectionUtils.array(org.bukkit.event.player.PlayerInteractEvent.class, org.bukkit.event.player.PlayerInteractEntityEvent.class, org.bukkit.event.player.PlayerArmorStandManipulateEvent.class);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5160/buggy-version/src.main.java.ch.njol.skript.events.EvtClick.java", "BodyUseAPI": [], "Fixed commit": "0001772b716fcc26d174055d09dcefef229b90e2", "Url": "https://api.github.com/repos/SkriptLang/Skript", "Date": "2016-08-11T15:02:52Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jivesoftware.smackx.jingle.transport.jingle_s5b.JingleS5BTransport.getTheirDstAddr()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dstAddr == null) { dstAddr = org.jivesoftware.smackx.bytestreams.socks5.Socks5Utils.createDigest(transport.getStreamId(), transport.getParent().getParent().getPeer(), transport.getParent().getParent().getOurJid()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5650/buggy-version/smack-extensions.src.main.java.org.jivesoftware.smackx.jingle.transport.jingle_s5b.JingleS5BTransportCandidate.java", "BodyUseAPI": [], "Fixed commit": "a9e80dc788907e41b298470dc1ae2c24e3ec5186", "Url": "https://api.github.com/repos/vanitasvitae/Smack", "Date": "2017-08-13T12:38:38Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ridges) != null) { drawGraph(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8914/buggy-version/app.src.main.java.com.shimastripe.gpsmountainview.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3961a5bd6a539f6c0e49e558c3ea893a65ab3b35", "Url": "https://api.github.com/repos/shimastripe/GPSMountainView", "Date": "2017-07-07T17:31:20Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date == null) { return removeProperty(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4119/buggy-version/sonar-plugin-api.src.main.java.org.sonar.api.config.Settings.java", "BodyUseAPI": [], "Fixed commit": "92f899b7f11ab6127f7333289a06e31f45eaa8e0", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2014-10-15T10:44:06Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"\".equals(card.getText()))) owner.removepatron(java.lang.Integer.parseInt(card.getText())); else java.lang.System.out.println(\"Empty field\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2936/buggy-version/src.patronpackage.RemovePatron.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "libarypackage.Libary.removepatron(int)", "javax.swing.JTextField.getText()"], "Fixed commit": "16c50d8392611b00e1805f46c61eee714b162195", "Url": "https://api.github.com/repos/rukeyscott/Library", "Date": "2015-04-19T19:24:47Z"}]}
