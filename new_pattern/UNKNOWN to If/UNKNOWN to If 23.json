{"UNKNOWN to If":[{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_logFileDos) != null) { _logFileDos.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5946/buggy-version/src.main.java.nl.dobots.bluenet.utils.FileLogger.java", "BodyUseAPI": [], "Fixed commit": "e30bdceb83bb2f3bd9f63cd9672763d5eafc0fb1", "Url": "https://api.github.com/repos/crownstone/bluenet-lib-android", "Date": "2017-04-06T07:42:23Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.phenotips.data.ConsentManager.getMissingConsentsForPatient(org.phenotips.data.Patient)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (containsRequiredConsents(missingConsents)) { return elements; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8325/buggy-version/components.consents.api.src.main.java.org.phenotips.consents.internal.DefaultConsentAuthorizer.java", "BodyUseAPI": [], "Fixed commit": "b1bbc420ac29cac5b890be0d39d20be836804f50", "Url": "https://api.github.com/repos/phenotips/phenotips", "Date": "2017-02-01T22:04:28Z"},
{"Line": "=>1199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((DeleteModel.getValueAt(i, 3)) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7534/buggy-version/src.RegistrationForm.java", "BodyUseAPI": [], "Fixed commit": "bf2250747d0cf3c5d04964d5916808752ecd7d8e", "Url": "https://api.github.com/repos/Lyubomira/ELUBankClient", "Date": "2014-02-09T15:42:52Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((debugRecipient) != null) debugRecipient.sendMessage(msg);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7066/buggy-version/src.main.java.org.mctourney.AutoReferee.AutoRefMatch.java", "BodyUseAPI": [], "Fixed commit": "41eeb9dfdce5ef061c10c68a9da4dae793857c1b", "Url": "https://api.github.com/repos/rmct/AutoReferee", "Date": "2012-09-12T16:38:54Z"},
{"Line": "=>496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((closeHourMorning != null) && (openHourMorning != null)) && (closeHourMorning.before(openHourMorning))) { closeHourMorning = es.usc.citius.servando.calendula.pharmacies.util.Utils.addDays(closeHourMorning, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5815/buggy-version/Calendula.src.main.java.es.usc.citius.servando.calendula.pharmacies.persistance.Pharmacy.java", "BodyUseAPI": ["es.usc.citius.servando.calendula.pharmacies.util.Utils.addDays(java.util.Date,int)"], "Fixed commit": "0e870225fe4a1a327e93f77cd3749ea6d85ba03f", "Url": "https://api.github.com/repos/isaaccf/calendula", "Date": "2017-01-03T16:34:18Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((closeHourAfternoon != null) && (openHourAfternoon != null)) && (closeHourAfternoon.before(openHourAfternoon))) { closeHourAfternoon = es.usc.citius.servando.calendula.pharmacies.util.Utils.addDays(closeHourAfternoon, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5815/buggy-version/Calendula.src.main.java.es.usc.citius.servando.calendula.pharmacies.persistance.Pharmacy.java", "BodyUseAPI": ["es.usc.citius.servando.calendula.pharmacies.util.Utils.addDays(java.util.Date,int)"], "Fixed commit": "0e870225fe4a1a327e93f77cd3749ea6d85ba03f", "Url": "https://api.github.com/repos/isaaccf/calendula", "Date": "2017-01-03T16:34:18Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pos != (part.length())) { java.lang.String original = part.substring(pos); java.lang.String encoded = java.net.URLEncoder.encode(original, io.undertow.server.handlers.proxy.ProxyHandler.UTF_8); if (!(encoded.equals(original))) { return io.undertow.server.handlers.proxy.ProxyHandler.realEncode(part, pos); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5017/buggy-version/core.src.main.java.io.undertow.server.handlers.proxy.ProxyHandler.java", "BodyUseAPI": ["java.lang.String.substring(int)", "io.undertow.server.handlers.proxy.ProxyHandler.realEncode(java.lang.String,int)"], "Fixed commit": "3ebe5926390ae548534b15dd0dd81d15e2dd3144", "Url": "https://api.github.com/repos/golovnin/undertow", "Date": "2014-04-30T22:03:10Z"},
{"Line": "=>570", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["session.getDeck().getDeckName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (deckName.equals(edu.wpi.cs.wpisuitetcw.modules.planningpoker.view.session.EditSessionPanel.DEFAULT_DECK)) { displayDefaultDeck(); }else { try { displayDeck(deckName); deckType.setSelectedItem(deckName); } catch (edu.wpi.cs.wpisuitetng.exceptions.WPISuiteException e) { java.util.logging.Logger.getLogger(\"EditSessionPanel\").log(java.util.logging.Level.INFO, \"Could not load the deck with the given name\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5638/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetcw.modules.planningpoker.view.session.EditSessionPanel.java", "BodyUseAPI": ["javax.swing.JComboBox<java.lang.String>.setSelectedItem(java.lang.String)", "edu.wpi.cs.wpisuitetcw.modules.planningpoker.view.session.EditSessionPanel.displayDeck(java.lang.String)"], "Fixed commit": "97a84d3575146ad36f26b4d13ce2cee901cb756e", "Url": "https://api.github.com/repos/Team-Combat-Wombat/wpi-suite-tcw", "Date": "2014-05-04T21:24:43Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((null == val) || (val.isEmpty())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7668/buggy-version/onepiecex-session-share-core.src.main.java.com.github.onepiecex.session.share.core.HttpSessionImpl.java", "BodyUseAPI": [], "Fixed commit": "c17063c058603061611f59afa436c1b56e69a315", "Url": "https://api.github.com/repos/onepiecex/session-share", "Date": "2017-07-04T10:11:36Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2312/buggy-version/osgp-adapter-ws-core.src.main.java.com.alliander.osgp.adapter.ws.core.application.mapping.DeviceManagementMapper.java", "BodyUseAPI": [], "Fixed commit": "36d8eef582ad1f5fe2c6f656ce1045a26abca61c", "Url": "https://api.github.com/repos/OSGP/Platform", "Date": "2017-08-22T08:14:23Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (joinType == 0) { match = length + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1209/buggy-version/JoinUp.java", "BodyUseAPI": [], "Fixed commit": "c857bb822c04fdd395e1332c8749bef082d9b4b6", "Url": "https://api.github.com/repos/thoda061/JoinWords", "Date": "2017-10-12T07:22:07Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tgtbinary.exists())) { tgtbinary.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2526/buggy-version/src.main.java.com.gp.storage.DiskBinaryAccessor.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "09cf9a7fc7777fa0c62559d4f44bd0e6fe68b39b", "Url": "https://api.github.com/repos/despird-zh/gp.svc", "Date": "2016-05-16T04:05:00Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getAbsolutePath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((path.indexOf(0)) == 'C') { java.io.File file = new java.io.File(\"C:\\\\Users\\\\LCLY\\\\Desktop\\\\Dungeon\\\\dungeon-coder\\\\game\\\\core\\\\src\\\\com\\\\mygdx\\\\dungeoncoder\\\\screens\\\\StageTwo.java\"); }else { java.io.File file = new java.io.File(\"C:\\\\Users\\\\LCLY\\\\Desktop\\\\Dungeon\\\\dungeon-coder\\\\game\\\\core\\\\src\\\\com\\\\mygdx\\\\dungeoncoder\\\\screens\\\\StageTwo.java\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3118/buggy-version/game.core.src.com.mygdx.dungeoncoder.screens.TaskTwo.java", "BodyUseAPI": [], "Fixed commit": "ebdd4a02f4fbdf45529659556309a3fde2a61a16", "Url": "https://api.github.com/repos/ryanteo96/dungeon-coder", "Date": "2017-11-19T04:28:22Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Sets.newIdentityHashSet()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (processed.add(listener)) { this.unregister(listener); }else { sk.stuba.fiit.perconik.core.Resource.class.cast(resource).unregister(listener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7608/buggy-version/sk.stuba.fiit.perconik.core.src.sk.stuba.fiit.perconik.core.services.listeners.StandardListenerManager.java", "BodyUseAPI": ["sk.stuba.fiit.perconik.core.services.listeners.StandardListenerManager.unregister(L)", "sk.stuba.fiit.perconik.core.Resource.unregister(L)"], "Fixed commit": "76906565df84cf859c7e0b1d79494416ab56f1e8", "Url": "https://api.github.com/repos/perconik/perconik", "Date": "2013-11-03T22:09:27Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(storageAccountType)) { storageAccountType = SkuName.STANDARD_LRS.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4624/buggy-version/src.main.java.com.microsoft.azure.vmagent.AzureVMAgentTemplate.java", "BodyUseAPI": [], "Fixed commit": "ebc7f86b6136ad316b23373106cb2af819980ebd", "Url": "https://api.github.com/repos/ArchangelSDY/azure-vm-agents-plugin", "Date": "2017-06-08T04:03:50Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (v == (mLogoutButton)) { logout(); }else if (v == (mPreviousPage)) { android.content.Intent intent = new android.content.Intent(this, com.example.guest.daughtersofeve.ui.MainActivity.class); startActivity(intent); }else if (v == (mAddEventButton)) { android.content.Intent intent = new android.content.Intent(this, com.example.guest.daughtersofeve.ui.AdminActivity.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/629/buggy-version/app.src.main.java.com.example.guest.daughtersofeve.ui.EventsActivity.java", "BodyUseAPI": [], "Fixed commit": "8cb6f80e6809fb3421fcdeedd82c2d5e557f5ca9", "Url": "https://api.github.com/repos/5adiyah/DoeApp", "Date": "2016-07-22T19:39:05Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node.has(\"timestamp\")) timeStamp = node.path(\"timestamp\").asLong(); else timeStamp = java.lang.System.currentTimeMillis();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6376/buggy-version/app.californium.CaliforniumServer.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.JsonNode.path(java.lang.String)", "node.path(\"timestamp\").asLong()"], "Fixed commit": "3efdeea0fd05a8f0ecc804d851a1b83a440abd4f", "Url": "https://api.github.com/repos/BrunoAgrizzi/sensor-mashup", "Date": "2015-12-05T00:37:11Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dianping.avatar.dao.DAOMethod.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (method.equals(\"restoreApolloShopByShopID\")) return createOpenShopLog(joinPoint, ((java.lang.Integer) (params.get(\"shopID\"))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2147/buggy-version/rotate-shop-biz.src.main.java.com.dianping.rotate.shop.aop.ShopLogAspect.java", "BodyUseAPI": [], "Fixed commit": "c81fa5227c8913acdb7fb50f5e0a3dada2fe2c08", "Url": "https://api.github.com/repos/arnoldwang/rotate-shop", "Date": "2015-03-23T07:36:27Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Title.getText().length()) > 64) { alertMessage.setText(\"Title length too large.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2598/buggy-version/src.java.userinterface.AddBookViewController.java", "BodyUseAPI": [], "Fixed commit": "23fb8302b27c69dc7e83de4f43ec03868d58663b", "Url": "https://api.github.com/repos/emadi1/429-Squad-2", "Date": "2017-03-30T21:30:17Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.method.equals(HttpMethod.HTTP_GET)) { byte[] data = formUrlEncodedParser.parse(httpParameters); if (null != data) { url += \"?\" + (new java.lang.String(data)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7342/buggy-version/library.src.main.java.org.gemini.httpengine.library.GMHttpRequest.java", "BodyUseAPI": [], "Fixed commit": "203d1ee3ed0591576f0d38c41408e66d879e3422", "Url": "https://api.github.com/repos/MyLifeForTheOrc/gm-httpengine-studio", "Date": "2015-08-24T09:35:57Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.fabric8.maven.enricher.fabric8.IconEnricher.getConfig(io.fabric8.maven.enricher.fabric8.IconEnricher.Config)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (io.fabric8.utils.Strings.isNullOrBlank(iconRef)) { iconRef = getDefaultIconRef(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7240/buggy-version/enricher.fabric8.src.main.java.io.fabric8.maven.enricher.fabric8.IconEnricher.java", "BodyUseAPI": [], "Fixed commit": "a4953ac155039bb8e382473e049cc720e9ecfa43", "Url": "https://api.github.com/repos/lholmquist/fabric8-maven-plugin", "Date": "2017-05-15T08:06:03Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (choice == 3) { java.lang.System.out.println((\"API documentation: push(T item)\\n\" + ((\"pop()\\npeek()\\npopAt(int stackNum)\\n\\n\" + \"Please enter commands you'd like to use (type of Stack will \") + \"be String for ease)\\n. Type \\\"exit\\\" to exit\\n\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3931/buggy-version/src.ChapterThree.ChapterThree.java", "BodyUseAPI": [], "Fixed commit": "cd380a7933e04c58647815f11b1bf17c9e9f52cc", "Url": "https://api.github.com/repos/TurnipEntropy/Cracking-the-Coding-Interview-Exercises", "Date": "2017-05-07T00:36:31Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isOnline())) { android.util.Log.e(TAG, \"No internet connection!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7447/buggy-version/app.src.main.java.de.micmun.android.miwotreff.service.UpdateIntentService.java", "BodyUseAPI": [], "Fixed commit": "d71f28f71d5f245ffc3c1f1d5d87bf7182f3c881", "Url": "https://api.github.com/repos/MicMun/MiWoTreff", "Date": "2016-02-21T15:59:40Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Error.class.isAssignableFrom(type.getTargetClass())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/815/buggy-version/agent.src.main.java.org.jboss.byteman.rule.expression.ThrowExpression.java", "BodyUseAPI": [], "Fixed commit": "d667183d2097905dff99fc49e113c7977f011a05", "Url": "https://api.github.com/repos/bytemanproject/byteman", "Date": "2011-11-23T16:31:28Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAutonCommand) != null) { mAutonCommand.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1845/buggy-version/snobot2015.src.com.snobot.Snobot.java", "BodyUseAPI": [], "Fixed commit": "71021315b9d2bb1e0a5d154a2093a44fd215c8a6", "Url": "https://api.github.com/repos/ArcticWarriors/snobot-2015", "Date": "2015-02-06T00:18:51Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAutonCommand) != null) { mAutonCommand.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1845/buggy-version/snobot2015.src.com.snobot.Snobot.java", "BodyUseAPI": [], "Fixed commit": "71021315b9d2bb1e0a5d154a2093a44fd215c8a6", "Url": "https://api.github.com/repos/ArcticWarriors/snobot-2015", "Date": "2015-02-06T00:18:51Z"},
{"Line": "=>653", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (namedRelationClass == null) { for (java.lang.Class interfaceClass : org.structr.core.EntityContext.getInterfacesForType(destSuperClass)) { namedRelationClass = org.structr.core.EntityContext.globalRelationshipClassMap.get(org.structr.core.EntityContext.createCombinedRelationshipType(sourceSuperClass, relType, interfaceClass)); if (namedRelationClass != null) { break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7376/buggy-version/structr.structr-core.src.main.java.org.structr.core.EntityContext.java", "BodyUseAPI": [], "Fixed commit": "763acfad9ff4f17e4cc530c32cc3e077299f293c", "Url": "https://api.github.com/repos/structr/structr", "Date": "2012-06-13T10:56:04Z"},
{"Line": "=>591", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (controlState(stackedPane)) { _errorDecoration.hide(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/9130/buggy-version/entirej-rwt.src.org.entirej.applicationframework.rwt.renderers.item.EJRWTStackedItemRenderer.java", "BodyUseAPI": [], "Fixed commit": "b14a0b1cc749505f77c30dcd9bb482745cb8a21f", "Url": "https://api.github.com/repos/entirej/rap", "Date": "2015-07-31T09:28:08Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((models.Member.findByLogin(login)) != null) { flash.error(\"Ce login est d\u00e9j\u00e0 utilis\u00e9\"); render(login, password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7413/buggy-version/app.controllers.Login.java", "BodyUseAPI": ["controllers.Login.render(java.lang.String,java.lang.String)"], "Fixed commit": "7ae43257af4d9b37355c70fa42951bad15258d9f", "Url": "https://api.github.com/repos/cexbrayat/linkit", "Date": "2011-12-01T21:34:14Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(potentialPolygon.isEmpty())) { com.badlogic.gdx.math.Vector2 temp = potentialPolygon.get(0); potentialPolygon.clear(); potentialPolygon.add(temp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2011/buggy-version/core.src.com.mygdx.game.GameScreen.java", "BodyUseAPI": ["java.util.ArrayList<com.badlogic.gdx.math.Vector2>.add(com.badlogic.gdx.math.Vector2)", "java.util.ArrayList<com.badlogic.gdx.math.Vector2>.get(int)", "java.util.ArrayList<com.badlogic.gdx.math.Vector2>.clear()"], "Fixed commit": "db3b9981ec89754d64d091e29f7587dd4889f6d3", "Url": "https://api.github.com/repos/2015-HHSS-ICS4UI-01/finalproject-whohasthetalkingball", "Date": "2016-01-22T18:53:21Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < 16) { getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN); }else { android.view.View decorView = getWindow().getDecorView(); int uiOptions = android.view.View.SYSTEM_UI_FLAG_FULLSCREEN; decorView.setSystemUiVisibility(uiOptions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7071/buggy-version/src.main.java.net.atomarea.flowx.ui.ShowFullscreenMessageActivity.java", "BodyUseAPI": [], "Fixed commit": "4195c03debc33af90cf87d01d1505e3c307b136e", "Url": "https://api.github.com/repos/atomarea/FlowX", "Date": "2016-06-29T13:35:13Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yotouch.core.entity.Entity.v(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(org.springframework.util.StringUtils.isEmpty(companyUuid))) { map.put(\"company\", companyUuid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2710/buggy-version/src.main.java.com.yotouch.base.web.controller.BaseController.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)"], "Fixed commit": "3707098911287c0d82cddf137ca885bfa8c4d9eb", "Url": "https://api.github.com/repos/yotouch/pylon", "Date": "2017-12-08T16:16:13Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!checkNormalizedName) return subClasses;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3369/buggy-version/cam-service.src.main.java.it.eng.cam.rest.CAMRestImpl.java", "BodyUseAPI": [], "Fixed commit": "2ca192b2365eb70635b924ace92f1ad131df9efc", "Url": "https://api.github.com/repos/BEinCPPS/fitman-cam", "Date": "2016-07-04T11:05:25Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((extras.getIntegerArrayList(\"notificationRepeat\")) != null) repeatList = extras.getIntegerArrayList(\"notificationRepeat\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8809/buggy-version/src.src.com.example.tson.CreateNotificationActivity.java", "BodyUseAPI": ["android.os.Bundle.getIntegerArrayList(java.lang.String)"], "Fixed commit": "e42cac25c7f359477e323f4274e071f24a0d4ac2", "Url": "https://api.github.com/repos/Magrit/miniature-ninja-agile-awesomeness", "Date": "2014-05-13T11:48:43Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((a == null) || (b == null)) { return r; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5685/buggy-version/src.pattern.impl.AdapterDetector.java", "BodyUseAPI": [], "Fixed commit": "2679516ef0266d0a109905b683110aed9795e929", "Url": "https://api.github.com/repos/xxyicy/SoftwareDevelopmentCourseProject", "Date": "2016-01-28T18:11:53Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (server != null) { setAllowLinkStealing(server.isAllowLinkStealing()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3175/buggy-version/activemq-broker.src.main.java.org.apache.activemq.broker.TransportConnector.java", "BodyUseAPI": [], "Fixed commit": "47d198513915532e1e8a3bcb0f9a6f98f5a794dd", "Url": "https://api.github.com/repos/apache/activemq", "Date": "2013-11-12T08:08:07Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pinthecloud.athere.helper.CachedBlobStorageHelper.BitmapWorkerTask.downloadBitmapSync(com.pinthecloud.athere.fragment.AhFragment,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (bitmap == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5993/buggy-version/src.com.pinthecloud.athere.helper.CachedBlobStorageHelper.java", "BodyUseAPI": [], "Fixed commit": "54987a3eeb564fe84a3a40131f3428aeb3e673e8", "Url": "https://api.github.com/repos/hongkunyoo/athere-android", "Date": "2014-09-07T16:19:42Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (bm == null) throw new com.pinthecloud.athere.exception.AhException(\"HERE!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5993/buggy-version/src.com.pinthecloud.athere.helper.BlobStorageHelper.java", "BodyUseAPI": [], "Fixed commit": "54987a3eeb564fe84a3a40131f3428aeb3e673e8", "Url": "https://api.github.com/repos/hongkunyoo/athere-android", "Date": "2014-09-07T16:19:42Z"},
{"Line": "=>487", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(<nulltype>,java.lang.String,java.lang.String,int,<nulltype>,<nulltype>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (s != null) { java.io.Writer output = new java.io.BufferedWriter(new java.io.FileWriter(\"scores.txt\", true)); output.append(line); output.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2397/buggy-version/src.classes.Game.java", "BodyUseAPI": [], "Fixed commit": "0a993f5d593ce501790294765c69ba6529fa90d0", "Url": "https://api.github.com/repos/pizzaboy314/342Minesweeper", "Date": "2014-03-15T03:43:47Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (failure) { throw new com.laytonsmith.core.exceptions.ConfigRuntimeException((\"You are attempting to use\" + ((\" an economy function, and your economy setup is not valid.\" + \" Please install Vault and an Economy plugin before attempting\") + \" to use any of the Economy functions.\")), com.laytonsmith.core.functions.Exceptions.ExceptionType.InvalidPluginException, Target.UNKNOWN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6997/buggy-version/src.main.java.com.laytonsmith.core.functions.Economy.java", "BodyUseAPI": [], "Fixed commit": "33fb65d8e4210d2255eb7dfe48dd1959ff20daf7", "Url": "https://api.github.com/repos/sk89q/commandhelper", "Date": "2012-07-10T05:54:13Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sqltonosql.SqlToNosql.isInteger(nextLine[i])) { if (i == (sizeOfArray - 1)) { temp = (((temp + \"\\\"\") + (colomLines[i])) + \"\\\":\") + (nextLine[i]); }else { temp = ((((temp + \"\\\"\") + (colomLines[i])) + \"\\\":\") + (nextLine[i])) + \",\"; } }else { if (i == (sizeOfArray - 1)) { temp = ((((temp + \"\\\"\") + (colomLines[i])) + \"\\\":\\\"\") + (nextLine[i])) + \"\\\"\"; }else { temp = ((((temp + \"\\\"\") + (colomLines[i])) + \"\\\":\\\"\") + (nextLine[i])) + \"\\\",\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3544/buggy-version/src.sqltonosql.SqlToNosql.java", "BodyUseAPI": [], "Fixed commit": "cd23c4efd0751d2edfd5c13ef08bfb589527c785", "Url": "https://api.github.com/repos/michelj90/sqlToNosql", "Date": "2013-11-06T18:50:17Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (user.containsKey(\"username\")) newUser.username = user.getString(\"username\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8124/buggy-version/src.telegram.TeleBot.java", "BodyUseAPI": ["javax.json.JsonObject.getString(java.lang.String)"], "Fixed commit": "858f504ff396a8f3bae57aced3d2834e8feefcb8", "Url": "https://api.github.com/repos/AndreaLu/JTeXBoT", "Date": "2016-05-08T16:30:34Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (user.containsKey(\"first_name\")) newUser.firstName = user.getString(\"first_name\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8124/buggy-version/src.telegram.TeleBot.java", "BodyUseAPI": ["javax.json.JsonObject.getString(java.lang.String)"], "Fixed commit": "858f504ff396a8f3bae57aced3d2834e8feefcb8", "Url": "https://api.github.com/repos/AndreaLu/JTeXBoT", "Date": "2016-05-08T16:30:34Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (user.containsKey(\"last_name\")) newUser.lastName = user.getString(\"last_name\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8124/buggy-version/src.telegram.TeleBot.java", "BodyUseAPI": ["javax.json.JsonObject.getString(java.lang.String)"], "Fixed commit": "858f504ff396a8f3bae57aced3d2834e8feefcb8", "Url": "https://api.github.com/repos/AndreaLu/JTeXBoT", "Date": "2016-05-08T16:30:34Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.world.getBlockState(new net.minecraft.util.math.BlockPos(this.posX, ((this.posY) - 1), this.posZ)).getBlock()) == (net.minecraft.init.Blocks.FARMLAND)) || ((this.world.getBlockState(new net.minecraft.util.math.BlockPos(this.posX, ((this.posY) - 1), this.posZ)).getBlock()) == (net.minecraft.init.Blocks.SOUL_SAND))) { this.onGround = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5085/buggy-version/src.main.java.com.projectreddog.machinemod.entity.EntityMachineModRideable.java", "BodyUseAPI": [], "Fixed commit": "3318a1e61d77dd73b60a854a2ed67ea799084969", "Url": "https://api.github.com/repos/TechStack/TechStack-s-HeavyMachineryMod", "Date": "2017-12-19T00:24:50Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (cWorkout.moveToLast()) { int lastWorkoutID = cWorkout.getInt(0); android.database.Cursor cWorkoutPoint = db.rawQuery((((\"SELECT * FROM \" + (com.website.alphafitness.DataHelper.TABLE_WORKOUT_POINT)) + \" WHERE WORKOUT_ID = \") + lastWorkoutID), null); cWorkoutPoint.moveToFirst(); for (int i = 0; i < (cWorkoutPoint.getCount()); i++) { cWorkoutPoint.moveToPosition(i); result.add(new com.google.android.gms.maps.model.LatLng(cWorkoutPoint.getDouble(2), cWorkoutPoint.getDouble(3))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4731/buggy-version/app.src.main.java.com.website.alphafitness.DataHelper.java", "BodyUseAPI": ["android.database.Cursor.getInt(int)"], "Fixed commit": "9700e28d88cd7cbedf6c8ce82b38b999e6efa3e7", "Url": "https://api.github.com/repos/jayashree238/AlphaFitness---Android-App", "Date": "2016-11-28T00:51:38Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.org.rockthehalo.intermud3.LPC.LPCString.toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (this.channelToAlias.containsKey(chan)) chan = this.channelToAlias.get(chan);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1570/buggy-version/src.uk.org.rockthehalo.intermud3.services.I3Channel.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "674564f61e45930dcd85b4d2f6a908aa87c543d3", "Url": "https://api.github.com/repos/Tricky1702/I3Bukkit", "Date": "2014-04-06T19:12:11Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.org.rockthehalo.intermud3.LPC.LPCString.toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (this.channelToAlias.containsKey(chan)) chan = this.channelToAlias.get(chan);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1570/buggy-version/src.uk.org.rockthehalo.intermud3.services.I3Channel.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "674564f61e45930dcd85b4d2f6a908aa87c543d3", "Url": "https://api.github.com/repos/Tricky1702/I3Bukkit", "Date": "2014-04-06T19:12:11Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.org.rockthehalo.intermud3.services.Services.getService(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((service.getAliases().containsKey(chan)) && (!(service.getAliases().containsValue(chan)))) chan = service.getAliases().get(chan);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1570/buggy-version/src.uk.org.rockthehalo.intermud3.I3Command.java", "BodyUseAPI": ["service.getAliases().get(java.lang.String)", "uk.org.rockthehalo.intermud3.services.I3Channel.getAliases()"], "Fixed commit": "674564f61e45930dcd85b4d2f6a908aa87c543d3", "Url": "https://api.github.com/repos/Tricky1702/I3Bukkit", "Date": "2014-04-06T19:12:11Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.org.rockthehalo.intermud3.services.Services.getService(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((service.getAliases().containsKey(chan)) && (!(service.getAliases().containsValue(chan)))) chan = service.getAliases().get(chan);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1570/buggy-version/src.uk.org.rockthehalo.intermud3.I3Command.java", "BodyUseAPI": ["uk.org.rockthehalo.intermud3.services.I3Channel.getAliases()", "service.getAliases().get(java.lang.String)"], "Fixed commit": "674564f61e45930dcd85b4d2f6a908aa87c543d3", "Url": "https://api.github.com/repos/Tricky1702/I3Bukkit", "Date": "2014-04-06T19:12:11Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((split.length) > 0) { java.lang.String host = split[0]; for (int i = 0; i < (split.length); i++) { for (int j = 0; j < (split.length); j++) { for (int h = 0; h < (split.length); h++) { if ((((i != j) && (j != h)) && (i != h)) && ((((split[i]) == host) || ((split[j]) == host)) || ((split[h]) == host))) { word.set(((((((\"<\" + (split[i])) + \",\") + (split[j])) + \",\") + (split[h])) + \">\")); output.collect(word, TriangleCount.Map.one); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/86/buggy-version/source.java.TriangleCount.java", "BodyUseAPI": ["Text.set(java.lang.String)"], "Fixed commit": "972082a1303f51848a3264edba40e6833d1a8519", "Url": "https://api.github.com/repos/ncarey/Hadoop-Triangles", "Date": "2014-04-03T23:02:51Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.TigersIter2.managers.Avatar.getWeaponType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (weaponType.equals(\"Staff\")) { if ((inRadialRange(npc, \"none\")) == 0) { observed = attackEnemy(npc); observed += error; com.TigersIter2.views.MessageView.addMessage((\"-\" + (java.lang.Integer.toString(observed))), npc.getPixelLocation().getX(), npc.getPixelLocation().getY()); } }else { observed = attackEnemy(npc); observed += error; com.TigersIter2.views.MessageView.addMessage((\"-\" + (java.lang.Integer.toString(observed))), npc.getPixelLocation().getX(), npc.getPixelLocation().getY()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5161/buggy-version/src.com.TigersIter2.managers.AvatarNPCInteract.java", "BodyUseAPI": [], "Fixed commit": "fc3e65ff645861fa3a372185173c9fc14b370681", "Url": "https://api.github.com/repos/OOP-Team-Project/RPG-Iteration-2", "Date": "2016-03-13T20:53:01Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.waypoints) != null) { for (Destination d : this.waypoints) { if (!(route.contains(d))) return poll(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1057/buggy-version/src.RouteQueue.java", "BodyUseAPI": [], "Fixed commit": "200791a77b3a048c0ce88e5410dca831de5b20c6", "Url": "https://api.github.com/repos/mehlda/FinalProjectCSSE230", "Date": "2016-02-20T01:54:58Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.usf.cutr.gtfsrtvalidator.api.resource.GtfsFeed.downloadGtfsFeed(java.lang.String,java.net.HttpURLConnection)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (response == (Response.Status.FORBIDDEN)) { return generateError(\"SSL Handshake Failed\", \"SSL handshake failed. Try installing the JCE Extension - see https://github.com/CUTR-at-USF/gtfs-realtime-validator#prerequisites\", Response.Status.FORBIDDEN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4707/buggy-version/src.main.java.edu.usf.cutr.gtfsrtvalidator.api.resource.GtfsFeed.java", "BodyUseAPI": [], "Fixed commit": "6fc2e839652855624cdf28651164eecbd5c199d9", "Url": "https://api.github.com/repos/mohangandhiGH/gtfs-realtime-validator", "Date": "2017-04-04T07:00:56Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (styles.get(\"type\").equals(\"\")) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5295/buggy-version/AsianDomination.src.utils.ClassStyle.java", "BodyUseAPI": [], "Fixed commit": "e1590925cc4d1f059da4ea0c3bae39296348f376", "Url": "https://api.github.com/repos/ctrokid/AsianDomination-CSSE374", "Date": "2016-02-16T03:52:48Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_parent) != null) { _parent.removeAllInstances(this); _parent = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6563/buggy-version/Main.StatementInstance.java", "BodyUseAPI": [], "Fixed commit": "6b4e982d55309054502b2f3580607792267dfc80", "Url": "https://api.github.com/repos/Tape/Monsterismus", "Date": "2012-08-04T22:22:29Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ($parent != null) { _parent = $parent; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6563/buggy-version/Main.StatementInstance.java", "BodyUseAPI": [], "Fixed commit": "6b4e982d55309054502b2f3580607792267dfc80", "Url": "https://api.github.com/repos/Tape/Monsterismus", "Date": "2012-08-04T22:22:29Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["StatementInstance.instanceUnder(float,float)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((nested != null) && (nested instanceof Nestable)) { Nestable nestable = ((Nestable) (nested)); nestable.addChild(_instance); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6563/buggy-version/Main.Editor.java", "BodyUseAPI": [], "Fixed commit": "6b4e982d55309054502b2f3580607792267dfc80", "Url": "https://api.github.com/repos/Tape/Monsterismus", "Date": "2012-08-04T22:22:29Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["exnihiloadscensio.util.ItemInfo.getItemInfoFromStack(net.minecraft.item.ItemStack)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((exnihiloadscensio.registries.CompostRegistry.containsItem(info)) && ((compostState) == null)) { compostState = testState; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/136/buggy-version/src.main.java.exnihiloadscensio.barrel.modes.compost.BarrelModeCompost.java", "BodyUseAPI": [], "Fixed commit": "77dcc4034ff7e5875a32680ae99416fa26ddf594", "Url": "https://api.github.com/repos/MikeLydeamore/ExNihiloAdscensio", "Date": "2016-04-28T02:39:24Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.enosh.itchatService.service.NoteService.createNote(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (succeed) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5806/buggy-version/src.main.java.com.enosh.itchatService.dispatcher.KeyToMethodDispatch.java", "BodyUseAPI": [], "Fixed commit": "fe276001ef8276d8201abe17bdd1609e70b1c07d", "Url": "https://api.github.com/repos/huangyaosi/itchatService", "Date": "2017-09-06T08:32:46Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isBoxedType(ptype.toString())) { int dotPos = ptype.toString().lastIndexOf(\".\"); java.lang.String primitiveType = ptype.toString(); if (dotPos > 0) { primitiveType = primitiveType.substring((dotPos + 1)); } stmtArgs.add(((primitiveType.toUpperCase()) + \"_OBJECT\")); }else { javax.lang.model.element.TypeElement te = ((javax.lang.model.element.TypeElement) (((javax.lang.model.type.DeclaredType) (ptype)).asElement())); if (\"WebServiceContext\".equals(te.getSimpleName())) { stmtArgs.add(\"INT\"); }else if (\"java.lang.String\".equals(te.getQualifiedName().toString())) { stmtArgs.add(\"STRING\"); }else if (isBoxedType(te.getQualifiedName().toString())) { stmtArgs.add(((te.getSimpleName().toString().toUpperCase()) + \"_OBJECT\")); }else { stmtArgs.add(\"EXTERNALIABLE\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/304/buggy-version/CodenameOneServerAnnotationsMaven.src.main.java.com.codename1.ws.annotations.processor.ProxyClass.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(java.lang.String)", "javax.lang.model.type.TypeMirror.toString()", "javax.lang.model.type.TypeMirror.toString()"], "Fixed commit": "b0caa57fd22575f0dcace66a36343456c3b9d2ef", "Url": "https://api.github.com/repos/shannah/CN1RPC", "Date": "2016-11-03T16:22:46Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(selection.isEmpty())) { startActionMode(); onItemSelectedStateChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5121/buggy-version/library.src.com.manuelpeinado.multichoiceadapter.MultiChoiceAdapterHelper.java", "BodyUseAPI": [], "Fixed commit": "e18361fc5b97f619b22bdb96754b9ce849ced35a", "Url": "https://api.github.com/repos/ManuelPeinado/MultiChoiceAdapter", "Date": "2013-04-18T19:51:28Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startColumn < 0) { startColumn = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1450/buggy-version/src.Server.ServerWorld.java", "BodyUseAPI": [], "Fixed commit": "e097b4dee7fc03c33b62d437af1a3e58921e589e", "Url": "https://api.github.com/repos/Williamxu98/WorldQuestOnline", "Date": "2016-01-04T00:55:56Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startRow < 0) { startRow = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1450/buggy-version/src.Server.ServerWorld.java", "BodyUseAPI": [], "Fixed commit": "e097b4dee7fc03c33b62d437af1a3e58921e589e", "Url": "https://api.github.com/repos/Williamxu98/WorldQuestOnline", "Date": "2016-01-04T00:55:56Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPrefix()) != null) { path = (getPrefix().endsWith(java.lang.String.valueOf(java.io.File.separatorChar))) ? getPrefix() : (getPrefix()) + (java.io.File.separatorChar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/121/buggy-version/src.main.java.com.mitchellbosecke.pebble.loader.PebbleDefaultLoader.java", "BodyUseAPI": [], "Fixed commit": "51decc030ecd8705c5b2267c61380a23553f2aea", "Url": "https://api.github.com/repos/mbosecke/pebble", "Date": "2013-12-28T04:50:48Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["femr.data.daos.IRepository<femr.common.models.IPatient>.findAll(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((patients.size()) > 0) { response.setResponseObject(patients); }else { response.addError(\"patients\", \"No patients available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8680/buggy-version/app.femr.business.services.ResearchService.java", "BodyUseAPI": ["femr.business.dtos.ServiceResponse<java.util.List<? extends femr.common.models.IPatient>>.setResponseObject(java.util.List<? extends femr.common.models.IPatient>)"], "Fixed commit": "250dd9f6cc8e3921517b3362422c97bb3fad4313", "Url": "https://api.github.com/repos/codeitandloadit/femr", "Date": "2014-03-09T04:02:22Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.mail.park.database.kgulyy.domains.User.getEmail()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (updatedEmail != null) user.setEmail(updatedEmail);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1965/buggy-version/src.main.java.ru.mail.park.database.kgulyy.controllers.UserController.java", "BodyUseAPI": ["ru.mail.park.database.kgulyy.domains.User.setEmail(java.lang.String)"], "Fixed commit": "da32e42cbb8098908a8e74eb8ea201d8dfdbac78", "Url": "https://api.github.com/repos/kgulyy/database-forum-api", "Date": "2017-10-13T11:02:33Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.mail.park.database.kgulyy.domains.User.getEmail()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (userService.isExistOtherWithSameEmail(nickname, updatedEmail)) { return org.springframework.http.ResponseEntity.status(HttpStatus.CONFLICT).body(ru.mail.park.database.kgulyy.controllers.NEW_USER_PROFILE_CONFLICT.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1965/buggy-version/src.main.java.ru.mail.park.database.kgulyy.controllers.UserController.java", "BodyUseAPI": [], "Fixed commit": "da32e42cbb8098908a8e74eb8ea201d8dfdbac78", "Url": "https://api.github.com/repos/kgulyy/database-forum-api", "Date": "2017-10-13T11:02:33Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.mail.park.database.kgulyy.domains.User.getAbout()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (updatedAbout != null) user.setAbout(updatedAbout);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1965/buggy-version/src.main.java.ru.mail.park.database.kgulyy.controllers.UserController.java", "BodyUseAPI": ["ru.mail.park.database.kgulyy.domains.User.setAbout(java.lang.String)"], "Fixed commit": "da32e42cbb8098908a8e74eb8ea201d8dfdbac78", "Url": "https://api.github.com/repos/kgulyy/database-forum-api", "Date": "2017-10-13T11:02:33Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.mail.park.database.kgulyy.domains.User.getFullname()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (updatedFullname != null) user.setFullname(updatedFullname);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1965/buggy-version/src.main.java.ru.mail.park.database.kgulyy.controllers.UserController.java", "BodyUseAPI": ["ru.mail.park.database.kgulyy.domains.User.setFullname(java.lang.String)"], "Fixed commit": "da32e42cbb8098908a8e74eb8ea201d8dfdbac78", "Url": "https://api.github.com/repos/kgulyy/database-forum-api", "Date": "2017-10-13T11:02:33Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!fromComponent) { updateChosenListBox(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7465/buggy-version/plugin.src.main.java.com.arcbees.chosen.client.gwt.MultipleChosenValueListBox.java", "BodyUseAPI": [], "Fixed commit": "8e8af6e866786d6e5590aedf733ee9985c5e0226", "Url": "https://api.github.com/repos/ArcBees/gwtchosen", "Date": "2014-11-28T18:04:48Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jdom.Element.getChild(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (historyStoreElement != null) { historyStore = new dimappers.android.pub.HistoryStore(historyStoreElement.getChild(dimappers.android.pub.HistoryStore.class.getSimpleName())); }else { historyStore = new dimappers.android.pub.HistoryStore(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/526/buggy-version/Source.App.src.dimappers.android.pub.StoredData.java", "BodyUseAPI": ["org.jdom.Element.getChild(java.lang.String)"], "Fixed commit": "133ac308a5b3c69bcf4afbb51bfc207ad41e60a7", "Url": "https://api.github.com/repos/Dimappers/Pub", "Date": "2012-03-18T21:31:55Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((execComposite) != null) { for (org.eclipse.swt.widgets.Control control : execComposite.getChildren()) { control.setEnabled((processContext != null)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8806/buggy-version/main.plugins.org.talend.designer.runprocess.src.main.java.org.talend.designer.runprocess.ui.JobJvmComposite.java", "BodyUseAPI": [], "Fixed commit": "4626afa968c2eeedc63542822a8a8ed7be1aa808", "Url": "https://api.github.com/repos/yanbasic/tdi-studio-se", "Date": "2017-03-15T06:05:15Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.talend.core.GlobalServiceRegister.getDefault().isServiceRegistered(org.talend.designer.runprocess.IESBRunContainerService.class)) { org.talend.designer.runprocess.IESBRunContainerService runContainerService = ((org.talend.designer.runprocess.IESBRunContainerService) (org.talend.core.GlobalServiceRegister.getDefault().getService(org.talend.designer.runprocess.IESBRunContainerService.class))); for (org.talend.designer.runprocess.RunProcessContextManager contextManager : runProcessContextManagerList) { if ((runContainerService != null) && (!(runContainerService.isESBProcessContextManager(contextManager)))) { runProcessContextManager = contextManager; break; } } }else { runProcessContextManager = ((runProcessContextManagerList.size()) > 0) ? runProcessContextManagerList.get(0) : null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8806/buggy-version/main.plugins.org.talend.designer.runprocess.src.main.java.org.talend.designer.runprocess.RunProcessPlugin.java", "BodyUseAPI": ["org.talend.core.GlobalServiceRegister.getDefault().getService(java.lang.Class)"], "Fixed commit": "4626afa968c2eeedc63542822a8a8ed7be1aa808", "Url": "https://api.github.com/repos/yanbasic/tdi-studio-se", "Date": "2017-03-15T06:05:15Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((runProcessContextManager) == null) { runProcessContextManager = new org.talend.designer.runprocess.RunProcessContextManager(); runProcessContextManagerList.add(runProcessContextManager); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8806/buggy-version/main.plugins.org.talend.designer.runprocess.src.main.java.org.talend.designer.runprocess.RunProcessPlugin.java", "BodyUseAPI": [], "Fixed commit": "4626afa968c2eeedc63542822a8a8ed7be1aa808", "Url": "https://api.github.com/repos/yanbasic/tdi-studio-se", "Date": "2017-03-15T06:05:15Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (j == 0) distTo[i][j] = energy(i, j);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8406/buggy-version/week2.SeamCarver.java", "BodyUseAPI": ["SeamCarver.energy(int,int)"], "Fixed commit": "29cf53fa406ffa18578020513930dc5147e41271", "Url": "https://api.github.com/repos/edward8628/algorithms_part2", "Date": "2015-11-17T14:38:07Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cofh.lib.util.position.BlockPosition.blockExists(this, dir)) addCache(cofh.lib.util.position.BlockPosition.getAdjacentTileEntity(this, dir));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3695/buggy-version/src.powercrystals.minefactoryreloaded.tile.rednet.TileEntityRedNetEnergy.java", "BodyUseAPI": ["cofh.lib.util.position.BlockPosition.getAdjacentTileEntity(powercrystals.minefactoryreloaded.tile.rednet.TileEntityRedNetEnergy,net.minecraftforge.common.util.ForgeDirection)", "powercrystals.minefactoryreloaded.tile.rednet.TileEntityRedNetEnergy.addCache(cofh.lib.util.position.BlockPosition.getAdjacentTileEntity(this, dir))"], "Fixed commit": "816c4c55607fdda23fcd502fcfb4a7523d5c81cd", "Url": "https://api.github.com/repos/skyboy/MineFactoryReloaded", "Date": "2016-01-17T20:00:30Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cofh.lib.util.position.BlockPosition.blockExists(this, dir)) addCache(cofh.lib.util.position.BlockPosition.getAdjacentTileEntity(this, dir));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3695/buggy-version/src.powercrystals.minefactoryreloaded.tile.transport.TileEntityPlasticPipe.java", "BodyUseAPI": ["cofh.lib.util.position.BlockPosition.getAdjacentTileEntity(powercrystals.minefactoryreloaded.tile.transport.TileEntityPlasticPipe,net.minecraftforge.common.util.ForgeDirection)", "powercrystals.minefactoryreloaded.tile.transport.TileEntityPlasticPipe.addCache(cofh.lib.util.position.BlockPosition.getAdjacentTileEntity(this, dir))"], "Fixed commit": "816c4c55607fdda23fcd502fcfb4a7523d5c81cd", "Url": "https://api.github.com/repos/skyboy/MineFactoryReloaded", "Date": "2016-01-17T20:00:30Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((authentication.getDetails()) instanceof org.springframework.security.core.userdetails.UserDetails) { org.apache.kylin.rest.controller.UserController.logger.info((\"authentication.getDetails() is \" + (authentication.getDetails()))); return ((org.springframework.security.core.userdetails.UserDetails) (authentication.getDetails())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2396/buggy-version/server.src.main.java.org.apache.kylin.rest.controller.UserController.java", "BodyUseAPI": ["org.slf4j.Logger.info((\"authentication.getDetails() is \" + (authentication.getDetails())))", "org.springframework.security.core.Authentication.getDetails()", "org.springframework.security.core.Authentication.getDetails()"], "Fixed commit": "af060b2ff6f74017ea43134b1fd8982f151674c5", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2015-12-15T03:00:13Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (authentication == null) { org.apache.kylin.rest.controller.UserController.logger.info(\"authentication is null.\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2396/buggy-version/server.src.main.java.org.apache.kylin.rest.controller.UserController.java", "BodyUseAPI": [], "Fixed commit": "af060b2ff6f74017ea43134b1fd8982f151674c5", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2015-12-15T03:00:13Z"},
{"Line": "=>1046", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (totalSimilarity == 0.0) { weightedAnswer = 0.0; }else { weightedAnswer = weightedAnswer / totalSimilarity; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8747/buggy-version/src.org.iitg.mobileprofiler.db.DatabaseConnector.java", "BodyUseAPI": [], "Fixed commit": "8a12c3df5688e4c56f8728a2028968e6d2da2a52", "Url": "https://api.github.com/repos/revanthb3000/MobileProfilerPC", "Date": "2014-03-30T20:20:54Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((moviesList) != null) movieAdapter.addAll(moviesList);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5434/buggy-version/app.src.main.java.com.example.android.popularmovies.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "52bd7403f495ef001df3cb4bdded7e40dcc06d29", "Url": "https://api.github.com/repos/davegogol/popular-movies", "Date": "2017-02-01T20:43:46Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.ClipboardManager.getPrimaryClip()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (clipData == null) { cb.invoke(\"\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2969/buggy-version/RNClipboardAndroid.app.src.main.java.com.davidsandor.rnclipboardandroid.RNClipboardAndroid.java", "BodyUseAPI": [], "Fixed commit": "d358da7d49821337e3e05c74446e4a45eb674910", "Url": "https://api.github.com/repos/silentcloud/react-native-clipboard", "Date": "2015-11-25T14:15:13Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (task != null) { super.getTaskManager().removeTask(task); count++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8675/buggy-version/Magic8.src.fantasticfour.magiceight.command.DeleteCommand.java", "BodyUseAPI": ["super.getTaskManager().removeTask(fantasticfour.magiceight.Magic8Task)"], "Fixed commit": "62c1cee30150592aaee89c7ff1752b905ccfe25d", "Url": "https://api.github.com/repos/cs2103aug2014-t15-4j/main", "Date": "2014-10-30T03:31:35Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (task != null) { super.getTaskManager().removeTask(task); count++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8675/buggy-version/Magic8.src.fantasticfour.magiceight.command.DeleteCommand.java", "BodyUseAPI": ["super.getTaskManager().removeTask(fantasticfour.magiceight.Magic8Task)"], "Fixed commit": "62c1cee30150592aaee89c7ff1752b905ccfe25d", "Url": "https://api.github.com/repos/cs2103aug2014-t15-4j/main", "Date": "2014-10-30T03:31:35Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (element instanceof org.eclipse.core.resources.IResource) { try { ((org.eclipse.core.resources.IResource) (element)).getParent().refreshLocal(IResource.DEPTH_ZERO, new org.eclipse.core.runtime.NullProgressMonitor()); ((org.eclipse.core.resources.IResource) (element)).getProject().refreshLocal(IResource.DEPTH_ZERO, new org.eclipse.core.runtime.NullProgressMonitor()); ((org.eclipse.core.resources.IResource) (element)).refreshLocal(IResource.DEPTH_ZERO, new org.eclipse.core.runtime.NullProgressMonitor()); } catch (org.eclipse.core.runtime.CoreException e) { uk.ac.diamond.scisoft.customprojects.rcp.projects.HideDeepProjects.logger.error((\"error refreshing project explorer\" + (e.getMessage()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6136/buggy-version/uk.ac.diamond.scisoft.customprojects.rcp.src.uk.ac.diamond.scisoft.customprojects.rcp.projects.HideDeepProjects.java", "BodyUseAPI": [], "Fixed commit": "bc5b4150ed5f1b2339dfaa4ed93ae0e68ee09aa3", "Url": "https://api.github.com/repos/DawnScience/scisoft-ui", "Date": "2012-06-08T10:04:42Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.digitalpebble.storm.crawler.Metadata.getValues(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (values == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6744/buggy-version/core.src.main.java.com.digitalpebble.storm.crawler.persistence.DefaultScheduler.java", "BodyUseAPI": [], "Fixed commit": "5385781fecf17c0b41d812cfd0c61a559a379950", "Url": "https://api.github.com/repos/anjackson/storm-crawler", "Date": "2016-06-09T16:02:58Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["BTree.findKey(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (node == (BTree.DEF_VALUE)) { return node; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7502/buggy-version/BTree.java", "BodyUseAPI": [], "Fixed commit": "a4e65b0d90e6d1f065ddfd69c49d4410f7c1e08f", "Url": "https://api.github.com/repos/brianpacia/CS110_Project", "Date": "2017-12-07T05:30:55Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((pair.length) != 2) { net.cruciblesoftware.jotto.Dictionary.logger.warn((\"ERROR: found unparsable line \" + line)); line = buff.readLine(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7525/buggy-version/guesser.src.Dictionary.java", "BodyUseAPI": [], "Fixed commit": "0f25d6ae45a7ad94e3ab0513a8238abb96754c8c", "Url": "https://api.github.com/repos/stevehb/Jotto", "Date": "2011-04-24T16:27:57Z"},
{"Line": "=>767", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.msf4j.formparam.MultipartStream.ItemInputStream.skip(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (skip != av) { if (org.wso2.msf4j.formparam.MultipartStream.log.isDebugEnabled()) { org.wso2.msf4j.formparam.MultipartStream.log.debug((skip + \" bytes been skipped.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3762/buggy-version/core.src.main.java.org.wso2.msf4j.formparam.MultipartStream.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "b7aa7856729b7a3d58ff03304dc6abdd0805a6bd", "Url": "https://api.github.com/repos/tikaa/msf4j", "Date": "2016-06-23T05:38:50Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (defaults != null) { props.putAll(defaults); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1874/buggy-version/hermes-core.src.main.java.com.ctrip.hermes.core.env.DefaultClientEnvironment.java", "BodyUseAPI": ["java.util.Properties.putAll(java.util.Properties)"], "Fixed commit": "c30c8b346aba13b425f65c186c10c7ed8fd1a691", "Url": "https://api.github.com/repos/yiming187/hermes", "Date": "2015-05-12T03:22:37Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (startInput != ((start.length()) - 1)) { prefix = start; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/9213/buggy-version/src.org.gololang.netbeans.api.completion.CompletionHandler.java", "BodyUseAPI": [], "Fixed commit": "a072981320d4bdb2efb4cdfd48a00a1339e0f615", "Url": "https://api.github.com/repos/golo-lang/golo-netbeans", "Date": "2015-01-26T21:05:24Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.ebi.pride.spectracluster.clusteringfilereader.objects.ISpectrumReference.getSpecies()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (spec != null) { species.addAll(java.util.Arrays.asList(spec.split(\",\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3237/buggy-version/src.main.java.uk.ac.ebi.pride.tools.cluster.utils.SummaryFactory.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.addAll(java.util.List<java.lang.String>)", "java.util.Arrays.asList(java.lang.String[])", "java.lang.String.split(java.lang.String)"], "Fixed commit": "dfb547916f4b8d51ec00e143cba34e728e63d342", "Url": "https://api.github.com/repos/PRIDE-Cluster/cluster-result-importer", "Date": "2015-03-06T15:23:46Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.ebi.pride.spectracluster.clusteringfilereader.objects.ISpectrumReference.getSpecies()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (spec != null) { totalSpecies.addAll(java.util.Arrays.asList(spec.split(\",\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3237/buggy-version/src.main.java.uk.ac.ebi.pride.tools.cluster.utils.SummaryFactory.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.util.Set<java.lang.String>.addAll(java.util.List<java.lang.String>)", "java.util.Arrays.asList(java.lang.String[])"], "Fixed commit": "dfb547916f4b8d51ec00e143cba34e728e63d342", "Url": "https://api.github.com/repos/PRIDE-Cluster/cluster-result-importer", "Date": "2015-03-06T15:23:46Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (strategy.equals(\"ALL-C\")) { action = 1; }else if (strategy.equals(\"JOSS\")) { if ((r.nextInt(10)) == 0) { action = -1; }else if ((memoryEncounters[playerID]) == 1) { action = 1; }else { action = memory[playerID][0]; } }else if (strategy.equals(\"RANDOM\")) { if ((memoryEncounters[playerID]) == 1) { action = -1; }else if ((memory[playerID][0]) == 1) { if ((memoryEncounters[playerID]) < 4) { action = 1; }else if (((memoryOwnActions[playerID][0]) == (-1)) || ((memoryOwnActions[playerID][1]) == (-1))) { action = 1; }else { action = -1; } }else { action = memory[playerID][0]; } }else if (strategy.equals(\"RANDOM\")) { action = (r.nextBoolean()) ? 1 : -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4747/buggy-version/src.Agent.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "ef1015f295a893418f657a7a74bf19b684e79b83", "Url": "https://api.github.com/repos/CC007/KAT-hwset-4", "Date": "2014-09-29T12:40:28Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((memoryEncounters[playerID]) == 1) { action = 1; }else { action = memory[playerID][0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4747/buggy-version/src.Agent.java", "BodyUseAPI": [], "Fixed commit": "ef1015f295a893418f657a7a74bf19b684e79b83", "Url": "https://api.github.com/repos/CC007/KAT-hwset-4", "Date": "2014-09-29T12:40:28Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isWhitelisted(properties))) { com.surevine.community.gateway.hooks.SCMFederatorImportTransferHook.LOG.info(\"artifact rejected as SCM project is not whitelisted for inbound federation from destination.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1550/buggy-version/scm-federator-plugin.src.main.java.com.surevine.community.gateway.hooks.SCMFederatorImportTransferHook.java", "BodyUseAPI": [], "Fixed commit": "9c9f6399868ac72ec214fbdc05317c929a4e0ce6", "Url": "https://api.github.com/repos/surevine/gateway", "Date": "2015-03-02T13:11:24Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["corp.data.annotation.CorpDocument.loadUnannotatedCorpRels(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (data == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6937/buggy-version/src.corp.util.LatentFactions.java", "BodyUseAPI": [], "Fixed commit": "2df53a1ff77282e886935f6fc5e2cdff52b0d7d3", "Url": "https://api.github.com/repos/forkunited/CorporateRelationExtraction", "Date": "2013-10-18T15:19:43Z"},
{"Line": "=>1349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mIsDestroyed)) { net.osmand.plus.mapcontextmenu.other.DestinationReachedMenu.show(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6771/buggy-version/OsmAnd.src.net.osmand.plus.activities.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "996aa770bf11815c53204f6e13b135f981bc63e8", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2016-05-27T15:46:37Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (test.equals(\"asdf\")) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1211/buggy-version/src.main.java.com.github.jetqin.check.App.java", "BodyUseAPI": [], "Fixed commit": "2ce7ff43042d95bdb35a906e4a4363a4a219fcab", "Url": "https://api.github.com/repos/JetQin/check", "Date": "2016-03-03T10:18:47Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (args.getString(\"agent\").equals(accounts[whichAccount])) { whatTodo = edu.tsinghua.iiis.AccountModel.PUSH; msg = \"You have voted successfully\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7844/buggy-version/EtherLendAndroid.app.src.main.java.edu.tsinghua.iiis.AccountModel.java", "BodyUseAPI": [], "Fixed commit": "27bf9676767c786fe953a41d9439a4e9d6d76fdb", "Url": "https://api.github.com/repos/Sun-Jc/EtherLend", "Date": "2016-12-26T17:21:22Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (ports != null) { for (java.util.Map.Entry<java.lang.String, org.o3project.odenos.core.component.network.topology.Port> entry : ports.entrySet()) { newPorts.put(entry.getKey(), new org.o3project.odenos.core.component.network.topology.Port(entry.getValue())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2214/buggy-version/src.main.java.org.o3project.odenos.core.component.network.topology.Node.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.o3project.odenos.core.component.network.topology.Port>.entrySet()"], "Fixed commit": "46dbb2120954c26128606eedc32756d37d432534", "Url": "https://api.github.com/repos/haizawa/odenos", "Date": "2015-05-25T12:08:09Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((nl.giantit.minecraft.GiantShop.core.Commands.buy.conf.getBoolean(\"GiantShop.stock.useStock\")) && (stock != (-1))) { java.util.HashMap<java.lang.String, java.lang.String> t = new java.util.HashMap<java.lang.String, java.lang.String>(); t.put(\"stock\", java.lang.String.valueOf((stock - amount))); nl.giantit.minecraft.GiantShop.core.Commands.buy.DB.update(\"#__items\").set(t).where(where).updateQuery(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6033/buggy-version/src.nl.giantit.minecraft.GiantShop.core.Commands.buy.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.String.valueOf(int)"], "Fixed commit": "ff316d5156619f2ff4333583b1952d2f1a495155", "Url": "https://api.github.com/repos/Thidox/GiantShop-2.0", "Date": "2012-04-19T21:37:02Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (requestParameters.hasParameter(org.xlcloud.vcms.gui.accounts.controllers.AccountBean.TAB_INDEX)) { tabindex = requestParameters.getParameterAsInt(org.xlcloud.vcms.gui.accounts.controllers.AccountBean.TAB_INDEX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/649/buggy-version/vcms-gui.modules.accounts.src.main.java.org.xlcloud.vcms.gui.accounts.controllers.AccountBean.java", "BodyUseAPI": ["org.xlcloud.vcms.gui.controllers.request.RequestParameters.getParameterAsInt(java.lang.String)"], "Fixed commit": "389f24ed871478e24d0c4ad614e2f93da67a4ea5", "Url": "https://api.github.com/repos/ow2-xlcloud/vcms", "Date": "2013-02-08T14:00:45Z"},
{"Line": "=>660", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.inaturalist.android.GuideXML.getNodesByXPath(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (nodes == null) { return taxa; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5703/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.GuideXML.java", "BodyUseAPI": [], "Fixed commit": "654b214518281aeb601a9740e6dc13a04db7fbc7", "Url": "https://api.github.com/repos/budowski/iNaturalistAndroid", "Date": "2016-05-28T22:36:52Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gv.marker(marker).start()) != (-1)) out.print(\"GT:DS:GP:PGP\"); else out.print(\"GT:DS:GP\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3154/buggy-version/vcf.VcfWriter.java", "BodyUseAPI": [], "Fixed commit": "1c2b85e3481140ec8ec7966bffa659b3c424e234", "Url": "https://api.github.com/repos/tfwillems/PhasedBEAGLE", "Date": "2016-03-08T13:12:55Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message.equals(\"\")) { message = words[i]; }else { message = (message + \" \") + (words[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7925/buggy-version/src.main.java.me.web32.MineCaster.Message.java", "BodyUseAPI": [], "Fixed commit": "9a9b91208fad658204d714b849a0a9b2ad7b299a", "Url": "https://api.github.com/repos/web32/MineCaster", "Date": "2013-02-21T16:38:59Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message.equals(\"\")) { message = words[i]; }else { message = (message + \" \") + (words[i].substring(2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7925/buggy-version/src.main.java.me.web32.MineCaster.Message.java", "BodyUseAPI": [], "Fixed commit": "9a9b91208fad658204d714b849a0a9b2ad7b299a", "Url": "https://api.github.com/repos/web32/MineCaster", "Date": "2013-02-21T16:38:59Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["winEle.getAttribute(\"height\").getInt()", "winEle.getAttribute(\"width\").getInt()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((width >= 0) && (height >= 0)) { window.setSize(width, height); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8205/buggy-version/app.src.main.java.ca.phon.app.session.editor.DefaultEditorViewModel.java", "BodyUseAPI": ["ca.phon.app.session.editor.DefaultEditorViewModel.AccessoryWindow.setSize(int,int)"], "Fixed commit": "c6c8710c9558fa60719344cd9cdd633630b3a99d", "Url": "https://api.github.com/repos/ghedlund/phon", "Date": "2014-10-08T13:07:10Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bibliothek.util.xml.XElement.getElement(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (boundsEle != null) { int x = boundsEle.getAttribute(\"x\").getInt(); int y = boundsEle.getAttribute(\"y\").getInt(); int width = boundsEle.getAttribute(\"width\").getInt(); int height = boundsEle.getAttribute(\"height\").getInt(); if ((width >= 0) && (height >= 0)) { getEditor().setSize(width, height); } if ((x >= 0) && (y >= 0)) { getEditor().setLocation(x, y); }else { if (!(getEditor().isVisible())) getEditor().cascadeWindow(ca.phon.ui.CommonModuleFrame.getCurrentFrame()); } boundsSet = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8205/buggy-version/app.src.main.java.ca.phon.app.session.editor.DefaultEditorViewModel.java", "BodyUseAPI": ["boundsEle.getAttribute(\"y\").getInt()", "bibliothek.util.xml.XElement.getAttribute(java.lang.String)", "boundsEle.getAttribute(\"height\").getInt()", "bibliothek.util.xml.XElement.getAttribute(java.lang.String)", "boundsEle.getAttribute(\"width\").getInt()", "boundsEle.getAttribute(\"x\").getInt()", "bibliothek.util.xml.XElement.getAttribute(java.lang.String)", "bibliothek.util.xml.XElement.getAttribute(java.lang.String)"], "Fixed commit": "c6c8710c9558fa60719344cd9cdd633630b3a99d", "Url": "https://api.github.com/repos/ghedlund/phon", "Date": "2014-10-08T13:07:10Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGameConnection) != null) { com.monopoly.domke.sebastian.monopoly.common.GameMessage requestJoinGameMessage = new com.monopoly.domke.sebastian.monopoly.common.GameMessage(GameMessage.MessageHeader.requestJoinGame, messageContent); java.lang.String jsonString = messageParser.messageToJsonString(requestJoinGameMessage); mGameConnection.sendMessage(jsonString); android.widget.Toast.makeText(getApplicationContext(), \"requestJoinGameMessage send\", Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(getApplicationContext(), \"Es muss erst ein neues Spiel gestartet werden, bevor du dich damit verbinden kannst\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8233/buggy-version/app.src.main.java.com.monopoly.domke.sebastian.monopoly.view.MainMenuActivity.java", "BodyUseAPI": [], "Fixed commit": "8e4293134bcb671386ac02fec298939572768fd0", "Url": "https://api.github.com/repos/sdomke/Monopoly", "Date": "2017-04-13T16:13:03Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ligen.get(position).getJugend().equals(\"\")) { button.setText(ligen.get(position).getName()); }else { button.setText(((((ligen.get(position).getName()) + \" (\") + (ligen.get(position).getJugend())) + \"-Jugend)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2478/buggy-version/src.helper.LigenAdapter.java", "BodyUseAPI": ["android.widget.Button.setText(ligen.get(position).getName())", "java.util.List<com.example.datahandling.Liga>.get(int)", "ligen.get(position).getName()", "android.widget.Button.setText(((((ligen.get(position).getName()) + \" (\") + (ligen.get(position).getJugend())) + \"-Jugend)\"))", "java.util.List<com.example.datahandling.Liga>.get(int)", "java.util.List<com.example.datahandling.Liga>.get(int)", "ligen.get(position).getName()", "ligen.get(position).getJugend()"], "Fixed commit": "1d9f4c9ac9d66882cc423279a8079981f0f0ab03", "Url": "https://api.github.com/repos/DerHexer17/HVS", "Date": "2015-03-31T20:03:00Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.t7seven7t.swornmarket.commands.CmdMove.argAsInt(int,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index < 0) { org.bukkit.OfflinePlayer target = getTarget(args[0]); if ((target != null) && ((plugin.getShopDataCache().getData(target)) != null)) { index = plugin.getShopDataCache().getData(target).getId(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2898/buggy-version/src.main.java.net.t7seven7t.swornmarket.commands.CmdMove.java", "BodyUseAPI": [], "Fixed commit": "ebe28ef01ece03747a4fc70795ada9a05bcbaaf6", "Url": "https://api.github.com/repos/MineSworn/SwornMarket", "Date": "2014-01-29T22:38:38Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index < 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2898/buggy-version/src.main.java.net.t7seven7t.swornmarket.commands.CmdMove.java", "BodyUseAPI": [], "Fixed commit": "ebe28ef01ece03747a4fc70795ada9a05bcbaaf6", "Url": "https://api.github.com/repos/MineSworn/SwornMarket", "Date": "2014-01-29T22:38:38Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tempSet.size()) > (resultSet.size())) { return tempSet.size(); }else { return resultSet.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4715/buggy-version/java.LeetCode.java", "BodyUseAPI": ["java.util.HashSet<java.lang.Character>.size()", "java.util.HashSet<java.lang.Character>.size()"], "Fixed commit": "32aa8cf86e30997215be52c17b6ea114d65b7da4", "Url": "https://api.github.com/repos/shreeshaagoyal/Learning_Programming", "Date": "2017-08-03T22:08:15Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((courses) != null) { courses.clear(); android.support.v7.widget.RecyclerView rv = ((android.support.v7.widget.RecyclerView) (findViewById(R.id.rv_beginner))); rv.getAdapter().notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4333/buggy-version/app.src.main.java.id.ac.umn.mobile.menu_1.BeginnerActivity.java", "BodyUseAPI": [], "Fixed commit": "744c2e8ab24c480d82f108b3651c18fcb7a107a4", "Url": "https://api.github.com/repos/sylviestephanie/Menu_1", "Date": "2016-12-01T06:37:37Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getClass()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.lang.Integer.class.equals(secondCtorArgClass)) { secondCtorArgClass = int.class; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/692/buggy-version/api.src.main.java.com.stormpath.sdk.client.Client.java", "BodyUseAPI": [], "Fixed commit": "8ef5f4d9c512bfb3fb1108f145f95c7499749b1e", "Url": "https://api.github.com/repos/stormpath/stormpath-sdk-java", "Date": "2012-08-10T03:57:00Z"},
{"Line": "=>675", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"\".equals(getElement().getStyle().getHeight()))) { container.getStyle().setHeight(((height - (getTimelineHeight())) - (getHorizontalScrollbarSpacerHeight())), Unit.PX); }else { container.getStyle().setHeight((-1), Unit.PX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3420/buggy-version/gantt-addon.src.main.java.org.tltv.gantt.client.GanttWidget.java", "BodyUseAPI": [], "Fixed commit": "8e4d53c7626f11302117801a1b25cec9363266d9", "Url": "https://api.github.com/repos/tltv/gantt", "Date": "2016-11-29T13:33:41Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((count) < 0) (count)++; else (count)--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/9171/buggy-version/bloom.src.bloom.filters.Cell.java", "BodyUseAPI": [], "Fixed commit": "b44d54392f4cd10abdb0b7b619eaa669bf3a6779", "Url": "https://api.github.com/repos/omarshammas/bloom", "Date": "2012-12-14T13:23:20Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (component instanceof models.rocket.parts.Parachute) { element = createParachuteElement(document, ((models.rocket.parts.Parachute) (component))); }else if (component instanceof models.rocket.parts.CircularCylinder) { element = createCircularCylinderElement(document, ((models.rocket.parts.CircularCylinder) (component))); }else if (component instanceof models.rocket.parts.ConicalFrustum) { element = createConicalFrustumElement(document, ((models.rocket.parts.ConicalFrustum) (component))); }else if (component instanceof models.rocket.parts.NoseCone) { element = createNoseConeElement(document, ((models.rocket.parts.NoseCone) (component))); }else if (component instanceof models.rocket.parts.TrapezoidFinSet) { element = createTrapezoidFinSetElement(document, ((models.rocket.parts.TrapezoidFinSet) (component))); }else { throw new java.lang.Exception(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3820/buggy-version/src.models.rocket.data.XmlRocketSerializer.java", "BodyUseAPI": [], "Fixed commit": "d78fa800d26e96b2c932990b357117af69e88413", "Url": "https://api.github.com/repos/jahales/BIRD", "Date": "2014-12-08T12:35:42Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) android.util.Log.d(com.antoshkaplus.recursivelists.AddStringDialog.TAG, \"pressed Back button\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8984/buggy-version/app.src.main.java.com.antoshkaplus.recursivelists.AddStringDialog.java", "BodyUseAPI": [], "Fixed commit": "482240f40e13f59a7050b2f801ec564eed96bb22", "Url": "https://api.github.com/repos/antoshkaplus/Android_RecursiveLists", "Date": "2015-03-04T20:38:46Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) android.util.Log.d(com.antoshkaplus.recursivelists.AddStringDialog.TAG, (\" \" + (keyEvent.getAction())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8984/buggy-version/app.src.main.java.com.antoshkaplus.recursivelists.AddStringDialog.java", "BodyUseAPI": [], "Fixed commit": "482240f40e13f59a7050b2f801ec564eed96bb22", "Url": "https://api.github.com/repos/antoshkaplus/Android_RecursiveLists", "Date": "2015-03-04T20:38:46Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) android.util.Log.d(com.antoshkaplus.recursivelists.AddStringDialog.TAG, \"pressed Add button\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8984/buggy-version/app.src.main.java.com.antoshkaplus.recursivelists.AddStringDialog.java", "BodyUseAPI": [], "Fixed commit": "482240f40e13f59a7050b2f801ec564eed96bb22", "Url": "https://api.github.com/repos/antoshkaplus/Android_RecursiveLists", "Date": "2015-03-04T20:38:46Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) android.util.Log.d(com.antoshkaplus.recursivelists.EditStringDialog.TAG, \"pressed Edit button\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8984/buggy-version/app.src.main.java.com.antoshkaplus.recursivelists.EditStringDialog.java", "BodyUseAPI": [], "Fixed commit": "482240f40e13f59a7050b2f801ec564eed96bb22", "Url": "https://api.github.com/repos/antoshkaplus/Android_RecursiveLists", "Date": "2015-03-04T20:38:46Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) android.util.Log.d(com.antoshkaplus.recursivelists.EditStringDialog.TAG, (\" \" + (keyEvent.getAction())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8984/buggy-version/app.src.main.java.com.antoshkaplus.recursivelists.EditStringDialog.java", "BodyUseAPI": [], "Fixed commit": "482240f40e13f59a7050b2f801ec564eed96bb22", "Url": "https://api.github.com/repos/antoshkaplus/Android_RecursiveLists", "Date": "2015-03-04T20:38:46Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) android.util.Log.d(com.antoshkaplus.recursivelists.EditStringDialog.TAG, \"pressed Back button\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8984/buggy-version/app.src.main.java.com.antoshkaplus.recursivelists.EditStringDialog.java", "BodyUseAPI": [], "Fixed commit": "482240f40e13f59a7050b2f801ec564eed96bb22", "Url": "https://api.github.com/repos/antoshkaplus/Android_RecursiveLists", "Date": "2015-03-04T20:38:46Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["search_bar.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((userid == null) || ((userid.length()) == 0)) { android.widget.Toast.makeText(getApplicationContext(), \"Please input valid userid\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3156/buggy-version/Application.src.main.java.ui.Contact.java", "BodyUseAPI": [], "Fixed commit": "1892fbc58aac31319a457b9a3668d75457f35951", "Url": "https://api.github.com/repos/PushenGao/WeRun-Frontend", "Date": "2015-05-03T03:55:20Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((objectValues.get(i)) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5425/buggy-version/src.ru.fizteh.fivt.students.akhtyamovpavel.structureddatabase.DataBaseTableProvider.java", "BodyUseAPI": [], "Fixed commit": "fb835850b1dbcbccf92ead40799e14719d4b5934", "Url": "https://api.github.com/repos/akhtyamovpavel/fizteh-java-2014", "Date": "2014-11-15T15:30:56Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((encryptionKey) != null) { try { connection.setEncryptionKey(encryptionKey, keyLength); } catch (java.security.InvalidKeyException ikex) { ikex.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5347/buggy-version/structr-ui.src.main.java.org.structr.cloud.message.AuthenticationContainer.java", "BodyUseAPI": [], "Fixed commit": "3db503ff338ef11cf525296f985fcd4fe97234b7", "Url": "https://api.github.com/repos/structr/structr", "Date": "2014-05-08T21:42:30Z"},
{"Line": "=>589", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((max.length) == 1) { for (int d = 0; d < dimensionality; ++d) { maxImg[d] = java.lang.Math.max(max[0][d], min[0][d]); minImg[d] = java.lang.Math.min(max[0][d], min[0][d]); } }else { for (int d = 0; d < dimensionality; ++d) { maxImg[d] = java.lang.Math.max(java.lang.Math.max(max[0][d], max[1][d]), java.lang.Math.max(min[0][d], min[1][d])); minImg[d] = java.lang.Math.min(java.lang.Math.min(max[0][d], max[1][d]), java.lang.Math.min(min[0][d], min[1][d])); for (int i = 2; i < (numImages * numTimePoints); ++i) { maxImg[d] = java.lang.Math.max(maxImg[d], java.lang.Math.max(min[i][d], max[i][d])); minImg[d] = java.lang.Math.min(minImg[d], java.lang.Math.min(min[i][d], max[i][d])); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8994/buggy-version/src-plugins.Stitching_.src.main.java.mpicbg.stitching.fusion.Fusion.java", "BodyUseAPI": ["java.lang.Math.max(float,float)", "java.lang.Math.min(float,float)", "java.lang.Math.min(float,float)", "java.lang.Math.max(float,float)", "java.lang.Math.max(float,float)", "java.lang.Math.min(float,float)", "java.lang.Math.min(float,float)", "java.lang.Math.min(float,float)", "java.lang.Math.max(float,float)", "java.lang.Math.max(float,float)"], "Fixed commit": "990141f79cfc3ca836dfb4041dcd099d3bf75244", "Url": "https://api.github.com/repos/fiji/fiji", "Date": "2012-07-13T13:58:54Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((instrumentIDs) != null) { instrumentID = instrumentIDs.split(\",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/173/buggy-version/src.main.java.Request.java", "BodyUseAPI": [], "Fixed commit": "f0c8ac48d197911217fe7ce598687a10c2443889", "Url": "https://api.github.com/repos/spookyskeletonz/seng3011", "Date": "2017-04-12T09:10:09Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((topicCodes) != null) { topicCode = topicCodes.split(\",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/173/buggy-version/src.main.java.Request.java", "BodyUseAPI": [], "Fixed commit": "f0c8ac48d197911217fe7ce598687a10c2443889", "Url": "https://api.github.com/repos/spookyskeletonz/seng3011", "Date": "2017-04-12T09:10:09Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (p != null) { updateX(p.x); updateY(p.y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2351/buggy-version/modules.graphs.src.ditl.graphs.MovementTrace.java", "BodyUseAPI": ["ditl.graphs.MovementTrace.MovementWriter.updateX(p.x)", "ditl.graphs.MovementTrace.MovementWriter.updateY(p.y)"], "Fixed commit": "14ef4e567f936780a92e232fee5d475d0fc9e0a9", "Url": "https://api.github.com/repos/jwhitbeck/ditl", "Date": "2011-10-21T15:48:22Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCurrentFocus()) != null) imm.hideSoftInputFromWindow(getCurrentFocus().getWindowToken(), 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3523/buggy-version/app.src.main.java.com.example.brittanyhsu.bhspotify.SearchableActivity.java", "BodyUseAPI": [], "Fixed commit": "bf891dcc8f814d1501b31ef5cb2225cb435fef28", "Url": "https://api.github.com/repos/hsubrittany/ListenToMe", "Date": "2017-08-05T07:05:42Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sleaker.WhosThere.WhosThere.WhoPlayerListener.colorizeTabName(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((listName.length()) > 16) listName = listName.substring(0, 15);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1832/buggy-version/src.com.sleaker.WhosThere.WhosThere.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "230673860ff8fa96be1583c0ff52b632fb09d488", "Url": "https://api.github.com/repos/MilkBowl/WhosThere", "Date": "2011-11-30T15:15:45Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.xml.stream.XMLEventReader.nextEvent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((event.getEventType()) == (javax.xml.stream.XMLStreamConstants.CHARACTERS)) { javax.xml.stream.events.Characters characters = ((javax.xml.stream.events.Characters) (event)); if ((characters.isIgnorableWhiteSpace()) || (characters.isWhiteSpace())) if (((this.presentEvent) != null) && (this.presentEvent.isStartElement())) { }else { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5218/buggy-version/src.main.java.microsoft.exchange.webservices.data.EwsXmlReader.java", "BodyUseAPI": [], "Fixed commit": "12e6c2ef3a9a2e8019d9c99adb088410650de00c", "Url": "https://api.github.com/repos/scottbessler/ewsjavaapi", "Date": "2012-10-19T17:54:29Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getSystemClassLoader()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((systemClassLoader != null) && (org.springframework.boot.loader.SpringBootSystemClassLoader.class.isAssignableFrom(systemClassLoader.getClass()))) { classLoader = ((org.springframework.boot.loader.SpringBootSystemClassLoader) (systemClassLoader)).getSpringClassLoader(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2638/buggy-version/spring-boot-tools.spring-boot-loader.src.main.java.org.springframework.boot.loader.Launcher.java", "BodyUseAPI": [], "Fixed commit": "49ff650f7a03387fb3af45f75d2ae6d17dd98a4a", "Url": "https://api.github.com/repos/aantono/spring-boot", "Date": "2014-10-07T00:38:31Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (classLoader == null) { classLoader = createClassLoader(getClassPathArchives()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2638/buggy-version/spring-boot-tools.spring-boot-loader.src.main.java.org.springframework.boot.loader.Launcher.java", "BodyUseAPI": [], "Fixed commit": "49ff650f7a03387fb3af45f75d2ae6d17dd98a4a", "Url": "https://api.github.com/repos/aantono/spring-boot", "Date": "2014-10-07T00:38:31Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (netClient.isAlive()) { try { netClient.join(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2936/buggy-version/IronTactics.src.fr.frozen.iron.client.IronTactics.java", "BodyUseAPI": ["fr.frozen.iron.client.IronClient.join()"], "Fixed commit": "6c02435e011fe3626ea8e2d89f6361f1c6b3ae00", "Url": "https://api.github.com/repos/zlandorf/Frozen-Dust", "Date": "2011-10-21T21:40:28Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (running) shutdown();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2936/buggy-version/ServerFrameWork.src.fr.frozen.network.client.BaseClient.java", "BodyUseAPI": [], "Fixed commit": "6c02435e011fe3626ea8e2d89f6361f1c6b3ae00", "Url": "https://api.github.com/repos/zlandorf/Frozen-Dust", "Date": "2011-10-21T21:40:28Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(running)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2936/buggy-version/ServerFrameWork.src.fr.frozen.network.client.BaseClient.java", "BodyUseAPI": [], "Fixed commit": "6c02435e011fe3626ea8e2d89f6361f1c6b3ae00", "Url": "https://api.github.com/repos/zlandorf/Frozen-Dust", "Date": "2011-10-21T21:40:28Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (running) shutdown();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2936/buggy-version/ServerFrameWork.src.fr.frozen.network.client.BaseClient.java", "BodyUseAPI": [], "Fixed commit": "6c02435e011fe3626ea8e2d89f6361f1c6b3ae00", "Url": "https://api.github.com/repos/zlandorf/Frozen-Dust", "Date": "2011-10-21T21:40:28Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((holder.getKey()) != null) { java.lang.Long id = holder.getKey().longValue(); return id; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7888/buggy-version/db.src.main.java.com.argo.db.template.ServiceMSTemplate.java", "BodyUseAPI": ["holder.getKey().longValue()", "org.springframework.jdbc.support.KeyHolder.getKey()"], "Fixed commit": "f8fdfbdcd9554231ef8c0f16089269da2043ae4c", "Url": "https://api.github.com/repos/yamingd/argo", "Date": "2014-12-08T03:12:10Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.chromiumupdater.ChromiumUpdater.localversion) != 0) if (!(net.chromiumupdater.ChromiumUpdater.delete(new java.io.File(net.chromiumupdater.ChromiumUpdater.installDir)))) java.lang.System.out.println(\"Error while deleting old installation!\"); else java.lang.System.out.println(\"Deleting done. Unzipping new build into install directory ...\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/586/buggy-version/src.net.chromiumupdater.ChromiumUpdater.java", "BodyUseAPI": [], "Fixed commit": "7b0886db52a11ef2cfac5b0b80a497babf6e8b67", "Url": "https://api.github.com/repos/m0rth/chromium-updater", "Date": "2012-03-17T17:56:43Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((x < 0) || (y < 0)) || (x >= (width))) || (y >= (height))) return com.pack.theredwar.level.tile.Tile.voidTile;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2449/buggy-version/src.com.pack.theredwar.level.Level.java", "BodyUseAPI": [], "Fixed commit": "eca7ef4f863f9f00beb56bf71f3d055adc4a8239", "Url": "https://api.github.com/repos/PhilipKatis/The-Red-War", "Date": "2016-12-20T17:37:35Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((labelHoGSvmBeam.figure.panelSegResult.size()) == 0) { figure.panelSegResult = jaylene.figure.panelSegResult; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1430/buggy-version/FigureProcessing.src.gov.nih.nlm.iti.figure.PanelSegComplete0.java", "BodyUseAPI": [], "Fixed commit": "454a2e29958db32f3b835caa387f4e52eea03cbc", "Url": "https://api.github.com/repos/JieZou1/FigureProcessing", "Date": "2016-05-31T20:46:29Z"},
{"Line": "=>17306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.rfo.basic.Run.timerStarting) com.rfo.basic.Run.timerStarting = false; else com.rfo.basic.Run.timerExpired = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5564/buggy-version/src.com.rfo.basic.Run.java", "BodyUseAPI": [], "Fixed commit": "ae8120f323f2671cd784009e4be2080b4d5559c7", "Url": "https://api.github.com/repos/RFO-BASIC/Basic", "Date": "2013-01-19T00:18:18Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["weborb.reader.ReferenceCache.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (refCache.hasObject(iAdaptingType, com.backendless.BackendlessUser.class)) { return refCache.getObject(iAdaptingType, com.backendless.BackendlessUser.class); }else { backendlessUser = new com.backendless.BackendlessUser(); refCache.addObject(iAdaptingType, com.backendless.BackendlessUser.class, backendlessUser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/139/buggy-version/src.com.backendless.io.BackendlessUserFactory.java", "BodyUseAPI": ["weborb.reader.ReferenceCache.addObject(weborb.types.IAdaptingType,java.lang.Class,com.backendless.BackendlessUser)", "weborb.reader.ReferenceCache.getObject(weborb.types.IAdaptingType,java.lang.Class)"], "Fixed commit": "f79d7e20dc4038332a86643b776064c81691976b", "Url": "https://api.github.com/repos/Backendless/Android-SDK", "Date": "2015-02-11T05:29:46Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["garin.artemiy.sqlitesimple.library.SQLiteSimpleDAO<T>.selectCursorFromTable(java.lang.String,java.lang.String[],<nulltype>,<nulltype>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (cursor != null) { cursor.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7809/buggy-version/src.garin.artemiy.sqlitesimple.library.SQLiteSimpleDAO.java", "BodyUseAPI": ["android.database.Cursor.close()"], "Fixed commit": "a602996c80d1200ab368d0bbe8e69e2373380789", "Url": "https://api.github.com/repos/kvirair/SQLite-Simple-Android", "Date": "2013-06-10T11:42:12Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["garin.artemiy.sqlitesimple.library.SQLiteSimpleDAO<T>.selectCursorFromTable(java.lang.String,java.lang.String[],<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (cursor != null) { cursor.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7809/buggy-version/src.garin.artemiy.sqlitesimple.library.SQLiteSimpleDAO.java", "BodyUseAPI": ["android.database.Cursor.close()"], "Fixed commit": "a602996c80d1200ab368d0bbe8e69e2373380789", "Url": "https://api.github.com/repos/kvirair/SQLite-Simple-Android", "Date": "2013-06-10T11:42:12Z"},
{"Line": "=>562", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["garin.artemiy.sqlitesimple.library.SQLiteSimpleDAO<T>.selectCursorFromTable(<nulltype>,<nulltype>,<nulltype>,<nulltype>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (cursor != null) { cursor.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7809/buggy-version/src.garin.artemiy.sqlitesimple.library.SQLiteSimpleDAO.java", "BodyUseAPI": ["android.database.Cursor.close()"], "Fixed commit": "a602996c80d1200ab368d0bbe8e69e2373380789", "Url": "https://api.github.com/repos/kvirair/SQLite-Simple-Android", "Date": "2013-06-10T11:42:12Z"},
{"Line": "=>497", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["garin.artemiy.sqlitesimple.library.SQLiteSimpleDAO<T>.selectCursorFromTable(java.lang.String,java.lang.String[],<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (cursor != null) { T object = read(cursor); cursor.close(); return object; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7809/buggy-version/src.garin.artemiy.sqlitesimple.library.SQLiteSimpleDAO.java", "BodyUseAPI": ["garin.artemiy.sqlitesimple.library.SQLiteSimpleDAO<T>.read(android.database.Cursor)", "android.database.Cursor.close()"], "Fixed commit": "a602996c80d1200ab368d0bbe8e69e2373380789", "Url": "https://api.github.com/repos/kvirair/SQLite-Simple-Android", "Date": "2013-06-10T11:42:12Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(new java.io.File(input_file).exists())) { throw new java.io.FileNotFoundException(\"input file non trovato\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2435/buggy-version/src.main.java.com.xmlconverter.Application.java", "BodyUseAPI": [], "Fixed commit": "800236cdecfa737e0ec4005ca297f9c72538973e", "Url": "https://api.github.com/repos/Giambapisasale/convSpring", "Date": "2015-09-16T11:16:04Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sk89q.craftbook.bukkit.CraftBookPlugin.inst().versionConverter.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (rmv != null) remoteVersion = rmv.split(\"-\")[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7631/buggy-version/src.main.java.com.sk89q.craftbook.bukkit.Updater.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "9bc5585dffdb9b67d35881c096957aac1de3ef12", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-01-31T09:21:42Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getArguments().getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (score != null) ((android.widget.EditText) (newLogView.findViewById(R.id.field_score))).setText(score);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8130/buggy-version/src.com.cocross.SubmitDialog.java", "BodyUseAPI": ["((android.widget.EditText) (newLogView.findViewById(R.id.field_score))).setText(java.lang.String)"], "Fixed commit": "8807057c2e1f3ef6f025886d4f342f9a7a0ea3b4", "Url": "https://api.github.com/repos/cocross/cocross_android", "Date": "2014-01-26T05:27:10Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (opDelta <= 0) { output.println(java.lang.String.format(\"%d, %d, %d, %d, %d, %d\", total, oldTotal, keyCount, oldKeyCount, latency, oldLatency)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4160/buggy-version/tools.stress.src.org.apache.cassandra.stress.StressAction.java", "BodyUseAPI": [], "Fixed commit": "22445bb84784d48b0ff2fb9dede170836d38b9d8", "Url": "https://api.github.com/repos/brooklynpacket/cassandra", "Date": "2011-11-01T02:23:40Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (text.isEmpty()) { return new com.horstmann.violet.product.diagram.classes.nodes.OneLineString(text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1315/buggy-version/violetplugin-classdiagram.src.main.java.com.horstmann.violet.product.diagram.classes.nodes.EnumNode.java", "BodyUseAPI": [], "Fixed commit": "5c733bec27d57c3835dec592033df817f5235ab3", "Url": "https://api.github.com/repos/UzDevelopers/violetumleditor", "Date": "2016-02-12T17:42:57Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((uploadSearchParams.getImage()) != null) { imageBytes = uploadSearchParams.getImage().getByteArray(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4172/buggy-version/visearch-android.src.main.java.com.visenze.visearch.android.api.impl.SearchOperationsImpl.java", "BodyUseAPI": ["com.visenze.visearch.android.UploadSearchParams.getImage()", "uploadSearchParams.getImage().getByteArray()"], "Fixed commit": "1a0b19cd83e299510a185330110d297a6aa16e11", "Url": "https://api.github.com/repos/visenze/visearch-sdk-android", "Date": "2016-02-25T04:27:59Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["brut.androlib.res.data.value.ResScalarValue.encodeAsResXmlValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (body.contains(\"@\")) { item = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6995/buggy-version/apktool-lib.src.main.java.brut.androlib.res.data.value.ResScalarValue.java", "BodyUseAPI": [], "Fixed commit": "d82ace7cfe513a445d2635df654e8ebb71736ff9", "Url": "https://api.github.com/repos/brutall/brut.apktool", "Date": "2012-05-04T03:26:42Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nmd.rss.collector.rest.FeedsServlet.convert(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (addFeedRequest == null) { return nmd.rss.collector.rest.ResponseBody.createErrorJsonResponse(invalidFeedUrl(\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6862/buggy-version/src.main.java.nmd.rss.collector.rest.FeedsServlet.java", "BodyUseAPI": [], "Fixed commit": "537ef1cddd914c2b4f57b1f7c9254b3805eeb9bb", "Url": "https://api.github.com/repos/igors48/nmdService", "Date": "2014-04-03T06:27:19Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.n52.sensorweb.wdc.ms.MuensterwetterRealTimeCollector.downloadFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(tzId.isEmpty())) { tzId = java.lang.String.format(props.getProperty(org.n52.sensorweb.wdc.ms.MuensterwetterRealTimeCollector.DATA_FIELD_TIME_ZONE_PARSE_PATTERN), tzId.replaceAll(\"[\\\\(\\\\)UTC]\", \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8446/buggy-version/src.main.java.org.n52.sensorweb.wdc.ms.MuensterwetterRealTimeCollector.java", "BodyUseAPI": [], "Fixed commit": "9282ee075e21e37fba6b0c8ae2d65b2a96a6249c", "Url": "https://api.github.com/repos/52North/WeatherDataCollector", "Date": "2015-05-12T15:28:27Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(com.google.common.base.Strings.isNullOrEmpty(title))) || (section.hasNoTitle())) { section.addItem(new org.ishausa.publishing.newsletter.Item(com.google.common.base.Strings.nullToEmpty(title), com.google.common.base.Strings.nullToEmpty(fullContent), com.google.common.base.Strings.nullToEmpty(summaryContent))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4495/buggy-version/src.main.java.org.ishausa.publishing.newsletter.NewsletterCreator.java", "BodyUseAPI": ["com.google.common.base.Strings.nullToEmpty(java.lang.String)", "org.ishausa.publishing.newsletter.Section.addItem(org.ishausa.publishing.newsletter.Item)"], "Fixed commit": "694644286676f47d7632e5dcc3719d2588cbf85d", "Url": "https://api.github.com/repos/prasannasv/isha-newsletter", "Date": "2017-02-12T18:02:56Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) == (RetrieveFeedsAsyncTask.Type.HOME)) filter = sharedpreferences.getString(Helper.SET_FILTER_REGEX_HOME, null); else if ((type) == (RetrieveFeedsAsyncTask.Type.LOCAL)) filter = sharedpreferences.getString(Helper.SET_FILTER_REGEX_LOCAL, null); else filter = sharedpreferences.getString(Helper.SET_FILTER_REGEX_PUBLIC, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/667/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.drawers.StatusListAdapter.java", "BodyUseAPI": [], "Fixed commit": "3d4848883b47213ee86fafe71a7db56f60301615", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-11-22T18:32:46Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(line.matches(\"[A-za-z0-9_]+(\\\\s)*(=|:|\\\\s+)+(\\\\s)*[A-za-z0-9\\\\s_[.][/]\\\\\\\\]+(\\\\s*#+.*)?\"))) { throw new com.zakrywilson.commons.configuration.InvalidConfigurationException(((\"Line is malformed: '\" + line) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6546/buggy-version/src.main.java.com.zakrywilson.commons.configuration.Line.java", "BodyUseAPI": [], "Fixed commit": "582e7af67b4e3342ae9547eafe537ee93ded8189", "Url": "https://api.github.com/repos/zakrywilson/configuration-parser", "Date": "2016-11-10T20:11:55Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty((((web.name()) + \"-\") + (web.version())))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (uuid == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7394/buggy-version/core.src.main.java.org.luffy.lib.libspring.embedweb.host.WebHost.java", "BodyUseAPI": [], "Fixed commit": "1b866ff1f2a4e5e0aa3f0d6181b6ef54b434c141", "Url": "https://api.github.com/repos/caijiang/libspring", "Date": "2016-05-20T02:27:13Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (matcher.matches()) { version = (matcher.group(1)) + \"-SNAPSHOT\"; }else { pattern = java.util.regex.Pattern.compile(\".*-(.+)\\\\.jar.*\"); matcher = pattern.matcher(codeLocation.toString()); if (matcher.matches()) { version = matcher.group(1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7394/buggy-version/core.src.main.java.org.luffy.lib.libspring.embedweb.EmbedWeb.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)"], "Fixed commit": "1b866ff1f2a4e5e0aa3f0d6181b6ef54b434c141", "Url": "https://api.github.com/repos/caijiang/libspring", "Date": "2016-05-20T02:27:13Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentZone.endsWith(\" (active)\")) { currentZone = currentZone.substring(0, ((currentZone.length()) - (\" (active)\".length()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8208/buggy-version/src.main.java.com.aoindustries.firewalld.Firewalld.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "223fe3d76fc92caa7b247e46aa13e372504852c4", "Url": "https://api.github.com/repos/aoindustries/ao-firewalld", "Date": "2017-08-19T23:24:01Z"},
{"Line": "=>959", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (amask[n]) { maskDon[n] = determineDonor(n); maskAcc[n] = determineAcceptor(n); maskPos[n] = determinePositive(n); maskNeg[n] = determineNegative(n); maskHal[n] = determineHalide(n); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1162/buggy-version/src.main.org.openscience.cdk.fingerprint.CircularFingerprinter.java", "BodyUseAPI": ["org.openscience.cdk.fingerprint.CircularFingerprinter.determineDonor(int)", "org.openscience.cdk.fingerprint.CircularFingerprinter.determineNegative(int)", "org.openscience.cdk.fingerprint.CircularFingerprinter.determineHalide(int)", "org.openscience.cdk.fingerprint.CircularFingerprinter.determineAcceptor(int)", "org.openscience.cdk.fingerprint.CircularFingerprinter.determinePositive(int)"], "Fixed commit": "b523e17f2129413a79a71f79d7ea7aa7fd8842b1", "Url": "https://api.github.com/repos/cdd/cdk", "Date": "2014-02-27T16:33:40Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (form.getNyukinKakeInfoRecordId().isEmpty()) { form.setNyukinKakeInfoRecordId(java.util.UUID.randomUUID().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2977/buggy-version/src.main.java.com.showka.web.u01.U01G002Controller.java", "BodyUseAPI": ["com.showka.web.u01.U01G002Form.setNyukinKakeInfoRecordId(java.lang.String)"], "Fixed commit": "022cf7fbc341a5d62b9391722b858d46638a9c8a", "Url": "https://api.github.com/repos/ShowKa/HanbaiKanri", "Date": "2017-10-03T07:49:17Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pages.size()) <= what) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6387/buggy-version/src.main.java.net.afterlifelochie.fontbox.render.BookGUI.java", "BodyUseAPI": [], "Fixed commit": "37fcde75e7e5eb9117ab372443d38d8db8160d1a", "Url": "https://api.github.com/repos/AfterLifeLochie/fontbox", "Date": "2015-02-25T04:34:49Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lib.requiresJar()) { if (!(lib.hasJar())) { org.parabot.core.Core.verbose(((\"Downloading \" + (lib.getLibraryName())) + \"...\")); org.parabot.core.ui.components.VerboseLoader.setState(((\"Downloading \" + (lib.getLibraryName())) + \"...\")); org.parabot.environment.api.utils.WebUtil.downloadFile(lib.getDownloadLink(), lib.getJarFile(), org.parabot.core.ui.components.VerboseLoader.get()); org.parabot.core.Core.verbose(((\"Downloaded \" + (lib.getLibraryName())) + \".\")); } org.parabot.core.Core.verbose((\"Initializing \" + (lib.getLibraryName()))); lib.init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6032/buggy-version/src.main.java.org.parabot.environment.Environment.java", "BodyUseAPI": ["org.parabot.core.lib.Library.getLibraryName()", "org.parabot.core.lib.Library.hasJar()", "org.parabot.core.lib.Library.getLibraryName()", "org.parabot.core.Core.verbose(((\"Downloaded \" + (lib.getLibraryName())) + \".\"))", "org.parabot.core.lib.Library.init()", "org.parabot.core.ui.components.VerboseLoader.setState(((\"Downloading \" + (lib.getLibraryName())) + \"...\"))", "org.parabot.environment.api.utils.WebUtil.downloadFile(lib.getDownloadLink(),lib.getJarFile(),org.parabot.core.ui.components.VerboseLoader.get())", "org.parabot.core.lib.Library.getJarFile()", "org.parabot.core.Core.verbose(((\"Downloading \" + (lib.getLibraryName())) + \"...\"))", "org.parabot.core.lib.Library.getLibraryName()", "org.parabot.core.Core.verbose((\"Initializing \" + (lib.getLibraryName())))", "org.parabot.core.lib.Library.getDownloadLink()", "org.parabot.core.lib.Library.getLibraryName()"], "Fixed commit": "968738243cdf38789fe826e778c03611d2080876", "Url": "https://api.github.com/repos/Parabot/Parabot", "Date": "2016-01-10T19:31:06Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(alarmPlayer.isPlaying())) { alarmPlayer.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2988/buggy-version/src.com.example.icampgeofence.MainActivity.java", "BodyUseAPI": ["android.media.MediaPlayer.start()"], "Fixed commit": "ecd961965802ef2e5f19a4ab13cd0d9287576a7a", "Url": "https://api.github.com/repos/innovateme/ICampGeoFence", "Date": "2014-02-24T20:40:35Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (alarmPlayer.isPlaying()) { alarmPlayer.pause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2988/buggy-version/src.com.example.icampgeofence.MainActivity.java", "BodyUseAPI": ["android.media.MediaPlayer.pause()"], "Fixed commit": "ecd961965802ef2e5f19a4ab13cd0d9287576a7a", "Url": "https://api.github.com/repos/innovateme/ICampGeoFence", "Date": "2014-02-24T20:40:35Z"},
{"Line": "=>1088", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vaadin.data.hbnutil.HbnContainer<T>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((firstIndex < 0) || (firstIndex >= size)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8610/buggy-version/src.com.vaadin.data.hbnutil.HbnContainer.java", "BodyUseAPI": [], "Fixed commit": "59a714b93194410f8314bfac66852cd89736d055", "Url": "https://api.github.com/repos/gpiercey/HbnContainer", "Date": "2012-10-18T20:49:53Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.prefs.Preferences.get(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.speedment.internal.util.EmailUtil.DEFAULT_EMAIL.equals(storedEmail)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4036/buggy-version/src.main.java.com.speedment.internal.util.EmailUtil.java", "BodyUseAPI": [], "Fixed commit": "2743b193da07dd552404ecaac752b78f2f565789", "Url": "https://api.github.com/repos/speedment/speedment", "Date": "2016-04-04T20:35:19Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((body.head) instanceof jkind.sexp.Cons) { jkind.sexp.Cons argsExpr = ((jkind.sexp.Cons) (body.head)); for (int i = 0; i < (inputValues.size()); i++) { jkind.sexp.Cons argExpr; if (i == 0) { argExpr = ((jkind.sexp.Cons) (argsExpr.head)); }else { argExpr = ((jkind.sexp.Cons) (argsExpr.args.get((i - 1)))); } evalulationModel.putValue(argExpr.head.toString(), inputValues.get(i)); } funcSym = body.args.get(0); }else { funcSym = funcSexp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6654/buggy-version/jkind.src.jkind.analysis.evaluation.SmtLibFunctionEvaluator.java", "BodyUseAPI": ["body.args.get(int)"], "Fixed commit": "d647472b7e3f7930a88b80e7bb59ca0414319a30", "Url": "https://api.github.com/repos/TheBeaNerd/jkind", "Date": "2017-07-07T15:00:45Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["widget.map.com.urlocationmapwidget.Prefs.getInstance(widget.map.com.urlocationmapwidget.App)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (prefs.isLocationUpdating()) { startService(new android.content.Intent(this, widget.map.com.urlocationmapwidget.UrLocationWidgetService.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4075/buggy-version/app.src.main.java.widget.map.com.urlocationmapwidget.App.java", "BodyUseAPI": [], "Fixed commit": "a12d42b343f5dabc8db77c10e7818081166708a8", "Url": "https://api.github.com/repos/XinyueZ/urlocationmapwidget", "Date": "2014-10-10T15:08:17Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Set<org.recxx.domain.Key>.contains(org.recxx.domain.Key)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (keyExistsInBothSources) { for (int i = row1.size(); i < (row2.size()); i++) { java.lang.String columnName = source2.getColumns().get(i).getName(); if ((compareColumns1.contains(Default.ALL_COLUMNS)) || (compareColumns1.contains(columnName))) { java.lang.Object field2 = row2.get(i); org.recxx.domain.Difference difference = new org.recxx.domain.Difference.Builder().key(key).alias1(source1.getAlias()).alias2(source2.getAlias()).column(source2.getColumns().get(i)).field1(\"Missing\").field2(field2).absoluteDifference(java.math.BigDecimal.ZERO).percentageDifference(java.math.BigDecimal.ZERO).build(); writeDifference(destinations, difference); matchedRow = false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4140/buggy-version/Recxx.src.main.java.org.recxx.Recxx2.java", "BodyUseAPI": [], "Fixed commit": "a896edb0eedc1e8b247c795f70e75c7dcce747cd", "Url": "https://api.github.com/repos/Rexxz/Recxx", "Date": "2012-03-13T16:53:58Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["info.getQueryParameters().getFirst(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (reverse.equalsIgnoreCase(\"true\")) { if (total > (java.lang.Integer.parseInt(pageSize))) { if (total > ((java.lang.Integer.parseInt(pageSize)) * ((java.lang.Integer.parseInt(page)) + 1))) { offset = total - ((java.lang.Integer.parseInt(pageSize)) * ((java.lang.Integer.parseInt(page)) + 1)); limit = java.lang.Integer.parseInt(pageSize); }else { offset = 0; limit = total - ((java.lang.Integer.parseInt(pageSize)) * (java.lang.Integer.parseInt(page))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3085/buggy-version/restcomm.restcomm.http.src.main.java.org.restcomm.connect.http.CallsEndpoint.java", "BodyUseAPI": [], "Fixed commit": "90cb6ee621ca6cba48c383465ed109117480b847", "Url": "https://api.github.com/repos/forever3000/Restcomm-Connect", "Date": "2016-12-12T13:36:29Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!submittedToday) { DB.ForecastDB.insert(forecast); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/9157/buggy-version/src.java.Controllers.ForecastController.java", "BodyUseAPI": [], "Fixed commit": "641d8f9afdd3d7ef0923937af42fd7bafb68dcb1", "Url": "https://api.github.com/repos/StephenWeber11/WXForecaster", "Date": "2017-04-29T04:19:03Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataCursor.moveToFirst()) { do { java.lang.String book_name = dataCursor.getString(dataCursor.getColumnIndex(DB_Column.SearchHistory.BOOK_NAME)); mTagList.add(book_name); } while (dataCursor.moveToNext() ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3944/buggy-version/app.src.main.java.com.bookstore.main.SearchView.SearchAdapter.java", "BodyUseAPI": ["android.database.Cursor.getColumnIndex(DB_Column.SearchHistory.BOOK_NAME)", "android.database.Cursor.moveToNext()", "android.database.Cursor.getString(dataCursor.getColumnIndex(DB_Column.SearchHistory.BOOK_NAME))"], "Fixed commit": "3fad193aea1ecc6d11222e5155675acc2820bac9", "Url": "https://api.github.com/repos/chenshengfa1990/BookStore", "Date": "2016-05-30T14:11:32Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getStatus()) != (com.dumptruckman.minecraft.zombiefight.api.GameStatus.IN_PROGRESS)) { org.bukkit.Bukkit.getScheduler().cancelTask(humanFinderTask); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4217/buggy-version/src.main.java.com.dumptruckman.minecraft.zombiefight.DefaultGame.java", "BodyUseAPI": [], "Fixed commit": "14242e76c639b7ccb515ecd15fe5ba30592e2df8", "Url": "https://api.github.com/repos/dumptruckman/ZombieFight", "Date": "2012-06-19T05:38:56Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pointIsEmpty(p)) { f[p.getX()][p.getY()] = h(p); queue.add(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7666/buggy-version/src.nibbles.game.SnakeAI.java", "BodyUseAPI": ["nibbles.game.SnakeAI.h(nibbles.game.Point)", "nibbles.game.Point.getY()", "nibbles.game.Point.getX()", "java.util.PriorityQueue<nibbles.game.Point>.add(nibbles.game.Point)"], "Fixed commit": "f1ba7fa00ee18e507913baaaabdb038415843ad4", "Url": "https://api.github.com/repos/rzoller/nibbles-android", "Date": "2013-02-16T15:30:37Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (minigame.isFlightEnabled()) player.getPlayer().setFlying(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7400/buggy-version/Minigames.src.au.com.mineauz.minigames.PlayerData.java", "BodyUseAPI": [], "Fixed commit": "0ef4c8869e74bc8bc8349fc3712d4ae5fe3aa085", "Url": "https://api.github.com/repos/Razz0991/Minigames", "Date": "2014-07-11T06:55:51Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["langanal.sentence.processing.SentenceProcessing.compareNounPhrases(sen1.getNouns(),sen2.getNouns())", "langanal.sentence.processing.SentenceProcessing.compareVerbPhrases(sen1.getVerbs(),sen2.getVerbs())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((verb == (-1)) && (noun != (-1))) { return noun; }else if ((verb != (-1)) && (noun == (-1))) { return verb; }else { return (verb * 0.35F) + (noun * 0.65F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6613/buggy-version/TextAnalysis.src.langanal.sentence.processing.SentenceProcessing.java", "BodyUseAPI": [], "Fixed commit": "4681ea8b293ecd290f61712db95c0e1a0c1facb9", "Url": "https://api.github.com/repos/Tytynguyen/nwapw-english-analysis", "Date": "2016-08-10T18:39:02Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (verbTotalComparisons < 1) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6613/buggy-version/TextAnalysis.src.langanal.sentence.processing.SentenceProcessing.java", "BodyUseAPI": [], "Fixed commit": "4681ea8b293ecd290f61712db95c0e1a0c1facb9", "Url": "https://api.github.com/repos/Tytynguyen/nwapw-english-analysis", "Date": "2016-08-10T18:39:02Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nounTotalComparisons < 1) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6613/buggy-version/TextAnalysis.src.langanal.sentence.processing.SentenceProcessing.java", "BodyUseAPI": [], "Fixed commit": "4681ea8b293ecd290f61712db95c0e1a0c1facb9", "Url": "https://api.github.com/repos/Tytynguyen/nwapw-english-analysis", "Date": "2016-08-10T18:39:02Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.getProject().getFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (manifest.exists()) { manifest.delete(true, monitor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7564/buggy-version/maven.plugins.com.liferay.ide.maven.core.src.com.liferay.ide.maven.core.MavenBundlePluginProject.java", "BodyUseAPI": ["org.eclipse.core.resources.IFile.delete(boolean,org.eclipse.core.runtime.IProgressMonitor)"], "Fixed commit": "6e118b25be281fc635322e373a5a3a60630fe1a8", "Url": "https://api.github.com/repos/yanan/liferay-ide", "Date": "2016-12-02T17:55:28Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ai.isForSpecialHttpMethod())) { org.nutz.mvc.impl.UrlMappingImpl.log.debugf((\"Duplicate @At mapping ? path=\" + path)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4453/buggy-version/src.org.nutz.mvc.impl.UrlMappingImpl.java", "BodyUseAPI": [], "Fixed commit": "82d47c4be7307ae65f0be52172169aca3eced624", "Url": "https://api.github.com/repos/lzxz1234/nutz", "Date": "2014-07-08T07:07:44Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.minitoolbox.reflection.TypeUtil.unifyWithDescendant(org.minitoolbox.reflection.typewrapper.TypeWrapper,org.minitoolbox.reflection.typewrapper.TypeWrapper)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (typeVariableMap == null) return ancestor.getWrappedType();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7815/buggy-version/src.main.java.org.minitoolbox.reflection.TypeUtil.java", "BodyUseAPI": [], "Fixed commit": "e5dcc36b23b8cea5062c2d174ff22eefde2b18d6", "Url": "https://api.github.com/repos/minitoolbox/minitoolbox", "Date": "2013-11-21T14:59:00Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.minitoolbox.reflection.TypeUtil.findAncestorTypeParameters(org.minitoolbox.reflection.typewrapper.SingleTypeWrapper,org.minitoolbox.reflection.typewrapper.TypeWrapper)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((ancestorUnboundTypes.length) > 0) && ((ancestorBoundTypes.length) == 0)) return null; else org.minitoolbox.reflection.TypeUtil.unify(ancestorUnboundTypes, ancestorBoundTypes, typeVariables);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7815/buggy-version/src.main.java.org.minitoolbox.reflection.TypeUtil.java", "BodyUseAPI": ["org.minitoolbox.reflection.TypeUtil.unify(org.minitoolbox.reflection.typewrapper.TypeWrapper[],org.minitoolbox.reflection.typewrapper.TypeWrapper[],java.util.Map<java.lang.reflect.TypeVariable, java.lang.reflect.Type>)"], "Fixed commit": "e5dcc36b23b8cea5062c2d174ff22eefde2b18d6", "Url": "https://api.github.com/repos/minitoolbox/minitoolbox", "Date": "2013-11-21T14:59:00Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((m1.combined_weight) < 0) && ((m2.combined_weight) < 0)) { return (m1.combined_weight) > (m2.combined_weight) ? -1 : (m1.combined_weight) < (m2.combined_weight) ? 1 : 0; }else { m1.combined_weight = java.lang.Math.abs(m1.combined_weight); m2.combined_weight = java.lang.Math.abs(m2.combined_weight); return (m2.combined_weight) > (m1.combined_weight) ? -1 : (m2.combined_weight) < (m1.combined_weight) ? 1 : 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3436/buggy-version/oltpdbsim.src.main.java.repartition.SimpleTr.java", "BodyUseAPI": ["java.lang.Math.abs(m1.combined_weight)", "java.lang.Math.abs(m2.combined_weight)"], "Fixed commit": "c28780957131e670d0f4f0e6629c6eac2a7f1262", "Url": "https://api.github.com/repos/joarder/oltpdbsim", "Date": "2015-10-23T01:49:30Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2425/buggy-version/MetropolisLeasing.app.src.main.java.org.hand.mas.metropolisleasing.activities.CddGridActivity.java", "BodyUseAPI": [], "Fixed commit": "cb3ce13f26c217748a9fb8d4f4457c2aae816ce6", "Url": "https://api.github.com/repos/HANDEXP/metropolis-leasing-app", "Date": "2015-05-08T03:45:14Z"},
{"Line": "=>511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((chcpXmlConfig.isAutoDownloadIsAllowed()) && (!(com.nordnetab.chcp.main.updater.UpdatesInstaller.isInstalling()))) && (!(com.nordnetab.chcp.main.updater.UpdatesLoader.isExecuting()))) { fetchUpdate(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8543/buggy-version/src.android.src.com.nordnetab.chcp.main.HotCodePushPlugin.java", "BodyUseAPI": [], "Fixed commit": "ef28ae61bade928f1a8ab417576bd22c5d1cd2a8", "Url": "https://api.github.com/repos/nordnet/cordova-hot-code-push", "Date": "2015-12-29T14:25:02Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_act.getSupportActionBar()) != null) _act.getSupportActionBar().setTitle(title);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6718/buggy-version/src.main.java.de.plpt.MaterialAdapter.MaterialView.java", "BodyUseAPI": ["android.support.v7.app.AppCompatActivity.getSupportActionBar()", "_act.getSupportActionBar().setTitle(java.lang.String)"], "Fixed commit": "c28b48e9aa2e87e4ce67433925fd72c2e7a581cd", "Url": "https://api.github.com/repos/PlPt/MaterialAdapter", "Date": "2016-04-08T19:44:45Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.vaadin.addons.lazyquerycontainer.Query.loadItems(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (i >= (items.size())) { item = query.constructItem(); }else { item = items.get(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3103/buggy-version/vaadin-lazyquerycontainer.src.main.java.org.vaadin.addons.lazyquerycontainer.LazyQueryView.java", "BodyUseAPI": ["java.util.List<com.vaadin.data.Item>.get(int)"], "Fixed commit": "6fcb236330009f1e52651245d0e54a965c2e728d", "Url": "https://api.github.com/repos/tlaukkan/vaadin-lazyquerycontainer", "Date": "2011-05-14T07:51:06Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.vaadin.addons.lazyquerycontainer.Query.loadItems(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i >= (items.size())) { removeItem(itemIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3103/buggy-version/vaadin-lazyquerycontainer.src.main.java.org.vaadin.addons.lazyquerycontainer.LazyQueryView.java", "BodyUseAPI": [], "Fixed commit": "6fcb236330009f1e52651245d0e54a965c2e728d", "Url": "https://api.github.com/repos/tlaukkan/vaadin-lazyquerycontainer", "Date": "2011-05-14T07:51:06Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ConsoleProg.HelpFunctions.readInt(java.lang.String,java.util.Scanner)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (option == 0) { ConsoleProg.Menu.printMainMenu(); }else { java.lang.System.out.println(\"Wasn't a valid option, try again!\"); ConsoleProg.Menu.selectTable(task); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/639/buggy-version/src.ConsoleProg.Menu.java", "BodyUseAPI": [], "Fixed commit": "64c2e38a2bcb5af282be4cbb6cd4581460343c6b", "Url": "https://api.github.com/repos/marvpaul/YoutubeDBProg", "Date": "2017-04-28T10:14:40Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCursor) == null) { return super.swapCursor(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/9184/buggy-version/src.org.odyssey.fragments.ArtistsSectionFragment.java", "BodyUseAPI": [], "Fixed commit": "c4808a6a4c35c8ce52fb28dfbe761fb77113591e", "Url": "https://api.github.com/repos/djselbeck/odyssey", "Date": "2014-01-17T16:53:54Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCursor) == null) { return super.swapCursor(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/9184/buggy-version/src.org.odyssey.fragments.AlbumsSectionFragment.java", "BodyUseAPI": [], "Fixed commit": "c4808a6a4c35c8ce52fb28dfbe761fb77113591e", "Url": "https://api.github.com/repos/djselbeck/odyssey", "Date": "2014-01-17T16:53:54Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (readCurrent) { currentNode = currentNode.getNext(); readCurrent = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6034/buggy-version/library.src.main.java.com.datatorrent.lib.appdata.query.AbstractWindowEndQueueManager.java", "BodyUseAPI": [], "Fixed commit": "d772191ba7727e5269dd2f335fe4bd0cebe5a30b", "Url": "https://api.github.com/repos/apache/apex-malhar", "Date": "2015-06-11T19:31:14Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (table.editCellAt(((table.getRowCount()) - 1), 2)) { java.awt.Component editor = table.getEditorComponent(); editor.requestFocusInWindow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5651/buggy-version/src.main.java.net.imagej.ui.swing.updater.SitesDialog.java", "BodyUseAPI": ["javax.swing.JTable.getEditorComponent()"], "Fixed commit": "e7d209bb06fc1bf28538be2c18a56cb23e64908f", "Url": "https://api.github.com/repos/mpicbg-scicomp/imagej-ui-swing", "Date": "2016-11-11T12:28:57Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((org.apache.openjpa.util.OpenJPAId) (oid)).getIdObject()) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3283/buggy-version/src.main.java.com.datastax.hectorjpa.store.CassandraStore.java", "BodyUseAPI": [], "Fixed commit": "c70017841098b53caaac34c305de86a2ea4e9318", "Url": "https://api.github.com/repos/riptano/hector-jpa", "Date": "2011-04-01T01:28:26Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (versionString == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4165/buggy-version/src.edu.iastate.libcompat.util.StringUtil.java", "BodyUseAPI": [], "Fixed commit": "eca0debc2fc3a42bc445fcc80a71e49233e5f382", "Url": "https://api.github.com/repos/nishanthsiva/libcompat", "Date": "2016-03-08T01:11:00Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dsa.iot.dslink.node.value.SubscriptionValue.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((val.getTime()) < 0) { val.setTime(java.lang.System.currentTimeMillis()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2294/buggy-version/sdk.historian.src.main.java.org.dsa.iot.historian.database.SubscriptionPool.java", "BodyUseAPI": ["org.dsa.iot.dslink.node.value.Value.setTime(long)"], "Fixed commit": "6bff41879bfbdbdd48ff2bbc554afdcbd2aaf512", "Url": "https://api.github.com/repos/IOT-DSA/sdk-dslink-java", "Date": "2016-11-02T21:26:32Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((example.getName().startsWith(\"MDRT_\")) || (example.getName().startsWith(\"MDRS_\"))) && (example.getName().endsWith(\"$\"))) { return true; }else if (example.getName().startsWith(\"MLOG$_\")) { return true; }else if (example.getName().startsWith(\"RUPD$_\")) { return true; }else if (example.getName().startsWith(\"WM$_\")) { return true; }else if (example.getName().equals(\"CREATE$JAVA$LOB$TABLE\")) { return true; }else if (example.getName().equals(\"JAVA$CLASS$MD5$TABLE\")) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3715/buggy-version/liquibase-core.src.main.java.liquibase.database.core.OracleDatabase.java", "BodyUseAPI": ["liquibase.structure.DatabaseObject.getName()", "example.getName().startsWith(java.lang.String)", "liquibase.structure.DatabaseObject.getName()", "liquibase.structure.DatabaseObject.getName()", "example.getName().startsWith(java.lang.String)", "example.getName().startsWith(java.lang.String)", "liquibase.structure.DatabaseObject.getName()", "liquibase.structure.DatabaseObject.getName()", "example.getName().equals(java.lang.String)", "example.getName().equals(java.lang.String)"], "Fixed commit": "b99cfaf5a5f6a5a18e5565e5227c21a2f3f8faad", "Url": "https://api.github.com/repos/Tom9729/liquibase", "Date": "2015-04-11T20:54:58Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.JsonNode.asLong()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (l == 0) { to = 0L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1134/buggy-version/crud.src.main.java.com.redhat.lightblue.crud.CRUDFindRequest.java", "BodyUseAPI": [], "Fixed commit": "951647b33a6ecd3808579a8784b4606de419ee56", "Url": "https://api.github.com/repos/lightblue-platform/lightblue-core", "Date": "2016-03-23T21:14:10Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (currentMessage != null) { firstMessageId = ((V) (currentMessage.getVertexId())); comparision = firstMessageId.compareTo(vertex.getVertexID()); }else { comparision = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3180/buggy-version/graph.src.main.java.org.apache.hama.graph.GraphJobRunner.java", "BodyUseAPI": ["org.apache.hama.graph.GraphJobMessage.getVertexId()"], "Fixed commit": "37ec167b61ec4c3fd3a1370a4649bf008c45ded2", "Url": "https://api.github.com/repos/kennethPATHn/hama", "Date": "2013-06-09T08:45:58Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type instanceof com.oracle.truffle.llvm.parser.api.model.types.StructureType) { builder.append(java.lang.String.format(\"%%%s = type %s\", ((com.oracle.truffle.llvm.parser.api.model.types.StructureType) (type)).getName(), ((com.oracle.truffle.llvm.parser.api.model.types.StructureType) (type)).toDeclarationString())); builder.append(com.oracle.truffle.llvm.parser.bc.util.writer.ModelToIRVisitor.NEWLINE).append(com.oracle.truffle.llvm.parser.bc.util.writer.ModelToIRVisitor.NEWLINE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7243/buggy-version/projects.com.oracle.truffle.llvm.parser.bc.src.com.oracle.truffle.llvm.parser.bc.util.writer.ModelToIRVisitor.java", "BodyUseAPI": [], "Fixed commit": "4c620e2293f784e015f79612249a118088441343", "Url": "https://api.github.com/repos/pointhi/sulong", "Date": "2016-12-12T10:17:27Z"},
{"Line": "=>1217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.evolveum.midpoint.provisioning.ucf.impl.IcfUtil.processIcfException(java.lang.Throwable,java.lang.String,com.evolveum.midpoint.schema.result.OperationResult)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (midpointEx instanceof com.evolveum.midpoint.util.exception.ObjectNotFoundException) { com.evolveum.midpoint.provisioning.ucf.impl.ConnectorInstanceIcfImpl.LOGGER.trace(\"Got ObjectNotFoundException while looking for resource object ConnId UID: {}\", uid); return null; }else if (midpointEx instanceof java.lang.RuntimeException) { throw ((java.lang.RuntimeException) (midpointEx)); }else if (midpointEx instanceof java.lang.Error) { throw new com.evolveum.midpoint.util.exception.SystemException((((\"ERROR: \" + (midpointEx.getClass().getName())) + \": \") + (midpointEx.getMessage())), midpointEx); }else { throw new com.evolveum.midpoint.util.exception.SystemException((((midpointEx.getClass().getName()) + \": \") + (midpointEx.getMessage())), midpointEx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1981/buggy-version/provisioning.provisioning-impl.src.main.java.com.evolveum.midpoint.provisioning.ucf.impl.ConnectorInstanceIcfImpl.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Throwable>.getName()", "java.lang.Class<? extends java.lang.Throwable>.getName()", "java.lang.Throwable.getClass()", "java.lang.Throwable.getMessage()", "java.lang.Throwable.getMessage()", "java.lang.Throwable.getClass()"], "Fixed commit": "9c3c25304cbbde6f3bba1c8af6a93f743261d835", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2015-09-09T11:24:24Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.cmput301w13t04.food.controller.Database.publishRecipe(com.github.cmput301w13t04.food.model.Recipe)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (check) { android.widget.Toast.makeText(this, \"Publish Sucessful!\", Toast.LENGTH_SHORT).show(); }else android.widget.Toast.makeText(this, \"Publish Failed\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4410/buggy-version/src.com.github.cmput301w13t04.food.view.ActivityManageRecipe.java", "BodyUseAPI": [], "Fixed commit": "417dd426cfd5556820d0637be91a1aeedff8568c", "Url": "https://api.github.com/repos/CMPUT301W13T04/Food", "Date": "2013-04-02T00:51:58Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.networknt.consul.client.ConsulClientImpl.logger.isDebugEnabled()) com.networknt.consul.client.ConsulClientImpl.logger.debug((\"url = \" + (url)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5303/buggy-version/consul.src.main.java.com.networknt.consul.client.ConsulClientImpl.java", "BodyUseAPI": [], "Fixed commit": "2f9601e8b29846e9585fd2f4dc89f9790c51b3eb", "Url": "https://api.github.com/repos/networknt/light-4j", "Date": "2017-10-31T13:33:27Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.networknt.consul.client.ConsulClientImpl.logger.isDebugEnabled()) com.networknt.consul.client.ConsulClientImpl.logger.debug((\"url = \" + (url)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5303/buggy-version/consul.src.main.java.com.networknt.consul.client.ConsulClientImpl.java", "BodyUseAPI": [], "Fixed commit": "2f9601e8b29846e9585fd2f4dc89f9790c51b3eb", "Url": "https://api.github.com/repos/networknt/light-4j", "Date": "2017-10-31T13:33:27Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getStringExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (barcode != null) { institutosos.org.br.destinocerto.activity.detail.wastepackage.PackageActivity._barcode = barcode; }else { barcode = institutosos.org.br.destinocerto.activity.detail.wastepackage.PackageActivity._barcode; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/320/buggy-version/app.src.main.java.institutosos.org.br.destinocerto.activity.detail.wastepackage.PackageActivity.java", "BodyUseAPI": [], "Fixed commit": "687f6fcbbcc80823f92c2e7522ecb9dd5e7044f2", "Url": "https://api.github.com/repos/InstitutoSOS/DestinoCertoApp", "Date": "2015-08-15T12:53:42Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["azkaban.jobtype.JobTypePluginSet.getPluginJobProps(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (pluginJobProps == null) { pluginJobProps = pluginSet.getCommonPluginJobProps(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3289/buggy-version/azkaban-common.src.main.java.azkaban.jobtype.JobTypeManager.java", "BodyUseAPI": [], "Fixed commit": "2dd325591d297f29fa1a04e57c7788d68ec1f18f", "Url": "https://api.github.com/repos/HappyRay/azkaban", "Date": "2017-01-05T00:36:55Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= 11) { android.app.SearchManager searchManager = ((android.app.SearchManager) (getSystemService(Context.SEARCH_SERVICE))); android.widget.SearchView searchView = ((android.widget.SearchView) (menu.findItem(R.id.menu_search).getActionView())); searchView.setSearchableInfo(searchManager.getSearchableInfo(getComponentName())); searchView.setSubmitButtonEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7119/buggy-version/src.com.pindroid.activity.FragmentBaseActivity.java", "BodyUseAPI": [], "Fixed commit": "9a73bd66667d103f116f83fb88d1dd7f0063963f", "Url": "https://api.github.com/repos/maxpower47/PinDroid", "Date": "2012-04-20T14:14:35Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasAccount(person.getEmail())) { throw new com.reyme.template.exception.AccountException(\"Account already exists!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/714/buggy-version/src.main.java.com.reyme.template.service.AccountService.java", "BodyUseAPI": [], "Fixed commit": "7d56b6eb0cff0aa15e5fe6cc128a88fa9c4c8ae5", "Url": "https://api.github.com/repos/dabboxking/spring-mvc-template", "Date": "2015-08-02T17:45:22Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(invalidPairings.contains(otherCoord))) { if (otherTile != null) printDebugPair(\"Signal Block dropped because pair was not a valid Signal.\", otherTile); else printDebugPair(\"Signal Block dropped because pair was not a valid Signal.\", otherCoord); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1493/buggy-version/src.main.java.mods.railcraft.common.blocks.signals.SignalBlock.java", "BodyUseAPI": ["mods.railcraft.common.blocks.signals.SignalBlock.printDebugPair(java.lang.String,mods.railcraft.api.core.WorldCoordinate)"], "Fixed commit": "6e88d5c7fbac46d82fa35efb5cd5e1ab19d8d68c", "Url": "https://api.github.com/repos/Railcraft/Railcraft", "Date": "2015-04-26T12:11:36Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dmodel.getAgentById(application.getAgent()).getGroupId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (old_group != null) { sim.getPlayer(old_group).enqueueInput(new ise.gameoflife.inputs.LeaveNotification(sim.getTime(), LeaveNotification.Reasons.Other, application.getAgent())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/460/buggy-version/src.ise.gameoflife.environment.Environment.java", "BodyUseAPI": ["ise.gameoflife.environment.Environment.RespondToApplicationHandler.getPlayer(java.lang.String)", "sim.getPlayer(old_group).enqueueInput(ise.gameoflife.inputs.LeaveNotification)"], "Fixed commit": "d91019354978cdab811cf2d6ba7f9c21377c139a", "Url": "https://api.github.com/repos/javajawa/ISEGameOfLife", "Date": "2011-06-05T16:41:26Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dmodel.getAgentById(agents.get(0)).getGroupId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (groupID == null) { for (java.lang.String agent : agents) { sim.getPlayer(agent).enqueueInput(new ise.gameoflife.inputs.HuntResult(agent, foodGained, foodGained, dmodel.time)); } }else { presage.Participant g = sim.getPlayer(groupID); for (java.lang.String agent : agents) { g.enqueueInput(new ise.gameoflife.inputs.HuntResult(agent, foodGained, 0, dmodel.time)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/460/buggy-version/src.ise.gameoflife.environment.Environment.java", "BodyUseAPI": ["ise.gameoflife.environment.Environment.getPlayer(java.lang.String)"], "Fixed commit": "d91019354978cdab811cf2d6ba7f9c21377c139a", "Url": "https://api.github.com/repos/javajawa/ISEGameOfLife", "Date": "2011-06-05T16:41:26Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.bli.mez.model.Position.firstMission()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (mission != null) { form.setMissionName(mission.getMissionName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4847/buggy-version/src.main.java.ch.bli.mez.controller.PositionController.java", "BodyUseAPI": ["ch.bli.mez.view.management.PositionForm.setMissionName(mission.getMissionName())", "ch.bli.mez.model.Mission.getMissionName()"], "Fixed commit": "533424837315531a8588303204b1c3fbd329c73a", "Url": "https://api.github.com/repos/mibto/mez", "Date": "2014-01-12T13:22:16Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useFilter) { if (!idPresent) { throw new java.lang.UnsupportedOperationException(((\" Condition \" + condition) + \" is not suported in hbase!\")); }else { throw new java.lang.UnsupportedOperationException(((\" Condition \" + condition) + \" is not suported for query on row key!\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/9053/buggy-version/src.kundera-hbase.src.main.java.com.impetus.client.hbase.utils.HBaseUtils.java", "BodyUseAPI": [], "Fixed commit": "41ac61e6d24cd285c200e4fa8a5cea20921e7cf4", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2014-01-15T06:44:06Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.orcid.persistence.dao.OrgDisambiguatedDao.findBySourceIdAndSourceType(organization.getDisambiguatedOrganization().getDisambiguatedOrganizationIdentifier(),organization.getDisambiguatedOrganization().getDisambiguationSource())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (disambiguatedOrg == null) { throw new org.orcid.core.exception.InvalidDisambiguatedOrgException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1480/buggy-version/orcid-core.src.main.java.org.orcid.core.manager.v3.impl.OrgManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "4f8ebf38827cb222c9629e0021f62cf6bd6b41db", "Url": "https://api.github.com/repos/ORCID/ORCID-Source", "Date": "2017-10-04T16:47:37Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((split.length) > 1) this.comment = split[1].trim();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1574/buggy-version/src.edu.rowan.algorithms.Tour.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "56ba5a88987a346dafe62b6aa2a399c3ebe00f48", "Url": "https://api.github.com/repos/abreun68/TSP-Project", "Date": "2014-06-03T04:38:13Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((permanent.getOriginalPermanent().getAttachments()) != null) { stack.setMaxAttachedCount(permanent.getOriginalPermanent().getAttachments().size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1530/buggy-version/Mage.Client.src.main.java.org.mage.plugins.card.CardPluginImpl.java", "BodyUseAPI": ["permanent.getOriginalPermanent().getAttachments().size()", "permanent.getOriginalPermanent().getAttachments()", "org.mage.plugins.card.CardPluginImpl.Stack.setMaxAttachedCount(permanent.getOriginalPermanent().getAttachments().size())", "mage.cards.MagePermanent.getOriginalPermanent()"], "Fixed commit": "8ca8d80a5c6c6225955d835d6a7af575adf359e7", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2014-07-12T07:20:01Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mat[3][k]) != 0) { mat[2][k] = mat[3][k]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4245/buggy-version/Grid.java", "BodyUseAPI": [], "Fixed commit": "75eaf31d75cb05bc196fd7632a1ed8ac3cfa4065", "Url": "https://api.github.com/repos/liorshahverdi/twenty48", "Date": "2014-07-12T17:26:25Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myInterceptor.MyLogger.logger) == null) java.lang.System.out.println(\"sorry logger not initialized\"); else if (ic == null) java.lang.System.out.println(\"sorry ic is null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2774/buggy-version/src.main.java.myInterceptor.MyLogger.java", "BodyUseAPI": [], "Fixed commit": "864bd531e75a72fdc2eec0d69a1806cb9dc84410", "Url": "https://api.github.com/repos/tommyclemansi/bakkerij", "Date": "2015-01-14T22:31:04Z"},
{"Line": "=>1031", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((gameMaster.getTimer()) != null) { gameMaster.stopTimer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6711/buggy-version/src.no.uib.info233.v2017.rei008_jsi014.oblig4.GUI.GUI.java", "BodyUseAPI": [], "Fixed commit": "eadeb28fc775d1dc6809faddede2383ccf0d1d5d", "Url": "https://api.github.com/repos/eikenottt/Oblig4", "Date": "2017-05-31T16:07:39Z"},
{"Line": "=>651", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player.getHost()) { no.uib.info233.v2017.rei008_jsi014.oblig4.GUI.GUI.timer.stop(); }else { no.uib.info233.v2017.rei008_jsi014.oblig4.GUI.GUI.timerJoin.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6711/buggy-version/src.no.uib.info233.v2017.rei008_jsi014.oblig4.GUI.GUI.java", "BodyUseAPI": [], "Fixed commit": "eadeb28fc775d1dc6809faddede2383ccf0d1d5d", "Url": "https://api.github.com/repos/eikenottt/Oblig4", "Date": "2017-05-31T16:07:39Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.jhu.tutorsanonymous.api.APIClient.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((client == null) || ((client.currentUser) == null)) { totalTokens = 0; }else { totalTokens = (client.currentUser.earnedCredits) + (client.currentUser.purchasedCredits); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2309/buggy-version/android.TutorsAnonymous.app.src.main.java.edu.jhu.tutorsanonymous.SearchFragment.java", "BodyUseAPI": [], "Fixed commit": "5a3b2b92f59a4bb4a955b4b0eff7fa2f4b42dddb", "Url": "https://api.github.com/repos/svitcov1/tutorsanonymous", "Date": "2017-05-02T07:44:48Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.base.Splitter.on(',').splitToList(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((transactionTokens.size()) > 3) { java.lang.String dateString = transactionTokens.get(3); try { java.time.LocalDate date = java.time.LocalDate.now(); if (org.apache.commons.lang3.StringUtils.isNotEmpty(dateString)) { date = java.time.LocalDate.parse(dateString, Transaction.DATE_FORMATTER); } transaction.date = date; } catch (java.time.format.DateTimeParseException e) { addError((\"The date should be in the format yyyy-MM-dd for \" + (transaction.getSymbol()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8427/buggy-version/src.main.java.com.charlesbot.cli.AddToListCommandLineOptions.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)"], "Fixed commit": "4fa00c3b856ccc71457e797f2a1c648432d01585", "Url": "https://api.github.com/repos/dzeigler/charles", "Date": "2017-09-15T01:12:46Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result.getId()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7085/buggy-version/app.src.main.java.com.teocci.ytinbg.utils.Utils.java", "BodyUseAPI": [], "Fixed commit": "b811c398fab698abef91f3e4c8ed04aa0ef303c0", "Url": "https://api.github.com/repos/teocci/YouTube-In-Background", "Date": "2017-09-06T09:58:37Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result.getId()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7085/buggy-version/app.src.main.java.com.teocci.ytinbg.youtube.YouTubeVideoLoader.java", "BodyUseAPI": [], "Fixed commit": "b811c398fab698abef91f3e4c8ed04aa0ef303c0", "Url": "https://api.github.com/repos/teocci/YouTube-In-Background", "Date": "2017-09-06T09:58:37Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((android.widget.TextView) (finalHolder.value)).getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(android.webkit.URLUtil.isValidUrl(url))) { android.widget.Toast.makeText(mContext, (url + \" is not a valid URL\"), Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1695/buggy-version/src.we.should.ViewAdapter.java", "BodyUseAPI": ["android.widget.Toast.makeText(android.content.Context,java.lang.String,Toast.LENGTH_LONG)", "android.widget.Toast.makeText(mContext, (url + \" is not a valid URL\"), Toast.LENGTH_LONG).show()"], "Fixed commit": "ca9b75ebcf7877f82697301cdff1a069729492f8", "Url": "https://api.github.com/repos/ccemeraldeyes/AndroidLunch", "Date": "2012-05-15T23:57:21Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"H06JUADXX130110:1:2101:11706:99386\".equals(r.readName)) { java.lang.System.out.println(\"asdfasdfasdf\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2629/buggy-version/src.main.java.net.sf.cram.Cram2Bam.java", "BodyUseAPI": [], "Fixed commit": "4d141527bbc38b0d58f0ba0516e0032c4ebd4e53", "Url": "https://api.github.com/repos/enasequence/cramtools", "Date": "2015-04-08T12:25:09Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((profile_id) == (Profile.DEFAULT_PROFILE_ID)) resultCode = RESULT_OK;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/97/buggy-version/phoneProfilesPlus.src.main.java.sk.henrichg.phoneprofilesplus.ProfilePreferencesActivity.java", "BodyUseAPI": [], "Fixed commit": "be121c98d9786cea89d5f63831229888450f043e", "Url": "https://api.github.com/repos/henrichg/PhoneProfilesPlus", "Date": "2017-09-28T11:32:51Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cell == null) || ((cell.getCellStyle()) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6495/buggy-version/src.main.java.org.phyi.render.excel.ExcelRender.java", "BodyUseAPI": [], "Fixed commit": "bc5f0bf868eb5104c5fb616903f84a8b9a819e8c", "Url": "https://api.github.com/repos/czhouyi/html5-render", "Date": "2017-12-04T02:52:49Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.phyi.render.excel.Row.getCell(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cell == null) { excelRow.getCells().add(excelCell); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6495/buggy-version/src.main.java.org.phyi.render.excel.ExcelRender.java", "BodyUseAPI": [], "Fixed commit": "bc5f0bf868eb5104c5fb616903f84a8b9a819e8c", "Url": "https://api.github.com/repos/czhouyi/html5-render", "Date": "2017-12-04T02:52:49Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dir == null) || ((dir.list()) == null)) { return new java.util.ArrayList<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2933/buggy-version/infra.src.de.zib.gndms.infra.grams.AbstractDirectoryAux.java", "BodyUseAPI": [], "Fixed commit": "9834d5c40e9a72da7784b3ead0d8b5bdbd2f9c2c", "Url": "https://api.github.com/repos/zibhub/GNDMS", "Date": "2013-01-23T11:26:31Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.lang.model.element.Name.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((methodName.length()) <= trimLength) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1930/buggy-version/src.main.java.org.versly.rest.wsdoc.AnnotationProcessor.java", "BodyUseAPI": [], "Fixed commit": "a43c4a6e059097ff957ff97d815313d1f5e6fa1c", "Url": "https://api.github.com/repos/versly/wsdoc", "Date": "2013-12-07T00:18:10Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Integer.parseInt(command[2])) != (this.yourBotId)) { java.lang.System.out.println(\"reset\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2513/buggy-version/Bots.JavaBots.Bot.java", "BodyUseAPI": [], "Fixed commit": "63303ebfbf0cf5fde0cde0bf2b0867c579542219", "Url": "https://api.github.com/repos/levifussell/RiddleIOLightRiderEngine", "Date": "2017-07-08T23:54:39Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lovesToPost) { postLovesLock = new java.util.concurrent.locks.ReentrantLock(); finalLovesPosted = postLovesLock.newCondition(); postLovesNow(); postLovesLock.lock(); try { log.info(\"Waiting for loves to be posted before shutting down\"); finalLovesPosted.await(); log.info(\"Loves posted, continuing shutdown\"); } finally { postLovesLock.unlock(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6554/buggy-version/core.src.java.com.robonobo.core.service.PlaylistService.java", "BodyUseAPI": [], "Fixed commit": "129e8a2aa311436d54a61ff65bcf6a86c390c161", "Url": "https://api.github.com/repos/macavity23/robonobo", "Date": "2011-10-25T22:04:50Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bibliothek.gui.dock.station.split.PutInfo.getNode()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (other == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3125/buggy-version/docking-frames-core.src.bibliothek.gui.dock.station.split.DefaultSplitLayoutManager.java", "BodyUseAPI": [], "Fixed commit": "23ebf05d48d1ec37cadd2dfd98d14ee68336a8fd", "Url": "https://api.github.com/repos/Benoker/DockingFrames", "Date": "2011-12-24T10:31:08Z"},
{"Line": "=>1388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((putInfo.getNode()) == null) { return new bibliothek.gui.dock.station.NoStationDropOperation(this, dockable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3125/buggy-version/docking-frames-core.src.bibliothek.gui.dock.SplitDockStation.java", "BodyUseAPI": [], "Fixed commit": "23ebf05d48d1ec37cadd2dfd98d14ee68336a8fd", "Url": "https://api.github.com/repos/Benoker/DockingFrames", "Date": "2011-12-24T10:31:08Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.getState().getWatchers().get(java.lang.String,java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (watcher.hasSourceDoneDamage(source.getSourceId(), game)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7208/buggy-version/Mage.src.main.java.mage.abilities.condition.common.DealtDamageToAnOpponent.java", "BodyUseAPI": [], "Fixed commit": "13626375613d4510ecce0cdd33d66aaf95d9c606", "Url": "https://api.github.com/repos/drmDev/mage", "Date": "2017-05-16T20:48:14Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((target) == null) { actor.setPosition(((pos.x) * scale), ((pos.y) * scale)); }else { com.bladecoder.engine.model.BaseActor target = com.bladecoder.engine.model.World.getInstance().getCurrentScene().getActor(this.target, false); actor.setPosition(target.getX(), target.getY()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8147/buggy-version/blade-engine.src.com.bladecoder.engine.actions.PositionAnimAction.java", "BodyUseAPI": [], "Fixed commit": "1533d740afc1f4cfee4561d2f6ca38bb746804b7", "Url": "https://api.github.com/repos/bladecoder/bladecoder-adventure-engine", "Date": "2015-10-14T13:58:26Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((target) == null) { ((com.bladecoder.engine.model.SpriteActor) (actor)).startPosAnimation(repeat, count, s, ((pos.x) * scale), ((pos.y) * scale), interpolation, (wait ? cb : null)); }else { com.bladecoder.engine.model.BaseActor target = com.bladecoder.engine.model.World.getInstance().getCurrentScene().getActor(this.target, false); ((com.bladecoder.engine.model.SpriteActor) (actor)).startPosAnimation(repeat, count, s, target.getX(), target.getY(), interpolation, (wait ? cb : null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8147/buggy-version/blade-engine.src.com.bladecoder.engine.actions.PositionAnimAction.java", "BodyUseAPI": [], "Fixed commit": "1533d740afc1f4cfee4561d2f6ca38bb746804b7", "Url": "https://api.github.com/repos/bladecoder/bladecoder-adventure-engine", "Date": "2015-10-14T13:58:26Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(obj instanceof ar.fiuba.tdd.template.tp0.Token)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3204/buggy-version/src.main.java.ar.fiuba.tdd.template.tp0.Token.java", "BodyUseAPI": [], "Fixed commit": "e5cff0b7692c3f8da828dce2b19014a7eabd24f2", "Url": "https://api.github.com/repos/swandelow/template-tp0", "Date": "2016-03-19T13:01:36Z"},
{"Line": "=>566", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((img.height) + y) < 0) || (y > (this.height))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6921/buggy-version/src.main.java.org.java_lcw.jil.Image.java", "BodyUseAPI": [], "Fixed commit": "301097cb30058d44e6c072a02d64bb962226ee19", "Url": "https://api.github.com/repos/lwahlmeier/jil", "Date": "2014-07-25T20:03:37Z"},
{"Line": "=>570", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((img.width) + x) < 0) || (x > (this.width))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6921/buggy-version/src.main.java.org.java_lcw.jil.Image.java", "BodyUseAPI": [], "Fixed commit": "301097cb30058d44e6c072a02d64bb962226ee19", "Url": "https://api.github.com/repos/lwahlmeier/jil", "Date": "2014-07-25T20:03:37Z"},
{"Line": "=>1176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.liferay.portal.util.PropsValues.DOCKBAR_MANAGE_LINKS_WINDOW_STATE_POPUP) { siteMapSettingsURL.setControlPanelCategory(((com.liferay.portal.events.ServicePreAction._CONTROL_PANEL_CATEGORY_PORTLET_PREFIX) + (com.liferay.portal.util.PortletKeys.LAYOUTS_ADMIN))); siteMapSettingsURL.setParameter(\"closeRedirect\", currentURL); siteMapSettingsURL.setWindowState(LiferayWindowState.POP_UP); }else { siteMapSettingsURL.setPlid(plid); siteMapSettingsURL.setParameter(\"redirect\", themeDisplay.getURLHome()); siteMapSettingsURL.setWindowState(LiferayWindowState.MAXIMIZED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2685/buggy-version/portal-impl.src.com.liferay.portal.events.ServicePreAction.java", "BodyUseAPI": [], "Fixed commit": "5ad2f7e556bc26b17e64b76711dc7a091e12749e", "Url": "https://api.github.com/repos/amosfong/liferay-portal", "Date": "2013-01-23T23:18:10Z"},
{"Line": "=>1028", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.liferay.portal.util.PropsValues.DOCKBAR_MANAGE_LINKS_WINDOW_STATE_POPUP) { pageSettingsURL.setControlPanelCategory(((com.liferay.portal.events.ServicePreAction._CONTROL_PANEL_CATEGORY_PORTLET_PREFIX) + (com.liferay.portal.util.PortletKeys.LAYOUTS_ADMIN))); pageSettingsURL.setParameter(\"closeRedirect\", currentURL); pageSettingsURL.setWindowState(LiferayWindowState.POP_UP); }else { pageSettingsURL.setPlid(plid); pageSettingsURL.setParameter(\"redirect\", themeDisplay.getURLHome()); pageSettingsURL.setWindowState(WindowState.MAXIMIZED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2685/buggy-version/portal-impl.src.com.liferay.portal.events.ServicePreAction.java", "BodyUseAPI": [], "Fixed commit": "5ad2f7e556bc26b17e64b76711dc7a091e12749e", "Url": "https://api.github.com/repos/amosfong/liferay-portal", "Date": "2013-01-23T23:18:10Z"},
{"Line": "=>1073", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.liferay.portal.util.PropsValues.DOCKBAR_MANAGE_LINKS_WINDOW_STATE_POPUP) { manageSiteMembershipsURL.setControlPanelCategory(((com.liferay.portal.events.ServicePreAction._CONTROL_PANEL_CATEGORY_PORTLET_PREFIX) + (com.liferay.portal.util.PortletKeys.SITE_MEMBERSHIPS_ADMIN))); manageSiteMembershipsURL.setWindowState(LiferayWindowState.POP_UP); }else { manageSiteMembershipsURL.setPlid(plid); manageSiteMembershipsURL.setParameter(\"redirect\", themeDisplay.getURLHome()); manageSiteMembershipsURL.setParameter(\"showBackURL\", java.lang.Boolean.FALSE.toString()); manageSiteMembershipsURL.setWindowState(WindowState.MAXIMIZED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2685/buggy-version/portal-impl.src.com.liferay.portal.events.ServicePreAction.java", "BodyUseAPI": [], "Fixed commit": "5ad2f7e556bc26b17e64b76711dc7a091e12749e", "Url": "https://api.github.com/repos/amosfong/liferay-portal", "Date": "2013-01-23T23:18:10Z"},
{"Line": "=>1133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.liferay.portal.util.PropsValues.DOCKBAR_MANAGE_LINKS_WINDOW_STATE_POPUP) { siteSettingsURL.setControlPanelCategory(((com.liferay.portal.events.ServicePreAction._CONTROL_PANEL_CATEGORY_PORTLET_PREFIX) + (com.liferay.portal.util.PortletKeys.SITE_SETTINGS))); siteSettingsURL.setParameter(\"closeRedirect\", currentURL); siteSettingsURL.setWindowState(LiferayWindowState.POP_UP); }else { siteSettingsURL.setPlid(plid); siteSettingsURL.setParameter(\"redirect\", themeDisplay.getURLHome()); siteSettingsURL.setWindowState(LiferayWindowState.MAXIMIZED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2685/buggy-version/portal-impl.src.com.liferay.portal.events.ServicePreAction.java", "BodyUseAPI": [], "Fixed commit": "5ad2f7e556bc26b17e64b76711dc7a091e12749e", "Url": "https://api.github.com/repos/amosfong/liferay-portal", "Date": "2013-01-23T23:18:10Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAlive()) ehcache.remove(arg1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1971/buggy-version/src.jpa-engine.fallback-impl.src.main.java.com.impetus.kundera.cache.ehcache.EhCacheWrapper.java", "BodyUseAPI": [], "Fixed commit": "e25c7019da033c7f653e1c66737d86edda81d5d8", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2014-01-15T05:29:32Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAlive()) ehcache.put(new net.sf.ehcache.Element(key, value));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1971/buggy-version/src.jpa-engine.fallback-impl.src.main.java.com.impetus.kundera.cache.ehcache.EhCacheWrapper.java", "BodyUseAPI": [], "Fixed commit": "e25c7019da033c7f653e1c66737d86edda81d5d8", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2014-01-15T05:29:32Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAlive()) { element = ehcache.get(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1971/buggy-version/src.jpa-engine.fallback-impl.src.main.java.com.impetus.kundera.cache.ehcache.EhCacheWrapper.java", "BodyUseAPI": [], "Fixed commit": "e25c7019da033c7f653e1c66737d86edda81d5d8", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2014-01-15T05:29:32Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAlive()) { return (ehcache.get(arg1)) != null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1971/buggy-version/src.jpa-engine.fallback-impl.src.main.java.com.impetus.kundera.cache.ehcache.EhCacheWrapper.java", "BodyUseAPI": [], "Fixed commit": "e25c7019da033c7f653e1c66737d86edda81d5d8", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2014-01-15T05:29:32Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAlive()) { return ehcache.getSize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1971/buggy-version/src.jpa-engine.fallback-impl.src.main.java.com.impetus.kundera.cache.ehcache.EhCacheWrapper.java", "BodyUseAPI": [], "Fixed commit": "e25c7019da033c7f653e1c66737d86edda81d5d8", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2014-01-15T05:29:32Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.pizz.wifibotcontroller.ControllerSingleton.getCommandSender().isConnected())) { java.lang.Thread t = new java.lang.Thread() { @java.lang.Override public void run() { try { com.pizz.wifibotcontroller.ControllerSingleton.getCommandSender().openConnection(); } catch (java.io.IOException e) { runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { android.widget.Toast.makeText(com.pizz.wifibotcontroller.ChoiceActivity.this, R.string.exceptionSenderReach, Toast.LENGTH_LONG).show(); finish(); } }); } } }; t.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/221/buggy-version/app.src.main.java.com.pizz.wifibotcontroller.ChoiceActivity.java", "BodyUseAPI": [], "Fixed commit": "801dd082b7b802eb631cd490f4cf70583c794cfb", "Url": "https://api.github.com/repos/Notex685/WifiBot-Controller", "Date": "2017-02-08T10:26:01Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.xml.xpath.XPathExpression.evaluate(org.w3c.dom.Element,javax.xml.namespace.QName)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (obj instanceof java.lang.String) return ((java.lang.String) (obj));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/927/buggy-version/aliada.aliada-rdfizer.src.main.java.eu.aliada.rdfizer.pipeline.format.xml.OXPath.java", "BodyUseAPI": [], "Fixed commit": "31e009e12803587b7349be761cfa6a6a42c3295a", "Url": "https://api.github.com/repos/ALIADA/aliada-tool", "Date": "2015-05-11T20:23:03Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(_parms._standardize)) orig[0] = means;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/241/buggy-version/h2o-algos.src.main.java.hex.kmeans.KMeans.java", "BodyUseAPI": [], "Fixed commit": "f3e74c06ae89abcbd820eb075e144c409de8f46a", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-01-09T00:30:56Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numOfTime == (seedu.whatnow.logic.parser.Parser.TWO)) { if (time == null) { startTime = endTime; endTime = argComponents[i]; }else { startTime = time; time = null; endTime = argComponents[i]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/9260/buggy-version/src.main.java.seedu.whatnow.logic.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "9361f85c118e621c5e87680b58693a1d6edd47ee", "Url": "https://api.github.com/repos/Drashti96/main", "Date": "2016-11-07T04:34:31Z"},
{"Line": "=>615", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numOfTime == (seedu.whatnow.logic.parser.Parser.TWO)) { if (time == null) { startTime = endTime; endTime = argComponents[i]; }else { startTime = time; time = null; endTime = argComponents[i]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/9260/buggy-version/src.main.java.seedu.whatnow.logic.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "9361f85c118e621c5e87680b58693a1d6edd47ee", "Url": "https://api.github.com/repos/Drashti96/main", "Date": "2016-11-07T04:34:31Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (serialPort.isConnected()) { serialPort.disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1418/buggy-version/src.com.ubcsolar.map.GPSFromPhoneReceiver.java", "BodyUseAPI": ["com.ubcsolar.map.NRSerialPort.disconnect()"], "Fixed commit": "d293f1e0584d517cf50328c66713d37ad7076ea0", "Url": "https://api.github.com/repos/UBC-Solar/Simulator", "Date": "2016-07-02T20:57:36Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) != null) { keyValueBuilder.setValue(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8430/buggy-version/apm-sniffer.apm-agent-core.src.main.java.org.skywalking.apm.agent.core.context.util.KeyValuePair.java", "BodyUseAPI": [], "Fixed commit": "6f6556fa33f2aa89ffa7daf21134da912b9a4595", "Url": "https://api.github.com/repos/ascrutae/sky-walking", "Date": "2017-08-29T10:25:27Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((input) != null) && (input.ready())) { java.lang.String inputData = input.readLine(); java.lang.System.out.println((((\"data from client: \" + (id)) + \" is: \") + inputData)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4332/buggy-version/MultiConnectionSocketServer.src.mingming.socket.ClientThread.java", "BodyUseAPI": ["java.io.BufferedReader.readLine()"], "Fixed commit": "ea0a2b8d9981003f28fdcaf76e9c5a6211629324", "Url": "https://api.github.com/repos/MingMingFAN/MultiConnectionSocketServer", "Date": "2014-07-15T17:56:52Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(buffers.isEmpty())) { advanceBufferIfNecessary(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5654/buggy-version/core.src.main.java.io.grpc.internal.CompositeReadableBuffer.java", "BodyUseAPI": [], "Fixed commit": "0bdbb7cf80e965212adaec4ea60a7e1a3804f4ac", "Url": "https://api.github.com/repos/ericgribkoff/grpc-java", "Date": "2017-08-24T19:34:16Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((PlayerMoveImplement.NUMBER_OF_PLAYERS.get()) > 1) { connectToBackup(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/217/buggy-version/P2PServer.src.PlayerMoveImplement.java", "BodyUseAPI": [], "Fixed commit": "8722aba92e5abf105845618ebbac6e948810b7ba", "Url": "https://api.github.com/repos/borngold/Distributed-System", "Date": "2012-10-01T03:32:19Z"},
{"Line": "=>487", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((columnWidths) != null) && ((columnWidths.length) > (i + 1))) { width = columnWidths[(i + 1)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7073/buggy-version/org.dawnsci.common.widgets.src.org.dawnsci.common.richbeans.components.selector.VerticalListEditor.java", "BodyUseAPI": [], "Fixed commit": "1b84702572d10c1f0de508a4236658033d13feb2", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2015-02-02T15:07:23Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.runtime.IConfigurationElement.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (subMenus.containsKey(cat)) subMenus.get(cat).add(action);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7073/buggy-version/org.dawnsci.plotting.src.org.dawnsci.plotting.PlottingActionBarManager.java", "BodyUseAPI": ["subMenus.get(cat).add(org.eclipse.jface.action.Action)", "java.util.Map<java.lang.String, org.dawnsci.plotting.MenuAction>.get(java.lang.String)"], "Fixed commit": "1b84702572d10c1f0de508a4236658033d13feb2", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2015-02-02T15:07:23Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isShort()) { return ((int) (value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/9078/buggy-version/hiriver-modules.mysql-proto.src.main.java.com.hiriver.unbiz.mysql.lib.protocol.binary.IntegerColumnTypeValueParser.java", "BodyUseAPI": [], "Fixed commit": "6c5f7d1d0624fa53810ef01a30e1a846d7eaab74", "Url": "https://api.github.com/repos/rolandhe/hiriver", "Date": "2016-07-14T02:57:45Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isShort()) { return java.lang.Integer.valueOf(((short) (value))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/9078/buggy-version/hiriver-modules.mysql-proto.src.main.java.com.hiriver.unbiz.mysql.lib.protocol.binary.IntegerColumnTypeValueParser.java", "BodyUseAPI": [], "Fixed commit": "6c5f7d1d0624fa53810ef01a30e1a846d7eaab74", "Url": "https://api.github.com/repos/rolandhe/hiriver", "Date": "2016-07-14T02:57:45Z"},
{"Line": "=>458", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["m_xFrame.getController().getModel().getURL()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (filename == null) { filename = \"_blank\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2256/buggy-version/src.cnr.isti.ContentAnalysisAddOn.java", "BodyUseAPI": [], "Fixed commit": "1c816994b29867d0db6b88594f3d86615bc6fe16", "Url": "https://api.github.com/repos/imatesiu/ContentAnalysisAddOn", "Date": "2016-05-31T12:20:48Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i <= 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8143/buggy-version/src.model.controllers.ItemController.java", "BodyUseAPI": [], "Fixed commit": "f96d378846dafe4a42dda1e93926f148b75b206b", "Url": "https://api.github.com/repos/caseymonc/hit", "Date": "2012-10-17T02:04:58Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getParcelableExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((message.getChatType()) == (EMMessage.ChatType.ChatRoom)) { findViewById(R.id.recall).setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2748/buggy-version/src.com.hyphenate.chatuidemo.ui.ContextMenuActivity.java", "BodyUseAPI": [], "Fixed commit": "8f4ab077836aa252718182f7fc5651e560ebf528", "Url": "https://api.github.com/repos/eastrain/sdkdemoapp3.0_android", "Date": "2017-03-24T02:39:35Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(net.minecraft.client.Minecraft.getMinecraft().isSingleplayer())) net.minecraft.client.Minecraft.getMinecraft().addScheduledTask(new java.lang.Runnable() { @java.lang.Override public void run() { com.creativemd.creativecore.common.packet.PacketHandler.sendPacketToServer(new com.creativemd.ingameconfigmanager.api.common.packets.RequestInformationPacket(branch)); } });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6970/buggy-version/src.main.java.com.creativemd.ingameconfigmanager.api.client.gui.SubGuiBranch.java", "BodyUseAPI": [], "Fixed commit": "a8e0a2ad523a11ca925f35663a88753ad53d65e3", "Url": "https://api.github.com/repos/CreativeMD/IGCM", "Date": "2016-08-11T16:05:09Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parent != (this)) { this.parent = parent; }else { throw new se701.A2SemanticsException(\"Classes cannot extend themselves\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3412/buggy-version/src.japa.parser.ast.symtab.ClassSymbol.java", "BodyUseAPI": [], "Fixed commit": "4f62c5c31ebfadc8213497f5a0c44dc9266592cc", "Url": "https://api.github.com/repos/ebal155/java_compiler", "Date": "2015-04-23T00:37:34Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (walktime < 0.0) { throw new java.lang.RuntimeException(\"negative walk time; should not happen; needs to be repaired\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7446/buggy-version/contribs.minibus.src.main.java.org.matsim.contrib.minibus.performance.raptor.RaptorDisutility.java", "BodyUseAPI": [], "Fixed commit": "194bf6e7c61fa2050ffd4861495eaa3be1c91bf4", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2017-08-31T16:46:09Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.openhft.chronicle.bytes.StreamingDataInput.readUnsignedByte()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((char3 & 192) != 128) throw new java.io.UTFDataFormatException((\"malformed input around byte \" + (java.lang.Integer.toHexString(char3))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2254/buggy-version/src.main.java.net.openhft.chronicle.bytes.AppendableUtil.java", "BodyUseAPI": ["java.lang.Integer.toHexString(int)"], "Fixed commit": "fecab5ccd11b5410e9ce0d66abdb35439f6a027b", "Url": "https://api.github.com/repos/OpenHFT/Chronicle-Bytes", "Date": "2016-04-08T17:51:43Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currNode) != null) { currNode.setX(((e.getX()) - ((currNode.getDiameter()) / 2))); currNode.setY(((e.getY()) - ((currNode.getDiameter()) / 2))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/484/buggy-version/src.Panel.java", "BodyUseAPI": [], "Fixed commit": "e941a9eb80a483537364b03f394117d2eeace7fa", "Url": "https://api.github.com/repos/Sharqosity/binarytreeception", "Date": "2017-10-17T14:02:15Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"unregister\".equals(action)) { return unregister(callbackContext); }else if (\"setAccessId\".equals(action)) { return setAccessId(args); }else if (\"setAccessKey\".equals(action)) { return setAccessKey(args); }else if (\"getToken\".equals(action)) { return getToken(callbackContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1558/buggy-version/src.android.Xinge.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "44a9152db3587d054bf1b0a9b43669e6a5145361", "Url": "https://api.github.com/repos/iiunknown/cordova.xinge", "Date": "2014-08-08T11:06:56Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (check) { check = false; }else { ListofFilms.add(film); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2538/buggy-version/app.src.main.java.com.example.anhnh.sliderdemo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e8e31f5378fd959e0172ce6949071a60db50bb03", "Url": "https://api.github.com/repos/hieuptSE310/Project", "Date": "2017-10-25T02:50:23Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.directory.api.ldap.model.message.LdapResult.getResultCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (resultCode == (org.apache.directory.api.ldap.model.message.ResultCodeEnum.PROTOCOL_ERROR)) { re = new org.identityconnectors.framework.common.exceptions.ConnectorException(((message + \": \") + (com.evolveum.polygon.connector.ldap.LdapUtil.formatLdapMessage(ldapResult)))); }else { re = new org.identityconnectors.framework.common.exceptions.ConnectorIOException(((message + \": \") + (com.evolveum.polygon.connector.ldap.LdapUtil.formatLdapMessage(ldapResult)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6852/buggy-version/src.main.java.com.evolveum.polygon.connector.ldap.LdapUtil.java", "BodyUseAPI": [], "Fixed commit": "ea65578c36a3c01b5e8714745ff98fcac30d1be8", "Url": "https://api.github.com/repos/Evolveum/connector-ldap", "Date": "2016-03-22T17:42:38Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((clusters.get(j).size()) > 0) { centroids.set(j, getCentroid(clusters.get(j))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2469/buggy-version/src.MyKMeans.java", "BodyUseAPI": ["java.util.ArrayList<java.util.ArrayList<java.lang.Float>>.set(int,java.util.ArrayList<java.lang.Float>)", "java.util.ArrayList<java.util.ArrayList<java.util.ArrayList<java.lang.Float>>>.get(int)", "MyKMeans.getCentroid(java.util.ArrayList<java.util.ArrayList<java.lang.Float>>)"], "Fixed commit": "562d2285481cc4af4e205fa142d0465061cdd730", "Url": "https://api.github.com/repos/edwinwijaya94/ML-Clustering", "Date": "2016-11-22T04:32:53Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (user != (loggedUser)) { user.setEntourageDisclaimerShown(loggedUser.isEntourageDisclaimerShown()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3900/buggy-version/app.src.main.java.social.entourage.android.authentication.AuthenticationController.java", "BodyUseAPI": ["social.entourage.android.api.model.User.setEntourageDisclaimerShown(loggedUser.isEntourageDisclaimerShown())"], "Fixed commit": "97d36e82d42fbbee776569876a419a72b39061b7", "Url": "https://api.github.com/repos/ReseauEntourage/entourage-android", "Date": "2016-06-09T15:27:03Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((line.length()) > 2) { x = (java.lang.Character.getNumericValue(line.charAt(2))) + 10; }else { x = java.lang.Character.getNumericValue(line.charAt(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/152/buggy-version/luffarshack.src.luffarshack.Player.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.Character.getNumericValue(char)", "java.lang.Character.getNumericValue(char)", "java.lang.String.charAt(int)"], "Fixed commit": "ac465abdbcbf88b76d349060fbaf86af27d51384", "Url": "https://api.github.com/repos/SvanteMartinsson/luffarshack", "Date": "2016-12-13T11:34:55Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { handleRequestPermissionsResult(requestCode, permissions, grantResults); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6758/buggy-version/permissionmanager.src.main.java.cn.jack.permissionmanager.PermissionFragment.java", "BodyUseAPI": [], "Fixed commit": "71a98f909929fe925c02d80dee7dc0b241c02042", "Url": "https://api.github.com/repos/Jack198x/PermissionManager", "Date": "2017-08-04T07:26:47Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listener) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6758/buggy-version/permissionmanager.src.main.java.cn.jack.permissionmanager.PermissionFragment.java", "BodyUseAPI": [], "Fixed commit": "71a98f909929fe925c02d80dee7dc0b241c02042", "Url": "https://api.github.com/repos/Jack198x/PermissionManager", "Date": "2017-08-04T07:26:47Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((operation) == (net.osmand.plus.download.LocalIndexesFragment.RESTORE_OPERATION)) { listAdapter.clear(); reloadIndexes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3576/buggy-version/OsmAnd.src.net.osmand.plus.download.LocalIndexesFragment.java", "BodyUseAPI": [], "Fixed commit": "1ddbc8c070b5cc226a65690daf1f5185bd7cca5b", "Url": "https://api.github.com/repos/Bars107/Osmand", "Date": "2014-11-17T12:30:15Z"},
{"Line": "=>715", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((skillUseInfo.getType()) == (cfvbaibai.cardfantasy.data.SkillType.\u9001\u8fd8)) { cfvbaibai.cardfantasy.engine.skill.Return.apply(this, skillUseInfo.getSkill(), attacker, defender); }else if ((skillUseInfo.getType()) == (cfvbaibai.cardfantasy.data.SkillType.\u732e\u796d)) { cfvbaibai.cardfantasy.engine.skill.Sacrifice.apply(this, skillUseInfo, attacker, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2276/buggy-version/workspace.CardFantasyCore.src.cfvbaibai.cardfantasy.engine.SkillResolver.java", "BodyUseAPI": ["cfvbaibai.cardfantasy.engine.SkillUseInfo.getSkill()", "cfvbaibai.cardfantasy.engine.SkillUseInfo.getType()", "cfvbaibai.cardfantasy.engine.skill.Sacrifice.apply(cfvbaibai.cardfantasy.engine.SkillResolver,cfvbaibai.cardfantasy.engine.SkillUseInfo,cfvbaibai.cardfantasy.engine.CardInfo,<nulltype>)", "cfvbaibai.cardfantasy.engine.skill.Return.apply(cfvbaibai.cardfantasy.engine.SkillResolver,skillUseInfo.getSkill(),cfvbaibai.cardfantasy.engine.CardInfo,cfvbaibai.cardfantasy.engine.CardInfo)"], "Fixed commit": "e997fe41d3bb5eb8e754a95a99b2c8df9cf0a1c9", "Url": "https://api.github.com/repos/cfvbaibai/CardFantasy", "Date": "2015-02-14T11:59:48Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tripIndex.containsKey(rd))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8116/buggy-version/app.com.conveyal.pulsar.TransferExtractor.java", "BodyUseAPI": [], "Fixed commit": "fea99d21e16b48a19fa7ba7a3f0c60228be1ac39", "Url": "https://api.github.com/repos/conveyal/pulsar", "Date": "2015-02-04T23:01:48Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(trip.service.activeOn(date))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8116/buggy-version/app.com.conveyal.pulsar.TransferExtractor.java", "BodyUseAPI": [], "Fixed commit": "fea99d21e16b48a19fa7ba7a3f0c60228be1ac39", "Url": "https://api.github.com/repos/conveyal/pulsar", "Date": "2015-02-04T23:01:48Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.stanford.nlp.dcoref.CorefChain.getRepresentativeMention()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((token.index()) < (reprMent.startIndex)) || ((token.index()) > (reprMent.endIndex))) { for (int i = reprMent.startIndex; i < (reprMent.endIndex); i++) { cs224n.MCsystems.CoreLabel matchedLabel = corefSentenceTokens.get((i - 1)); resolved.add(matchedLabel.word()); } }else resolved.add(token.word());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6218/buggy-version/java.src.cs224n.MCsystems.CalFeature.java", "BodyUseAPI": ["cs224n.MCsystems.CoreLabel.word()", "java.util.List<java.lang.String>.add(token.word())"], "Fixed commit": "65c42fef8ce9e2c56fbc369157dc56594a081d54", "Url": "https://api.github.com/repos/qiaojingy/MC", "Date": "2015-11-28T20:35:06Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kevin.jokeji.util.Fetcher.getJokes(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (jokes != null) { com.kevin.jokeji.cache.CacheHelper.saveObjectToDisk(mDiskLruCache, params[0], jokes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5652/buggy-version/src.com.kevin.jokeji.fragment.NewFragment.java", "BodyUseAPI": ["com.kevin.jokeji.cache.CacheHelper.saveObjectToDisk(com.kevin.jokeji.cache.DiskLruCache,java.lang.String,java.util.ArrayList<com.kevin.jokeji.beans.Joke>)"], "Fixed commit": "84ca1e8f6eb47c079abe48f4abfbe9704ef14b66", "Url": "https://api.github.com/repos/chenyi2013/JokeJi", "Date": "2015-04-09T02:36:31Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((marker) != null) && (!(getConfiguration().isDeleteAfterRead()))) { listObjectsRequest.setMarker(marker); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2908/buggy-version/components.camel-aws.src.main.java.org.apache.camel.component.aws.s3.S3Consumer.java", "BodyUseAPI": [], "Fixed commit": "b66dfe73ccb848b40287489cb0e38cced8b1683f", "Url": "https://api.github.com/repos/apache/camel", "Date": "2015-03-04T12:59:22Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getConfiguration().isDeleteAfterRead())) { marker = listObjects.getMarker(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2908/buggy-version/components.camel-aws.src.main.java.org.apache.camel.component.aws.s3.S3Consumer.java", "BodyUseAPI": [], "Fixed commit": "b66dfe73ccb848b40287489cb0e38cced8b1683f", "Url": "https://api.github.com/repos/apache/camel", "Date": "2015-03-04T12:59:22Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSearching) { displaySongs(view, assetsSearchList); }else { displaySongs(view, allAssetsSongsArrayList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/706/buggy-version/app.src.main.java.com.mobileallin.mysongapp.presentation.presenter.AssetsSongsPresenter.java", "BodyUseAPI": [], "Fixed commit": "12c8bc63baa8f54ab53e2064824aae760d605bb4", "Url": "https://api.github.com/repos/Dakkkk/MySongApp", "Date": "2017-12-05T10:05:27Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Router.getRoutingPacket()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (routingPacket != null) { for (Link outLink : outLinks) { if (!(outLink.isBusy())) { outLink.addPacket(routingPacket); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2788/buggy-version/src.Router.java", "BodyUseAPI": ["Link.addPacket(RoutingPacket)"], "Fixed commit": "c3289a66a0d36c8dfc18af1522a7332fa873d9c1", "Url": "https://api.github.com/repos/ToyDragon/SoftwareRouter", "Date": "2015-04-14T20:25:16Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stringBuffer.length()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7593/buggy-version/src.org.hlib4j.process.ProcessOutputReader.java", "BodyUseAPI": [], "Fixed commit": "e92b534f2a8383f8ebf272e789108da14f44c8ed", "Url": "https://api.github.com/repos/tneenot/Hephaistos4J", "Date": "2017-01-23T14:07:30Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((indexMarkerColour == (-1)) && (indexMarkerIndices == (-1))) { return dooyit.parser.AddCatParser.ADD_CATEGORY_TYPE.CREATE_NEW_CATEGORY_WITHOUT_COLOUR; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6975/buggy-version/src.dooyit.parser.AddCatParser.java", "BodyUseAPI": [], "Fixed commit": "0e81f81bc6fef910953fe339ad866d009dda08cd", "Url": "https://api.github.com/repos/cs2103jan2016-w15-4j/main", "Date": "2016-02-25T03:51:27Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lib.EMF.emf) != null) { lib.EMF.emf.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8319/buggy-version/src.java.lib.EMF.java", "BodyUseAPI": [], "Fixed commit": "0b4a93b1771bfff989819f9e39152aebd2676aac", "Url": "https://api.github.com/repos/parashar2013/P12zKHF2tg", "Date": "2014-03-21T15:24:21Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (force == false) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/534/buggy-version/jestful-commons.src.main.java.org.qfox.jestful.commons.io.MultipartOutputStream.java", "BodyUseAPI": [], "Fixed commit": "cbaef40de52c5f6539749d18df1525a9d9893e00", "Url": "https://api.github.com/repos/core-lib/jestful", "Date": "2016-05-10T09:15:03Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["thisArg.getExpression().getType(java.util.List<com.jetbrains.jetpad.vclang.term.expr.visitor.Binding>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (thisType == null) { assert false; }else { thisType = thisType.normalize(com.jetbrains.jetpad.vclang.term.expr.visitor.NormalizeVisitor.Mode.WHNF, myContext); if (thisType instanceof com.jetbrains.jetpad.vclang.term.expr.visitor.ClassCallExpression) { com.jetbrains.jetpad.vclang.term.expr.visitor.ClassCallExpression.ImplementStatement elem = ((com.jetbrains.jetpad.vclang.term.expr.visitor.ClassCallExpression) (thisType)).getImplementStatements().get(defCallExpr.getDefinition()); if ((elem != null) && ((elem.term) != null)) { if ((myMode) == (com.jetbrains.jetpad.vclang.term.expr.visitor.NormalizeVisitor.Mode.TOP)) { java.util.Collections.reverse(args); return Apps(elem.term, args.subList(1, args.size()).toArray(new com.jetbrains.jetpad.vclang.term.expr.visitor.ArgumentExpression[(args.size()) - 1])); }else { return visitApps(elem.term, args.subList(0, ((args.size()) - 1))); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7430/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.term.expr.visitor.NormalizeVisitor.java", "BodyUseAPI": ["com.jetbrains.jetpad.vclang.term.expr.visitor.Expression.normalize(com.jetbrains.jetpad.vclang.term.expr.visitor.NormalizeVisitor.Mode,java.util.List<com.jetbrains.jetpad.vclang.term.expr.visitor.Binding>)"], "Fixed commit": "d10e8a2f1bf17d1eda624a7f570d4b5b282a8dca", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2015-11-13T16:57:49Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (listeners.contains(listener)) listeners.remove(listener);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5604/buggy-version/src.wetsch.wirelessbarcodescannerserver.WirelessBarcodeScannerServer.java", "BodyUseAPI": ["java.util.HashSet<wetsch.wirelessbarcodescannerserver.BarcodeServerDataListener>.remove(wetsch.wirelessbarcodescannerserver.BarcodeServerDataListener)"], "Fixed commit": "5f8b66144b78bddda63881f89797db0c654fe242", "Url": "https://api.github.com/repos/CorruptCube/Java-Barcode-Scanner-Server", "Date": "2015-08-28T14:12:59Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(listeners.contains(listener))) listeners.add(listener);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5604/buggy-version/src.wetsch.wirelessbarcodescannerserver.WirelessBarcodeScannerServer.java", "BodyUseAPI": ["java.util.HashSet<wetsch.wirelessbarcodescannerserver.BarcodeServerDataListener>.add(wetsch.wirelessbarcodescannerserver.BarcodeServerDataListener)"], "Fixed commit": "5f8b66144b78bddda63881f89797db0c654fe242", "Url": "https://api.github.com/repos/CorruptCube/Java-Barcode-Scanner-Server", "Date": "2015-08-28T14:12:59Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((kbArticle.getKbFolderId()) == (com.liferay.knowledge.base.constants.KBFolderConstants.DEFAULT_PARENT_FOLDER_ID)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6576/buggy-version/modules.apps.knowledge-base.knowledge-base-web.src.main.java.com.liferay.knowledge.base.web.internal.selector.KBFolderKBArticleSelector.java", "BodyUseAPI": [], "Fixed commit": "0ab216030c81bcc08062077bf307ef57844f79dc", "Url": "https://api.github.com/repos/dacousalr/liferay-portal", "Date": "2017-03-29T07:52:07Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (constant instanceof java.lang.Long) { store.push(JvmTypes.T_LONG); }else if (constant instanceof java.lang.Float) { store.push(JvmTypes.T_FLOAT); }else if (constant instanceof java.lang.Double) { store.push(JvmTypes.T_DOUBLE); }else if (constant instanceof java.lang.String) { store.push(JvmTypes.JAVA_LANG_STRING); }else if (constant == null) { store.push(JvmTypes.T_NULL); }else if (constant instanceof jasm.lang.JvmType.Clazz) { store.push(JvmTypes.JAVA_LANG_CLASS); }else { throw new java.lang.RuntimeException(((((\"unknown constant encountered (\" + constant) + \",\") + (constant.getClass().getName())) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4110/buggy-version/src.jasm.verifier.TypeAnalysis.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.Object.getClass()"], "Fixed commit": "e9c4873a83b17fd3815484bb2665370ec730ed27", "Url": "https://api.github.com/repos/DavePearce/Jasm", "Date": "2013-08-25T05:29:18Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.ednovo.gooru.application.client.gin.AppClientFactory.getCurrentPlaceToken().equals(PlaceTokens.ASSESSMENT_PLAY)) || (org.ednovo.gooru.application.client.gin.AppClientFactory.getCurrentPlaceToken().equals(PlaceTokens.COLLECTION_PLAY))) { new org.ednovo.gooru.client.mvp.settings.DragDropAnimation(movablePanel, draggedElementStartLeft, draggedElementStartTop, draggedElementEndLeft, draggedElementEndTop).run(1000); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/9174/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.dnd.PickupDragController.java", "BodyUseAPI": [], "Fixed commit": "9a79c557d1611b1e54c205f7473dddafce68ac98", "Url": "https://api.github.com/repos/hari45/Gooru-Web", "Date": "2015-07-25T07:02:23Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == 0) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3124/buggy-version/app.src.main.java.com.julab.battletap.BluetoothBattle.java", "BodyUseAPI": [], "Fixed commit": "b9db7ec33d79817132b0762a094a519eff20b88d", "Url": "https://api.github.com/repos/Juma94/BattleTap", "Date": "2015-10-14T19:06:11Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < ((org.wildfly.swarm.proc.Measure.values().length) - 1)) sb.append(org.wildfly.swarm.proc.CSVCollector.SEP);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2690/buggy-version/src.main.java.org.wildfly.swarm.proc.CSVCollector.java", "BodyUseAPI": [], "Fixed commit": "0ecdb7de7e642994736e9b31426366f76ec016ee", "Url": "https://api.github.com/repos/heiko-braun/proc-mon", "Date": "2016-05-02T12:11:06Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.littlemathgenius.cordova.plugins.gameservices.GameServices.ACTION_TOGGLE_DEBUG.equals(action)) { toggleDebugLog(); }else if (com.littlemathgenius.cordova.plugins.gameservices.GameServices.ACTION_LOGIN.equals(action)) { cordova.getActivity().runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { if (!(gameHelper.isSignedIn())) { signIn(); } } }); }else if (com.littlemathgenius.cordova.plugins.gameservices.GameServices.ACTION_LOGOUT.equals(action)) { signOut(); }else if (com.littlemathgenius.cordova.plugins.gameservices.GameServices.ACTION_IS_SIGNEDIN.equals(action)) { }else if (com.littlemathgenius.cordova.plugins.gameservices.GameServices.ACTION_SUBMIT_SCORE.equals(action)) { }else if (com.littlemathgenius.cordova.plugins.gameservices.GameServices.ACTION_SUBMIT_SCORE_NOW.equals(action)) { }else if (com.littlemathgenius.cordova.plugins.gameservices.GameServices.ACTION_GET_PLAYER_SCORE.equals(action)) { }else if (com.littlemathgenius.cordova.plugins.gameservices.GameServices.ACTION_SHOW_ALL_LEADERBOARDS.equals(action)) { }else if (com.littlemathgenius.cordova.plugins.gameservices.GameServices.ACTION_UNLOCK_ACHIEVEMENT.equals(action)) { }else if (com.littlemathgenius.cordova.plugins.gameservices.GameServices.ACTION_UNLOCK_ACHIEVEMENT_NOW.equals(action)) { }else if (com.littlemathgenius.cordova.plugins.gameservices.GameServices.ACTION_INCREMENT_ACHIEVEMENT.equals(action)) { }else if (com.littlemathgenius.cordova.plugins.gameservices.GameServices.ACTION_INCREMENT_ACHIEVEMENT_NOW.equals(action)) { }else if (com.littlemathgenius.cordova.plugins.gameservices.GameServices.ACTION_SHOW_ACHIEVEMENTS.equals(action)) { }else if (com.littlemathgenius.cordova.plugins.gameservices.GameServices.ACTION_SHOW_PLAYER.equals(action)) { }else { android.util.Log.i(com.littlemathgenius.cordova.plugins.gameservices.GameServices.TAG, \"This action doesn't exist\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6524/buggy-version/src.android.GameServices.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "2195f7e2f99f4a5af1bf7c4f25b7cbcc0850e3a9", "Url": "https://api.github.com/repos/charlesfamu/cordova-game-services", "Date": "2017-07-20T03:12:20Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(progressBar.isShown())) { progressBar.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7531/buggy-version/app.src.main.java.com.jramilo.paginglistview.PagingListviewActivity.java", "BodyUseAPI": ["android.widget.ProgressBar.setVisibility(View.VISIBLE)"], "Fixed commit": "3ad89267212e9cbd821f731d92b6feaa01b3705a", "Url": "https://api.github.com/repos/jacobramilo/paging-listview", "Date": "2017-11-09T22:24:57Z"},
{"Line": "=>874", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mHeaderView) != null) removeView(mHeaderView);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7859/buggy-version/ptr-lib.src.in.srain.cube.views.ptr.PtrFrameLayout.java", "BodyUseAPI": [], "Fixed commit": "88d9f07f0b93667d51e41e977ef0cad438173c59", "Url": "https://api.github.com/repos/comtu/android-Ultra-Pull-To-Refresh", "Date": "2015-08-31T07:51:17Z"},
{"Line": "=>880", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mHeaderView) == header) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7859/buggy-version/ptr-lib.src.in.srain.cube.views.ptr.PtrFrameLayout.java", "BodyUseAPI": [], "Fixed commit": "88d9f07f0b93667d51e41e977ef0cad438173c59", "Url": "https://api.github.com/repos/comtu/android-Ultra-Pull-To-Refresh", "Date": "2015-08-31T07:51:17Z"},
{"Line": "=>883", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mHeaderView) != null) removeView(mHeaderView);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7859/buggy-version/ptr-lib.src.in.srain.cube.views.ptr.PtrFrameLayout.java", "BodyUseAPI": [], "Fixed commit": "88d9f07f0b93667d51e41e977ef0cad438173c59", "Url": "https://api.github.com/repos/comtu/android-Ultra-Pull-To-Refresh", "Date": "2015-08-31T07:51:17Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mHeaderView) != null) mHeaderView.offsetTopAndBottom(change);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7859/buggy-version/ptr-lib.src.in.srain.cube.views.ptr.PtrFrameLayout.java", "BodyUseAPI": [], "Fixed commit": "88d9f07f0b93667d51e41e977ef0cad438173c59", "Url": "https://api.github.com/repos/comtu/android-Ultra-Pull-To-Refresh", "Date": "2015-08-31T07:51:17Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, aplikasi.peserta.domain.Peserta>.get(p.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (px == null) { p.setId(dbPalsu.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2451/buggy-version/aplikasi-manajemen-peserta-service.src.main.java.aplikasi.peserta.service.impl.dummy.ManajemenPesertaServiceDummy.java", "BodyUseAPI": [], "Fixed commit": "319ea3ad52cb5f5d973f56190a410965498b6d92", "Url": "https://api.github.com/repos/endymuhardin/belajar-ws", "Date": "2011-09-28T09:07:58Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<javax.swing.JComboBox<java.lang.String>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((printer.getItemCount()) > 1) { printer.setSelectedIndex(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3328/buggy-version/src.org.montsuqi.client.PrinterConfigPanel.java", "BodyUseAPI": ["javax.swing.JComboBox.setSelectedIndex(int)"], "Fixed commit": "d82142967592aeb9f1d6e5900d71eb44bf7f0a8b", "Url": "https://api.github.com/repos/noborus/monsiaj", "Date": "2017-04-12T05:44:43Z"},
{"Line": "=>1171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloud.storage.dao.VolumeDao.findById(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((vol.getPath()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5380/buggy-version/engine.orchestration.src.org.apache.cloudstack.engine.orchestration.VolumeOrchestrator.java", "BodyUseAPI": [], "Fixed commit": "b24935f2f9f2a86c81e11079884fa34db7a24a1f", "Url": "https://api.github.com/repos/apache/cloudstack", "Date": "2013-10-13T03:40:14Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((query == null) || ((query.length()) == 0)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8897/buggy-version/src.main.java.com.alibaba.druid.pool.ValidConnectionCheckerAdapter.java", "BodyUseAPI": [], "Fixed commit": "5544c60801baa04355032eec2425489c54368903", "Url": "https://api.github.com/repos/mosoft521/druid", "Date": "2016-06-11T13:44:43Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isSwipeEnable())) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5756/buggy-version/library.src.main.java.com.tubb.smrv.SwipeHorizontalMenuLayout.java", "BodyUseAPI": [], "Fixed commit": "c3a7e299e064012c361dfd44246f17429634979b", "Url": "https://api.github.com/repos/pzgz/SwipeMenu", "Date": "2017-10-04T18:44:34Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["packet.getIntegerArrays().read(int)", "packet.getIntegerArrays().read(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (player.getWorld().isChunkLoaded(x[i], z[i])) { org.bukkit.Chunk chunk = player.getWorld().getChunkAt(x[i], z[i]); for (org.bukkit.block.BlockState tile : chunk.getTileEntities()) { if ((tile instanceof org.bukkit.block.Sign) && (!(au.com.addstar.signhider.SignHiderPlugin.canSee(player, tile.getX(), tile.getY(), tile.getZ(), false)))) mSender.add(tile.getX(), tile.getY(), tile.getZ(), 0, 0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6100/buggy-version/src.au.com.addstar.signhider.OrebfuscatorSignRemover.java", "BodyUseAPI": ["player.getWorld().getChunkAt(int,int)", "au.com.addstar.signhider.SignHiderPlugin.canSee(org.bukkit.entity.Player,tile.getX(),tile.getY(),tile.getZ(),boolean)", "org.bukkit.entity.Player.getWorld()"], "Fixed commit": "c259dc410d97baedc78bfffc90439cfa69b340a5", "Url": "https://api.github.com/repos/Schmoller/SignHider", "Date": "2014-01-16T03:52:26Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((progressView.getVisibility()) == (android.view.View.VISIBLE)) { backgroundTransitionGroup.startTransition(org.mozilla.focus.fragment.BrowserFragment.ANIMATION_DURATION); progressView.setProgress(progressView.getMax()); progressView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6959/buggy-version/app.src.main.java.org.mozilla.focus.fragment.BrowserFragment.java", "BodyUseAPI": ["org.mozilla.focus.widget.AnimatedProgressBar.setProgress(progressView.getMax())", "org.mozilla.focus.widget.AnimatedProgressBar.getMax()", "org.mozilla.focus.widget.AnimatedProgressBar.setVisibility(View.GONE)"], "Fixed commit": "1d092cd293e9c72b94823c052374489ff916cf9b", "Url": "https://api.github.com/repos/layely/focus-android", "Date": "2017-10-21T05:29:14Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.traccar.web.AsyncServlet.ASYNC_SESSIONS.get(userId)) == (this)) { org.traccar.web.AsyncServlet.ASYNC_SESSIONS.remove(userId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4947/buggy-version/src.org.traccar.web.AsyncServlet.java", "BodyUseAPI": ["java.util.Map<java.lang.Long, org.traccar.web.AsyncServlet.AsyncSession>.remove(long)"], "Fixed commit": "4a138cb8273e6a2078c0144ae592af81f563f71f", "Url": "https://api.github.com/repos/traccar/traccar", "Date": "2015-11-08T09:17:45Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.applicationPath) != null) { final org.w3c.dom.Element appPath = document.createElement(KHAM.ApplicationPath.tag); appPath.setTextContent(this.applicationPath); root.appendChild(appPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2841/buggy-version/src.hemera.core.environment.ham.HAM.java", "BodyUseAPI": [], "Fixed commit": "ff16229f1f393e1971510f15193df25e581bcd05", "Url": "https://api.github.com/repos/hemera/Hemera-Core-Environment", "Date": "2013-06-02T22:44:10Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((dinfo.numCats()) != 0) hex.deepwater.Log.info(((\"Exanding categorical columns to \" + ((dinfo.fullN()) - (dinfo.numNums()))) + \" dummy (one-hot encoded) columns.\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8013/buggy-version/h2o-algos.src.main.java.hex.deepwater.DeepWaterModel.java", "BodyUseAPI": [], "Fixed commit": "ade533b0e8e0fcbfa11998be9ecee18c34415ebf", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2016-09-21T03:59:56Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) <= (Build.VERSION_CODES.GINGERBREAD_MR1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6273/buggy-version/lib.src.main.java.com.github.orangegangsters.lollipin.lib.managers.AppLockImpl.java", "BodyUseAPI": [], "Fixed commit": "167b082a0d2b2fa71a6b3c1be0ecd6ece2c97a8f", "Url": "https://api.github.com/repos/omadahealth/LolliPin", "Date": "2015-01-16T23:54:48Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Node.getChildNodes()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((nl2.getLength()) > 0) { return nl2.item(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1116/buggy-version/bpel.src.main.java.org.switchyard.component.bpel.riftsaw.WSDLHelper.java", "BodyUseAPI": ["org.w3c.dom.NodeList.item(int)"], "Fixed commit": "084403c42db08d24bb5cc5aa2666c9baeaa49cb2", "Url": "https://api.github.com/repos/knrc/components", "Date": "2013-12-02T21:25:54Z"},
{"Line": "=>669", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.getValueAt(i, eu.kyotoproject.kafannotator.tableware.AnnotationTableModel.ROWSTATUS).equals(new java.lang.Boolean(true))) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3381/buggy-version/src.main.java.eu.kyotoproject.kafannotator.tableware.AnnotationTableModel.java", "BodyUseAPI": [], "Fixed commit": "dfb93411e827f1e352c22abd0d1eab6363f590bf", "Url": "https://api.github.com/repos/cltl/KafAnnotator", "Date": "2013-12-19T16:12:35Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDamageEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(PvPToggle.worldstatus.get(player.getWorld().getName()))) { damager.sendMessage(((org.bukkit.ChatColor.RED) + \"Global PvP is disabled!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/124/buggy-version/src.com.sleelin.pvptoggle.PvPToggleEntityListener.java", "BodyUseAPI": [], "Fixed commit": "dfab6507f17316894b1a0f968f0d83c937bb21f8", "Url": "https://api.github.com/repos/sleelin/PvPToggle", "Date": "2011-08-27T16:47:51Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sleelin.pvptoggle.PvPToggle.gpvpEnabled()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!genabled) { damager.sendMessage(((((org.bukkit.ChatColor.RED) + \"PvP is disabled in world \") + (player.getWorld().getName())) + \"!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/124/buggy-version/src.com.sleelin.pvptoggle.PvPToggleEntityListener.java", "BodyUseAPI": [], "Fixed commit": "dfab6507f17316894b1a0f968f0d83c937bb21f8", "Url": "https://api.github.com/repos/sleelin/PvPToggle", "Date": "2011-08-27T16:47:51Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.example.android.debtors.Activities.MainActivity.whenBackClickedOnDebtors)) { com.example.android.debtors.Activities.MainActivity.whenBackClickedOnDebtors = true; return; }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1047/buggy-version/app.src.main.java.com.example.android.debtors.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "406cd3b2431b9a82e439adbd9b524ff42cbe66ca", "Url": "https://api.github.com/repos/rafald121/Debtors", "Date": "2017-02-19T21:26:49Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menuItem.getItemId()) != (R.id.nav_debtors)) com.example.android.debtors.Activities.MainActivity.whenBackClickedOnDebtors = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1047/buggy-version/app.src.main.java.com.example.android.debtors.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "406cd3b2431b9a82e439adbd9b524ff42cbe66ca", "Url": "https://api.github.com/repos/rafald121/Debtors", "Date": "2017-02-19T21:26:49Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"Y\".equalsIgnoreCase(projectDescDetail.getIsUpdate()))) { boolean isAliasDescriptionAlreadyExisting = projectService.isAliasDescriptionAlreadyExisting(projectDescDetail.getAliasDescription()); if (isAliasDescriptionAlreadyExisting) { errors.rejectValue(\"aliasDescription\", \"aliasDescription.incorrect\", \"Alias Description Already Found To Be Existing.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8536/buggy-version/src.main.java.com.psk.pms.validator.ProjDescDetailValidator.java", "BodyUseAPI": ["com.psk.pms.model.ProjDescDetail.getAliasDescription()", "com.psk.pms.service.ProjectService.isAliasDescriptionAlreadyExisting(projectDescDetail.getAliasDescription())"], "Fixed commit": "23e4c0e8012ef5e784007791de9fba8087690d9b", "Url": "https://api.github.com/repos/devintqa/pms", "Date": "2015-05-10T03:03:06Z"},
{"Line": "=>682", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (merge) { query.put(VariantDBAdaptor.QueryParams.GENE.key(), geneId); org.opencb.commons.datastore.core.QueryResult queryResult = variationDBAdaptor.nativeGet(query, queryOptions); return createOkResponse(queryResult); }else { java.util.List<org.opencb.commons.datastore.core.Query> queries = createQueries(geneId, VariantDBAdaptor.QueryParams.GENE.key()); java.util.List<org.opencb.commons.datastore.core.QueryResult> queryResults = variationDBAdaptor.nativeGet(queries, queryOptions); for (int i = 0; i < (queries.size()); i++) { queryResults.get(i).setId(((java.lang.String) (queries.get(i).get(VariantDBAdaptor.QueryParams.GENE.key())))); } return createOkResponse(queryResults); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7881/buggy-version/cellbase-server.src.main.java.org.opencb.cellbase.server.ws.feature.GeneWSServer.java", "BodyUseAPI": [], "Fixed commit": "b9372508471c3415a0ce6d08c7b39e332ccb3196", "Url": "https://api.github.com/repos/opencb/cellbase", "Date": "2016-11-21T11:31:12Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.fileHandles.size()) == 0) && ((this.children.size()) > 0)) { java.util.Set<edu.yu.einstein.wasp.model.FileHandle> childrenFileHandles = new java.util.HashSet<edu.yu.einstein.wasp.model.FileHandle>(); for (edu.yu.einstein.wasp.model.FileGroup childfg : this.children) { childrenFileHandles.addAll(childfg.getFileHandles()); } return childrenFileHandles; }else return this.fileHandles;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6721/buggy-version/wasp-core.src.main.java.edu.yu.einstein.wasp.model.FileGroup.java", "BodyUseAPI": [], "Fixed commit": "0c0e0a9a306c7334dd8ab79ec3d111cffa76c4a1", "Url": "https://api.github.com/repos/WASP-System/central", "Date": "2015-03-04T23:30:57Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((flights == null) || ((flights.length) < 1)) { android.support.design.widget.Snackbar.make(mRecyclerView, R.string.hint_watch_flight, Snackbar.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1437/buggy-version/FlyBSCA.src.main.java.net.bertware.flybsca.WatchedFlightsFragment.java", "BodyUseAPI": [], "Fixed commit": "eb3aeeacee95fb9a0b680a762db8696c2e647472", "Url": "https://api.github.com/repos/Bertware/FlyBSCA", "Date": "2017-07-04T07:01:00Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (mDestination.equals(\"PRAGUE/PRAHA\")) { mDestination = \"Prague\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1437/buggy-version/FlyBSCA.src.main.java.net.bertware.flybsca.api.Flight.java", "BodyUseAPI": [], "Fixed commit": "eb3aeeacee95fb9a0b680a762db8696c2e647472", "Url": "https://api.github.com/repos/Bertware/FlyBSCA", "Date": "2017-07-04T07:01:00Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (thaumcraft.api.ThaumcraftApiHelper.hasDiscoveredAspect(player.getCommandSenderName(), aspect)) name = aspect.getName(); else name = net.minecraft.util.StatCollector.translateToLocal(\"tc.aspect.unknown\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4888/buggy-version/src.main.java.net.ixios.advancedthaumaturgy.items.ItemEtherealJar.java", "BodyUseAPI": ["thaumcraft.api.aspects.Aspect.getName()"], "Fixed commit": "f3e375494968d0737909d418506627c71104786c", "Url": "https://api.github.com/repos/Advanced-Thaumaturgy2/Advanced-Thaumaturgy2", "Date": "2016-10-01T19:03:13Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (po instanceof ws.prova.kernel2.ProvaConstant) { args.add(((ws.prova.kernel2.ProvaConstant) (po)).getObject()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3122/buggy-version/src.main.java.ws.prova.reference2.operators.ProvaFcalcImpl.java", "BodyUseAPI": [], "Fixed commit": "35b0d0a650bb63f502661152e3a90d04aea0ccbe", "Url": "https://api.github.com/repos/maltoe/prova", "Date": "2012-04-10T21:23:35Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAccelerating()) aiManager.onUpdateTasks();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/616/buggy-version/src.pneumaticCraft.common.entity.living.EntityDrone.java", "BodyUseAPI": [], "Fixed commit": "22bda700baefa90b96a403c426c96099ef2a189e", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2014-12-26T12:53:35Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((settings) == null) { throw new java.lang.IllegalStateException(\"NotificationSetting unavailable\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5137/buggy-version/src.main.java.pl.datamatica.traccar.api.providers.MailSender.java", "BodyUseAPI": [], "Fixed commit": "b8956481a9f31caafedeefe3e918e595a4f02b03", "Url": "https://api.github.com/repos/datamatica-pl/traccar-api", "Date": "2017-09-01T06:41:41Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(worldObj.isRemote)) checkCard();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/592/buggy-version/java.universalcoins.tile.TileBandit.java", "BodyUseAPI": [], "Fixed commit": "d2240252528e43f6fbd18c34197f404f163f7738", "Url": "https://api.github.com/repos/GameModsBR/UniversalCoinsMod", "Date": "2015-12-18T12:28:15Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (worldObj.isRemote) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/592/buggy-version/java.universalcoins.tile.TileBandit.java", "BodyUseAPI": [], "Fixed commit": "d2240252528e43f6fbd18c34197f404f163f7738", "Url": "https://api.github.com/repos/GameModsBR/UniversalCoinsMod", "Date": "2015-12-18T12:28:15Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.wso2.carbon.analytics.eventsink.internal.util.ServiceHolder.getStreamDefinitionStoreService().getStreamDefinition(streamId, tenantId)) != null) { org.wso2.carbon.analytics.eventsink.internal.util.ServiceHolder.getAnalyticsEventStreamListener().subscribeForStream(tenantId, streamId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7788/buggy-version/components.analytics-io.org.wso2.carbon.analytics.eventsink.src.main.java.org.wso2.carbon.analytics.eventsink.AnalyticsEventStoreDeployer.java", "BodyUseAPI": ["org.wso2.carbon.analytics.eventsink.internal.util.ServiceHolder.getAnalyticsEventStreamListener().subscribeForStream(int,java.lang.String)"], "Fixed commit": "a5b100f515dbd854506ed293cc6e27845c3c94e5", "Url": "https://api.github.com/repos/nirandaperera/carbon-analytics", "Date": "2015-05-22T10:52:48Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.analytics.eventsink.internal.AnalyticsEventStoreManager.getInstance().getAnalyticsEventStore(int,analyticsEventStore.getName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (existingEventStore != null) { for (java.lang.String aStream : existingEventStore.getEventSource().getStreamIds()) { if (!(aStream.equals(streamId))) { analyticsEventStore.getEventSource().getStreamIds().add(aStream); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7788/buggy-version/components.analytics-io.org.wso2.carbon.analytics.eventsink.src.main.java.org.wso2.carbon.analytics.eventsink.AnalyticsEventSinkServiceImpl.java", "BodyUseAPI": ["org.wso2.carbon.analytics.eventsink.AnalyticsEventStore.getEventSource()", "existingEventStore.getEventSource().getStreamIds()"], "Fixed commit": "a5b100f515dbd854506ed293cc6e27845c3c94e5", "Url": "https://api.github.com/repos/nirandaperera/carbon-analytics", "Date": "2015-05-22T10:52:48Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((requestId != null) && (!(requestId.isEmpty()))) responseData.setRequestId(org.extensiblecatalog.ncip.v2.koha.util.KohaUtil.createRequestId(requestId));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5504/buggy-version/connectors.koha.3.xx.trunk.jar.src.main.java.org.extensiblecatalog.ncip.v2.koha.KohaCancelRequestItemService.java", "BodyUseAPI": ["org.extensiblecatalog.ncip.v2.service.CancelRequestItemResponseData.setRequestId(org.extensiblecatalog.ncip.v2.koha.util.KohaUtil.createRequestId(requestId))", "org.extensiblecatalog.ncip.v2.koha.util.KohaUtil.createRequestId(java.lang.String)"], "Fixed commit": "63d63e50ec7d04b474e94e9b284b59a7f979a51b", "Url": "https://api.github.com/repos/eXtensibleCatalog/NCIP2-Toolkit", "Date": "2015-10-15T11:22:02Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((profile.getId()) == 0) { Window.Location.reload(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3628/buggy-version/src.de.hdm.partnerboerse.client.AddProfilePage.java", "BodyUseAPI": [], "Fixed commit": "2968058dd8186aebf8561c53b5fa842cd6a9be42", "Url": "https://api.github.com/repos/AliyeGokoz/Partnerboerse", "Date": "2016-07-02T13:37:54Z"},
{"Line": "=>609", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mHost.getLeft()) > (mMenuWidth)) || ((mHost.getLeft()) < 0)) { mHandler.removeCallbacks(this); if (open) { mState = org.kidfolk.flyinmenu.RootView.MENU_OPENED; }else { mState = org.kidfolk.flyinmenu.RootView.MENU_CLOSED; } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/218/buggy-version/library.src.org.kidfolk.flyinmenu.RootView.java", "BodyUseAPI": [], "Fixed commit": "8731a5db99cc055b7fc40ecbb967511202dce22c", "Url": "https://api.github.com/repos/veldyasov/android-FlyInMenu", "Date": "2012-09-23T12:02:07Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player.getLocation().getWorld().equals(endPoint.getWorld())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5969/buggy-version/src.main.java.net.aufdemrand.denizen.listeners.core.TravelListenerInstance.java", "BodyUseAPI": [], "Fixed commit": "cb4d7ce577091461da6a7bbe1921d6f174a7dd4e", "Url": "https://api.github.com/repos/aufdemrand/Denizen", "Date": "2013-03-17T19:35:19Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUris()) != null) { removeAllWatchContentUris(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1489/buggy-version/src.main.java.com.mridang.chromer.ImprovedExtension.java", "BodyUseAPI": [], "Fixed commit": "dc13342cea90262632f4798a6dabe139b134275a", "Url": "https://api.github.com/repos/mridang/dashclock-displays", "Date": "2015-03-29T09:09:49Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.leaniot.repository.AlarmTypeRepository.findByNameAndOrganizationId(info.getAlarmType(),org.getId())", "com.leaniot.repository.DeviceRepository.findByDeviceAccountUsername(user.getUsername())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((device.getDeviceType().getAlarmTypes()) == null) || (!(device.getDeviceType().getAlarmTypes().contains(alarmType)))) throw new com.leaniot.exception.NotFoundException(((\"alarm type: \" + (info.getAlarmType())) + \" in this device\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3758/buggy-version/IOTPlatform.src.main.java.com.leaniot.service.AlarmService.java", "BodyUseAPI": [], "Fixed commit": "8778ca7fa39e89246c80ea7fe05b4213b9307899", "Url": "https://api.github.com/repos/iLeanIot/IOTPlatform", "Date": "2017-11-14T15:29:32Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (condition.holdOnVar(vars[i])) { if (vars[i].removeValue(val, this)) { if (vars[i].isInstantiated()) { toCheck.push(i); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7021/buggy-version/src.main.java.org.chocosolver.solver.constraints.nary.alldifferent.conditions.PropCondAllDiffInst.java", "BodyUseAPI": ["vars[i].isInstantiated()", "vars[i].removeValue(int,org.chocosolver.solver.constraints.nary.alldifferent.conditions.PropCondAllDiffInst)", "org.chocosolver.solver.constraints.nary.alldifferent.conditions.PropCondAllDiffInst.push(int)"], "Fixed commit": "c7ec7b5c0d6ab84d3983985b615d1bbbbb27db8a", "Url": "https://api.github.com/repos/chocoteam/choco-solver", "Date": "2016-03-14T15:52:32Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (pathPrefix == null) { pathPrefix = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/527/buggy-version/server.src.catfeeder.Bootstrap.java", "BodyUseAPI": [], "Fixed commit": "2f319c8f8b40ec636211c8d858fc7722356d7691", "Url": "https://api.github.com/repos/michaelpearson/ECS-Cat-Feeder", "Date": "2016-09-02T11:57:15Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dp.hasDatePassed(endTime, endTime)) { endTime = dp.getNextDay(endTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5221/buggy-version/src.tucklife.parser.Parser.java", "BodyUseAPI": ["tucklife.parser.DateParser.getNextDay(java.util.Calendar)"], "Fixed commit": "98d2f81f7d429731e57a2e68236879077663c3aa", "Url": "https://api.github.com/repos/cs2103jan2016-w09-2j/main", "Date": "2016-04-08T09:44:08Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { nodesUpToOffset.remove(((nodesUpToOffset.size()) - 1)); return new org.structr.core.Result(nodesUpToOffset, size, true, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6347/buggy-version/structr.structr-core.src.main.java.org.structr.core.node.NodeFactory.java", "BodyUseAPI": [], "Fixed commit": "d1ccc16352791a71ae325caf2b9783af8d6d0b8a", "Url": "https://api.github.com/repos/structr/structr", "Date": "2012-10-30T10:59:56Z"},
{"Line": "=>1028", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.liferay.portal.util.PropsValues.DOCKBAR_MANAGE_LINKS_WINDOW_STATE_POPUP) { pageSettingsURL.setControlPanelCategory(((com.liferay.portal.events.ServicePreAction._CONTROL_PANEL_CATEGORY_PORTLET_PREFIX) + (com.liferay.portal.util.PortletKeys.LAYOUTS_ADMIN))); pageSettingsURL.setParameter(\"closeRedirect\", currentURL); pageSettingsURL.setWindowState(LiferayWindowState.POP_UP); }else { pageSettingsURL.setPlid(plid); pageSettingsURL.setParameter(\"redirect\", themeDisplay.getURLHome()); pageSettingsURL.setWindowState(WindowState.MAXIMIZED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2765/buggy-version/portal-impl.src.com.liferay.portal.events.ServicePreAction.java", "BodyUseAPI": [], "Fixed commit": "cca0b24a5036d0ac597a06ce9decd5a907ab3f2f", "Url": "https://api.github.com/repos/jonmak08/liferay-portal", "Date": "2013-01-23T23:18:10Z"},
{"Line": "=>1073", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.liferay.portal.util.PropsValues.DOCKBAR_MANAGE_LINKS_WINDOW_STATE_POPUP) { manageSiteMembershipsURL.setControlPanelCategory(((com.liferay.portal.events.ServicePreAction._CONTROL_PANEL_CATEGORY_PORTLET_PREFIX) + (com.liferay.portal.util.PortletKeys.SITE_MEMBERSHIPS_ADMIN))); manageSiteMembershipsURL.setWindowState(LiferayWindowState.POP_UP); }else { manageSiteMembershipsURL.setPlid(plid); manageSiteMembershipsURL.setParameter(\"redirect\", themeDisplay.getURLHome()); manageSiteMembershipsURL.setParameter(\"showBackURL\", java.lang.Boolean.FALSE.toString()); manageSiteMembershipsURL.setWindowState(WindowState.MAXIMIZED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2765/buggy-version/portal-impl.src.com.liferay.portal.events.ServicePreAction.java", "BodyUseAPI": [], "Fixed commit": "cca0b24a5036d0ac597a06ce9decd5a907ab3f2f", "Url": "https://api.github.com/repos/jonmak08/liferay-portal", "Date": "2013-01-23T23:18:10Z"},
{"Line": "=>1176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.liferay.portal.util.PropsValues.DOCKBAR_MANAGE_LINKS_WINDOW_STATE_POPUP) { siteMapSettingsURL.setControlPanelCategory(((com.liferay.portal.events.ServicePreAction._CONTROL_PANEL_CATEGORY_PORTLET_PREFIX) + (com.liferay.portal.util.PortletKeys.LAYOUTS_ADMIN))); siteMapSettingsURL.setParameter(\"closeRedirect\", currentURL); siteMapSettingsURL.setWindowState(LiferayWindowState.POP_UP); }else { siteMapSettingsURL.setPlid(plid); siteMapSettingsURL.setParameter(\"redirect\", themeDisplay.getURLHome()); siteMapSettingsURL.setWindowState(LiferayWindowState.MAXIMIZED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2765/buggy-version/portal-impl.src.com.liferay.portal.events.ServicePreAction.java", "BodyUseAPI": [], "Fixed commit": "cca0b24a5036d0ac597a06ce9decd5a907ab3f2f", "Url": "https://api.github.com/repos/jonmak08/liferay-portal", "Date": "2013-01-23T23:18:10Z"},
{"Line": "=>1131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.liferay.portal.util.PropsValues.DOCKBAR_MANAGE_LINKS_WINDOW_STATE_POPUP) { siteSettingsURL.setControlPanelCategory(((com.liferay.portal.events.ServicePreAction._CONTROL_PANEL_CATEGORY_PORTLET_PREFIX) + (com.liferay.portal.util.PortletKeys.SITE_SETTINGS))); siteSettingsURL.setParameter(\"closeRedirect\", currentURL); siteSettingsURL.setWindowState(LiferayWindowState.POP_UP); }else { siteSettingsURL.setPlid(plid); siteSettingsURL.setParameter(\"redirect\", themeDisplay.getURLHome()); siteSettingsURL.setParameter(\"showBackURL\", java.lang.Boolean.FALSE.toString()); siteSettingsURL.setWindowState(LiferayWindowState.MAXIMIZED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2765/buggy-version/portal-impl.src.com.liferay.portal.events.ServicePreAction.java", "BodyUseAPI": [], "Fixed commit": "cca0b24a5036d0ac597a06ce9decd5a907ab3f2f", "Url": "https://api.github.com/repos/jonmak08/liferay-portal", "Date": "2013-01-23T23:18:10Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (attr.containsKey(\"Host\")) { java.lang.String host = attr.get(\"Host\"); java.lang.String[] hostComponents = host.split(\":\"); if ((hostComponents.length) == 1) return hostComponents[0].equals(this.host); else if ((hostComponents.length) == 2) { int recvPort = java.lang.Integer.parseInt(hostComponents[1]); java.lang.String recvHost = hostComponents[0]; return (recvHost.equals(this.host)) && (recvPort == (this.port)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5117/buggy-version/src.HTTPParser.java", "BodyUseAPI": ["java.util.Hashtable<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "0ffcc2bd4a15f5624c9c79ae15396f14bb927e82", "Url": "https://api.github.com/repos/florinpapa/WebServer", "Date": "2016-06-28T12:39:52Z"},
{"Line": "=>1548", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (inputStream != null) { bytes = com.liferay.portal.kernel.util.FileUtil.getBytes(inputStream); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2404/buggy-version/portlets.wsrp-portlet.docroot.WEB-INF.src.com.liferay.wsrp.consumer.portlet.ConsumerPortlet.java", "BodyUseAPI": ["com.liferay.portal.kernel.util.FileUtil.getBytes(java.io.InputStream)"], "Fixed commit": "3dbaeba13974099ff9580cbbec58f87835c78514", "Url": "https://api.github.com/repos/lionah/liferay-plugins", "Date": "2011-09-08T14:41:03Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(folder.exists())) { folder.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5214/buggy-version/redcastlemedia.multitallented.bukkit.heromatchmaking.managers.InitManager.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "86a9160cf408d5b4819049032990666cab074192", "Url": "https://api.github.com/repos/Multitallented/HeroMatchMaking", "Date": "2012-05-08T20:15:35Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.verifier) == null) { this.verifier = getVerifier(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5452/buggy-version/security.oauth2.src.main.java.leap.oauth2.TokenVerifierFactory.java", "BodyUseAPI": [], "Fixed commit": "5199b1a2e8ebacf6e6eeb68075c35c0eabc1bb76", "Url": "https://api.github.com/repos/leapframework/framework", "Date": "2017-01-12T08:52:24Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["leap.web.action.DefaultActionStrategy.getControllerPaths(java.lang.Class<?>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parentPaths[0].endsWith(\"/\")) { return new java.lang.String[]{ (parentPaths[0]) + (leap.lang.path.Paths.prefixWithoutSlash(path)) }; }else { return new java.lang.String[]{ (parentPaths[0]) + (leap.lang.path.Paths.prefixWithSlash(path)) }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5452/buggy-version/web.core.src.main.java.leap.web.action.DefaultActionStrategy.java", "BodyUseAPI": [], "Fixed commit": "5199b1a2e8ebacf6e6eeb68075c35c0eabc1bb76", "Url": "https://api.github.com/repos/leapframework/framework", "Date": "2017-01-12T08:52:24Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((channel) == null) { setChannel(org.neo4j.driver.internal.net.ChannelFactory.create(address, securityPlan, timeoutMillis, logger)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1425/buggy-version/driver.src.main.java.org.neo4j.driver.internal.net.SocketClient.java", "BodyUseAPI": [], "Fixed commit": "fc297ffdb71a67620d29237d721884cb870864c3", "Url": "https://api.github.com/repos/zhenlineo/java-driver", "Date": "2017-01-18T09:57:03Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"undefined\".equalsIgnoreCase(tag.getValue())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/9140/buggy-version/src.main.java.io.jawg.osmcontributor.rest.mappers.PoiTagMapper.java", "BodyUseAPI": [], "Fixed commit": "fd16dcdf7deacd6476dbf70dce2da4f5fbe73a87", "Url": "https://api.github.com/repos/Capaldijo/osm-contributor", "Date": "2017-07-18T16:57:35Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(container.isCollected())) { com.tda367.parallax.view.Renderer3D.getInstance().addObjectToFrame(renderable3dObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/774/buggy-version/core.src.com.tda367.parallax.view.parallaxview.ContainerView.java", "BodyUseAPI": [], "Fixed commit": "bf0dd641bfd3f4534656a2f4add745ec6bc398c8", "Url": "https://api.github.com/repos/mackzoor/parallax", "Date": "2017-05-16T06:18:09Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["JObjective.getWeight()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (wt.equals(\"*\")) { wt = \"0.0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2938/buggy-version/src.DefineObjectivesPanel.java", "BodyUseAPI": [], "Fixed commit": "20a29949b70624711832445696efbb2c770d990d", "Url": "https://api.github.com/repos/ValueChart/ValueChartPlus", "Date": "2014-05-28T20:34:59Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { getWindow().setFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_NAVIGATION, WindowManager.LayoutParams.FLAG_TRANSLUCENT_NAVIGATION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6473/buggy-version/app.src.main.java.com.moon.myreadapp.ui.base.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "0a78e365ab9732f57e4c07eac8a811e167613067", "Url": "https://api.github.com/repos/moonChenHaohui/ANDROID-MVVM-RSS", "Date": "2016-04-06T16:47:58Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (before != 0) { com.yydcdut.rxmarkdown.span.MDOrderListSpan[] mdOrderListSpans = editable.getSpans(start, start, com.yydcdut.rxmarkdown.span.MDOrderListSpan.class); if ((mdOrderListSpans != null) && ((mdOrderListSpans.length) > 0)) { return mdOrderListSpans[0]; } return null; }else { if ((start + 1) > (editable.length())) { return null; } int addNumber = java.lang.Math.abs((after - before)); com.yydcdut.rxmarkdown.span.MDOrderListSpan[] mdOrderListSpans = editable.getSpans((start + addNumber), ((start + addNumber) + 1), com.yydcdut.rxmarkdown.span.MDOrderListSpan.class); if ((mdOrderListSpans != null) && ((mdOrderListSpans.length) > 0)) { return mdOrderListSpans[0]; } return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1676/buggy-version/rxmarkdown.src.main.java.com.yydcdut.rxmarkdown.edit.ListController.java", "BodyUseAPI": ["java.lang.Math.abs(int)"], "Fixed commit": "7919427c6febe6a9cd46a118ab53e874bad638cb", "Url": "https://api.github.com/repos/yydcdut/RxMarkdown", "Date": "2017-01-10T06:15:48Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isSessionUserAssignedToIssue(issue)) { addDropIssueButton(issue); }else { add(new org.apache.wicket.markup.html.form.Form(\"drop-issue-form\").setVisible(false)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7779/buggy-version/agile-apps.agile-app-issues.src.main.java.org.headsupdev.agile.app.issues.IssuePanel.java", "BodyUseAPI": [], "Fixed commit": "f1b532c4d04df1f57c6699abcc5bca73462c259b", "Url": "https://api.github.com/repos/headsupdev/agile", "Date": "2012-12-22T19:49:21Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isControlPV) updateWritable(editpart.getWidgetModel(), pvMap.get(pvPropID));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1544/buggy-version/applications.plugins.org.csstudio.opibuilder.src.org.csstudio.opibuilder.editparts.PVWidgetEditpartDelegate.java", "BodyUseAPI": [], "Fixed commit": "9262bf1a4fb5b843bca08c911809b65fdfcba940", "Url": "https://api.github.com/repos/ControlSystemStudio/cs-studio", "Date": "2013-05-17T14:54:32Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((element) == null) && (!(firstElement.containsExecutableCodeBeforeEndOfLine()))) { firstElement.appendAllBefore(line, null); }else { appendStartTag(segmentData); firstElement.appendAllBefore(line, element); appendEndTag(segmentData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8870/buggy-version/coverage.src.mockit.coverage.reporting.lineCoverage.LineSegmentsFormatter.java", "BodyUseAPI": ["mockit.coverage.reporting.lineCoverage.LineElement.appendAllBefore(java.lang.StringBuilder,<nulltype>)", "mockit.coverage.reporting.lineCoverage.LineElement.appendAllBefore(java.lang.StringBuilder,mockit.coverage.reporting.lineCoverage.LineElement)"], "Fixed commit": "2d5178dce8b9daa80a895fa283132e8410240092", "Url": "https://api.github.com/repos/jmockit/jmockit1", "Date": "2015-01-24T22:50:24Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((aParameter.eContainer()) instanceof de.gebit.integrity.dsl.Call) { tempMethodRef = ((de.gebit.integrity.dsl.Call) (aParameter.eContainer())).getDefinition().getFixtureMethod(); }else if ((aParameter.eContainer()) instanceof de.gebit.integrity.dsl.TableTest) { tempMethodRef = ((de.gebit.integrity.dsl.TableTest) (aParameter.eContainer())).getDefinition().getFixtureMethod(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6591/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.scoping.DSLScopeProvider.java", "BodyUseAPI": ["((de.gebit.integrity.dsl.Call) (aParameter.eContainer())).getDefinition()", "((de.gebit.integrity.dsl.TableTest) (aParameter.eContainer())).getDefinition().getFixtureMethod()", "((de.gebit.integrity.dsl.Call) (aParameter.eContainer())).getDefinition().getFixtureMethod()", "((de.gebit.integrity.dsl.TableTest) (aParameter.eContainer())).getDefinition()", "de.gebit.integrity.dsl.Parameter.eContainer()", "de.gebit.integrity.dsl.Parameter.eContainer()", "de.gebit.integrity.dsl.Parameter.eContainer()"], "Fixed commit": "4abd1b8b5d393eda2d006e6772e7c4e0d72355cb", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2016-01-13T09:44:43Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (l < 2) return 0; else for (int i = 0; i < l; i++) { array[i] = y % 10; y /= 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6271/buggy-version/mobile.src.main.java.tuilmenau.androidclock.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "203cbd49dddf70d1d5439e6264a4d0560533789f", "Url": "https://api.github.com/repos/siluanSF/ZuseClock", "Date": "2017-03-15T00:09:14Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (confidenceSum > 0) beats[(numberOfBeats++)] = (com.google.common.math.DoubleMath.roundToInt(((beatSum / confidenceSum) * 0.2), java.math.RoundingMode.HALF_UP)) + 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6949/buggy-version/src.main.java.ch.hsr.mixtape.processing.temporal.TemporalFeaturesExtractor.java", "BodyUseAPI": ["com.google.common.math.DoubleMath.roundToInt(double,java.math.RoundingMode)"], "Fixed commit": "193e3ffa99564396bd490b5c9d210e52ca42d729", "Url": "https://api.github.com/repos/mrgimo/mixtape-core", "Date": "2013-06-13T06:10:01Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["yahoofinance.Stock.getQuote()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (quote == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4280/buggy-version/app.src.main.java.com.udacity.stockhawk.sync.QuoteSyncJob.java", "BodyUseAPI": [], "Fixed commit": "c853fdbcf2aa950e15eb1c4e28478fe3c31cdc04", "Url": "https://api.github.com/repos/ordasf/stock-hawk", "Date": "2017-04-19T20:50:52Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentPlayer.isPlayerBanckrupt()) { pC.endTurn(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3287/buggy-version/src.Game.GameController.java", "BodyUseAPI": [], "Fixed commit": "8e2aba04a7ad888760fbdff9292fc7bf6fb26dea", "Url": "https://api.github.com/repos/Quaade94/13_CDIO_FINAL", "Date": "2016-01-15T11:58:41Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((english.equals(\"\")) || (spanish.equals(\"\"))) return \"Null/Empty values not allowed\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6925/buggy-version/eng-spanish-dict.src.controllers.DictEngine.java", "BodyUseAPI": [], "Fixed commit": "1c1d0fd8d03f7780e6bbb3a6c8c3486f33e1c4d7", "Url": "https://api.github.com/repos/mathana96/data-structures-java", "Date": "2017-03-01T14:03:26Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isThreadSafe) { object = new java.lang.Object(); }else { object = this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1254/buggy-version/src.main.java.io.s4.core.ProcessingElement.java", "BodyUseAPI": [], "Fixed commit": "c4c72da6f1cdf75e5e4b69723aac6045938b85c9", "Url": "https://api.github.com/repos/leoneu/s4-piper", "Date": "2011-09-17T23:24:01Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((currentPermission.getAccessKey()) != null) && ((currentPermission.getAccessKey().getUser().getRole()) != (com.devicehive.model.enums.UserRole.ADMIN))) { if (com.devicehive.model.AvailableActions.getAdminActions().contains(allowedAction.getValue())) { permissionsToRemove.add(currentPermission); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7871/buggy-version/src.main.java.com.devicehive.auth.CheckPermissionsHelper.java", "BodyUseAPI": ["java.util.Set<com.devicehive.model.AccessKeyPermission>.add(com.devicehive.model.AccessKeyPermission)"], "Fixed commit": "a2180d00a5e2b728faaffd83b589f05a57c4a887", "Url": "https://api.github.com/repos/devicehive/devicehive-java-server", "Date": "2015-09-25T22:02:01Z"},
{"Line": "=>614", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((key) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7679/buggy-version/addons.indexer.src.main.java.org.commonjava.aprox.indexer.IndexHandler.java", "BodyUseAPI": [], "Fixed commit": "81ac7f8df75325be2e58b3949eb32e9e335d0d2e", "Url": "https://api.github.com/repos/jdcasey/indy", "Date": "2015-03-25T16:00:32Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.commonjava.aprox.model.core.StoreKey.fromString(event.getPayload())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (storeKey == null) { logger.warn(\"No StoreKey found in payload of: {}.\", event); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7679/buggy-version/addons.indexer.src.main.java.org.commonjava.aprox.indexer.IndexHandler.java", "BodyUseAPI": [], "Fixed commit": "81ac7f8df75325be2e58b3949eb32e9e335d0d2e", "Url": "https://api.github.com/repos/jdcasey/indy", "Date": "2015-03-25T16:00:32Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bob.sun.bender.utils.AIDLDumper.isPlaying(playerService)) { intent = new android.content.Intent(this, bob.sun.bender.service.PlayerService.class); intent.putExtra(\"CMD\", PlayerService.CMD_PAUSE); }else { bob.sun.bender.model.SongBean current = bob.sun.bender.utils.AIDLDumper.getCurrentSong(playerService); if ((current != null) && ((current.getId()) != (-1))) { intent = new android.content.Intent(this, bob.sun.bender.service.PlayerService.class); intent.putExtra(\"CMD\", PlayerService.CMD_RESUME); }else if (((lastSongBean) != null) && ((lastSongBean.getId()) != (-1))) { intent = new android.content.Intent(this, bob.sun.bender.service.PlayerService.class); intent.putExtra(\"CMD\", PlayerService.CMD_PLAY); intent.putExtra(\"DATA\", ((android.os.Parcelable) (lastSongBean))); }else { intent = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1105/buggy-version/app.src.main.java.bob.sun.bender.MainActivity.java", "BodyUseAPI": ["bob.sun.bender.utils.AIDLDumper.getCurrentSong(bob.sun.bender.PlayerServiceAIDL)"], "Fixed commit": "412bb6a069965751f12fba85c923968cdbcc7e87", "Url": "https://api.github.com/repos/SpongeBobSun/Prodigal", "Date": "2017-02-11T13:57:02Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (limit > 0) query.setMaxResults(limit);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5859/buggy-version/gemma-core.src.main.java.ubic.gemma.persistence.service.expression.experiment.ExpressionExperimentDaoImpl.java", "BodyUseAPI": ["ubic.gemma.persistence.service.expression.experiment.Query.setMaxResults(java.lang.Integer)"], "Fixed commit": "535dc59058a766a484538287171df602077084fe", "Url": "https://api.github.com/repos/PavlidisLab/Gemma", "Date": "2017-09-07T22:40:12Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (limit > 0) query.setMaxResults(limit);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5859/buggy-version/gemma-core.src.main.java.ubic.gemma.persistence.service.expression.experiment.ExpressionExperimentDaoImpl.java", "BodyUseAPI": ["ubic.gemma.persistence.service.expression.experiment.Query.setMaxResults(java.lang.Integer)"], "Fixed commit": "535dc59058a766a484538287171df602077084fe", "Url": "https://api.github.com/repos/PavlidisLab/Gemma", "Date": "2017-09-07T22:40:12Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (limit > 0) query.setMaxResults(limit);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5859/buggy-version/gemma-core.src.main.java.ubic.gemma.persistence.service.expression.experiment.ExpressionExperimentDaoImpl.java", "BodyUseAPI": ["ubic.gemma.persistence.service.expression.experiment.Query.setMaxResults(int)"], "Fixed commit": "535dc59058a766a484538287171df602077084fe", "Url": "https://api.github.com/repos/PavlidisLab/Gemma", "Date": "2017-09-07T22:40:12Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (limit > 0) query.setMaxResults(limit);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5859/buggy-version/gemma-core.src.main.java.ubic.gemma.persistence.service.expression.experiment.ExpressionExperimentDaoImpl.java", "BodyUseAPI": ["ubic.gemma.persistence.service.expression.experiment.Query.setMaxResults(java.lang.Integer)"], "Fixed commit": "535dc59058a766a484538287171df602077084fe", "Url": "https://api.github.com/repos/PavlidisLab/Gemma", "Date": "2017-09-07T22:40:12Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (limit > 0) query.setMaxResults(limit);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5859/buggy-version/gemma-core.src.main.java.ubic.gemma.persistence.service.expression.experiment.ExpressionExperimentDaoImpl.java", "BodyUseAPI": ["ubic.gemma.persistence.service.expression.experiment.Query.setMaxResults(int)"], "Fixed commit": "535dc59058a766a484538287171df602077084fe", "Url": "https://api.github.com/repos/PavlidisLab/Gemma", "Date": "2017-09-07T22:40:12Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (limit > 0) query.setMaxResults(limit);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5859/buggy-version/gemma-core.src.main.java.ubic.gemma.persistence.service.expression.experiment.ExpressionExperimentDaoImpl.java", "BodyUseAPI": ["ubic.gemma.persistence.service.expression.experiment.Query.setMaxResults(java.lang.Integer)"], "Fixed commit": "535dc59058a766a484538287171df602077084fe", "Url": "https://api.github.com/repos/PavlidisLab/Gemma", "Date": "2017-09-07T22:40:12Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((view.equals(mImageButtonDnaUp)) || (view.equals(mImageButtonDnaDown))) { mListener.onMainInterfaceEvent(ui.monstermain.MonsterMainInterfaceManager.EventMode.EVENT_TOUCH_DNA_UP_OR_DOWN_STOP, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1787/buggy-version/app.src.main.java.ui.monstermain.MonsterMainInterfaceManager.java", "BodyUseAPI": [], "Fixed commit": "8e32cb6a7a72613777a51f3a2a09477c96db7b0d", "Url": "https://api.github.com/repos/gemstone5/Gemster", "Date": "2016-12-10T07:22:26Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(user.isAdmin())) { admin.setVisible(false); adminLabel.setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2967/buggy-version/client.src.Controller.EditUserController.java", "BodyUseAPI": [], "Fixed commit": "301ad847a372f4ca477a2660178fbe98234b3edb", "Url": "https://api.github.com/repos/larseen/kommd-calender", "Date": "2015-04-09T14:48:33Z"},
{"Line": "=>1836", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isWellSampleDataSelection(selected)) { return; }else if (selected instanceof omero.gateway.model.DataObject) { org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor visitor = new org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor(parent, ((omero.gateway.model.DataObject) (selected))); accept(visitor); foundNode = visitor.getSelectedNode(); if (foundNode != null) { if (multiSelection) model.addFoundNode(foundNode); else model.setSelectedDisplay(foundNode, true); view.setFoundNode(model.getSelectedDisplays()); }else view.setFoundNode(null); }else if (selected instanceof org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay) { foundNode = ((org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay) (selected)); if (multiSelection) model.addFoundNode(foundNode); else model.setSelectedDisplay(foundNode, true); view.setFoundNode(model.getSelectedDisplays()); }else if (selected instanceof java.util.List) { org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor visitor = new org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor(parent, ((java.util.List<omero.gateway.model.DataObject>) (selected))); accept(visitor); java.util.List<org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay> nodes = visitor.getSelectedNodes(); if ((nodes.size()) == 0) { view.setFoundNode(null); }else if ((nodes.size()) == 1) { model.setSelectedDisplay(nodes.get(0), true); view.setFoundNode(model.getSelectedDisplays()); }else { model.setSelectedDisplay(null, true); java.util.Iterator<org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay> i = nodes.iterator(); while (i.hasNext()) model.addFoundNode(i.next()); view.setFoundNode(model.getSelectedDisplays()); } }else if (selected instanceof java.lang.String) { model.setSelectedDisplay(null, true); view.setFoundNode(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1733/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.agents.treeviewer.browser.BrowserComponent.java", "BodyUseAPI": [], "Fixed commit": "4e8323b4c88fbb1e55cbbc916eed3b1df7d8515c", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2016-05-16T02:32:35Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fieldName.equals(\"this\")) { field = new org.jboss.errai.ioc.rebind.ioc.codegen.meta.impl.build.BuildMetaField(null, null, org.jboss.errai.ioc.rebind.ioc.codegen.builder.impl.Scope.Private, statement.getType(), \"this\"); }else { field = statement.getType().getField(fieldName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2183/buggy-version/errai-ioc.src.main.java.org.jboss.errai.ioc.rebind.ioc.codegen.builder.callstack.LoadField.java", "BodyUseAPI": ["statement.getType().getField(java.lang.String)"], "Fixed commit": "41ed1b78492c8e1f55372c64978479188b9e0446", "Url": "https://api.github.com/repos/errai/errai", "Date": "2011-09-06T16:19:53Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.SwingUtilities.getWindowAncestor(getDefaultCDockable().getContentPane())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (w instanceof java.awt.Frame) { java.awt.Frame f = ((java.awt.Frame) (w)); f.setState(java.awt.Frame.NORMAL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2083/buggy-version/src.main.java.com.inqwell.any.client.dock.AnyCDockable.java", "BodyUseAPI": [], "Fixed commit": "b0e4457396dbee6e8c196e2bf8fbfc35ad68ce4f", "Url": "https://api.github.com/repos/inqwell/inq", "Date": "2016-10-10T15:44:51Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (picUrlList.isEmpty()) { picUrlList.add(\"http://www.tekbroaden.com/youjoin-server/upload/ic_account_default.png\"); }else if (picUrlList.get(0).equals(\"\")) { picUrlList.remove(0); picUrlList.add(\"http://www.tekbroaden.com/youjoin-server/upload/ic_account_default.png\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8938/buggy-version/app.src.main.java.me.zq.youjoin.utils.StringUtils.java", "BodyUseAPI": ["java.util.List<java.lang.String>.remove(int)", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "5530b495f8c5fc25ff2dcc79bd4d518e51a8f035", "Url": "https://api.github.com/repos/FreedomZZQ/YouJoin-Android", "Date": "2016-03-17T14:56:04Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (temp2 > (itemView.getWidth())) temp2 = itemView.getWidth();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8120/buggy-version/app.src.main.java.shivamjindal.remindthere.MainFragment.java", "BodyUseAPI": ["android.view.View.getWidth()"], "Fixed commit": "6b47c893304086977e57fcd34684cef0aba02a15", "Url": "https://api.github.com/repos/shivam-jindal/RemindThere", "Date": "2017-04-18T01:01:33Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (temp > (itemView.getWidth())) temp = itemView.getWidth();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8120/buggy-version/app.src.main.java.shivamjindal.remindthere.MainFragment.java", "BodyUseAPI": ["android.view.View.getWidth()"], "Fixed commit": "6b47c893304086977e57fcd34684cef0aba02a15", "Url": "https://api.github.com/repos/shivam-jindal/RemindThere", "Date": "2017-04-18T01:01:33Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(ServiceDiscoveryConfigItem.LABELS.getCattleName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (labels != null) { java.util.Map<java.lang.String, java.lang.String> labelsMap = new java.util.HashMap<java.lang.String, java.lang.String>(); labelsMap.putAll(((java.util.Map<java.lang.String, java.lang.String>) (labels))); configMap.put(ServiceDiscoveryConfigItem.LABELS.getCattleName(), labelsMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8167/buggy-version/code.iaas.service-discovery.server.src.main.java.io.cattle.platform.servicediscovery.service.impl.ServiceDiscoveryServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "2bb2d4759ca26be4abeddd8b04bae2d49dd20b31", "Url": "https://api.github.com/repos/sonchang/cattle", "Date": "2015-06-02T23:43:17Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (data.isEmpty()) { data.add(new java.util.ArrayList<>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/268/buggy-version/smoothcsv-app-modules.smoothcsv-core.src.main.java.com.smoothcsv.core.csvsheet.CsvSheetSupport.java", "BodyUseAPI": ["java.util.List<java.util.List>.add(java.util.ArrayList<>)"], "Fixed commit": "1014ecbd1a2f143ce6b0c99f75428783890e08ed", "Url": "https://api.github.com/repos/kohii/smoothcsv", "Date": "2016-07-25T14:21:45Z"},
{"Line": "=>598", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedConfiguration.getId().equals(fcid)) { selectedConfiguration = configSet.getDefault(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/120/buggy-version/core.src.net.sf.openrocket.rocketcomponent.Rocket.java", "BodyUseAPI": [], "Fixed commit": "d4de355504d76c396bff41c7ef41c91606dea133", "Url": "https://api.github.com/repos/teyrana/openrocket", "Date": "2016-04-17T15:00:48Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (syllabifier == null) { syllabifier = new marytts.modules.phonemiser.Syllabifier(this.allophoneSet, this.removeTrailingOneFromPhones); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/74/buggy-version/marytts-runtime.src.main.java.marytts.modules.JPhonemiser.java", "BodyUseAPI": [], "Fixed commit": "5a33e2c5a0b6a61ec21aac9778014f0469582679", "Url": "https://api.github.com/repos/marytts-it/marytts", "Date": "2012-10-26T15:52:30Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((plugin) == null) || ((plugin.getDatabase()) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5436/buggy-version/src.main.java.at.pavlov.cannons.dao.PersistenceDatabase.java", "BodyUseAPI": [], "Fixed commit": "04cc67c10928094c4e22fe988799345da805c2e2", "Url": "https://api.github.com/repos/DerPavlov/Cannons", "Date": "2015-07-02T21:07:33Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dpfmanager.conformancechecker.tiff.policy_checker.Rule.getOperator()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (op.equals(\"<\")) op = \"&lt;\"; else if (op.equals(\">\")) op = \"&gt;\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6014/buggy-version/src.main.java.dpfmanager.conformancechecker.tiff.policy_checker.Schematron.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "1ece20182be87ef43267e68bae5c7c7850e96212", "Url": "https://api.github.com/repos/EasyinnovaSL/DPFManager", "Date": "2016-10-27T09:27:52Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.telegram.telegrambots.api.objects.Message.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (msgText.endsWith(botNameSuffix)) { msgText = msgText.replace(botNameSuffix, \"\"); logger.info(((\"Removed bot name suffix \" + (botNameSuffix)) + \" from the original message.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4939/buggy-version/im-sessions.marvin-telegram-im-session.src.main.java.com.beolnix.marvin.im.telegram.telegram.TelegramBot.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "267a19d6449ffe512f9e00fd837ef68cccad0b7b", "Url": "https://api.github.com/repos/beolnix/marvin", "Date": "2017-04-22T02:40:01Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MobMatcher.Category.fromName(java.lang.String)", "org.bukkit.entity.EntityType.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((type == null) && (possibleCategory == null)) { if (mobID != null) { type = org.bukkit.entity.EntityType.fromId(mobID); if (type == null) throw com.comphenix.xp.parser.ParsingException.fromFormat(\"Unable to find a mob with the ID %s\", mobID); }else { type = org.bukkit.entity.EntityType.fromName(text); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8411/buggy-version/ExperienceMod.src.com.comphenix.xp.parser.text.MobEntityTypeParser.java", "BodyUseAPI": [], "Fixed commit": "083b15830abd9dccbaa02a5fd44f15b1a7a48e52", "Url": "https://api.github.com/repos/aadnk/ExperienceMod", "Date": "2012-07-25T20:31:53Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (world == null) { throw new java.lang.IllegalArgumentException((\"World not found: \" + world)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1704/buggy-version/src.main.java.com.turt2live.antishare.cuboid.Cuboid.java", "BodyUseAPI": [], "Fixed commit": "a8e87fb6ef8a024c886d408b4565238132ad35c2", "Url": "https://api.github.com/repos/turt2live/AntiShare", "Date": "2013-01-21T00:05:02Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rewards) == null) { rewards = new java.util.ArrayList<com.Ben12345rocks.AdvancedCore.Objects.Reward>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/131/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Objects.RewardHandler.java", "BodyUseAPI": [], "Fixed commit": "9c95c3179ba673a9de7d0bc91789c6a60b0e03e0", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2016-11-02T00:25:31Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((preferenceProvider.getLastChange()) == 0) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2038/buggy-version/src.main.java.com.mat.hyb.school.kgk.sas.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f923de31f22bec0e7e4b02bb6bada3c6385e24d3", "Url": "https://api.github.com/repos/matoushybl/iSASv2", "Date": "2014-08-31T19:16:08Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((us.id) != id) { flash(\"failure\", ((\"User \" + (us.username)) + \" already exists\")); play.Logger.error(((\"Username \" + (us.username)) + \" already exists\")); return badRequest(edituser.render(id, userForm, controllers.User.getUsername(java.lang.Integer.parseInt(session(\"userid\"))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2957/buggy-version/src.webchat.app.controllers.AdminController.java", "BodyUseAPI": ["controllers.AdminController.badRequest(edituser.render(id, userForm, controllers.User.getUsername(java.lang.Integer.parseInt(session(\"userid\")))))", "controllers.AdminController.render(java.lang.Long,controllers.Form<controllers.User>,controllers.User.getUsername(java.lang.Integer.parseInt(session(\"userid\"))))", "controllers.AdminController.flash(java.lang.String,((\"User \" + (us.username)) + \" already exists\"))", "play.Logger.error(((\"Username \" + (us.username)) + \" already exists\"))"], "Fixed commit": "a62bd876b30da0105be3be2507ab2a899b9ec210", "Url": "https://api.github.com/repos/Raydiation/bif4-itp", "Date": "2012-06-20T15:46:32Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (fileName.startsWith(\"-\")) { throw new java.util.NoSuchElementException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6847/buggy-version/phonebill.src.main.java.edu.pdx.cs410J.eschott.CommandLineParser.java", "BodyUseAPI": [], "Fixed commit": "79233229c0f09f7b275afd8035293464d98f3dc4", "Url": "https://api.github.com/repos/schottec/cs410J", "Date": "2015-07-17T18:12:16Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((member) != null ? !(member.equals(that.member)) : (that.member) != null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7789/buggy-version/hazelcast.src.main.java.com.hazelcast.cache.impl.CachePartitionEventData.java", "BodyUseAPI": [], "Fixed commit": "55f37030821de1889f622fcf2411246c60c510c2", "Url": "https://api.github.com/repos/pveentjer/hazelcast", "Date": "2016-05-03T17:42:21Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == o) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7789/buggy-version/hazelcast.src.main.java.com.hazelcast.cache.impl.CachePartitionEventData.java", "BodyUseAPI": [], "Fixed commit": "55f37030821de1889f622fcf2411246c60c510c2", "Url": "https://api.github.com/repos/pveentjer/hazelcast", "Date": "2016-05-03T17:42:21Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(o instanceof com.hazelcast.cache.impl.CachePartitionEventData)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7789/buggy-version/hazelcast.src.main.java.com.hazelcast.cache.impl.CachePartitionEventData.java", "BodyUseAPI": [], "Fixed commit": "55f37030821de1889f622fcf2411246c60c510c2", "Url": "https://api.github.com/repos/pveentjer/hazelcast", "Date": "2016-05-03T17:42:21Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((partitionId) != (that.partitionId)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7789/buggy-version/hazelcast.src.main.java.com.hazelcast.cache.impl.CachePartitionEventData.java", "BodyUseAPI": [], "Fixed commit": "55f37030821de1889f622fcf2411246c60c510c2", "Url": "https://api.github.com/repos/pveentjer/hazelcast", "Date": "2016-05-03T17:42:21Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(super.equals(o))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7789/buggy-version/hazelcast.src.main.java.com.hazelcast.cache.impl.CachePartitionEventData.java", "BodyUseAPI": [], "Fixed commit": "55f37030821de1889f622fcf2411246c60c510c2", "Url": "https://api.github.com/repos/pveentjer/hazelcast", "Date": "2016-05-03T17:42:21Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.name) == null) || ((this.email) == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5468/buggy-version/app.src.main.java.com.zulip.android.models.Person.java", "BodyUseAPI": [], "Fixed commit": "2ba0192431f62be66c346c585c9c38e51cc3ccf4", "Url": "https://api.github.com/repos/Swati4star/zulip-android", "Date": "2016-10-01T19:39:47Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((factory.getAdvisors().length) > 0) { return ((T) (factory.getProxy())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3621/buggy-version/ikasaneip.builder.jar.src.main.java.org.ikasan.builder.FlowBuilder.java", "BodyUseAPI": ["org.springframework.aop.framework.ProxyFactory.getProxy()"], "Fixed commit": "adb1e24d8afb4b3df1daf3676d6d9c795c245871", "Url": "https://api.github.com/repos/ikasanEIP/ikasan", "Date": "2017-08-04T13:46:36Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((mDatabase) != null) && ((mDatabase.child(\"BookDB\")) != null)) && ((mDatabase.child(\"BookDB\").child(bookID)) != null)) { mDatabase.child(\"BookDB\").child(bookID).child(\"status\").setValue(newStatus); return true; }else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/336/buggy-version/MapBook.app.src.main.java.com.mapbook.mapbook.DetailedBookInfoActivity.java", "BodyUseAPI": ["com.google.firebase.database.DatabaseReference.child(java.lang.String)", "mDatabase.child(\"BookDB\").child(bookID).child(\"status\").setValue(java.lang.String)", "mDatabase.child(\"BookDB\").child(bookID).child(java.lang.String)", "mDatabase.child(\"BookDB\").child(java.lang.String)"], "Fixed commit": "8a3c1b66df73d49096c173dbef77ba6a3f9eaef5", "Url": "https://api.github.com/repos/g090617/CSM117-Project", "Date": "2017-11-28T23:38:35Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (new java.lang.String(userID).equals(mAuth.getCurrentUser().getUid())) { display = \"You can't buy books owned by yourself\"; }else { android.util.Log.w(com.mapbook.mapbook.TAG, (\"bookID of the book is\" + (bookID))); if (changeStatus(bookID, \"RESERVED\")) { display = \"The status of the book has been changed\"; }else { display = \"The status of the book has not been changed\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/336/buggy-version/MapBook.app.src.main.java.com.mapbook.mapbook.DetailedBookInfoActivity.java", "BodyUseAPI": [], "Fixed commit": "8a3c1b66df73d49096c173dbef77ba6a3f9eaef5", "Url": "https://api.github.com/repos/g090617/CSM117-Project", "Date": "2017-11-28T23:38:35Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(blogEntry.isPublished())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8693/buggy-version/src.main.java.scrum.server.project.HomepageUpdater.java", "BodyUseAPI": [], "Fixed commit": "6778d140159eb833947d2514efb5e9b6b881eab6", "Url": "https://api.github.com/repos/Kunagi/kunagi", "Date": "2013-11-26T12:26:47Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(issue.isPublished())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8693/buggy-version/src.main.java.scrum.server.project.HomepageUpdater.java", "BodyUseAPI": [], "Fixed commit": "6778d140159eb833947d2514efb5e9b6b881eab6", "Url": "https://api.github.com/repos/Kunagi/kunagi", "Date": "2013-11-26T12:26:47Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mix.equals(\"Mix\")) { int numTiles = (this.possibleTiles.size()) / 2; for (int i = 0; i < numTiles; i++) { this.possibleTiles.get(i).setBSide(this.possibleTiles.get((i + numTiles))); } }else { for (int i = 0; i < (this.possibleTiles.size()); i++) { this.possibleTiles.get(i).aSide = this.possibleTiles.get(i); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5675/buggy-version/app.src.main.java.antoku.argenttheconsortiumshuffle.DisplayGameActivity.java", "BodyUseAPI": [], "Fixed commit": "0072d8631c89754b3c278628426118ee1ca95f78", "Url": "https://api.github.com/repos/sylvaiam/Argent_Shuffle", "Date": "2015-02-20T12:04:14Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jenkinsci.plugins.workflow.cps.replay.ReplayAction.run2(replayAction.getOriginalScript(),replayAction.getOriginalLoadedScripts())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (item == null) { throw new io.jenkins.blueocean.commons.ServiceException.UnexpectedErrorException(\"Run was not added to queue.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1779/buggy-version/blueocean-pipeline-api-impl.src.main.java.io.jenkins.blueocean.rest.impl.pipeline.PipelineRunImpl.java", "BodyUseAPI": [], "Fixed commit": "da9329c75dd2ea70d89d24e9e121a19b7f1fb2f2", "Url": "https://api.github.com/repos/EcutDavid/blueocean-plugin", "Date": "2017-04-21T01:20:48Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getLandscape().getTerrain().get(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (spot == null) throw new com.philihp.weblabora.model.WeblaboraException(((((\"Could not fell trees at (\" + x) + \",\") + y) + \") because it does not exist.\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/957/buggy-version/src.main.java.com.philihp.weblabora.model.CommandFellTrees.java", "BodyUseAPI": [], "Fixed commit": "6bf99128ef7202f47e30a6ba276b873d03c85450", "Url": "https://api.github.com/repos/philihp/WebLabora", "Date": "2012-04-29T06:01:43Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.module.bacteriology.api.specimen.SpecimenMetadataDescriptor.findMember(org.openmrs.module.bacteriology.api.specimen.Obs,org.openmrs.module.bacteriology.api.specimen.Concept)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (specimenSourceFreeText != null) { specimen.setTypeFreeText(specimenSourceFreeText.getValueText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7879/buggy-version/api.src.main.java.org.openmrs.module.bacteriology.api.specimen.SpecimenMetadataDescriptor.java", "BodyUseAPI": ["org.openmrs.module.bacteriology.api.specimen.Specimen.setTypeFreeText(specimenSourceFreeText.getValueText())", "org.openmrs.module.bacteriology.api.specimen.Obs.getValueText()"], "Fixed commit": "2674379c2d2745d781fbd5af330defc151b8cfbe", "Url": "https://api.github.com/repos/Bahmni/bacteriology", "Date": "2016-01-08T10:57:33Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((yourLocation) != null) { android.content.SharedPreferences settings = getSharedPreferences(com.pbm.PREFS_NAME, 0); android.content.SharedPreferences.Editor editor = settings.edit(); editor.putFloat(\"yourLat\", ((float) (yourLocation.getLatitude()))); editor.putFloat(\"yourLon\", ((float) (yourLocation.getLongitude()))); editor.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7141/buggy-version/src.com.pbm.SplashScreen.java", "BodyUseAPI": [], "Fixed commit": "10127d66a26c19f388939596d32884679c61658d", "Url": "https://api.github.com/repos/scottwainstock/pbm-android", "Date": "2014-10-12T20:56:25Z"},
{"Line": "=>866", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.threerings.editor.Property.getArgumentType(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (refTypeClass == null) { if ((_object) instanceof com.threerings.config.DerivedConfig) { refTypeClass = ((com.threerings.config.DerivedConfig) (_object)).cclass; } if (refTypeClass == null) { com.threerings.editor.Log.log.warning(\"Couldn't determine config reference type\", \"ref\", ref); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4878/buggy-version/core.src.main.java.com.threerings.editor.swing.TreeEditorPanel.java", "BodyUseAPI": [], "Fixed commit": "331135c1df8e123d20af70fe09c944648793e995", "Url": "https://api.github.com/repos/threerings/clyde", "Date": "2014-08-26T18:10:32Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(path.contains(\".swerve\"))) file = new java.io.File(path);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3746/buggy-version/src.application.MySwerveFile.java", "BodyUseAPI": [], "Fixed commit": "1e430c8fbcb518a492b662b582dd13db2aa8a7f4", "Url": "https://api.github.com/repos/pparamalingam/SwervePaint", "Date": "2013-04-09T03:52:44Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((text.indexOf('.')) != (text.lastIndexOf('.'))) { android.widget.Toast.makeText(getApplicationContext(), \"\u0631\u0643\u0632 \u0644\u0648 \u0633\u0645\u062d\u062a\", Toast.LENGTH_SHORT).show(); }else { text += \".\"; textView.setText(text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/307/buggy-version/app.src.main.java.com.example.phoenix.calculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "185c29e5f8fdf9bd1634ebf44b138135626c93af", "Url": "https://api.github.com/repos/MedhatCode/Android-Calculator", "Date": "2017-07-21T20:07:41Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((contentType) != null) { method.addHeader(\"Content-Type\", contentType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4626/buggy-version/src.main.java.org.dasein.cloud.aws.storage.S3Method.java", "BodyUseAPI": [], "Fixed commit": "16cbe6e2d044219e0b813736d6fefe64ad232bca", "Url": "https://api.github.com/repos/erik-johnson/dasein-cloud-aws", "Date": "2012-11-30T01:56:09Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.get(<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.nio.file.Files.exists(path)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3477/buggy-version/src.tk.wurst_client.files.WurstFolders.java", "BodyUseAPI": [], "Fixed commit": "f10dbe57a0ddac147712e82f6d858b1fb5a248b3", "Url": "https://api.github.com/repos/Wurst-Imperium/Wurst-MC-1.11", "Date": "2017-02-23T19:59:18Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tla2sany.semantic.OpApplNode.getBdedQuantBounds()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (ins != null) { for (int i = 0; i < (ins.length); i++) { tla2sany.semantic.OpApplNode res = visitExprOrOpArgNode(ins[i]); if (res != null) { ins[i] = res; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2863/buggy-version/src.main.java.de.tla2b.config.ModuleOverrider.java", "BodyUseAPI": ["de.tla2b.config.ModuleOverrider.visitExprOrOpArgNode(ins[i])"], "Fixed commit": "4a6abbe3bac2a66d584cb1e7e07b1db27cd99772", "Url": "https://api.github.com/repos/hhu-stups/tla2bAST", "Date": "2014-05-14T08:27:32Z"},
{"Line": "=>844", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.ednovo.gooru.application.client.gin.AppClientFactory.getCurrentPlaceToken().equalsIgnoreCase(PlaceTokens.EDIT_CLASS)) { classpageId = org.ednovo.gooru.application.client.gin.AppClientFactory.getPlaceManager().getRequestParameter(UrlNavigationTokens.CLASSPAGEID, \"\"); }else { classpageId = org.ednovo.gooru.application.client.gin.AppClientFactory.getPlaceManager().getRequestParameter(UrlNavigationTokens.STUDENT_CLASSPAGE_CLASS_ID, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7800/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.classpage.studentclassview.reports.assessmentreport.AssessmentProgressReportChildView.java", "BodyUseAPI": [], "Fixed commit": "09296bb2e45d35977dcfa9965dba45a1d5a4a782", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-08-05T07:07:46Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((holder.downloadView) != null) { if (rowType == (com.door43.translationstudio.ui.translate.ChooseSourceTranslationAdapter.TYPE_ITEM_NEED_DOWNLOAD)) { holder.downloadView.setBackgroundResource(R.drawable.ic_file_download_black_24dp); }else { holder.downloadView.setBackgroundResource(R.drawable.ic_refresh_black_24dp); } com.door43.widget.ViewUtil.tintViewDrawable(holder.downloadView, parent.getContext().getResources().getColor(R.color.accent)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4228/buggy-version/app.src.main.java.com.door43.translationstudio.ui.translate.ChooseSourceTranslationAdapter.java", "BodyUseAPI": ["com.door43.widget.ViewUtil.tintViewDrawable(android.widget.ImageView,parent.getContext().getResources().getColor(R.color.accent))", "android.widget.ImageView.setBackgroundResource(R.drawable.ic_file_download_black_24dp)", "android.widget.ImageView.setBackgroundResource(R.drawable.ic_refresh_black_24dp)"], "Fixed commit": "eda903f598af543de85106a6af72c09b084f1d9d", "Url": "https://api.github.com/repos/unfoldingWord-dev/ts-android", "Date": "2017-03-07T20:06:52Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.telenor.connect.ConnectSdk.isCellularDataNetworkConnected())) { parameters.put(\"prompt\", \"no_seam\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1071/buggy-version/connect.src.com.telenor.connect.AbstractSdkProfile.java", "BodyUseAPI": [], "Fixed commit": "8273da6eec0e2a1fa5089fee325a2e1b884e8b65", "Url": "https://api.github.com/repos/telenordigital/connect-android-sdk", "Date": "2017-08-16T08:24:29Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { createCustomToolbar(); initializeAccountFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1255/buggy-version/app.src.main.java.group1.cpsc319.plurilock_client.Presenter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2a0188254eb658643fe69d46a7a7bbcfdb6bb8c5", "Url": "https://api.github.com/repos/plurilock1/plurilock", "Date": "2016-03-29T16:05:16Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { startAccountActivity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1255/buggy-version/app.src.main.java.group1.cpsc319.plurilock_client.Presenter.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "2a0188254eb658643fe69d46a7a7bbcfdb6bb8c5", "Url": "https://api.github.com/repos/plurilock1/plurilock", "Date": "2016-03-29T16:05:16Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user == friend) { return new org.json.JSONObject(\"{status:200}\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4986/buggy-version/src.main.java.com.vnv.Service.UserService.java", "BodyUseAPI": [], "Fixed commit": "8e795d708a25eea9b84f24c72dec69aeb7c8c20c", "Url": "https://api.github.com/repos/WMerk/vnv", "Date": "2017-04-29T11:56:48Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((ldrj.region) != null) && (!(ldrj.region.isEmpty()))) { region = (ldrj.region) + \",\"; }else { region = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3920/buggy-version/src.WeatherForecast.java", "BodyUseAPI": [], "Fixed commit": "1e018e4adacd7834b5c38d763eee07f210caae39", "Url": "https://api.github.com/repos/kasramp/Weather-webservice-call", "Date": "2015-11-17T09:27:56Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((season.length()) == 3) && (!(season.startsWith(\"0\")))) { episode = \"YY\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/9186/buggy-version/src.sorganiser.renamer.Renamer.java", "BodyUseAPI": [], "Fixed commit": "7938e3a692b12c4a193b17e9b64c16d63b329233", "Url": "https://api.github.com/repos/lunchza/Series-Organiser", "Date": "2012-09-03T22:02:30Z"},
{"Line": "=>832", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.Integer>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sortNr == (-1)) { sortNr = 0; newParentId = ids.get(com.ha81dn.webausleser.MainActivity.selectedId); }else newParentId = parentId;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3669/buggy-version/app.src.main.java.com.ha81dn.webausleser.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "549688b3fe1a53d786da55070cdccc7092659238", "Url": "https://api.github.com/repos/ha81dn/WebAusleser", "Date": "2015-09-11T07:55:10Z"},
{"Line": "=>846", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newParentId >= 0) com.ha81dn.webausleser.MainActivity.parentId = newParentId;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3669/buggy-version/app.src.main.java.com.ha81dn.webausleser.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "549688b3fe1a53d786da55070cdccc7092659238", "Url": "https://api.github.com/repos/ha81dn/WebAusleser", "Date": "2015-09-11T07:55:10Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((keys != null) && ((keys.length) > 0)) { validateErrorMessage = MongoKit.INSTANCE.validation(validate, keys); }else { validateErrorMessage = MongoKit.INSTANCE.validation(validate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2269/buggy-version/src.main.java.com.cybermkd.route.valid.ValidResult.java", "BodyUseAPI": ["MongoKit.INSTANCE.validation(com.cybermkd.kit.MongoValidate,java.lang.String[])"], "Fixed commit": "669334d054a539929d452fd9aa018244ec21929f", "Url": "https://api.github.com/repos/T-baby/ICERest", "Date": "2016-09-01T18:51:58Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((shootingEntity) != null) && ((par1MovingObjectPosition.entityHit) == null)) { if (!(this.worldObj.isRemote)) { this.worldObj.createExplosion(this, this.posX, this.posY, this.posZ, ((float) (this.explosionRadius)), true); } this.setDead(); }else if ((shootingEntity) == null) { if (!(this.worldObj.isRemote)) { this.worldObj.createExplosion(this, this.posX, this.posY, this.posZ, ((float) (this.explosionRadius)), true); } this.setDead(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3552/buggy-version/src.main.java.halocraft.entities.EntityRocket.java", "BodyUseAPI": [], "Fixed commit": "4ce7e9a618203ca0da6573c4d1f88983224177e7", "Url": "https://api.github.com/repos/hsyyid/HaloMod", "Date": "2015-08-19T17:27:56Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasMatchToken(TokenReader.TokenType.ifKey)) { matchTerm(TokenReader.TokenType.lBracket); executing.IExpression<java.math.BigDecimal> condExpression = matchE(); matchTerm(TokenReader.TokenType.rBracket); executing.FloatSolver.ExpressionEndWrap ifExpressionEndWrap = matchA(); if (!(ifExpressionEndWrap.isEndMatched())) { matchExprEnd(); } executing.FloatSolver.ExpressionEndWrap elseExpressionEndWrap = null; if (hasMatchToken(TokenReader.TokenType.elseKey)) { elseExpressionEndWrap = matchA(); if (!(elseExpressionEndWrap.isEndMatched())) { matchExprEnd(); } } return new executing.FloatSolver.ExpressionEndWrap(new executing.IfExpression(condExpression, ifExpressionEndWrap.getExpression(), (elseExpressionEndWrap != null ? elseExpressionEndWrap.getExpression() : null)), true); }else if ((hasToken(TokenReader.TokenType.identifier)) && (extendedExpression)) { return new executing.FloatSolver.ExpressionEndWrap(matchAs(matchTerm(TokenReader.TokenType.identifier)), hasMatchExprEnd()); }else { return new executing.FloatSolver.ExpressionEndWrap(matchE(), hasMatchExprEnd()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5751/buggy-version/src.executing.FloatSolver.java", "BodyUseAPI": [], "Fixed commit": "3258da3998b6ddf6c3504c260f12a68fc15e5afb", "Url": "https://api.github.com/repos/maresja1/calc-java", "Date": "2015-05-06T20:48:43Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["executing.FloatSolver.matchA()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(body.isEndMatched())) { matchExprEnd(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5751/buggy-version/src.executing.FloatSolver.java", "BodyUseAPI": [], "Fixed commit": "3258da3998b6ddf6c3504c260f12a68fc15e5afb", "Url": "https://api.github.com/repos/maresja1/calc-java", "Date": "2015-05-06T20:48:43Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.tel.moccha.entities.course.Course.getResponsibilities()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (responsibilities == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/926/buggy-version/Moccha-Android.src.de.tel.moccha.activities.fragments.course.CourseFragment.java", "BodyUseAPI": [], "Fixed commit": "df221168cb9d6740fd2a5acbaf1ff834767738d4", "Url": "https://api.github.com/repos/QULab/MoCCha-Android", "Date": "2015-07-14T17:39:01Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((sd.exists()) && (sd.isDirectory()))) { sourceDir = (android.os.Environment.getExternalStorageDirectory().getPath()) + (GlobalData.EXPORT_PATH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3701/buggy-version/phoneProfilesPlus.src.main.java.sk.henrichg.phoneprofilesplus.PhoneProfilesHelper.java", "BodyUseAPI": [], "Fixed commit": "89a361f1c09b9155138c3451b225dfb3d5a568a4", "Url": "https://api.github.com/repos/henrichg/PhoneProfilesPlus", "Date": "2016-03-29T11:34:44Z"},
{"Line": "=>821", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((l.getQcPassed()) != null) { if (l.getQcPassed()) { libqcpassed++; } }else { libqcfailed++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6027/buggy-version/spring.src.main.java.uk.ac.bbsrc.tgac.miso.spring.ajax.FlexReportingControllerHelperService.java", "BodyUseAPI": ["uk.ac.bbsrc.tgac.miso.spring.ajax.Library.getQcPassed()"], "Fixed commit": "bf686c0d4b3f133508598fe0ea647ed96f594183", "Url": "https://api.github.com/repos/TGAC/miso-lims", "Date": "2014-12-18T11:56:31Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((blocksToSet.size()) < (plugin.min)) { cancel = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8532/buggy-version/src.main.java.info.gomeow.portalsizes.PortalSizesListener.java", "BodyUseAPI": [], "Fixed commit": "06a62490a345805394d34eccd6fda45505ff324e", "Url": "https://api.github.com/repos/gomeow/VariablePortalSizes", "Date": "2013-06-09T03:58:02Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (offlinePlayer != null) { try { org.bukkit.inventory.meta.SkullMeta im = ((org.bukkit.inventory.meta.SkullMeta) (is.getItemMeta())); im.setOwningPlayer(offlinePlayer); is.setItemMeta(im); } catch (java.lang.ClassCastException expected) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4117/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.Item.ItemBuilder.java", "BodyUseAPI": ["org.bukkit.inventory.meta.SkullMeta.setOwningPlayer(org.bukkit.OfflinePlayer)"], "Fixed commit": "87aabfe7fa48df0a7a8ffe1ff86bbcaaabb66767", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2017-10-03T20:54:04Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mediaSource.type) == (MediaSource.Type.LIVESTREAM)) { return org.kfjc.android.player.util.NotificationUtil.kfjcNotification(this, getString(R.string.fragment_title_stream), \"\", action); }else { return org.kfjc.android.player.util.NotificationUtil.kfjcNotification(this, mediaSource.show.getAirName(), mediaSource.show.getTimestampString(), action); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4950/buggy-version/src.org.kfjc.android.player.service.StreamService.java", "BodyUseAPI": ["mediaSource.show.getTimestampString()", "mediaSource.show.getAirName()", "org.kfjc.android.player.util.NotificationUtil.kfjcNotification(org.kfjc.android.player.service.StreamService,mediaSource.show.getAirName(),mediaSource.show.getTimestampString(),java.lang.String)"], "Fixed commit": "3e02ce8ae0fc96346ba9b05d3f852511c4a3ee7d", "Url": "https://api.github.com/repos/cosmospostman/KFJC-Android-Player", "Date": "2016-05-28T22:42:14Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mediaSource.type) == (MediaSource.Type.LIVESTREAM)) { play(mediaSource); }else if (isPaused()) { android.util.Log.i(org.kfjc.android.player.service.StreamService.TAG, \"Unpausing\"); requestAudioFocus(); player.setPlayWhenReady(true); android.app.NotificationManager notificationManager = ((android.app.NotificationManager) (getSystemService(Service.NOTIFICATION_SERVICE))); notificationManager.notify(NotificationUtil.KFJC_NOTIFICATION_ID, buildNotification(org.kfjc.android.player.service.StreamService.INTENT_PAUSE)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4950/buggy-version/src.org.kfjc.android.player.service.StreamService.java", "BodyUseAPI": ["org.kfjc.android.player.service.StreamService.play(org.kfjc.android.player.model.MediaSource)"], "Fixed commit": "3e02ce8ae0fc96346ba9b05d3f852511c4a3ee7d", "Url": "https://api.github.com/repos/cosmospostman/KFJC-Android-Player", "Date": "2016-05-28T22:42:14Z"},
{"Line": "=>703", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<edu.isi.wings.workflow.template.classes.sets.SetExpression>.remove(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ex == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3488/buggy-version/planner.src.main.java.edu.isi.wings.workflow.template.api.impl.kb.TemplateKB.java", "BodyUseAPI": [], "Fixed commit": "ffb2cff5f02604ef53b2919f747c18b4c3993d63", "Url": "https://api.github.com/repos/KnowledgeCaptureAndDiscovery/wings", "Date": "2015-08-20T05:53:26Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (includeCommitStream) { ret.put(new backtype.storm.generated.GlobalStreamId(masterCoordinator(b), MasterBatchCoordinator.COMMIT_STREAM_ID), b); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2994/buggy-version/src.jvm.storm.trident.topology.TridentTopologyBuilder.java", "BodyUseAPI": [], "Fixed commit": "f66ad0982d5a682d1294a64eada08cba33fa2f1f", "Url": "https://api.github.com/repos/nathanmarz/storm", "Date": "2012-08-20T08:41:23Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((matches.get(t).getWinner()) != null) players.put(t, matches.get(t).getWinner()); else players.remove(t);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2315/buggy-version/src.database.tournamentParts.KnockOut.java", "BodyUseAPI": ["java.util.Map<util.Tree, database.match.Match>.get(util.Tree)", "java.util.Map<util.Tree, database.players.Player>.put(util.Tree,matches.get(t).getWinner())", "matches.get(t).getWinner()", "java.util.Map<util.Tree, database.players.Player>.remove(util.Tree)"], "Fixed commit": "32d050fe2187ca0608657876ec089453f1a4a289", "Url": "https://api.github.com/repos/denki/openttt", "Date": "2013-04-25T07:44:18Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<util.Tree, database.players.Player>.get(t.getChildren().get(1))", "java.util.Map<util.Tree, database.players.Player>.get(t.getChildren().get(0))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((pl == null) || (pr == null)) { matches.remove(t); players.remove(t); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2315/buggy-version/src.database.tournamentParts.KnockOut.java", "BodyUseAPI": [], "Fixed commit": "32d050fe2187ca0608657876ec089453f1a4a289", "Url": "https://api.github.com/repos/denki/openttt", "Date": "2013-04-25T07:44:18Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(t.hasChildren())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2315/buggy-version/src.database.tournamentParts.KnockOut.java", "BodyUseAPI": [], "Fixed commit": "32d050fe2187ca0608657876ec089453f1a4a289", "Url": "https://api.github.com/repos/denki/openttt", "Date": "2013-04-25T07:44:18Z"},
{"Line": "=>2395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["src.gamrcorps.convex.Ops.92.toInt(java.lang.Object)", "java.util.List<?>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bi > n) { final java.util.List<java.lang.Object> z = new java.util.ArrayList<java.lang.Object>(); z.add(new java.util.ArrayList<java.lang.Object>(al.subList(0, al.size()))); return z; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/809/buggy-version/src.src.gamrcorps.convex.Ops.java", "BodyUseAPI": [], "Fixed commit": "e5f6501fdc017810b3298f1ce46804eab6a56ca7", "Url": "https://api.github.com/repos/ZekNikZ/Convex", "Date": "2016-04-05T14:09:57Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((accesses.size()) == 0) return this;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4753/buggy-version/Compiler_ww424.src.compiler_ww424.ArrLiteralExpr.java", "BodyUseAPI": [], "Fixed commit": "cc6c326bc94f14ba37a5c5c038f1ecaf9876ce3b", "Url": "https://api.github.com/repos/jpw234/Compilers", "Date": "2016-03-20T22:41:55Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["compiler_ww424.Type.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ltypeVal == \"tuple\") { ltypeVal = ((compiler_ww424.Tuple) (ltype)).getArgs().get(0).getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4753/buggy-version/Compiler_ww424.src.compiler_ww424.BinaryExpr.java", "BodyUseAPI": [], "Fixed commit": "cc6c326bc94f14ba37a5c5c038f1ecaf9876ce3b", "Url": "https://api.github.com/repos/jpw234/Compilers", "Date": "2016-03-20T22:41:55Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((n < 1) || (n > 7)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2170/buggy-version/EthanGordon_BlackjackFinal.src.blackjack.GameGUI.java", "BodyUseAPI": [], "Fixed commit": "b5d8b4bcda27380a81fd61768b90778d59246760", "Url": "https://api.github.com/repos/egordon9dev/BlackJack", "Date": "2017-03-22T13:48:11Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(string1.toLowerCase().contains(\"net.minecraft\"))) { return bytes; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5623/buggy-version/src.denoflionsx.denLib.CoreMod.ASM.SQL.SQLiteASM.java", "BodyUseAPI": [], "Fixed commit": "74105f18ed631f712effa8739dd0310f317f5cc6", "Url": "https://api.github.com/repos/denoflionsx/denLib", "Date": "2013-10-22T22:45:12Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.txttag.hackathon.android.app.UserInfo.activeTag) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1919/buggy-version/txttag.src.com.txttag.hackathon.android.app.UserInfo.java", "BodyUseAPI": [], "Fixed commit": "985e2bd8fe9790e7cf45eb705a8919240e4f951f", "Url": "https://api.github.com/repos/good-inc/TXTTAG_Android", "Date": "2013-05-03T01:41:36Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bdsThread.hasVariable(ca.mcgill.mcb.pcingola.bigDataScript.lang.ExpressionTask.TASK_OPTION_TASKNAME)) task.setTaskName(bdsThread.getString(ca.mcgill.mcb.pcingola.bigDataScript.lang.ExpressionTask.TASK_OPTION_TASKNAME));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/273/buggy-version/src.ca.mcgill.mcb.pcingola.bigDataScript.lang.ExpressionTask.java", "BodyUseAPI": ["ca.mcgill.mcb.pcingola.bigDataScript.task.Task.setTaskName(bdsThread.getString(ca.mcgill.mcb.pcingola.bigDataScript.lang.ExpressionTask.TASK_OPTION_TASKNAME))", "ca.mcgill.mcb.pcingola.bigDataScript.run.BigDataScriptThread.getString(java.lang.String)"], "Fixed commit": "1f5691ff68c039dfbe06dd91f76c200710cc3179", "Url": "https://api.github.com/repos/pcingola/BigDataScript", "Date": "2015-02-20T22:34:55Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mViewPager.getAdapter()) == null) { mViewPager.setAdapter(pagerAdapter); }else { pagerAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6177/buggy-version/szentiras.src.main.java.eu.gyurasz.bible.gui.BookActivity.java", "BodyUseAPI": ["android.support.v4.view.ViewPager.setAdapter(eu.gyurasz.bible.gui.BookActivity.SectionsPagerAdapter)"], "Fixed commit": "7c967c4616d24bcae41b2e94fa64e90a58b03d15", "Url": "https://api.github.com/repos/Sektorka/Bible", "Date": "2017-09-04T17:50:16Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, mcjty.rftools.blocks.builder.BuilderSetup.BlockInformation>.get(block.getRegistryName().toString())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (information == null) { java.lang.String modid = mcjty.rftools.varia.RFToolsTools.getModidForBlock(block); information = mcjty.rftools.blocks.builder.BuilderSetup.blockInformationMap.get((\"modid:\" + modid)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/986/buggy-version/src.main.java.mcjty.rftools.blocks.builder.BuilderSetup.java", "BodyUseAPI": [], "Fixed commit": "ac0ac2326c73a23b051f91b52e151546df9cbc0b", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2016-10-17T07:13:40Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (temp <= 0) throw new java.lang.RuntimeException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1926/buggy-version/app.src.main.java.com.example.a195054.kalkulator.AdvancedCalculator.java", "BodyUseAPI": [], "Fixed commit": "a5c0a7ed4c385948ff854ad89d6077a5a47c0df9", "Url": "https://api.github.com/repos/wujeksado/android_calculator", "Date": "2017-03-06T08:10:53Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (total_call_sum == 0) { call_top5_perct_type = 0.0; }else { call_top5_perct_type = (1.0 * top5sum_call) / total_call_sum; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1655/buggy-version/dev-main-v-2.0.src.main.java.com.niuwa.hadoop.chubao.job.CallLogJob002.java", "BodyUseAPI": [], "Fixed commit": "42d3c13b873b20378b7f8f7338baa9b6c3d58c51", "Url": "https://api.github.com/repos/TaylerCheng/Project_CHENG", "Date": "2017-03-10T07:35:17Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (call_out_6_month_sum == 0) { call_true_rate_type = 0.0; }else { call_true_rate_type = (1.0 * call_out_true_6_month_sum) / call_out_6_month_sum; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1655/buggy-version/dev-main-v-2.0.src.main.java.com.niuwa.hadoop.chubao.job.CallLogJob002.java", "BodyUseAPI": [], "Fixed commit": "42d3c13b873b20378b7f8f7338baa9b6c3d58c51", "Url": "https://api.github.com/repos/TaylerCheng/Project_CHENG", "Date": "2017-03-10T07:35:17Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.robopupu.api.mvp.ViewActivity<T_Presenter>.getPresenter()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (presenter == null) { if (com.robopupu.api.plugin.PluginBus.isPlugin(getClass())) { com.robopupu.api.plugin.PluginBus.plug(this); presenter = getPresenter(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7418/buggy-version/robopupu-api.src.main.java.com.robopupu.api.mvp.ViewActivity.java", "BodyUseAPI": [], "Fixed commit": "2bfffbce0f20725e32702fbc42a59f20df20aca3", "Url": "https://api.github.com/repos/Fuusio/Robopupu", "Date": "2016-04-07T20:50:24Z"},
{"Line": "=>7", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((num.charAt(0)) == '0') && (i > 1)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4632/buggy-version/306.AdditiveNumber.Solution.java", "BodyUseAPI": [], "Fixed commit": "8d30413e3a0062ff7643d09b4f0f23be27e94514", "Url": "https://api.github.com/repos/TylerYang/leetcode", "Date": "2016-02-26T00:59:17Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!anonymous) { java.lang.String token = ((settings.USER_NAME.get()) + \":\") + (settings.USER_PASSWORD.get()); connection.addRequestProperty(\"Authorization\", (\"Basic \" + (net.osmand.osm.io.Base64.encode(token.getBytes(\"UTF-8\"))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3929/buggy-version/OsmAnd.src.net.osmand.plus.osmedit.OsmBugsRemoteUtil.java", "BodyUseAPI": [], "Fixed commit": "79cdff0949f57baefab460b1932662f9219aa601", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2016-03-17T12:17:22Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (prevMaster != null) { prevMaster.setIsMaster(0); curriculumService.save(prevMaster); }else { com.bam.controller.CurriculumController.logger.error(prevMaster); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6442/buggy-version/BAM.src.main.java.com.bam.controller.CurriculumController.java", "BodyUseAPI": ["com.bam.bean.Curriculum.setIsMaster(int)", "com.bam.service.CurriculumService.save(com.bam.bean.Curriculum)", "org.apache.log4j.Logger.error(com.bam.bean.Curriculum)"], "Fixed commit": "af01d5c1349b9b544f70fc328f2cc144a67a487f", "Url": "https://api.github.com/repos/RevatureBAM/BAMPhoenix", "Date": "2017-08-28T15:37:55Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (eqpos >= 0) { q = line.substring(0, eqpos).trim(); v = this.dequote(line.substring((eqpos + 1))); }else { q = line.trim(); v = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8545/buggy-version/src.genBankIO.FeaturesParser.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int)", "genBankIO.FeaturesParser.dequote(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "4c89a13b926a3374a160205741e66d1cf6d58c44", "Url": "https://api.github.com/repos/javieriserte/bioUtils", "Date": "2013-01-12T23:06:00Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pratilipi.data.access.DataAccessor.getPage(PratilipiPageType.AUTHOR.toString(),pratilipi.getAuthorId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((authorPage.getUriAlias()) != null) { java.lang.String uriAlias = pratilipiHelper.generateUriAlias(page.getUriAlias(), ((authorPage.getUriAlias()) + \"/\"), pratilipi.getTitleEn()); if (!(uriAlias.equals(page.getUriAlias()))) { page.setUriAlias(uriAlias); page = dataAccessor.createOrUpdatePage(page); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8193/buggy-version/src.com.pratilipi.pagecontent.pratilipi.PratilipiContentHelper.java", "BodyUseAPI": ["com.pratilipi.commons.server.PratilipiHelper.generateUriAlias(page.getUriAlias(),((authorPage.getUriAlias()) + \"/\"),pratilipi.getTitleEn())", "com.claymus.data.transfer.Page.getUriAlias()"], "Fixed commit": "cecb0c465bd4ab53a6f43eb1a4201ccd703bf5b6", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2015-02-17T06:14:04Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pratilipi.data.access.DataAccessor.getPratilipi(request.getPratilipiId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pratilipi.getType()) == (com.pratilipi.commons.shared.PratilipiType.BOOK)) com.pratilipi.pagecontent.pratilipi.PratilipiContentHelper.updatePratilipiIndex(request.getPratilipiId(), this.getThreadLocalRequest());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8193/buggy-version/src.com.pratilipi.pagecontent.pratilipi.api.PratilipiProcessApi.java", "BodyUseAPI": [], "Fixed commit": "cecb0c465bd4ab53a6f43eb1a4201ccd703bf5b6", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2015-02-17T06:14:04Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasLoggedError)) { org.eol.globi.taxon.TaxonEnricherImpl.LOG.error(((((\"skipping taxon match against [\" + (service.getClass().toString())) + \"], error count [\") + errorCount) + \"] too high.\")); hasLoggedError = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6686/buggy-version/eol-globi-taxon-resolver.src.main.java.org.eol.globi.taxon.TaxonEnricherImpl.java", "BodyUseAPI": [], "Fixed commit": "990e0abc8a57709b8c771320d85caeb549f96e9e", "Url": "https://api.github.com/repos/jhpoelen/eol-globi-data", "Date": "2015-12-04T22:38:23Z"},
{"Line": "=>983", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((quote.getProgram()) != null) { quote.setCoveragePrice(quote.getProgram().getPrCost()); }else { if (quoteDO.getCoverageType().equals(\"PT\")) { quote.setCoveragePrice(pricingDO.getPtBasePrice()); }else if (quoteDO.getCoverageType().equals(\"PH\")) { quote.setCoveragePrice(pricingDO.getPhBasePrice()); }else if (quoteDO.getCoverageType().equals(\"PL\")) { quote.setCoveragePrice(pricingDO.getPlBasePrice()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/9109/buggy-version/src.main.java.com.agg.application.service.impl.QuoteServiceImpl.java", "BodyUseAPI": ["com.agg.application.entity.Quote.setCoveragePrice(quote.getProgram().getPrCost())", "com.agg.application.entity.Quote.getProgram()", "quote.getProgram().getPrCost()", "com.agg.application.entity.Quote.setCoveragePrice(pricingDO.getPlBasePrice())", "com.agg.application.entity.Quote.setCoveragePrice(pricingDO.getPtBasePrice())", "com.agg.application.entity.Quote.setCoveragePrice(pricingDO.getPhBasePrice())"], "Fixed commit": "cd7c95110ec72f29262a630f4d969c861dbed486", "Url": "https://api.github.com/repos/bidnfix/agg", "Date": "2016-10-04T13:37:40Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lisong_mechlab.view.mechlab.equipment.EquipmentPanel.getCurrentLoadout()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (loadout.canEquip(item)) { frame.getOpStack().pushAndApply(new lisong_mechlab.model.loadout.AutoAddItemOperation(loadout, anXBar, item)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5048/buggy-version/src.lisong_mechlab.view.mechlab.ItemLabel.java", "BodyUseAPI": ["frame.getOpStack().pushAndApply(lisong_mechlab.model.loadout.AutoAddItemOperation)"], "Fixed commit": "94935f2aaf33b881a7676c2543a401794f4e3a55", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2014-03-29T19:52:49Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["paster.creator.getEmail()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(email)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8962/buggy-version/app.notifiers.Notifier.java", "BodyUseAPI": [], "Fixed commit": "6650f7cec1e6603d3d0865f8bec4505f463e106f", "Url": "https://api.github.com/repos/nile/CloudPaster", "Date": "2013-04-10T05:40:27Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((onItemClickListener) != null) { onItemClickListener.onItemClick(getAdapterPosition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2384/buggy-version/mvvm.src.main.java.sharedlibrary.mvvm.adapter.RecyclerBindingAdapter.java", "BodyUseAPI": [], "Fixed commit": "d147c10b061c778fc0d35550db5fd0b8b92359d4", "Url": "https://api.github.com/repos/panther945/sharedlibrary-mvvm", "Date": "2016-09-29T05:51:05Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(product.getLink().equals(\"\"))) { intent.setData(android.net.Uri.parse(product.getLink())); }else { java.lang.String link = \"\"; for (br.ufpe.cin.coinage.model.Product p : game.getProducts()) { if (!(p.getLink().equals(\"\"))) { link = p.getLink(); } } intent.setData(android.net.Uri.parse(link)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3171/buggy-version/src.br.ufpe.cin.coinage.network.UpdatePriceCallback.java", "BodyUseAPI": ["android.net.Uri.parse(product.getLink())", "android.content.Intent.setData(android.net.Uri.parse(product.getLink()))", "br.ufpe.cin.coinage.model.Product.getLink()"], "Fixed commit": "b7f23329d8b44200549a426f80c3a2be61a40ded", "Url": "https://api.github.com/repos/racevedoo/coinageandroid", "Date": "2015-07-12T13:51:57Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.ufpe.cin.coinage.model.Game.getCheaperProduct()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(product.getLink().equals(\"\"))) { intent.setData(android.net.Uri.parse(product.getLink())); }else { java.lang.String link = \"\"; for (br.ufpe.cin.coinage.model.Product p : game.getProducts()) { if (!(p.getLink().equals(\"\"))) { link = p.getLink(); } } intent.setData(android.net.Uri.parse(link)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3171/buggy-version/src.br.ufpe.cin.coinage.fragments.MyGamesFragment.java", "BodyUseAPI": ["br.ufpe.cin.coinage.model.Product.getLink()", "android.content.Intent.setData(android.net.Uri.parse(product.getLink()))", "android.net.Uri.parse(product.getLink())"], "Fixed commit": "b7f23329d8b44200549a426f80c3a2be61a40ded", "Url": "https://api.github.com/repos/racevedoo/coinageandroid", "Date": "2015-07-12T13:51:57Z"},
{"Line": "=>880", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((editMode) != (edu.wpi.cs.wpisuitetng.modules.RequirementsManager.requirements.RequirementPanel.Mode.CHILD)) { cmbStatus.setEnabled(enabled); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4043/buggy-version/RequirementsManager.src.edu.wpi.cs.wpisuitetng.modules.RequirementsManager.requirements.RequirementPanel.java", "BodyUseAPI": [], "Fixed commit": "f54042863ed7cdb13210e6ef80e7df8cf6222392", "Url": "https://api.github.com/repos/cmdunkers/wpi-suite-tng", "Date": "2013-04-03T02:08:14Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((iterationId) != null) { bse.setStringProperty(BusinessScenarioEvent.ITERATION_ID, iterationId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/9166/buggy-version/src.main.java.io.novaordis.events.extensions.bscenarios.BusinessScenario.java", "BodyUseAPI": [], "Fixed commit": "58089576cd60987df59996a09acf408a2dd7943a", "Url": "https://api.github.com/repos/NovaOrdis/events", "Date": "2016-04-26T05:42:25Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (interest != null) { profile.setActiveEntryInterest(interest); mApi.addProfile(profile); android.widget.Toast.makeText(getApplicationContext(), \"Added the entry profile!\", Toast.LENGTH_SHORT).show(); startActivity(intent); }else { android.widget.Toast.makeText(getApplicationContext(), \"Could not save the Entry Profile!\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8271/buggy-version/app.src.main.java.net.sharksystem.sharknet.profile.EntryProfileActivity.java", "BodyUseAPI": ["net.sharksystem.api.models.Profile.setActiveEntryInterest(net.sharkfw.asip.ASIPInterest)"], "Fixed commit": "cec9bd5baadf7f449f59ac7a9c1dd90e25d188e9", "Url": "https://api.github.com/repos/SharedKnowledge/SharkNet", "Date": "2017-10-24T22:38:18Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cloudServerURL == null) { cloudServerURL = getCloudServer().getUrl(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5522/buggy-version/org.cloudfoundry.ide.eclipse.server.ui.src.org.cloudfoundry.ide.eclipse.internal.server.ui.CloudServerSpaceDelegate.java", "BodyUseAPI": [], "Fixed commit": "07d75553eb660b56f6b8be26a7df3b782905c832", "Url": "https://api.github.com/repos/cloudfoundry/eclipse-integration-cloudfoundry", "Date": "2014-04-30T16:38:13Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (cloudServerURL != null) { java.util.List<org.cloudfoundry.ide.eclipse.internal.server.core.CloudFoundryServer> cloudServers = org.cloudfoundry.ide.eclipse.internal.server.core.CloudServerUtil.getCloudServers(); if (cloudServers != null) { for (org.cloudfoundry.ide.eclipse.internal.server.core.CloudFoundryServer cloudServer : cloudServers) { if ((cloudServerURL.equals(cloudServer.getUrl())) && (org.cloudfoundry.ide.eclipse.internal.server.ui.CloudServerSpaceDelegate.matchesExisting(selectedCloudSpace, cloudServer.getCloudFoundrySpace()))) { errorMessage = org.eclipse.osgi.util.NLS.bind(Messages.ERROR_SERVER_INSTANCE_CLOUD_SPACE_EXISTS, cloudServer.getServer().getName(), selectedCloudSpace.getName()); break; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5522/buggy-version/org.cloudfoundry.ide.eclipse.server.ui.src.org.cloudfoundry.ide.eclipse.internal.server.ui.CloudServerSpaceDelegate.java", "BodyUseAPI": ["java.lang.String.equals(cloudServer.getUrl())"], "Fixed commit": "07d75553eb660b56f6b8be26a7df3b782905c832", "Url": "https://api.github.com/repos/cloudfoundry/eclipse-integration-cloudfoundry", "Date": "2014-04-30T16:38:13Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(recordJsonObject.isNull(org.ednovo.gooru.server.deserializer.CollectionItemsResultDeSerializer.RATINGS))) { org.json.JSONObject ratingsObj = recordJsonObject.getJSONObject(org.ednovo.gooru.server.deserializer.CollectionItemsResultDeSerializer.RATINGS); collectionItemSearchResultDo.setRatings(org.ednovo.gooru.server.serializer.JsonDeserializer.deserialize(ratingsObj.toString(), org.ednovo.gooru.shared.model.content.SearchRatingsDo.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/685/buggy-version/src.main.java.org.ednovo.gooru.server.deserializer.CollectionItemsResultDeSerializer.java", "BodyUseAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Fixed commit": "50bcaadd9fc5a65796b6b775da13ac9fe276dbc0", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-03-12T09:49:42Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(recordJsonObject.isNull(org.ednovo.gooru.server.deserializer.RESOURCE_TYPE))) { org.json.JSONObject resourceType = recordJsonObject.getJSONObject(org.ednovo.gooru.server.deserializer.RESOURCE_TYPE); collectionItemSearchResultDo.setResourceType(org.ednovo.gooru.server.serializer.JsonDeserializer.deserialize(resourceType.toString(), org.ednovo.gooru.shared.model.content.ResourceTypeDo.class)); collectionItemSearchResultDo.setResourceTypeString(((java.lang.String) (resourceType.get(org.ednovo.gooru.server.deserializer.RESOURCE_TYPE_NAME)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/685/buggy-version/src.main.java.org.ednovo.gooru.server.deserializer.CollectionItemsResultDeSerializer.java", "BodyUseAPI": ["org.json.JSONObject.getJSONObject(org.ednovo.gooru.server.deserializer.RESOURCE_TYPE)"], "Fixed commit": "50bcaadd9fc5a65796b6b775da13ac9fe276dbc0", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-03-12T09:49:42Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((resourceDirectoryList == null) || (resourceDirectoryList.isEmpty())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6863/buggy-version/src.main.java.com.oneliang.tools.builder.android.handler.GeneratePublicResourceHandler.java", "BodyUseAPI": [], "Fixed commit": "b882e1f4080bf59225846d6740e276619cfb53bb", "Url": "https://api.github.com/repos/oneliang/builder-android", "Date": "2017-04-10T08:35:37Z"},
{"Line": "=>676", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (optionOffset >= length) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5343/buggy-version/ws4d-jcoap.src.main.java.org.ws4d.coap.messages.AbstractCoapMessage.java", "BodyUseAPI": [], "Fixed commit": "05d0942fcb1c586bf2526a21f5839c7368f59af5", "Url": "https://api.github.com/repos/tst3000/ws4d-jcoap-clone", "Date": "2013-02-13T18:04:12Z"},
{"Line": "=>551", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((thread.getState()) != (java.lang.Thread.State.RUNNABLE)) && ((thread.getState()) != (java.lang.Thread.State.TERMINATED))) { thread.setRunning(true); thread.start(); }else if ((thread.getState()) == (java.lang.Thread.State.TERMINATED)) { thread.setRunning(true); thread.setState(GameState.READY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6653/buggy-version/app.src.main.java.com.wygralak.flappyduck.Engine.FlappyDuckSurfaceView2.java", "BodyUseAPI": ["com.wygralak.flappyduck.Engine.FlappyDuckSurfaceView2.FlappyDuckThread.setRunning(boolean)", "com.wygralak.flappyduck.Engine.FlappyDuckSurfaceView2.FlappyDuckThread.start()", "com.wygralak.flappyduck.Engine.FlappyDuckSurfaceView2.FlappyDuckThread.setState(GameState.READY)", "com.wygralak.flappyduck.Engine.FlappyDuckSurfaceView2.FlappyDuckThread.getState()", "com.wygralak.flappyduck.Engine.FlappyDuckSurfaceView2.FlappyDuckThread.setRunning(boolean)"], "Fixed commit": "d275655639704e55c94b9be887cc1d87870de033", "Url": "https://api.github.com/repos/kamyll2/FlappyDuck", "Date": "2017-10-20T22:59:03Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tos.length) > 0) { tos[0].getProcess().kill(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3888/buggy-version/src.usi.application.ApplicationHelper.java", "BodyUseAPI": ["tos[0].getProcess().kill()", "tos[0].getProcess()"], "Fixed commit": "9886911351ed5c6bf588fd945e0c5cd5c518dcf1", "Url": "https://api.github.com/repos/danydunk/Augusto", "Date": "2016-11-20T08:16:44Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.bibliome.util.xml.XMLUtils.childrenElements(elt).isEmpty())) { setModuleParams(elt, result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3863/buggy-version/core.src.main.java.alvisnlp.plan.PlanLoader.java", "BodyUseAPI": ["alvisnlp.plan.PlanLoader<T>.setModuleParams(org.w3c.dom.Element,result)"], "Fixed commit": "c6ef7991ee5749d4de5780671a057665e73a3a1d", "Url": "https://api.github.com/repos/Bibliome/alvisnlp", "Date": "2017-01-30T16:59:40Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((awtTTT.MainTTT.moveCounter) >= 9) java.lang.System.out.println(\"The winner is nobody it is a stalemate\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/891/buggy-version/src.awtTTT.MainTTT.java", "BodyUseAPI": [], "Fixed commit": "8a3617462ec8997fa39ef39fae98e69ef2efdf3e", "Url": "https://api.github.com/repos/JBadges/Java-Games", "Date": "2016-12-08T14:13:15Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasOutput) { exampleOut = new com.josephcatrambone.aij.Matrix((cH * (eH / eYStep)), (cW * (eW / eXStep))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2439/buggy-version/src.main.java.com.josephcatrambone.aij.networks.ConvolutionalNetwork.java", "BodyUseAPI": [], "Fixed commit": "fe4a1784fd458e632bad7d864369674c1846e932", "Url": "https://api.github.com/repos/JosephCatrambone/Aij", "Date": "2015-07-29T23:22:29Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.md_5.bungee.api.ProxyServer.getInstance().getPlayer(e.getPlayer().getUniqueId())) == null) { net.cubespace.geSuit.managers.LoggingManager.log(((net.md_5.bungee.api.ChatColor.RED) + \"Warning: ServerConnectedEvent called but player is not online any more.\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8394/buggy-version/src.main.java.net.cubespace.geSuit.listeners.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "a4302eb37e61f95ef36bd3de01321f6d2fabb32a", "Url": "https://api.github.com/repos/addstar/geSuit", "Date": "2014-10-20T11:26:50Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fin.getChannel().isOpen()) { fin.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4628/buggy-version/src.main.java.com.bookmarking.fileservice.FileSync.java", "BodyUseAPI": ["java.io.FileInputStream.close()"], "Fixed commit": "33015497f8613049db18c2f78bb870a1ecb1f788", "Url": "https://api.github.com/repos/flightx31/Bookmarkanator-Core", "Date": "2017-10-09T04:59:36Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mReverse) { mInitialAngle += 180; mInitialAngle *= -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7087/buggy-version/library.src.main.java.com.github.runly.circularprogressview.CircularProgressDrawable.java", "BodyUseAPI": [], "Fixed commit": "7416f2f2667165d9cf9352c6c9f741e63ea8a879", "Url": "https://api.github.com/repos/xmartlabs/CircularProgressView", "Date": "2017-04-26T01:29:50Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((AppPreferences.Memory_Startup_Unknown.get()) && (!IsRom)) { for (int i = oldPages.length; i < (pages.length); i++) pages[i] = com.cburch.logisim.std.memory.MemContentsSub.createContents(pageLength, width); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3067/buggy-version/src.com.cburch.logisim.std.memory.MemContents.java", "BodyUseAPI": [], "Fixed commit": "ca98e460c6a85f83c23891aecd71b2a54249ea9a", "Url": "https://api.github.com/repos/reds-heig/logisim-evolution", "Date": "2017-03-29T14:58:07Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (((ip == null) || ((ip.length()) == 0)) || (\"unknown\".equalsIgnoreCase(ip))) { ip = request.getHeader(\"HTTP_X_FORWARDED_FOR\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3642/buggy-version/src.main.java.com.sanks.blog.server.controller.BaseController.java", "BodyUseAPI": [], "Fixed commit": "a266694f88b102c7563f70555f8998471b4180e3", "Url": "https://api.github.com/repos/zpng/blog-api", "Date": "2016-10-01T06:22:36Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (((ip == null) || ((ip.length()) == 0)) || (\"unknown\".equalsIgnoreCase(ip))) { ip = request.getHeader(\"HTTP_CLIENT_IP\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3642/buggy-version/src.main.java.com.sanks.blog.server.controller.BaseController.java", "BodyUseAPI": [], "Fixed commit": "a266694f88b102c7563f70555f8998471b4180e3", "Url": "https://api.github.com/repos/zpng/blog-api", "Date": "2016-10-01T06:22:36Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (((ip == null) || ((ip.length()) == 0)) || (\"unknown\".equalsIgnoreCase(ip))) { ip = request.getRemoteAddr(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3642/buggy-version/src.main.java.com.sanks.blog.server.controller.BaseController.java", "BodyUseAPI": [], "Fixed commit": "a266694f88b102c7563f70555f8998471b4180e3", "Url": "https://api.github.com/repos/zpng/blog-api", "Date": "2016-10-01T06:22:36Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((ip == null) || ((ip.length()) == 0)) || (\"unknown\".equalsIgnoreCase(ip))) { ip = request.getHeader(\"Proxy-Client-IP\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3642/buggy-version/src.main.java.com.sanks.blog.server.controller.BaseController.java", "BodyUseAPI": [], "Fixed commit": "a266694f88b102c7563f70555f8998471b4180e3", "Url": "https://api.github.com/repos/zpng/blog-api", "Date": "2016-10-01T06:22:36Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (((ip == null) || ((ip.length()) == 0)) || (\"unknown\".equalsIgnoreCase(ip))) { ip = request.getHeader(\"WL-Proxy-Client-IP\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3642/buggy-version/src.main.java.com.sanks.blog.server.controller.BaseController.java", "BodyUseAPI": [], "Fixed commit": "a266694f88b102c7563f70555f8998471b4180e3", "Url": "https://api.github.com/repos/zpng/blog-api", "Date": "2016-10-01T06:22:36Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.apache.commons.io.FileUtils.deleteQuietly(newFile))) throw new org.apache.commons.io.FileExistsException(\"failed to delete .new file\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6748/buggy-version/src.in.edu.ashoka.surf.Dataset.java", "BodyUseAPI": [], "Fixed commit": "74d0289b0171f5672c6842ebe5c0448830d0d486", "Url": "https://api.github.com/repos/tcpd/surf", "Date": "2017-08-10T16:10:56Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.apache.commons.io.FileUtils.deleteQuietly(oldFile))) throw new org.apache.commons.io.FileExistsException(\"failed to delete .old file\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6748/buggy-version/src.in.edu.ashoka.surf.Dataset.java", "BodyUseAPI": [], "Fixed commit": "74d0289b0171f5672c6842ebe5c0448830d0d486", "Url": "https://api.github.com/repos/tcpd/surf", "Date": "2017-08-10T16:10:56Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.ndatasource.rdbms.RDBMSDataSourceReader.loadConfig(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((rdbmsConfiguration.getUsername()) != null) { java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl(), rdbmsConfiguration.getUsername(), rdbmsConfiguration.getPassword()); }else { java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3244/buggy-version/core.org.wso2.carbon.ndatasource.rdbms.src.main.java.org.wso2.carbon.ndatasource.rdbms.RDBMSDataSourceReader.java", "BodyUseAPI": ["org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getPassword()", "java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl(),rdbmsConfiguration.getUsername(),rdbmsConfiguration.getPassword())", "org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getUrl()", "org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getUsername()", "org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getUrl()", "java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl())"], "Fixed commit": "f34b2cb5f610ba9d8284ef6951a52742bda381bf", "Url": "https://api.github.com/repos/madhawa-gunasekara/carbon4-kernel", "Date": "2015-09-02T12:59:21Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.orders) == null) return java.util.Collections.emptyList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4718/buggy-version/li.strolch.model.src.main.java.li.strolch.model.xml.SimpleStrolchElementListener.java", "BodyUseAPI": [], "Fixed commit": "9671156f092e24ae3bffd4083c174c5e44731322", "Url": "https://api.github.com/repos/4treesCH/strolch", "Date": "2015-04-19T14:38:48Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.resources) == null) return java.util.Collections.emptyList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4718/buggy-version/li.strolch.model.src.main.java.li.strolch.model.xml.SimpleStrolchElementListener.java", "BodyUseAPI": [], "Fixed commit": "9671156f092e24ae3bffd4083c174c5e44731322", "Url": "https://api.github.com/repos/4treesCH/strolch", "Date": "2015-04-19T14:38:48Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (correction > ((SIZE_OF_TILE) / 2)) { yError = correction - (SIZE_OF_TILE); }else { yError = correction; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6693/buggy-version/FinalProject.src.navigation.odometry.correction.CorrectionLightSensorSS.java", "BodyUseAPI": [], "Fixed commit": "f6c02c9129087a3ae2e2684353be4eb4607bf17c", "Url": "https://api.github.com/repos/DPMFinalProject/DPM-Final-Project", "Date": "2015-03-12T20:05:32Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mData) == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5669/buggy-version/gearlibrary.src.main.java.gear.yc.com.gearlibrary.ui.adapter.GearRecyclerViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "a27427be695b030e5ead924d13634a2d1775d81f", "Url": "https://api.github.com/repos/hackerlc/GearApplication", "Date": "2017-02-28T02:46:13Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (excFileData.srgMethodName2ExcData.containsKey(srgMethodName)) return new bspkrs.mmv.McpMappingLoader.ParamModel(excFileData.srgMethodName2ExcData.get(srgMethodName)); else return bspkrs.mmv.gui.MappingGui.paramsDefaultModel;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1651/buggy-version/src.bspkrs.mmv.McpMappingLoader.java", "BodyUseAPI": ["excFileData.srgMethodName2ExcData.get(java.lang.String)"], "Fixed commit": "ef775ead1579aefd7d8b0547293ed680c00b9418", "Url": "https://api.github.com/repos/bspkrs/MCPMappingViewer", "Date": "2014-10-25T05:59:41Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (end == 0) end = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3897/buggy-version/src.net.micode.fileexplorer.FileViewInteractionHub.java", "BodyUseAPI": [], "Fixed commit": "65b88efd8de2a4f7a08684f9e6f66c703dbf1ed1", "Url": "https://api.github.com/repos/codex/MiOneFile", "Date": "2012-04-04T14:45:34Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eol.globi.data.NodeFactory.getEcoRegionFinder()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (finder != null) { java.util.Collection<org.eol.globi.geo.EcoRegion> ecoRegions = finder.findEcoRegion(location.getLatitude(), location.getLongitude()); for (org.eol.globi.geo.EcoRegion ecoRegion : ecoRegions) { if (isNewEcoRegion(ecoRegion)) { ecoRegionsToBeIndexed.add(ecoRegion); } associatedEcoRegions.add(ecoRegion); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5894/buggy-version/eol-globi-data-tool.src.main.java.org.eol.globi.data.NodeFactory.java", "BodyUseAPI": ["org.eol.globi.geo.EcoRegionFinder.findEcoRegion(location.getLatitude(),location.getLongitude())"], "Fixed commit": "758d4057d33212dbe7777681161b01da87d9c32d", "Url": "https://api.github.com/repos/jhpoelen/eol-globi-data", "Date": "2014-01-27T01:05:10Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["SearchEngine.Assassin.QryEval.tokenizeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((c.length) != 0) currentOp.add(new SearchEngine.Assassin.QryopIlTerm(token));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8674/buggy-version/src.SearchEngine.Assassin.QryEval.java", "BodyUseAPI": [], "Fixed commit": "d0bc82bf3a4422762eb426ca98bf43257c0980fc", "Url": "https://api.github.com/repos/amaliujia/AssassinSE", "Date": "2014-09-08T05:53:06Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["classifiedDatum.first().getLabelPath().getLongestValidPrefix(java.util.List<corp.data.annotation.CorpRelLabelPath>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (actualLabelPath == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1088/buggy-version/src.corp.model.evaluation.ConfusionMatrix.java", "BodyUseAPI": [], "Fixed commit": "8ef5ecdeaf4e2c0aea2e81e594102c8ea0327494", "Url": "https://api.github.com/repos/forkunited/CorporateRelationExtraction", "Date": "2013-09-13T18:00:48Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getStatusCode()) == 404) { com.urswolfer.intellij.plugin.gerrit.rest.GerritUtil.LOG.warn(\"Failed to load comments; most probably because of too old Gerrit version (only 2.7 and newer supported). Returning empty.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2940/buggy-version/src.main.java.com.urswolfer.intellij.plugin.gerrit.rest.GerritUtil.java", "BodyUseAPI": [], "Fixed commit": "4465d67dc0e7b77f333da2b2a8fb9efc854c13e7", "Url": "https://api.github.com/repos/uwolfer/gerrit-intellij-plugin", "Date": "2013-09-23T06:03:46Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(channelL.isEmpty())) { for (org.jgroups.JChannel channel : channelL) { if (channel.getClusterName().equals(name)) { return channel; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3591/buggy-version/irc-jgroups.src.irc.jgroups.ircClient.java", "BodyUseAPI": [], "Fixed commit": "8d63f305611b881a319c19fe186236e00352dba9", "Url": "https://api.github.com/repos/sonnythehottest/irc-jgroups", "Date": "2013-10-27T14:02:28Z"},
{"Line": "=>633", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((searchContext.getUserId()) == 0) { searchContext.setUserId(permissionChecker.getUserId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/808/buggy-version/portal-service.src.com.liferay.portal.kernel.search.BaseIndexer.java", "BodyUseAPI": ["com.liferay.portal.kernel.search.SearchContext.setUserId(permissionChecker.getUserId())"], "Fixed commit": "39c1bbdca7c89697085bc0b8c5a14d739c2ca9ee", "Url": "https://api.github.com/repos/ivicac/liferay-portal", "Date": "2016-02-05T19:03:32Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((token.length()) != 0) { pushOp(token.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/908/buggy-version/DStruct.a2.calculator.Calculator.java", "BodyUseAPI": ["calculator.Calculator.pushOp(java.lang.String)", "java.lang.StringBuffer.toString()"], "Fixed commit": "a0ad8a3c5284ab812466db737db85e9c848d046b", "Url": "https://api.github.com/repos/AbsynthWorks/DStruct", "Date": "2017-02-19T02:04:08Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == 100) batcher.drawSprite(((die.position.x) + 4), ((die.position.y) + 9), ((com.plovergames.diceindark.DiceRender.FRUSTUM_WIDTH) / 2), ((com.plovergames.diceindark.DiceRender.FRUSTUM_HEIGHT) / 2), Assets.D100.get(0)); else batcher.drawSprite(((die.position.x) + 4), ((die.position.y) + 9), ((com.plovergames.diceindark.DiceRender.FRUSTUM_WIDTH) / 2), ((com.plovergames.diceindark.DiceRender.FRUSTUM_HEIGHT) / 2), Assets.D100.get((((int) (result)) / 10)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8006/buggy-version/src.com.plovergames.diceindark.DiceRender.java", "BodyUseAPI": [], "Fixed commit": "0db78eee1c626e44dd023d51b0baf0b68a2c36b7", "Url": "https://api.github.com/repos/loairpa/DiceInDark", "Date": "2013-09-11T19:09:04Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof java.util.Collection) { com.cinchapi.concourse.util.TypeAdapters.COLLECTION_TYPE_ADAPTER.write(out, ((java.util.Collection<?>) (value))); }else if (value instanceof java.util.Map) { com.cinchapi.concourse.util.TypeAdapters.MAP_TYPE_ADAPTER.write(out, ((java.util.Map<?, ?>) (value))); }else { com.cinchapi.concourse.util.TypeAdapters.JAVA_TYPE_ADAPTER.write(out, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7092/buggy-version/concourse-driver-java.src.main.java.com.cinchapi.concourse.util.TypeAdapters.java", "BodyUseAPI": ["com.google.gson.TypeAdapter<java.lang.Object>.write(com.google.gson.stream.JsonWriter,java.lang.Object)"], "Fixed commit": "7d53f4d5d3a5207d5c115c2ed2982f010a3ed268", "Url": "https://api.github.com/repos/cinchapi/concourse", "Date": "2016-03-15T00:06:06Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (refuseText.requestFocus()) showOrHideSoftKeyboard(v, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7485/buggy-version/src.enst.infsi351.wassup.InvitationArrayAdapter.java", "BodyUseAPI": [], "Fixed commit": "5ec4bf5f36126c2619cc97a6c9aa83a1244aab8d", "Url": "https://api.github.com/repos/tdhman/wassup", "Date": "2015-04-12T19:37:34Z"},
{"Line": "=>1005", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eppic.assembly.Stoichiometry.getSymmetry()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sym.startsWith(\"C2\")) { java.util.List<org.biojava.nbio.structure.contact.StructureInterfaceCluster> list = getEngagedInterfaceClusters(sto); if (heteromer) list = getHomoEngagedInterfaceClusters(sto); interfCluster = list.get(0); }else { interfCluster = getInterfClusterWithMultiplicity(n, sto); if ((interfCluster == null) && heteromer) { eppic.assembly.Assembly.logger.warn(\"Could not find the C{} interface for heteromeric assembly {}. Assembly scoring will be based on largest engaged interface\", n, toString()); interfCluster = getEngagedInterfaceClusters(sto).get(0); }else if (interfCluster == null) { eppic.assembly.Assembly.logger.error(\"Could not find the C{} interface in homomeric assembly {}. Something is wrong!\", n, toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8293/buggy-version/eppic-cli.src.main.java.eppic.assembly.Assembly.java", "BodyUseAPI": [], "Fixed commit": "435e9c530fbcbdceb4773f9e6eef0d953a3625b7", "Url": "https://api.github.com/repos/eppic-team/eppic", "Date": "2015-07-13T13:47:13Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getParent().getParent()) != null) && ((getParent().getParent().getParent()) != null)) { final java.lang.String panelWidthString = getParent().getParent().getParent().getElement().getStyle().getWidth(); if ((panelWidthString != null) && (panelWidthString.endsWith(\"%\"))) { double percent = java.lang.Double.parseDouble(panelWidthString.substring(0, ((panelWidthString.length()) - 1))); panelWidth = (900.0 * percent) / 100.0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/9124/buggy-version/placebooks-webapp.src.placebooks.client.ui.items.TextItem.java", "BodyUseAPI": [], "Fixed commit": "7b54d80603915fb1bfb7210c48c0e9b808dca78a", "Url": "https://api.github.com/repos/stuaart/Bridging-the-Rural-Divide--Placebooks", "Date": "2011-09-05T09:32:54Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sys_.isCameraAcquiring())) { restart_ = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3864/buggy-version/src.threader.UVautomator.java", "BodyUseAPI": [], "Fixed commit": "1f1a60828bc0cf991a6af1d5a45dc6c893059cfc", "Url": "https://api.github.com/repos/jdeschamps/GUIv2", "Date": "2016-02-10T14:10:57Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDayOfWeek.mFigures) != null) for (int i = 0; i < (mDayOfWeek.mFigures.length); i++) mDayOfWeek.mFigures[i] = ((mDayOfWeek.mFigures[i]) % 7) + (java.util.Calendar.MONDAY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1768/buggy-version/de.neo.remote.src.de.neo.remote.cronjob.CronJob.java", "BodyUseAPI": [], "Fixed commit": "9dd263eb43057db223edba38cb8e0e347f7ae0b7", "Url": "https://api.github.com/repos/dabastynator/SmartHome", "Date": "2015-06-12T06:50:09Z"},
{"Line": "=>1143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (downloadBigImage) { android.util.Log.d(com.erakk.lnreader.dao.NovelsDao.TAG, (\"Downloading big image from internet: \" + (image.getName()))); imageTemp = getImageModelFromInternet(image, notifier); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5351/buggy-version/LNReader.src.com.erakk.lnreader.dao.NovelsDao.java", "BodyUseAPI": [], "Fixed commit": "a035cdcc33772f56604aa05a77ebe900f164d9af", "Url": "https://api.github.com/repos/freedomofkeima/LNReader-Android", "Date": "2013-10-25T14:17:08Z"},
{"Line": "=>1139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(new java.io.File(imageTemp.getPath()).exists())) { android.util.Log.i(com.erakk.lnreader.dao.NovelsDao.TAG, (\"Image found in DB, but doesn't exists in path: \" + (imageTemp.getPath()))); downloadBigImage = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5351/buggy-version/LNReader.src.com.erakk.lnreader.dao.NovelsDao.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,(\"Image found in DB, but doesn't exists in path: \" + (imageTemp.getPath())))", "com.erakk.lnreader.model.ImageModel.getPath()"], "Fixed commit": "a035cdcc33772f56604aa05a77ebe900f164d9af", "Url": "https://api.github.com/repos/freedomofkeima/LNReader-Android", "Date": "2013-10-25T14:17:08Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["graphedit.model.elements.GraphEditPackage.savedHierarchyLink(kroki.profil.association.Hierarchy,graphedit.model.elements.UIClassElement)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (loadedLink == null) link = new graphedit.model.components.AssociationLink(nodes, \"1..1\", \"1..1\", hierarchy.getLabel(), hierarchy.getLabel(), \"\", false, true, graphedit.app.MainFrame.getInstance().incrementLinkCounter()); else { if (loadedLink instanceof graphedit.model.components.CompositionLink) link = new graphedit.model.components.CompositionLink(loadedLink.getNodes(), \"1..1\", \"1..1\", hierarchy.getLabel(), hierarchy.getLabel(), \"\", false, true, graphedit.app.MainFrame.getInstance().incrementLinkCounter()); else if (loadedLink instanceof graphedit.model.components.AggregationLink) link = new graphedit.model.components.AggregationLink(loadedLink.getNodes(), \"1..1\", \"1..1\", hierarchy.getLabel(), hierarchy.getLabel(), \"\", false, true, graphedit.app.MainFrame.getInstance().incrementLinkCounter()); else link = new graphedit.model.components.AssociationLink(loadedLink.getNodes(), \"1..1\", \"1..1\", hierarchy.getLabel(), hierarchy.getLabel(), \"\", false, true, graphedit.app.MainFrame.getInstance().incrementLinkCounter()); link.setProperty(LinkProperties.DESTINATION_CARDINALITY, loadedLink.getProperty(LinkProperties.DESTINATION_CARDINALITY)); link.setProperty(LinkProperties.SOURCE_CARDINALITY, loadedLink.getProperty(LinkProperties.SOURCE_CARDINALITY)); link.setProperty(LinkProperties.STEREOTYPE, loadedLink.getProperty(LinkProperties.STEREOTYPE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5516/buggy-version/GraphEdit.src.graphedit.model.elements.GraphEditPackage.java", "BodyUseAPI": ["graphedit.model.components.Link.setProperty(LinkProperties.STEREOTYPE,loadedLink.getProperty(LinkProperties.STEREOTYPE))", "graphedit.model.components.Link.getProperty(LinkProperties.SOURCE_CARDINALITY)", "graphedit.model.components.Link.getNodes()", "graphedit.model.components.Link.getProperty(LinkProperties.DESTINATION_CARDINALITY)", "graphedit.model.components.Link.getProperty(LinkProperties.STEREOTYPE)", "graphedit.model.components.Link.getNodes()", "graphedit.model.components.Link.getNodes()", "graphedit.model.components.Link.setProperty(LinkProperties.DESTINATION_CARDINALITY,loadedLink.getProperty(LinkProperties.DESTINATION_CARDINALITY))", "graphedit.model.components.Link.setProperty(LinkProperties.SOURCE_CARDINALITY,loadedLink.getProperty(LinkProperties.SOURCE_CARDINALITY))"], "Fixed commit": "96ea6d26c6537f8c0eb574486e7c364b36bc9d04", "Url": "https://api.github.com/repos/KROKIteam/KROKI-mockup-tool", "Date": "2014-05-27T11:59:10Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.hangum.tadpole.rdb.core.dialog.export.sqlresult.ResultSetDownloadDialog.logger.isDebugEnabled()) com.hangum.tadpole.rdb.core.dialog.export.sqlresult.ResultSetDownloadDialog.logger.debug(((((\"zipFile is \" + strZipFile) + \", file name is \") + fileName) + \".zip\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7654/buggy-version/com.hangum.tadpole.rdb.core.src.com.hangum.tadpole.rdb.core.dialog.export.sqlresult.ResultSetDownloadDialog.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "a9412ecbcd15aa13c7932723f0c3b56f600f2e34", "Url": "https://api.github.com/repos/jeongjaehong/TadpoleForDBTools", "Date": "2017-05-02T03:26:05Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["res.body().getObject(java.lang.String,org.vertx.java.core.json.JsonObject)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((r.getObject(\"softErrors\")) != null) { f.putObject(\"softErrors\", r.getObject(\"softErrors\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5261/buggy-version/directory.src.main.java.org.entcore.directory.services.impl.DefaultImportService.java", "BodyUseAPI": ["org.vertx.java.core.json.JsonObject.getObject(java.lang.String)", "org.vertx.java.core.json.JsonObject.putObject(java.lang.String,r.getObject(\"softErrors\"))"], "Fixed commit": "a3463e03c956fbfc0fda57ef9b2356a2ccca7f49", "Url": "https://api.github.com/repos/CGI-OPEN-ENT-NG/entcore", "Date": "2017-07-06T17:01:37Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.purdue.cs.Message.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (message.contains(\"starting new question\")) { c.runOnUiThread(new java.lang.Runnable() { public void run() { c.enableButtons(true); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4553/buggy-version/BuzzTime.src.com.sigapp.buzztime.ApplicationController.java", "BodyUseAPI": [], "Fixed commit": "6d1e5134d1b4edab740fb208bc54db2e09ec7293", "Url": "https://api.github.com/repos/ertemplin/SIGAPP-Trivia", "Date": "2012-04-26T00:25:34Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dannil.simpletexteditor.controller.MainController.openFile(org.eclipse.swt.widgets.Shell)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (values != null) { this.fileName = values[0]; this.txtEditField.setText(values[1]); java.lang.System.out.print(values[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8944/buggy-version/src.main.java.org.dannil.simpletexteditor.MainView.java", "BodyUseAPI": ["java.io.PrintStream.print(java.lang.String)", "org.eclipse.swt.custom.StyledText.setText(java.lang.String)"], "Fixed commit": "5eb4a75fe810bbcd53f912361e0ca3cbec8c49ef", "Url": "https://api.github.com/repos/dannil/SimpleTextEditor", "Date": "2014-06-08T23:03:20Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(java.nio.file.Files.exists(target))) { java.nio.file.Files.copy(source, target); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8955/buggy-version/src.main.java.net.helloworld.aspects.UploadFileAspect.java", "BodyUseAPI": ["java.nio.file.Files.copy(java.nio.file.Path,java.nio.file.Path)"], "Fixed commit": "54da1a6aa41de98520b438c02ac13130d204b265", "Url": "https://api.github.com/repos/funkymunky/cloaked-hipster", "Date": "2014-08-16T04:58:41Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.inputEncoding.equals(\"plain\")) { inputStringPlain = new ouch.transcoders.Normal.PlainTranscoder().decode(inputReader); }else if (this.inputEncoding.equals(\"mirrored\")) { inputStringPlain = new ouch.tui.MirroredTranscoder().decode(inputReader); }else if (this.inputEncoding.equals(\"leetspeak\")) { inputStringPlain = new ouch.tui.LeetspeakTranscoder().decode(inputReader); }else if (this.inputEncoding.equals(\"morse\")) { inputStringPlain = new ouch.transcoders.Normal.MorseCodeTranscoder().decode(inputReader); }else if (this.inputEncoding.equals(\"lz77\")) { inputStringPlain = new ouch.transcoders.Compressions.LZ77Transcoder().decode(inputReader); }else if (this.inputEncoding.equals(\"quoted\")) { inputStringPlain = new ouch.transcoders.Compressions.QuotedPrintableTranscoder().decode(inputReader); }else if (this.inputNumberSystem.equals(\"roman\")) { inputStringPlain = new ouch.tui.RomanNumberTranscoder().decode(inputReader); }else if ((inputBase = java.lang.Integer.parseInt(this.inputNumberSystem)) > 0) { ouch.tui.NumberSystemTranscoder numTranscoder = new ouch.tui.NumberSystemTranscoder(); numTranscoder.setSource(inputBase); numTranscoder.setDestination(10); inputStringPlain = numTranscoder.decode(inputReader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5966/buggy-version/src.ouch.tui.TextUI.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "a6c4ea9881528d647aea9a3851f021b35ef70a29", "Url": "https://api.github.com/repos/ritschmaster/ouch", "Date": "2016-06-01T07:54:21Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["melnorme.lang.tooling.parser.lexer.ICharacterReader.lookahead()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(((la == '{') || (la == '}')) || (isHexDigit(la)))) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7754/buggy-version/plugin_tooling.src-lang.melnorme.lang.tooling.parser.lexer.CharacterLexingRule.java", "BodyUseAPI": [], "Fixed commit": "dd38529f0360cc461f7e5cfba8f18d70f598a918", "Url": "https://api.github.com/repos/RustDT/RustDT", "Date": "2015-04-09T20:13:21Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((oppositeCol == (inputCell.getColumn())) && (oppositeRow == (inputCell.getRow()))) { android.util.Log.d(com.thonners.crosswordmaker.Crossword.LOG_TAG, \"Not toggling opposite cell as in this instance it is the same cell!\"); }else { android.util.Log.d(com.thonners.crosswordmaker.Crossword.LOG_TAG, (((\"Toggling blackCell opposite: \" + (inputCell.getCellName())) + \", i.e. toggling: \") + (cells[oppositeRow][oppositeCol].getCellName()))); cells[oppositeRow][oppositeCol].toggleBlackCell(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2792/buggy-version/Crossword.java", "BodyUseAPI": ["cells[oppositeRow][oppositeCol].toggleBlackCell()", "android.util.Log.d(java.lang.String,(((\"Toggling blackCell opposite: \" + (inputCell.getCellName())) + \", i.e. toggling: \") + (cells[oppositeRow][oppositeCol].getCellName())))", "com.thonners.crosswordmaker.Cell.getCellName()", "cells[oppositeRow][oppositeCol].getCellName()"], "Fixed commit": "6c3a5106b4e0d675a1b117ce6884d728c32a2076", "Url": "https://api.github.com/repos/Thonners/CrosswordMaker", "Date": "2015-01-19T21:11:37Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cameraMode) == (com.yad.harpseal.gameobj.stage.GameStage.CAM_MENUAL)) { cameraX += java.lang.Float.parseFloat(msgs[1]); cameraY += java.lang.Float.parseFloat(msgs[2]); regulateCamera(); return 1; }else return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8824/buggy-version/src.com.yad.harpseal.gameobj.stage.GameStage.java", "BodyUseAPI": [], "Fixed commit": "0f325b1ba33eb7d00e448428d6e3a000f6242e2b", "Url": "https://api.github.com/repos/nsdb/HarpSeal", "Date": "2013-06-23T07:38:45Z"},
{"Line": "=>543", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ref.getThreadId()) == (java.lang.Thread.currentThread().getId())) { logger.debug(\"Lock re-entrant for current thread for: {}\\n\\n(Lock was requested by:\\n{})\", file, caller); break; }else { logger.debug(\"Lock still held by: {}\\n\\n(Lock was requested by:\\n{})\", ref, caller); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5819/buggy-version/src.main.java.org.commonjava.util.partyline.JoinableFileManager.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,org.commonjava.util.partyline.LockOwner,java.lang.String)"], "Fixed commit": "57dd0bbbafe7eef991906f50a28db4681bc4ba9f", "Url": "https://api.github.com/repos/ligangty/partyline", "Date": "2016-07-29T08:15:25Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN_MR1)) { startPadding = a.getDimensionPixelSize(attr, java.lang.Integer.MIN_VALUE); startPaddingDefined = startPadding != (java.lang.Integer.MIN_VALUE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1899/buggy-version/lib.src.main.java.com.rey.material.app.ThemeManager.java", "BodyUseAPI": [], "Fixed commit": "ca01ea38ce4db5715830b77e21142f07bb820960", "Url": "https://api.github.com/repos/rey5137/material", "Date": "2015-06-01T03:00:42Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN_MR1)) { endPadding = a.getDimensionPixelSize(attr, java.lang.Integer.MIN_VALUE); endPaddingDefined = endPadding != (java.lang.Integer.MIN_VALUE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1899/buggy-version/lib.src.main.java.com.rey.material.app.ThemeManager.java", "BodyUseAPI": [], "Fixed commit": "ca01ea38ce4db5715830b77e21142f07bb820960", "Url": "https://api.github.com/repos/rey5137/material", "Date": "2015-06-01T03:00:42Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index < 0) { index += storm2013.subsystems.Vision._distances.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8753/buggy-version/src.storm2013.subsystems.Vision.java", "BodyUseAPI": [], "Fixed commit": "3cbb17c67bc1a6acef41f77fb835028adc9126fd", "Url": "https://api.github.com/repos/2729StormRobotics/Storm2013", "Date": "2013-02-28T03:59:14Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.N)) { uri = android.support.v4.content.FileProvider.getUriForFile(activity, ((net.jejer.hipda.BuildConfig.APPLICATION_ID) + \".provider\"), destFile); }else { uri = android.net.Uri.fromFile(destFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7756/buggy-version/hipda.src.main.java.net.jejer.hipda.utils.UIUtils.java", "BodyUseAPI": [], "Fixed commit": "92f92739c50ff919b02ba920a37770e349055099", "Url": "https://api.github.com/repos/GreenSkinMonster/hipda", "Date": "2017-09-19T12:14:21Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((concert.getEventUrl()) != null) { openWebView(); }else { android.widget.Toast.makeText(getContext(), \"Concert web page not available\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/9129/buggy-version/app.src.main.java.com.example.jinjinz.concertprev.fragments.ConcertDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "64c80fef0d6f4f18a624585276d812ddf3274123", "Url": "https://api.github.com/repos/beccablee/ConcertsPreview", "Date": "2016-07-28T22:41:30Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((topValue) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5457/buggy-version/src.main.java.com.salesforce.phoenix.expression.aggregator.FirstClientAggregator.java", "BodyUseAPI": [], "Fixed commit": "8ea654150d934f0421bef4776b53593643e08c81", "Url": "https://api.github.com/repos/falsecz/phoenix", "Date": "2013-10-25T09:00:02Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((topValue) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5457/buggy-version/src.main.java.com.salesforce.phoenix.expression.aggregator.FirstServerAggregator.java", "BodyUseAPI": [], "Fixed commit": "8ea654150d934f0421bef4776b53593643e08c81", "Url": "https://api.github.com/repos/falsecz/phoenix", "Date": "2013-10-25T09:00:02Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.libvirt.Domain.snapshotLookupByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (snap != null) { snap.delete(0); }else { throw new com.cloud.utils.exception.CloudRuntimeException((\"Unable to find vm snapshot with name -\" + snapshotName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5932/buggy-version/plugins.hypervisors.kvm.src.com.cloud.hypervisor.kvm.resource.wrapper.LibvirtBackupSnapshotCommandWrapper.java", "BodyUseAPI": ["org.libvirt.DomainSnapshot.delete(int)"], "Fixed commit": "f973d89602c5386f2f00659ebb49432194f303d6", "Url": "https://api.github.com/repos/maneesha-p/cloudstack", "Date": "2015-07-22T19:15:00Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (windowWidth == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6046/buggy-version/Client.src.com.way.util.ImageProcess.java", "BodyUseAPI": [], "Fixed commit": "9baa1f06a3ce44bc6cc0eca94a92b1344d34e6e1", "Url": "https://api.github.com/repos/hhxuliang/android_app", "Date": "2014-12-03T04:28:47Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((winWidth == 0) || (winHeight == 0)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6046/buggy-version/Client.src.com.way.util.ImageProcess.java", "BodyUseAPI": [], "Fixed commit": "9baa1f06a3ce44bc6cc0eca94a92b1344d34e6e1", "Url": "https://api.github.com/repos/hhxuliang/android_app", "Date": "2014-12-03T04:28:47Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (bitmap != null) viewHolder.tvPicture.setImageBitmap(bitmap);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6046/buggy-version/Client.src.com.way.chat.activity.ChatMsgViewAdapter.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)"], "Fixed commit": "9baa1f06a3ce44bc6cc0eca94a92b1344d34e6e1", "Url": "https://api.github.com/repos/hhxuliang/android_app", "Date": "2014-12-03T04:28:47Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (dupeUnit != null) { org.kuali.rice.krad.util.GlobalVariables.getMessageMap().putError(org.kuali.kra.award.contacts.AWARD_PROJECT_PERSON_LIST_ERROR_KEY, org.kuali.kra.award.contacts.ERROR_AWARD_PROJECT_PERSON_DUPLICATE_UNITS, dupeUnit.getUnitName(), dupeUnit.getUnitNumber(), p.getFullName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/9077/buggy-version/src.main.java.org.kuali.kra.award.contacts.AwardProjectPersonsSaveRuleImpl.java", "BodyUseAPI": ["org.kuali.kra.bo.Unit.getUnitNumber()", "org.kuali.rice.krad.util.GlobalVariables.getMessageMap().putError(org.kuali.kra.award.contacts.AWARD_PROJECT_PERSON_LIST_ERROR_KEY,org.kuali.kra.award.contacts.ERROR_AWARD_PROJECT_PERSON_DUPLICATE_UNITS,dupeUnit.getUnitName(),dupeUnit.getUnitNumber(),p.getFullName())", "org.kuali.kra.bo.Unit.getUnitName()"], "Fixed commit": "82cf04dea69e6827a88a1894d0e91aca05e170ae", "Url": "https://api.github.com/repos/vivantech/kc_fixes", "Date": "2015-06-09T17:45:44Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.ticksExisted) >= 24000) { this.setDead(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7363/buggy-version/src.main.java.net.tropicraft.core.common.entity.hostile.EntityLostMask.java", "BodyUseAPI": [], "Fixed commit": "884f993886e7c73553d97a6b5db3d4478b507bc8", "Url": "https://api.github.com/repos/Tropicraft/Tropicraft", "Date": "2017-11-09T03:57:00Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(declared)) { if ((!(isForwardReferenceable())) && (!(hasParameter))) { if ((declaration.getContainer()) instanceof java.lang.Class) { that.addError(((\"forward reference to class member in initializer: \" + (member.getName())) + \" is not yet declared (forward references must occur in declaration section)\")); }else { that.addError(((\"forward reference to local declaration: \" + (member.getName())) + \" is not yet declared\")); } } }else if (!(specified.definitely)) { if (!(declaration.isFormal())) { if (isVariable()) { that.addError((\"not definitely initialized: \" + (member.getName()))); }else { that.addError((\"not definitely specified: \" + (member.getName()))); } }else if (!(isForwardReferenceable())) { that.addError((\"formal member may not be used in initializer: \" + (member.getName()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1278/buggy-version/src.com.redhat.ceylon.compiler.typechecker.analyzer.SpecificationVisitor.java", "BodyUseAPI": [], "Fixed commit": "d6ec7b9a705c6f78fd770f919221a3411d22ccc0", "Url": "https://api.github.com/repos/ceylon/ceylon-spec", "Date": "2012-06-04T22:38:31Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((markerList.size()) != 0) { if (username.equals(\"admin\")) { markerList.get(0).setVisible(false); markerList.get(1).setVisible(false); }else if (username.equals(\"manager\")) { markerList.get(1).setVisible(false); markerList.get(2).setVisible(false); }else { for (com.google.android.gms.maps.model.Marker mar : markerList) { mar.setVisible(true); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/9002/buggy-version/ParkMe.app.src.main.java.com.example.parkingApp.parkme.fragments.MapFragment.java", "BodyUseAPI": ["markerList.get(1).setVisible(boolean)", "java.util.List<com.google.android.gms.maps.model.Marker>.get(int)", "java.util.List<com.google.android.gms.maps.model.Marker>.get(int)", "markerList.get(0).setVisible(boolean)", "markerList.get(1).setVisible(boolean)", "markerList.get(2).setVisible(boolean)", "java.util.List<com.google.android.gms.maps.model.Marker>.get(int)", "java.util.List<com.google.android.gms.maps.model.Marker>.get(int)"], "Fixed commit": "d19b69f7c87e93fa04c8b3fab393735e143d5ec0", "Url": "https://api.github.com/repos/PMA2017/Tim12", "Date": "2017-06-17T19:31:25Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isKeepTogether()) { return new com.itextpdf.layout.layout.LayoutResult(com.itextpdf.layout.layout.LayoutResult.NOTHING, null, null, this, this); }else { overflowRenderer = createOverflowRenderer(LayoutResult.PARTIAL); overflowRenderer.setProperty(Property.MIN_HEIGHT, ((float) (blockMinHeight))); if (hasProperty(Property.HEIGHT)) { overflowRenderer.setProperty(Property.HEIGHT, ((retrieveHeight()) - (occupiedArea.getBBox().getHeight()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7031/buggy-version/layout.src.main.java.com.itextpdf.layout.renderer.BlockRenderer.java", "BodyUseAPI": [], "Fixed commit": "ca12571f879419f37d72e6970f184a7c0bf7c4af", "Url": "https://api.github.com/repos/itext/itext7", "Date": "2017-04-28T12:47:40Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.egov.works.offlinestatus.service.OfflineStatusService.getOfflineStatusByObjectIdAndObjectTypeAndStatus(mbHeader.getWorkOrderEstimate().getWorkOrder().getId(),WorksConstants.WORKORDER,OfflineStatuses.WORK_COMMENCED.toString().toUpperCase())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (offlineStatus != null) model.addAttribute(\"workCommencedDate\", sdf.format(offlineStatus.getStatusDate()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6881/buggy-version/egov.egov-worksweb.src.main.java.org.egov.works.web.controller.mb.UpdateMBController.java", "BodyUseAPI": ["org.egov.works.models.tender.OfflineStatus.getStatusDate()", "java.text.SimpleDateFormat.format(offlineStatus.getStatusDate())", "org.springframework.ui.Model.addAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "bdd2c1fb0f355c395bdb49b7bb69e484616647ce", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2016-07-01T10:11:44Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.magnetstreet.swt.util.BeanUtil.getFieldValueWithGetter(T,com.magnetstreet.swt.beanwidget.datagrid2.reflective.editor.SelectableObjectEditingSupport)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (obj == null) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7026/buggy-version/swt-bean-widgets-core.src.main.java.com.magnetstreet.swt.beanwidget.datagrid2.reflective.editor.SelectableObjectEditingSupport.java", "BodyUseAPI": [], "Fixed commit": "d2b1d005de36bad416ec722c2aeb14d685f65820", "Url": "https://api.github.com/repos/martin1yness/swt-bean-widgets", "Date": "2011-08-02T21:14:26Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((animationChannel.getAnimationName()) != null) { animationChannel.setSpeed(((animationChannel.getAnimMaxTime()) / loopDuration)); animationChannel.setLoopMode((isLoop ? LoopMode.Loop : LoopMode.DontLoop)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3414/buggy-version/Projects.Amara-Library-DisplayApplication.src.amara.engine.applications.ingame.client.models.ModelObject.java", "BodyUseAPI": ["amara.engine.applications.ingame.client.models.AnimChannel.getAnimMaxTime()", "amara.engine.applications.ingame.client.models.AnimChannel.setLoopMode((isLoop ? LoopMode.Loop : LoopMode.DontLoop))", "amara.engine.applications.ingame.client.models.AnimChannel.setSpeed(((animationChannel.getAnimMaxTime()) / loopDuration))"], "Fixed commit": "67d8cbbcb49484e0baeb18b519a1030f2132baaa", "Url": "https://api.github.com/repos/destroflyer/amara", "Date": "2016-01-17T10:15:28Z"},
{"Line": "=>1257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mShadowedText) == null) { mShadowedText = new com.ds.avare.utils.ShadowedText(getApplicationContext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4960/buggy-version/app.src.main.java.com.ds.avare.StorageService.java", "BodyUseAPI": [], "Fixed commit": "a25b33109a329f4b0c4ef1fd6e18fb20fb008b88", "Url": "https://api.github.com/repos/rocketbob/avare", "Date": "2017-04-29T23:48:54Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(station.isInitialized())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5388/buggy-version/common.buildcraft.robotics.ai.AIRobotSearchStation.java", "BodyUseAPI": [], "Fixed commit": "ae41d1462d951bc555633ce7bc76251f04737299", "Url": "https://api.github.com/repos/BuildCraft/BuildCraft", "Date": "2015-07-27T22:52:26Z"},
{"Line": "=>2410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (record != null) { if ((record.isActive()) && (!(record.isValid()))) { record.setExpirationTime(java.lang.Long.MAX_VALUE); record.setMaxIdle(java.lang.Long.MAX_VALUE); } storeProceed(cmap, request); }else { returnResponse(request); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6953/buggy-version/hazelcast.src.main.java.com.hazelcast.impl.ConcurrentMapManager.java", "BodyUseAPI": ["com.hazelcast.impl.Record.isValid()", "com.hazelcast.impl.Record.isActive()", "com.hazelcast.impl.Record.setMaxIdle(long)", "com.hazelcast.impl.Record.setExpirationTime(long)"], "Fixed commit": "f4abc288419a3ae760115386870f0fed8a788121", "Url": "https://api.github.com/repos/hazelcast/hazelcast", "Date": "2012-05-25T13:43:37Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item.getItemId()) == (android.R.id.home)) { finish(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1796/buggy-version/src.android.PhotoActivity.java", "BodyUseAPI": [], "Fixed commit": "fcd686f5b4a6f96b54a533fd060439d8ce17d854", "Url": "https://api.github.com/repos/csyangchsh/cordova-plugin-rongcloud-im", "Date": "2015-07-12T07:51:12Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (start.equals(\"text\")) { from = \"text\"; }else if (facts.isCategory(start)) { sb.append(start.toLowerCase()).append(\"(From),\"); from = \"From\"; }else if (facts.isServiceId(start)) { from = (\"'\" + start) + \"'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7752/buggy-version/src.main.java.edu.brandeis.cs.planner.Planner.java", "BodyUseAPI": ["edu.brandeis.cs.planner.deduction.Facts.isCategory(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.toLowerCase()", "edu.brandeis.cs.planner.deduction.Facts.isServiceId(java.lang.String)"], "Fixed commit": "0474ef31fbc1619cb9ab8fdc31339036756ec373", "Url": "https://api.github.com/repos/chunqishi/edu.brandeis.cs.planner", "Date": "2016-05-10T12:15:19Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(org.apache.stratos.cloud.controller.context.CloudControllerContext.unitTest)) { updateContextFromRegistry(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2949/buggy-version/components.org.apache.stratos.cloud.controller.src.main.java.org.apache.stratos.cloud.controller.context.CloudControllerContext.java", "BodyUseAPI": [], "Fixed commit": "a42e84da8a9abe08177e4c39d63062fb03e3eb38", "Url": "https://api.github.com/repos/JaneAarthy/stratos", "Date": "2015-06-26T09:40:12Z"},
{"Line": "=>680", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (curPrint == null) history.add(\"illegal printer passed to export\"); else history.add(((\"runNum \" + runNum) + \" was invalid\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5773/buggy-version/src.ChronoTimer.ChronoTrigger.java", "BodyUseAPI": [], "Fixed commit": "faa49cec47d5f1a7e73a59336985a1d38779050c", "Url": "https://api.github.com/repos/heath11100/SE_Project", "Date": "2017-05-08T23:40:27Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isGoodEmail) { emailView.setError(\"Please enter a valid email address\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8413/buggy-version/app.src.main.java.com.epicodus.beerfinder.ui.CreateAccountActivity.java", "BodyUseAPI": [], "Fixed commit": "d9de5191822a9cceabb4ad3910eca06210682c1f", "Url": "https://api.github.com/repos/ryanmcalpin/beer-finder", "Date": "2017-06-10T07:43:01Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source.equals(OauthSource.SINA)) { sinaOauthUserDAO.findById(externalId).setUserId(user.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1783/buggy-version/x-web-main.src.main.java.com.x.web.service.UserManagementService.java", "BodyUseAPI": [], "Fixed commit": "c01556a71dd88cf2307f6166a4f5fdb920ee0309", "Url": "https://api.github.com/repos/sqlxx/styproject", "Date": "2011-09-26T13:15:40Z"},
{"Line": "=>2138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((modifier.type) == (armyc2.c2sd.JavaTacticalRenderer.Modifier2.aboveMiddle)) { if (isChange1Area == false) continue; }else if ((modifier.type) != (armyc2.c2sd.JavaTacticalRenderer.Modifier2.area)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5943/buggy-version/Renderer.src.main.java.armyc2.c2sd.JavaTacticalRenderer.Modifier2.java", "BodyUseAPI": [], "Fixed commit": "cb4566965a776136e7e9738a1298a8a9f9c3d26c", "Url": "https://api.github.com/repos/missioncommand/mil-sym-android", "Date": "2016-03-18T22:31:52Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (spreadsheetName == null) { throw new java.lang.RuntimeException(\"Spreadsheet name is null!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6309/buggy-version/finance.service.src.main.java.com.lavida.service.remote.google.GoogleSpreadsheetWorker.java", "BodyUseAPI": [], "Fixed commit": "bcab549475d99b015ee1300cb0e76eaa1a108d90", "Url": "https://api.github.com/repos/pavel-slyvka/lavida", "Date": "2013-09-17T17:47:12Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (level == 1) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7175/buggy-version/src.base.plugin.SkillType.java", "BodyUseAPI": [], "Fixed commit": "7abca4d7c6b55513de025ef98e25f768a9b393c6", "Url": "https://api.github.com/repos/VeganRoach-OS/vrskills", "Date": "2014-01-20T11:16:10Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (levelMap.containsKey(exp)) { return levelMap.get(exp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7175/buggy-version/src.base.plugin.SkillType.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.lang.Byte>.get(int)"], "Fixed commit": "7abca4d7c6b55513de025ef98e25f768a9b393c6", "Url": "https://api.github.com/repos/VeganRoach-OS/vrskills", "Date": "2014-01-20T11:16:10Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((posPanel.getM_Order().getLines().length) > 0) posTable.addRowSelectionInterval(0, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2150/buggy-version/org.adempiere.pos.src.main.java.ui.swing.org.adempiere.pos.POSOrderLinePanel.java", "BodyUseAPI": [], "Fixed commit": "2053acc77b641ff34505b4e73a214ca1711f42ee", "Url": "https://api.github.com/repos/adempiere/adempierePOS", "Date": "2016-02-02T16:51:25Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Long.bitCount((authorization & (org.reaktivity.nukleus.auth.jwt.internal.resolver.Realms.SCOPE_MASK)))) > 1) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/352/buggy-version/src.main.java.org.reaktivity.nukleus.auth.jwt.internal.resolver.Realms.java", "BodyUseAPI": [], "Fixed commit": "a3c201f1dc1f8c22113abe83647a196dd86951cb", "Url": "https://api.github.com/repos/reaktivity/nukleus-auth-jwt.java", "Date": "2017-10-17T20:28:52Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mfInfo) == null) mfInfo = new backend.target.x86.X86MachineFunctionInfo(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/9083/buggy-version/java.backend.codegen.MachineFunction.java", "BodyUseAPI": [], "Fixed commit": "aaa2811fca48383fd5760c93157fc7c1eabf4b16", "Url": "https://api.github.com/repos/JianpingZeng/xcc", "Date": "2017-12-09T06:02:43Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user) != null) { java.lang.System.out.println((\"controllo password: \" + (user.getPassword()))); return user.getPassword(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8385/buggy-version/src.main.java.eu.sanprojects.kickstart.security.DatabaseUserDetails.java", "BodyUseAPI": [], "Fixed commit": "6d6780a6177299b32be3ba1456257b31ac069ad1", "Url": "https://api.github.com/repos/sanjeyac/kickstart-spring-boot-project", "Date": "2014-12-12T18:05:48Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!showingExisting) { y = y + (ar.com.tzulberti.archerytraining.fragments.tournament.ViewSerieInformationFragment.Y_PADDING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1583/buggy-version/app.src.main.java.ar.com.tzulberti.archerytraining.fragments.tournament.ViewSerieInformationFragment.java", "BodyUseAPI": [], "Fixed commit": "a751a03e729f054b09ab60053ef0af0b06c87b96", "Url": "https://api.github.com/repos/tzulberti/archery-training", "Date": "2017-05-27T11:59:09Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (num == (-1)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8325/buggy-version/app.src.main.java.com.ecml.ReadWriteXMLFile.java", "BodyUseAPI": [], "Fixed commit": "5404949dffca8fac7ab7304db11becdf4753ea75", "Url": "https://api.github.com/repos/Ragdar19/ECML", "Date": "2015-07-17T09:34:17Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.hyperperform.rest.Query.getResultList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((result.size()) != 0) return javax.ws.rs.core.Response.status(200).entity(\"Error: Email Already Exists\").build();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8260/buggy-version/src.main.java.me.hyperperform.rest.LoginRest.java", "BodyUseAPI": [], "Fixed commit": "2d4b24264c37f29df460b783b3fe58a833b10a7b", "Url": "https://api.github.com/repos/HyperPerform/hyper-perform-server", "Date": "2016-10-05T20:57:17Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (req.getParameterMap().containsKey(\"textOnly\")) { textOnly = req.getParameter(\"textOnly\").equals(\"true\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4340/buggy-version/jsonengine.src.com.livejournal.karino2.subtitle2.DeleteServlet.java", "BodyUseAPI": ["req.getParameter(\"textOnly\").equals(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "1ff5987fae9f25010e9c501856810dbed007b568", "Url": "https://api.github.com/repos/karino2/jsonengine", "Date": "2013-01-28T12:12:11Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(totalEpisodeText.getText().equals(\"??\"))) { int maxnum = java.lang.Integer.parseInt(totalEpisodeText.getText()); if (num < maxnum) plusButton.setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4015/buggy-version/src.util.window.AnimeInformation.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "javax.swing.JTextField.getText()"], "Fixed commit": "6110c2362f833727861928e1947446f434d139c2", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-07-23T22:21:39Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (location.trim().equals(\"\")) { location = \"N/A\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7205/buggy-version/applications.plugins.org.csstudio.utility.toolbox.src.org.csstudio.utility.toolbox.view.forms.ArticleEventGuiForm.java", "BodyUseAPI": [], "Fixed commit": "c283baa97ccc43bf68691c2fbfb315c47a604308", "Url": "https://api.github.com/repos/Desy-extern/cs-studio", "Date": "2017-12-18T10:28:09Z"},
{"Line": "=>623", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (peek('.')) { nextChar(); skipDecimalDigits(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7176/buggy-version/src.com.google.javascript.jscomp.parsing.parser.Scanner.java", "BodyUseAPI": [], "Fixed commit": "4b13a6ef9f987a61df1f141b8e1b2a9489ab00b1", "Url": "https://api.github.com/repos/nicks/closure-compiler", "Date": "2014-07-07T21:53:15Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dy != 0) { yStep = dy / (java.lang.Math.abs(dy)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/154/buggy-version/src.Rook.java", "BodyUseAPI": ["java.lang.Math.abs(int)"], "Fixed commit": "b3e32692f614936542385bac67bacef68bc1e458", "Url": "https://api.github.com/repos/Onyxek/chess", "Date": "2016-12-07T03:25:12Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dx != 0) { xStep = dx / (java.lang.Math.abs(dx)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/154/buggy-version/src.Rook.java", "BodyUseAPI": ["java.lang.Math.abs(int)"], "Fixed commit": "b3e32692f614936542385bac67bacef68bc1e458", "Url": "https://api.github.com/repos/Onyxek/chess", "Date": "2016-12-07T03:25:12Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (statsTable.isDisposed()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8802/buggy-version/problem.src.main.java.rinde.sim.problem.common.StatsPanel.java", "BodyUseAPI": [], "Fixed commit": "99db2af9d69890f4ac43b48ff8c766de5888e51b", "Url": "https://api.github.com/repos/rinde/RinSim", "Date": "2013-01-29T15:03:12Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canvas.isDisposed()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8802/buggy-version/problem.src.main.java.rinde.sim.problem.common.TimeLinePanel.java", "BodyUseAPI": [], "Fixed commit": "99db2af9d69890f4ac43b48ff8c766de5888e51b", "Url": "https://api.github.com/repos/rinde/RinSim", "Date": "2013-01-29T15:03:12Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.matches(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isAMatch) { return java.lang.Integer.MIN_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3312/buggy-version/PowerHangmanServer-ejb.src.java.halliGalli.Accounts.java", "BodyUseAPI": [], "Fixed commit": "39b4518dbdecfba90ed5d60647a01e07199bedee", "Url": "https://api.github.com/repos/HalliGalli/PowerHangmanServer", "Date": "2013-12-07T15:21:08Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(outName.startsWith(\"/\"))) outName = \"/\" + outName;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6918/buggy-version/src.main.java.net.minecraftforge.gradle.tasks.CreateStartTask.java", "BodyUseAPI": [], "Fixed commit": "da1088c02dcf1001f86882d0b67b5d21eecd920f", "Url": "https://api.github.com/repos/matthewprenger/ForgeGradle", "Date": "2015-03-17T18:27:48Z"},
{"Line": "=>1016", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((field.getType()) instanceof moc.type.TARRAY) || ((field.getType()) instanceof moc.type.TSTRUCT)) { c.code.setAddress(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5670/buggy-version/moc.cg.MCRAPS.java", "BodyUseAPI": [], "Fixed commit": "1c9ad75efcc5d325011a26d64b23b368b537d57c", "Url": "https://api.github.com/repos/arthaud/moc", "Date": "2015-02-09T17:41:02Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pratilipiPage.getUriAlias()) != null) pratilipiData.setPageUrlAlias(pratilipiPage.getUriAlias()); else pratilipiData.setPageUrlAlias(pratilipiPage.getUri());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2434/buggy-version/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java", "BodyUseAPI": ["com.pratilipi.data.type.Page.getUriAlias()", "com.pratilipi.data.client.PratilipiData.setPageUrlAlias(pratilipiPage.getUriAlias())", "com.pratilipi.data.type.Page.getUri()", "com.pratilipi.data.client.PratilipiData.setPageUrlAlias(pratilipiPage.getUri())"], "Fixed commit": "91f9d8310828bb1c3b873804cd9faac052c69bb9", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2015-07-28T07:09:55Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mStickUseGradient) mPaintStickCircle.setShader(mStickCircleShader);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/498/buggy-version/src.de.hanneseilers.android.JoystickView.java", "BodyUseAPI": [], "Fixed commit": "a932571e34b20dc4f4d59e21e6aee3356a8d13e2", "Url": "https://api.github.com/repos/hanneseilers/JoystickView", "Date": "2015-07-28T14:52:51Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tour) == null) { tour = social.entourage.android.map.MapTourFragment.newInstance(); ((social.entourage.android.map.MapTourFragment) (tour)).setIsPaused(isPaused); getSupportFragmentManager().beginTransaction().add(R.id.layout_fragment_container, tour).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4124/buggy-version/app.src.main.java.social.entourage.android.map.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "04720ed69912496d52d8788013e2ddd5b7bead33", "Url": "https://api.github.com/repos/ReseauEntourage/entourage-android", "Date": "2015-07-17T12:01:49Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Bukkit.getServer().getPluginManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(pm.isPluginEnabled(\"Flags\"))) { this.getLogger().severe(\"Flags was not found. Shutting down.\"); pm.disablePlugin(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6365/buggy-version/FlagsCore.src.alshain01.FlagsCore.FlagsCore.java", "BodyUseAPI": ["org.bukkit.plugin.PluginManager.disablePlugin(alshain01.FlagsCore.FlagsCore)"], "Fixed commit": "9334e19ab7d1425ee37e29c77ae561066616b065", "Url": "https://api.github.com/repos/Alshain01/FlagsCore", "Date": "2013-09-26T23:39:53Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((childNode) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6310/buggy-version/src.common.src.main.java.jp.co.yahoo.dataplatform.mds.spread.expression.NotExpressionNode.java", "BodyUseAPI": [], "Fixed commit": "7a7297c5f04aa22d9a057e44088af9ff82f9dde4", "Url": "https://api.github.com/repos/koijima/multiple-dimension-spread", "Date": "2017-12-01T04:19:43Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i < (size())) { if ((dicIndexIntBuffer.get(i)) == 0) { filterArray[i] = true; } }else { filterArray[i] = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6310/buggy-version/src.common.src.main.java.jp.co.yahoo.dataplatform.mds.binary.maker.BufferDirectDictionaryLinkCellManager.java", "BodyUseAPI": ["java.nio.IntBuffer.get(int)"], "Fixed commit": "7a7297c5f04aa22d9a057e44088af9ff82f9dde4", "Url": "https://api.github.com/repos/koijima/multiple-dimension-spread", "Date": "2017-12-01T04:19:43Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i < (size())) { if ((dicIndexIntBuffer.get(i)) != 0) { filterArray[i] = true; } }else { filterArray[i] = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6310/buggy-version/src.common.src.main.java.jp.co.yahoo.dataplatform.mds.binary.maker.BufferDirectDictionaryLinkCellManager.java", "BodyUseAPI": ["java.nio.IntBuffer.get(int)"], "Fixed commit": "7a7297c5f04aa22d9a057e44088af9ff82f9dde4", "Url": "https://api.github.com/repos/koijima/multiple-dimension-spread", "Date": "2017-12-01T04:19:43Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((this.nextMessageEncryption) == (Message.ENCRYPTION_NONE)) && force) && ((getMode()) == (eu.siacs.conversations.entities.Conversation.MODE_SINGLE))) { return Message.ENCRYPTION_OTR; }else { return this.nextMessageEncryption; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2916/buggy-version/src.eu.siacs.conversations.entities.Conversation.java", "BodyUseAPI": [], "Fixed commit": "a6f0f0cb6e7d8853ba0f30d3aee5c2842304f451", "Url": "https://api.github.com/repos/siacs/Conversations", "Date": "2014-09-08T12:29:35Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(SongData.TABLE_NAME,java.lang.String[],<nulltype>,<nulltype>,<nulltype>,<nulltype>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cursor.getInt(1)) == 0) { return \"None\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4838/buggy-version/src.com.wsiia.database.GameDatabaseHelper.java", "BodyUseAPI": [], "Fixed commit": "afa8ae748946aed7fafa52b14cb5105ffe976bf8", "Url": "https://api.github.com/repos/Bandits789/WhatSongIsItAnyway", "Date": "2014-06-19T02:23:16Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (width < height) { int tmp = width; width = height; height = tmp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7915/buggy-version/src.com.dozingcatsoftware.util.CameraUtils.java", "BodyUseAPI": [], "Fixed commit": "8f77f08b6602aad859825bebbc1175b250a5327b", "Url": "https://api.github.com/repos/dozingcat/WireGoggles", "Date": "2016-01-23T18:13:09Z"},
{"Line": "=>1448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.archiviststoolkit.plugin.utils.aspace.Resources.getRepositoryProcessingNote()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((note != null) && (!(note.isEmpty()))) { sb.append(note); sb.append('\\n'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/168/buggy-version/src.org.archiviststoolkit.plugin.utils.aspace.ASpaceMapper.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "7c3f2d913ea18c4adcb83a2fba1bdec75ca355df", "Url": "https://api.github.com/repos/archivesspace/at-migration", "Date": "2017-10-03T13:00:22Z"},
{"Line": "=>1456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.length()) > 65000) { repoProcessingNote = sb.substring(0, 64999); }else { repoProcessingNote = sb.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/168/buggy-version/src.org.archiviststoolkit.plugin.utils.aspace.ASpaceMapper.java", "BodyUseAPI": ["java.lang.StringBuilder.substring(int,int)", "java.lang.StringBuilder.toString()"], "Fixed commit": "7c3f2d913ea18c4adcb83a2fba1bdec75ca355df", "Url": "https://api.github.com/repos/archivesspace/at-migration", "Date": "2017-10-03T13:00:22Z"},
{"Line": "=>1514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.archiviststoolkit.plugin.utils.aspace.ResourcesComponents.getRepositoryProcessingNote()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((note != null) && (!(note.isEmpty()))) { sb.append(component); sb.append(\": \"); sb.append(note); sb.append('\\n'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/168/buggy-version/src.org.archiviststoolkit.plugin.utils.aspace.ASpaceMapper.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "7c3f2d913ea18c4adcb83a2fba1bdec75ca355df", "Url": "https://api.github.com/repos/archivesspace/at-migration", "Date": "2017-10-03T13:00:22Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["isse.mbr.parsing.MiniBrassParser.parse(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((model.getSolveInstance()) == null) { throw new isse.mbr.parsing.MiniBrassParseException(\"Model contains no solve item! Please add one\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3377/buggy-version/source-code.java.src.isse.mbr.parsing.MiniBrassCompiler.java", "BodyUseAPI": [], "Fixed commit": "039821e82a60e68540bf8565749eb961cfd051a8", "Url": "https://api.github.com/repos/isse-augsburg/minibrass", "Date": "2017-10-24T07:11:30Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((velocity.x) * (gradient.y)) == ((gradient.x) * (velocity.y))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2785/buggy-version/src.Main.Pitch.java", "BodyUseAPI": [], "Fixed commit": "37aa027a4a0e79332828b34bad9996aa24f7f5d4", "Url": "https://api.github.com/repos/RNPGhost/Soccer_Simulator", "Date": "2015-03-25T20:19:44Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data.isFolder()) { return false; }else { java.util.List<org.openl.rules.common.ProjectVersion> versions = project.getArtefactVersions(getData().getArtefactPath().withoutFirstSegment()); return (versions.size()) > 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7821/buggy-version/STUDIO.org.openl.rules.webstudio.src.org.openl.rules.webstudio.web.repository.tree.AbstractTreeNode.java", "BodyUseAPI": [], "Fixed commit": "0ce6226f1caef4a2599e7fb79cd42f71866428b5", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2016-12-06T11:58:53Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data.isFolder()) { result = java.util.Collections.emptyList(); }else { result = project.getArtefactVersions(getData().getArtefactPath().withoutFirstSegment()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7821/buggy-version/STUDIO.org.openl.rules.webstudio.src.org.openl.rules.webstudio.web.repository.tree.AbstractTreeNode.java", "BodyUseAPI": [], "Fixed commit": "0ce6226f1caef4a2599e7fb79cd42f71866428b5", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2016-12-06T11:58:53Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<ml.shifu.shifu.container.obj.ColumnConfig>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((columnConfig.getBinCategory()) == null) { if (((java.lang.System.currentTimeMillis()) % 50L) == 0) { ml.shifu.shifu.core.correlation.CorrelationMapper.LOG.warn(((\"Column \" + (columnConfig.getColumnName())) + \" with null binCategory but is not meta or target column, set to 0d for correlation.\")); } dValues[i] = 0.0; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/338/buggy-version/src.main.java.ml.shifu.shifu.core.correlation.CorrelationMapper.java", "BodyUseAPI": ["org.slf4j.Logger.warn(((\"Column \" + (columnConfig.getColumnName())) + \" with null binCategory but is not meta or target column, set to 0d for correlation.\"))", "ml.shifu.shifu.container.obj.ColumnConfig.getColumnName()"], "Fixed commit": "6822cba0bd0a3cd1ad2e1e7f08a9638c538e919d", "Url": "https://api.github.com/repos/ShifuML/shifu", "Date": "2017-02-20T05:07:09Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((criterias.size()) == 1) { return criterias.get(0); }else { return new org.springframework.data.mongodb.core.query.Criteria().orOperator(criterias.toArray(new org.springframework.data.mongodb.core.query.Criteria[criterias.size()])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6152/buggy-version/queries-mongo.src.main.java.com.bq.oss.lib.queries.mongo.builder.MongoQueryBuilder.java", "BodyUseAPI": ["java.util.List<org.springframework.data.mongodb.core.query.Criteria>.get(int)", "java.util.List<org.springframework.data.mongodb.core.query.Criteria>.toArray(org.springframework.data.mongodb.core.query.Criteria[])", "org.springframework.data.mongodb.core.query.Criteria.orOperator(criterias.toArray(new org.springframework.data.mongodb.core.query.Criteria[criterias.size()]))", "java.util.List<org.springframework.data.mongodb.core.query.Criteria>.size()"], "Fixed commit": "de95b8244d43ea197c15448e9c46dee3265688e2", "Url": "https://api.github.com/repos/bq/lib-queries", "Date": "2015-05-12T10:37:41Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(Ordo.Museum.DESCRIPTION)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == description) { description = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7808/buggy-version/de.chesmuh.ordo.src.de.chesmuh.ordo.data.sql.SQLQueryMuseum.java", "BodyUseAPI": [], "Fixed commit": "e048a8b94963383b85f98742ccc364ffc12c35a6", "Url": "https://api.github.com/repos/chesmuh/museum", "Date": "2013-03-22T23:13:25Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userType == (net.maritimecloud.identityregistry.utils.KeycloakAdminUtil.ADMIN_USER)) { ret = getBrokerRealm().users().create(user); }else { ret = getProjectUserRealm().users().create(user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4931/buggy-version/src.main.java.net.maritimecloud.identityregistry.utils.KeycloakAdminUtil.java", "BodyUseAPI": [], "Fixed commit": "8f91f1c4f200cee0340683c9dd82d244e60339fb", "Url": "https://api.github.com/repos/MaritimeConnectivityPlatform/IdentityRegistry", "Date": "2016-07-08T11:09:52Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userType == (net.maritimecloud.identityregistry.utils.KeycloakAdminUtil.ADMIN_USER)) { getBrokerRealm().users().get(user.getId()).resetPassword(cred); }else { getProjectUserRealm().users().get(user.getId()).resetPassword(cred); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4931/buggy-version/src.main.java.net.maritimecloud.identityregistry.utils.KeycloakAdminUtil.java", "BodyUseAPI": [], "Fixed commit": "8f91f1c4f200cee0340683c9dd82d244e60339fb", "Url": "https://api.github.com/repos/MaritimeConnectivityPlatform/IdentityRegistry", "Date": "2016-07-08T11:09:52Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userType == (net.maritimecloud.identityregistry.utils.KeycloakAdminUtil.ADMIN_USER)) { user = getBrokerRealm().users().search(username, null, null, null, (-1), (-1)).get(0); }else { user = getProjectUserRealm().users().search(username, null, null, null, (-1), (-1)).get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4931/buggy-version/src.main.java.net.maritimecloud.identityregistry.utils.KeycloakAdminUtil.java", "BodyUseAPI": [], "Fixed commit": "8f91f1c4f200cee0340683c9dd82d244e60339fb", "Url": "https://api.github.com/repos/MaritimeConnectivityPlatform/IdentityRegistry", "Date": "2016-07-08T11:09:52Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (modelAndView == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6289/buggy-version/src.main.java.com.cportal.webinit.LoggingInterceptor.java", "BodyUseAPI": [], "Fixed commit": "c378efe3628ae8d9115f9d4b2bfb01baaef01807", "Url": "https://api.github.com/repos/gourabp17/Sharenodes", "Date": "2016-04-12T18:13:14Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arg3 == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6289/buggy-version/src.main.java.com.cportal.webinit.LinkRole.java", "BodyUseAPI": [], "Fixed commit": "c378efe3628ae8d9115f9d4b2bfb01baaef01807", "Url": "https://api.github.com/repos/gourabp17/Sharenodes", "Date": "2016-04-12T18:13:14Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchView) != null) { mSearchView.clearFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6143/buggy-version/app.src.main.java.com.example.phat.vnexpressnews.activities.SearchResultActivity.java", "BodyUseAPI": [], "Fixed commit": "b6857843eede5359cd18e70cd2dfa3009dff63d2", "Url": "https://api.github.com/repos/PhatTN/VNExpressNews", "Date": "2015-12-08T06:26:19Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mraof.minestuck.network.skaianet.SessionHandler.getPlayerSession(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((playerSession.name) != null) com.mraof.minestuck.network.skaianet.SessionHandler.sessionsByName.remove(playerSession.name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8185/buggy-version/src.com.mraof.minestuck.network.skaianet.SessionHandler.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.mraof.minestuck.network.skaianet.Session>.remove(playerSession.name)"], "Fixed commit": "701a10a8a5a38c3e8202482a1630d41f789d973c", "Url": "https://api.github.com/repos/mraof/Minestuck", "Date": "2015-12-14T14:53:45Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.mraof.minestuck.network.skaianet.Session>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (session != null) throw new net.minecraft.command.CommandException(\"That session name is already taken.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8185/buggy-version/src.com.mraof.minestuck.network.skaianet.SessionHandler.java", "BodyUseAPI": [], "Fixed commit": "701a10a8a5a38c3e8202482a1630d41f789d973c", "Url": "https://api.github.com/repos/mraof/Minestuck", "Date": "2015-12-14T14:53:45Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((titles.size()) > 0) { java.lang.String tooltipText = generateWarningsTemplate(titles, texts); if ((titles.size()) > 1) { warningLabel = createWarningLabel(((titles.size()) + \" Warnings\"), tooltipText); }else { warningLabel = createWarningLabel(\"Warning\", tooltipText); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/752/buggy-version/eppic-wui.src.main.java.ch.systemsx.sybit.crkwebui.shared.helpers.ExperimentalWarnings.java", "BodyUseAPI": ["ch.systemsx.sybit.crkwebui.shared.helpers.ExperimentalWarnings.createWarningLabel(java.lang.String,java.lang.String)", "ch.systemsx.sybit.crkwebui.shared.helpers.ExperimentalWarnings.generateWarningsTemplate(java.util.List<java.lang.String>,java.util.List<java.lang.String>)", "java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()"], "Fixed commit": "cc35ca3d3deb988fce0e63aa5414fea948293c1f", "Url": "https://api.github.com/repos/eppic-team/eppic", "Date": "2017-12-02T22:44:45Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().findFragmentById(R.id.frame_container)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mainFragment == null) getSupportFragmentManager().beginTransaction().add(R.id.frame_container, sakethkaparthi.moviesapp.fragments.MovieListFragment.newInstance()).commit(); else { if (mainFragment instanceof sakethkaparthi.moviesapp.fragments.MovieDetailsFragment) getSupportFragmentManager().beginTransaction().replace(R.id.frame_container, sakethkaparthi.moviesapp.fragments.MovieDetailsFragment.newInstance()).commit(); else getSupportFragmentManager().beginTransaction().replace(R.id.frame_container, sakethkaparthi.moviesapp.fragments.ReviewsFragment.newInstance(sakethkaparthi.moviesapp.activities.ContainerActivity.id)).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8327/buggy-version/app.src.main.java.sakethkaparthi.moviesapp.activities.ContainerActivity.java", "BodyUseAPI": [], "Fixed commit": "ecfea6bb5a2dd841091a7e59e6fa2b610ad485aa", "Url": "https://api.github.com/repos/sakethkaparthi/Android-Nanodegree-Project-1", "Date": "2016-03-21T17:15:00Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((view.getDate()) == (mInitialDate)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/772/buggy-version/app.src.main.java.com.jskierbi.sampledateselection.CalendarViewActivity.java", "BodyUseAPI": [], "Fixed commit": "1735f002df040faba162e701911eb1b631ffac67", "Url": "https://api.github.com/repos/jskierbi/sample-date-selection", "Date": "2015-04-26T16:07:11Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (field.contains(\"_\")) { java.lang.System.out.println((((field + \" -> \") + (MisfitsPackage.DesignParser.classString)) + \" [arrowhead=\\\"diamond\\\"];\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6400/buggy-version/src.MisfitsPackage.DesignParser.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "6f31cfa77afd17ffe7fcf4410750d4907d587c26", "Url": "https://api.github.com/repos/siscodr/CSSE374Misfits", "Date": "2016-01-08T04:29:27Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (field.contains(\"_\")) { java.lang.System.out.println((((field + \" -> \") + (MisfitsPackage.DesignParser.classString)) + \" [arrowhead=\\\"odiamond\\\"];\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6400/buggy-version/src.MisfitsPackage.DesignParser.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "6f31cfa77afd17ffe7fcf4410750d4907d587c26", "Url": "https://api.github.com/repos/siscodr/CSSE374Misfits", "Date": "2016-01-08T04:29:27Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (period.getPeriodType().isWeek()) { periodLabel.append(bundle.getString((\"GML.mois\" + (period.getBeginDate().getMonth())))); if ((period.getBeginDate().getMonth()) != (period.getEndDate().getMonth())) { displayWeek = true; if ((period.getBeginDate().getYear()) != (period.getEndDate().getYear())) { periodLabel.append(\" \").append(period.getBeginDate().getYear()); } periodLabel.append(\" / \").append(bundle.getString((\"GML.mois\" + (period.getEndDate().getMonth())))); } periodLabel.append(\" \").append(period.getEndDate().getYear()); if (displayWeek) { periodLabel.append(\" - \").append(bundle.getString(\"GML.week\")).append(' ').append(period.getBeginDate().getWeekOfYear()); } }else if (period.getPeriodType().isMonth()) { periodLabel.append(bundle.getString((\"GML.mois\" + (period.getBeginDate().getMonth())))).append(\" \").append(period.getBeginDate().getYear()); }else if (period.getPeriodType().isYear()) { periodLabel.append(period.getBeginDate().getYear()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1256/buggy-version/web-core.src.main.java.org.silverpeas.calendar.CalendarViewContext.java", "BodyUseAPI": ["period.getBeginDate().getYear()", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "period.getBeginDate().getYear()", "period.getBeginDate().getMonth()", "java.lang.StringBuilder.append(period.getBeginDate().getYear())", "period.getPeriodType().isYear()", "period.getBeginDate().getYear()", "java.lang.StringBuilder.append(bundle.getString((\"GML.mois\" + (period.getBeginDate().getMonth()))))", "java.lang.StringBuilder.append(bundle.getString((\"GML.mois\" + (period.getEndDate().getMonth()))))", "org.silverpeas.util.LocalizationBundle.getString((\"GML.mois\" + (period.getBeginDate().getMonth())))", "org.silverpeas.calendar.CalendarPeriod.getEndDate()", "period.getEndDate().getYear()", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "org.silverpeas.util.LocalizationBundle.getString((\"GML.mois\" + (period.getEndDate().getMonth())))", "period.getEndDate().getYear()", "org.silverpeas.calendar.CalendarPeriod.getEndDate()", "org.silverpeas.util.LocalizationBundle.getString((\"GML.mois\" + (period.getBeginDate().getMonth())))", "org.silverpeas.calendar.CalendarPeriod.getPeriodType()", "java.lang.StringBuilder.append(java.lang.String)", "periodLabel.append(\" - \").append(bundle.getString(\"GML.week\")).append(' ').append(period.getBeginDate().getWeekOfYear())", "java.lang.StringBuilder.append(period.getBeginDate().getYear())", "java.lang.StringBuilder.append(period.getEndDate().getYear())", "org.silverpeas.calendar.CalendarPeriod.getEndDate()", "periodLabel.append(bundle.getString((\"GML.mois\" + (period.getBeginDate().getMonth())))).append(\" \").append(period.getBeginDate().getYear())", "period.getBeginDate().getYear()", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "period.getBeginDate().getWeekOfYear()", "period.getEndDate().getMonth()", "org.silverpeas.calendar.CalendarPeriod.getPeriodType()", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "period.getEndDate().getMonth()", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "java.lang.StringBuilder.append(bundle.getString((\"GML.mois\" + (period.getBeginDate().getMonth()))))", "period.getBeginDate().getMonth()", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "period.getBeginDate().getMonth()", "period.getPeriodType().isMonth()", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "org.silverpeas.calendar.CalendarPeriod.getEndDate()"], "Fixed commit": "4c1cfa1f47997b674b4f883980901fd2855588e8", "Url": "https://api.github.com/repos/SilverTeamWork/Silverpeas-Core", "Date": "2016-01-29T11:14:35Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (io.netty.handler.ssl.OpenSsl.isAvailable()) { provider = io.netty.handler.ssl.SslProvider.OPENSSL; org.apache.rocketmq.remoting.netty.SslHelper.LOGGER.info(\"Using OpenSSL provider\"); }else { provider = io.netty.handler.ssl.SslProvider.JDK; org.apache.rocketmq.remoting.netty.SslHelper.LOGGER.info(\"Using JDK SSL provider\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5240/buggy-version/remoting.src.main.java.org.apache.rocketmq.remoting.netty.SslHelper.java", "BodyUseAPI": [], "Fixed commit": "cb20e1fed398f3e2f76ea8366b78e8a5b305f42a", "Url": "https://api.github.com/repos/lizhanhui/rocketmq", "Date": "2017-06-19T02:02:05Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<adt.graph.Node<V>>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((i + 1) < (nodes.size())) && ((nodes.get((i + 1))) == node)) i++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6849/buggy-version/PESTT.src.adt.graph.Path.java", "BodyUseAPI": [], "Fixed commit": "5d5c2af4787c53c896edaf162251a0949200a2b1", "Url": "https://api.github.com/repos/pestt/PESTT", "Date": "2012-05-18T10:33:38Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((socket) != null) socket.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6107/buggy-version/src.networking.SocketListener.java", "BodyUseAPI": [], "Fixed commit": "b2f0efa885df2abdba0447779d9dd4009ed2555a", "Url": "https://api.github.com/repos/BernhardScharrer/NetAPI-Server", "Date": "2017-08-25T20:53:22Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((successor) != null) { successor.handle(r); }else { java.lang.System.out.println((\"id: \" + (r.getId()))); java.lang.System.out.println((\"msg: \" + (r.getMsg()))); java.lang.System.out.println(\"handler: none\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/644/buggy-version/src.com.zztonedefzz.cor.Handler.java", "BodyUseAPI": [], "Fixed commit": "8070f180c2f9fc1f589cae78183e8a03e3240e8b", "Url": "https://api.github.com/repos/vietjack/Chain-Of-Responsibility", "Date": "2013-03-30T04:05:21Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jsonNode.get(\"totalNumOfEvents\").asInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tempTotalNumOfEvents == 0) eventsMap.put(java.util.UUID.fromString(uuid), new java.util.HashSet());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8337/buggy-version/src.main.java.org.moshe.arad.kafka.consumers.events.FromMongoWithoutSavingEventsConsumer.java", "BodyUseAPI": [], "Fixed commit": "17ecf0d01ed794dfca45660c1d11e93ca4f343c3", "Url": "https://api.github.com/repos/moshe-arad/Backgammon-Users-Service-4", "Date": "2017-04-30T22:55:29Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((sourceServiceName) == null) { throw new java.lang.IllegalArgumentException((\"Cannot find source service for lookup name: \" + (this.lookupName))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8864/buggy-version/ee.src.main.java.org.jboss.as.ee.component.LookupBindingSourceDescription.java", "BodyUseAPI": [], "Fixed commit": "1e11adc379c02f4d8dcc7c8985bff6cd19634e2f", "Url": "https://api.github.com/repos/dandreadis/wildfly", "Date": "2011-04-09T07:53:48Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((sourceServiceName) == null) { throw new java.lang.IllegalArgumentException((\"Cannot find source service for lookup name: \" + (this.lookupName))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8864/buggy-version/ee.src.main.java.org.jboss.as.ee.component.LookupBindingSourceDescription.java", "BodyUseAPI": [], "Fixed commit": "1e11adc379c02f4d8dcc7c8985bff6cd19634e2f", "Url": "https://api.github.com/repos/dandreadis/wildfly", "Date": "2011-04-09T07:53:48Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((intent.resolveActivity(getPackageManager())) != null) { startActivityForResult(intent, com.example.yhuang.scavengerhunt.CameraActivity.CAPTURE_IMAGE_ACTIVITY_REQUEST_CODE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5300/buggy-version/ScavengerHunt.app.src.main.java.com.example.yhuang.scavengerhunt.CameraActivity.java", "BodyUseAPI": ["com.example.yhuang.scavengerhunt.CameraActivity.startActivityForResult(android.content.Intent,int)"], "Fixed commit": "4f2f9e38644a92a071744d2aeedf2ea62ca37105", "Url": "https://api.github.com/repos/YuzhongHuang/Lab3", "Date": "2015-10-13T23:22:00Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["servlet.tutorial.HttpServletRequest.getParameter(java.lang.String)", "servlet.tutorial.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((startDate == null) || (endDate == null)) { out.print(\"[]\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7716/buggy-version/ServletTutorial.src.servlet.tutorial.HelloWorld.java", "BodyUseAPI": [], "Fixed commit": "98d265578e3ed50148be0ec7e4f5dae740484e46", "Url": "https://api.github.com/repos/kyhoolee/NewsServlet", "Date": "2013-11-12T05:05:16Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (strPath.isEmpty()) strPath = \"http://www.saavn.com/_i/default-album-big.png\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7063/buggy-version/src.com.mridang.saavync.syncadapter.SyncHelper.java", "BodyUseAPI": [], "Fixed commit": "4e79f3c01de3c168eab7f3f9a1c4914be053790a", "Url": "https://api.github.com/repos/mridang/Saavync", "Date": "2013-01-20T09:30:40Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((-0.03) < ((double) (java.lang.Math.cos(java.lang.Math.toRadians(this.angle))))) && (((double) (java.lang.Math.cos(java.lang.Math.toRadians(this.angle)))) < 0.3)) randomizeDyDx(); else { this.dx = (this.speed) * ((double) (java.lang.Math.cos(java.lang.Math.toRadians(this.angle)))); this.dy = (this.speed) * ((double) (java.lang.Math.sin(java.lang.Math.toRadians(this.angle)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/571/buggy-version/src.main.java.com.Jonathan.Pong.PongBall.java", "BodyUseAPI": ["java.lang.Math.toRadians(double)", "java.lang.Math.toRadians(double)", "java.lang.Math.cos(double)", "java.lang.Math.sin(double)"], "Fixed commit": "5e9d99daeb3ebeafdaca8b7b46c294133f37e89f", "Url": "https://api.github.com/repos/Jonathan-Chandler/Java-Pong", "Date": "2015-12-17T06:03:08Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((openParens.size()) == 0) { i = lastParens; }else { i = openParens.peek(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/443/buggy-version/app.src.main.java.com.example.hakeemsackes_bramble.scientificcalculator.Answer.java", "BodyUseAPI": ["java.util.Stack<java.lang.Integer>.peek()"], "Fixed commit": "90bdca4ff45ae9643601e731947b8d17a3dd350d", "Url": "https://api.github.com/repos/HakeemSackes-Bramble/Scientific-Calculator", "Date": "2016-10-17T00:16:56Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.mvanbesien.yws.data.loaders.impl.YahooWeatherDataLoader2.readTime(java.lang.String,java.lang.String,java.util.TimeZone)", "fr.mvanbesien.yws.data.loaders.impl.YahooWeatherDataLoader2.readTime(java.lang.String,java.lang.String,java.util.TimeZone)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((updateTime.getTime()) > sunriseTime) && ((updateTime.getTime()) < sunsetTime)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1329/buggy-version/yahoo-weather-station.src.main.java.fr.mvanbesien.yws.data.loaders.impl.YahooWeatherDataLoader2.java", "BodyUseAPI": [], "Fixed commit": "7b8994c6267f1b27cf0edf9adf7bab24dabe1161", "Url": "https://api.github.com/repos/mvanbesien/yahoo-weather-station", "Date": "2016-11-13T23:45:55Z"},
{"Line": "=>1653", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (length1 == 0) { oracle.binding.OperationBinding CreateInsert = com.view.beans.ADFUtils.findOperation(\"CreateInsert1\"); CreateInsert.execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5867/buggy-version/US-POC.ADF.HumanTaskUI.PurchaseOrderApplication.ViewController.src.com.view.beans.PurchaseOrder.java", "BodyUseAPI": [], "Fixed commit": "c0e82d27abbaab696471df7cb143bddaf87e4230", "Url": "https://api.github.com/repos/nileteam/nile", "Date": "2015-05-12T12:29:03Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["oracle.jbo.ViewObject.createRowSetIterator(<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ritHeader.hasNext()) { rowHeader = ritHeader.next(); rowHeader.setAttribute(\"Total_value\", total); totalvalue = total; java.lang.System.out.println((\"Total : \" + total)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5867/buggy-version/US-POC.ADF.HumanTaskUI.PurchaseOrderApplication.ViewController.src.com.view.beans.PurchaseOrder.java", "BodyUseAPI": ["oracle.jbo.RowSetIterator.next()"], "Fixed commit": "c0e82d27abbaab696471df7cb143bddaf87e4230", "Url": "https://api.github.com/repos/nileteam/nile", "Date": "2015-05-12T12:29:03Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.swt.custom.StyledText.getLineAtOffset(event.caretOffset)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (line == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8662/buggy-version/com.github.matf.relativenumberruler.src.com.github.matf.relativenumberruler.RelativeLineNumberColumn.java", "BodyUseAPI": [], "Fixed commit": "a599faa1fbe5e8a93f042716f368d9b30818dc63", "Url": "https://api.github.com/repos/sschaef/relativenumberruler", "Date": "2014-11-21T17:03:34Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ly.cel.jvinsights.client.Client.post(java.lang.String,java.lang.String,org.json.JSONArray)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((response != null) && ((response.length()) > 0)) { return new org.json.JSONObject(response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4422/buggy-version/src.main.java.ly.cel.jvinsights.client.Client.java", "BodyUseAPI": [], "Fixed commit": "a060ad168c56fa760803d52ba2b657e2867460eb", "Url": "https://api.github.com/repos/CellyApp/jvinsights", "Date": "2014-08-08T00:59:53Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ly.cel.jvinsights.client.Client.get(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((response != null) && ((response.length()) > 0)) { return new org.json.JSONObject(response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4422/buggy-version/src.main.java.ly.cel.jvinsights.client.Client.java", "BodyUseAPI": [], "Fixed commit": "a060ad168c56fa760803d52ba2b657e2867460eb", "Url": "https://api.github.com/repos/CellyApp/jvinsights", "Date": "2014-08-08T00:59:53Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstClaimDone) { sbuild.append(','); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6481/buggy-version/src.org.wikibase.data.Entity.java", "BodyUseAPI": [], "Fixed commit": "4ef5171ad7e58b319da3ffa8247786d508ff5df0", "Url": "https://api.github.com/repos/intracer/wiki-java", "Date": "2016-04-05T14:19:13Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((filteredCountries) != null) && ((filteredCountries.size()) > i)) { codePicker.setSelectedCountry(filteredCountries.get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3575/buggy-version/ccp.src.main.java.com.hbb20.CountryCodeAdapter.java", "BodyUseAPI": ["com.hbb20.CountryCodePicker.setSelectedCountry(filteredCountries.get(i))", "java.util.List<com.hbb20.Country>.get(int)"], "Fixed commit": "6731466411d5cecd44591388d7f3afa087029823", "Url": "https://api.github.com/repos/hbb20/CountryCodePickerProject", "Date": "2017-06-09T07:53:23Z"},
{"Line": "=>1079", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((query.isQueryLiveInstances()) && (query.isQueryHistoryInstances())) && ((query.getSorts().size()) > 0)) { throw new com.enioka.jqm.api.JqmInvalidRequestException(\"cannot use sorting when querying both live and historical instances\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8406/buggy-version/jqm-all.jqm-client.jqm-api-client-hibernate.src.main.java.com.enioka.jqm.api.HibernateClient.java", "BodyUseAPI": [], "Fixed commit": "7e5a2f9e46f8015878cc63d9b420761f27ac0b7f", "Url": "https://api.github.com/repos/enioka/jqm", "Date": "2014-10-28T14:41:40Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numberPosition) < (numberIndices.length)) { numberIndices[numberPosition] = numberComponents[component]; (numberPosition)++; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6948/buggy-version/app.src.main.java.com.misczak.joinmybridge.ImportUtilities.java", "BodyUseAPI": [], "Fixed commit": "a5665fefef4d52a9bfdaaf9682636b2580eab81e", "Url": "https://api.github.com/repos/misczak/JoinMyBridge", "Date": "2015-04-17T04:00:20Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((object.mstate) == (States.SHIELD)) { if ((x) < 138) x = 138; else x = (((Surface.WIDTH) - 128) - 10) - ((age.com.colortap.Ball.radius) * 2); speedX *= -1; return false; }else if ((object.mstate) == (States.COLORSPACE)) { if (object.getCollisionRect().contains(this.getCollisionRect())) return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1705/buggy-version/app.src.main.java.age.com.colortap.Ball.java", "BodyUseAPI": ["age.com.colortap.GameObject.getCollisionRect()", "object.getCollisionRect().contains(this.getCollisionRect())"], "Fixed commit": "2114476129a6da4da3b4e108b31796d1e6492ee6", "Url": "https://api.github.com/repos/adarshwshaw/ColorTap", "Date": "2017-03-24T19:19:20Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_input) == null) m_input = a_input; else m_input2 = a_input;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1800/buggy-version/Calculator.src.calculator.MatrixCalculator.java", "BodyUseAPI": [], "Fixed commit": "19d365b39f95349a9754e1fbf88583ef0bdcf111", "Url": "https://api.github.com/repos/cbrandt713/Calculator", "Date": "2017-03-22T19:43:08Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAlive) { beenVisited = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5000/buggy-version/src.com.dbteku.gamoeoflife.models.Tile.java", "BodyUseAPI": [], "Fixed commit": "831d53081cbd91654d9ec83e11cdf3dea9c1e504", "Url": "https://api.github.com/repos/dbteku/GameOfLife", "Date": "2017-01-13T18:03:01Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (field.isAnnotationPresent(io.github.benas.jpopulator.api.Exclude.class)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3997/buggy-version/src.main.java.io.github.benas.jpopulator.impl.PopulatorImpl.java", "BodyUseAPI": [], "Fixed commit": "2bff0be892b20a0162612270252c56aa0e71a74f", "Url": "https://api.github.com/repos/benas/random-beans", "Date": "2015-01-29T22:00:20Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(abort)) { objval = model.get(GRB.DoubleAttr.ObjVal); for (gurobi.GRBVar var : vars) soln.add(var.get(GRB.DoubleAttr.X)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6136/buggy-version/src.edu.rutgers.MOST.optimization.solvers.GurobiSolver.java", "BodyUseAPI": [], "Fixed commit": "b35893daf1b10b81e3ca4b08164e5634af031692", "Url": "https://api.github.com/repos/desmondlun/MOST", "Date": "2014-05-21T17:05:00Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["chunk.getPos().getChunkPos()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ticket.getChunkList().contains(pos)) { net.minecraftforge.common.ForgeChunkManager.unforceChunk(ticket, pos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5108/buggy-version/src.main.java.com.feed_the_beast.ftbu.api_impl.LoadedChunkStorage.java", "BodyUseAPI": ["net.minecraftforge.common.ForgeChunkManager.unforceChunk(ForgeChunkManager.Ticket,net.minecraft.util.math.ChunkPos)"], "Fixed commit": "ae9940b32c988877dcbd5d8eadf657dcdfca015c", "Url": "https://api.github.com/repos/LatvianModder/FTBUtilities", "Date": "2016-11-09T15:30:10Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["chunk.getPos().getChunkPos()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(ticket.getChunkList().contains(pos))) { net.minecraftforge.common.ForgeChunkManager.forceChunk(ticket, pos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5108/buggy-version/src.main.java.com.feed_the_beast.ftbu.api_impl.LoadedChunkStorage.java", "BodyUseAPI": ["net.minecraftforge.common.ForgeChunkManager.forceChunk(ForgeChunkManager.Ticket,net.minecraft.util.math.ChunkPos)"], "Fixed commit": "ae9940b32c988877dcbd5d8eadf657dcdfca015c", "Url": "https://api.github.com/repos/LatvianModder/FTBUtilities", "Date": "2016-11-09T15:30:10Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.tonyodev.fetch.Utils.fileExist(filePath)) { throw new com.tonyodev.fetch.exception.EnqueueException(((\"File already located at filePath: \" + filePath) + \". The requested will not be enqueued.\"), ERROR_REQUEST_ALREADY_EXIST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2846/buggy-version/fetch.src.main.java.com.tonyodev.fetch.FetchService.java", "BodyUseAPI": [], "Fixed commit": "b2738393f8467692c80d21c074fbd52be62b4484", "Url": "https://api.github.com/repos/tonyofrancis/Fetch", "Date": "2017-02-23T16:05:08Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.tonyodev.fetch.Utils.fileExist(request.getFilePath())) { throw new com.tonyodev.fetch.exception.EnqueueException(((\"File already located at filePath: \" + (request.getFilePath())) + \". The requested will not be enqueued.\"), ERROR_REQUEST_ALREADY_EXIST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2846/buggy-version/fetch.src.main.java.com.tonyodev.fetch.Fetch.java", "BodyUseAPI": ["com.tonyodev.fetch.request.Request.getFilePath()"], "Fixed commit": "b2738393f8467692c80d21c074fbd52be62b4484", "Url": "https://api.github.com/repos/tonyofrancis/Fetch", "Date": "2017-02-23T16:05:08Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.length) > 1) interf = ((java.lang.Boolean) (data[1]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/9142/buggy-version/core.src.gaia.cu9.ari.gaiaorbit.interfce.components.CameraComponent.java", "BodyUseAPI": [], "Fixed commit": "9ab94128b8b9cc551df5f915e3dccc679ad98db4", "Url": "https://api.github.com/repos/langurmonkey/gaiasky", "Date": "2016-09-29T12:23:19Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.camel.component.netty.handlers.ClientChannelHandler.getExchange(org.jboss.netty.channel.ChannelHandlerContext)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (exchange == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1874/buggy-version/components.camel-netty.src.main.java.org.apache.camel.component.netty.handlers.ClientChannelHandler.java", "BodyUseAPI": [], "Fixed commit": "525fd0cc354821c57234239866dbf8895418aa21", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-01-17T02:57:43Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPotionID()) >= (Potion.potionTypes.length)) { setDead(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4367/buggy-version/src.pneumaticCraft.common.entity.projectile.EntityPotionCloud.java", "BodyUseAPI": [], "Fixed commit": "6ae7404f8b5bb9e74a444a3aaff29a765e598e33", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2014-11-09T18:53:15Z"},
{"Line": "=>507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (action.equals(\"BeginProblem\")) isExample = true; else if ((action.equals(\"EndProblem\")) && (!isExample)) { probTime = elapsedTime - begTime; if (((probTime < 6000) && (attemptIx == 0)) && (nHints == 0)) nSkips++; }else if ((action.equals(\"Hint\")) && (!isExample)) { nHints++; if (firstActTime == 0) firstActTime = elapsedTime - begTime; }else if ((action.equals(\"Attempt\")) && (!isExample)) { attemptIx++; if (firstActTime == 0) firstActTime = elapsedTime - begTime; if (isCorrect) { solved = true; if (correctAttemptIx == 0) { correctAttemptIx = attemptIx; problemInfo.avgComprehensionTime = (((problemInfo.avgComprehensionTime) * (problemInfo.nStudsSolved)) + firstActTime) / ((problemInfo.nStudsSolved) + 1); } if (studEncounters == 1) { if (correctAttemptIx == 1) (problemInfo.nStudsSolvedOnEncounter1Attempt1)++; else if (correctAttemptIx == 2) (problemInfo.nStudsSolvedOnEncounter1Attempt2)++; } }else { if (userInput.equalsIgnoreCase(\"a\")) nA++; else if (userInput.equalsIgnoreCase(\"b\")) nB++; else if (userInput.equalsIgnoreCase(\"c\")) nC++; else if (userInput.equalsIgnoreCase(\"d\")) nD++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2992/buggy-version/woServer.src.edu.umass.ckc.wo.woreports.ProblemDifficultyReport.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "51a32eaae33ca21fe3d3100cc3277e9d1288db27", "Url": "https://api.github.com/repos/marshall62/mathspring", "Date": "2015-12-08T20:24:04Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((item.getDescription()) != null) && (!(item.getDescription().equals(\"\")))) { org.dom4j.Element descriptionElement = itemElement.addElement(\"Description\"); descriptionElement.setText(item.getDescription()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5606/buggy-version/vanstone-centralserver-common.src.main.java.com.vanstone.centralserver.common.weixin.wrap.msg.ReplyMsg4News.java", "BodyUseAPI": ["com.vanstone.centralserver.common.weixin.wrap.msg.ArticleItem.getDescription()", "org.dom4j.Element.setText(item.getDescription())"], "Fixed commit": "3710fcc822cb001203575be63ed62e85622c2237", "Url": "https://api.github.com/repos/soltex/centralserver", "Date": "2015-04-22T04:51:10Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((item.getUrl()) != null) && (!(item.getUrl().equals(\"\")))) { org.dom4j.Element UrlElement = itemElement.addElement(\"Url\"); UrlElement.setText(item.getUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5606/buggy-version/vanstone-centralserver-common.src.main.java.com.vanstone.centralserver.common.weixin.wrap.msg.ReplyMsg4News.java", "BodyUseAPI": ["org.dom4j.Element.setText(item.getUrl())", "com.vanstone.centralserver.common.weixin.wrap.msg.ArticleItem.getUrl()"], "Fixed commit": "3710fcc822cb001203575be63ed62e85622c2237", "Url": "https://api.github.com/repos/soltex/centralserver", "Date": "2015-04-22T04:51:10Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((item.getPicUrl()) != null) && (!(item.getPicUrl().equals(\"\")))) { org.dom4j.Element picUrlElement = itemElement.addElement(\"PicUrl\"); picUrlElement.setText(item.getPicUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5606/buggy-version/vanstone-centralserver-common.src.main.java.com.vanstone.centralserver.common.weixin.wrap.msg.ReplyMsg4News.java", "BodyUseAPI": ["com.vanstone.centralserver.common.weixin.wrap.msg.ArticleItem.getPicUrl()", "org.dom4j.Element.setText(item.getPicUrl())"], "Fixed commit": "3710fcc822cb001203575be63ed62e85622c2237", "Url": "https://api.github.com/repos/soltex/centralserver", "Date": "2015-04-22T04:51:10Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (preds[layer].lock.isLocked()) preds[layer].lock.unlock();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/480/buggy-version/fineGrained.SkipList.java", "BodyUseAPI": ["preds[layer].lock.unlock()"], "Fixed commit": "c70de06097d80d21137dcd08eb6e2b159b666924", "Url": "https://api.github.com/repos/ConcurrentSkiplists/concurrent-skiplists", "Date": "2016-11-13T05:38:13Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(_isReview)) { _levelSelected.nextLevel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/777/buggy-version/src.app.model.QuizModel.java", "BodyUseAPI": [], "Fixed commit": "b4f57ab68e2f80675004542b73e91205d0e72fc3", "Url": "https://api.github.com/repos/FMcIntosh/VoxSpellFM", "Date": "2016-10-10T07:58:40Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.length()) > 2) sb.delete(((sb.length()) - 2), sb.length());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1623/buggy-version/src.su.mpstsl.xml.Parser.java", "BodyUseAPI": ["java.lang.StringBuilder.length()", "java.lang.StringBuilder.delete(int,int)", "java.lang.StringBuilder.length()"], "Fixed commit": "3146747b2d364d8f3fbb0ca1c8b93b26825451d7", "Url": "https://api.github.com/repos/ChSergeiG/XML_helper", "Date": "2017-11-02T15:12:22Z"},
{"Line": "=>640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((receipt) == null) { return -1L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2975/buggy-version/app.src.main.java.devs.erasmus.epills.controller.AddPillSetTime.java", "BodyUseAPI": [], "Fixed commit": "1ec071d597052c055e71ff38085a156277de4872", "Url": "https://api.github.com/repos/jcolladosp/ePills", "Date": "2017-11-28T13:57:08Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this._Value.isEmpty()) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7867/buggy-version/JittyJ.Program.src.main.java.mks.arguments.holders.ListArgument.java", "BodyUseAPI": [], "Fixed commit": "03c473da8b8a31893cae0db7455aed4647536bee", "Url": "https://api.github.com/repos/MarkoPaul0/Jiffy-J", "Date": "2017-03-16T01:21:32Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this._Value.isEmpty()) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7867/buggy-version/JittyJ.Program.src.main.java.mks.arguments.holders.MapArgument.java", "BodyUseAPI": [], "Fixed commit": "03c473da8b8a31893cae0db7455aed4647536bee", "Url": "https://api.github.com/repos/MarkoPaul0/Jiffy-J", "Date": "2017-03-16T01:21:32Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tzg.plugin.dependency.support.DependencySupport.getDependenciesElement(org.dom4j.Document)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dependencies == null) { org.dom4j.Element rootElement = document.getRootElement(); dependencies = rootElement.addElement(\"dependencies\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1061/buggy-version/src.main.java.com.tzg.plugin.dependency.goal.DependencyGen.java", "BodyUseAPI": [], "Fixed commit": "8e8fc87fad02849c71594096f20220769d54de4b", "Url": "https://api.github.com/repos/1494445739/tzg-maven-plugin", "Date": "2017-05-22T11:19:08Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tzg.plugin.dependency.support.DependencySupport.getDependenciesElement(org.dom4j.Document)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (dependencies != null) { dependencyList = com.tzg.plugin.dependency.support.DependencySupport.getDependencyElement(component, dependencies); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1061/buggy-version/src.main.java.com.tzg.plugin.dependency.goal.DependencyGen.java", "BodyUseAPI": ["com.tzg.plugin.dependency.support.DependencySupport.getDependencyElement(java.lang.String,org.dom4j.Element)"], "Fixed commit": "8e8fc87fad02849c71594096f20220769d54de4b", "Url": "https://api.github.com/repos/1494445739/tzg-maven-plugin", "Date": "2017-05-22T11:19:08Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((accumuloTable) == null) || (accumuloTable.isEmpty())) { if ((getSchema()) != null) { return getSchema().getTableName(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3923/buggy-version/cognition.spark.lens.src.main.java.com.boozallen.cognition.lens.Criteria.java", "BodyUseAPI": [], "Fixed commit": "9625644a7f01f7fc0c3d6767f62dd370d5ea4d1a", "Url": "https://api.github.com/repos/boozallen/cognition", "Date": "2016-01-20T19:33:14Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.O)) { return ((android.os.PowerManager) (context.getSystemService(context.POWER_SERVICE))).isIgnoringBatteryOptimizations(context.getPackageName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2827/buggy-version/vector.src.main.java.im.vector.util.PreferencesManager.java", "BodyUseAPI": [], "Fixed commit": "adc0446fd95dbcf2dba4d4f96cd8ea191be28efc", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2017-12-06T14:17:51Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rankerType == (QueryHandler.CgiArguments.RankerType.LINEAR)) { fileName1 = (\"hw1.2-\" + (edu.nyu.cs.cs2580.SearchEngine.typeToString(rankerType))) + \".tsv\"; }else { fileName1 = (\"hw1.1-\" + (edu.nyu.cs.cs2580.SearchEngine.typeToString(rankerType))) + \".tsv\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3743/buggy-version/src.edu.nyu.cs.cs2580.SearchEngine.java", "BodyUseAPI": ["edu.nyu.cs.cs2580.SearchEngine.typeToString(QueryHandler.CgiArguments.RankerType)", "edu.nyu.cs.cs2580.SearchEngine.typeToString(QueryHandler.CgiArguments.RankerType)"], "Fixed commit": "4b52495741a94fa4d6a2d9d2ddb18e88cd1af8e9", "Url": "https://api.github.com/repos/BobZcao/SillyBeeWSE", "Date": "2016-10-14T20:31:04Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((exception.getLocalizedMessage()) != null) { android.util.Log.e(\"Id Response Error 2\", exception.getLocalizedMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7372/buggy-version/PHC-Android.PHC.src.main.java.phc.android.MainActivity.java", "BodyUseAPI": ["java.lang.Exception.getLocalizedMessage()", "android.util.Log.e(java.lang.String,java.lang.String)"], "Fixed commit": "be938fa497a608218adc9efc17a9605be0382bec", "Url": "https://api.github.com/repos/calblueprint/PHC", "Date": "2014-11-12T02:30:26Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (camm.isGlobale()) camm.getStato().gestisciStato(camm, StatoCammino.PERCORSO_TUTTO);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3561/buggy-version/src.inputDati.InserimentoCammino.java", "BodyUseAPI": ["camm.getStato().gestisciStato(testSuiteDiagnosi.CamminoAzioni,StatoCammino.PERCORSO_TUTTO)", "testSuiteDiagnosi.CamminoAzioni.getStato()"], "Fixed commit": "03d5942c35f33076b81c9e1cd04728b61df551f5", "Url": "https://api.github.com/repos/UNIBS-Reds/ProgettoZanella-Parte1", "Date": "2014-12-20T12:01:48Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(new java.io.File(infoFile).exists())) { java.lang.System.out.println(\"RunAgainst Source Is Not Applicable For This Technology\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2590/buggy-version/phresco-maven-plugin.src.main.java.com.photon.phresco.plugins.PhrescoStart.java", "BodyUseAPI": [], "Fixed commit": "b68cb4fcb7e86f1582ab6aa8c838f2b90df44923", "Url": "https://api.github.com/repos/photon-infotech/plugins", "Date": "2014-05-05T12:31:12Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!successfulLaunch) throw exception;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1108/buggy-version/src.main.java.com.orasi.utils.OrasiDriver.java", "BodyUseAPI": [], "Fixed commit": "490488d44e4b7a062ed4449d7d5bf8740a8a76a1", "Url": "https://api.github.com/repos/Orasi/Chameleon", "Date": "2015-12-14T15:48:45Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shareActionProvider) != null) { shareActionProvider.setShareIntent(shareIntent); }else { android.util.Log.d(it.jaschke.alexandria.BookDetail.LOG_TAG, \"Share Action Provider is null?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6179/buggy-version/app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": [], "Fixed commit": "4730c2a78cb322d386ff2239d3c360f5acc1382b", "Url": "https://api.github.com/repos/sommayah/Alexandria", "Date": "2015-11-21T23:00:23Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cfile.exists()) == false) cfile.mkdir();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/9102/buggy-version/src.de.sander.til.PrimeUtil.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "e98982f88cef5976d4ef928004d02314d74007a2", "Url": "https://api.github.com/repos/tilsander/primeexplorer", "Date": "2015-05-15T20:21:07Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isValidData) && ((cursor) != null)) { return cursor.getCount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2367/buggy-version/library.src.main.java.com.devbrackets.android.recyclerext.adapter.RecyclerHeaderCursorAdapter.java", "BodyUseAPI": [], "Fixed commit": "bdaa3ff50ad84f1750d8d227efda7c66618e1aae", "Url": "https://api.github.com/repos/brianwernick/RecyclerExt", "Date": "2015-08-12T22:16:58Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.divy.common.bo.rest.LinkBuilderFactoryImpl.LOGGER.isDebugEnabled()) { org.divy.common.bo.rest.LinkBuilderFactoryImpl.LOGGER.debug(\"Resolving Host for the URL {} \", requestUriInfo.getAbsolutePath().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/912/buggy-version/endpoint-root.endpoint-core.src.main.java.org.divy.common.bo.rest.LinkBuilderFactoryImpl.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,requestUriInfo.getAbsolutePath().toString())"], "Fixed commit": "73fac39a17ecde4d6733ca81c430439509bc7928", "Url": "https://api.github.com/repos/divyakumarjain/bo-framework", "Date": "2017-03-24T06:55:37Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (found) message = \"Good code\"; else message = \"Sorry code not found\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2669/buggy-version/DebuggingExercises.DebugEight1.java", "BodyUseAPI": [], "Fixed commit": "402c64b11f49aee1a9cb0260c86c68b098080bcd", "Url": "https://api.github.com/repos/Jonathon-R-C/cp2406_farrell8_ch08", "Date": "2016-09-04T17:15:16Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (progressDialog.isShowing()) { progressDialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2195/buggy-version/ETA.src.com.eta.SignInActivity.java", "BodyUseAPI": ["android.app.ProgressDialog.dismiss()"], "Fixed commit": "d913cddecaec706ce77a0d69c23ff88dbfd2218f", "Url": "https://api.github.com/repos/ksweta/ETA", "Date": "2014-12-18T17:25:42Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (progressDialog.isShowing()) { progressDialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2195/buggy-version/ETA.src.com.eta.SignInActivity.java", "BodyUseAPI": ["android.app.ProgressDialog.dismiss()"], "Fixed commit": "d913cddecaec706ce77a0d69c23ff88dbfd2218f", "Url": "https://api.github.com/repos/ksweta/ETA", "Date": "2014-12-18T17:25:42Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (minS == null) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2063/buggy-version/src.main.java.robotutils.planning.DStarLite.java", "BodyUseAPI": [], "Fixed commit": "48c97e59a56d5b76b55dd0533ab1780e302a57fa", "Url": "https://api.github.com/repos/psigen/robotutils", "Date": "2013-07-20T01:19:06Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (namespaceURI == null) throw new java.io.IOException(((\"namespace '\" + namespace) + \"' is unknown\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/330/buggy-version/src.main.java.com.github.aiderpmsi.pims.grouper.utils.TreeBrowser.java", "BodyUseAPI": [], "Fixed commit": "da0b5e28c05f0261ff25ecb55dbd7c39f4ff540b", "Url": "https://api.github.com/repos/aiderpmsi/pims", "Date": "2014-05-21T07:03:37Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSet) { valueFromJSON = new java.util.HashSet(((java.util.List) (valueFromJSON))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/9171/buggy-version/src.api.web.gw2.mapping.core.JsonpSAXMarshaller.java", "BodyUseAPI": [], "Fixed commit": "f2f3c32559742272af1feff2f6943088cf5bfe9c", "Url": "https://api.github.com/repos/fabricebouye/gw2-web-api-jsonp", "Date": "2016-03-20T23:15:37Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSet) { valueFromJSON = new java.util.HashSet(((java.util.List) (valueFromJSON))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/9171/buggy-version/src.api.web.gw2.mapping.core.JsonpDOMMarshaller.java", "BodyUseAPI": [], "Fixed commit": "f2f3c32559742272af1feff2f6943088cf5bfe9c", "Url": "https://api.github.com/repos/fabricebouye/gw2-web-api-jsonp", "Date": "2016-03-20T23:15:37Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<state.Star, graphic.Render.Visibility>.get(state.Star)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((previous == (graphic.Render.Visibility.VISIBLE)) && (next == null)) next = graphic.Render.Visibility.REMEMBERED;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2003/buggy-version/src.empire.View.java", "BodyUseAPI": [], "Fixed commit": "eabea27a8cc9af4337417eda49d0608bb7a3bdda", "Url": "https://api.github.com/repos/dlangdon/ToTameTheVoid-java", "Date": "2013-12-26T04:33:08Z"},
{"Line": "=>810", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (visitor.hasResult()) { com.sun.tools.javac.tree.JCTree.JCExpression result = ((com.sun.tools.javac.tree.JCTree.JCExpression) (visitor.getSingleResult())); if (primary2.getUnboxed()) { result = boxType(result, primary2.getTypeModel()); } this.instance = result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7598/buggy-version/src.com.redhat.ceylon.compiler.codegen.ExpressionTransformer.java", "BodyUseAPI": ["com.redhat.ceylon.compiler.codegen.CeylonVisitor.getSingleResult()"], "Fixed commit": "ae444be9c3193314f02d9a65c66ea9975c1059de", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2011-11-30T07:55:41Z"},
{"Line": "=>694", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerStats.damageCounter) == 0) { playerStats.damageCounter = ConfigManagerCore.suffocationCooldown; player.attackEntityFrom(DamageSourceGC.oxygenSuffocation, (((ConfigManagerCore.suffocationDamage) * (2 + (playerStats.incrementalDamage))) / 2)); if (ConfigManagerCore.hardMode) (playerStats.incrementalDamage)++; micdoodle8.mods.galacticraft.api.event.oxygen.GCCoreOxygenSuffocationEvent suffocationEventPost = new micdoodle8.mods.galacticraft.api.event.oxygen.GCCoreOxygenSuffocationEvent.Post(player); MinecraftForge.EVENT_BUS.post(suffocationEventPost); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2411/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.entities.player.GCPlayerHandler.java", "BodyUseAPI": [], "Fixed commit": "052d73670c0e6dcb7d465143e21eceb1da140be0", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2016-11-20T14:29:33Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((name) != null) || (name.isEmpty())) name = phoneNumber;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4863/buggy-version/app.src.main.java.de.roughriders.jf.eta.activities.TripActivity.java", "BodyUseAPI": [], "Fixed commit": "149246e1c87e434e6268b2ecf859159fdd63f1ce", "Url": "https://api.github.com/repos/b0wter/ETA", "Date": "2016-08-06T10:29:31Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Document.select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (errorDiv.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5630/buggy-version/src.main.java.fogetti.phish.storm.client.GoogleTrends.java", "BodyUseAPI": [], "Fixed commit": "721377fd0dd662960b52f55271c08d2afebccf30", "Url": "https://api.github.com/repos/Fogetti/fogetti-phish-storm", "Date": "2016-05-22T18:19:56Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(predicates.isEmpty())) { for (org.failearly.ajunit.internal.predicate.Predicate predicate : predicates) { stringBuilder.append(predicate).append(\",\"); } stringBuilder.setLength(((stringBuilder.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5148/buggy-version/ajunit.src.main.java.org.failearly.ajunit.internal.predicate.standard.CompositePredicateBase.java", "BodyUseAPI": [], "Fixed commit": "3953fe0351a8166c3c9d2154888448ab3bb6cd0e", "Url": "https://api.github.com/repos/loddar/ajunit", "Date": "2014-08-09T11:42:43Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.core.annotation.AnnotationAttributes.getStringArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.onetwo.common.utils.LangUtils.isEmpty(packagesToScan)) { packagesToScan = new java.lang.String[]{ org.springframework.util.ClassUtils.getPackageName(importingClassMetadata.getClassName()) }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7836/buggy-version/src.main.java.org.onetwo.dbm.spring.DbmRepositoryRegistarOfEnableDbm.java", "BodyUseAPI": [], "Fixed commit": "c87f59307ecc20caeb7de10f52533c349ec899ba", "Url": "https://api.github.com/repos/wayshall/dbm", "Date": "2017-07-24T09:49:06Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["targetChannel.getChannel().pipeline()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pipeline.get(Constants.IDLE_STATE_HANDLER)) == null) { pipeline.addBefore(Constants.TARGET_HANDLER, Constants.IDLE_STATE_HANDLER, new io.netty.handler.timeout.IdleStateHandler(socketIdleTimeout, socketIdleTimeout, 0, java.util.concurrent.TimeUnit.MILLISECONDS)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3739/buggy-version/http.org.wso2.carbon.transport.http.netty.src.main.java.org.wso2.carbon.transport.http.netty.sender.channel.pool.ConnectionManager.java", "BodyUseAPI": ["io.netty.channel.ChannelPipeline.addBefore(Constants.TARGET_HANDLER,Constants.IDLE_STATE_HANDLER,io.netty.handler.timeout.IdleStateHandler)"], "Fixed commit": "7ba2530395f502695aa1df76f2047467606271f1", "Url": "https://api.github.com/repos/lankavitharana/carbon-transports", "Date": "2017-08-03T06:51:43Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["targetChannel.getChannel().pipeline()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pipeline.get(Constants.LOGGING_HANDLER)) == null) { pipeline.addBefore(Constants.IDLE_STATE_HANDLER, Constants.LOGGING_HANDLER, new org.wso2.carbon.transport.http.netty.listener.CarbonLoggingHandler(\"wirelog.http.upstream\", io.netty.handler.logging.LogLevel.DEBUG, sourceHandler.getInboundChannelContext().channel().id().asShortText())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3739/buggy-version/http.org.wso2.carbon.transport.http.netty.src.main.java.org.wso2.carbon.transport.http.netty.sender.channel.pool.ConnectionManager.java", "BodyUseAPI": ["io.netty.channel.ChannelPipeline.addBefore(Constants.IDLE_STATE_HANDLER,Constants.LOGGING_HANDLER,org.wso2.carbon.transport.http.netty.listener.CarbonLoggingHandler)"], "Fixed commit": "7ba2530395f502695aa1df76f2047467606271f1", "Url": "https://api.github.com/repos/lankavitharana/carbon-transports", "Date": "2017-08-03T06:51:43Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<org.iatoki.judgels.jerahmeel.models.entities.SessionProblemModel>>.get(courseSessionModel.sessionJid)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sessionProblemModels == null) { sessionProblemModels = com.google.common.collect.ImmutableList.of(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5218/buggy-version/app.org.iatoki.judgels.jerahmeel.services.impls.CourseSessionServiceUtils.java", "BodyUseAPI": [], "Fixed commit": "ef56337647a02cec521db07a578938f99aad7a5b", "Url": "https://api.github.com/repos/judgels/jerahmeel", "Date": "2015-10-06T09:20:22Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(loc.grid.accessibleArea.containsKey(p1))) { java.util.Map.Entry<java.lang.Integer, java.lang.Integer> bestPt = new java.util.AbstractMap.SimpleEntry<java.lang.Integer, java.lang.Integer>(0, 0); double bestDist = -1; for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> pt : loc.grid.accessibleArea.keySet()) { if (((loc.grid.dist(p1, ((java.util.AbstractMap.SimpleEntry<java.lang.Integer, java.lang.Integer>) (pt)))) < bestDist) || (bestDist == (-1))) { bestPt = pt; bestDist = loc.grid.dist(p1, ((java.util.AbstractMap.SimpleEntry<java.lang.Integer, java.lang.Integer>) (pt))); } } path.add(((java.util.AbstractMap.SimpleEntry<java.lang.Integer, java.lang.Integer>) (bestPt))); }else { path.add(straightLine(p1, p2).peekLast()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5957/buggy-version/Derpbot.src.edu.mit.felixsun.maslab.Navigation.java", "BodyUseAPI": ["loc.grid.dist(java.util.AbstractMap.SimpleEntry<java.lang.Integer, java.lang.Integer>,java.util.Map.Entry<java.lang.Integer, java.lang.Integer>)", "loc.grid.accessibleArea.keySet()", "edu.mit.felixsun.maslab.Navigation.straightLine(java.util.AbstractMap.SimpleEntry<java.lang.Integer, java.lang.Integer>,java.util.AbstractMap.SimpleEntry<java.lang.Integer, java.lang.Integer>)", "java.util.LinkedList<java.util.AbstractMap.SimpleEntry<java.lang.Integer, java.lang.Integer>>.peekLast()", "loc.grid.dist(java.util.AbstractMap.SimpleEntry<java.lang.Integer, java.lang.Integer>,java.util.Map.Entry<java.lang.Integer, java.lang.Integer>)", "java.util.LinkedList<java.util.AbstractMap.SimpleEntry<java.lang.Integer, java.lang.Integer>>.add(java.util.AbstractMap.SimpleEntry<java.lang.Integer, java.lang.Integer>)"], "Fixed commit": "4075af5568d0d2b3dc1fdbe7687821d82c47be7b", "Url": "https://api.github.com/repos/cerathe/maslab-2014", "Date": "2014-01-31T05:27:58Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(eventsArrayList.contains(event))) { eventsArrayList.add(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7487/buggy-version/app.src.main.java.kg.kloop.android.redbutton.EventsTab.java", "BodyUseAPI": ["java.util.ArrayList<kg.kloop.android.redbutton.Event>.add(kg.kloop.android.redbutton.Event)"], "Fixed commit": "3b00b5a5c1e3059f463337f72c0a604b56b48dc0", "Url": "https://api.github.com/repos/AlexWalker28/REDbutton", "Date": "2017-08-29T14:16:17Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(eventArrayList.contains(event))) { eventArrayList.add(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7487/buggy-version/app.src.main.java.kg.kloop.android.redbutton.MapsTab.java", "BodyUseAPI": ["java.util.ArrayList<kg.kloop.android.redbutton.Event>.add(kg.kloop.android.redbutton.Event)"], "Fixed commit": "3b00b5a5c1e3059f463337f72c0a604b56b48dc0", "Url": "https://api.github.com/repos/AlexWalker28/REDbutton", "Date": "2017-08-29T14:16:17Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((expenseDto.getDocumentDto()) != null) && ((expenseDto.getDocumentDto().getOriginalFileName()) != null)) { updateDocument(expenseDto); }else { expenseDto.setDocumentDto(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/370/buggy-version/src.main.java.au.com.mason.expensemanager.service.TransactionService.java", "BodyUseAPI": ["au.com.mason.expensemanager.service.TransactionService<T, V, D>.updateDocument(T)", "T.setDocumentDto(<nulltype>)"], "Fixed commit": "4e401ee9b195b2adc7b3a5beba696c4dc0644f2c", "Url": "https://api.github.com/repos/cjmason8/expenseManager", "Date": "2017-11-02T07:06:16Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (segmentReader == null) segmentReader = m_segment.openForRead(m_cursorId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/899/buggy-version/src.frontend.org.voltdb.utils.PersistentBinaryDeque.java", "BodyUseAPI": [], "Fixed commit": "32ffe4cdbca45f22d379ee87c45403689ac87a21", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2016-08-10T21:23:14Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id) != null) { execute.close(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1479/buggy-version/src.main.java.com.arangodb.ArangoCursor.java", "BodyUseAPI": [], "Fixed commit": "56ad189b221a77b28100a21f9a31be082b1b94f9", "Url": "https://api.github.com/repos/arangodb/arangodb-java-driver", "Date": "2017-03-17T21:45:15Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > 0) it.d4nguard.rgrpg.Context.setDebug(java.lang.Boolean.parseBoolean(args[0])); else java.lang.System.out.println(it.d4nguard.rgrpg.Context.isDebug());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7014/buggy-version/src.it.d4nguard.rgrpg.commands.DebugCommand.java", "BodyUseAPI": ["java.lang.Boolean.parseBoolean(java.lang.String)", "it.d4nguard.rgrpg.Context.setDebug(boolean)"], "Fixed commit": "e7c1cfec82c705c955e0b94b1db1f78639266b20", "Url": "https://api.github.com/repos/kLeZ/RG-RPG", "Date": "2013-09-25T16:44:53Z"},
{"Line": "=>977", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((task.sentence.isGoal()) || (second_belief.isGoal())) newSentence = new nars.entity.Sentence(result, nars.io.Symbols.GOAL_MARK, truth, sx); else newSentence = new nars.entity.Sentence(result, nars.io.Symbols.JUDGMENT_MARK, truth, sx);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3022/buggy-version/nars_java.nars.inference.CompositionalRules.java", "BodyUseAPI": [], "Fixed commit": "1cf76642a14a398e0338af1bf3d613452849ab48", "Url": "https://api.github.com/repos/opennars/opennars", "Date": "2014-08-10T15:55:16Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (result.next()) return result.getInt(\"id\"); else throw new dict.DatabaseException(((\"There is no such word as \" + word) + \" in the database\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4471/buggy-version/ImageToLetter.src.dict.Dictionary.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(java.lang.String)"], "Fixed commit": "a422ae422209aeeb1f57173d6e633303ee19e965", "Url": "https://api.github.com/repos/wojcikk2903/ocr", "Date": "2014-04-25T01:28:00Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uri) == (MMS_URI)) { startTime /= 1000; endTime /= 1000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6720/buggy-version/SMSFixLibrary.src.com.mattprecious.smsfix.library.FixOld.java", "BodyUseAPI": [], "Fixed commit": "30f940dd3af17ec9a2b06252d443a1417c489431", "Url": "https://api.github.com/repos/mattprecious/smstimefix", "Date": "2012-12-13T23:50:38Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["config.getFormat().toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ext.equals(\"xlsx\")) { format = \"dd-MMM-yyyy\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2449/buggy-version/health.src.main.java.com.health.input.XlsParser.java", "BodyUseAPI": [], "Fixed commit": "a082e26b38ba80370e5a2b8680fa65a8bafbaddd", "Url": "https://api.github.com/repos/adamIqbal/Health", "Date": "2015-06-15T10:09:03Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (vehicle != null) { vehicle.setAxom(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7763/buggy-version/TrafficSimulator.src.com.kcl.keepitclean.main.simulatorengine.Context.java", "BodyUseAPI": ["com.kcl.keepitclean.main.vehicle.Vehicle.setAxom(java.awt.Point)"], "Fixed commit": "a3aed311aab32504c0be1e9b93d2090eaf5c745a", "Url": "https://api.github.com/repos/daniel-arturo-mendoza/Traffic", "Date": "2016-03-31T12:18:21Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((expr) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/607/buggy-version/Compiler.java.AppleCoreCompiler.AST.Node.java", "BodyUseAPI": [], "Fixed commit": "2a95b1ee0d5075c77193f97a60e558b4d0f84bf5", "Url": "https://api.github.com/repos/bocchino/AppleCore", "Date": "2012-12-09T04:16:27Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["blackberry.ui.dialog.SelectDialog.getLeafFieldWithFocus()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (field == (_doneButton)) { fieldChanged(_doneButton, (-1)); }else { _list.invokeAction(Field.ACTION_INVOKE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1798/buggy-version/api.dialog.src.main.java.blackberry.ui.dialog.SelectDialog.java", "BodyUseAPI": [], "Fixed commit": "5758b41414e921524f4f796ca975f457764ce761", "Url": "https://api.github.com/repos/blackberry-webworks/WebWorks", "Date": "2011-11-21T16:21:25Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (maxAmount()) { android.widget.Toast.makeText(getApplicationContext(), \"\uc785\ub825\ud560 \uc218 \uc788\ub294 \ucd5c\ub300 \uc218\ub7c9\uc744 \ucd08\uacfc\ud558\uc600\uc2b5\ub2c8\ub2e4.\", Toast.LENGTH_SHORT).show(); }else if (addProduct()) { if ((product) != null) { android.widget.Toast.makeText(getApplicationContext(), \"\uae30\uc874\uc758 \ubb3c\ud488\uc774 \uc218\uc815\ub418\uc5c8\uc2b5\ub2c8\ub2e4.\", Toast.LENGTH_SHORT).show(); setResult(team15.pos.RESULT_OK); }else { android.widget.Toast.makeText(getApplicationContext(), \"\uc0c8\ub85c\uc6b4 \ubb3c\ud488\ub4f1\ub85d\uc774 \uc644\ub8cc\ub418\uc5c8\uc2b5\ub2c8\ub2e4.\", Toast.LENGTH_SHORT).show(); } finish(); }else { android.widget.Toast.makeText(getApplicationContext(), \"\uc5d0\ub7ec.\", Toast.LENGTH_SHORT).show(); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5291/buggy-version/app.src.main.java.team15.pos.ProductAddActivity.java", "BodyUseAPI": [], "Fixed commit": "0f3e6195dfe8a1d0232f8a803c13757fb33b4156", "Url": "https://api.github.com/repos/Park-JunHyung/Pos", "Date": "2017-12-22T05:14:45Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == sequenceStartIndex) { stringBuilder.append(tokensList.get(i)); stringBuilder.append(\" \"); }else if (allowedTags.contains(tag)) { stringBuilder.append(tokensList.get(i)); stringBuilder.append(\" \"); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2154/buggy-version/src.main.java.com.semanticRelationsExtractor.extraction.predicate.verb.sequence.VerbPredicateSequenceExtractorImpl.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.util.List<java.lang.String>.get(int)", "java.lang.StringBuilder.append(java.lang.String)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "bf2dffdf8313bdeef335e497ddf053df80a79cf9", "Url": "https://api.github.com/repos/ares2015/SemanticRelationsExtractorForNLPTraining", "Date": "2017-06-05T18:48:26Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getUrl4Rec()) != null) this.startStreamRecording();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5891/buggy-version/app.src.main.java.com.grapsas.android.streamrecorder.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7b5341fa937cb9fde7da44d6204573f86c0c1d63", "Url": "https://api.github.com/repos/GrapsasFilippos/StreamRecorder", "Date": "2016-04-18T06:44:09Z"},
{"Line": "=>1990", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(verifier.verify(rootBinding, this))) { failed = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6457/buggy-version/ttt-ttv.src.main.java.com.skynav.ttv.app.TimedTextVerifier.java", "BodyUseAPI": [], "Fixed commit": "6065c14930fb4c5881fe0f1c4710e34612af75a4", "Url": "https://api.github.com/repos/RBMHTechnology/ttt", "Date": "2016-01-25T14:16:46Z"},
{"Line": "=>1607", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fc.getReturnType().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (returnType.substring(((returnType.indexOf('[')) + 1), returnType.indexOf(']')).equals(\"int\")) code.print(((\"i32 @\" + (fc.getName())) + \"(\")); else code.print(((\"void @\" + (fc.getName())) + \"(\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8478/buggy-version/cetus.LLVMCodeGenPass.java", "BodyUseAPI": [], "Fixed commit": "2c2c0ac612301f5730faffb2873a0108c00a49ee", "Url": "https://api.github.com/repos/sgaffer/ece466project1", "Date": "2011-10-15T22:25:55Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sb.toString().equals(\"\u4e0b\u4e00\u6b65\")) { android.util.Log.d(\"RECOGNIZER\", \"\u90a3\u6211\u5c31\u4e0b\u4e00\u6b65\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6900/buggy-version/app.src.main.java.com.example.rach.recipe.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "60875b43e5b96ac93bd1400549f46a1fa52c7b10", "Url": "https://api.github.com/repos/yueming-Chen/Recipe-", "Date": "2016-09-01T17:00:32Z"},
{"Line": "=>1070", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.aricneto.twistytimer.fragment.TimerFragment.DEBUG_ME) android.util.Log.d(com.aricneto.twistytimer.fragment.TimerFragment.TAG, \"onDestroyView()\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5844/buggy-version/app.src.main.java.com.aricneto.twistytimer.fragment.TimerFragment.java", "BodyUseAPI": [], "Fixed commit": "9976443faf1e0ecadd90c7305a32d3b12bd9488f", "Url": "https://api.github.com/repos/aricneto/TwistyTimer", "Date": "2016-11-12T20:14:22Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((promoSet.getSetItem(id)) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7550/buggy-version/src.Order.java", "BodyUseAPI": [], "Fixed commit": "70a43441f7881c9c6100ccb4e1e369faac8c2b80", "Url": "https://api.github.com/repos/Chen-Hailin/RRPSS", "Date": "2016-11-08T14:16:39Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCell) == null) return \"Unknown\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6995/buggy-version/app.src.main.java.com.SecUpwN.AIMSICD.utils.Device.java", "BodyUseAPI": [], "Fixed commit": "6e98ab02be4b07723ab59ee0c0f24fa2538d259d", "Url": "https://api.github.com/repos/andr3jx/Android-IMSI-Catcher-Detector", "Date": "2014-10-11T13:35:29Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (idxX < 0) { idxX = (PairHash.PAIR_LIMIT) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3282/buggy-version/src.util.HexTile.java", "BodyUseAPI": [], "Fixed commit": "fb06e9296d6bb2b1190af1902bd0fb2ffa92d490", "Url": "https://api.github.com/repos/boehmseb/placeholder", "Date": "2017-06-10T09:03:12Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (idxY < 0) { idxY = (PairHash.PAIR_LIMIT) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3282/buggy-version/src.util.HexTile.java", "BodyUseAPI": [], "Fixed commit": "fb06e9296d6bb2b1190af1902bd0fb2ffa92d490", "Url": "https://api.github.com/repos/boehmseb/placeholder", "Date": "2017-06-10T09:03:12Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((builder.limitTotalGift) != null) { setLimitTotalGift(builder.limitTotalGift); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6200/buggy-version/model.com.wireless.pojo.staffMgr.Staff.java", "BodyUseAPI": [], "Fixed commit": "8d44228595268e446e4dc486f53ae83dd4af7ead", "Url": "https://api.github.com/repos/yzhang1981/wireless-order-solution", "Date": "2017-10-07T07:04:16Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nearTransitBonus && (edgesNearTransit.contains(e))) { distance /= 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3147/buggy-version/opentripplanner-routing.src.main.java.org.opentripplanner.routing.impl.StreetVertexIndexServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "637703ce57f0c4aaf96cd7a670a3055b33ba0015", "Url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner", "Date": "2011-08-07T15:49:44Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (eraserpoints == null) { eraserpoints.add(new android.graphics.Point(java.lang.Math.round(mCurX), java.lang.Math.round(mCurY))); }else { android.util.Log.e(com.manichord.sketchnotes.SketchView.TAG, \"no eraserpoints array defined, skipping adding erase point\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3806/buggy-version/src.com.manichord.sketchnotes.SketchView.java", "BodyUseAPI": ["java.util.ArrayList<android.graphics.Point>.add(android.graphics.Point)"], "Fixed commit": "2749dd301c9ec07f7a9ee49bc477967e1c83ffe7", "Url": "https://api.github.com/repos/maks/Sketch-Notes", "Date": "2011-10-01T05:36:45Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["drive.Vector2.getY()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Double.isNaN(leftMotors)) || (java.lang.Double.isNaN(rightTarget))) { leftMotors = rightMotors = 0.001; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4566/buggy-version/src.drive.ArcadeDrive.java", "BodyUseAPI": [], "Fixed commit": "1e6c51c9e3de18c6bfa89166bdd0058c72eda06d", "Url": "https://api.github.com/repos/2202Programming/LogN", "Date": "2017-05-24T23:50:43Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (required) pView.setVisibility(View.VISIBLE); else pView.setVisibility(View.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5253/buggy-version/app.src.main.java.com.taf.shuvayatra.util.BindingUtil.java", "BodyUseAPI": [], "Fixed commit": "1f591bcc1984b8bb84dd74c2edf3cb498f6a870c", "Url": "https://api.github.com/repos/Shuvayatra/migration-android-new", "Date": "2017-02-09T16:53:09Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (related == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7391/buggy-version/src.main.java.ca.mcgill.cs.crown.procedure.WikiMarkupExtractor.java", "BodyUseAPI": [], "Fixed commit": "e9df7891adfa47f7b95ad47201b527494807627d", "Url": "https://api.github.com/repos/davidjurgens/crown", "Date": "2015-06-01T15:05:17Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jbpm.jpdl.el.impl.JbpmExpressionEvaluator.evaluate(java.lang.String,org.jbpm.graph.exe.ExecutionContext)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (value != null) { script = script.replaceAll(regex, value.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/493/buggy-version/src.java.com.idega.jbpm.proxy.JbpmHandlerProxy.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "a72215094c81b4eebdb45c3e47fd7b8eb5749f98", "Url": "https://api.github.com/repos/idega/org.jboss.jbpm", "Date": "2014-05-02T07:54:35Z"},
{"Line": "=>711", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.akshay.protocol10.asplayer.service.MediaServiceContoller.mediaplayer) != null) { com.akshay.protocol10.asplayer.service.MediaServiceContoller.mediaplayer.stop(); com.akshay.protocol10.asplayer.service.MediaServiceContoller.mediaplayer.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7522/buggy-version/src.com.akshay.protocol10.asplayer.service.MediaServiceContoller.java", "BodyUseAPI": [], "Fixed commit": "3fa9324aa84f0eb9c6c42c2ce08065a4498782c3", "Url": "https://api.github.com/repos/protocol10/ASplayer", "Date": "2014-11-25T18:14:23Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rc.isActive()) { receiveBroadcasts(); checkIsLeader(); if (isLeader) { moveTowards(targetLoc); }else { moveTowards(leaderLoc); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5163/buggy-version/src.team169.robots.SoldierSwarm.java", "BodyUseAPI": [], "Fixed commit": "fc2f487cbe38e4dc4521febad5da139094c50173", "Url": "https://api.github.com/repos/nfearnley/team169", "Date": "2013-01-27T05:55:23Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rc.isActive()) { spawnInCircle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5163/buggy-version/src.team169.robots.HqSwarm.java", "BodyUseAPI": [], "Fixed commit": "fc2f487cbe38e4dc4521febad5da139094c50173", "Url": "https://api.github.com/repos/nfearnley/team169", "Date": "2013-01-27T05:55:23Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((homeDirStrs.length) >= 2) org.solrmarc.driver.Boot.logger.debug((\"homeDirStrs[1]: \" + (homeDirStrs[1])));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1724/buggy-version/src.org.solrmarc.driver.Boot.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "4cd8f6ac0fb37802c1321802ce85208b21b0b8ea", "Url": "https://api.github.com/repos/solrmarc/solrmarc", "Date": "2017-12-07T17:21:01Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((homeDirStrs.length) >= 1) org.solrmarc.driver.Boot.logger.debug((\"homeDirStrs[0]: \" + (homeDirStrs[0])));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1724/buggy-version/src.org.solrmarc.driver.Boot.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "4cd8f6ac0fb37802c1321802ce85208b21b0b8ea", "Url": "https://api.github.com/repos/solrmarc/solrmarc", "Date": "2017-12-07T17:21:01Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["yahoofinance.YahooFinance.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (stock.getName().equals(\"N/A\")) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5505/buggy-version/app.src.main.java.me.vogeldev.stocksim.StockFinder.java", "BodyUseAPI": [], "Fixed commit": "eca03ffb66f2a544be489edde738c91bc27b6743", "Url": "https://api.github.com/repos/VogelDev/StockApp", "Date": "2015-05-21T10:09:48Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (context.fileParsed()) { org.sonar.plugins.java.api.tree.CompilationUnitTree tree = context.getTree(); if (((tree.packageDeclaration()) == null) && (tree.types().isEmpty())) { context.addIssue(context.getTree(), this, \"This Java file is empty.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2810/buggy-version/java-checks.src.main.java.org.sonar.java.checks.EmptyFileCheck.java", "BodyUseAPI": ["org.sonar.plugins.java.api.JavaFileScannerContext.getTree()", "org.sonar.plugins.java.api.JavaFileScannerContext.getTree()", "org.sonar.plugins.java.api.JavaFileScannerContext.addIssue(context.getTree(),org.sonar.java.checks.EmptyFileCheck,java.lang.String)"], "Fixed commit": "3e5fd73fe292e7023958d9cbd95227ddaa292215", "Url": "https://api.github.com/repos/wavesoftware/sonar-java", "Date": "2015-11-24T14:30:53Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (at.justin.matlab.EditorWrapper.getInstance().getLongName().contains(\"Untitled\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5544/buggy-version/src.at.justin.matlab.autoDetailViewer.AutoDetailViewer.java", "BodyUseAPI": [], "Fixed commit": "64955debe4ffff5e82bc050d1504684cc708a494", "Url": "https://api.github.com/repos/GavriYashar/Matlab-Editor-Plugin", "Date": "2016-06-03T06:56:28Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((t.getTitle().length()) == 1) && (t.getTitle().equals(\"\\n\"))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4234/buggy-version/quicklyst.src.quicklyst.QLGoogleIntegration.java", "BodyUseAPI": [], "Fixed commit": "f9d87f903640235819bc41d2ba0c118dacf3e5d4", "Url": "https://api.github.com/repos/cs2103jan2015-t16-1j/main", "Date": "2015-04-08T12:59:00Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tabbar.getSelectedIndex()) < 0) { tabbar.setSelectedItem(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7770/buggy-version/src.com.example.helloworld.HelloWorldActivity.java", "BodyUseAPI": ["com.example.helloworld.fragments.widgets.MainTabbarFragment.setSelectedItem(int)"], "Fixed commit": "973e358a2db5d6a6ec7526128262922e70a18d60", "Url": "https://api.github.com/repos/DGUT-Asiasoft-2013/pratice_teacher_zhangqi", "Date": "2016-12-13T02:11:06Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parts.length) < 20) { ru.ifmo.md.lesson8.WeatherLoaderService.startActionUpdateCity(getActivity(), mCityId, mCityWeatherId, mReceiver); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6912/buggy-version/app.src.main.java.ru.ifmo.md.lesson8.CityDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "404ec30849e7b5c11590d9e1c114e81076017da3", "Url": "https://api.github.com/repos/Nafanya/lesson8", "Date": "2014-12-01T21:22:06Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.contentData) != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7211/buggy-version/spring-cloud-netflix-core.src.main.java.org.springframework.cloud.netflix.zuul.filters.pre.FormBodyWrapperFilter.java", "BodyUseAPI": [], "Fixed commit": "3cec1f0bd81809287e59ec453da67f4d7a891079", "Url": "https://api.github.com/repos/obourgain/spring-cloud-netflix", "Date": "2017-07-26T08:42:20Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_max - _min) == 0.0) return 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4498/buggy-version/src.main.org.deidentifier.arx.metric.v2.ILMultiDimensionalRank.java", "BodyUseAPI": [], "Fixed commit": "5f6da7e2aa4b189c7e9da66157cf06e33016b453", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-11-06T11:54:33Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((heapSize) == 1) { if ((heap.get(1)) > element) { heap.add(heap.get(1)); heap.set(1, element); }else { heap.add(element); } }else { if (((heap.get(1)) > element) && ((heap.get(2)) > element)) { heap.add(heap.get(1)); heap.set(1, element); }else { heap.add(element); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/427/buggy-version/MinMaxHeap.java", "BodyUseAPI": [], "Fixed commit": "2ab9c265407b907b97593423b432ba9431d003d8", "Url": "https://api.github.com/repos/johng1lee/min-max-heap", "Date": "2014-11-15T21:37:08Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.enableTsdb) { if ((tableMetaTSDB) == null) { tableMetaTSDB = com.alibaba.otter.canal.parse.inbound.mysql.tsdb.TableMetaTSDBBuilder.build(destination, tsdbSpringXml); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2166/buggy-version/parse.src.main.java.com.alibaba.otter.canal.parse.inbound.mysql.AbstractMysqlEventParser.java", "BodyUseAPI": [], "Fixed commit": "5aed505429694130a76115b7a4219b1a36f53346", "Url": "https://api.github.com/repos/yakirChen/canal", "Date": "2017-12-08T15:21:40Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["block.getRelative(diff[0], 0, diff[1]).getState()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sign.getLine(0).equalsIgnoreCase(ActionType.GETDEST.getText())) return sign; else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/987/buggy-version/CartRouting.src.net.tweakcraft.tweakcart.cartrouting.HelperClass.java", "BodyUseAPI": [], "Fixed commit": "95992f0a31372baee186af31bad49bf6e61245cf", "Url": "https://api.github.com/repos/TweakCraft/TweakCart2Plugins", "Date": "2015-03-28T16:19:05Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((renderer.BaseSprite.startingBase) != null) && (!(renderer.BaseSprite.startingBase.getOwner().isPlayer()))) { renderer.BaseSprite.startingBase = null; renderer.BaseSprite.endingBase = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4035/buggy-version/src.renderer.BaseSprite.java", "BodyUseAPI": [], "Fixed commit": "773f19c9de187b8162695db1d5141670f204c0d6", "Url": "https://api.github.com/repos/cchampet/Java_nanowars", "Date": "2013-05-15T14:53:52Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cmisObject.getType().getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (mappingParser.isLeaf(cmisType)) { handleLeafNodes(tree, c, cmisType, cmisFolder.getPath()); }else { handleNode(tree, c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5949/buggy-version/src.main.java.dk.magenta.eark.erms.repository.ExtractionWorker.java", "BodyUseAPI": ["dk.magenta.eark.erms.repository.ExtractionWorker.handleLeafNodes(org.apache.chemistry.opencmis.client.api.Tree<org.apache.chemistry.opencmis.client.api.FileableCmisObject>,org.jdom2.Element,java.lang.String,cmisFolder.getPath())"], "Fixed commit": "eed278a27eafec70c77338edc4390739bffe9ca3", "Url": "https://api.github.com/repos/magenta-aps/E-Ark-ERMS-export-bridge", "Date": "2016-09-15T08:34:47Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ast.getParent().getType()) != (com.puppycrawl.tools.checkstyle.api.TokenTypes.CASE_GROUP)) { scope = scopeStack.pop().scope; for (com.puppycrawl.tools.checkstyle.api.DetailAST node : scope.values()) { log(node.getLineNo(), node.getColumnNo(), com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck.MSG_KEY, node.getText()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6990/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck.java", "BodyUseAPI": [], "Fixed commit": "70dba5de118e85365c2b986e1b129ede80c05b2c", "Url": "https://api.github.com/repos/Bhavik3/checkstyle", "Date": "2015-12-04T08:01:49Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ast.getParent().getType()) != (com.puppycrawl.tools.checkstyle.api.TokenTypes.CASE_GROUP)) { scopeStack.push(new com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck.ScopeData()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6990/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck.java", "BodyUseAPI": [], "Fixed commit": "70dba5de118e85365c2b986e1b129ede80c05b2c", "Url": "https://api.github.com/repos/Bhavik3/checkstyle", "Date": "2015-12-04T08:01:49Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (caracter == '>') { textoXSS.append(\"&gt;\"); }else if (caracter == '&') { textoXSS.append(\"&amp;\"); }else if (caracter == '\"') { textoXSS.append(\"&quot;\"); }else if (caracter == ' ') { textoXSS.append(\"&nbsp;\"); }else if (caracter == '\\n') { textoXSS.append(\"<br>\"); }else if (caracter == ' ') { textoXSS.append(\"\"); }else { textoXSS.append(caracter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7400/buggy-version/src.java.br.grupointegrado.facebug.util.HtmlUtil.java", "BodyUseAPI": ["java.lang.StringBuffer.append(char)"], "Fixed commit": "bee4ebcf6cc6ac088330f859f7012962ebf3977f", "Url": "https://api.github.com/repos/DOUGLASSIQUEIRA/Facebug", "Date": "2015-05-16T15:29:26Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (authorizer != null) { repl.setAuthorizer(authorizer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3140/buggy-version/src.main.java.com.couchbase.cblite.CBLManager.java", "BodyUseAPI": ["com.couchbase.cblite.replicator.CBLReplicator.setAuthorizer(com.couchbase.cblite.auth.CBLAuthorizer)"], "Fixed commit": "f4b88945af7572681f3616e15051e324e5b2bcbc", "Url": "https://api.github.com/repos/couchbase/couchbase-lite-android-core", "Date": "2013-08-29T22:11:49Z"},
{"Line": "=>657", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sampleMap.containsKey(sampleId)) { protocol2Samples.put(protocol, sampleMap.get(sampleId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5965/buggy-version/app.om.src.main.java.uk.ac.ebi.fg.annotare2.submission.model.ExperimentProfile.java", "BodyUseAPI": ["uk.ac.ebi.fg.annotare2.submission.model.MultiSets<uk.ac.ebi.fg.annotare2.submission.model.Protocol, uk.ac.ebi.fg.annotare2.submission.model.Sample>.put(uk.ac.ebi.fg.annotare2.submission.model.Protocol,sampleMap.get(sampleId))", "java.util.Map<java.lang.Integer, uk.ac.ebi.fg.annotare2.submission.model.Sample>.get(java.lang.Integer)"], "Fixed commit": "38a0f320ccc74f2840763b42f8fe9849c8b5adf6", "Url": "https://api.github.com/repos/arrayexpress/annotare2", "Date": "2014-05-03T08:33:26Z"},
{"Line": "=>687", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (labeledExtractMap.containsKey(labeledExtractId)) { protocol2LabeledExtracts.put(protocol, labeledExtractMap.get(labeledExtractId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5965/buggy-version/app.om.src.main.java.uk.ac.ebi.fg.annotare2.submission.model.ExperimentProfile.java", "BodyUseAPI": ["java.util.Map<java.lang.String, uk.ac.ebi.fg.annotare2.submission.model.LabeledExtract>.get(java.lang.String)", "uk.ac.ebi.fg.annotare2.submission.model.MultiSets<uk.ac.ebi.fg.annotare2.submission.model.Protocol, uk.ac.ebi.fg.annotare2.submission.model.LabeledExtract>.put(uk.ac.ebi.fg.annotare2.submission.model.Protocol,labeledExtractMap.get(labeledExtractId))"], "Fixed commit": "38a0f320ccc74f2840763b42f8fe9849c8b5adf6", "Url": "https://api.github.com/repos/arrayexpress/annotare2", "Date": "2014-05-03T08:33:26Z"},
{"Line": "=>642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (extractMap.containsKey(extractId)) { sample2Extracts.put(sample, extractMap.get(extractId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5965/buggy-version/app.om.src.main.java.uk.ac.ebi.fg.annotare2.submission.model.ExperimentProfile.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, uk.ac.ebi.fg.annotare2.submission.model.Extract>.get(java.lang.Integer)", "uk.ac.ebi.fg.annotare2.submission.model.MultiSets<uk.ac.ebi.fg.annotare2.submission.model.Sample, uk.ac.ebi.fg.annotare2.submission.model.Extract>.put(uk.ac.ebi.fg.annotare2.submission.model.Sample,extractMap.get(extractId))"], "Fixed commit": "38a0f320ccc74f2840763b42f8fe9849c8b5adf6", "Url": "https://api.github.com/repos/arrayexpress/annotare2", "Date": "2014-05-03T08:33:26Z"},
{"Line": "=>672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (extractMap.containsKey(extractId)) { protocol2Extracts.put(protocol, extractMap.get(extractId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5965/buggy-version/app.om.src.main.java.uk.ac.ebi.fg.annotare2.submission.model.ExperimentProfile.java", "BodyUseAPI": ["uk.ac.ebi.fg.annotare2.submission.model.MultiSets<uk.ac.ebi.fg.annotare2.submission.model.Protocol, uk.ac.ebi.fg.annotare2.submission.model.Extract>.put(uk.ac.ebi.fg.annotare2.submission.model.Protocol,extractMap.get(extractId))", "java.util.Map<java.lang.Integer, uk.ac.ebi.fg.annotare2.submission.model.Extract>.get(java.lang.Integer)"], "Fixed commit": "38a0f320ccc74f2840763b42f8fe9849c8b5adf6", "Url": "https://api.github.com/repos/arrayexpress/annotare2", "Date": "2014-05-03T08:33:26Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fmc.edu.FmcApplication.getLoginUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((loginUserEntity.userRole) == (com.fmc.edu.enums.UserRoleEnum.Parent)) { params.put(\"studentId\", loginUserEntity.studentId); }else { params.put(\"classId\", loginUserEntity.classId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1842/buggy-version/app.src.main.java.com.fmc.edu.TimeWorkActivity.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,loginUserEntity.studentId)", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,loginUserEntity.classId)"], "Fixed commit": "36d2d3746d2030b4f6718e92f64bda3eb2fc43bb", "Url": "https://api.github.com/repos/LakePumpTeam/FmcEdu_Android", "Date": "2015-08-11T16:53:25Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (weight < 1) weight = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1154/buggy-version/src.main.java.edu.umd.marbl.mhap.sketch.MinHashSketch.java", "BodyUseAPI": [], "Fixed commit": "420956d46c678257f30fb12e5980b82d8d3a53ea", "Url": "https://api.github.com/repos/marbl/MHAP", "Date": "2015-05-07T16:02:38Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((snowReflectionFactors) == null) { snowReflectionFactors = new double[12]; java.util.Arrays.fill(snowReflectionFactors, 0); return albedo; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3072/buggy-version/src.main.java.org.concord.energy3d.simulation.Ground.java", "BodyUseAPI": [], "Fixed commit": "043e182f5731ae438b77e58cdf9b309f2e38a431", "Url": "https://api.github.com/repos/concord-consortium/energy3d", "Date": "2017-01-20T22:31:26Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showConfirmDialog(<nulltype>,javax.swing.JComponent[],java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (actionInt != (javax.swing.JOptionPane.OK_OPTION)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/639/buggy-version/routing.src.routing.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "76ddaa1c5eedac41c66d5a9a5e31c0a73370dbdb", "Url": "https://api.github.com/repos/jeremysong/Routing", "Date": "2012-04-28T08:40:38Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (engineTypeEnum == null) { engineTypeEnum = org.tommy.stationery.ink.enums.EngineTypeEnum.valueOf(configProperties.getDefaultInkConfig().getString(SettingEnum.ENGINE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1641/buggy-version/stationery-ink.stationery-ink-core.src.main.java.org.tommy.stationery.ink.core.engine.build.SimpleStatementBuilderFactory.java", "BodyUseAPI": [], "Fixed commit": "497ac7bccdb995991c074e31c40435f587bd104f", "Url": "https://api.github.com/repos/dk-stationery/stationery-ink", "Date": "2015-07-29T06:37:49Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["T.getHandler()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(handler.getDoc().isEmbedded())) { com.orientechnologies.orient.core.id.ORID identity = handler.getDoc().getIdentity(); if (!(alreadyDetached.containsKey(identity))) { alreadyDetached.put(identity, o); }else if (returnNonProxiedInstance) { return ((T) (alreadyDetached.get(identity))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8681/buggy-version/object.src.main.java.com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.java", "BodyUseAPI": ["com.orientechnologies.orient.object.enhancement.OObjectProxyMethodHandler.getDoc()", "handler.getDoc().getIdentity()"], "Fixed commit": "e1003f11cf0688ef61387599d20bf4d3bace2c8f", "Url": "https://api.github.com/repos/matanshukry/orientdb", "Date": "2015-12-16T17:36:07Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (admin != null) { java.lang.String query = (\"SELECT email FROM Administrator WHERE password=\\\"\" + password) + \"\\\"\"; java.sql.ResultSet rs = edu.uga.cs.rentaride.presentation.DatabaseAccess.retrieve(con, query); try { while (rs.next()) { dbEmail = rs.getString(\"email\"); } } catch (java.sql.SQLException e) { e.printStackTrace(); } }else { java.lang.String query = (\"SELECT email FROM Customer WHERE password=\\\"\" + password) + \"\\\"\"; java.sql.ResultSet rs = edu.uga.cs.rentaride.presentation.DatabaseAccess.retrieve(con, query); try { while (rs.next()) { dbEmail = rs.getString(\"email\"); } } catch (java.sql.SQLException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7547/buggy-version/rentaride.src.edu.uga.cs.rentaride.presentation.login_servlet.java", "BodyUseAPI": [], "Fixed commit": "53f642df559b4b9dd87fec4a7b66970f4dfc7bf5", "Url": "https://api.github.com/repos/systemwide/team_12_rentaride_part_7", "Date": "2017-11-12T23:48:55Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (email.equalsIgnoreCase(dbEmail)) { return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7547/buggy-version/rentaride.src.edu.uga.cs.rentaride.presentation.login_servlet.java", "BodyUseAPI": [], "Fixed commit": "53f642df559b4b9dd87fec4a7b66970f4dfc7bf5", "Url": "https://api.github.com/repos/systemwide/team_12_rentaride_part_7", "Date": "2017-11-12T23:48:55Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.base.Optional.fromNullable(row.get(EpfVideo.TRACK_LENGTH))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (maybeDuration.isPresent()) { version.setDuration(new org.joda.time.Duration(maybeDuration.get().longValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/820/buggy-version/src.main.java.org.atlasapi.remotesite.itunes.epf.ItunesVideoEpisodeExtractor.java", "BodyUseAPI": ["org.atlasapi.media.entity.Version.setDuration(org.joda.time.Duration)", "com.google.common.base.Optional<java.lang.Integer>.get()", "maybeDuration.get().longValue()"], "Fixed commit": "82e7445557d31f0cbb3199ed63a95d708d9628b0", "Url": "https://api.github.com/repos/atlasapi/atlas", "Date": "2015-12-18T19:17:29Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.atlasapi.remotesite.itunes.epf.model.EpfArtistCollection.get(EpfArtistCollection.COLLECTION_ID)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(linkedSeries.build().containsKey(collectionId))) { sery.setParent(brand); linkedSeries.put(collectionId, sery); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/820/buggy-version/src.main.java.org.atlasapi.remotesite.itunes.epf.ItunesEpfUpdateTask.java", "BodyUseAPI": ["org.atlasapi.remotesite.itunes.epf.ItunesEpfUpdateTask.1.put(java.lang.Integer,org.atlasapi.media.entity.Series)"], "Fixed commit": "82e7445557d31f0cbb3199ed63a95d708d9628b0", "Url": "https://api.github.com/repos/atlasapi/atlas", "Date": "2015-12-18T19:17:29Z"},
{"Line": "=>1435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Tree.StaticMemberOrTypeExpression.getDeclaration()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((needDollarThis) && ((expr.getScope()) != (decl.getContainer()))) { primaryExpr = null; qualExpr = makeIdent(\"$this\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/66/buggy-version/src.com.redhat.ceylon.compiler.codegen.ExpressionTransformer.java", "BodyUseAPI": [], "Fixed commit": "88c262891ba458deac75b5a523acb7f7f1e9af23", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2011-12-15T16:28:17Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["destination.ordinal.intValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (destCard == (Ordinal.MIDDLE.intValue())) { destCard = (com.defano.hypercard.HyperCard.getInstance().getStack().getStackModel().getCardCount()) / 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8788/buggy-version/src.main.java.com.defano.hypertalk.ast.statements.StatGoCmd.java", "BodyUseAPI": [], "Fixed commit": "efd85bf87c65a3afdfa75b255b534c9d1ea86c7b", "Url": "https://api.github.com/repos/defano/wyldcard", "Date": "2017-07-04T16:11:29Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Handler.post(java.lang.Runnable)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!postSuccess) { onRequestCompleted(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4345/buggy-version/Android.MyIPAddressInfo.src.com.adamkruger.myipaddressinfo.IPAddressInfoFragment.java", "BodyUseAPI": [], "Fixed commit": "a4f22ba257ac80aa7dc97b8dbdace76738214cd1", "Url": "https://api.github.com/repos/adamkdot/my_ip_address_info", "Date": "2014-11-20T01:55:49Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.getFollower()) != null) { s.setFollower(null); it.polimi.dei.provafinale.carcassonne.model.card.Card c = s.getOwnerCard(); if (!(updatedCards.contains(c))) updatedCards.add(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6642/buggy-version/src.main.java.it.polimi.dei.provafinale.carcassonne.model.entity.Road.java", "BodyUseAPI": ["it.polimi.dei.provafinale.carcassonne.model.card.Side.setFollower(<nulltype>)", "it.polimi.dei.provafinale.carcassonne.model.card.Side.getOwnerCard()"], "Fixed commit": "ca423ff88a47221df4f6d1f4ddc77e0dbde43536", "Url": "https://api.github.com/repos/heartripper/pf_carcassonne", "Date": "2012-05-16T20:24:24Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.getFollower()) != null) { s.setFollower(null); it.polimi.dei.provafinale.carcassonne.model.card.Card c = s.getOwnerCard(); if (!(updatedCards.contains(c))) updatedCards.add(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6642/buggy-version/src.main.java.it.polimi.dei.provafinale.carcassonne.model.entity.City.java", "BodyUseAPI": ["it.polimi.dei.provafinale.carcassonne.model.card.Side.setFollower(<nulltype>)", "it.polimi.dei.provafinale.carcassonne.model.card.Side.getOwnerCard()"], "Fixed commit": "ca423ff88a47221df4f6d1f4ddc77e0dbde43536", "Url": "https://api.github.com/repos/heartripper/pf_carcassonne", "Date": "2012-05-16T20:24:24Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tweetsWritten == ((categories.size()) * (com.sag.wedt.TweetFinder.twittsToFind))) out.write((((c.getCategory()) + \" \") + tweetToWrite)); else if ((tweetToWrite.length()) > 0) out.write(((((c.getCategory()) + \" \") + tweetToWrite) + \"\\n\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7168/buggy-version/openNLP.src.com.sag.wedt.TweetFinder.java", "BodyUseAPI": [], "Fixed commit": "aface6ebcf3babf977f26bd249d3cefe58c50762", "Url": "https://api.github.com/repos/MichalDanielDobrzanski/TwitterCatastrophesMiner", "Date": "2016-05-15T14:13:22Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openecard.common.OpenecardProperties.loadHomeProps()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (homeStream != null) { homeProps.load(homeStream); homeStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2807/buggy-version/common.src.main.java.org.openecard.common.OpenecardProperties.java", "BodyUseAPI": ["java.util.Properties.load(java.io.InputStream)", "java.io.InputStream.close()"], "Fixed commit": "e99dde679c0723d0bf3406597c228ea1de7023c5", "Url": "https://api.github.com/repos/ecsec/open-ecard", "Date": "2015-01-22T09:28:12Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (game.World.w)) { java.util.concurrent.locks.Lock oldlock = game.World.w.WorldLock; game.World.w = new game.GameWorld(); game.World.w.WorldLock = oldlock; }else { game.World.w = new game.GameWorld(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8259/buggy-version/server.src.game.World.java", "BodyUseAPI": [], "Fixed commit": "a163aa4412dc10de4b1a8d9bd314cdfafa6d23ff", "Url": "https://api.github.com/repos/heyLu/adventures_in_space", "Date": "2012-04-28T08:30:57Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(enableMultiThread)) { coreNum = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7234/buggy-version/src.net.epsilony.tsmf.process.WeakformProcessor.java", "BodyUseAPI": [], "Fixed commit": "cdcab7ca3a273dc971d3cc9b6062d4fbdbf0169e", "Url": "https://api.github.com/repos/epsilony/terse-meshfree", "Date": "2013-03-31T13:06:21Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.mmarvick.urgentcall.data.PrefHelper.isSnoozing(getApplicationContext()))) { endSnoozeDialog.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3345/buggy-version/UrgentCallLib.src.com.mmarvick.urgentcall.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d58779d6d9937555e927ea8eccbde5ff09b0a2b8", "Url": "https://api.github.com/repos/mmarvick/phone-alert-app", "Date": "2014-06-25T05:15:32Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.glowstone.block.ItemTable.getBlock(org.bukkit.Material)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (type != null) type.onGoingToChange(this, oldType, oldData, newType, newData);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/99/buggy-version/src.main.java.net.glowstone.block.GlowBlock.java", "BodyUseAPI": ["net.glowstone.block.blocktype.BlockType.onGoingToChange(net.glowstone.block.GlowBlock,org.bukkit.Material,byte,org.bukkit.Material,byte)"], "Fixed commit": "07da12596715b574a2d4b81411b4b837240a55ee", "Url": "https://api.github.com/repos/Tonodus/Glowstone", "Date": "2014-09-13T10:58:58Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (pref != null) { this.getPreferenceScreen().removePreference(pref); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/9132/buggy-version/application.src.se.chalmers.dat255.sleepfighter.activity.AlarmSettingsActivity.java", "BodyUseAPI": ["this.getPreferenceScreen().removePreference(android.preference.Preference)"], "Fixed commit": "e4ad0b32fcbb33301277cb33a866b6b949acd1a2", "Url": "https://api.github.com/repos/Hasselmannen/sleepfighter", "Date": "2013-10-18T12:37:33Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.renderer) != null) { requestRender(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3461/buggy-version/android.android_studio.MOSTVisualizationLib.MOSTVisualization.src.main.java.it.crs4.most.visualization.augmentedreality.TouchGLSurfaceView.java", "BodyUseAPI": [], "Fixed commit": "b8dafb882f8284aa3b55a715abc86c089593eba8", "Url": "https://api.github.com/repos/crs4/most-visualization", "Date": "2016-09-19T08:45:42Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (library.Constants.DEBUG) { java.lang.System.out.println(((\"\\t\\t\\tFormatted message: \\\"\" + messageText) + \"\\\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2454/buggy-version/src.invokers.EchoInvoker.java", "BodyUseAPI": [], "Fixed commit": "53e3af0474f58e5f68bed6ce9a27e9c077420074", "Url": "https://api.github.com/repos/InfinityPhase/CARIS", "Date": "2017-10-13T21:20:59Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (library.Constants.DEBUG) { java.lang.System.out.println(((\"\\t\\t\\tFormatted message: \\\"\" + messageText) + \"\\\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2454/buggy-version/src.responders.MentionResponder.java", "BodyUseAPI": [], "Fixed commit": "53e3af0474f58e5f68bed6ce9a27e9c077420074", "Url": "https://api.github.com/repos/InfinityPhase/CARIS", "Date": "2017-10-13T21:20:59Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (library.Constants.DEBUG) { java.lang.System.out.println(((\"\\t\\t\\tFormatted message: \\\"\" + messageText) + \"\\\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2454/buggy-version/src.responders.LocationResponder.java", "BodyUseAPI": [], "Fixed commit": "53e3af0474f58e5f68bed6ce9a27e9c077420074", "Url": "https://api.github.com/repos/InfinityPhase/CARIS", "Date": "2017-10-13T21:20:59Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (library.Constants.DEBUG) { java.lang.System.out.println(((\"\\t\\t\\tFormatted message: \\\"\" + messageText) + \"\\\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2454/buggy-version/src.invokers.LocationInvoker.java", "BodyUseAPI": [], "Fixed commit": "53e3af0474f58e5f68bed6ce9a27e9c077420074", "Url": "https://api.github.com/repos/InfinityPhase/CARIS", "Date": "2017-10-13T21:20:59Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jnode.robot.FileFix.getAndCheckLink(jnode.ftn.types.FtnMessage)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (link == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1754/buggy-version/jnode-core.src.jnode.robot.FileFix.java", "BodyUseAPI": [], "Fixed commit": "9e935fbb2f926fe0488b4cef09d4a46a3c5c8abf", "Url": "https://api.github.com/repos/kreon/jnode", "Date": "2013-11-24T12:58:49Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mMessageEditText.getText().toString().compareTo(\"\")) == 0) { android.util.Log.i(com.opentok.android.demo.opentoksamples.MultipartyActivity.LOGTAG, \"Cannot Send - Empty String Message\"); }else { android.util.Log.i(com.opentok.android.demo.opentoksamples.MultipartyActivity.LOGTAG, \"Sending a chat message\"); mSession.sendChatMessage(mMessageEditText.getText().toString()); mMessageEditText.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5122/buggy-version/OpenTokSamples.src.com.opentok.android.demo.opentoksamples.MultipartyActivity.java", "BodyUseAPI": ["com.opentok.android.demo.multiparty.MySession.sendChatMessage(mMessageEditText.getText().toString())", "android.widget.EditText.getText()", "android.widget.EditText.setText(java.lang.String)", "mMessageEditText.getText().toString()"], "Fixed commit": "1b3cc3f88bc3d1cf7550c67394e16a85644d1b05", "Url": "https://api.github.com/repos/opentok/opentok-android-sdk-samples", "Date": "2014-09-02T01:54:17Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stmtNode.getType()) == (intermediate.ICodeNodeType.RETURN_STATEMENT)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6099/buggy-version/src.interpreter.executors.WhileStmtExecutor.java", "BodyUseAPI": [], "Fixed commit": "0085e3ddda8f380419cad290efd5f849040f824b", "Url": "https://api.github.com/repos/LeptusHe/schinus", "Date": "2015-11-21T16:45:57Z"},
{"Line": "=>788", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (e == (-1)) e = tag.length();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/9191/buggy-version/src.com.androidquery.callback.AbstractAjaxCallback.java", "BodyUseAPI": [], "Fixed commit": "f330cfb6a9eaa966a8b97c7c3fa8a5f1e72f7469", "Url": "https://api.github.com/repos/brk3/androidquery", "Date": "2012-12-17T05:36:23Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((chatlog.lastTimestampEpoch) > 0) { android.content.SharedPreferences SP = android.preference.PreferenceManager.getDefaultSharedPreferences(this); android.content.SharedPreferences.Editor preferencesEditor = SP.edit(); preferencesEditor.putLong(\"last_timestamp\", chatlog.lastTimestampEpoch); preferencesEditor.putLong(\"last_timestamp_id\", chatlog.lastTimestampId); preferencesEditor.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3220/buggy-version/app.src.main.java.com.tm4n.secapp.ChatActivity.java", "BodyUseAPI": ["SharedPreferences.Editor.putLong(java.lang.String,chatlog.lastTimestampId)", "SharedPreferences.Editor.putLong(java.lang.String,chatlog.lastTimestampEpoch)"], "Fixed commit": "cf4bdb78aa0ee91c2009df9b8d6ead17f0e579d9", "Url": "https://api.github.com/repos/tm4n/SecApp", "Date": "2015-02-19T19:12:21Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPlayer) != null) { mPlayer.release(); mPlayer = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2259/buggy-version/app.src.main.java.org.papdt.goodnight.PlayerService.java", "BodyUseAPI": [], "Fixed commit": "5685bce23a1f5166717cd9755edde6eb4dc6a5ae", "Url": "https://api.github.com/repos/xavieryao/GoodNight", "Date": "2014-06-29T11:29:57Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(added)) { addConstraint(objectId, softA.getObjectId()); added = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6961/buggy-version/jme3-bullet.src.main.java.com.jme3.bullet.joints.SoftPhysicsJoint.java", "BodyUseAPI": [], "Fixed commit": "4c0312e059e36aae6235e75d87e2f0929f523fc4", "Url": "https://api.github.com/repos/dokthar/jmonkeyengine", "Date": "2016-04-19T22:11:50Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (added) { java.util.logging.Logger.getLogger(this.getClass().getName()).log(java.util.logging.Level.FINE, \"SoftJoint {0} is still attached, it will be destroyed by the softBody\", java.lang.Long.toHexString(objectId)); }else { super.finalizeNative(objectId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6961/buggy-version/jme3-bullet.src.main.java.com.jme3.bullet.joints.SoftPhysicsJoint.java", "BodyUseAPI": [], "Fixed commit": "4c0312e059e36aae6235e75d87e2f0929f523fc4", "Url": "https://api.github.com/repos/dokthar/jmonkeyengine", "Date": "2016-04-19T22:11:50Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (added) { removeConstraint(objectId, softA.getObjectId()); added = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6961/buggy-version/jme3-bullet.src.main.java.com.jme3.bullet.joints.SoftPhysicsJoint.java", "BodyUseAPI": [], "Fixed commit": "4c0312e059e36aae6235e75d87e2f0929f523fc4", "Url": "https://api.github.com/repos/dokthar/jmonkeyengine", "Date": "2016-04-19T22:11:50Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.shivas.data.loader.XmlLoader.makeItemAction(org.jdom2.Element)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (action != null) { actions.put(action.getType(), action); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6038/buggy-version/shivas-data.src.main.java.org.shivas.data.loader.XmlLoader.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, org.shivas.data.loader.ItemAction>.put(action.getType(),org.shivas.data.loader.ItemAction)", "org.shivas.data.loader.ItemAction.getType()"], "Fixed commit": "1d466fe13f269aa9d6daf4ee7cae8a5ccd8ca9cb", "Url": "https://api.github.com/repos/Emudofus/Shivas", "Date": "2012-07-31T08:45:35Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (displayListNormalActivity.mIsDoneTasksHidden) { com.gcode.notes.activities.helpers.display.list.base.DisplayListBaseTasksHelper.hideDoneTasks(displayListNormalActivity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5827/buggy-version/MyApplication.app.src.main.java.com.gcode.notes.activities.helpers.display.list.normal.DisplayListNormalResultHandler.java", "BodyUseAPI": ["com.gcode.notes.activities.helpers.display.list.base.DisplayListBaseTasksHelper.hideDoneTasks(com.gcode.notes.activities.display.list.DisplayListNormalActivity)"], "Fixed commit": "e587eabbc2130907bb8abd7264968fff37cc323b", "Url": "https://api.github.com/repos/ILIYANGERMANOV/Notes", "Date": "2015-12-04T02:02:09Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(os instanceof java.util.zip.GZIPOutputStream)) railo.runtime.net.http.ReqRspUtil.setContentLength(rsp, contentLength);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6021/buggy-version/railo-java.railo-core.src.railo.runtime.tag.Content.java", "BodyUseAPI": [], "Fixed commit": "967ad99ceb2281070adae292f9de9c0e55f99ff6", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-04-08T14:00:50Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasPathTo(goal))) throw new core.exception.PathNotFoundException(start, goal);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/9099/buggy-version/src.models.path.algo.DepthFirst.java", "BodyUseAPI": [], "Fixed commit": "3b8aecf6db9410e5995908907b217d6ec474e398", "Url": "https://api.github.com/repos/ateamwpi/HospitalKiosk", "Date": "2017-04-19T00:50:02Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (models.dir.LocationType.names.containsKey(s.toUpperCase())) return models.dir.LocationType.names.get(s.toUpperCase()); else return models.dir.LocationType.Unknown;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/9099/buggy-version/src.models.dir.LocationType.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, models.dir.LocationType>.get(java.lang.String)", "java.lang.String.toUpperCase()"], "Fixed commit": "3b8aecf6db9410e5995908907b217d6ec474e398", "Url": "https://api.github.com/repos/ateamwpi/HospitalKiosk", "Date": "2017-04-19T00:50:02Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (listener != null) { listener.onRemoveTraffic(removed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/92/buggy-version/airmapsdk.src.main.java.com.airmap.airmapsdk.Networking.Services.TrafficService.java", "BodyUseAPI": ["com.airmap.airmapsdk.networking.callbacks.AirMapTrafficListener.onRemoveTraffic(java.util.List<com.airmap.airmapsdk.models.traffic.AirMapTraffic>)"], "Fixed commit": "6ffc0ef5eeddf2530f9e10c49666e8c43dc917b7", "Url": "https://api.github.com/repos/airmap/AirMapSDK-Android", "Date": "2017-01-24T05:25:45Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (listener != null) { listener.onAddTraffic(added); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/92/buggy-version/airmapsdk.src.main.java.com.airmap.airmapsdk.Networking.Services.TrafficService.java", "BodyUseAPI": ["com.airmap.airmapsdk.networking.callbacks.AirMapTrafficListener.onAddTraffic(java.util.List<com.airmap.airmapsdk.models.traffic.AirMapTraffic>)"], "Fixed commit": "6ffc0ef5eeddf2530f9e10c49666e8c43dc917b7", "Url": "https://api.github.com/repos/airmap/AirMapSDK-Android", "Date": "2017-01-24T05:25:45Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (listener != null) { listener.onUpdateTraffic(updated); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/92/buggy-version/airmapsdk.src.main.java.com.airmap.airmapsdk.Networking.Services.TrafficService.java", "BodyUseAPI": ["com.airmap.airmapsdk.networking.callbacks.AirMapTrafficListener.onUpdateTraffic(java.util.List<com.airmap.airmapsdk.models.traffic.AirMapTraffic>)"], "Fixed commit": "6ffc0ef5eeddf2530f9e10c49666e8c43dc917b7", "Url": "https://api.github.com/repos/airmap/AirMapSDK-Android", "Date": "2017-01-24T05:25:45Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getRawSlot()) == (-999)) { ((org.bukkit.entity.Player) (event.getWhoClicked())).closeInventory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6295/buggy-version/src.me.Aubli.ZvP.Listeners.GUIListener.java", "BodyUseAPI": ["((org.bukkit.entity.Player) (event.getWhoClicked())).closeInventory()", "org.bukkit.event.inventory.InventoryClickEvent.getWhoClicked()"], "Fixed commit": "854ea5d9dcb3a8bb1da6268be132b7ee34ec234c", "Url": "https://api.github.com/repos/AlexMl/ZvP", "Date": "2014-10-01T16:59:20Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getRawSlot()) > (event.getInventory().getSize())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6295/buggy-version/src.me.Aubli.ZvP.Listeners.GUIListener.java", "BodyUseAPI": [], "Fixed commit": "854ea5d9dcb3a8bb1da6268be132b7ee34ec234c", "Url": "https://api.github.com/repos/AlexMl/ZvP", "Date": "2014-10-01T16:59:20Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((props.size()) > 0) { ov.getOutline().setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8359/buggy-version/Core.src.org.sleuthkit.autopsy.corecomponents.DataResultViewerTable.java", "BodyUseAPI": [], "Fixed commit": "dbdebfa1e4c2b4114b8ba120e7fda038a5d498c6", "Url": "https://api.github.com/repos/sleuthkit/autopsy", "Date": "2013-10-31T18:13:53Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (period.getPeriodType().isWeek()) { periodLabel.append(bundle.getString((\"GML.mois\" + (period.getBeginDate().getMonth())))); if ((period.getBeginDate().getMonth()) != (period.getEndDate().getMonth())) { displayWeek = true; if ((period.getBeginDate().getYear()) != (period.getEndDate().getYear())) { periodLabel.append(\" \").append(period.getBeginDate().getYear()); } periodLabel.append(\" / \").append(bundle.getString((\"GML.mois\" + (period.getEndDate().getMonth())))); } periodLabel.append(\" \").append(period.getEndDate().getYear()); if (displayWeek) { periodLabel.append(\" - \").append(bundle.getString(\"GML.week\")).append(' ').append(period.getBeginDate().getWeekOfYear()); } }else if (period.getPeriodType().isMonth()) { periodLabel.append(bundle.getString((\"GML.mois\" + (period.getBeginDate().getMonth())))).append(\" \").append(period.getBeginDate().getYear()); }else if (period.getPeriodType().isYear()) { periodLabel.append(period.getBeginDate().getYear()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2239/buggy-version/web-core.src.main.java.org.silverpeas.calendar.CalendarViewContext.java", "BodyUseAPI": ["period.getBeginDate().getMonth()", "org.silverpeas.calendar.CalendarPeriod.getEndDate()", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "periodLabel.append(bundle.getString((\"GML.mois\" + (period.getBeginDate().getMonth())))).append(\" \").append(period.getBeginDate().getYear())", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "org.silverpeas.calendar.CalendarPeriod.getEndDate()", "period.getBeginDate().getMonth()", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "period.getEndDate().getMonth()", "java.lang.StringBuilder.append(bundle.getString((\"GML.mois\" + (period.getEndDate().getMonth()))))", "period.getBeginDate().getYear()", "java.lang.StringBuilder.append(bundle.getString((\"GML.mois\" + (period.getBeginDate().getMonth()))))", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "com.stratelia.webactiv.util.ResourceLocator.getString((\"GML.mois\" + (period.getEndDate().getMonth())))", "org.silverpeas.calendar.CalendarPeriod.getPeriodType()", "period.getBeginDate().getMonth()", "period.getEndDate().getYear()", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "period.getEndDate().getMonth()", "org.silverpeas.calendar.CalendarPeriod.getEndDate()", "com.stratelia.webactiv.util.ResourceLocator.getString((\"GML.mois\" + (period.getBeginDate().getMonth())))", "period.getBeginDate().getWeekOfYear()", "org.silverpeas.calendar.CalendarPeriod.getPeriodType()", "java.lang.StringBuilder.append(java.lang.String)", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "java.lang.StringBuilder.append(period.getEndDate().getYear())", "com.stratelia.webactiv.util.ResourceLocator.getString((\"GML.mois\" + (period.getBeginDate().getMonth())))", "period.getPeriodType().isYear()", "period.getEndDate().getYear()", "period.getBeginDate().getYear()", "java.lang.StringBuilder.append(bundle.getString((\"GML.mois\" + (period.getBeginDate().getMonth()))))", "periodLabel.append(\" - \").append(bundle.getString(\"GML.week\")).append(' ').append(period.getBeginDate().getWeekOfYear())", "period.getBeginDate().getYear()", "org.silverpeas.calendar.CalendarPeriod.getEndDate()", "java.lang.StringBuilder.append(period.getBeginDate().getYear())", "period.getPeriodType().isMonth()", "period.getBeginDate().getYear()", "java.lang.StringBuilder.append(period.getBeginDate().getYear())"], "Fixed commit": "8b7592c6c963d26d0d357c0f45c1d6e46919b804", "Url": "https://api.github.com/repos/mmoqui/Silverpeas-Core", "Date": "2016-01-29T11:14:35Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (r != null) { references.addReference(r); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4157/buggy-version/BibtexApp.src.main.java.services.AddReference.java", "BodyUseAPI": ["services.ReferenceStorage.addReference(raemae.bibtexapp.domain.Reference)"], "Fixed commit": "1c2f91d7f6084bca7009bacc094cb7b1fad13e6a", "Url": "https://api.github.com/repos/RyhmaRaemae/Bibtexhommeli", "Date": "2015-10-03T17:02:23Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.device.mgt.extensions.device.type.deployer.config.ConfigProperties.getProperty()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((properties != null) && ((properties.size()) > 0)) { for (org.wso2.carbon.device.mgt.extensions.device.type.deployer.config.Property property : properties) { staticProps.put(property.getName(), property.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2843/buggy-version/components.device-mgt-extensions.org.wso2.carbon.device.mgt.extensions.device.type.deployer.src.main.java.org.wso2.carbon.device.mgt.extensions.device.type.deployer.template.DeviceTypeManagerService.java", "BodyUseAPI": [], "Fixed commit": "1c3a89f57c381594ccdf554bb888f0db6e1d588b", "Url": "https://api.github.com/repos/ayyoob/carbon-device-mgt", "Date": "2017-05-10T08:19:20Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEmpty())) { E element = elements.get(0); for (int i = 0; i < ((elements.size()) - 1); i++) { elements.set(i, elements.get((i + 1))); } elements.remove(((elements.size()) - 1)); return element; }else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6358/buggy-version/src.Stack.java", "BodyUseAPI": [], "Fixed commit": "8e9b12187008bc5a1a74c7be65f11e2c3556ccb6", "Url": "https://api.github.com/repos/mennoo1996/CIAssignment3", "Date": "2015-10-06T12:51:51Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openpnp.model.Location.getX()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(java.lang.Double.isNaN(x))) { this.x = x; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5872/buggy-version/gui.src.main.java.org.openpnp.machine.reference.driver.TinygDriver.java", "BodyUseAPI": [], "Fixed commit": "6c809e7f9b8022952ecd91757956d0d7cac7388f", "Url": "https://api.github.com/repos/openpnp/openpnp", "Date": "2013-04-17T04:55:13Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openpnp.model.Location.getZ()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(java.lang.Double.isNaN(z))) { this.z = z; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5872/buggy-version/gui.src.main.java.org.openpnp.machine.reference.driver.TinygDriver.java", "BodyUseAPI": [], "Fixed commit": "6c809e7f9b8022952ecd91757956d0d7cac7388f", "Url": "https://api.github.com/repos/openpnp/openpnp", "Date": "2013-04-17T04:55:13Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openpnp.model.Location.getRotation()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(java.lang.Double.isNaN(c))) { this.c = c; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5872/buggy-version/gui.src.main.java.org.openpnp.machine.reference.driver.TinygDriver.java", "BodyUseAPI": [], "Fixed commit": "6c809e7f9b8022952ecd91757956d0d7cac7388f", "Url": "https://api.github.com/repos/openpnp/openpnp", "Date": "2013-04-17T04:55:13Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openpnp.model.Location.getY()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(java.lang.Double.isNaN(y))) { this.y = y; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5872/buggy-version/gui.src.main.java.org.openpnp.machine.reference.driver.TinygDriver.java", "BodyUseAPI": [], "Fixed commit": "6c809e7f9b8022952ecd91757956d0d7cac7388f", "Url": "https://api.github.com/repos/openpnp/openpnp", "Date": "2013-04-17T04:55:13Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentKey == null) { java.lang.System.err.println((((\"Couldn't find nearest key for parameters angle: \" + (targetKey.angle)) + \", height: \") + (targetKey.height))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7189/buggy-version/app.src.main.java.co.adrianblan.fastbrush.database.BrushParameterDatabaseHandler.java", "BodyUseAPI": [], "Fixed commit": "14abec75338bc7bcb13c4ddd7b87cb7ff03c3608", "Url": "https://api.github.com/repos/adrianblp/FastBrush", "Date": "2016-05-09T09:26:21Z"},
{"Line": "=>1869", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parent.getType().isPrimitive()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2205/buggy-version/src.pcp.translator.JavaExpression.java", "BodyUseAPI": [], "Fixed commit": "2b76b87b1c103627f660670ebeae4cdc3158ec14", "Url": "https://api.github.com/repos/thomashuston-nyu/OOP-Translator", "Date": "2011-12-02T00:28:55Z"},
{"Line": "=>734", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (n.getNode(0).hasName(\"ThisExpression\")) isThisCall = true; else caller = new pcp.translator.JavaExpression(n.getGeneric(0), parent.getStatement());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2205/buggy-version/src.pcp.translator.JavaExpression.java", "BodyUseAPI": [], "Fixed commit": "2b76b87b1c103627f660670ebeae4cdc3158ec14", "Url": "https://api.github.com/repos/thomashuston-nyu/OOP-Translator", "Date": "2011-12-02T00:28:55Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Cause.UserIdCause.class.isInstance(cause)) { return \"MANUALTRIGGER\"; }else if (Cause.UserCause.class.isInstance(cause)) { return \"MANUALTRIGGER\"; }else if (Cause.UpstreamCause.class.isInstance(cause)) { return \"UPSTREAMTRIGGER\"; }else if (cause != null) { return cause.getClass().getSimpleName().toUpperCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5980/buggy-version/src.main.java.org.jenkinsci.plugins.envinject.service.BuildCauseRetriever.java", "BodyUseAPI": ["hudson.model.Cause.getClass()", "cause.getClass().getSimpleName()", "java.lang.Class.isInstance(hudson.model.Cause)", "cause.getClass().getSimpleName().toUpperCase()", "java.lang.Class.isInstance(hudson.model.Cause)"], "Fixed commit": "2e1fbfe9145bd11e62a63c4b4fee06417ed1efaa", "Url": "https://api.github.com/repos/jenkinsci/envinject-plugin", "Date": "2013-02-12T23:07:09Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(shouldContinue)) { broadcastCancelled(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7208/buggy-version/uploadservice.src.main.java.com.alexbbb.uploadservice.HttpUploadTask.java", "BodyUseAPI": [], "Fixed commit": "dc6238f4c39cfc070b2ed1a6072dd58c61bf0ed1", "Url": "https://api.github.com/repos/mabdurrahman/android-upload-service", "Date": "2016-01-11T22:55:45Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["rows.getChildren().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(g.isOpen())) g.setOpen(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8800/buggy-version/zul.src.org.zkoss.zul.impl.GridDataLoader.java", "BodyUseAPI": ["org.zkoss.zul.Group.setOpen(boolean)"], "Fixed commit": "f9e2a4cefddd614881abf8606cd1436c929f7c12", "Url": "https://api.github.com/repos/wenninghsu/zk", "Date": "2016-12-07T03:25:57Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((org.zkoss.zul.Group) (comp)).isOpen()) ((org.zkoss.zul.Group) (comp)).setOpen(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8800/buggy-version/zul.src.org.zkoss.zul.impl.GridDataLoader.java", "BodyUseAPI": ["org.zkoss.zk.ui.Component.setOpen(boolean)"], "Fixed commit": "f9e2a4cefddd614881abf8606cd1436c929f7c12", "Url": "https://api.github.com/repos/wenninghsu/zk", "Date": "2016-12-07T03:25:57Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (r.recPrimaryAlts.isEmpty()) { tool.errMgr.grammarError(ErrorType.NO_NON_LR_ALTS, g.fileName, ((org.antlr.v4.tool.ast.GrammarAST) (prevRuleAST.getChild(0))).getToken(), r.name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/477/buggy-version/tool.src.org.antlr.v4.analysis.LeftRecursiveRuleTransformer.java", "BodyUseAPI": ["tool.errMgr.grammarError(ErrorType.NO_NON_LR_ALTS,g.fileName,((org.antlr.v4.tool.ast.GrammarAST) (prevRuleAST.getChild(0))).getToken(),r.name)"], "Fixed commit": "9ccdca49bb674ba324b09e74b40c0540147003aa", "Url": "https://api.github.com/repos/sharwell/antlr4", "Date": "2013-01-16T18:38:55Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (OPropertyPrototyper.DEFAULT_VALUE.equals(critery)) { entity.setDefaultValue(((java.lang.String) (value))); }else if ((custom = org.orienteer.core.CustomAttributes.fromString(critery)) != null) { custom.setValue(entity, value); }else { org.apache.wicket.core.util.lang.PropertyResolver.setValue(critery, entity, value, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2002/buggy-version/orienteer-core.src.main.java.org.orienteer.core.component.meta.OPropertyMetaPanel.java", "BodyUseAPI": ["org.orienteer.core.CustomAttributes.fromString(java.lang.String)", "org.apache.wicket.core.util.lang.PropertyResolver.setValue(java.lang.String,com.orientechnologies.orient.core.metadata.schema.OProperty,V,<nulltype>)"], "Fixed commit": "3f9605bfc77668bbbc8d65771c81cf830e00c217", "Url": "https://api.github.com/repos/OrienteerBAP/Orienteer", "Date": "2015-07-08T21:25:30Z"},
{"Line": "=>726", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((type.equals(ScanModuleTypes.SAVE_AXIS_POSITIONS)) || (type.equals(ScanModuleTypes.SAVE_CHANNEL_VALUES))) { this.setStorage(Storage.ALTERNATE); }else if (type.equals(ScanModuleTypes.CLASSIC)) { this.setStorage(Storage.DEFAULT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6065/buggy-version/applications.plugins.org.csstudio.eve.data.src.de.ptb.epics.eve.data.scandescription.ScanModule.java", "BodyUseAPI": ["de.ptb.epics.eve.data.scandescription.ScanModuleTypes.equals(ScanModuleTypes.CLASSIC)"], "Fixed commit": "1de919a4143adc805b8f92ad7c836f19a4f6ec5e", "Url": "https://api.github.com/repos/eveCSS/eveCSS", "Date": "2014-04-25T15:27:37Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.codeninja.proxyapp.request.RequestParamParser.getUrl(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (url == null) { }else { ru.codeninja.proxyapp.connection.ProxyConnection connection = urlConnection.connect(url); if (connection == null) { }else { responseHeadersManager.sendHeaders(resp, connection); ru.codeninja.proxyapp.response.writer.ResponseWriter responseWriter = responseWriterFactory.get(connection); responseWriter.sendResponse(connection, resp); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7222/buggy-version/src.main.java.ru.codeninja.proxyapp.servlet.ProxyServlet.java", "BodyUseAPI": ["ru.codeninja.proxyapp.connection.UrlConnection.connect(ru.codeninja.proxyapp.request.RequestedUrl)"], "Fixed commit": "d3d4020e29fa43eab27e3f51f92b7c097e9abf50", "Url": "https://api.github.com/repos/codeninja-ru/proxyapp", "Date": "2015-02-25T19:46:24Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ShadowzGames.LD28.entity.Entity.getAnimationFrame()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (frame > (maxFrame)) frame = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1536/buggy-version/src.com.ShadowzGames.LD28.AnimatedSprite.java", "BodyUseAPI": [], "Fixed commit": "e57971fa52a7b2aa2481842ba6945ed4b3ba511f", "Url": "https://api.github.com/repos/XtremePrime/LudumDare28", "Date": "2013-12-15T18:09:17Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((updateThread) != null) { updateThread.setParallelLevel(threadNumSlider.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8904/buggy-version/src.info.pishen.gameoflife.MainGUI.java", "BodyUseAPI": [], "Fixed commit": "ebdcf42453a62f036d2cb45c30592e59377e4de3", "Url": "https://api.github.com/repos/pishen/parallel-game-of-life", "Date": "2013-06-10T08:57:26Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (evt.getPropertyName().equals(Spaceship.Message.SPACESHIP_DIE.toString())) { listOfObjectsToBeRemoved.add(evt.getSource()); listOfSounds.add(SoundEffects.sound.SPACESHIP_DIE.toString()); pcs.firePropertyChange(evt); }else if (evt.getPropertyName().equals(IPickup.Message.PICKUP_DIE.toString())) { listOfObjectsToBeRemoved.add(evt.getSource()); pcs.firePropertyChange(evt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3097/buggy-version/project.HowDoIFlyThisThing.src.main.java.com.whathappensingandalf.howdoiflythisthing.Gameworld.java", "BodyUseAPI": ["java.beans.PropertyChangeEvent.getSource()", "java.beans.PropertyChangeEvent.getSource()", "java.beans.PropertyChangeEvent.getPropertyName()", "java.util.Set<java.lang.Object>.add(java.lang.Object)", "java.util.Set<java.lang.Object>.add(java.lang.Object)", "java.beans.PropertyChangeSupport.firePropertyChange(java.beans.PropertyChangeEvent)", "java.lang.String.equals(IPickup.Message.PICKUP_DIE.toString())", "java.beans.PropertyChangeSupport.firePropertyChange(java.beans.PropertyChangeEvent)"], "Fixed commit": "309636a59f91219e7165a9bf24ca421d4d8af3bc", "Url": "https://api.github.com/repos/Kuxe/oopprojekt", "Date": "2014-05-07T13:00:49Z"},
{"Line": "=>1171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mPersistenceManager.getPreferences().onlyIncludeExpensableReceiptsInReports()) { selection += (\" AND \" + (co.smartreceipts.android.persistence.DatabaseHelper.ReceiptsTable.COLUMN_EXPENSEABLE)) + \" = 1\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4609/buggy-version/SmartReceiptsLibrary.src.co.smartreceipts.android.persistence.DatabaseHelper.java", "BodyUseAPI": [], "Fixed commit": "f90298433b13142eecf575da30a47cafe5ef2935", "Url": "https://api.github.com/repos/wbaumann/SmartReceiptsLibrary", "Date": "2014-08-15T02:57:17Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((alertLocArgs) == null) { return null; }else { return alertLocArgs.clone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/232/buggy-version/src.main.java.me.ifelseif.apns2.model.Payload.java", "BodyUseAPI": [], "Fixed commit": "5eb1a35095584a76602a26deb386e0e026210cbc", "Url": "https://api.github.com/repos/linmingchang/java-apns2", "Date": "2017-01-04T10:31:17Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (param.isEmpty()) { result = xyz.idoudou.framework.ReflectionUtil.invokeMethod(controllerBean, actionMethod); }else { result = xyz.idoudou.framework.ReflectionUtil.invokeMethod(controllerBean, actionMethod, param); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1971/buggy-version/src.main.java.xyz.idoudou.framework.DispatcherServlet.java", "BodyUseAPI": ["xyz.idoudou.framework.ReflectionUtil.invokeMethod(java.lang.Object,java.lang.reflect.Method,xyz.idoudou.framework.bean.Param)"], "Fixed commit": "c37f5d0d3ffa96576800233e32dbe991d25c135e", "Url": "https://api.github.com/repos/diaozxin007/smartFramework", "Date": "2015-11-05T10:09:05Z"},
{"Line": "=>2475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((args.length) > 5) && ((args[5]) != null)) { returnOnlyEntitledScopes = ((java.lang.Boolean) (args[5])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7366/buggy-version/components.apimgt.org.wso2.carbon.apimgt.hostobjects.src.main.java.org.wso2.carbon.apimgt.hostobjects.APIStoreHostObject.java", "BodyUseAPI": [], "Fixed commit": "fac445f95dafe3855273c71353d118440c257831", "Url": "https://api.github.com/repos/Megala21/carbon-apimgt", "Date": "2017-10-25T09:25:04Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rascalmpl.values.uptr.TreeAdapter.getAlternatives(org.eclipse.imp.pdb.facts.IConstructor)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (alts.isEmpty()) { return arg; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2797/buggy-version/src.org.rascalmpl.values.uptr.TreeAdapter.java", "BodyUseAPI": [], "Fixed commit": "37baf4cc23e9d9e61016a29ba9c552557b26dbf6", "Url": "https://api.github.com/repos/usethesource/rascal", "Date": "2015-04-21T15:30:06Z"},
{"Line": "=>958", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(alternatives.isEmpty())) { return org.rascalmpl.interpreter.types.RascalTypeFactory.getInstance().nonTerminalType(((org.eclipse.imp.pdb.facts.IConstructor) (alternatives.iterator().next()))); }else { return org.rascalmpl.values.uptr.RascalValueFactory.Tree; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2797/buggy-version/src.org.rascalmpl.values.uptr.RascalValueFactory.java", "BodyUseAPI": ["org.eclipse.imp.pdb.facts.ISet.iterator()", "org.rascalmpl.interpreter.types.RascalTypeFactory.getInstance().nonTerminalType(((org.eclipse.imp.pdb.facts.IConstructor) (alternatives.iterator().next())))", "alternatives.iterator().next()"], "Fixed commit": "37baf4cc23e9d9e61016a29ba9c552557b26dbf6", "Url": "https://api.github.com/repos/usethesource/rascal", "Date": "2015-04-21T15:30:06Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((workingImage) == null) || (((workingImage.cols()) == 0) && ((workingImage.rows()) == 0))) { workingImage = new org.opencv.core.Mat(480, 640, org.opencv.core.CvType.CV_8UC3, new org.opencv.core.Scalar(0, 0, 0)); org.opencv.core.Core.line(workingImage, new org.opencv.core.Point(0, 0), new org.opencv.core.Point(640, 480), new org.opencv.core.Scalar(0, 0, 255)); org.opencv.core.Core.line(workingImage, new org.opencv.core.Point(640, 0), new org.opencv.core.Point(0, 480), new org.opencv.core.Scalar(0, 0, 255)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/945/buggy-version/src.main.java.org.openpnp.vision.pipeline.CvPipeline.java", "BodyUseAPI": [], "Fixed commit": "53e823e6896c65718978ea5d76995e08030e1e84", "Url": "https://api.github.com/repos/BendRocks/openpnp", "Date": "2017-04-09T16:55:32Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["graphql.ExecutionResult.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (data1 instanceof java.util.concurrent.CompletionStage) { return ((java.util.concurrent.CompletionStage<java.util.Map<java.lang.String, java.lang.Object>>) (data1)).thenApply(( data) -> new graphql.ExecutionResultImpl(data, result.getErrors())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5782/buggy-version/src.main.java.graphql.GraphQLAsync.java", "BodyUseAPI": [], "Fixed commit": "1203c3c8592cfca92cb7e207bc4c3690f31a747a", "Url": "https://api.github.com/repos/dminkovsky/graphql-java", "Date": "2016-12-03T02:12:52Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (canDoIt(command[0])) { db = ua.avm.sqlCMD.model.DataBase.initDB(command); }else { view.warningWriteln(\"Error command.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2426/buggy-version/src.ua.avm.sqlCMD.controller.command.Connect.java", "BodyUseAPI": ["ua.avm.sqlCMD.model.DataBase.initDB(java.lang.String[])"], "Fixed commit": "69ff70f84d346ef4c3d27681ff2843a69893509f", "Url": "https://api.github.com/repos/AVM82/projectSqlCmd", "Date": "2016-11-30T13:10:09Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(mEventtype)) && (currentEndDate.before(currentStartDate))) { setBtn_pickDateText(btn_pickDateEnd, currentEndDate, year, month, day_of_month); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/395/buggy-version/app.src.main.java.de.grau.organizer.activities.EditorActivity.java", "BodyUseAPI": ["de.grau.organizer.activities.EditorActivity.8.setBtn_pickDateText(android.widget.Button,java.util.Calendar,int,int,int)"], "Fixed commit": "26007e7910c547647c0afed1e903e7a4d20abad6", "Url": "https://api.github.com/repos/Vierheller/Organizer", "Date": "2016-10-26T16:22:43Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((\"LGE\".equals(Build.MANUFACTURER)) && (Build.MODEL.equals(\"LGUS991\"))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5290/buggy-version/cam2.src.main.java.com.commonsware.cwac.cam2.CameraEngine.java", "BodyUseAPI": [], "Fixed commit": "1d56aa469cc053b7ad80e9a3fc701075cb0c4d15", "Url": "https://api.github.com/repos/commonsguy/cwac-cam2", "Date": "2016-05-06T23:37:17Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(semanticContext.getParams().isEmpty())) { semanticContext.getParams().clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1925/buggy-version/src.main.java.com.yyd.semantic.services.impl.SemanticServiceImpl.java", "BodyUseAPI": ["semanticContext.getParams().clear()", "com.ybnf.semantic.SemanticContext.getParams()"], "Fixed commit": "fc7c7fb648641ea2823aba0fe95a5a501258d589", "Url": "https://api.github.com/repos/celeryrobo/yyd-semantic", "Date": "2017-11-06T02:42:57Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) == 0) { addToTail(o); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4378/buggy-version/doubleLinkList.java", "BodyUseAPI": [], "Fixed commit": "9c6d63ac30b6cfd45defae4a1175a23c307577b3", "Url": "https://api.github.com/repos/Philip-W/Doubly-Linked-List", "Date": "2015-09-12T22:27:53Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((submission_steps) == null) { submission_steps = getResources().getStringArray(R.array.submission_steps); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2943/buggy-version/app.src.main.java.com.github.codetanzania.ui.activity.BaseAppFragmentActivity.java", "BodyUseAPI": [], "Fixed commit": "1d3a9af671383734b2a2257876d6391e327c3904", "Url": "https://api.github.com/repos/CodeTanzania/open311-android", "Date": "2017-09-07T07:24:39Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((actionRequest.getParameter(\"equipmentLocAsCustomerFlag\")) != null) creditApp.setEquipmentLocAsCustomerFlag(com.liferay.portal.kernel.util.ParamUtil.getBoolean(actionRequest, \"equipmentLocAsCustomerFlag\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1070/buggy-version/docroot.WEB-INF.src.com.tamarack.creekridge.liferay.paymentcalculator.PaymentCalculatorUtil.java", "BodyUseAPI": ["com.liferay.portal.kernel.util.ParamUtil.getBoolean(javax.portlet.ActionRequest,java.lang.String)", "com.tamarack.creekridge.model.CreditApp.setEquipmentLocAsCustomerFlag(com.liferay.portal.kernel.util.ParamUtil.getBoolean(actionRequest, \"equipmentLocAsCustomerFlag\"))"], "Fixed commit": "f11479585d978be4ad58de6c7e368079ccdd5416", "Url": "https://api.github.com/repos/TamarackConsulting/Creekridge_Portal", "Date": "2014-12-05T05:27:32Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((report.getLat()) == lat) && ((report.getLong()) == longi)) { (count[((report.getDateMonth()) - 1)])++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2383/buggy-version/src.org.team20.controller.HistoryGraphScreen.java", "BodyUseAPI": ["org.team20.model.QualityReport.getDateMonth()"], "Fixed commit": "1dd8988000a917e88f6fc188f0185588c88b287f", "Url": "https://api.github.com/repos/ssood12/cs2340", "Date": "2016-11-15T03:45:30Z"},
{"Line": "=>642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (lastLibElt != null) root.insertBefore(wiringElt, lastLibElt.getNextSibling());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3586/buggy-version/Logisim-Fork.com.cburch.logisim.file.XmlReader.java", "BodyUseAPI": ["org.w3c.dom.Element.insertBefore(org.w3c.dom.Element,org.w3c.dom.Node)", "org.w3c.dom.Element.getNextSibling()"], "Fixed commit": "15e4c3bb71363ef785bc268b0e48f510d151d8bb", "Url": "https://api.github.com/repos/LogisimIt/Logisim", "Date": "2017-10-09T17:59:46Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((secondOperand.getType()) instanceof soot.PrimType)) throw new java.lang.RuntimeException(\"Invalid value type for primitibe operation\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8043/buggy-version/src.soot.toDex.ExprVisitor.java", "BodyUseAPI": [], "Fixed commit": "72d136edb601311bab5b97aa4d7e0112da34d744", "Url": "https://api.github.com/repos/florian-kuebler/soot", "Date": "2015-06-30T07:40:09Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (map == null) return null; else return new se.chalmers.tda367.std.core.GameBoard(map);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2813/buggy-version/src.se.chalmers.tda367.std.core.factories.GameBoardFactory.java", "BodyUseAPI": [], "Fixed commit": "52459132f211063fdc4956084f3eb96c4a3cec3c", "Url": "https://api.github.com/repos/emij/TDA367-ShroomDefence", "Date": "2012-05-21T14:25:39Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(state.getDirection().equals(\"up\"))) { currentstate = java.lang.Integer.parseInt(state.getDirection()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3510/buggy-version/src.main.java.ac.at.tuwien.infosys.visp.dataProvider.generationPattern.RandomWalk.java", "BodyUseAPI": ["java.lang.Integer.parseInt(state.getDirection())", "ac.at.tuwien.infosys.visp.dataProvider.entities.GenerationState.getDirection()"], "Fixed commit": "90b58cb36edd1bc6990f4aebd9e681228949e1a0", "Url": "https://api.github.com/repos/visp-streaming/dataProvider", "Date": "2017-08-28T09:32:28Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(state.getDirection().equals(\"up\"))) { currentstate = java.lang.Integer.parseInt(state.getDirection()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3510/buggy-version/src.main.java.ac.at.tuwien.infosys.visp.dataProvider.generationPattern.RandomWalkHalf.java", "BodyUseAPI": ["java.lang.Integer.parseInt(state.getDirection())", "ac.at.tuwien.infosys.visp.dataProvider.entities.GenerationState.getDirection()"], "Fixed commit": "90b58cb36edd1bc6990f4aebd9e681228949e1a0", "Url": "https://api.github.com/repos/visp-streaming/dataProvider", "Date": "2017-08-28T09:32:28Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isAddCommand) { builder.append(\" \"); builder.append(CliSyntax.PREFIX_TAG.getPrefix()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1572/buggy-version/src.main.java.seedu.todoapp.logic.parser.ParserUtil.java", "BodyUseAPI": [], "Fixed commit": "7ce612170c6c540cf62fb7e335810d717cb1dafa", "Url": "https://api.github.com/repos/CS2103JAN2017-F12-B2/main", "Date": "2017-04-05T14:24:45Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkName.isEmpty()) { com.tealcube.minecraft.bukkit.facecore.utilities.MessageUtils.sendMessage(sender, \"<red>You must name your guild.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4652/buggy-version/src.main.java.com.tealcube.minecraft.bukkit.tribes.commands.TribeCommand.java", "BodyUseAPI": [], "Fixed commit": "533a96b6ec40c9dfeb5b4b3888bef77bfb8ec817", "Url": "https://api.github.com/repos/TealCube/tribes", "Date": "2015-04-13T18:53:01Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String>.remove(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (p.equals(FC.ask)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3703/buggy-version/src.FC.java", "BodyUseAPI": [], "Fixed commit": "a350c4aa8d92ff2b5574229b27216362626d1cb3", "Url": "https://api.github.com/repos/100001346/AIInferEngine", "Date": "2017-05-26T00:49:55Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((spnKalbeProduct.getSelectedItemPosition()) > 0) { spnCompetProduct.setAdapter(null); spnKalbeProduct.setSelection(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5173/buggy-version/app.src.main.java.com.kalbenutritionals.app.kalbespgmobile.FragmentAddCustomerBaseSPG.java", "BodyUseAPI": ["android.widget.Spinner.setSelection(int)"], "Fixed commit": "ad4127e9a5e84735d6a07b6fa3d3fd11afa894e8", "Url": "https://api.github.com/repos/arickanjass/kalbespgmobile", "Date": "2017-03-14T03:37:57Z"},
{"Line": "=>1166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(model.tokens().equals(otherModel.tokens()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6350/buggy-version/nodes.src.main.java.org.nodes.MapDTGraph.java", "BodyUseAPI": [], "Fixed commit": "6800d8e15f08680e620798ab9c8c2b45284d010c", "Url": "https://api.github.com/repos/Data2Semantics/nodes", "Date": "2017-08-26T14:44:58Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.cuni.xrg.intlib.commons.module.config.ConfigWrap<C>.deserialize(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (config == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2514/buggy-version/commons-module.src.main.java.cz.cuni.xrg.intlib.commons.module.dialog.BaseConfigDialog.java", "BodyUseAPI": [], "Fixed commit": "1b04408fcef1beff188ac48f55e48d355aab1073", "Url": "https://api.github.com/repos/mff-uk/intlib", "Date": "2013-08-16T14:42:01Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!includeSystemResources) { throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5808/buggy-version/android.titanium.src.org.appcelerator.titanium.util.TiRHelper.java", "BodyUseAPI": [], "Fixed commit": "e7beec84f5209141bddc515e28c8bd87900dd115", "Url": "https://api.github.com/repos/civicboom/titanium_mobile", "Date": "2011-02-03T16:58:38Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pratilipi.data.access.DataAccessor.getAuthor(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (author == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/13/buggy-version/src.com.pratilipi.commons.server.PratilipiHelper.java", "BodyUseAPI": [], "Fixed commit": "6d4bc5b918d869246e29fd51d1bf9d0e81f0ce65", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2015-02-08T17:46:13Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((arguments != null) && ((arguments.length) > 0)) { try { msg = java.text.MessageFormat.format(pattern, arguments); } catch (java.lang.Exception e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4391/buggy-version/src.main.java.com.openthinks.libs.utilities.logger.ProcessLogger.java", "BodyUseAPI": ["java.text.MessageFormat.format(java.lang.String,java.lang.Object[])"], "Fixed commit": "539c99160ac43220dbfef6bf31f3e8f37990699e", "Url": "https://api.github.com/repos/daileyet/openlibs.utilities", "Date": "2017-10-24T10:03:08Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((arguments != null) && ((arguments.length) > 0)) { try { msg = java.text.MessageFormat.format(pattern, arguments); } catch (java.lang.Exception e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4391/buggy-version/src.main.java.com.openthinks.libs.utilities.logger.ProcessLogger.java", "BodyUseAPI": ["java.text.MessageFormat.format(java.lang.String,java.lang.Object[])"], "Fixed commit": "539c99160ac43220dbfef6bf31f3e8f37990699e", "Url": "https://api.github.com/repos/daileyet/openlibs.utilities", "Date": "2017-10-24T10:03:08Z"},
{"Line": "=>686", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.momia.service.course.base.impl.CourseServiceImpl.getParentId(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (parentId > 0) courseIds.add(parentId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5615/buggy-version/course.service-course.src.main.java.cn.momia.service.course.base.impl.CourseServiceImpl.java", "BodyUseAPI": ["java.util.Set<java.lang.Long>.add(long)"], "Fixed commit": "9d17a3f8a8ee7eeb80ed08178339b59f7c816cb1", "Url": "https://api.github.com/repos/lovemomia/service", "Date": "2015-12-09T11:09:45Z"},
{"Line": "=>691", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.momia.service.course.base.impl.CourseServiceImpl.queryObjectList(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (details.isEmpty()) return cn.momia.api.course.dto.CourseDetail.NOT_EXIST_COURSE_DETAIL;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5615/buggy-version/course.service-course.src.main.java.cn.momia.service.course.base.impl.CourseServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "9d17a3f8a8ee7eeb80ed08178339b59f7c816cb1", "Url": "https://api.github.com/repos/lovemomia/service", "Date": "2015-12-09T11:09:45Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(pd.description())) { p.setDescription(pd.description()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2516/buggy-version/api.src.main.java.org.openmrs.module.patientflags.metadatadeploy.bundle.PatientFlagMetadataBundle.java", "BodyUseAPI": ["org.openmrs.module.patientflags.metadatadeploy.descriptor.PriorityDescriptor.description()", "org.openmrs.module.patientflags.Priority.setDescription(pd.description())"], "Fixed commit": "3466f4349c2f3fccf5e182627b113e1ee72c5eef", "Url": "https://api.github.com/repos/ssmusoke/openmrs-module-patientflags", "Date": "2017-11-13T15:54:03Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["playerNumber.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (numstr == \"\") { playerNumber.setError(\"\uc22b\uc790\ub97c \uc785\ub825\ud558\uc138\uc694.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6324/buggy-version/client.app.src.main.java.kr.oss.sportsmatchmaker.militarysportsmatchmaker.MatchSettingActivity.java", "BodyUseAPI": [], "Fixed commit": "beb0b246f4de2eb893d4f07d5fcb16c9269de2ee", "Url": "https://api.github.com/repos/jungin500/APP_military-sports-matchmaker_AnJungIn_KimBeomSu_LimDaeIn", "Date": "2017-10-17T16:14:12Z"},
{"Line": "=>887", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parameters.length) == 1) { b.append(\"TLC requires %1% not to take any argument.\"); }else if ((parameters.length) == 2) { b.append(\"TLC requires %1% not to take any argument, but one was given: %2%\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7946/buggy-version/tlatools.src.tlc2.output.MP.java", "BodyUseAPI": [], "Fixed commit": "be04e89ca8aacaaf611725e89631fb3004e0282c", "Url": "https://api.github.com/repos/tlaplus/tlaplus", "Date": "2017-04-21T05:48:35Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hr.mogh.trees.binary.BinarySearchTreeSolver.find(hr.mogh.trees.BinaryTreeNode,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((deletedNode.getLeftChild()) != null) && ((deletedNode.getRightChild()) == null)) { if ((parent.getRightChild()) == deletedNode) { parent.setRightChild(deletedNode.getLeftChild()); }else { parent.setLeftChild(deletedNode.getLeftChild()); } }else if (((deletedNode.getLeftChild()) != null) && ((deletedNode.getRightChild()) != null)) { hr.mogh.trees.BinaryTreeNode successorNode = hr.mogh.trees.binary.BinarySearchTreeSolver.findMin(deletedNode.getLeftChild()); parent.setValue(successorNode.getValue()); successorNode.getParent().setLeftChild(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/9097/buggy-version/src.hr.mogh.trees.binary.BinarySearchTreeSolver.java", "BodyUseAPI": ["hr.mogh.trees.BinaryTreeNode.setRightChild(deletedNode.getLeftChild())", "hr.mogh.trees.BinaryTreeNode.getLeftChild()", "hr.mogh.trees.BinaryTreeNode.setLeftChild(deletedNode.getLeftChild())", "hr.mogh.trees.binary.BinarySearchTreeSolver.findMin(deletedNode.getLeftChild())", "hr.mogh.trees.BinaryTreeNode.getLeftChild()", "hr.mogh.trees.BinaryTreeNode.getRightChild()", "hr.mogh.trees.BinaryTreeNode.getLeftChild()", "hr.mogh.trees.BinaryTreeNode.getLeftChild()"], "Fixed commit": "3ff0ab97f0db8a18c0c7fd44ab59b654cb7442a0", "Url": "https://api.github.com/repos/vladokovac/getting-better", "Date": "2015-10-12T18:32:42Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((null != (charsetName)) && (0 < (charsetName.length()))) { result.append(\" CHARACTER SET \"); result.append(charsetName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4183/buggy-version/Madz.DatabaseMetaData.src.main.java.net.madz.db.core.meta.immutable.mysql.datatype.MySQLCharBase.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "0ff254602843f1aa2a80872e6519acf0bedf2b98", "Url": "https://api.github.com/repos/zhongdj/net.madz.crmp.etl", "Date": "2013-03-12T15:54:59Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((null != (collationName)) && (0 < (collationName.length()))) { result.append(\" COLLATE \"); result.append(collationName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4183/buggy-version/Madz.DatabaseMetaData.src.main.java.net.madz.db.core.meta.immutable.mysql.datatype.MySQLCharBase.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "0ff254602843f1aa2a80872e6519acf0bedf2b98", "Url": "https://api.github.com/repos/zhongdj/net.madz.crmp.etl", "Date": "2013-03-12T15:54:59Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((txt.startsWith(\"[\")) && (txt.endsWith(\"]\"))) { hackTxt = txt + \" \"; }else { hackTxt = txt; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1373/buggy-version/src.org.qii.weiciyuan.support.utils.ListViewTool.java", "BodyUseAPI": [], "Fixed commit": "6ea0b1c1662f09fbbba6a8027eca6d59e36324bb", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-27T06:52:16Z"},
{"Line": "=>1450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (f.getLibrary().isLIMIT(f.getLibrary().getSongBorrowLimit(currUser, s).fst)) { if (f.getLibrary().loaned().contains(s)) { if (f.getLibrary().hasWaitingList(s)) { if (f.getLibrary().getWaitingListUsers(s).contains(currUser)) { javax.swing.JOptionPane.showMessageDialog(this, \"You are already on the wait list\"); }else { javax.swing.JOptionPane.showMessageDialog(this, \"You have been added to wait list\"); f.getLibrary().sendBorrow(currUser, s); } }else { javax.swing.JOptionPane.showMessageDialog(this, \"You have been added to wait list\"); f.getLibrary().sendBorrow(currUser, s); } }else { javax.swing.JOptionPane.showMessageDialog(this, \"Borrow successful!\"); f.getLibrary().sendBorrow(currUser, s); } s.incrementBorrowedCount(); }else { f.getLibrary().createBorrowRequest(currUser, s); s.incrementBorrowedCount(); javax.swing.JOptionPane.showMessageDialog(this, (\"Request being sent to \" + f)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1960/buggy-version/UI.java", "BodyUseAPI": ["f.getLibrary().loaned()", "Song.incrementBorrowedCount()", "f.getLibrary().sendBorrow(User,Song)", "f.getLibrary().loaned().contains(Song)", "f.getLibrary().sendBorrow(User,Song)", "User.getLibrary()", "User.getLibrary()", "User.getLibrary()", "f.getLibrary().getWaitingListUsers(s).contains(User)", "javax.swing.JOptionPane.showMessageDialog(UI,(\"Request being sent to \" + f))", "User.getLibrary()", "User.getLibrary()", "f.getLibrary().createBorrowRequest(User,Song)", "f.getLibrary().getWaitingListUsers(Song)", "User.getLibrary()", "f.getLibrary().hasWaitingList(Song)", "Song.incrementBorrowedCount()", "f.getLibrary().sendBorrow(User,Song)", "User.getLibrary()"], "Fixed commit": "abe74ac8266a3314c28cc2e7253c67014bfff4e6", "Url": "https://api.github.com/repos/danbox/cs314PA3", "Date": "2013-12-05T05:18:54Z"},
{"Line": "=>1182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JList.getSelectedValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (p != null) { currUser.getLibrary().removePlaylist(p); }else { javax.swing.JOptionPane.showMessageDialog(this, \"No playlist selected.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1960/buggy-version/UI.java", "BodyUseAPI": ["currUser.getLibrary().removePlaylist(java.lang.String)"], "Fixed commit": "abe74ac8266a3314c28cc2e7253c67014bfff4e6", "Url": "https://api.github.com/repos/danbox/cs314PA3", "Date": "2013-12-05T05:18:54Z"},
{"Line": "=>1793", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showOptionDialog(UI,javax.swing.JPanel,java.lang.String,int,int,<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result == (javax.swing.JOptionPane.OK_OPTION)) { if (owned.isSelected()) { Song s = ((Song) (ownedList.getSelectedValue())); if (s != null) { javax.swing.JPanel panel2 = new javax.swing.JPanel(); javax.swing.JList list = new javax.swing.JList(); java.util.Vector<java.lang.String> tmp = new java.util.Vector<java.lang.String>(); java.lang.String tmpString = ((s.getName()) != null) ? s.getName() : \"\"; tmp.add((\"Name: \" + tmpString)); tmpString = ((s.get(\"artist\")) != null) ? s.get(\"artist\") : \"\"; tmp.add((\"Artist: \" + tmpString)); tmpString = ((s.get(\"album\")) != null) ? s.get(\"album\") : \"\"; tmp.add((\"Album: \" + tmpString)); tmpString = ((s.get(\"genre\")) != null) ? s.get(\"genre\") : \"\"; tmp.add((\"Genre: \" + tmpString)); tmpString = ((s.get(\"composer\")) != null) ? s.get(\"composer\") : \"\"; tmp.add((\"Composer: \" + tmpString)); tmpString = ((s.get(\"year\")) != null) ? s.get(\"year\") : \"\"; tmp.add((\"Year: \" + tmpString)); list.setListData(tmp.toArray()); panel2.add(list); javax.swing.JOptionPane.showOptionDialog(this, panel2, \"Song details\", javax.swing.JOptionPane.OK_CANCEL_OPTION, javax.swing.JOptionPane.PLAIN_MESSAGE, null, null, null); }else { javax.swing.JOptionPane.showMessageDialog(this, \"Nothing selected.\"); } }else if (borrowed.isSelected()) { Song s = ((Song) (borrowedList.getSelectedValue())); if (s != null) { javax.swing.JPanel panel2 = new javax.swing.JPanel(); javax.swing.JList list = new javax.swing.JList(); java.util.Vector<java.lang.String> tmp = new java.util.Vector<java.lang.String>(); tmp.add((\"Name: \" + (s.getName()))); tmp.add((\"Artist: \" + (s.get(\"artist\")))); tmp.add((\"Album: \" + (s.get(\"album\")))); tmp.add((\"Genre: \" + (s.get(\"genre\")))); tmp.add((\"Composer: \" + (s.get(\"composer\")))); tmp.add((\"Year: \" + (s.getYear()))); tmp.add((\"Borrowed from: \" + (currUser.getLibrary().getOwnerofBorrowed(s)))); tmp.add((\"Plays left: \" + (currUser.getLibrary().getPlaysLeftOfBorrowed(s)))); list.setListData(tmp.toArray()); panel2.add(list); javax.swing.JOptionPane.showOptionDialog(this, panel2, \"Song details\", javax.swing.JOptionPane.OK_CANCEL_OPTION, javax.swing.JOptionPane.PLAIN_MESSAGE, null, null, null); }else { javax.swing.JOptionPane.showMessageDialog(this, \"Nothing selected.\"); } }else if (loaned.isSelected()) { Song s = ((Song) (loanedList.getSelectedValue())); if (s != null) { javax.swing.JPanel panel2 = new javax.swing.JPanel(); javax.swing.JList list = new javax.swing.JList(); java.util.Vector<java.lang.String> tmp = new java.util.Vector<java.lang.String>(); tmp.add((\"Name: \" + (s.getName()))); tmp.add((\"Artist: \" + (s.get(\"artist\")))); tmp.add((\"Album: \" + (s.get(\"album\")))); tmp.add((\"Genre: \" + (s.get(\"genre\")))); tmp.add((\"Composer: \" + (s.get(\"composer\")))); tmp.add((\"Year: \" + (s.getYear()))); list.setListData(tmp.toArray()); panel2.add(list); javax.swing.JOptionPane.showOptionDialog(this, panel2, \"Song details\", javax.swing.JOptionPane.OK_CANCEL_OPTION, javax.swing.JOptionPane.PLAIN_MESSAGE, null, null, null); }else { javax.swing.JOptionPane.showMessageDialog(this, \"Nothing selected.\"); } }else { javax.swing.JOptionPane.showMessageDialog(this, \"No list selected.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1960/buggy-version/UI.java", "BodyUseAPI": [], "Fixed commit": "abe74ac8266a3314c28cc2e7253c67014bfff4e6", "Url": "https://api.github.com/repos/danbox/cs314PA3", "Date": "2013-12-05T05:18:54Z"},
{"Line": "=>1483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!belongsToFriend) javax.swing.JOptionPane.showMessageDialog(this, (\"You do not have the permissions to borrow \" + (s.getName())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1960/buggy-version/UI.java", "BodyUseAPI": [], "Fixed commit": "abe74ac8266a3314c28cc2e7253c67014bfff4e6", "Url": "https://api.github.com/repos/danbox/cs314PA3", "Date": "2013-12-05T05:18:54Z"},
{"Line": "=>1204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(currUser.getFriends().isEmpty())) { java.lang.String search = searchInput.getText(); if (allLibrariesRadio.isSelected()) { java.util.Hashtable<java.lang.String, User> users = uMngr.getUsers(); java.util.Set<java.lang.String> keys = users.keySet(); java.util.Vector<Song> tmp = new java.util.Vector<Song>(); for (java.lang.String key : keys) { User u = uMngr.findUser(key); if (((u.getPerm()) != (PermType.NONE)) || (((u.getPerm()) == (PermType.FRIENDS)) && (!(currUser.isFriendsWith(u))))) { java.util.List<Song> owned = u.getLibrary().owned(); for (Song s : owned) { if ((s.getName().toLowerCase().startsWith(search.toLowerCase())) || (s.getMetaData().get(\"artist\").toLowerCase().startsWith(search.toLowerCase()))) { tmp.add(s); } } } this.searchList.setListData(tmp.toArray()); } }else if (friendsLibrariesRadio.isSelected()) { java.util.List<User> friends = currUser.getFriends(); java.util.Vector<Song> tmp = new java.util.Vector<Song>(); for (User u : friends) { if ((u.getPerm()) != (PermType.NONE)) { java.util.List<Song> owned = u.getLibrary().owned(); for (Song s : owned) { if ((s.getName().toLowerCase().startsWith(search.toLowerCase())) || (s.getMetaData().get(\"artist\").toLowerCase().startsWith(search.toLowerCase()))) { tmp.add(s); } } } this.searchList.setListData(tmp.toArray()); } }else if (ownLibraryRadio.isSelected()) { java.util.Vector<Song> tmp = new java.util.Vector<Song>(); java.util.List<Song> owned = currUser.getLibrary().owned(); for (Song s : owned) { if ((s.getName().toLowerCase().startsWith(search.toLowerCase())) || (s.getMetaData().get(\"artist\").toLowerCase().startsWith(search.toLowerCase()))) { tmp.add(s); } } this.searchList.setListData(tmp.toArray()); } }else { this.searchList.setListData(currUser.getFriends().toArray()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1960/buggy-version/UI.java", "BodyUseAPI": ["User.getFriends()", "currUser.getLibrary().owned()", "javax.swing.JList.setListData(currUser.getFriends().toArray())", "User.getFriends()", "currUser.getFriends().toArray()", "User.getLibrary()", "User.isFriendsWith(User)"], "Fixed commit": "abe74ac8266a3314c28cc2e7253c67014bfff4e6", "Url": "https://api.github.com/repos/danbox/cs314PA3", "Date": "2013-12-05T05:18:54Z"},
{"Line": "=>1853", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JList.getSelectedValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (s != null) { javax.swing.JPanel panel2 = new javax.swing.JPanel(); javax.swing.JList list = new javax.swing.JList(); java.util.Vector<java.lang.String> tmp = new java.util.Vector<java.lang.String>(); tmp.add((\"Name: \" + (s.getName()))); tmp.add((\"Artist: \" + (s.get(\"artist\")))); tmp.add((\"Album: \" + (s.get(\"album\")))); tmp.add((\"Genre: \" + (s.get(\"genre\")))); tmp.add((\"Composer: \" + (s.get(\"composer\")))); tmp.add((\"Year: \" + (s.getYear()))); list.setListData(tmp.toArray()); panel2.add(list); javax.swing.JOptionPane.showOptionDialog(this, panel2, \"Song details\", javax.swing.JOptionPane.OK_CANCEL_OPTION, javax.swing.JOptionPane.PLAIN_MESSAGE, null, null, null); }else { javax.swing.JOptionPane.showMessageDialog(this, \"Nothing selected.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1960/buggy-version/UI.java", "BodyUseAPI": ["Song.get(java.lang.String)", "java.util.Vector<java.lang.String>.add((\"Composer: \" + (s.get(\"composer\"))))", "Song.getName()", "java.util.Vector<java.lang.String>.add((\"Artist: \" + (s.get(\"artist\"))))", "Song.getYear()", "java.util.Vector<java.lang.String>.add((\"Name: \" + (s.getName())))", "Song.get(java.lang.String)", "Song.get(java.lang.String)", "java.util.Vector<java.lang.String>.add((\"Genre: \" + (s.get(\"genre\"))))", "Song.get(java.lang.String)", "java.util.Vector<java.lang.String>.add((\"Year: \" + (s.getYear())))", "java.util.Vector<java.lang.String>.add((\"Album: \" + (s.get(\"album\"))))"], "Fixed commit": "abe74ac8266a3314c28cc2e7253c67014bfff4e6", "Url": "https://api.github.com/repos/danbox/cs314PA3", "Date": "2013-12-05T05:18:54Z"},
{"Line": "=>1441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currUser.getLibrary().isOwned(s)) javax.swing.JOptionPane.showMessageDialog(this, \"You own this song.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1960/buggy-version/UI.java", "BodyUseAPI": [], "Fixed commit": "abe74ac8266a3314c28cc2e7253c67014bfff4e6", "Url": "https://api.github.com/repos/danbox/cs314PA3", "Date": "2013-12-05T05:18:54Z"},
{"Line": "=>1077", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currUser.getLibrary().isPlayingSong()) { this.currentlyPlayingLabel.setText((\"Currently Playing: \" + (currUser.getLibrary().playing().getName()))); }else { this.currentlyPlayingLabel.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1960/buggy-version/UI.java", "BodyUseAPI": ["currUser.getLibrary().playing().getName()", "javax.swing.JLabel.setText((\"Currently Playing: \" + (currUser.getLibrary().playing().getName())))", "User.getLibrary()", "currUser.getLibrary().playing()"], "Fixed commit": "abe74ac8266a3314c28cc2e7253c67014bfff4e6", "Url": "https://api.github.com/repos/danbox/cs314PA3", "Date": "2013-12-05T05:18:54Z"},
{"Line": "=>1826", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JList.getSelectedValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (s != null) { javax.swing.JPanel panel2 = new javax.swing.JPanel(); javax.swing.JList list = new javax.swing.JList(); java.util.Vector<java.lang.String> tmp = new java.util.Vector<java.lang.String>(); tmp.add((\"Name: \" + (s.getName()))); tmp.add((\"Artist: \" + (s.get(\"artist\")))); tmp.add((\"Album: \" + (s.get(\"album\")))); tmp.add((\"Genre: \" + (s.get(\"genre\")))); tmp.add((\"Composer: \" + (s.get(\"composer\")))); tmp.add((\"Year: \" + (s.getYear()))); tmp.add((\"Borrowed from: \" + (currUser.getLibrary().getOwnerofBorrowed(s)))); tmp.add((\"Plays left: \" + (currUser.getLibrary().getPlaysLeftOfBorrowed(s)))); list.setListData(tmp.toArray()); panel2.add(list); javax.swing.JOptionPane.showOptionDialog(this, panel2, \"Song details\", javax.swing.JOptionPane.OK_CANCEL_OPTION, javax.swing.JOptionPane.PLAIN_MESSAGE, null, null, null); }else { javax.swing.JOptionPane.showMessageDialog(this, \"Nothing selected.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1960/buggy-version/UI.java", "BodyUseAPI": ["currUser.getLibrary().getOwnerofBorrowed(Song)", "java.util.Vector<java.lang.String>.add((\"Genre: \" + (s.get(\"genre\"))))", "java.util.Vector<java.lang.String>.add((\"Name: \" + (s.getName())))", "currUser.getLibrary().getPlaysLeftOfBorrowed(Song)", "java.util.Vector<java.lang.String>.add((\"Year: \" + (s.getYear())))", "Song.get(java.lang.String)", "Song.getYear()", "Song.getName()", "java.util.Vector<java.lang.String>.add((\"Artist: \" + (s.get(\"artist\"))))", "java.util.Vector<java.lang.String>.add((\"Album: \" + (s.get(\"album\"))))", "java.util.Vector<java.lang.String>.add((\"Borrowed from: \" + (currUser.getLibrary().getOwnerofBorrowed(s))))", "Song.get(java.lang.String)", "Song.get(java.lang.String)", "java.util.Vector<java.lang.String>.add((\"Composer: \" + (s.get(\"composer\"))))", "java.util.Vector<java.lang.String>.add((\"Plays left: \" + (currUser.getLibrary().getPlaysLeftOfBorrowed(s))))", "Song.get(java.lang.String)"], "Fixed commit": "abe74ac8266a3314c28cc2e7253c67014bfff4e6", "Url": "https://api.github.com/repos/danbox/cs314PA3", "Date": "2013-12-05T05:18:54Z"},
{"Line": "=>1281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result != (javax.swing.JOptionPane.CANCEL_OPTION)) { try { java.lang.Integer.parseInt(year.getText()); java.lang.String[][] songMeta = new java.lang.String[][]{ new java.lang.String[]{ \"name\", songName.getText() }, new java.lang.String[]{ \"artist\", artist.getText() }, new java.lang.String[]{ \"genre\", genre.getText() }, new java.lang.String[]{ \"album\", album.getText() }, new java.lang.String[]{ \"year\", year.getText() } }; currUser.getLibrary().addSong(new Song(new Metadata(songMeta))); ownedList.setListData(currUser.getLibrary().owned().toArray()); } catch (java.lang.NumberFormatException e) { javax.swing.JOptionPane.showMessageDialog(this, \"Invalid Year\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1960/buggy-version/UI.java", "BodyUseAPI": [], "Fixed commit": "abe74ac8266a3314c28cc2e7253c67014bfff4e6", "Url": "https://api.github.com/repos/danbox/cs314PA3", "Date": "2013-12-05T05:18:54Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRequest) { offerRelation.add(ride); requestRelation.add(newRide); }else { offerRelation.add(newRide); requestRelation.add(ride); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5153/buggy-version/Ridez.app.src.main.java.il.ac.huji.ridez.OfferRequestRideActivity.java", "BodyUseAPI": [], "Fixed commit": "da08a2ca214a7f924048a25fa7dd59f2acb9014e", "Url": "https://api.github.com/repos/Tzvi-Corn/Ridez", "Date": "2015-09-07T09:31:44Z"},
{"Line": "=>714", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((savedState.rating) != 0) { setRating(savedState.rating); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2775/buggy-version/nearit-ui.src.main.java.com.nearit.ui_bindings.feedback.views.NearItUIRatingBar.java", "BodyUseAPI": ["com.nearit.ui_bindings.feedback.views.NearItUIRatingBar.setRating(float)"], "Fixed commit": "64c3ae7bbc35efc748eef5968ca97d91af2219a8", "Url": "https://api.github.com/repos/nearit/Android-UI-Bindings", "Date": "2017-10-11T16:25:26Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Group.SCHEMA_TYPE.equals(record.getTypeCode())) { com.constellio.model.entities.schemas.MetadataSchema groupSchema = types.getSchema(Group.DEFAULT_SCHEMA); if (record.isModified(groupSchema.getMetadata(Group.PARENT))) { cache.invalidateAll(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7013/buggy-version/model.src.com.constellio.model.services.records.RecordUtils.java", "BodyUseAPI": ["com.constellio.model.entities.records.Record.isModified(groupSchema.getMetadata(Group.PARENT))"], "Fixed commit": "3e6fe2b2b9433a4c3fb0e95b6518c04d1c82bd27", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2017-11-24T19:46:52Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(individualCacheDir.exists())) { if (!(individualCacheDir.mkdir())) { individualCacheDir = cacheDir; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5616/buggy-version/UniversalImageLoader.src.com.nostra13.universalimageloader.utils.StorageUtils.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "9cf00a0f6dd7defac00a380934755935b4e02076", "Url": "https://api.github.com/repos/pacificsky/Android-Universal-Image-Loader", "Date": "2012-03-07T19:38:35Z"},
{"Line": "=>1524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codehaus.jackson.map.ObjectMapper.readValue(java.lang.String,org.codehaus.jackson.type.TypeReference<com.nearhere.domain.User>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(com.dy.common.Util.isEmptyString(user.getUserName()))) result = sqlSession.update(\"com.tessoft.nearhere.taxi.updateUserName\", user);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3388/buggy-version/randomMsgServer.src.main.java.com.tessoft.nearhere.taxi.TaxiController.java", "BodyUseAPI": ["org.apache.ibatis.session.SqlSession.update(java.lang.String,com.nearhere.domain.User)"], "Fixed commit": "159cd2820b3cef798b27145639f83c6edcf778ab", "Url": "https://api.github.com/repos/kim2509/publicChatServer", "Date": "2015-04-15T13:27:59Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.hashCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hashCode < 0) { hashCode *= -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3800/buggy-version/src.Partitioner.java", "BodyUseAPI": [], "Fixed commit": "e0ffe7fbc4faab97f474ea233966b4de60e8c505", "Url": "https://api.github.com/repos/CrossRef/logppj", "Date": "2016-04-28T20:55:38Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pokerList.size()) > 0) { reset_card(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1478/buggy-version/src.com.wazzup.ninedrink.Ninedrink.java", "BodyUseAPI": [], "Fixed commit": "9c103c2891e861457b8747c552b581b4281978c8", "Url": "https://api.github.com/repos/andyyou/NineDrink", "Date": "2011-07-17T02:07:42Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hasConfiguration(samlProperties)) { com.dotmarketing.util.Logger.debug(this, (\"Doing validation for disable hostName: \" + hostName)); doValidationForDisabledSite(samlProperties, hostName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8351/buggy-version/src.com.dotcms.plugin.saml.v3.config.SamlSiteValidator.java", "BodyUseAPI": ["com.dotcms.plugin.saml.v3.config.SamlSiteValidator.doValidationForDisabledSite(java.util.Properties,java.lang.String)"], "Fixed commit": "9a8d2847aa22bb61b49537b18150979afa096173", "Url": "https://api.github.com/repos/dotCMS/plugin-com.dotcms.dotsaml", "Date": "2017-10-06T17:10:34Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((mage.game.permanent.PermanentCard) (source)).isTransformed()) && ((source.getSecondCardFace()) != null)) { sourceObj = ((mage.game.permanent.PermanentCard) (source)).getSecondCardFace(); }else { sourceObj = ((mage.game.permanent.PermanentCard) (source)).getCard(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5476/buggy-version/Mage.src.main.java.mage.util.functions.CopyTokenFunction.java", "BodyUseAPI": ["mage.cards.Card.getSecondCardFace()", "mage.cards.Card.getCard()"], "Fixed commit": "46566361e7010726f47a396beff49685ce16cdec", "Url": "https://api.github.com/repos/drmDev/mage", "Date": "2016-08-12T13:42:50Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((Slocale != null) && (!(Slocale.isEmpty()))) { locale = java.lang.Integer.parseInt(Slocale); }else { prop.setProperty(\"locale\", \"100000\"); Slocale = prop.getProperty(\"locale\"); locale = java.lang.Integer.parseInt(Slocale); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/700/buggy-version/src.main.java.br.com.soapboxrace.jlauncher.util.ConfigDao.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "d051e4ef672ef654cb63b3cc6cf94f3cf4f97de4", "Url": "https://api.github.com/repos/xVanquishx/SoapBox-World-Undercover-Launcher", "Date": "2017-07-07T18:21:12Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index != (-1)) { java.lang.String buildNo = fullVersionString.substring((index + 1)); if (((buildNo.length()) > 19) && ((buildNo.charAt(8)) == '-')) { return fullVersionString.substring(0, index); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1468/buggy-version/visualvm.application.src.com.sun.tools.visualvm.application.type.NetBeansBasedApplicationType.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int)"], "Fixed commit": "62dab6e804d129c8e59420e91d373d79774b4bf0", "Url": "https://api.github.com/repos/oracle/visualvm", "Date": "2016-09-14T18:16:37Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.media.CamcorderProfile.hasProfile(cameraId, CamcorderProfile.QUALITY_LOW)) { profile = android.media.CamcorderProfile.get(cameraId, CamcorderProfile.QUALITY_LOW); }else { profile = android.media.CamcorderProfile.get(cameraId, CamcorderProfile.QUALITY_HIGH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5753/buggy-version/src.android.VideoOverlay.java", "BodyUseAPI": ["android.media.CamcorderProfile.get(int,CamcorderProfile.QUALITY_HIGH)", "android.media.CamcorderProfile.get(int,CamcorderProfile.QUALITY_LOW)"], "Fixed commit": "eb1161c6324ed2b338b6b13fd1a9fe731433ba39", "Url": "https://api.github.com/repos/dairejpwalsh/backgroundvideo", "Date": "2015-08-26T14:24:12Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sessionsDate.size()) == 0) roomsInUse = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5322/buggy-version/app.models.Room.java", "BodyUseAPI": [], "Fixed commit": "c6bba090f13f411df63db7f31205e0abb61b68c3", "Url": "https://api.github.com/repos/dan91/PlayStartApp", "Date": "2014-08-18T14:17:56Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.attackingList.isEmpty())) { current.attack(this.attackingList.get(selected)); this.attackingList = null; }else cpsc599.util.Logger.debug(\"The character swings and only hits thin air...\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6971/buggy-version/src.cpsc599.states.IntroLevelState.java", "BodyUseAPI": ["java.util.ArrayList<cpsc599.assets.Enemy>.get(int)", "cpsc599.assets.Player.attack(this.attackingList.get(selected))"], "Fixed commit": "bf49668b616ba946bc86b4f3fb710a340a19aec0", "Url": "https://api.github.com/repos/Senney/CPSC599-RPG", "Date": "2014-03-20T22:29:49Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (opt == null) { com.first.basket.common.GlideOptions.fitCenterTransform(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3304/buggy-version/app.src.main.java.com.first.basket.utils.ImageUtils.java", "BodyUseAPI": [], "Fixed commit": "ca4946fb7d5098b4ef4b34bb69dfc524e5d25098", "Url": "https://api.github.com/repos/LukaHan/Basket", "Date": "2017-10-29T13:11:26Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (add) { nWritten += len; currentWrite = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5272/buggy-version/src.main.java.fr.ens.transcriptome.eoulsan.io.ByteCountOutputStream.java", "BodyUseAPI": [], "Fixed commit": "a3470a701e072e0a8d67a29f7fc3828bbbb223c6", "Url": "https://api.github.com/repos/GenomicParisCentre/eoulsan", "Date": "2014-11-29T19:29:39Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b == null) { throw new org.apache.commons.lang.NullArgumentException(\"the array of bytes argument cannot be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5272/buggy-version/src.main.java.fr.ens.transcriptome.eoulsan.io.ByteCountOutputStream.java", "BodyUseAPI": [], "Fixed commit": "a3470a701e072e0a8d67a29f7fc3828bbbb223c6", "Url": "https://api.github.com/repos/GenomicParisCentre/eoulsan", "Date": "2014-11-29T19:29:39Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resultCode == (RESULT_OK)) && (requestCode == (com.codepath.apps.twitterApp.TimelineActivity.COMPOSE_REQUEST_CODE))) { com.codepath.apps.twitterApp.models.Tweet tweet = ((com.codepath.apps.twitterApp.models.Tweet) (getIntent().getParcelableExtra(\"Tweet\"))); tweets.add(0, tweet); tweetAdapter.notifyItemInserted(0); rvTweets.scrollToPosition(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/363/buggy-version/app.src.main.java.com.codepath.apps.twitterApp.TimelineActivity.java", "BodyUseAPI": [], "Fixed commit": "dd394c571795e054cb85793c708a0be40130e985", "Url": "https://api.github.com/repos/gnahzak/Twitter", "Date": "2017-06-28T00:29:23Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ThreadLocalRandom.nextInt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (coinFlip > 0) { randomFloat *= -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8473/buggy-version/altk.src.main.java.com.projectvalis.altk.noc.ch5.ManagedCircleGenerator.java", "BodyUseAPI": [], "Fixed commit": "655bc0d5a608d0ba31c88b01fd44b61754792b32", "Url": "https://api.github.com/repos/davidholiday/ALTk", "Date": "2016-07-17T04:03:20Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAdded())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5642/buggy-version/xabber.src.main.java.com.xabber.android.ui.fragment.ConferenceSelectFragment.java", "BodyUseAPI": [], "Fixed commit": "49bc85abfa8a2835f5b482da689f27c28788bef2", "Url": "https://api.github.com/repos/redsolution/xabber-android", "Date": "2016-01-11T06:17:05Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAdded())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5642/buggy-version/xabber.src.main.java.com.xabber.android.ui.fragment.ConferenceInfoFragment.java", "BodyUseAPI": [], "Fixed commit": "49bc85abfa8a2835f5b482da689f27c28788bef2", "Url": "https://api.github.com/repos/redsolution/xabber-android", "Date": "2016-01-11T06:17:05Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((directi.androidteam.training.chatclient.Chat.ChatBox.getContext()) != null) directi.androidteam.training.chatclient.Chat.ChatBox.recreateFragments();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5715/buggy-version/src.directi.androidteam.training.chatclient.Chat.FragmentManager.java", "BodyUseAPI": [], "Fixed commit": "f27c1355cbfd68c46b0977c281da5030b238ff71", "Url": "https://api.github.com/repos/vinayakbhavnani/android_chat_client", "Date": "2012-10-05T11:35:14Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((args.length) >= 2) && (args[1].equalsIgnoreCase(\"admin\"))) { type = CommandType.ADMIN; }else if (((args.length) >= 2) && (args[1].matches(\"[1-9]\"))) { page = java.lang.Integer.parseInt(args[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2990/buggy-version/src.main.java.com.github.ucchyocean.lc.command.HelpCommand.java", "BodyUseAPI": ["java.lang.String.matches(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "42b63d13596dd632177d77b1ae5bf9c4551d4bdb", "Url": "https://api.github.com/repos/ucchyocean/LunaChat", "Date": "2013-12-26T21:50:01Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (in == 0) querprodukt = 0; else for (int rest = in; rest > 0; rest /= 10) querprodukt *= rest % 10;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6805/buggy-version/src.Uebung5.java", "BodyUseAPI": [], "Fixed commit": "de59abd565f0ed11b3f5f3a3c10394e492b064d7", "Url": "https://api.github.com/repos/Sebb767/Prog", "Date": "2015-11-18T13:25:05Z"},
{"Line": "=>1395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useTextAreaMode) dx -= getResources().getDimensionPixelSize(R.dimen.text_area_left_and_right_padding);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1948/buggy-version/library.src.main.java.com.rengwuPATHn.materialedittext.MaterialEditText.java", "BodyUseAPI": [], "Fixed commit": "b5a943cc5623e5d9a202782fed08b50d3d8db83d", "Url": "https://api.github.com/repos/BrigadeTom/MaterialEditText", "Date": "2017-08-24T23:28:29Z"},
{"Line": "=>1390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useTextAreaMode) dx -= getResources().getDimensionPixelSize(R.dimen.text_area_left_and_right_padding);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1948/buggy-version/library.src.main.java.com.rengwuPATHn.materialedittext.MaterialEditText.java", "BodyUseAPI": [], "Fixed commit": "b5a943cc5623e5d9a202782fed08b50d3d8db83d", "Url": "https://api.github.com/repos/BrigadeTom/MaterialEditText", "Date": "2017-08-24T23:28:29Z"},
{"Line": "=>941", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((rescalingScheme) == (PartialsRescalingScheme.DYNAMIC)) || ((rescalingCount) == 0)) { if (((rescalingMessageCount) % 1000) == 0) { if ((rescalingMessageCount) > 0) { java.util.logging.Logger.getLogger(\"dr.evomodel\").info(((\"Underflow calculating likelihood (\" + (rescalingMessageCount)) + \" messages not shown).\")); }else { java.util.logging.Logger.getLogger(\"dr.evomodel\").info(\"Underflow calculating likelihood. Attempting a rescaling...\"); } } rescalingMessageCount += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7275/buggy-version/src.dr.app.beagle.evomodel.treelikelihood.BeagleTreeLikelihood.java", "BodyUseAPI": [], "Fixed commit": "04dd706cc1d363efe2c23948ac09fa00aa1dc36a", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2016-06-15T20:47:33Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.lightmare.utils.ObjectUtils.notNull(oldConfig)) { addPreResources(oldConfig.getResources()); addPreResources(oldConfig.preResources); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/197/buggy-version/src.main.java.org.lightmare.rest.RestConfig.java", "BodyUseAPI": ["org.lightmare.rest.RestConfig.addPreResources(oldConfig.getResources())", "org.lightmare.rest.RestConfig.getResources()", "org.lightmare.rest.RestConfig.addPreResources(java.util.Set<org.glassfish.jersey.server.model.Resource>)"], "Fixed commit": "10b3057e9088fcb628042657f9de593b56943204", "Url": "https://api.github.com/repos/levants/lightmare", "Date": "2013-07-24T14:50:40Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (originalKey == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2542/buggy-version/src.main.java.it.enricocandino.vigenere.Vigenere.java", "BodyUseAPI": [], "Fixed commit": "747cb720c0ee40a56c57065fbe0480470e1dd54a", "Url": "https://api.github.com/repos/enrichman/vigenere", "Date": "2016-06-20T18:53:30Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((world.getBlockState(pos.down(2))) == (this.getRoot()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7859/buggy-version/1.12.src.main.java.com.blakebr0.mysticalagradditions.blocks.BlockTier6Crop.java", "BodyUseAPI": [], "Fixed commit": "db677b927acd534f71ef3ad31cbfc65ce892d868", "Url": "https://api.github.com/repos/BlakeBr0/MysticalAgradditions", "Date": "2017-10-07T18:29:11Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getWorld().getBlockState(event.getPos())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((event.getWorld().getBlockState(event.getPos().down(2))) == (((com.blakebr0.mysticalagradditions.blocks.BlockTier6Crop) (state.getBlock())).getRoot()))) { cancel = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7859/buggy-version/1.12.src.main.java.com.blakebr0.mysticalagradditions.event.NoFertilizerForYou.java", "BodyUseAPI": [], "Fixed commit": "db677b927acd534f71ef3ad31cbfc65ce892d868", "Url": "https://api.github.com/repos/BlakeBr0/MysticalAgradditions", "Date": "2017-10-07T18:29:11Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.blakebr0.mysticalagradditions.config.ModConfig.confFertilizableCrops)) { cancel = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7859/buggy-version/1.12.src.main.java.com.blakebr0.mysticalagradditions.event.NoFertilizerForYou.java", "BodyUseAPI": [], "Fixed commit": "db677b927acd534f71ef3ad31cbfc65ce892d868", "Url": "https://api.github.com/repos/BlakeBr0/MysticalAgradditions", "Date": "2017-10-07T18:29:11Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMap) != null) { mMap.addPolyline(polyLine); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1773/buggy-version/ZPI1.src.com.pwr.zpi.SingleRunHistoryActivity.java", "BodyUseAPI": [], "Fixed commit": "90ebf44a4484ebad879ca02a1169b8a0ce62cefd", "Url": "https://api.github.com/repos/jskudlarski/ZPI-Android", "Date": "2013-12-14T11:21:13Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.reactome.web.diagram.data.interactors.model.InteractorEntity>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (entities != null) { for (org.reactome.web.diagram.data.interactors.model.InteractorEntity entity : entities.values()) { entity.getLinks().clear(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4412/buggy-version/src.main.java.org.reactome.web.diagram.data.InteractorsContent.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.reactome.web.diagram.data.interactors.model.InteractorEntity>.values()"], "Fixed commit": "9293e408d6cdbc61bfd34082d8095e2709cfb1ff", "Url": "https://api.github.com/repos/reactome-pwp/diagram", "Date": "2016-02-12T16:47:31Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (setUndoneSuccess == (DataManager.TASK_SET_TO_DONE)) { return (application.controller.CommandManager.SET_UNDONE_SUCCESS) + (cmd.getTextContent()); }else if (setUndoneSuccess == (DataManager.TASK_UNDONE)) { return (application.controller.CommandManager.SET_UNDONE_SUCCESS) + (cmd.getTextContent()); }else { return application.controller.CommandManager.WRONG_LINE_NUM; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5634/buggy-version/src.application.controller.CommandManager.java", "BodyUseAPI": [], "Fixed commit": "dd38dec5cd7717c055c86dfb8e7a78f3a287693a", "Url": "https://api.github.com/repos/cs2103aug2015-f09-3j/main", "Date": "2015-11-05T12:09:16Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.abs((((player.getLocation().getYaw()) - 90.0F) % 360.0F))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (r < 113) { dir = \"EAST\"; isMineral(eastWest(\"WEST\")); }else { if (r < 158) { dir = \"SOUTH_EAST\"; isMineral(diagonal(\"SOUTH\", \"WEST\")); }else { if (r < 203) { dir = \"SOUTH\"; isMineral(northSouth(dir)); }else { if (r < 248) { dir = \"SOUTH_WEST\"; isMineral(diagonal(\"SOUTH\", \"EAST\")); }else { if (r < 293) { dir = \"WEST\"; isMineral(eastWest(\"EAST\")); }else { if (r < 338) { dir = \"NORTH_WEST\"; isMineral(diagonal(\"NORTH\", \"EAST\")); }else { dir = \"NORTH\"; isMineral(northSouth(dir)); } } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/100/buggy-version/src.com.lostaris.bukkit.MineralScanner.MineralScannerPlayerListener.java", "BodyUseAPI": [], "Fixed commit": "1a5b46fbe7de7faa216ce3b329b4ca3a0b6d6dce", "Url": "https://api.github.com/repos/lostaris/MineralScanner", "Date": "2011-02-18T14:12:07Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) != null) { long period = 60000000000L / ((long) ((bpm) * 24)); timer.setPeriod(period, java.util.concurrent.TimeUnit.NANOSECONDS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7059/buggy-version/pd-party.src.cx.mccormick.pddroidparty.midi.MidiClock.java", "BodyUseAPI": [], "Fixed commit": "68d1a19cd7ee07f0b625bff91640802b564ddeb1", "Url": "https://api.github.com/repos/b2renger/PdDroidPublisher", "Date": "2015-07-08T10:07:41Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (exception == null) { org.eclipse.jface.dialogs.MessageDialog.open(SWT.ERROR, shell, title, message, SWT.SHEET); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4132/buggy-version/plugin_ide.ui.src-lang.melnorme.lang.ide.ui.utils.UIOperationExceptionHandler.java", "BodyUseAPI": [], "Fixed commit": "dc9736d075667631f88e11b2b9c020e7ffaf1388", "Url": "https://api.github.com/repos/GoClipse/goclipse", "Date": "2014-09-29T19:42:09Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((i % 3) == 0) && ((i % 5) == 0)) { java.lang.System.out.println(\"fizzbuzz\"); }else { java.lang.System.out.println(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5119/buggy-version/src.edu.cnm.deepdive.fizzbuzzpractice.FizzBuzz.java", "BodyUseAPI": ["java.io.PrintStream.println(int)"], "Fixed commit": "bb54f055efe26c786af8bd8a2879f0f68a730291", "Url": "https://api.github.com/repos/kpescobar/fizz-buzz-practice", "Date": "2017-09-29T14:01:13Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playerNum > 24) throw new java.lang.NumberFormatException(\"Too many players\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3426/buggy-version/src.poker.Window.java", "BodyUseAPI": [], "Fixed commit": "7c9b7a1571886fd88b14e7c381688fad4d21123b", "Url": "https://api.github.com/repos/paulsteele/texas-hold-em", "Date": "2013-11-24T01:28:27Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playerNum < 3) throw new java.lang.NumberFormatException(\"Not enough players\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3426/buggy-version/src.poker.Window.java", "BodyUseAPI": [], "Fixed commit": "7c9b7a1571886fd88b14e7c381688fad4d21123b", "Url": "https://api.github.com/repos/paulsteele/texas-hold-em", "Date": "2013-11-24T01:28:27Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getMessage().equals(\"Not enough players\")) || (e.getMessage().equals(\"Too many players\"))) message = e.getMessage();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3426/buggy-version/src.poker.Window.java", "BodyUseAPI": ["java.lang.NumberFormatException.getMessage()"], "Fixed commit": "7c9b7a1571886fd88b14e7c381688fad4d21123b", "Url": "https://api.github.com/repos/paulsteele/texas-hold-em", "Date": "2013-11-24T01:28:27Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mapActivity.getMapLayers().getContextMenuLayer().getSelectedObjectName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (dest && (selected != null)) { target = selected.replaceAll(getString(R.string.context_menu_item_destination_point), \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7129/buggy-version/OsmAnd.src.net.osmand.plus.activities.MapActivityActions.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "537af7400d85589f8c3135da90cc976872444a6b", "Url": "https://api.github.com/repos/Bars107/Osmand", "Date": "2014-11-18T10:57:49Z"},
{"Line": "=>1575", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["soot.Scene.loadClassAndSupport(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(theClass.isPhantom)) theClass.setApplicationClass();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5238/buggy-version/src.soot.Scene.java", "BodyUseAPI": ["soot.SootClass.setApplicationClass()"], "Fixed commit": "f9c064d50c70f59f10f045e97e88890beabc6715", "Url": "https://api.github.com/repos/Sable/soot", "Date": "2016-10-31T20:49:41Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (forceCW != null) { for (org.wikipediacleaner.api.check.CheckError.Progress progress : usedAlgorithms) { if (forceCW.contains(progress.algorithm)) { shouldKeep = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6469/buggy-version/WikipediaCleaner.src.org.wikipediacleaner.api.MediaWiki.java", "BodyUseAPI": ["java.util.Collection<org.wikipediacleaner.api.check.algorithm.CheckErrorAlgorithm>.contains(progress.algorithm)"], "Fixed commit": "1418958aa44b867c4537332ac2e7eb5ee592c8cf", "Url": "https://api.github.com/repos/WPCleaner/wpcleaner", "Date": "2017-08-04T16:03:52Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wikipediacleaner.api.data.Page.getContents()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(oldContents.equals(newContents))) { shouldApply = true; }else if ((forceCW != null) && (!(forceCW.isEmpty()))) { shouldApply = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6469/buggy-version/WikipediaCleaner.src.org.wikipediacleaner.api.MediaWiki.java", "BodyUseAPI": [], "Fixed commit": "1418958aa44b867c4537332ac2e7eb5ee592c8cf", "Url": "https://api.github.com/repos/WPCleaner/wpcleaner", "Date": "2017-08-04T16:03:52Z"},
{"Line": "=>698", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chkForceCW.isSelected()) { algorithms = selectedAlgorithms; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6469/buggy-version/WikipediaCleaner.src.org.wikipediacleaner.gui.swing.AutomaticFixingWindow.java", "BodyUseAPI": [], "Fixed commit": "1418958aa44b867c4537332ac2e7eb5ee592c8cf", "Url": "https://api.github.com/repos/WPCleaner/wpcleaner", "Date": "2017-08-04T16:03:52Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((selectedAlgorithms) == null) || (selectedAlgorithms.isEmpty())) { newLabel = org.wikipediacleaner.i18n.GT._(\"No errors selected\"); }else { java.util.Collections.sort(selectedAlgorithms, new org.wikipediacleaner.api.check.algorithm.CheckErrorAlgorithmComparator()); java.lang.StringBuilder msg = new java.lang.StringBuilder(); for (int i = 0; i < (selectedAlgorithms.size()); i++) { int j = i; while (((j + 1) < (selectedAlgorithms.size())) && (((selectedAlgorithms.get(j).getErrorNumber()) + 1) == (selectedAlgorithms.get((j + 1)).getErrorNumber()))) { j++; } if ((msg.length()) > 0) { msg.append(\", \"); } if (j > (i + 1)) { msg.append(selectedAlgorithms.get(i).getErrorNumber()); msg.append(\"-\"); msg.append(selectedAlgorithms.get(j).getErrorNumber()); i = j; }else { msg.append(selectedAlgorithms.get(i).getErrorNumber()); } } newLabel = (\"(\" + (msg.toString())) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6469/buggy-version/WikipediaCleaner.src.org.wikipediacleaner.gui.swing.AutomaticFixingWindow.java", "BodyUseAPI": ["java.lang.StringBuilder.append(selectedAlgorithms.get(i).getErrorNumber())", "java.util.List<org.wikipediacleaner.api.check.algorithm.CheckErrorAlgorithm>.get(int)", "selectedAlgorithms.get(j).getErrorNumber()", "java.lang.StringBuilder.append(selectedAlgorithms.get(j).getErrorNumber())", "java.lang.StringBuilder.append(selectedAlgorithms.get(i).getErrorNumber())", "selectedAlgorithms.get(i).getErrorNumber()", "java.util.List<org.wikipediacleaner.api.check.algorithm.CheckErrorAlgorithm>.size()", "java.util.List<org.wikipediacleaner.api.check.algorithm.CheckErrorAlgorithm>.get(int)", "selectedAlgorithms.get(i).getErrorNumber()", "java.util.List<org.wikipediacleaner.api.check.algorithm.CheckErrorAlgorithm>.get(int)", "selectedAlgorithms.get((j + 1)).getErrorNumber()", "java.util.Collections.sort(java.util.List<org.wikipediacleaner.api.check.algorithm.CheckErrorAlgorithm>,org.wikipediacleaner.api.check.algorithm.CheckErrorAlgorithmComparator)", "selectedAlgorithms.get(j).getErrorNumber()", "java.util.List<org.wikipediacleaner.api.check.algorithm.CheckErrorAlgorithm>.get(int)", "java.util.List<org.wikipediacleaner.api.check.algorithm.CheckErrorAlgorithm>.size()", "java.util.List<org.wikipediacleaner.api.check.algorithm.CheckErrorAlgorithm>.get(int)"], "Fixed commit": "1418958aa44b867c4537332ac2e7eb5ee592c8cf", "Url": "https://api.github.com/repos/WPCleaner/wpcleaner", "Date": "2017-08-04T16:03:52Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ship.getSize()) == 3) { eecs285.proj4.group.Location upOneLoc = new eecs285.proj4.group.Location(((location.getX()) + 1), location.getY()); eecs285.proj4.group.Location upTwoLoc = new eecs285.proj4.group.Location(((location.getX()) + 2), location.getY()); if (((!(isLocOccupied(location))) && (!(isLocOccupied(upOneLoc)))) && (!(isLocOccupied(upTwoLoc)))) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/63/buggy-version/proj4.src.eecs285.proj4.group.Board.java", "BodyUseAPI": [], "Fixed commit": "748f866899ff10021e27a83e408a99171d6d0531", "Url": "https://api.github.com/repos/yossier/Project-4-EECS-285", "Date": "2014-11-30T20:40:22Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((date.query(java.time.temporal.TemporalQueries.offset())) == null) { return org.kie.dmn.feel.runtime.functions.FEELFnResult.ofResult(java.time.LocalTime.from(date)); }else { return org.kie.dmn.feel.runtime.functions.FEELFnResult.ofResult(java.time.OffsetTime.from(date)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7463/buggy-version/kie-dmn-feel.src.main.java.org.kie.dmn.feel.runtime.functions.TimeFunction.java", "BodyUseAPI": ["org.kie.dmn.feel.runtime.functions.FEELFnResult.ofResult(java.time.OffsetTime)", "java.time.LocalTime.from(java.time.temporal.TemporalAccessor)", "org.kie.dmn.feel.runtime.functions.FEELFnResult.ofResult(java.time.LocalTime)", "java.time.OffsetTime.from(java.time.temporal.TemporalAccessor)"], "Fixed commit": "081333d6bec7cd1be08ad1baf5d8a04b234d337b", "Url": "https://api.github.com/repos/tarilabs/kie-dmn", "Date": "2017-01-17T22:28:38Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getDecoratedObject().getInstance(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (instance != null) { injector.inject(instance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5879/buggy-version/wro4j-core.src.main.java.ro.isdc.wro.model.resource.locator.factory.InjectableUriLocatorFactoryDecorator.java", "BodyUseAPI": ["ro.isdc.wro.model.group.processor.Injector.inject(ro.isdc.wro.model.resource.locator.UriLocator)"], "Fixed commit": "2919044d8365208d193f1120391f4beb0b84d1e4", "Url": "https://api.github.com/repos/alexo/wro4j", "Date": "2014-03-07T14:27:00Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((accessFile) != null) && (((accessFile.length()) - (com.orientechnologies.orient.core.storage.fs.OAbstractFile.HEADER_SIZE)) < (getFileSize()))) accessFile.setLength(((getFileSize()) + (com.orientechnologies.orient.core.storage.fs.OAbstractFile.HEADER_SIZE)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6155/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.fs.OAbstractFile.java", "BodyUseAPI": ["java.io.RandomAccessFile.setLength(long)"], "Fixed commit": "faa10698321d45240ccf55ba51e4ca8f35b2e788", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-09-29T06:20:44Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (timeZone.getID().equals(\"UTC\")) { out.write(\"pytz\\n_UTC\\n\".getBytes()); out.write(Opcodes.MARK); }else { out.write(\"pytz\\n_p\\n\".getBytes()); out.write(Opcodes.MARK); save(timeZone.getID()); save(((timeZone.getRawOffset()) / 1000)); save(((timeZone.getDSTSavings()) / 1000)); save(timeZone.getDisplayName(timeZone.observesDaylightTime(), java.util.TimeZone.SHORT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8866/buggy-version/java.src.net.razorvine.pickle.Pickler.java", "BodyUseAPI": ["net.razorvine.pickle.Pickler.save(int)", "net.razorvine.pickle.Pickler.save(java.lang.String)", "java.util.TimeZone.getDSTSavings()", "net.razorvine.pickle.Pickler.save(int)", "java.util.TimeZone.getRawOffset()", "java.util.TimeZone.getID()", "java.util.TimeZone.observesDaylightTime()", "net.razorvine.pickle.Pickler.save(java.lang.String)", "java.util.TimeZone.getDisplayName(boolean,int)"], "Fixed commit": "ac68f356aa75858b46c9cf7536bd5efd70423417", "Url": "https://api.github.com/repos/airhorns/Pyrolite", "Date": "2015-04-14T00:47:24Z"},
{"Line": "=>1837", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (clazz != null) { addClassToResult(variable, null, result, clazz, false, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5455/buggy-version/quorum.src.org.quorum.vm.implementation.QuorumVirtualMachine.java", "BodyUseAPI": ["org.quorum.vm.implementation.QuorumVirtualMachine.addClassToResult(org.quorum.symbols.VariableParameterCommonDescriptor,<nulltype>,org.quorum.vm.interfaces.CodeCompletionResult,org.quorum.symbols.ClassDescriptor,boolean,<nulltype>)"], "Fixed commit": "0d4216a209c9441cda3eb92ff6bb022e70bf8f36", "Url": "https://api.github.com/repos/rjnienaber/quorum-ci", "Date": "2013-08-29T15:23:27Z"},
{"Line": "=>1220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((split.length) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5455/buggy-version/quorum.src.org.quorum.vm.implementation.QuorumVirtualMachine.java", "BodyUseAPI": [], "Fixed commit": "0d4216a209c9441cda3eb92ff6bb022e70bf8f36", "Url": "https://api.github.com/repos/rjnienaber/quorum-ci", "Date": "2013-08-29T15:23:27Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ThreadLocal<java.lang.Integer>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (d < (io.netty.channel.aio.AioCompletionHandler.MAX_STACK_DEPTH)) { io.netty.channel.aio.AioCompletionHandler.STACK_DEPTH.set((d + 1)); try { completed0(result, channel); } finally { io.netty.channel.aio.AioCompletionHandler.STACK_DEPTH.set(d); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4712/buggy-version/transport.src.main.java.io.netty.channel.aio.AioCompletionHandler.java", "BodyUseAPI": ["java.lang.ThreadLocal<java.lang.Integer>.set(java.lang.Integer)", "java.lang.ThreadLocal<java.lang.Integer>.set(int)"], "Fixed commit": "0317baa10d271a28187f8bcd831ffbfa9ef5cc93", "Url": "https://api.github.com/repos/netty/netty", "Date": "2013-02-26T18:19:59Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ThreadLocal<java.lang.Integer>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (d < (io.netty.channel.aio.AioCompletionHandler.MAX_STACK_DEPTH)) { io.netty.channel.aio.AioCompletionHandler.STACK_DEPTH.set((d + 1)); try { failed0(exc, channel); } finally { io.netty.channel.aio.AioCompletionHandler.STACK_DEPTH.set(d); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4712/buggy-version/transport.src.main.java.io.netty.channel.aio.AioCompletionHandler.java", "BodyUseAPI": ["java.lang.ThreadLocal<java.lang.Integer>.set(java.lang.Integer)", "java.lang.ThreadLocal<java.lang.Integer>.set(int)"], "Fixed commit": "0317baa10d271a28187f8bcd831ffbfa9ef5cc93", "Url": "https://api.github.com/repos/netty/netty", "Date": "2013-02-26T18:19:59Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((details.size()) > 1) { selected = selectedEntity.getSelectedItems().iterator().next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7992/buggy-version/manager-ui.src.main.java.org.geant.sat.ui.ScheduleSurveySurveysViewer.java", "BodyUseAPI": [], "Fixed commit": "7598ccbab8a8249a65e2e3c1fbf0be65c85c20e4", "Url": "https://api.github.com/repos/GEANT/SAT-SurveyManager", "Date": "2017-05-03T11:31:58Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result instanceof com.nhb.common.data.PuNull) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6713/buggy-version/Mario.src.main.java.com.mario.gateway.rabbitmq.RabbitMQWorkerGateway.java", "BodyUseAPI": [], "Fixed commit": "178ebf6779dbd2b53b98c729e48b3db75d68d583", "Url": "https://api.github.com/repos/bachden/mario3", "Date": "2017-08-14T13:19:08Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((class1.elementClass) instanceof org.jf.dexlib.Code.Analysis.ClassPath.UnresolvedClassDef) || ((class2.elementClass) instanceof org.jf.dexlib.Code.Analysis.ClassPath.UnresolvedClassDef)) { commonElementClass = org.jf.dexlib.Code.Analysis.ClassPath.getUnresolvedObjectClassDef(); }else { commonElementClass = org.jf.dexlib.Code.Analysis.ClassPath.getCommonSuperclass(class1.elementClass, class2.elementClass); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6689/buggy-version/dexlib.src.main.java.org.jf.dexlib.Code.Analysis.ClassPath.java", "BodyUseAPI": ["org.jf.dexlib.Code.Analysis.ClassPath.getCommonSuperclass(org.jf.dexlib.Code.Analysis.ClassPath.ClassDef,org.jf.dexlib.Code.Analysis.ClassPath.ClassDef)"], "Fixed commit": "598dcde6c9e64b59ca4cf59e5d1d6d4ffe050402", "Url": "https://api.github.com/repos/kanzure/smali", "Date": "2012-10-05T03:38:18Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["xyz.algogo.bukkit.AlgogoBukkit.getAlgorithmsFolder().list()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((algorithms == null) || ((algorithms.length) < 1)) { sender.sendMessage(((org.bukkit.ChatColor.RED) + \"There is no algorithm.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/8761/buggy-version/src.xyz.algogo.bukkit.commands.AlgogoCommand.java", "BodyUseAPI": [], "Fixed commit": "13b37af397f56058e217d6867c5026fd1359e033", "Url": "https://api.github.com/repos/Skyost/Algogo", "Date": "2016-01-06T18:58:48Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.griefcraft.lwc.LWC.getInstance().getPhysicalDatabase()) != null) { com.griefcraft.model.Protection protection = com.griefcraft.lwc.LWC.getInstance().getPhysicalDatabase().loadProtection(block.getWorld().getName(), block.getX(), block.getY(), block.getZ()); if (protection != null) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5888/buggy-version/src.main.java.de.robotricker.transportpipes.container.BlockContainer.java", "BodyUseAPI": [], "Fixed commit": "3e108bd24d02341ebe033cd0f024c2f6ae9ab655", "Url": "https://api.github.com/repos/RoboTricker/Transport-Pipes", "Date": "2017-11-30T20:43:27Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (local) { states = restorer.getStates(); }else { states = new java.util.HashMap<java.lang.String, com.dedaulus.cinematty.ActivityState>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6821/buggy-version/src.com.dedaulus.cinematty.CinemattyApplication.java", "BodyUseAPI": [], "Fixed commit": "ed02edf2e0d1e16af2228419fc3efdfa988e3a18", "Url": "https://api.github.com/repos/Dedaulus/Cinematty", "Date": "2013-04-09T17:19:06Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nnz) > 0) { org.apache.sysml.runtime.instructions.gpu.context.JCudaObject.cudaFreeHelper(val, eager); org.apache.sysml.runtime.instructions.gpu.context.JCudaObject.cudaFreeHelper(rowPtr, eager); org.apache.sysml.runtime.instructions.gpu.context.JCudaObject.cudaFreeHelper(colInd, eager); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2826/buggy-version/src.main.java.org.apache.sysml.runtime.instructions.gpu.context.JCudaObject.java", "BodyUseAPI": [], "Fixed commit": "71cfad29951364ac21af442a78d653df619ecb0a", "Url": "https://api.github.com/repos/nakul02/systemml", "Date": "2017-03-08T04:09:10Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.Boolean) (state.getValue(RedstoneHelper.POWERED)))) stater = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7199/buggy-version/src.main.java.worldcontrolteam.worldcontrol.crossmod.industrialcraft2.blocks.BlockIC2ReactorMonitor.java", "BodyUseAPI": [], "Fixed commit": "fb6301a79fcf009e3289a072997a62056eeb4476", "Url": "https://api.github.com/repos/World-Control-Team/World-Control", "Date": "2017-10-20T03:19:41Z"},
{"Line": "=>3499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.beanutils.BeanUtils.getProperty(com.ut.dph.model.transactionInRecords,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((fieldValue == null) || (\"null\".equals(fieldValue))) { fieldValue = \"\"; }else if (((fieldValue.length()) == 10) && (fieldValue.contains(\"-\"))) { java.util.Date date = new java.text.SimpleDateFormat(\"yyyy-MM-dd\").parse(fieldValue); fieldValue = new java.text.SimpleDateFormat(\"MM/dd/yyyy\").format(date); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2176/buggy-version/src.main.java.com.ut.dph.controller.HealtheWebController.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.length()", "java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "b7cf0e840237c436412d755810a79af25b52a694", "Url": "https://api.github.com/repos/thenhkid/universalTranslator", "Date": "2015-07-22T01:33:23Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.valueOf(query.uniqueResult())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((tableValue == null) || (\"null\".equals(tableValue))) { tableValue = \"\"; }else if (((tableValue.length()) == 10) && (tableValue.contains(\"-\"))) { try { java.util.Date date = new java.text.SimpleDateFormat(\"yyyy-MM-dd\").parse(tableValue); tableValue = new java.text.SimpleDateFormat(\"MM/dd/yyyy\").format(date); } catch (java.text.ParseException ex) { java.util.logging.Logger.getLogger(com.ut.dph.dao.impl.transactionInDAOImpl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2176/buggy-version/src.main.java.com.ut.dph.dao.impl.transactionInDAOImpl.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.length()", "java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "b7cf0e840237c436412d755810a79af25b52a694", "Url": "https://api.github.com/repos/thenhkid/universalTranslator", "Date": "2015-07-22T01:33:23Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gestor) != null) { contacto = gestor.getContacto(getIntent().getIntExtra(pt.ipleiria.estg.dei.tutoriaisandroid.contactos.ContactDetailsActivity.POSCONTACTO, (-1))); if ((contacto) != null) { editTextID.setText(((contacto.getID()) + \"\")); editTextName.setText(contacto.getNome()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/641/buggy-version/app.src.main.java.pt.ipleiria.estg.dei.tutoriaisandroid.contactos.ContactDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "4f89c6f0bf3e25426332d9a9c09d6df565dc065e", "Url": "https://api.github.com/repos/catarinareis/Programacao2Contactos", "Date": "2017-06-09T09:26:47Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rspspin.syntax.ElementPhysicalWindow.getStepNode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (stepNode.isVariable()) step = getVariable(rangeNode.getName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6905/buggy-version/src.main.java.org.topbraid.spin.arq.ARQ2SPIN.java", "BodyUseAPI": [], "Fixed commit": "d00c78b2147defb96918a499e52ddd43b00d321a", "Url": "https://api.github.com/repos/keski/rsp-spin", "Date": "2016-11-03T10:20:19Z"},
{"Line": "=>577", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newNodes.isEmpty()) { return new java.util.LinkedList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7015/buggy-version/src.main.java.datastructure.NodeGraph.java", "BodyUseAPI": [], "Fixed commit": "df00cf64dd4e07de708cf9176a692ef7b425e6f5", "Url": "https://api.github.com/repos/ProgrammingLife2017/101010", "Date": "2017-06-07T15:55:05Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.item.ItemStack.getItem()", "com.crowsofwar.avatar.common.entity.mob.MOBS_CONFIG.getDomesticationValue(net.minecraft.item.Item)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((domesticationValue > 0) || (item instanceof net.minecraft.item.ItemFood)) { if (!(player.capabilities.isCreativeMode)) { stack.func_190918_g(1); } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2878/buggy-version/src.main.java.com.crowsofwar.avatar.common.entity.mob.EntitySkyBison.java", "BodyUseAPI": [], "Fixed commit": "bf525c047b08cc67a2f92a8e3fb9f16ee0563e8e", "Url": "https://api.github.com/repos/CrowsOfWar/AvatarMod", "Date": "2017-04-12T00:33:46Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p.y) >= height) { p.y = height - 1; }else if ((p.y) < 0) { p.y = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7047/buggy-version/src.TopDownGraphics.java", "BodyUseAPI": [], "Fixed commit": "b88fe836281ffd8845e6d17435930495918d1dad", "Url": "https://api.github.com/repos/QuinnFreedman/Smoke", "Date": "2016-01-21T23:52:32Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p.x) >= width) { p.x = width - 1; }else if ((p.x) < 0) { p.x = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7047/buggy-version/src.TopDownGraphics.java", "BodyUseAPI": [], "Fixed commit": "b88fe836281ffd8845e6d17435930495918d1dad", "Url": "https://api.github.com/repos/QuinnFreedman/Smoke", "Date": "2016-01-21T23:52:32Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (temp == null) temp = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7481/buggy-version/app.src.main.java.com.example.boba.lookapplication.DB1.java", "BodyUseAPI": [], "Fixed commit": "e7872d1a92b4a18ce9b2a4a1fac0b3bd83d184c9", "Url": "https://api.github.com/repos/SorokinV/LookApplication", "Date": "2015-07-08T23:03:23Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (colOrder != null) { colOrder += \",\"; submittedColumnsOrder = java.util.Arrays.asList(colOrder.split(\",\")); if (submittedColumnsOrder != null) { table.setColumnsOrder(submittedColumnsOrder); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3925/buggy-version/openFaces.source.org.openfaces.renderkit.table.ColumnResizingRenderer.java", "BodyUseAPI": [], "Fixed commit": "948b8ca1e2b24b702340f0cebf01f0f3b305161a", "Url": "https://api.github.com/repos/TeamDev-Ltd/OpenFaces", "Date": "2012-09-11T12:10:29Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ni.hasNext()) { curveId = ni.next().asLiteral().toString(); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/2938/buggy-version/webofneeds.won-cryptography.src.main.java.won.cryptography.rdfsign.WonKeysExtractor.java", "BodyUseAPI": ["ni.next().asLiteral().toString()", "ni.next().asLiteral()", "won.cryptography.rdfsign.NodeIterator.next()"], "Fixed commit": "e1bf3d59279340374af1d812bacca04a454674d6", "Url": "https://api.github.com/repos/researchstudio-sat/webofneeds", "Date": "2015-04-01T13:09:53Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bParam.isAssignableFrom(aParam)) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/67/buggy-version/asm.hu.mentlerd.hybrid.asm.OverloadResolver.java", "BodyUseAPI": [], "Fixed commit": "004b13c69f9f1628b70c69c5b883802d8a4b617f", "Url": "https://api.github.com/repos/mentlerd/HybridVM", "Date": "2013-07-30T10:41:21Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.reflect.Method>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size > 1) { count += size + 1; }else { count++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/67/buggy-version/asm.hu.mentlerd.hybrid.asm.ClassAccessFactory.java", "BodyUseAPI": [], "Fixed commit": "004b13c69f9f1628b70c69c5b883802d8a4b617f", "Url": "https://api.github.com/repos/mentlerd/HybridVM", "Date": "2013-07-30T10:41:21Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (collectionData == null) { throw new java.lang.RuntimeException(messages.getMessage(\"Collection.notValid\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7029/buggy-version/src.main.java.de.htw.sdf.photoplatform.webservice.controller.CollectionController.java", "BodyUseAPI": [], "Fixed commit": "d0fa8b877a95c4a999a18b2db6197d1d1ebd3ab8", "Url": "https://api.github.com/repos/VincSch/Photoplatform_Angular_Spring", "Date": "2015-01-12T21:14:55Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(output.equals(\"\"))) { java.lang.System.out.println(output); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6819/buggy-version/week8_hw.src.TextComposition.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "90ac8ff4b45f38bb0d731668dabcf4d71d9a0331", "Url": "https://api.github.com/repos/yuan3675/SED2017FALL", "Date": "2017-11-13T13:25:04Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (agent instanceof io.github.agentsoz.bushfire.jill.agents.BasicResident) { residents[(index++)] = agent; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3971/buggy-version/examples.bushfire.src.main.java.io.github.agentsoz.bushfire.BdiConnector.java", "BodyUseAPI": [], "Fixed commit": "6e8e46c99067af4a482e71e91dca6518b0742d6f", "Url": "https://api.github.com/repos/agentsoz/bdi-abm-integration", "Date": "2016-01-29T01:30:55Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (labelRendering)) { this.baseContainer.removeChild(this.label.asSvgElement()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4629/buggy-version/biomixer.src.org.thechiselgroup.biomixer.client.visualization_component.graph.rendering.implementation.svg.arcs.StraightLineRenderedSvgArc.java", "BodyUseAPI": [], "Fixed commit": "8d67d806d569977d04a7f1d7142899f754990fc5", "Url": "https://api.github.com/repos/thechiselgroup/biomixer", "Date": "2013-02-19T23:19:09Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entity.getContent()) != null) { return new org.ektorp.http.StdHttpResponse.ConnectionReleasingInputStream(entity.getContent()); }else { throw new java.io.IOException(\"Attempting to read from null input stream\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3764/buggy-version/org.ektorp.src.main.java.org.ektorp.http.StdHttpResponse.java", "BodyUseAPI": ["org.apache.http.HttpEntity.getContent()"], "Fixed commit": "76adc4663c03f94fcfd3092833b47ca74026bbd7", "Url": "https://api.github.com/repos/pimterry/Ektorp", "Date": "2013-09-04T14:03:01Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((application.Portal.bluePortal) != null) { if (((m.getColor()) != (MissileColor.Blue)) && ((application.Portal.bluePortal.wall) == (wall))) { application.Portal.bluePortal.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5241/buggy-version/final.src.application.Portal.java", "BodyUseAPI": [], "Fixed commit": "11e02c51d09f585ad28fe0f3a2c7890f14d5723b", "Url": "https://api.github.com/repos/anonymvs/Angol-karakterek", "Date": "2016-05-15T07:19:57Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((application.Portal.redPortal) != null) { if (((m.getColor()) != (MissileColor.Red)) && ((application.Portal.redPortal.wall) == (wall))) { application.Portal.redPortal.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5241/buggy-version/final.src.application.Portal.java", "BodyUseAPI": [], "Fixed commit": "11e02c51d09f585ad28fe0f3a2c7890f14d5723b", "Url": "https://api.github.com/repos/anonymvs/Angol-karakterek", "Date": "2016-05-15T07:19:57Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((application.Portal.yellowPortal) != null) { if (((m.getColor()) != (MissileColor.Yellow)) && ((application.Portal.yellowPortal.wall) == (wall))) { application.Portal.yellowPortal.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5241/buggy-version/final.src.application.Portal.java", "BodyUseAPI": [], "Fixed commit": "11e02c51d09f585ad28fe0f3a2c7890f14d5723b", "Url": "https://api.github.com/repos/anonymvs/Angol-karakterek", "Date": "2016-05-15T07:19:57Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((application.Portal.greenPortal) != null) { if (((m.getColor()) != (MissileColor.Green)) && ((application.Portal.greenPortal.wall) == (wall))) { application.Portal.greenPortal.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5241/buggy-version/final.src.application.Portal.java", "BodyUseAPI": [], "Fixed commit": "11e02c51d09f585ad28fe0f3a2c7890f14d5723b", "Url": "https://api.github.com/repos/anonymvs/Angol-karakterek", "Date": "2016-05-15T07:19:57Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<loop.Context>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((context.thisFunction.children().get((i - 1))) instanceof loop.Assignment)) methodVisitor.visitInsn(loop.POP);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1428/buggy-version/src.loop.AsmCodeEmitter.java", "BodyUseAPI": [], "Fixed commit": "f67c7123f25d9f395ba31d6326d1814f4aef4352", "Url": "https://api.github.com/repos/yohanbeschi/loop", "Date": "2012-08-20T07:02:24Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cakephp.netbeans.CakePhpFrameworkProvider.getCakePhpDirectory(pm).getFileObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fo == null) { descriptor = new org.openide.NotifyDescriptor.Message((installPath + \" dosen't exist.\"), org.openide.NotifyDescriptor.ERROR_MESSAGE); org.openide.DialogDisplayer.getDefault().notifyLater(descriptor); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/4384/buggy-version/src.org.cakephp.netbeans.ui.wizards.InstallPluginsWizardAction.java", "BodyUseAPI": [], "Fixed commit": "025cd5e8280e56c44717c403273130079b9cc67a", "Url": "https://api.github.com/repos/junichi11/cakephp-netbeans", "Date": "2012-04-02T10:53:57Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (reader != null) { try { reader.close(); } catch (java.io.IOException e) { android.util.Log.d(com.navercorp.utilset.system.RootChecker.TAG, \"Error occured while closing input stream\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/3218/buggy-version/UtilSet.src.com.navercorp.utilset.system.RootChecker.java", "BodyUseAPI": ["java.io.BufferedReader.close()"], "Fixed commit": "c74e1cbd1d692770755da26cbc92a55ca18c04ff", "Url": "https://api.github.com/repos/nhnopensource/android-utilset", "Date": "2014-02-15T08:24:23Z"},
{"Line": "=>5908", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.codename1.impl.android.AndroidImplementation.checkForPermission(Manifest.permission.CAMERA, \"This is required to take a picture\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/6668/buggy-version/Ports.Android.src.com.codename1.impl.android.AndroidImplementation.java", "BodyUseAPI": [], "Fixed commit": "a1b5bad4da85886cfc926cd583fe830e58bf59fd", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2017-08-10T13:25:03Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(queryComplete)) { if (Intent.ACTION_SEARCH.equals(intent.getAction())) { java.lang.String searchString = intent.getStringExtra(SearchManager.QUERY); setTitle(searchString); createQueryRequest(searchString); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/466/buggy-version/app.src.main.java.com.uwics.uwidiscover.activities.miscactivities.SearchableActivity.java", "BodyUseAPI": [], "Fixed commit": "6479af2504553b8f03363b5894deb703da207aaa", "Url": "https://api.github.com/repos/JavonDavis/UWI-Research-Days-Android", "Date": "2016-02-14T08:24:14Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jtrfp.trcl.beh.AutoFiring.interceptOf(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (virtualPlayerPos == null) virtualPlayerPos = new org.apache.commons.math3.geometry.euclidean.threed.Vector3D(playerPos);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/5575/buggy-version/src.main.java.org.jtrfp.trcl.beh.AutoFiring.java", "BodyUseAPI": [], "Fixed commit": "9bd9fb7dda665d3f38dca4950ed71226c3799024", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2014-02-16T11:29:20Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shoes.size()) == 0) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/1461/buggy-version/utilities.ShoppingCart.java", "BodyUseAPI": [], "Fixed commit": "93194a3b10faebb0f88a1d2a334a622ead523f36", "Url": "https://api.github.com/repos/gnkyte/cs137-project3", "Date": "2016-06-01T22:28:46Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(name)) { return email; }else { return name; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V122/7591/buggy-version/src.calendar.daydream.data.CalendarAttendee.java", "BodyUseAPI": [], "Fixed commit": "ad98e5ca326add46c20a98e6787cff92b8ef8960", "Url": "https://api.github.com/repos/o-sam-o/CalendarDaydream", "Date": "2014-02-24T00:10:10Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((replace != null) && (biomeID == (java.lang.Integer.MIN_VALUE))) && (dimensionID == (java.lang.Integer.MIN_VALUE))) { generator = new terrails.terracore.world.generator.WorldGenCustomMinable(ore, minVeinSize, maxVeinSize, replace); }else if (((replace == null) && (biomeID == (java.lang.Integer.MIN_VALUE))) && (dimensionID == (java.lang.Integer.MIN_VALUE))) { switch (world.provider.getDimension()) { case -1 : generator = new terrails.terracore.world.generator.WorldGenCustomMinable(ore, minVeinSize, maxVeinSize, net.minecraft.init.Blocks.NETHERRACK); break; case 1 : generator = new terrails.terracore.world.generator.WorldGenCustomMinable(ore, minVeinSize, maxVeinSize, net.minecraft.init.Blocks.END_STONE); break; default : generator = new terrails.terracore.world.generator.WorldGenCustomMinable(ore, minVeinSize, maxVeinSize, net.minecraft.init.Blocks.STONE); break; } }else if (((replace == null) && (biomeID != (java.lang.Integer.MIN_VALUE))) && (dimensionID == (java.lang.Integer.MIN_VALUE))) { if ((world.getBiome(pos)) == (net.minecraft.world.biome.Biome.getBiome(biomeID))) switch (world.provider.getDimension()) { case -1 : generator = new terrails.terracore.world.generator.WorldGenCustomMinable(ore, minVeinSize, maxVeinSize, net.minecraft.init.Blocks.NETHERRACK); break; case 1 : generator = new terrails.terracore.world.generator.WorldGenCustomMinable(ore, minVeinSize, maxVeinSize, net.minecraft.init.Blocks.END_STONE); break; default : generator = new terrails.terracore.world.generator.WorldGenCustomMinable(ore, minVeinSize, maxVeinSize, net.minecraft.init.Blocks.STONE); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1580/buggy-version/src.main.java.terrails.orecontroller.api.CustomOreGenerator.java", "BodyUseAPI": ["net.minecraft.world.biome.Biome.getBiome(int)"], "Fixed commit": "8634795b934b817b27949a375d6b99923b598d82", "Url": "https://api.github.com/repos/Terrails/OreController", "Date": "2017-11-03T14:28:09Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (i != null) { controller.GUIController.removeFieldOwner(i.getId()); i.setOwner(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7620/buggy-version/src.controller.GameController.java", "BodyUseAPI": ["controller.GUIController.removeFieldOwner(i.getId())", "controller.Ownable.setOwner(<nulltype>)", "controller.Ownable.getId()"], "Fixed commit": "1b977fff506441197b82535d423f6f231f47bead", "Url": "https://api.github.com/repos/freyahelstrup/17_final", "Date": "2017-01-06T10:07:57Z"},
{"Line": "=>3653", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (listener != null) { listener.nodeMoved(oldNodeId, newNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2209/buggy-version/src.org.exist.xquery.XQueryContext.java", "BodyUseAPI": ["org.exist.storage.UpdateListener.nodeMoved(org.exist.numbering.NodeId,org.exist.dom.persistent.NodeHandle)"], "Fixed commit": "c499b3079e4c4cdf8d4536168304ffa11eaf2e16", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2015-12-08T13:22:12Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((splitted.length) != 2) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1597/buggy-version/fsdevtools-cli.src.main.java.com.espirit.moddev.cli.api.parsing.parser.UidIdentifierParser.java", "BodyUseAPI": [], "Fixed commit": "bc1e5cb77d9fc626c4690cba0aab8c0889b5cfa5", "Url": "https://api.github.com/repos/e-Spirit/FSDevTools", "Date": "2017-02-15T08:11:25Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((splitted.length) != 2) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1597/buggy-version/fsdevtools-cli.src.main.java.com.espirit.moddev.cli.api.parsing.parser.RootNodeIdentifierParser.java", "BodyUseAPI": [], "Fixed commit": "bc1e5cb77d9fc626c4690cba0aab8c0889b5cfa5", "Url": "https://api.github.com/repos/e-Spirit/FSDevTools", "Date": "2017-02-15T08:11:25Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(winner.isNull())) ultPoints = 2 * (data.GameData.getCurrentGame().weeksLeft());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6737/buggy-version/src.data.User.java", "BodyUseAPI": [], "Fixed commit": "75f5b7ac047238df31c5e548a5cf9e19a86e9220", "Url": "https://api.github.com/repos/CS2212-2012-G2/SurvivorPool", "Date": "2012-03-31T00:44:30Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stopped) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3211/buggy-version/SWP2015.src.webot.logic.LogicExecutor.java", "BodyUseAPI": [], "Fixed commit": "465fe28fde5648d6cba1e47570e93c008a051248", "Url": "https://api.github.com/repos/135Shadowsoul/SWP2015", "Date": "2015-07-07T11:33:45Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.telephony.TelephonyManager.getCellLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (gsmCellLocation == null) { values[edu.nd.nPATH.cimonlite.CellLocationService.CELL_CID] = -1; values[edu.nd.nPATH.cimonlite.CellLocationService.CELL_LAC] = -1; }else { values[edu.nd.nPATH.cimonlite.CellLocationService.CELL_CID] = (gsmCellLocation.getCid()) & 65535; values[edu.nd.nPATH.cimonlite.CellLocationService.CELL_LAC] = (gsmCellLocation.getLac()) & 65535; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/318/buggy-version/app.src.main.java.edu.nd.nPATH.cimonlite.CellLocationService.java", "BodyUseAPI": ["android.telephony.gsm.GsmCellLocation.getLac()", "android.telephony.gsm.GsmCellLocation.getCid()"], "Fixed commit": "568947128c1a8204297b3ed63017e3ced960e60c", "Url": "https://api.github.com/repos/ningPATH/NDroidAdminLite", "Date": "2016-02-03T16:21:23Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.telephony.TelephonyManager.getCellLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (cdmaCellLocation == null) { values[edu.nd.nPATH.cimonlite.CellLocationService.CELL_CID] = -1; values[edu.nd.nPATH.cimonlite.CellLocationService.CELL_LAC] = -1; }else { values[edu.nd.nPATH.cimonlite.CellLocationService.CELL_CID] = cdmaCellLocation.getBaseStationId(); values[edu.nd.nPATH.cimonlite.CellLocationService.CELL_LAC] = cdmaCellLocation.getNetworkId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/318/buggy-version/app.src.main.java.edu.nd.nPATH.cimonlite.CellLocationService.java", "BodyUseAPI": ["android.telephony.cdma.CdmaCellLocation.getNetworkId()", "android.telephony.cdma.CdmaCellLocation.getBaseStationId()"], "Fixed commit": "568947128c1a8204297b3ed63017e3ced960e60c", "Url": "https://api.github.com/repos/ningPATH/NDroidAdminLite", "Date": "2016-02-03T16:21:23Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mCustomerAddNewPanel.checkRequiedBillingAddress())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1794/buggy-version/AppPOS.src.main.java.com.magestore.app.pos.panel.CheckoutListPanel.java", "BodyUseAPI": [], "Fixed commit": "aae4b29d827ef92ce18669c4b34774c8abc13a33", "Url": "https://api.github.com/repos/miketrueplus/MagestorePOSAndroid", "Date": "2017-03-23T04:08:27Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ErrorCode.INVOICE_INVALID_STATUS.getCode()) != (e.getCode())) { org.killbill.billing.invoice.InvoiceListener.log.error(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7468/buggy-version/invoice.src.main.java.org.killbill.billing.invoice.InvoiceListener.java", "BodyUseAPI": ["org.slf4j.Logger.error(e.getMessage())", "org.killbill.billing.invoice.api.InvoiceApiException.getMessage()"], "Fixed commit": "452d728325fbe9c3576b2e78772fdc81fe4807e9", "Url": "https://api.github.com/repos/killbill/killbill", "Date": "2017-07-28T18:23:15Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (requested != expectedCash) { nextCellResult = ((next) != null) && (next.withdraw((requested - expectedCash))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6014/buggy-version/L6.2.2.src.main.java.ru.otus.l62.atm.Cell.java", "BodyUseAPI": ["ru.otus.l62.atm.Cell.withdraw(int)"], "Fixed commit": "18e169aa3a45a1cb32388a2eba68f3c543c28d91", "Url": "https://api.github.com/repos/vitaly-chibrikov/otus_java_2017_04", "Date": "2017-05-20T06:54:56Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextCellResult) { count = (count) - expectedCount; return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6014/buggy-version/L6.2.2.src.main.java.ru.otus.l62.atm.Cell.java", "BodyUseAPI": [], "Fixed commit": "18e169aa3a45a1cb32388a2eba68f3c543c28d91", "Url": "https://api.github.com/repos/vitaly-chibrikov/otus_java_2017_04", "Date": "2017-05-20T06:54:56Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (contentError != null) { throw new java.lang.RuntimeException(((((\"The server command (\" + command) + \") failed with content (\") + contentError) + \").\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8373/buggy-version/tomcat-managed-6.src.main.java.org.jboss.arquillian.container.tomcat.managed_6.TomcatManager.java", "BodyUseAPI": [], "Fixed commit": "3a56d7ee343edaacd8605356b85cf52c7165119b", "Url": "https://api.github.com/repos/ge0ffrey/arquillian-container-tomcat", "Date": "2011-08-31T13:25:35Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((line != null) && (!(line.startsWith(\"OK -\")))) { contentError = line; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8373/buggy-version/tomcat-managed-6.src.main.java.org.jboss.arquillian.container.tomcat.managed_6.TomcatManager.java", "BodyUseAPI": [], "Fixed commit": "3a56d7ee343edaacd8605356b85cf52c7165119b", "Url": "https://api.github.com/repos/ge0ffrey/arquillian-container-tomcat", "Date": "2011-08-31T13:25:35Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.fs.FileSystem.get(org.apache.hadoop.conf.Configuration)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (fs.exists(getOutputPath(\"U\"))) { succeeded = fs.delete(getOutputPath(\"U\"), true); if (!succeeded) { throw new java.lang.IllegalStateException(\"cleanup old U data failed!\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7506/buggy-version/core.src.main.java.org.apache.mahout.cf.taste.hadoop.als.BlockParallelALSFactorizationJob.java", "BodyUseAPI": ["org.apache.hadoop.fs.FileSystem.delete(getOutputPath(\"U\"),boolean)"], "Fixed commit": "2ccbb8fab063e0706ee8574a7c983bb9ac4c8340", "Url": "https://api.github.com/repos/canojim/mahout", "Date": "2014-10-23T02:25:57Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.fs.FileSystem.get(org.apache.hadoop.conf.Configuration)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (fs.exists(getOutputPath(\"M\"))) { succeeded = fs.delete(getOutputPath(\"M\"), true); if (!succeeded) { throw new java.lang.IllegalStateException(\"cleanup old M data failed!\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7506/buggy-version/core.src.main.java.org.apache.mahout.cf.taste.hadoop.als.BlockParallelALSFactorizationJob.java", "BodyUseAPI": ["org.apache.hadoop.fs.FileSystem.delete(getOutputPath(\"M\"),boolean)"], "Fixed commit": "2ccbb8fab063e0706ee8574a7c983bb9ac4c8340", "Url": "https://api.github.com/repos/canojim/mahout", "Date": "2014-10-23T02:25:57Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((srcFiles.isEmpty()) && (resFiles.isEmpty())) { throw new com.redhat.ceylon.common.tool.ToolUsageError(com.redhat.ceylon.common.tools.CeylonToolMessages.msg(\"error.no.files\", moduleOrFile)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5439/buggy-version/src.com.redhat.ceylon.common.tools.SourceArgumentsResolver.java", "BodyUseAPI": [], "Fixed commit": "f213fb0563fb9fc32d0d2070955d424d9350ca75", "Url": "https://api.github.com/repos/ceylon/ceylon-common", "Date": "2015-02-24T00:03:40Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.yy.httpproxy.thirdparty.ProviderFactory.getProvider(context)) instanceof com.yy.httpproxy.thirdparty.UmengProvider) { if (com.yy.httpproxy.thirdparty.UmengProvider.available(context)) { com.yy.httpproxy.thirdparty.UmengProvider.register(context); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1094/buggy-version/android-push-sdk.src.main.java.com.yy.httpproxy.ProxyClient.java", "BodyUseAPI": ["com.yy.httpproxy.thirdparty.UmengProvider.available(android.content.Context)", "com.yy.httpproxy.thirdparty.UmengProvider.register(android.content.Context)"], "Fixed commit": "7602df5f3ec1c5cd4409356c69dc562d907b29c5", "Url": "https://api.github.com/repos/xuduo/socket.io-push-android", "Date": "2017-05-31T09:02:13Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.data.graph.neo4j.rest.support.RestGraphDatabase.index()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index.existsForRelationships(indexName)) return ((org.neo4j.graphdb.index.Index<T>) (index.forRelationships(indexName)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7723/buggy-version/spring-data-neo4j-rest.src.main.java.org.springframework.data.graph.neo4j.rest.support.RestGraphDatabase.java", "BodyUseAPI": ["org.springframework.data.graph.neo4j.rest.support.index.RestIndexManager.forRelationships(java.lang.String)"], "Fixed commit": "00977df39b011f86bc3ec20e3a3018c138f46037", "Url": "https://api.github.com/repos/spring-projects/spring-data-graph", "Date": "2011-04-23T04:01:43Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.springframework.data.graph.neo4j.rest.support.Node.class.isAssignableFrom(type)) return ((org.neo4j.graphdb.index.Index<T>) (index().forNodes(indexName)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7723/buggy-version/spring-data-neo4j-rest.src.main.java.org.springframework.data.graph.neo4j.rest.support.RestGraphDatabase.java", "BodyUseAPI": [], "Fixed commit": "00977df39b011f86bc3ec20e3a3018c138f46037", "Url": "https://api.github.com/repos/spring-projects/spring-data-graph", "Date": "2011-04-23T04:01:43Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.data.graph.neo4j.rest.support.RestGraphDatabase.index()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index.existsForNodes(indexName)) return ((org.neo4j.graphdb.index.Index<T>) (index.forNodes(indexName)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7723/buggy-version/spring-data-neo4j-rest.src.main.java.org.springframework.data.graph.neo4j.rest.support.RestGraphDatabase.java", "BodyUseAPI": ["org.springframework.data.graph.neo4j.rest.support.index.RestIndexManager.forNodes(java.lang.String)"], "Fixed commit": "00977df39b011f86bc3ec20e3a3018c138f46037", "Url": "https://api.github.com/repos/spring-projects/spring-data-graph", "Date": "2011-04-23T04:01:43Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((memStoreLAB) != null) { memStoreLAB.decScannerCount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1388/buggy-version/hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.CellSetMgr.java", "BodyUseAPI": [], "Fixed commit": "40e50037378beca28b206d1e6d10ddcf115bcd35", "Url": "https://api.github.com/repos/Eshcar/hbase", "Date": "2015-05-04T13:01:04Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((memStoreLAB) != null) { memStoreLAB.incScannerCount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1388/buggy-version/hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.CellSetMgr.java", "BodyUseAPI": [], "Fixed commit": "40e50037378beca28b206d1e6d10ddcf115bcd35", "Url": "https://api.github.com/repos/Eshcar/hbase", "Date": "2015-05-04T13:01:04Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (project == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/933/buggy-version/plugins.eu.cloudscaleproject.env.common.src.eu.cloudscaleproject.env.common.explorer.ExplorerProjectPaths.java", "BodyUseAPI": [], "Fixed commit": "c77e3e34c38a647b95ab8ebc38395a9f668ecf67", "Url": "https://api.github.com/repos/CloudScale-Project/Environment", "Date": "2016-02-11T16:31:22Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.cloudscaleproject.env.common.CloudscaleContext.getActiveContext().get(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (pp != null) { project = pp.getProject(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/933/buggy-version/plugins.eu.cloudscaleproject.env.common.src.eu.cloudscaleproject.env.common.explorer.ExplorerProjectPaths.java", "BodyUseAPI": ["eu.cloudscaleproject.env.common.interfaces.IProjectProvider.getProject()"], "Fixed commit": "c77e3e34c38a647b95ab8ebc38395a9f668ecf67", "Url": "https://api.github.com/repos/CloudScale-Project/Environment", "Date": "2016-02-11T16:31:22Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(noraui.utils.Context.getProxy().isEmpty())) { org.openqa.selenium.Proxy proxy = new org.openqa.selenium.Proxy(); proxy.setHttpProxy(noraui.utils.Context.getProxy()); proxy.setSslProxy(noraui.utils.Context.getProxy()); proxy.setNoProxy(noraui.utils.Context.getProxy()); capabilities.setCapability(CapabilityType.PROXY, proxy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/689/buggy-version/src.main.java.noraui.browser.DriverFactory.java", "BodyUseAPI": [], "Fixed commit": "182a591bc72307b6783445b3bae0a9dbdf413172", "Url": "https://api.github.com/repos/NoraUi/NoraUi", "Date": "2017-06-30T22:18:09Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currentGrid.getCell(row, col).getNumber()) == (Grid.EMPTY)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1955/buggy-version/Model.SudokuModel.java", "BodyUseAPI": [], "Fixed commit": "747e99c7e357a343b5ec6bcbf9e313db0154170e", "Url": "https://api.github.com/repos/benrki/COMP2911Project", "Date": "2013-05-23T15:43:17Z"},
{"Line": "=>820", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.hadoop.util.Shell.MAC) { java.lang.System.setProperty(\"jdk.lang.Process.launchMechanism\", \"POSIX_SPAWN\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7213/buggy-version/hadoop-common-project.hadoop-common.src.main.java.org.apache.hadoop.util.Shell.java", "BodyUseAPI": [], "Fixed commit": "b37c41fd6ec704babf37325530e7cb9babf1ac0c", "Url": "https://api.github.com/repos/aw-was-here/hadoop", "Date": "2015-10-21T15:00:26Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (val.contains(\",\")) { val = val.replace(\",\", \".\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/900/buggy-version/kendzi3d-plugin.src.main.java.kendzi.josm.kendzi3d.jogl.model.shape.SphereIco.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "0aaeca8d8667c219c5b46e12efc74bd836013ed6", "Url": "https://api.github.com/repos/andreimaneasa/kendzi3d", "Date": "2015-04-22T07:42:54Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (massage.toLowerCase().contains(\"logout\")) { sOutput.writeObject(\"2:LOGOUT\"); }else if (massage.toLowerCase().contains(\"whoisin\")) { sOutput.writeObject(\"0:WHOISIN\"); }else { sOutput.writeObject((\"1:\" + (massage))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5459/buggy-version/AndroidApp.app-project.MiniChat.app.src.main.java.com.moore.joshua.minichat.MainActivity.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.toLowerCase()"], "Fixed commit": "607f0c2b05084615b57c86ac0eaa908335e9b680", "Url": "https://api.github.com/repos/supamonkey2000/chat-program", "Date": "2017-07-19T15:59:42Z"},
{"Line": "=>1507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.media.RingtoneManager.getRingtone(android.content.Context,android.net.Uri)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (ringTone != null) { title = ringTone.getTitle(mContext); if (title != null) { mRingtoneTitleCache.putString(uri.toString(), title); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5468/buggy-version/src.com.android.deskclock.AlarmClockFragment.java", "BodyUseAPI": ["android.media.Ringtone.getTitle(android.content.Context)"], "Fixed commit": "3797d106a7916dec83a29bdf73f993312c03190b", "Url": "https://api.github.com/repos/Triangles/android_packages_apps_DeskClock", "Date": "2014-02-23T01:29:00Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bottom) == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3400/buggy-version/src.me.itsatacoshop247.TreeAssist.trees.VanillaOneSevenTree.java", "BodyUseAPI": [], "Fixed commit": "71cf8b90066a4b804f2b0f54ebf041faa0158d0f", "Url": "https://api.github.com/repos/itsatacoshop247/TreeAssist", "Date": "2014-01-27T00:50:11Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrofit.RetrofitError.getResponse()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (response == null) { return new de.msal.muzei.nationalgeographic.RetryException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8146/buggy-version/muzei-nationalgeographic.src.java.de.msal.muzei.nationalgeographic.NationalGeographicArtSource.java", "BodyUseAPI": [], "Fixed commit": "a59853cee63b0eb440d3a7483f828bace0f59ce4", "Url": "https://api.github.com/repos/msal/muzei-nationalgeographic", "Date": "2014-03-01T14:28:02Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Objects.isNull(values)) { return cb.isNotNull(root.get(property)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8971/buggy-version/src.main.java.com.github.wenhao.jpa.specification.NotEqualSpecification.java", "BodyUseAPI": [], "Fixed commit": "b06f9b69fcfe8457b5bcb5c892e9f60404f42ccc", "Url": "https://api.github.com/repos/wenhao/jpa-spec", "Date": "2016-10-19T13:21:10Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Objects.isNull(values)) { return cb.isNull(root.get(property)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8971/buggy-version/src.main.java.com.github.wenhao.jpa.specification.EqualSpecification.java", "BodyUseAPI": [], "Fixed commit": "b06f9b69fcfe8457b5bcb5c892e9f60404f42ccc", "Url": "https://api.github.com/repos/wenhao/jpa-spec", "Date": "2016-10-19T13:21:10Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (path != null) { if (java.nio.file.Files.exists(path)) { currentDir = path.toAbsolutePath().toString(); }else { path = java.nio.file.Paths.get(newPath); if (java.nio.file.Files.exists(path)) { currentDir = path.toAbsolutePath().toString(); }else { org.ts_labs.example.ConsolePrinter.printError(Localization.Messages.PATH_ERROR); return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7837/buggy-version/src.main.java.org.ts_labs.example.FileSystemNavigator.java", "BodyUseAPI": ["java.nio.file.Path.toString()", "java.nio.file.Files.exists(java.nio.file.Path)", "java.nio.file.Path.toAbsolutePath()"], "Fixed commit": "5001cbf15e62d4fca5e0bea943657f3f72c323fd", "Url": "https://api.github.com/repos/nanozond/fsn", "Date": "2015-01-31T14:25:56Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.function.Function<C, org.fxmisc.undo.impl.BubbledResult<C>>.apply(C)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((result.getBuried()) == null) { all.remove(change); return change; }else { int index = all.indexOf(change); all.set(index, result.getBuried()); return result.getBubbled(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5817/buggy-version/undofx.src.main.java.org.fxmisc.undo.impl.RedoableChangesList.java", "BodyUseAPI": ["org.fxmisc.undo.impl.BubbledResult<C>.getBubbled()", "org.fxmisc.undo.impl.BubbledResult<C>.getBuried()", "java.util.List<C>.set(int,result.getBuried())"], "Fixed commit": "f9520fe7e9b7cc88dfd41832a0bd080d3a49744c", "Url": "https://api.github.com/repos/JordanMartinez/UndoFX", "Date": "2016-05-20T03:27:22Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (cookies != null) { withCookies(java.util.Arrays.asList(cookies)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4577/buggy-version/mockserver-core.src.main.java.org.mockserver.model.HttpResponse.java", "BodyUseAPI": ["java.util.Arrays.asList(org.mockserver.model.Cookie[])", "org.mockserver.model.HttpResponse.withCookies(java.util.List)"], "Fixed commit": "dda44f02a49cfd1438432919aa0e9bf8e9e87cbc", "Url": "https://api.github.com/repos/jamesdbloom/mockserver", "Date": "2014-05-17T06:03:50Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((body) != null) { return org.mockserver.client.serialization.Base64Converter.base64StringToBytes(new java.lang.String(body)); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4577/buggy-version/mockserver-core.src.main.java.org.mockserver.model.HttpResponse.java", "BodyUseAPI": [], "Fixed commit": "dda44f02a49cfd1438432919aa0e9bf8e9e87cbc", "Url": "https://api.github.com/repos/jamesdbloom/mockserver", "Date": "2014-05-17T06:03:50Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (headers != null) { withHeaders(java.util.Arrays.asList(headers)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4577/buggy-version/mockserver-core.src.main.java.org.mockserver.model.HttpResponse.java", "BodyUseAPI": ["org.mockserver.model.HttpResponse.withHeaders(java.util.List)", "java.util.Arrays.asList(org.mockserver.model.Header[])"], "Fixed commit": "dda44f02a49cfd1438432919aa0e9bf8e9e87cbc", "Url": "https://api.github.com/repos/jamesdbloom/mockserver", "Date": "2014-05-17T06:03:50Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (angle1 < ((-(java.lang.Math.PI)) / 2)) angle1 += java.lang.Math.PI;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2786/buggy-version/SideScroller.src.collisionDetection.CollisionDetectionComponentManager.java", "BodyUseAPI": [], "Fixed commit": "ae46b4a77fbfc73b53c4628f0cc95932459766aa", "Url": "https://api.github.com/repos/Ribnon/SideScrollerGDW2012-Max", "Date": "2012-07-25T21:17:27Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (angle2 < ((-(java.lang.Math.PI)) / 2)) angle2 += java.lang.Math.PI;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2786/buggy-version/SideScroller.src.collisionDetection.CollisionDetectionComponentManager.java", "BodyUseAPI": [], "Fixed commit": "ae46b4a77fbfc73b53c4628f0cc95932459766aa", "Url": "https://api.github.com/repos/Ribnon/SideScrollerGDW2012-Max", "Date": "2012-07-25T21:17:27Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (angle1 > ((java.lang.Math.PI) / 2)) angle1 -= java.lang.Math.PI;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2786/buggy-version/SideScroller.src.collisionDetection.CollisionDetectionComponentManager.java", "BodyUseAPI": [], "Fixed commit": "ae46b4a77fbfc73b53c4628f0cc95932459766aa", "Url": "https://api.github.com/repos/Ribnon/SideScrollerGDW2012-Max", "Date": "2012-07-25T21:17:27Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (angle2 > ((java.lang.Math.PI) / 2)) angle2 -= java.lang.Math.PI;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2786/buggy-version/SideScroller.src.collisionDetection.CollisionDetectionComponentManager.java", "BodyUseAPI": [], "Fixed commit": "ae46b4a77fbfc73b53c4628f0cc95932459766aa", "Url": "https://api.github.com/repos/Ribnon/SideScrollerGDW2012-Max", "Date": "2012-07-25T21:17:27Z"},
{"Line": "=>2300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (devSpecificPolicyName == null) { devSpecificPolicyName = gerneratePolicyName(system, target); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6031/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.isilon.IsilonFileStorageDevice.java", "BodyUseAPI": [], "Fixed commit": "391e8eedd14338d9505eae8fcf311a6d925ce585", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-08-18T13:58:05Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { android.widget.Toast.makeText(getActivity(), getFlexString(R.string.IMG_OPEN_ERROR), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/832/buggy-version/SmartReceiptsLibrary.src.main.java.co.smartreceipts.android.fragments.ReceiptImageFragment.java", "BodyUseAPI": [], "Fixed commit": "bf70f712f0bc94b6a8a14826b71e1bf7427c855c", "Url": "https://api.github.com/repos/wbaumann/SmartReceiptsLibrary", "Date": "2016-10-06T18:59:57Z"},
{"Line": "=>849", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fmbp.mapBackViews) != null) { final mpicbg.spim.data.sequence.ViewId id = fmbp.mapBackViews.get(subset).getA(); if (id != null) mpicbg.spim.io.IOFunctions.println((((\"ViewSetupId: \" + (id.getViewSetupId())) + \" TimePoint:\") + (id.getTimePointId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7790/buggy-version/src.main.java.spim.fiji.plugin.Interest_Point_Registration.java", "BodyUseAPI": ["fmbp.mapBackViews.get(subset).getA()", "fmbp.mapBackViews.get(spim.process.interestpointregistration.pairwise.constellation.Subset<mpicbg.spim.data.sequence.ViewId>)"], "Fixed commit": "67958f2a82e8737cbbd5108552e581f7a0e1ef0f", "Url": "https://api.github.com/repos/fiji/SPIM_Registration", "Date": "2017-05-12T08:30:17Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.fugiczek.maturita.model.service.BlogPostService.findOne(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (blogPost == null) throw new eu.fugiczek.maturita.domain.exception.BlogPostNotFoundException(id);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2819/buggy-version/src.main.java.eu.fugiczek.maturita.web.controller.BlogController.java", "BodyUseAPI": [], "Fixed commit": "29e0830dd2b80f6c2c59fcf2e5ef78d692e415ed", "Url": "https://api.github.com/repos/Fugiczek/maturita", "Date": "2015-03-31T15:08:57Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((retweet_id) > 0) { b.putLong(Constants.CTWEET_ID, retweet_id); }else { b.putLong(Constants.CTWEET_ID, tweet_id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3930/buggy-version/app.src.main.java.com.example.punit.twitterclient.ui.DetailTweetActivity.java", "BodyUseAPI": [], "Fixed commit": "9a6d8bc4a852100b5f8a6a1990c5f313729689c1", "Url": "https://api.github.com/repos/punitda/TwitterClient", "Date": "2016-07-07T14:00:34Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((carArr[i]) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1788/buggy-version/Zhenia.src.carShopClass.CarShop.java", "BodyUseAPI": [], "Fixed commit": "b4588dbef0d8475c3a4037c007439eef45e54de8", "Url": "https://api.github.com/repos/presly808/ACO17", "Date": "2016-11-20T10:53:17Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["stock.getNeuralNetwork().getConfiguration().createTrainingDataSet()", "stock.getNeuralNetwork().getConfiguration().getNumberOfInputNeurons()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (minDim != (trainingSet.getRowAt(0).getInput().length)) { com.munch.exchange.parts.neuralnetwork.NeuralNetworkComposite.logger.info((\"Input neuron size error: \" + minDim)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2954/buggy-version/com.munch.exchange.src.com.munch.exchange.parts.neuralnetwork.NeuralNetworkComposite.java", "BodyUseAPI": ["org.apache.log4j.Logger.info(java.lang.String)"], "Fixed commit": "113472418137930595de7a7d96a38f727b2fa62c", "Url": "https://api.github.com/repos/paul-edouard/ExChange", "Date": "2014-12-26T10:34:22Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_notEquals) { return org.eclipse.xtext.xbase.controlflow.EvaluationResult.NOT_A_CONSTANT.value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5159/buggy-version/plugins.org.eclipse.xtext.xbase.xtend-gen.org.eclipse.xtext.xbase.controlflow.EvaluationResult.java", "BodyUseAPI": [], "Fixed commit": "7be352ba4ecabb8d51a42e7b5d68f666cbb8505d", "Url": "https://api.github.com/repos/eclipse/xtext", "Date": "2014-11-21T11:25:10Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.springsource.loaded.agent.SpringLoadedPreProcessor.isReloadableTypePlugins) == null) { synchronized(org.springsource.loaded.agent.SpringLoadedPreProcessor.class) { if ((org.springsource.loaded.agent.SpringLoadedPreProcessor.isReloadableTypePlugins) == null) { org.springsource.loaded.agent.SpringLoadedPreProcessor.isReloadableTypePlugins = new java.util.ArrayList<org.springsource.loaded.IsReloadableTypePlugin>(); for (org.springsource.loaded.Plugin p : org.springsource.loaded.agent.SpringLoadedPreProcessor.getGlobalPlugins()) { if (p instanceof org.springsource.loaded.IsReloadableTypePlugin) { org.springsource.loaded.agent.SpringLoadedPreProcessor.isReloadableTypePlugins.add(((org.springsource.loaded.IsReloadableTypePlugin) (p))); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4062/buggy-version/org.springsource.loaded.src.main.java.org.springsource.loaded.agent.SpringLoadedPreProcessor.java", "BodyUseAPI": [], "Fixed commit": "6922aa5986debe424585e800a6e67eb1980033c9", "Url": "https://api.github.com/repos/SpringSource/spring-loaded", "Date": "2013-05-29T15:09:57Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (from != null) this.from = from;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7477/buggy-version/library-common.src.main.java.com.edu.library.filter.PublicationFilter.java", "BodyUseAPI": [], "Fixed commit": "806734026835695368aa65c40ecba74cf1796ab4", "Url": "https://api.github.com/repos/todor-tibor/Library", "Date": "2017-02-27T07:31:33Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((deltaX1 == 0) || (deltaX2 == 0)) { isTurned = true; double tmp = line1.getPoint1().getX(); line1.getPoint1().setX(line1.getPoint1().getY()); line1.getPoint1().setY(tmp); tmp = line1.getPoint2().getX(); line1.getPoint2().setX(line1.getPoint2().getY()); line1.getPoint2().setY(tmp); tmp = line2.getPoint1().getX(); line2.getPoint1().setX(line2.getPoint1().getY()); line2.getPoint1().setY(tmp); tmp = line2.getPoint2().getX(); line2.getPoint2().setX(line2.getPoint2().getY()); line2.getPoint2().setY(tmp); deltaX1 = (line1.getPoint2().getX()) - (line1.getPoint1().getX()); deltaY1 = (line1.getPoint2().getY()) - (line1.getPoint1().getY()); deltaX2 = (line2.getPoint2().getX()) - (line2.getPoint1().getX()); deltaY2 = (line2.getPoint2().getY()) - (line2.getPoint1().getY()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1444/buggy-version/SmartBot.src.at.htl.smartbot.Line.java", "BodyUseAPI": [], "Fixed commit": "8d45a824b30086bd7744b607423f667260727891", "Url": "https://api.github.com/repos/Fareroo7/SmartBot", "Date": "2014-05-08T10:50:57Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.crate.operation.join.RowReceiver.setNextRow(io.crate.operation.join.NestedLoopOperation.CombinedRow)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result == (Result.STOP)) { stop = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2263/buggy-version/sql.src.main.java.io.crate.operation.join.NestedLoopOperation.java", "BodyUseAPI": [], "Fixed commit": "0a6932844229c8ae367a8737929a4372dbd9e193", "Url": "https://api.github.com/repos/crate/crate", "Date": "2016-09-22T08:55:47Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.toHexString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((redHex.length()) < 2) { redHex = \"0\" + redHex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/9092/buggy-version/src.io.github.conorolive.ImageSegments.java", "BodyUseAPI": [], "Fixed commit": "d1a932af259a97e44fa4c8c856cf45b02062ab0a", "Url": "https://api.github.com/repos/conorolive/Syn", "Date": "2015-09-29T06:17:37Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.toHexString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((blueHex.length()) < 2) { blueHex = \"0\" + blueHex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/9092/buggy-version/src.io.github.conorolive.ImageSegments.java", "BodyUseAPI": [], "Fixed commit": "d1a932af259a97e44fa4c8c856cf45b02062ab0a", "Url": "https://api.github.com/repos/conorolive/Syn", "Date": "2015-09-29T06:17:37Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.toHexString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((greenHex.length()) < 2) { greenHex = \"0\" + greenHex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/9092/buggy-version/src.io.github.conorolive.ImageSegments.java", "BodyUseAPI": [], "Fixed commit": "d1a932af259a97e44fa4c8c856cf45b02062ab0a", "Url": "https://api.github.com/repos/conorolive/Syn", "Date": "2015-09-29T06:17:37Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getResourceRef().getQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((query != null) && (query.contains(\"debug\"))) { debug = \"-debug\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4737/buggy-version/nexus.nexus-rest-api.src.main.java.org.sonatype.nexus.rest.IndexTemplatePlexusResource.java", "BodyUseAPI": [], "Fixed commit": "77be789aeccfaeaa60471f3e910949ebe89894c9", "Url": "https://api.github.com/repos/sonatype/nexus", "Date": "2012-10-31T18:07:56Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((refreshCallback) != null) { if (refreshHead == (com.wq.freeze.horizontalrefreshlayout.lib.HorizontalRefreshLayout.START)) { refreshCallback.onLeftRefreshing(); }else { refreshCallback.onRightRefreshing(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1815/buggy-version/app.src.main.java.com.wq.freeze.horizontalrefreshlayout.lib.HorizontalRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "761c3ebfccf85863d0a48991535a19f3e7196888", "Url": "https://api.github.com/repos/29995270/HorizontalRefreshLayout", "Date": "2016-11-23T08:21:56Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opentripplanner.graph_builder.impl.osm.OSMSpecifier.getTagScore(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tagScore > 0) { matches += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1839/buggy-version/opentripplanner-graph-builder.src.main.java.org.opentripplanner.graph_builder.impl.osm.OSMSpecifier.java", "BodyUseAPI": [], "Fixed commit": "c5571c3822fd9a7dfc4a587bfa3997b9134937ac", "Url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner", "Date": "2011-10-08T01:49:01Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (val.startsWith(PersistentObject.MAPPING_ERROR_MARKER)) { val = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/708/buggy-version/ch.elexis.core.ui.src.ch.elexis.core.ui.util.LabeledInputField.java", "BodyUseAPI": [], "Fixed commit": "7e747b52dfbc4313a0736d1a6a0c7776e27c82ca", "Url": "https://api.github.com/repos/elexis/elexis-3-core", "Date": "2014-08-19T12:35:55Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ApplicationType.WebGL.equals(Gdx.app.getType()))) { int glFormat = Pixmap.Format.toGlFormat(format); int glType = Pixmap.Format.toGlType(format); com.badlogic.gdx.graphics.glutils.GLOnlyTextureData data = new com.badlogic.gdx.graphics.glutils.GLOnlyTextureData(width, height, 0, glFormat, glFormat, glType); result = new com.badlogic.gdx.graphics.Texture(data); }else { result = new com.badlogic.gdx.graphics.Texture(width, height, format); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5391/buggy-version/gdx.src.com.badlogic.gdx.graphics.glutils.FrameBuffer.java", "BodyUseAPI": [], "Fixed commit": "755479d3cd63cca9f94f709620c80706a85c19b5", "Url": "https://api.github.com/repos/MikkelTAndersen/libgdx", "Date": "2015-11-22T21:52:32Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(((tk.sp14.pl.domain.Atom) (b)).getValue())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (valB == 0) throw new tk.sp14.pl.error.InvalidOperationException(\"Error: Divide by zero not allowed\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6764/buggy-version/src.tk.sp14.pl.domain.Primitives.java", "BodyUseAPI": [], "Fixed commit": "a4bc9130344ca22a10e974aa29f2720e9d08d463", "Url": "https://api.github.com/repos/tkpensieve/LispInterpreter", "Date": "2014-03-19T22:21:42Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(((tk.sp14.pl.domain.Atom) (b)).getValue())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (valB == 0) throw new tk.sp14.pl.error.InvalidOperationException(\"Error: Divide by zero not allowed\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6764/buggy-version/src.tk.sp14.pl.domain.Primitives.java", "BodyUseAPI": [], "Fixed commit": "a4bc9130344ca22a10e974aa29f2720e9d08d463", "Url": "https://api.github.com/repos/tkpensieve/LispInterpreter", "Date": "2014-03-19T22:21:42Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (query.contains(\" \")) { builder.append(\"('\").append(query).append(\"')\"); }else { builder.append(\"(\\\"\").append(query).append(\"\\\")\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2615/buggy-version/src.main.java.org.neo4j.cypherdsl.expression.StartExpression.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "2ec6e5b9e30840830a5bb22829344d910d3ff375", "Url": "https://api.github.com/repos/krullert/cypher-dsl", "Date": "2014-02-21T09:17:26Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.equals(\"CABLEWAY\")) return com.mysentosa.android.sg.map.models.Edge.TYPE_CABLE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2448/buggy-version/MySentosa-livelabs_integration.app.src.main.java.com.mysentosa.android.sg.provider.utils.JSONParseUtil.java", "BodyUseAPI": [], "Fixed commit": "1801421927dfbd290a3c980222de698335ca3dc1", "Url": "https://api.github.com/repos/pqtuan86/MySentosa-Livelab", "Date": "2015-09-29T07:39:08Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (channelName == null) { removeDefaultChannel(playerName); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7490/buggy-version/src.main.java.com.github.ucchyocean.lc.ChannelManager.java", "BodyUseAPI": [], "Fixed commit": "e82009f01e7c9e687e7687c403f48c68e1d28393", "Url": "https://api.github.com/repos/ucchyocean/LunaChat", "Date": "2013-08-07T23:26:52Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (word.equals(\"\")) { }else { fieldDesc.addValue(word); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5413/buggy-version/src.canreg.client.analysis.ConfigFieldsReader.java", "BodyUseAPI": ["canreg.client.analysis.ConfigFields.addValue(java.lang.String)"], "Fixed commit": "6544c3467f92e5117f73d3e0bf0bd8685f3afe58", "Url": "https://api.github.com/repos/IARC-CSU/CanReg5", "Date": "2017-05-16T14:26:28Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url.startsWith(\"http://\")) { httpClient = new com.squareup.okhttp.OkHttpClient(); httpClient.setConnectionSpecs(java.util.Arrays.asList(ConnectionSpec.CLEARTEXT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7456/buggy-version/catroid.src.org.catrobat.catroid.web.ServerCalls.java", "BodyUseAPI": [], "Fixed commit": "87a80eca6a563553835dbd53904498008f83606c", "Url": "https://api.github.com/repos/rsamer/Catroid", "Date": "2016-07-26T17:35:54Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (core.isQueenOnBoard(1)) { return addPieceWherever(chooseAPiece(HeuristicConst.W_MEDIUM_ADD_T3_ELSE)); }else { return addPieceWherever(chooseAPiece(HeuristicConst.B_MEDIUM_ADD_T2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2051/buggy-version/src.main.java.ia.MediumAI.java", "BodyUseAPI": [], "Fixed commit": "c9faa8bc63d432d43864436a367db9e9c9286b4b", "Url": "https://api.github.com/repos/Plinz/Hive_Game", "Date": "2017-05-29T12:29:23Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (meeting.getCreator().getUsername().equals(calendarModel.getUser().getUsername())) { if ((meeting.getTeam()) != null) { yourStatus.setEnabled(false); for (data.Person p : meeting.getTeam().getMembers()) { if (p.getUsername().equals(calendarModel.getUser().getUsername())) { yourStatus.setEnabled(true); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8983/buggy-version/KalenderProsjekt.src.framePackage.AppointmentOverView.java", "BodyUseAPI": ["data.CalendarModel.getUser()", "meeting.getTeam().getMembers()", "calendarModel.getUser().getUsername()", "data.Meeting.getTeam()", "data.Meeting.getTeam()", "p.getUsername().equals(calendarModel.getUser().getUsername())"], "Fixed commit": "256f025383d9a24eafc3d2f5501a7f6663cfd100", "Url": "https://api.github.com/repos/Daveiac/FProj_Gruppe48", "Date": "2013-03-21T08:17:55Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPath) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2398/buggy-version/src.org.brandroid.openmanager.fragments.TextEditorFragment.java", "BodyUseAPI": [], "Fixed commit": "050927648b43fea3343649087604ad972b0f627b", "Url": "https://api.github.com/repos/BrandroidTools/OpenExplorer", "Date": "2012-08-31T21:04:25Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPath) != null) mFilename.setText(mPath.getPath());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2398/buggy-version/src.org.brandroid.openmanager.fragments.TextEditorFragment.java", "BodyUseAPI": [], "Fixed commit": "050927648b43fea3343649087604ad972b0f627b", "Url": "https://api.github.com/repos/BrandroidTools/OpenExplorer", "Date": "2012-08-31T21:04:25Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getViewSetting(getPath(), \"ff\", ((java.lang.Boolean) (null)))) != null) sort.setFoldersFirst(getViewSetting(getPath(), \"ff\", true)); else sort.setFoldersFirst(getSetting(null, \"pref_sorting_folders\", true));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2398/buggy-version/src.org.brandroid.openmanager.fragments.ContentFragment.java", "BodyUseAPI": [], "Fixed commit": "050927648b43fea3343649087604ad972b0f627b", "Url": "https://api.github.com/repos/BrandroidTools/OpenExplorer", "Date": "2012-08-31T21:04:25Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2398/buggy-version/src.org.brandroid.openmanager.adapters.ArrayPagerAdapter.java", "BodyUseAPI": [], "Fixed commit": "050927648b43fea3343649087604ad972b0f627b", "Url": "https://api.github.com/repos/BrandroidTools/OpenExplorer", "Date": "2012-08-31T21:04:25Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((col.getName().equals(\"id\")) && ((row.getInt(\"id\")) == 0)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6725/buggy-version/app.src.main.java.com.odoo.core.utils.JSONUtils.java", "BodyUseAPI": [], "Fixed commit": "652285a1e6906f9229e068c5dd6b4c3a7d6843f7", "Url": "https://api.github.com/repos/Odoo-mobile/crm", "Date": "2015-03-27T06:23:52Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (_data.get(key).toString().equals(\"false\")) { _data.put(key, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6725/buggy-version/app.src.main.java.com.odoo.core.orm.ODataRow.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Object>.put(java.lang.String,int)"], "Fixed commit": "652285a1e6906f9229e068c5dd6b4c3a7d6843f7", "Url": "https://api.github.com/repos/Odoo-mobile/crm", "Date": "2015-03-27T06:23:52Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.gzinga.InputStreamConverter.getMetadata()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (metadata.isEmpty()) { try { inputStreamConverter.storeMetadata(); } catch (java.lang.Exception e) { e.printStackTrace(); } metadata = inputStreamConverter.getMetadata(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6735/buggy-version/core.src.main.java.io.gzinga.GZipInputStreamRandomAccess.java", "BodyUseAPI": [], "Fixed commit": "517ca8af1d2db1e35239b8a0bf14832ae4b2bb4e", "Url": "https://api.github.com/repos/brahul/GZinga", "Date": "2017-05-18T23:52:06Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ixa.kaflib.ReadWriteManager.getOptAttribute(java.lang.String,org.jdom2.Element)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (entType != null) { newEntity.setType(entType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3981/buggy-version/src.main.java.ixa.kaflib.ReadWriteManager.java", "BodyUseAPI": ["ixa.kaflib.Entity.setType(java.lang.String)"], "Fixed commit": "e430effb9ad7bc1e0fbbda2441371e6beefbebda", "Url": "https://api.github.com/repos/ixa-ehu/kaflib", "Date": "2013-10-28T13:06:39Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mContext.getResources().getDrawable(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (drawable instanceof android.graphics.drawable.BitmapDrawable) { bitmap = ((android.graphics.drawable.BitmapDrawable) (drawable)).getBitmap(); }else if (drawable instanceof android.graphics.drawable.NinePatchDrawable) { bitmap = android.graphics.Bitmap.createBitmap(drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight(), ((drawable.getOpacity()) != (android.graphics.PixelFormat.OPAQUE) ? android.graphics.Bitmap.Config.ARGB_8888 : android.graphics.Bitmap.Config.RGB_565)); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7725/buggy-version/source.src.com.habzy.image.bubble.BubbleImageView.java", "BodyUseAPI": ["android.graphics.drawable.Drawable.getIntrinsicWidth()", "android.graphics.Bitmap.createBitmap(drawable.getIntrinsicWidth(),drawable.getIntrinsicHeight(),((drawable.getOpacity()) != (android.graphics.PixelFormat.OPAQUE) ? android.graphics.Bitmap.Config.ARGB_8888 : android.graphics.Bitmap.Config.RGB_565))", "android.graphics.drawable.Drawable.getIntrinsicHeight()", "android.graphics.drawable.Drawable.getOpacity()"], "Fixed commit": "f053d6fe1f96e2f76f68e8bb14ac29823cb9bd80", "Url": "https://api.github.com/repos/habzy/BubbleImageView", "Date": "2014-10-22T10:24:32Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastLogin) != null) { return Utils.LONG_DATE.format(lastLogin); }else { return \"Never logged in\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2535/buggy-version/app.src.main.java.com.galarza.tibiacompendium.data.Player.java", "BodyUseAPI": [], "Fixed commit": "f3f90c2a8fe3547ce4ea83dfe0b8ae99027a0161", "Url": "https://api.github.com/repos/Galarzaa90/TibiaCompendium", "Date": "2016-07-23T22:24:00Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jcl.isStream()) { java.lang.Thread.currentThread().interrupt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/626/buggy-version/projects.Pitovsky.src.main.java.ru.fizteh.fivt.pitovsky.twitterstream.Main.java", "BodyUseAPI": [], "Fixed commit": "82a9f5a4ef360727646ee5baebf677f99a7e1cea", "Url": "https://api.github.com/repos/KhurtinDN/fizteh-java-2015", "Date": "2015-09-25T10:24:20Z"},
{"Line": "=>768", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((super.text.length()) > 0) { haven.Utils.setpref(hcommand, super.text); Config.hcommands[idx] = super.text; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6556/buggy-version/src.haven.OptWnd2.java", "BodyUseAPI": ["haven.Utils.setpref(java.lang.String,super.text)"], "Fixed commit": "f949e0adb87c8283e6b8d4591647ef73b1f42ea3", "Url": "https://api.github.com/repos/DonnEssime/Custom-Salem", "Date": "2015-02-01T15:34:32Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.ContentResolver.query(CalendarContract.Events.CONTENT_URI,java.lang.String[],(((CalendarContract.Events._ID) + \"=\") + id),<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((evtCur.getCount()) < 1) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8950/buggy-version/commons.src.main.java.com.anyfetch.companion.android.Event.java", "BodyUseAPI": [], "Fixed commit": "9b6e18e0f4402bf51257cfcb1f9b8e4e4eb08b4f", "Url": "https://api.github.com/repos/AnyFetch/companion", "Date": "2014-09-30T12:37:54Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["assignmetsHashMap.entrySet().iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (it.hasNext()) { while (it.hasNext()) { java.util.Map.Entry pair = ((java.util.Map.Entry) (it.next())); se.chalmers.datx02_15_36.studeraeffektivt.model.StudyTask2 test = ((se.chalmers.datx02_15_36.studeraeffektivt.model.StudyTask2) (pair.getValue())); taskListfromWeb.addTasksFromWeb(test.getIdNr(), test.getCourseCode(), test.getChapter(), test.getWeek(), test.getTaskString(), test.getStartPage(), test.getEndPage(), \"UNDONE\", test.getType().toString(), dbAdapter); it.remove(); } }else { android.widget.TextView textView1 = new android.widget.TextView(getBaseContext()); textView1.setText(\"Finns inga uppgifter att h\u00e4mta.\"); taskListfromWeb.addView(textView1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7966/buggy-version/StuderaEffektivt.app.src.main.java.se.chalmers.datx02_15_36.studeraeffektivt.activity.GetAssignmetsFromWeb.java", "BodyUseAPI": ["java.util.Iterator.remove()", "java.util.Iterator.hasNext()", "java.util.Iterator.next()"], "Fixed commit": "ba9be9e04d2aa44e49cb6ad773f7a6036c64b1e6", "Url": "https://api.github.com/repos/Soya93/DATX02_15_36", "Date": "2015-05-07T13:26:48Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((request.headers()) != null) && (org.springframework.util.StringUtils.isEmpty(request.headers().get(Trace.TRACE))))) { this.traceCollector.put(traceInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6557/buggy-version/kepler-trace.src.main.java.com.kepler.trace.impl.DefaultTrace.java", "BodyUseAPI": [], "Fixed commit": "75f44f2bba921d865c8a1d3f07136f9353128d6e", "Url": "https://api.github.com/repos/Kepler-Framework/Kepler-Trace", "Date": "2016-05-17T11:13:29Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentTile.hasOwner()) { if ((currentTile.getOwnerIndex()) != (currentPlayerIndex)) { payRent(((rolledValue) * 10)); } }else { phase = GamePhase.BUY_PROPERTY; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3589/buggy-version/src.cs414.a4.n.Monopoly.java", "BodyUseAPI": ["cs414.a4.n.Tile.getOwnerIndex()"], "Fixed commit": "8061b019818c4b406b2ef05bad31d2d0ed741876", "Url": "https://api.github.com/repos/Josplode/Monopoly", "Date": "2016-11-17T03:00:45Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentTile.hasOwner()) { if ((currentTile.getOwnerIndex()) != (currentPlayerIndex)) { payRent(((rolledValue) * 10)); } }else { phase = GamePhase.BUY_PROPERTY; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3589/buggy-version/src.cs414.a4.n.Monopoly.java", "BodyUseAPI": ["cs414.a4.n.Tile.getOwnerIndex()"], "Fixed commit": "8061b019818c4b406b2ef05bad31d2d0ed741876", "Url": "https://api.github.com/repos/Josplode/Monopoly", "Date": "2016-11-17T03:00:45Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((nvp.length) > 1) { qryParams.put(nvp[0].toLowerCase(), nvp[1]); }else { qryParams.put(nvp[0].toLowerCase(), \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7028/buggy-version/teamengine-web.src.main.java.com.occamlab.te.web.CoverageMonitor.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.lang.String.toLowerCase()", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "726fd08cf7aef1c02360d5f6c6553dce5fa0f3e5", "Url": "https://api.github.com/repos/opengeospatial/teamengine", "Date": "2015-07-28T11:58:08Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((next) != null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7253/buggy-version/harvester.tickle-repo.src.main.java.dk.dbc.dataio.harvester.ticklerepo.TaskRecordsIterator.java", "BodyUseAPI": [], "Fixed commit": "3aaf9d241fa3822e45a8675be0901623c98b8031", "Url": "https://api.github.com/repos/DBCDK/dataio", "Date": "2017-12-11T14:53:57Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((recentChapter.getMaxPageNumber()) > 0) progress = (((recentChapter.getPageNumber()) + 1) * 100) / (recentChapter.getMaxPageNumber());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6623/buggy-version/app.src.main.java.com.jparkie.aizoban.views.adapters.RecentChapterAdapter.java", "BodyUseAPI": ["com.jparkie.aizoban.models.databases.RecentChapter.getPageNumber()", "com.jparkie.aizoban.models.databases.RecentChapter.getMaxPageNumber()"], "Fixed commit": "1328e6befce1f8c51ec9e995ddad3b59515c1e40", "Url": "https://api.github.com/repos/GreyAsteroid/Aizoban", "Date": "2015-09-28T10:24:24Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((get(graph.core.cli.DAGPortHandler.SORT_ORDER)) == null) || (get(graph.core.cli.DAGPortHandler.SORT_ORDER).isEmpty())) set(graph.core.cli.DAGPortHandler.SORT_ORDER, \"default\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6663/buggy-version/src.graph.core.cli.DAGPortHandler.java", "BodyUseAPI": [], "Fixed commit": "b986b6375f6f0f065a3ea060615e90fd99fd3623", "Url": "https://api.github.com/repos/Effervex/DagYo", "Date": "2015-01-14T03:45:38Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((get(graph.core.cli.DAGPortHandler.SUBDAG_FILTERING)) == null) || (get(graph.core.cli.DAGPortHandler.SUBDAG_FILTERING).isEmpty())) set(graph.core.cli.DAGPortHandler.SUBDAG_FILTERING, \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6663/buggy-version/src.graph.core.cli.DAGPortHandler.java", "BodyUseAPI": [], "Fixed commit": "b986b6375f6f0f065a3ea060615e90fd99fd3623", "Url": "https://api.github.com/repos/Effervex/DagYo", "Date": "2015-01-14T03:45:38Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((get(graph.core.cli.DAGPortHandler.EDGE_FLAGS)) == null) || (get(graph.core.cli.DAGPortHandler.EDGE_FLAGS).isEmpty())) set(graph.core.cli.DAGPortHandler.EDGE_FLAGS, \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6663/buggy-version/src.graph.core.cli.DAGPortHandler.java", "BodyUseAPI": [], "Fixed commit": "b986b6375f6f0f065a3ea060615e90fd99fd3623", "Url": "https://api.github.com/repos/Effervex/DagYo", "Date": "2015-01-14T03:45:38Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((get(graph.core.cli.DAGPortHandler.NODE_FLAGS)) == null) || (get(graph.core.cli.DAGPortHandler.NODE_FLAGS).isEmpty())) set(graph.core.cli.DAGPortHandler.NODE_FLAGS, \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6663/buggy-version/src.graph.core.cli.DAGPortHandler.java", "BodyUseAPI": [], "Fixed commit": "b986b6375f6f0f065a3ea060615e90fd99fd3623", "Url": "https://api.github.com/repos/Effervex/DagYo", "Date": "2015-01-14T03:45:38Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.login) != null) { result = this.login.compareTo(o.login); }else { result = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7439/buggy-version/src.main.java.br.edu.ifrn.findyourpro.dominio.Usuario.java", "BodyUseAPI": [], "Fixed commit": "0fc082eab6aea45533e502a56088ea90fc698708", "Url": "https://api.github.com/repos/mateusocb/findyourprocorp", "Date": "2017-02-22T01:17:52Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.latitude) != null) && ((this.longitude) != null)) { if (result == 0) { result = this.latitude.compareTo(o.latitude); } if (result == 0) { result = this.longitude.compareTo(o.longitude); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7439/buggy-version/src.main.java.br.edu.ifrn.findyourpro.dominio.Localizacao.java", "BodyUseAPI": [], "Fixed commit": "0fc082eab6aea45533e502a56088ea90fc698708", "Url": "https://api.github.com/repos/mateusocb/findyourprocorp", "Date": "2017-02-22T01:17:52Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.cep) != null) { result = this.cep.compareTo(o.cep); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7439/buggy-version/src.main.java.br.edu.ifrn.findyourpro.dominio.Localizacao.java", "BodyUseAPI": [], "Fixed commit": "0fc082eab6aea45533e502a56088ea90fc698708", "Url": "https://api.github.com/repos/mateusocb/findyourprocorp", "Date": "2017-02-22T01:17:52Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i == 0) && (line == 0)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1202/buggy-version/CG_ex3_partial.src.ex3.render.raytrace.RayTracer.java", "BodyUseAPI": [], "Fixed commit": "3cd7f3ad92da43621a86c4c2f6d1b1a2e0e4082d", "Url": "https://api.github.com/repos/amirabr/CG_Ex03", "Date": "2015-04-25T19:23:06Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (sd != null) fd = sd.intValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1849/buggy-version/app.src.main.java.com.walarm.wuasta.wuastaFragment.java", "BodyUseAPI": ["java.lang.Integer.intValue()"], "Fixed commit": "8212e9af4839d68c23db231fa89f73739882aad5", "Url": "https://api.github.com/repos/GokulVSD/wuasta", "Date": "2017-10-24T15:23:21Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nbPair != 0) java.lang.System.out.println(((\"TCC = \" + (((float) (((float) (nbCohesion)) / ((float) (nbPair)))) * ((float) (100)))) + \"%\")); else java.lang.System.out.println(\"TCC nulle car 0 m\u00e9thodes\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1818/buggy-version/MyParser.java", "BodyUseAPI": [], "Fixed commit": "ea981b7a9112151b5aa88347fb6e12684abec1a2", "Url": "https://api.github.com/repos/Brotic66/M2-MetriqueAST", "Date": "2016-01-15T16:57:05Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.suffix().equals(\"class\")) { e.associate(ClassFile.ContentType, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2395/buggy-version/plugins.wyclipse.core.src.wyclipse.WhileyProject.java", "BodyUseAPI": ["Path.Entry.associate(ClassFile.ContentType,<nulltype>)"], "Fixed commit": "45004407275ad640eeb19e566230d1e9b75d01ef", "Url": "https://api.github.com/repos/DavePearce/wyclipse", "Date": "2012-08-01T01:33:19Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t == (wyil.lang.WyilFile.ContentType)) { return \"wyil\"; }else if (t == (wyjvm.lang.ClassFile.ContentType)) { return \"class\"; }else { return \"dat\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2395/buggy-version/plugins.wyclipse.core.src.wyclipse.WhileyProject.java", "BodyUseAPI": [], "Fixed commit": "45004407275ad640eeb19e566230d1e9b75d01ef", "Url": "https://api.github.com/repos/DavePearce/wyclipse", "Date": "2012-08-01T01:33:19Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((genomeInfo) == null) { org.opencb.commons.datastore.core.QueryResult<org.bson.Document> queryResult = genomeInfoMongoDBCollection.find(new org.bson.Document(), null); if ((queryResult.getNumResults()) > 0) { genomeInfo = genomeInfoMongoDBCollection.find(new org.bson.Document(), null).getResult().get(0); for (org.bson.Document chromosomeDocument : ((java.util.List<org.bson.Document>) (genomeInfo.get(org.opencb.cellbase.lib.impl.GenomeMongoDBAdaptor.CHROMOSOMES)))) { ((java.util.List<org.bson.Document>) (chromosomeDocument.get(org.opencb.cellbase.lib.impl.GenomeMongoDBAdaptor.CYTOBANDS))).sort(( c1, c2) -> java.lang.Integer.compare(((int) (c1.get(org.opencb.cellbase.lib.impl.GenomeMongoDBAdaptor.START))), ((int) (c2.get(org.opencb.cellbase.lib.impl.GenomeMongoDBAdaptor.START))))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4615/buggy-version/cellbase-lib.src.main.java.org.opencb.cellbase.lib.impl.GenomeMongoDBAdaptor.java", "BodyUseAPI": [], "Fixed commit": "4d4e1a032a3544618129dd49a1ad3692fa887ad1", "Url": "https://api.github.com/repos/opencb/cellbase", "Date": "2017-07-06T09:24:54Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opencb.cellbase.lib.impl.GenomeMongoDBAdaptor.getGenomeInfoVariable()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (genomeInfoVariable != null) { for (org.bson.Document document : ((java.util.List<org.bson.Document>) (genomeInfoVariable.get(org.opencb.cellbase.lib.impl.GenomeMongoDBAdaptor.CHROMOSOMES)))) { if (document.get(org.opencb.cellbase.lib.impl.GenomeMongoDBAdaptor.NAME).equals(chromosome)) { return document; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4615/buggy-version/cellbase-lib.src.main.java.org.opencb.cellbase.lib.impl.GenomeMongoDBAdaptor.java", "BodyUseAPI": ["org.bson.Document.get(java.lang.Object)"], "Fixed commit": "4d4e1a032a3544618129dd49a1ad3692fa887ad1", "Url": "https://api.github.com/repos/opencb/cellbase", "Date": "2017-07-06T09:24:54Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((seedBuffer) == null) || ((seedArray) == null)) { seedArray = new byte[io.github.pr0methean.betterrandom.prng.JavaRandom.SEED_SIZE_BYTES]; seedBuffer = java.nio.ByteBuffer.wrap(seedArray); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5985/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.prng.JavaRandom.java", "BodyUseAPI": [], "Fixed commit": "53d0720993c6be41d138f8a34b86ce99c02ae2b1", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2017-09-08T05:26:45Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((seedBuffer) == null) || ((seedArray) == null)) { seedArray = seed.clone(); seedBuffer = java.nio.ByteBuffer.wrap(seedArray); }else { java.lang.System.arraycopy(seed, 0, seedArray, 0, io.github.pr0methean.betterrandom.prng.JavaRandom.SEED_SIZE_BYTES); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5985/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.prng.JavaRandom.java", "BodyUseAPI": [], "Fixed commit": "53d0720993c6be41d138f8a34b86ce99c02ae2b1", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2017-09-08T05:26:45Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parser.getNumberOfSyntaxErrors()) == 0) { java.lang.System.err.println(\"No syntax errors.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5771/buggy-version/src.controller.JavaRiceCompiler.java", "BodyUseAPI": [], "Fixed commit": "a08eae1cc4571d16a80fc218bbd98bd01289bdf2", "Url": "https://api.github.com/repos/fuouo/JavaRice", "Date": "2017-10-15T15:10:06Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["engine.network.packet.PacketRequestTravel.getTravelDir(client.playerMob)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (travelDir != (-1)) { engine.network.packet.PacketTravelForm packet = new engine.network.packet.PacketTravelForm(server, client, travelDir); server.network.sendPacket(packet, client); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2504/buggy-version/src.engine.network.packet.PacketRequestTravel.java", "BodyUseAPI": [], "Fixed commit": "d666f77ddc04d1d649fdf9a49c9bd390cdb75fec", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2017-03-02T20:41:20Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((N <= 0) || (T <= 0)) throw new java.lang.IllegalArgumentException(\"N or T out of bound\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7155/buggy-version/PrincetonAlgorithm.src.main.java.princeton.algorithm.percolation.PercolationStats.java", "BodyUseAPI": [], "Fixed commit": "0546e7b44cc6957a636212b7ff646c7ce2f592b6", "Url": "https://api.github.com/repos/tommengdel/OpenCourse", "Date": "2016-02-11T08:14:34Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((players.get(i)) instanceof ModelPackage.TablePlayer) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4076/buggy-version/src.ModelPackage.GameModel.java", "BodyUseAPI": [], "Fixed commit": "87395a543cad5a0840980b3ab2b5bd2260b9cb21", "Url": "https://api.github.com/repos/payano/texas_hold_em", "Date": "2015-10-18T15:43:33Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rmi) != null) rmi.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6809/buggy-version/dslab13.src.main.java.client.ClientCli.java", "BodyUseAPI": [], "Fixed commit": "6dc25360f766ebca2cc57990445ca081362ce28f", "Url": "https://api.github.com/repos/MichiK91/VSLab1", "Date": "2013-12-30T18:35:56Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((cu.type) instanceof wyil.lang.Type.Reference)) { isLive = environment.contains(aa.target); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8237/buggy-version/modules.wyil.src.wyil.transforms.LiveVariablesAnalysis.java", "BodyUseAPI": [], "Fixed commit": "c4f26eff9840abaf297dbcdb5f14179dfca3c203", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2014-06-10T04:26:41Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) == null) { answer.playPosition = 0; }else { answer.playPosition = ((int) ((player.getPosition()) / 1000.0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2704/buggy-version/src.com.awaker.audio.PlayerMaster.java", "BodyUseAPI": [], "Fixed commit": "7a959c5c2ace69f490210c00d4ca711764c84d8f", "Url": "https://api.github.com/repos/caleron/awaker", "Date": "2016-09-27T19:19:12Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(defaultConfig.exists())) { defaultConfig.createNewFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3501/buggy-version/HammerSponge.src.main.java.uk.co.drnaylor.minecraft.hammer.sponge.HammerSponge.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "66207d25c843cd6f453431017faa2976516e2a9b", "Url": "https://api.github.com/repos/dualspiral/Hammer", "Date": "2015-12-03T18:19:51Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i == 0) && (j == 0)) { }else { ids.add(java.lang.String.valueOf(i).concat(\":\").concat(java.lang.String.valueOf(j))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3652/buggy-version/src.main.java.org.dasein.cloud.cloudsigma.compute.block.DataDriveSupport.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.lang.String.concat(java.lang.String)", "java.lang.String.concat(java.lang.String)", "java.lang.String.valueOf(int)", "java.lang.String.valueOf(int)"], "Fixed commit": "e96632de2835b6ac51801e4d83860435da43c526", "Url": "https://api.github.com/repos/greese/dasein-cloud-cloudsigma", "Date": "2014-02-11T12:55:34Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (safeDistantion(r2p)) return r2p;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1793/buggy-version/src.main.Station.java", "BodyUseAPI": [], "Fixed commit": "58fb02484dd47321c6cac2317c417e95f638f588", "Url": "https://api.github.com/repos/pechenoga/TrainProject", "Date": "2014-12-04T09:23:05Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (safeDistantion(r1p)) return r1p;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1793/buggy-version/src.main.Station.java", "BodyUseAPI": [], "Fixed commit": "58fb02484dd47321c6cac2317c417e95f638f588", "Url": "https://api.github.com/repos/pechenoga/TrainProject", "Date": "2014-12-04T09:23:05Z"},
{"Line": "=>816", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((org.ednovo.gooru.client.gin.AppClientFactory.getLoggedInUser().getSettings()) != null) && ((org.ednovo.gooru.client.gin.AppClientFactory.getLoggedInUser().getSettings().getProfileImageUrl()) != null)) { getView().setUserProfileImageUrl((((org.ednovo.gooru.client.gin.AppClientFactory.getLoggedInUser().getSettings().getProfileImageUrl()) + (user.getUser().getGooruUId())) + \"-158x158.png\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6081/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.settings.UserSettingsPresenter.java", "BodyUseAPI": [], "Fixed commit": "5efd78011e0e848aef4d4f5838e9fbb2e1ef7e2b", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-01-09T13:16:29Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((org.ednovo.gooru.client.gin.AppClientFactory.getLoggedInUser().getSettings()) != null) && ((org.ednovo.gooru.client.gin.AppClientFactory.getLoggedInUser().getSettings().getProfileImageUrl()) != null)) { getView().setUserProfileImageUrl((((org.ednovo.gooru.client.gin.AppClientFactory.getLoggedInUser().getSettings().getProfileImageUrl()) + (user.getUser().getGooruUId())) + \"-158x158.png\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6081/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.settings.UserSettingsPresenter.java", "BodyUseAPI": [], "Fixed commit": "5efd78011e0e848aef4d4f5838e9fbb2e1ef7e2b", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-01-09T13:16:29Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((tokens.size()) > 0) && ((tokens.size()) < (lexemes.size()))) && (tokens.get(((tokens.size()) - 1)).getToken().equals(\"'\"))) && (lexemes.get((i + 1)).equals(\"'\"))) { container.setToken(\"char\"); container.setTokenInfo(curLexeme); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8544/buggy-version/src.tarccompiler.LexicalAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "b9a498d63978b21332d7f997f929976f9ffcd265", "Url": "https://api.github.com/repos/charlesyu122/TARCCompiler", "Date": "2013-03-04T01:41:54Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((lastTextChunk.length()) > 0) { x += iconInText.icon.kerning; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2094/buggy-version/src.hunternif.mc.dota2items.client.gui.FontRendererWithIcons.java", "BodyUseAPI": [], "Fixed commit": "23c9696ffd3c472c1c8adf3d47cc334cc2d2beb8", "Url": "https://api.github.com/repos/Hunternif/Dota2Items", "Date": "2013-09-26T22:02:00Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring((i + (icon.key.length())))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((end.length()) > 0) { totalWidth += icon.kerning; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2094/buggy-version/src.hunternif.mc.dota2items.client.gui.FontRendererWithIcons.java", "BodyUseAPI": [], "Fixed commit": "23c9696ffd3c472c1c8adf3d47cc334cc2d2beb8", "Url": "https://api.github.com/repos/Hunternif/Dota2Items", "Date": "2013-09-26T22:02:00Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((beginning.length()) > 0) { totalWidth += icon.kerning; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2094/buggy-version/src.hunternif.mc.dota2items.client.gui.FontRendererWithIcons.java", "BodyUseAPI": [], "Fixed commit": "23c9696ffd3c472c1c8adf3d47cc334cc2d2beb8", "Url": "https://api.github.com/repos/Hunternif/Dota2Items", "Date": "2013-09-26T22:02:00Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.SQLException.getSQLState()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((sqlState.startsWith(\"08\")) || (com.zaxxer.hikari.pool.ProxyConnection.SQL_ERRORS.contains(sqlState))) { com.zaxxer.hikari.pool.ProxyConnection.LOGGER.warn(\"{} - Connection {} marked as broken because of SQLSTATE({}), ErrorCode({})\", poolEntry.getPoolName(), delegate, sqlState, sqle.getErrorCode(), sqle); leakTask.cancel(); poolEntry.evict(\"(connection is broken)\"); delegate = com.zaxxer.hikari.pool.ProxyConnection.ClosedConnection.CLOSED_CONNECTION; }else { final java.sql.SQLException nse = sqle.getNextException(); if ((nse != null) && (nse != sqle)) { checkException(nse); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8081/buggy-version/src.main.java.com.zaxxer.hikari.pool.ProxyConnection.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,poolEntry.getPoolName(),java.sql.Connection,java.lang.String,int,java.sql.SQLException)"], "Fixed commit": "9d34443031c3823383211faf119884fc1ccdbea1", "Url": "https://api.github.com/repos/brettwooldridge/HikariCP", "Date": "2016-02-07T13:03:48Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.antlr.runtime.tree.Tree.getChild(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((leftExpr.getType()) == (org.batoo.jpa.jpql.JpqlParser.Named_Parameter)) || ((leftExpr.getType()) == (org.batoo.jpa.jpql.JpqlParser.Ordinal_Parameter))) { left = ((org.batoo.jpa.core.impl.criteria.expression.AbstractExpression<X>) (this.getExpression(cb, q, rightExpr, null))); right = ((org.batoo.jpa.core.impl.criteria.expression.AbstractExpression<X>) (this.getExpression(cb, q, leftExpr, left.getJavaType()))); }else { left = this.getExpression(cb, q, leftExpr, null); right = ((org.batoo.jpa.core.impl.criteria.expression.AbstractExpression<X>) (this.getExpression(cb, q, rightExpr, left.getJavaType()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/9095/buggy-version/batoo-jpa.src.main.java.org.batoo.jpa.core.impl.criteria.jpql.JpqlQuery.java", "BodyUseAPI": ["org.batoo.jpa.core.impl.criteria.jpql.JpqlQuery.getExpression(org.batoo.jpa.core.impl.criteria.CriteriaBuilderImpl,java.lang.Object,org.antlr.runtime.tree.Tree,left.getJavaType())", "org.batoo.jpa.core.impl.criteria.jpql.JpqlQuery.getExpression(org.batoo.jpa.core.impl.criteria.CriteriaBuilderImpl,java.lang.Object,org.antlr.runtime.tree.Tree,<nulltype>)"], "Fixed commit": "8faf9e793f969e18f8fa3294f9ae21a273bf497f", "Url": "https://api.github.com/repos/asimarslan/BatooJPA", "Date": "2012-10-31T17:37:25Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (x instanceof javax.persistence.criteria.ParameterExpression) { this.x = ((org.batoo.jpa.core.impl.criteria.expression.AbstractExpression<?>) (y)); this.y = ((org.batoo.jpa.core.impl.criteria.expression.AbstractExpression<?>) (x)); }else { this.x = ((org.batoo.jpa.core.impl.criteria.expression.AbstractExpression<?>) (x)); this.y = ((org.batoo.jpa.core.impl.criteria.expression.AbstractExpression<?>) (y)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/9095/buggy-version/batoo-jpa.src.main.java.org.batoo.jpa.core.impl.criteria.expression.ComparisonExpression.java", "BodyUseAPI": [], "Fixed commit": "8faf9e793f969e18f8fa3294f9ae21a273bf497f", "Url": "https://api.github.com/repos/asimarslan/BatooJPA", "Date": "2012-10-31T17:37:25Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((countDown) != null) countDown.stopCoundDown();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/470/buggy-version/src.Timer.java", "BodyUseAPI": [], "Fixed commit": "9f4230378ec092cd91adf455742c5b9ed8189794", "Url": "https://api.github.com/repos/bierpreis/timer", "Date": "2017-12-14T17:20:15Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((projectile.target) == null) putInt(20, (-1)); else putInt(20, projectile.target.getUniqueID());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1226/buggy-version/src.engine.network.packet.Packet78ProjectileTargetUpdate.java", "BodyUseAPI": [], "Fixed commit": "d060dd34421f962144f5b3ff337663c73df68e82", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-03-31T18:14:23Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["engine.network.packet.Packet78ProjectileTargetUpdate.getInt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (uniqueID == (-1)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1226/buggy-version/src.engine.network.packet.Packet78ProjectileTargetUpdate.java", "BodyUseAPI": [], "Fixed commit": "d060dd34421f962144f5b3ff337663c73df68e82", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-03-31T18:14:23Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(use64Bit)) { for (int i = 0; i < (markers.length); i++) { markers[i] = (markers[i]) & 4294967295L; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7565/buggy-version/components.formats-gpl.src.loci.formats.in.NDPIReader.java", "BodyUseAPI": [], "Fixed commit": "76c610755a49f667732bbd434f198511176c1646", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-05-25T14:20:35Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.confluent.kafkarest.MetadataObserver.getTopicPartitions(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((partitions.size()) == 0) { throw io.confluent.kafkarest.Errors.topicNotFoundException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2273/buggy-version/src.main.java.io.confluent.kafkarest.MetadataObserver.java", "BodyUseAPI": [], "Fixed commit": "8265902e48659166b0a5e604bad72a2c661903c2", "Url": "https://api.github.com/repos/confluentinc/kafka-rest", "Date": "2015-03-08T21:58:27Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (fr.cnes.doi.settings.DoiSettings.getInstance().getBoolean(Consts.PROXY_USED)) { client.setProxyAuthentication(proxy.getProxyAuthentication()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2993/buggy-version/src.main.java.fr.cnes.doi.application.DoiMdsApplication.java", "BodyUseAPI": [], "Fixed commit": "ee3dcfad48d07b7a5846ddcb556bfb8269e03ae7", "Url": "https://api.github.com/repos/J-Christophe/DOI", "Date": "2017-06-06T19:12:36Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (handleSession(sessionID)) { if (type.equals(\"directed\")) { server.RequestHandler.sessionToGraph.get(sessionID).setDirected(true); }else if (type.equals(\"undirected\")) { server.RequestHandler.sessionToGraph.get(sessionID).setDirected(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6104/buggy-version/src.main.java.server.RequestHandler.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, server.GraphModel>.get(java.lang.String)", "server.RequestHandler.sessionToGraph.get(sessionID).setDirected(boolean)", "server.RequestHandler.sessionToGraph.get(sessionID).setDirected(boolean)", "java.util.HashMap<java.lang.String, server.GraphModel>.get(java.lang.String)"], "Fixed commit": "f937c14538d888b95d2615ffd7293aa7df55e9a1", "Url": "https://api.github.com/repos/rostam/GTea", "Date": "2017-09-16T19:51:14Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (de.Keyle.MyPet.listeners.MyPetList.hasMyPet(damager)) { de.Keyle.MyPet.entity.types.MyPet myPet = de.Keyle.MyPet.listeners.MyPetList.getMyPet(damager); if (((myPet.status) == (de.Keyle.MyPet.entity.types.MyPet.PetState.Here)) && ((event.getEntity()) != (myPet.getCraftPet()))) { myPet.getCraftPet().getHandle().goalTarget = ((org.bukkit.craftbukkit.entity.CraftLivingEntity) (event.getEntity())).getHandle(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/9262/buggy-version/src.de.Keyle.MyPet.listeners.MyPetEntityListener.java", "BodyUseAPI": ["de.Keyle.MyPet.listeners.MyPetList.getMyPet(de.Keyle.MyPet.listeners.Player)"], "Fixed commit": "cfe643eab6c0209e0b8573506eb35e9303b5fcf3", "Url": "https://api.github.com/repos/xXLupoXx/MyPet", "Date": "2012-12-12T10:44:31Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (node == null) { node = org.talend.repository.model.RepositoryNodeUtilities.getRepositoryNode(((org.talend.repository.model.IRepositoryNode) (view.getRoot())), curNode, view, expanded); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1884/buggy-version/main.plugins.org.talend.core.runtime.src.main.java.org.talend.repository.model.RepositoryNodeUtilities.java", "BodyUseAPI": [], "Fixed commit": "e68e4df83d8421e5584e69a928b0b7dce16d4d5b", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2016-07-02T08:44:27Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["view.getRoot().getRootRepositoryNode(curNode.getRepositoryObjectType())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (nodeFromType != null) { node = org.talend.repository.model.RepositoryNodeUtilities.getRepositoryNode(nodeFromType, curNode, view, expanded); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1884/buggy-version/main.plugins.org.talend.core.runtime.src.main.java.org.talend.repository.model.RepositoryNodeUtilities.java", "BodyUseAPI": ["org.talend.repository.model.RepositoryNodeUtilities.getRepositoryNode(org.talend.repository.model.IRepositoryNode,org.talend.core.model.repository.IRepositoryViewObject,org.talend.repository.ui.views.IRepositoryView,boolean)"], "Fixed commit": "e68e4df83d8421e5584e69a928b0b7dce16d4d5b", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2016-07-02T08:44:27Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tk.greydynamics.Game.Core.singleEBXTool)) { if ((ebxHandler.getEBXFiles()) != null) { tk.greydynamics.Resource.Frostbite3.EBX.EBXFile file = ebxHandler.getEBXFileByGUID(externalGUID.getFileGUID(), false, false); if (file != null) { return ((file.getTruePath()) + \" \") + (externalGUID.getInstanceGUID()); }else { tk.greydynamics.Resource.Frostbite3.Toc.ResourceLink resLink = tk.greydynamics.Game.Core.getGame().getResourceHandler().getResourceLinkByEBXGUID(externalGUID.getFileGUID()); if (resLink != null) { return ((resLink.getName()) + \" \") + (externalGUID.getInstanceGUID()); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4718/buggy-version/src.tk.greydynamics.JavaFX.CellFactories.JavaFXebxTCF.java", "BodyUseAPI": [], "Fixed commit": "082a5a0f71d5ba4533f886e27e1ba1da943c89f2", "Url": "https://api.github.com/repos/GreyDynamics/Frostbite3_Editor", "Date": "2016-09-03T09:15:26Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (executionMode.isToExecuteRealImplementation(mock)) { return java.lang.Void.class; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5525/buggy-version/main.src.mockit.internal.expectations.RecordAndReplayExecution.java", "BodyUseAPI": [], "Fixed commit": "9e6a8849ec2f87d7d3b4a0d8518828ea07d93e6f", "Url": "https://api.github.com/repos/jmockit/jmockit1", "Date": "2015-01-02T14:16:48Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.nasSelector.equals(nasSelector))) { this.nasSelector = nasSelector; init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/9221/buggy-version/src.main.java.org.therismos.web.NasBean.java", "BodyUseAPI": [], "Fixed commit": "83704040bdd58e010c8149dd2829596515d1f526", "Url": "https://api.github.com/repos/cpliu338/choffice", "Date": "2017-09-09T04:02:54Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.length()) > 0) { if ((((sb.length()) >= 2) && ((sb.charAt(0)) == '[')) && ((sb.charAt(1)) == ']')) { java.lang.Class<?> arrayClazz = null; if (className.startsWith(eu.stratosphere.api.java.typeutils.TypeInformation.TUPLE_PACKAGE)) { arrayClazz = java.lang.Class.forName(((\"[L\" + className) + \";\")); }else { arrayClazz = java.lang.Class.forName(((((\"[L\" + (eu.stratosphere.api.java.typeutils.TypeInformation.TUPLE_PACKAGE)) + \".\") + className) + \";\")); } returnType = eu.stratosphere.api.java.typeutils.ObjectArrayTypeInfo.getInfoFor(arrayClazz, new eu.stratosphere.api.java.typeutils.TupleTypeInfo(clazz, types)); }else if (((sb.length()) >= 1) && ((sb.charAt(0)) == '[')) { }else { returnType = new eu.stratosphere.api.java.typeutils.TupleTypeInfo(clazz, types); } }else { returnType = new eu.stratosphere.api.java.typeutils.TupleTypeInfo(clazz, types); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/660/buggy-version/stratosphere-java.src.main.java.eu.stratosphere.api.java.typeutils.TypeInformation.java", "BodyUseAPI": ["java.lang.StringBuilder.charAt(int)", "java.lang.StringBuilder.charAt(int)", "java.lang.StringBuilder.length()", "java.lang.StringBuilder.length()", "java.lang.StringBuilder.charAt(int)"], "Fixed commit": "dc59071f62c0194e8d4072958be60308f4ebaf5a", "Url": "https://api.github.com/repos/twalthr/stratosphere", "Date": "2014-05-02T06:58:25Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.traccar.MQTTDataHandler.getPreviousPosition(device.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((previousPosition != null) && ((position.getAttributes()) != null)) { if (((position.getAttributes().get(\"odometer\")) == null) && ((previousPosition.getAttributes().get(\"odometer\")) != null)) { java.lang.System.out.println((\"[WARN] Odometer is not set, using the odometer from previous position for deviceId=\" + (device.getUniqueId()))); position.set(\"odometer\", java.lang.Double.valueOf(java.lang.String.valueOf(previousPosition.getAttributes().get(\"odometer\")))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4431/buggy-version/src.org.traccar.MQTTDataHandler.java", "BodyUseAPI": ["previousPosition.getAttributes().get(java.lang.String)", "org.traccar.model.Position.getAttributes()", "previousPosition.getAttributes().get(java.lang.String)", "position.getAttributes().get(java.lang.String)", "java.lang.String.valueOf(previousPosition.getAttributes().get(\"odometer\"))", "java.lang.Double.valueOf(java.lang.String)", "org.traccar.model.Position.set(java.lang.String,java.lang.Double)", "org.traccar.model.Position.getAttributes()", "org.traccar.model.Position.getAttributes()"], "Fixed commit": "18fe90f9da67d1dc0beb94557d81059765b2be69", "Url": "https://api.github.com/repos/fleetr-eu/traccar", "Date": "2016-09-08T07:43:58Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((q.getKeys()) != null) && ((q.getKeysValues().size()) > 0)) { pagedQuery.keys(q.getKeysValues()); }else { if ((pr.getStartKey()) != null) { pagedQuery.startKey(pr.getStartKey()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1140/buggy-version/org.ektorp.src.main.java.org.ektorp.PageRequest.java", "BodyUseAPI": ["org.ektorp.ViewQuery.getKeysValues()", "org.ektorp.ViewQuery.keys(q.getKeysValues())"], "Fixed commit": "6b2302725ee6f5a61aa6e930370aaeadb519e1ee", "Url": "https://api.github.com/repos/cberkeley/Ektorp", "Date": "2016-07-06T14:35:28Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.homesky.homecloud.HomecloudHolder.instance) != null) com.homesky.homecloud.HomecloudHolder.instance.setUrl(url);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6514/buggy-version/app.src.main.java.com.homesky.homecloud.HomecloudHolder.java", "BodyUseAPI": [], "Fixed commit": "8b84d1f113845e99c55a8ae6bd590bc6bcce6b87", "Url": "https://api.github.com/repos/HomeSkyLtd/homecloud-app", "Date": "2017-07-10T18:25:52Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (verified) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/387/buggy-version/clc.modules.walrus.src.main.java.edu.ucsb.eucalyptus.cloud.ws.WalrusImageManager.java", "BodyUseAPI": [], "Fixed commit": "6a918c50ef4e46a31e4330a40d304f0b198a1eb6", "Url": "https://api.github.com/repos/eucalyptus/eucalyptus", "Date": "2013-08-21T06:29:14Z"},
{"Line": "=>644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.sheffield.leapmotion.controller.SeededController.initialized())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/570/buggy-version/leap.src.main.java.com.sheffield.leapmotion.App.java", "BodyUseAPI": [], "Fixed commit": "cfa39062d1868bd84a36b4146d78a444792a05c0", "Url": "https://api.github.com/repos/thomasdeanwhite/NuiMimic", "Date": "2017-03-24T16:18:38Z"},
{"Line": "=>583", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tisch.getSechserskat())) { skatLength = skatLength - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/82/buggy-version/src.skat09.ui.gui.HFenster.java", "BodyUseAPI": [], "Fixed commit": "51bb95570533b4252f939fb037dbc3f212e5bb42", "Url": "https://api.github.com/repos/BuZZ-dEE/skat09", "Date": "2015-06-12T18:05:07Z"},
{"Line": "=>615", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tisch.getSechserskat())) { skatLength = skatLength - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/82/buggy-version/src.skat09.ui.gui.HFenster.java", "BodyUseAPI": [], "Fixed commit": "51bb95570533b4252f939fb037dbc3f212e5bb42", "Url": "https://api.github.com/repos/BuZZ-dEE/skat09", "Date": "2015-06-12T18:05:07Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((tag.getDropletPath()) != null) && (!(org.apache.commons.lang3.StringUtils.defaultString(tag.getDropletPath()).startsWith(\"/\")))) { java.lang.System.err.println(java.lang.String.format(\"WARNING bad tag : component=%s, path=%s\", tag.getComponentPath(), fullPagePath.toAbsolutePath().toString())); tag.setComponentPath((\"/\" + (tag.getComponentPath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1776/buggy-version/src.main.java.mdp.personal.tlj.tagscan.tools.PageFileProcessor.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,tag.getComponentPath(),java.lang.String)", "mdp.personal.tlj.tagscan.model.Tag.getComponentPath()", "mdp.personal.tlj.tagscan.model.Tag.setComponentPath((\"/\" + (tag.getComponentPath())))", "java.io.PrintStream.println(java.lang.String)", "mdp.personal.tlj.tagscan.model.Tag.getComponentPath()"], "Fixed commit": "e142221eada2e03afcb3aa8f7e96d94d3ae04b13", "Url": "https://api.github.com/repos/tylerljohnson/wrk.emktg-scan", "Date": "2017-11-30T16:20:56Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.equals(\"ceylon.language\")) { msg += \" try running with '--link-with-current-distribution'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2320/buggy-version/runtime.impl.src.main.java.ceylon.modules.jboss.runtime.AbstractJBossRuntime.java", "BodyUseAPI": [], "Fixed commit": "4d0523717871efed7e106f7636b25a7406f41070", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2016-07-26T16:55:11Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (permissions.hasGroupSupport()) { useGroup = true; }else { getLogger().info((((COLOR_RED) + \"Permission plugin does NOT support groups! Disabling NamelessMC group synchronisation.\") + (COLOR_RESET))); useGroup = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1451/buggy-version/com.namelessmc.namelessplugin.spigot.NamelessPlugin.java", "BodyUseAPI": [], "Fixed commit": "60ea0543786e35e04ce2b21d4fbac6809965d1b7", "Url": "https://api.github.com/repos/NamelessMC/Nameless-Plugin", "Date": "2016-12-02T17:30:41Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ReplayRewriteContext.HEADER_CONTEXT.equals(flags)) { flags = replayContext.getContextFlags(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3413/buggy-version/wayback-core.src.main.java.org.archive.wayback.replay.html.ReplayParseContext.java", "BodyUseAPI": [], "Fixed commit": "b6948a5380c3e576a672cbd64838780645027b3e", "Url": "https://api.github.com/repos/BitBaron/wayback", "Date": "2016-02-04T00:27:34Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == 0) { byteArrayAsString.append(bytes[i]); }else { byteArrayAsString.append(delimiter).append(bytes[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4339/buggy-version/core.src.main.java.org.apache.carbondata.core.scan.filter.FilterExpressionProcessor.java", "BodyUseAPI": ["java.lang.StringBuffer.append(byte)", "java.lang.StringBuffer.append(byte)"], "Fixed commit": "2a36440af46fc9ed361109990dc9a7c8f367e19e", "Url": "https://api.github.com/repos/pawanmalwal/carbondata", "Date": "2017-08-22T10:19:00Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((!botLeft) && (!botRight)) && (!topLeft)) && topRight) return treeNotTopLeftBotLeftRight; else if ((((!botLeft) && (!botRight)) && (!topLeft)) && (!topRight)) return treeNotAll; else return tree;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/15/buggy-version/core.src.com.lostboy.game.sprites.Tree.java", "BodyUseAPI": [], "Fixed commit": "09046d208c3144f974e1480fa488305891ec890f", "Url": "https://api.github.com/repos/AndyKChan/LostBoys", "Date": "2016-05-27T07:53:25Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((info.getValue(fieldName)) != null) { infoEo.put(CaseFormat.LOWER_UNDERSCORE.to(CaseFormat.LOWER_CAMEL, fieldName), info.getValue(fieldName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4375/buggy-version/src.main.java.org.gooru.nucleus.search.indexers.app.builders.ContentEsIndexSrcBuilder.java", "BodyUseAPI": ["CaseFormat.LOWER_UNDERSCORE.to(CaseFormat.LOWER_CAMEL,java.lang.String)", "io.vertx.core.json.JsonObject.put(CaseFormat.LOWER_UNDERSCORE.to(CaseFormat.LOWER_CAMEL, fieldName),info.getValue(fieldName))", "io.vertx.core.json.JsonObject.getValue(java.lang.String)"], "Fixed commit": "0806e8e8d99b945c8ea2ee838c613ee7d8bc1df3", "Url": "https://api.github.com/repos/RenukaGurumurthy/nucleus-search-indexer", "Date": "2016-04-25T14:21:45Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((step) > (pathSteps)) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3798/buggy-version/src.dr.inference.mcmc.MarginalLikelihoodEstimator.java", "BodyUseAPI": [], "Fixed commit": "b57efe6973191ff8a3a33fab92cea63526b6640e", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2012-03-23T09:55:41Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((latestRatReport) != null) { com.google.android.gms.maps.model.LatLng latestLocation = new com.google.android.gms.maps.model.LatLng(latestRatReport.get_longitude(), latestRatReport.get_latitude()); googleMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(latestLocation).title(latestRatReport.toString())); googleMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(latestLocation, 15)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2457/buggy-version/UDirtyRat.app.src.main.java.edu.gatech.pickleratsapp.cs2340.udirtyrat.controllers.NavigationActivity.java", "BodyUseAPI": [], "Fixed commit": "afb28d9605a0aed632754f27c7145bfcd186b4a8", "Url": "https://api.github.com/repos/rk1998/pickleratsapp", "Date": "2017-10-26T01:25:12Z"},
{"Line": "=>719", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getInputs().size()) == 0) { rewriteGeneric(p); }else { throw org.apache.calcite.util.Util.newInternal((((\"no '\" + visitMethodName) + \"' method found for class \") + (p.getClass().getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3570/buggy-version/core.src.main.java.org.apache.calcite.sql2rel.RelStructuredTypeFlattener.java", "BodyUseAPI": ["org.apache.calcite.sql2rel.RelStructuredTypeFlattener.RewriteRelVisitor.rewriteGeneric(org.apache.calcite.rel.RelNode)", "p.getClass().getName()", "org.apache.calcite.util.Util.newInternal((((\"no '\" + visitMethodName) + \"' method found for class \") + (p.getClass().getName())))", "org.apache.calcite.rel.RelNode.getClass()"], "Fixed commit": "089ac306a149956ad5cf46a8f032400cfd19ab1b", "Url": "https://api.github.com/repos/julienledem/calcite", "Date": "2015-11-04T23:32:48Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dotmarketing.db.DbConnectionFactory.getDBType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.dotmarketing.portlets.categories.business.CategorySQL.MSSQL.equals(x)) { return new com.dotmarketing.portlets.categories.business.MSSQLCategorySQL(); }else if (com.dotmarketing.portlets.categories.business.CategorySQL.ORACLE.equals(x)) { return new com.dotmarketing.portlets.categories.business.OracleCategorySQL(); }else { return new com.dotmarketing.portlets.categories.business.H2CategorySQL(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5362/buggy-version/src.com.dotmarketing.portlets.categories.business.CategorySQL.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "7ae824ea05381c7ab3837bbd2ab5967737d80130", "Url": "https://api.github.com/repos/dotCMS/dotCMS", "Date": "2014-03-04T15:35:56Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((user != null) && (!(org.springframework.util.StringUtils.isEmpty(user.getName())))) data.put(\"username\", user.getName()); else data.put(\"username\", null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3121/buggy-version/src.main.java.com.devops.controller.UserController.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,user.getName())", "com.devops.dto.UserDTO.getName()"], "Fixed commit": "a567d0d5272686ce6750a7a9f33274d2b78ae87a", "Url": "https://api.github.com/repos/SuperLatte/RiskManager", "Date": "2016-11-07T14:39:51Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item instanceof net.minecraft.item.ItemBlock) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3991/buggy-version/src.main.java.blusunrize.immersiveengineering.client.ClientProxy.java", "BodyUseAPI": [], "Fixed commit": "bf1e19153fdc8b35b3a413ff58bfbf1ee071c048", "Url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering", "Date": "2017-07-23T12:33:52Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["instance.getBoardArray()[0][0].getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(test instanceof java.lang.Double)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4272/buggy-version/src.rhsu.board2.basic.implementations.arithmetic.DoubleBoard2.java", "BodyUseAPI": [], "Fixed commit": "c4bdc9373323f2e7ab68fbb92e1cbcb42552b95e", "Url": "https://api.github.com/repos/rhsu/Board", "Date": "2014-06-16T20:47:27Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((config.intervalTicksSyncWeather) < 12000) { config.intervalTicksSyncWeather = 12000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5422/buggy-version/src.main.java.com.github.ucchyocean.cw.CurrentWeatherConfig.java", "BodyUseAPI": [], "Fixed commit": "66d3199ca7f1b752d7755338721024981920435b", "Url": "https://api.github.com/repos/ucchyocean/BukkitCurrentWeather", "Date": "2013-10-21T03:35:59Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selectedTextView.getText().toString().equals(\"\")) { selectedTextView.setError((((\"value must be in between \" + (start)) + \" and \") + (last))); }else { callBack.onSelectingValue(selectNumber); dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5268/buggy-version/MaterialPickerDialog.src.main.java.adil.dev.lib.materialnumberpicker.dialog.NumberPickerDialog.java", "BodyUseAPI": ["android.widget.EditText.setError(java.lang.String)"], "Fixed commit": "f7b0081637728242f71a153ae785a62aeb9cd087", "Url": "https://api.github.com/repos/ch-muhammad-adil/Android-Material-Picker-Dialog", "Date": "2017-02-15T07:46:42Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<T>.getSuperclass()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (sc == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1873/buggy-version/src.main.java.spoon.support.reflect.reference.CtTypeReferenceImpl.java", "BodyUseAPI": [], "Fixed commit": "09cf967419583cf9731b7f5a158d69b0e961fa0a", "Url": "https://api.github.com/repos/INRIA/spoon", "Date": "2015-05-22T12:43:45Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((config.getBoolean((((inv + \".items.\") + itemID) + \".ban\"))) == true) { return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/364/buggy-version/Punisher.src.main.java.me.Zahachos.punish.EventCaller.java", "BodyUseAPI": [], "Fixed commit": "215eaffa3d831051f6f93ff20168ddd2bb38d4cb", "Url": "https://api.github.com/repos/Zahachos/Zaphno", "Date": "2015-02-05T03:36:33Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (descExists) listener.getLogger().println(\"Desc Exists\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1768/buggy-version/src.main.java.org.jenkinsci.plugins.pagerduty.pipeline.PagerDutyTriggerStep.java", "BodyUseAPI": [], "Fixed commit": "42ba9831045657bad19d140f82af80593444948e", "Url": "https://api.github.com/repos/jenkinsci/pagerduty-plugin", "Date": "2017-12-30T23:26:02Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.isOnline()) player.getPlayer().openInventory(raceInv);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1902/buggy-version/src.main.java.de.tobiyas.racesandclasses.listeners.generallisteners.Listener_Player.java", "BodyUseAPI": ["player.getPlayer().openInventory(de.tobiyas.racesandclasses.datacontainer.traitholdercontainer.gui.HolderInventory)", "de.tobiyas.racesandclasses.datacontainer.player.RaCPlayer.getPlayer()"], "Fixed commit": "91acdb9cff3703b05654c67225d7db50d0a71acb", "Url": "https://api.github.com/repos/tobiyas/RacesAndClasses", "Date": "2016-01-22T13:35:25Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (joy1.getRawButton(12)) { tSpeed = (((boolean) (tSpeed))) ? false : true; while (joy1.getRawButton(12)) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7627/buggy-version/src.org.usfirst.frc.team3603.robot.Robot.java", "BodyUseAPI": ["org.usfirst.frc.team3603.robot.Joystick.getRawButton(int)"], "Fixed commit": "ad92150a9fc03ab79a1e027f655dad3bfbac431e", "Url": "https://api.github.com/repos/CyberCoyotes/2017Steamworks", "Date": "2017-03-09T22:05:24Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tSpeed) { turnSensitivity = 0.5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7627/buggy-version/src.org.usfirst.frc.team3603.robot.Robot.java", "BodyUseAPI": [], "Fixed commit": "ad92150a9fc03ab79a1e027f655dad3bfbac431e", "Url": "https://api.github.com/repos/CyberCoyotes/2017Steamworks", "Date": "2017-03-09T22:05:24Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((\"Choose\".equalsIgnoreCase(status)) || (\"NORMAL\".equalsIgnoreCase(status))) { status = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/28/buggy-version/src.java.com.smi.travel.datalayer.view.dao.impl.TaxInvoiceSummaryReportImpl.java", "BodyUseAPI": [], "Fixed commit": "733e7665c8a3a9b34d03c6d1e8c94222658713bb", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-09-18T03:26:07Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["btInventoryHandler.PantryContents().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(SelectedProduct.Perishable)) { EditTextProductPerishDate.setVisibility(View.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5942/buggy-version/app.src.main.java.blueteam.mypantry.ui.btView_ProductDetails.java", "BodyUseAPI": [], "Fixed commit": "4b11565789f74f45338391b114d40680017ada72", "Url": "https://api.github.com/repos/bytetroll/mypantry", "Date": "2016-04-17T18:15:59Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Bukkit.getPlayer(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(pp.isOnline())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5079/buggy-version/src.main.java.com.tehbeard.tourbus.TourBusComponent.java", "BodyUseAPI": [], "Fixed commit": "1434c9e603120b3c04b732e282aeed419cbf01b8", "Url": "https://api.github.com/repos/hydrox/EscapePlug", "Date": "2012-09-21T01:09:48Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.defenderOdds) == 4) { return; }else { this.defenderOdds = (this.defenderOdds) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/491/buggy-version/app.src.main.java.combatSystem.CombatOdds.java", "BodyUseAPI": [], "Fixed commit": "1cdb6eede7ed65fbcd85fcbe39739c35f9ceb5bb", "Url": "https://api.github.com/repos/JKomoroski/PlatoonLeader", "Date": "2017-07-29T03:48:55Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.util.Xml.newPullParser()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((parser.getPrefix()) == null) { currentItem.setURL(parser.nextText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5945/buggy-version/app.src.main.java.jp.keita.kagurazaka.gojappemod.RssParserTask.java", "BodyUseAPI": ["org.xmlpull.v1.XmlPullParser.nextText()", "jp.keita.kagurazaka.gojappemod.Item.setURL(parser.nextText())"], "Fixed commit": "870db34b4cc9a010ea9ed915227387e89ed12b46", "Url": "https://api.github.com/repos/k-kagurazaka/gojappe-mod", "Date": "2016-03-12T13:36:05Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((window) != null) { persuade = window.getPersuade(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8717/buggy-version/PixelDungeon.src.main.java.com.watabou.pixeldungeon.actors.mobs.npcs.Ghost.java", "BodyUseAPI": [], "Fixed commit": "3004ccac27164d5ae04954b17cec62089d996559", "Url": "https://api.github.com/repos/NYRDS/pixel-dungeon-remix", "Date": "2017-06-09T17:12:24Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sender.hasPermission(\"customhardcore.admin\"))) { throw new com.sk89q.minecraft.util.commands.CommandPermissionsException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4184/buggy-version/src.main.java.org.kepow.customhardcore.CustomHardcoreCommands.java", "BodyUseAPI": [], "Fixed commit": "0e91d295ae174a6baebd1f7af1a56c16bc91df09", "Url": "https://api.github.com/repos/Beskhue/CustomHardcore", "Date": "2015-05-24T19:20:17Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sender.hasPermission(\"customhardcore.admin\"))) { throw new com.sk89q.minecraft.util.commands.CommandPermissionsException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4184/buggy-version/src.main.java.org.kepow.customhardcore.CustomHardcoreCommands.java", "BodyUseAPI": [], "Fixed commit": "0e91d295ae174a6baebd1f7af1a56c16bc91df09", "Url": "https://api.github.com/repos/Beskhue/CustomHardcore", "Date": "2015-05-24T19:20:17Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4674/buggy-version/projects.de.skuzzle.polly.plugin.rx.src.polly.rx.graphs.PointSet.java", "BodyUseAPI": [], "Fixed commit": "91d694d97bf3305f631edccbf164c9515efe5888", "Url": "https://api.github.com/repos/skuzzle/polly", "Date": "2013-08-12T16:42:26Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["polly.rx.graphs.PointSet.calculateScale(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (pointScale == null) { pointScale = new polly.rx.graphs.YScale(\"Points\", 2000, 30000, 2000); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4674/buggy-version/projects.de.skuzzle.polly.plugin.rx.src.polly.rx.core.ScoreBoardManager.java", "BodyUseAPI": [], "Fixed commit": "91d694d97bf3305f631edccbf164c9515efe5888", "Url": "https://api.github.com/repos/skuzzle/polly", "Date": "2013-08-12T16:42:26Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["polly.rx.graphs.PointSet.calculateScale(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rankScale == null) { rankScale = new polly.rx.graphs.YScale(\"Rank\", 0, 1000, 10); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4674/buggy-version/projects.de.skuzzle.polly.plugin.rx.src.polly.rx.core.ScoreBoardManager.java", "BodyUseAPI": [], "Fixed commit": "91d694d97bf3305f631edccbf164c9515efe5888", "Url": "https://api.github.com/repos/skuzzle/polly", "Date": "2013-08-12T16:42:26Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((runOnFirstFixExecutor) != null) { runOnFirstFixExecutor.execute(runnable); }else { android.util.Log.w(eu.ttbox.osm.ui.map.mylocation.MyLocationOverlay.TAG, \"runOnFirstFixExecutor is null : Could not run runOnFirstFix()\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3921/buggy-version/osm-lib.src.eu.ttbox.osm.ui.map.mylocation.MyLocationOverlay.java", "BodyUseAPI": [], "Fixed commit": "c981fedc6bbf41436a903cd2d7ac0b75efc51e67", "Url": "https://api.github.com/repos/jmorille/android", "Date": "2013-03-15T21:20:06Z"},
{"Line": "=>773", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((runOnFirstFixExecutor) != null) { runOnFirstFixExecutor.execute(geocoderTask); }else { android.util.Log.w(eu.ttbox.osm.ui.map.mylocation.MyLocationOverlay.TAG, \"runOnFirstFixExecutor is null : Could not run setBubbleData()\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3921/buggy-version/osm-lib.src.eu.ttbox.osm.ui.map.mylocation.MyLocationOverlay.java", "BodyUseAPI": [], "Fixed commit": "c981fedc6bbf41436a903cd2d7ac0b75efc51e67", "Url": "https://api.github.com/repos/jmorille/android", "Date": "2013-03-15T21:20:06Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((runOnFirstFixExecutor) != null) { runOnFirstFixExecutor.schedule(blinkCallable, 1L, java.util.concurrent.TimeUnit.SECONDS); }else { android.util.Log.w(eu.ttbox.osm.ui.map.mylocation.MyLocationOverlay.TAG, \"runOnFirstFixExecutor is null : Could not run doBlink()\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3921/buggy-version/osm-lib.src.eu.ttbox.osm.ui.map.mylocation.MyLocationOverlay.java", "BodyUseAPI": [], "Fixed commit": "c981fedc6bbf41436a903cd2d7ac0b75efc51e67", "Url": "https://api.github.com/repos/jmorille/android", "Date": "2013-03-15T21:20:06Z"},
{"Line": "=>575", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(SelectionView,java.lang.String,java.lang.String,int,<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == newsMakerName) { javax.swing.JOptionPane.showMessageDialog(selectionView, \"Nothing entered for adding a news maker.\", \"Invalid Selection\", javax.swing.JOptionPane.WARNING_MESSAGE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8334/buggy-version/src.NewsController.java", "BodyUseAPI": [], "Fixed commit": "3ce46f4f9280d65d2984dd1ffa6358ba08d87983", "Url": "https://api.github.com/repos/rchim/CS2334Project4", "Date": "2017-05-04T07:40:34Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (format.equals(FormatConstants.FNC_FORMAT_ID_Tree)) { content = render(jArray, parent, format); }else if (format.equals(FormatConstants.FNC_FORMAT_ID_Grid)) { if ((start == null) || (limit == null)) { content = render(jArray, format); }else { content = render(jArray, start, limit, format); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1129/buggy-version/ames-web-service.src.de.kp.ames.web.function.ns.NsServiceImpl.java", "BodyUseAPI": ["de.kp.ames.web.function.ns.NsServiceImpl.render(org.json.JSONArray,java.lang.String,java.lang.String,java.lang.String)", "java.lang.String.equals(FormatConstants.FNC_FORMAT_ID_Grid)", "de.kp.ames.web.function.ns.NsServiceImpl.render(org.json.JSONArray,java.lang.String,java.lang.String)", "de.kp.ames.web.function.ns.NsServiceImpl.render(org.json.JSONArray,java.lang.String)"], "Fixed commit": "f766c8c5a8af317380dd319fc2628940a400b862", "Url": "https://api.github.com/repos/skrusche63/AMES-Web-Service", "Date": "2012-08-30T15:39:19Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((head.get()) == null) tail = new org.hypergraphdb.transaction.VBox<org.hypergraphdb.transaction.TxList.Node<E>>(txManager, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1392/buggy-version/core.src.java.org.hypergraphdb.transaction.TxList.java", "BodyUseAPI": [], "Fixed commit": "e485b6834a5ee977581b44fe3d0474376ceb27a4", "Url": "https://api.github.com/repos/hypergraphdb/hypergraphdb", "Date": "2017-10-30T05:36:44Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState != null) { getSupportFragmentManager().beginTransaction().replace(R.id.detail_container, fragment).commit(); }else { getSupportFragmentManager().beginTransaction().add(R.id.detail_container, fragment).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5788/buggy-version/app.src.main.java.com.example.leshik.moviedb.DetailActivity.java", "BodyUseAPI": [], "Fixed commit": "f0e7438780de2890abe0f6a3160f256a038f8f83", "Url": "https://api.github.com/repos/alex-karpenko/MovieDB", "Date": "2017-01-22T10:53:29Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState != null) { getSupportFragmentManager().beginTransaction().replace(R.id.fullscreen_content, fragment).commit(); }else { getSupportFragmentManager().beginTransaction().add(R.id.fullscreen_content, fragment).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5788/buggy-version/app.src.main.java.com.example.leshik.moviedb.FullPosterActivity.java", "BodyUseAPI": [], "Fixed commit": "f0e7438780de2890abe0f6a3160f256a038f8f83", "Url": "https://api.github.com/repos/alex-karpenko/MovieDB", "Date": "2017-01-22T10:53:29Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ansi) { java.lang.System.out.print((((colour.getANSI()) + text) + (com.n9mtq4.console.lib.managers.Colour.getAnsiReset()))); }else { java.lang.System.out.print(text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/961/buggy-version/src.com.n9mtq4.console.lib.TextConsole.java", "BodyUseAPI": [], "Fixed commit": "12876f6424cff5e28ac00cfcb9031a978405fff6", "Url": "https://api.github.com/repos/n9Mtq4/LogWindow", "Date": "2014-12-04T23:55:28Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.infinityraider.boatlantern.lantern.IInventoryLantern.getStackInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fuelStack.stackSize) <= 0) { this.setInventorySlotContents(index, null); }else { this.markDirty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/278/buggy-version/src.main.java.com.infinityraider.boatlantern.lantern.IInventoryLantern.java", "BodyUseAPI": [], "Fixed commit": "593527e6830ad172b23280860fc3ddb8533f82c1", "Url": "https://api.github.com/repos/InfinityRaider/BoatLantern", "Date": "2016-12-10T10:56:52Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.Bitmap.copy(Bitmap.Config.ARGB_8888,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(bitmap.isMutable())) return bitmap;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4196/buggy-version/src.main.java.com.example.termowidget.GraphicTask.java", "BodyUseAPI": [], "Fixed commit": "dffaec8ee555e0fa53527d627c70c11341799e40", "Url": "https://api.github.com/repos/7554732/TermoWidget", "Date": "2017-10-14T17:15:09Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(exception instanceof java.lang.Throwable)) throw new java.lang.IllegalArgumentException(\"OBJECT PASSED AS AN EXCEPTION IS INVALID\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5931/buggy-version/ParaTaskLambda.src.pt.runtime.Slot.java", "BodyUseAPI": [], "Fixed commit": "d494900b4a4cf41e5ce7c2fab843e0cbca39f153", "Url": "https://api.github.com/repos/ParallelAndReconfigurableComputing/ParallelTask", "Date": "2017-03-17T09:07:56Z"},
{"Line": "=>1646", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s instanceof boa.compiler.visitors.IfStatement) { final boa.compiler.visitors.IfStatement ifs = ((boa.compiler.visitors.IfStatement) (s)); if (ifs.hasElse()) return lastStatementIsStop(ifs.getElse()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5440/buggy-version/src.java.boa.compiler.visitors.CodeGeneratingVisitor.java", "BodyUseAPI": [], "Fixed commit": "2553089d694a44cbbebacabf01d3a2b68faa9f60", "Url": "https://api.github.com/repos/JingyiSu/compiler", "Date": "2016-05-04T19:43:44Z"},
{"Line": "=>1654", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["boa.compiler.visitors.Statement.getStatements()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((stmts.size()) > 0) return lastStatementIsStop(stmts.get(((stmts.size()) - 1)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5440/buggy-version/src.java.boa.compiler.visitors.CodeGeneratingVisitor.java", "BodyUseAPI": ["boa.compiler.visitors.CodeGeneratingVisitor.lastStatementIsStop(stmts.get(((stmts.size()) - 1)))", "java.util.List<boa.compiler.visitors.Statement>.size()", "java.util.List<boa.compiler.visitors.Statement>.get(((stmts.size()) - 1))"], "Fixed commit": "2553089d694a44cbbebacabf01d3a2b68faa9f60", "Url": "https://api.github.com/repos/JingyiSu/compiler", "Date": "2016-05-04T19:43:44Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (this.next)) this.next = next; else this.next.setNext(next);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7549/buggy-version/src.main.java.iad1.hashtable.MathijsHashTable.java", "BodyUseAPI": [], "Fixed commit": "dae6c8ce9507897d503cc1dd6df401d6af355529", "Url": "https://api.github.com/repos/mbernson/iad1", "Date": "2015-09-18T09:59:19Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (finalpos < (sentence.length())) { c.setContent(sentence.substring(finalpos, sentence.length())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/531/buggy-version/src.main.java.eu.learnpad.ca.analysis.correctness.CorrectnessAnalysis.java", "BodyUseAPI": ["java.lang.String.length()", "eu.learnpad.ca.rest.data.Content.setContent(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "09ea237b85453e9a2520fbeea4b7112ff5b8052c", "Url": "https://api.github.com/repos/ISTI-FMT-LearnPAd/ContentAnalysisComponent", "Date": "2015-07-23T15:17:18Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (precedentposition > (match.getFromPos())) { precedentposition = match.getFromPos(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/531/buggy-version/src.main.java.eu.learnpad.ca.analysis.correctness.CorrectnessAnalysis.java", "BodyUseAPI": ["org.languagetool.rules.RuleMatch.getFromPos()"], "Fixed commit": "09ea237b85453e9a2520fbeea4b7112ff5b8052c", "Url": "https://api.github.com/repos/ISTI-FMT-LearnPAd/ContentAnalysisComponent", "Date": "2015-07-23T15:17:18Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["c.getPlayer().getMap().getMapObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((player.isHidden()) && (!(c.getPlayer().isGM()))) return; else if (((player.isGM()) && (!(c.getPlayer().isGM()))) && (!(constants.ServerConstants.ALLOW_INFO_ON_GMS))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6128/buggy-version/src.net.server.handlers.channel.CharInfoRequestHandler.java", "BodyUseAPI": ["c.getPlayer().isGM()", "client.MapleCharacter.isGM()", "client.MapleClient.getPlayer()"], "Fixed commit": "5a20d14ae3276921b362efd15593616153a3aee5", "Url": "https://api.github.com/repos/aaronweiss74/Orpheus", "Date": "2012-05-14T00:36:25Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(plugin.getConfig().getBoolean(\"localeDownload\", true))) { cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7399/buggy-version/src.main.java.think.rpgitems.data.Locale.java", "BodyUseAPI": [], "Fixed commit": "c4f04bb8af13fdd76198fc3b238e0e2d8afd7457", "Url": "https://api.github.com/repos/thinkofdeath/RPG-Items", "Date": "2013-04-26T21:13:28Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isDisposed())) { final org.jfree.chart.plot.XYPlot plot = jfreeChart.getXYPlot(); removeMarkers(type); for (final org.jfree.chart.plot.Marker marker : markersByType.get(type)) { plot.addDomainMarker(marker); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2741/buggy-version/Software.development.data.com.trivadis.loganalysis.ui.src.com.trivadis.loganalysis.ui.ChartPanel.java", "BodyUseAPI": [], "Fixed commit": "f4844984e05d81449ec17f94dd36dc6f5212b1b9", "Url": "https://api.github.com/repos/raffaelschmid/bachelorthesis", "Date": "2011-09-20T22:27:17Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isDisposed())) { final org.jfree.chart.plot.XYPlot plot = jfreeChart.getXYPlot(); for (final org.jfree.chart.plot.Marker marker : markersByType.get(type)) { plot.removeDomainMarker(marker); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2741/buggy-version/Software.development.data.com.trivadis.loganalysis.ui.src.com.trivadis.loganalysis.ui.ChartPanel.java", "BodyUseAPI": [], "Fixed commit": "f4844984e05d81449ec17f94dd36dc6f5212b1b9", "Url": "https://api.github.com/repos/raffaelschmid/bachelorthesis", "Date": "2011-09-20T22:27:17Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (null != firstLine) { java.util.regex.Matcher matcher = press.Compressor.HEADER_PATTERN.matcher(firstLine); if (matcher.matches()) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2949/buggy-version/app.press.Compressor.java", "BodyUseAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Fixed commit": "719f1fe38fb4ee091dcdbae1650f9e6c0d2d3fef", "Url": "https://api.github.com/repos/rore/press", "Date": "2011-09-25T20:39:57Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i % 3) == 0) { b.setBoardName(\"poo\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6489/buggy-version/Game-On.app.src.main.java.com.example.ttpm.game_on.fragments.HostSearchFragment.java", "BodyUseAPI": [], "Fixed commit": "4c675a50855ab3b66877f481168ee5a638b7f04c", "Url": "https://api.github.com/repos/trihan51/Game-On", "Date": "2016-02-08T07:11:17Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i % 2) == 0) { b.setBoardName(\"hello\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6489/buggy-version/Game-On.app.src.main.java.com.example.ttpm.game_on.fragments.HostSearchFragment.java", "BodyUseAPI": [], "Fixed commit": "4c675a50855ab3b66877f481168ee5a638b7f04c", "Url": "https://api.github.com/repos/trihan51/Game-On", "Date": "2016-02-08T07:11:17Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (configReader.getXmlFileLocaton().contains(\"config.xml\")) { java.lang.String newFileName = ((configReader.getXmlFileLocaton().split(\"\\\\.\")[0]) + (configReader.readRasPiId())) + \".xml\"; sendFile(newFileName); }else { sendFile(configReader.getXmlFileLocaton()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1269/buggy-version/src.NetworkSender.java", "BodyUseAPI": ["EncodeDecodeXml.readRasPiId()", "configReader.getXmlFileLocaton().split(java.lang.String)", "EncodeDecodeXml.getXmlFileLocaton()", "EncodeDecodeXml.getXmlFileLocaton()", "NetworkSender.sendFile(configReader.getXmlFileLocaton())"], "Fixed commit": "a949a6794fd61e99173bfbca73e75b27d1043287", "Url": "https://api.github.com/repos/projectmunin/munin-Network-Module", "Date": "2014-03-11T13:22:35Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.venice.piazza.idam.data.MongoAccessor.getUserProfileByApiKey(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (userProfile == null) { userProfile = new model.security.authz.UserProfile(); userProfile.setUsername(mongoAccessor.getUsername(uuid)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1912/buggy-version/src.main.java.org.venice.piazza.idam.controller.AuthenticationController.java", "BodyUseAPI": [], "Fixed commit": "e790b18bde1ed7b35b9f9d755bbdf37494c43e84", "Url": "https://api.github.com/repos/venicegeo/pz-idam", "Date": "2016-11-22T14:49:02Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currentPage) < 1) { this.currentPage = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1303/buggy-version/jsf-spring.src.main.java.javax.persistence.filter.jsf.FilterBean.java", "BodyUseAPI": [], "Fixed commit": "479eefdda291026c9a48d818380bd3822c6b502d", "Url": "https://api.github.com/repos/michelrisucci/jpa-jpql-filter", "Date": "2016-01-14T19:52:27Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.getDataFolder().exists())) this.getDataFolder().mkdir();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6048/buggy-version/src.main.java.me.FrejNielsen.EasyBan.EasyBan.java", "BodyUseAPI": [], "Fixed commit": "c9b3fb9def4cfeda0da22056895edeadb871d990", "Url": "https://api.github.com/repos/CountedReturns/EasyBan", "Date": "2016-10-08T12:35:18Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((schedule.getPilots()) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6521/buggy-version/app.src.main.java.net.exent.flywithme.data.Database.java", "BodyUseAPI": [], "Fixed commit": "3d7ab889178156f42c056b263ff6d77a225bc3da", "Url": "https://api.github.com/repos/canidae/FlyWithMe", "Date": "2016-02-16T20:51:02Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["blogs.get(which).getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((blogMapBackup.get(id)) != null) { blogMap.put(id, blogMapBackup.get(id)); }else { blogMap.put(id, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1844/buggy-version/app.src.main.java.com.teinvdlugt.android.bloggerreader.MainActivity.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Boolean>.put(java.lang.String,boolean)", "java.util.Map<java.lang.String, java.lang.Boolean>.put(java.lang.String,java.lang.Boolean)", "java.util.HashMap<java.lang.String, java.lang.Boolean>.get(java.lang.String)"], "Fixed commit": "3f47ea2881ae1715b0961305400a5261065edd6d", "Url": "https://api.github.com/repos/teinvdlugt/BloggerReader", "Date": "2016-01-18T17:05:19Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mListeners.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3368/buggy-version/Core.src.org.droidplanner.core.MAVLink.connection.MavLinkConnection.java", "BodyUseAPI": [], "Fixed commit": "81397605943a528d0106db4c00289fb2ff46cc20", "Url": "https://api.github.com/repos/TShapinsky/droidplanner", "Date": "2014-08-24T14:25:20Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mListeners.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3368/buggy-version/Core.src.org.droidplanner.core.MAVLink.connection.MavLinkConnection.java", "BodyUseAPI": [], "Fixed commit": "81397605943a528d0106db4c00289fb2ff46cc20", "Url": "https://api.github.com/repos/TShapinsky/droidplanner", "Date": "2014-08-24T14:25:20Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mListeners.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3368/buggy-version/Core.src.org.droidplanner.core.MAVLink.connection.MavLinkConnection.java", "BodyUseAPI": [], "Fixed commit": "81397605943a528d0106db4c00289fb2ff46cc20", "Url": "https://api.github.com/repos/TShapinsky/droidplanner", "Date": "2014-08-24T14:25:20Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedList<com.ds.avare.shapes.TFRShape>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == todraw) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5208/buggy-version/app.src.main.java.com.ds.avare.shapes.TFRShape.java", "BodyUseAPI": [], "Fixed commit": "695b63fd61b4145ba6094fb0b0a413257bed7830", "Url": "https://api.github.com/repos/postalservice14/avare", "Date": "2015-09-29T13:44:53Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((map.get(\"applicationDetails\")) != null) { creds.applicationDetails = com.apifest.oauth20.JSONUtils.convertStringToMap(map.get(\"applicationDetails\").toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1877/buggy-version/apifest-oauth20.src.main.java.com.apifest.oauth20.ClientCredentials.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "com.apifest.oauth20.JSONUtils.convertStringToMap(java.lang.String)"], "Fixed commit": "e2889e605f1a5a1dd9e7f85d35e4a4175b143950", "Url": "https://api.github.com/repos/apostolterziev/apifest-oauth20", "Date": "2015-02-26T14:04:56Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mapDecorator) == null) { initializeMaps(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8682/buggy-version/plugins.org.modelexecution.xmof.animation.core.src.org.modelexecution.xmof.animation.decorator.DiagramDecorator.java", "BodyUseAPI": [], "Fixed commit": "20de9e46c75598650296d4e3ebfc071197b48e93", "Url": "https://api.github.com/repos/moliz/moliz.gemoc", "Date": "2016-08-22T20:12:33Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dictLoaded)) { cntrl.loadDictionary(\"myDictionary.txt\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2078/buggy-version/src.views.MainSetupView.java", "BodyUseAPI": [], "Fixed commit": "a2ef2e7720582f117f6c5978bcb23b80a1b12a69", "Url": "https://api.github.com/repos/castroev/VocabApp", "Date": "2015-07-05T03:24:31Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.server.HttpResponseGenerator.readInRoutes()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(routesString.equals(\"\"))) { java.lang.String[] allRoutes = routesString.split(\"\\n\"); for (java.lang.String route : allRoutes) { routes.put(route.split(\"\\\\|\")[0].trim(), route.split(\"\\\\|\")[1].trim()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5638/buggy-version/src.com.server.HttpResponseGenerator.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "43facc8f8c8715306b8bc506cc17c14925830957", "Url": "https://api.github.com/repos/dcmoore/java-server", "Date": "2011-10-04T16:20:31Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.server.HttpResponseGenerator.getFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(routesFile.exists())) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5638/buggy-version/src.com.server.HttpResponseGenerator.java", "BodyUseAPI": [], "Fixed commit": "43facc8f8c8715306b8bc506cc17c14925830957", "Url": "https://api.github.com/repos/dcmoore/java-server", "Date": "2011-10-04T16:20:31Z"},
{"Line": "=>1558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pepsoft.worldpainter.Tile.getSeeds()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (seeds != null) { for (org.pepsoft.worldpainter.gardenofeden.Seed gardenSeed : seeds) { gardenSeed.garden = garden; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2812/buggy-version/WorldPainter.WPCore.src.main.java.org.pepsoft.worldpainter.Dimension.java", "BodyUseAPI": [], "Fixed commit": "0050dbf919028508fa81ee3443cc38668c22613c", "Url": "https://api.github.com/repos/Captain-Chaos/WorldPainter", "Date": "2015-06-27T18:31:30Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!found) { throw new java.security.InvalidParameterException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4377/buggy-version/src.edu.mccc.cos210.fp2014.cm.game.Board.java", "BodyUseAPI": [], "Fixed commit": "df17cb855e48fe520e1a5efe21c98be629fd393f", "Url": "https://api.github.com/repos/Unstable-Robert/Checkmate3000NetworkAIEdition", "Date": "2014-04-22T01:19:05Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!found) { throw new java.util.NoSuchElementException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4377/buggy-version/src.edu.mccc.cos210.fp2014.cm.game.Board.java", "BodyUseAPI": [], "Fixed commit": "df17cb855e48fe520e1a5efe21c98be629fd393f", "Url": "https://api.github.com/repos/Unstable-Robert/Checkmate3000NetworkAIEdition", "Date": "2014-04-22T01:19:05Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(hasChannel(address.getElement(0)))) { throw new org.jboss.as.clustering.jgroups.subsystem.NoSuchResourceException(address.getElement(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4911/buggy-version/clustering.jgroups.src.main.java.org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemRootResource.java", "BodyUseAPI": ["org.jboss.as.controller.PathAddress.getElement(int)"], "Fixed commit": "d0a0130d0aa2bf3c5c99bab71ce0096d740db648", "Url": "https://api.github.com/repos/onagano-rh/jboss-as", "Date": "2013-04-26T20:12:32Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dimIdx == (n)) return dimIdx;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/88/buggy-version/src.main.java.net.imglib2.img.array.ArrayImg.java", "BodyUseAPI": [], "Fixed commit": "fc0d3ebcd9256e60961180952c0383c47e63d111", "Url": "https://api.github.com/repos/imglib/imglib2", "Date": "2014-10-24T10:02:38Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parameter instanceof io.swagger.models.parameters.BodyParameter) { io.swagger.models.Model schema = ((io.swagger.models.parameters.BodyParameter) (parameter)).getSchema(); if (schema instanceof io.swagger.models.ArrayModel) { io.swagger.models.ArrayModel model = ((io.swagger.models.ArrayModel) (schema)); io.swagger.models.properties.Property property = model.getItems(); if (property instanceof io.swagger.models.properties.RefProperty) { io.swagger.models.properties.RefProperty refProperty = ((io.swagger.models.properties.RefProperty) (property)); java.lang.String simpleRef = refProperty.getSimpleRef(); c = config.getModelMapping(simpleRef); try { c = java.lang.Class.forName(((\"[L\" + (c.getName())) + \";\")); isArray = true; } catch (java.lang.ClassNotFoundException e) { } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/361/buggy-version/src.main.java.io.swagger.inflector.SwaggerOperationController.java", "BodyUseAPI": [], "Fixed commit": "30fd6ac656f21d5c84dbf7aed8093feefc400cb3", "Url": "https://api.github.com/repos/jsalts/swagger-inflector", "Date": "2015-08-17T14:21:55Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isArray) { args[i] = java.util.Arrays.asList(((java.lang.Object[]) (o))); }else { args[i] = o; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/361/buggy-version/src.main.java.io.swagger.inflector.SwaggerOperationController.java", "BodyUseAPI": [], "Fixed commit": "30fd6ac656f21d5c84dbf7aed8093feefc400cb3", "Url": "https://api.github.com/repos/jsalts/swagger-inflector", "Date": "2015-08-17T14:21:55Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (game.getShortLivingLKI(sourceId, Zone.BATTLEFIELD)) { sourcePermanent = ((mage.game.permanent.Permanent) (game.getLastKnownInformation(getSourceId(), Zone.BATTLEFIELD))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8764/buggy-version/Mage.src.mage.abilities.common.DiesThisOrAnotherCreatureTriggeredAbility.java", "BodyUseAPI": ["mage.game.Game.getLastKnownInformation(getSourceId(),Zone.BATTLEFIELD)"], "Fixed commit": "d94a2712baa8da5aa003c6d18a91a05faedc86ef", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2015-11-28T11:52:13Z"},
{"Line": "=>616", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.joda.time.Days.daysBetween(userTrial.getTrialStartDate(), surveyDateTime).getDays()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((daysInTrial % cycleLength) == 0) { cycle = daysInTrial / cycleLength; }else { cycle = (daysInTrial / cycleLength) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1399/buggy-version/src.org.ohmage.trialist.processor.TrialistAnalysisProcessor.java", "BodyUseAPI": [], "Fixed commit": "50e3d08a302384e2472f628309163300bff07574", "Url": "https://api.github.com/repos/ohmage/trialist-results-processor", "Date": "2014-04-16T21:00:47Z"},
{"Line": "=>610", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (participantStartedOnDayZero) { daysInTrial++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1399/buggy-version/src.org.ohmage.trialist.processor.TrialistAnalysisProcessor.java", "BodyUseAPI": [], "Fixed commit": "50e3d08a302384e2472f628309163300bff07574", "Url": "https://api.github.com/repos/ohmage/trialist-results-processor", "Date": "2014-04-16T21:00:47Z"},
{"Line": "=>607", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.joda.time.Days.daysBetween(userTrial.getTrialStartDate(), surveyDateTime).getDays()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (daysInTrial == 0) { participantStartedOnDayZero = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1399/buggy-version/src.org.ohmage.trialist.processor.TrialistAnalysisProcessor.java", "BodyUseAPI": [], "Fixed commit": "50e3d08a302384e2472f628309163300bff07574", "Url": "https://api.github.com/repos/ohmage/trialist-results-processor", "Date": "2014-04-16T21:00:47Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mostRecentPreviousRecord.getEventType()) != null) && (mostRecentPreviousRecord.getEventType().equals(org.openstack.atlas.usagerefactor.DELETE_LOADBALANCER))) { return processedRecords; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3594/buggy-version/jobs.src.main.java.org.openstack.atlas.usagerefactor.UsageRollupProcessorImpl.java", "BodyUseAPI": [], "Fixed commit": "9a7da2f47e7fe7631b23936be7bdabbacfa1ae49", "Url": "https://api.github.com/repos/lbrackspace/atlas-lb", "Date": "2013-05-22T20:36:11Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((variable.getDistribution()) == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/653/buggy-version/src.main.java.eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.validation.ValidResponseValueMustBeANumberOnContinuousScaleLevelValidator.java", "BodyUseAPI": [], "Fixed commit": "4f3e58a06a38367c214284e03ad36a932890d30c", "Url": "https://api.github.com/repos/dzhw/metadatamanagement", "Date": "2016-04-26T12:35:34Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["railo.runtime.orm.hibernate.HibernateUtil._validateColumnName(metaData.getPropertyNames(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (res != null) return res;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5329/buggy-version/railo-java.railo-core.src.railo.runtime.orm.hibernate.HibernateUtil.java", "BodyUseAPI": [], "Fixed commit": "8821a33400bc80f695da62deb0a9aa2e93f2c00e", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-10-17T14:05:22Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hibernate.metadata.ClassMetadata.getIdentifierType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type.isComponentType()) { java.lang.String res = railo.runtime.orm.hibernate.HibernateUtil._validateColumnName(((org.hibernate.type.ComponentType) (type)).getPropertyNames(), name); if (res != null) return res; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5329/buggy-version/railo-java.railo-core.src.railo.runtime.orm.hibernate.HibernateUtil.java", "BodyUseAPI": [], "Fixed commit": "8821a33400bc80f695da62deb0a9aa2e93f2c00e", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-10-17T14:05:22Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.personalfinance.database.TransactionDAO.getAllTransactions(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((index > (outcomeTransactions.size())) || (index < 0)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7902/buggy-version/src.org.personalfinance.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8ccd6b206e70341ae8240aded68e79064ac17e70", "Url": "https://api.github.com/repos/borer/PersonalFinance", "Date": "2013-01-16T00:32:08Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vidsapp.VideosListFragment.getAdapter()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (adapter != null) { adapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/498/buggy-version/app.src.main.java.com.vidsapp.VidsActivity.java", "BodyUseAPI": ["com.vidsapp.YoutubeNewTOldVideosListAdapter.notifyDataSetChanged()"], "Fixed commit": "feb159a4c8b595d75526a07c2f05912582333538", "Url": "https://api.github.com/repos/atul-nanodegree/VidsApp", "Date": "2016-12-07T14:20:34Z"},
{"Line": "=>888", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inheritPrivs) != null) se.setInheritPrivs(sysEnv, inheritPrivs);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4124/buggy-version/src.server.parser.AlterJobDefinition.java", "BodyUseAPI": [], "Fixed commit": "2f4995a7fe1a09707fef99514b5575d88d21c850", "Url": "https://api.github.com/repos/schedulix/schedulix", "Date": "2016-05-30T14:51:57Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rmn.qa.AutomationDynamicNode.getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nodeStatus == (AutomationDynamicNode.STATUS.TERMINATED)) { if ((java.lang.System.currentTimeMillis()) > ((node.getEndDate().getTime()) + ((30 * 60) * 1000))) { com.rmn.qa.task.AutomationNodeCleanupTask.log.info(java.lang.String.format(\"Removing node [%s] from internal tracking set\", instanceId)); iterator.remove(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5851/buggy-version/src.main.java.com.rmn.qa.task.AutomationNodeCleanupTask.java", "BodyUseAPI": [], "Fixed commit": "c8224a7be6a555c60f448382e43b319e6efa8bf6", "Url": "https://api.github.com/repos/ambirag/SeleniumGridScaler", "Date": "2016-05-24T15:04:25Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (matched) { if (!(pushedData.idleExitSent)) { idler.done(); pushedData.idleExitSent = true; } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1634/buggy-version/sitebricks-mail.src.main.java.com.google.sitebricks.mail.MailClientHandler.java", "BodyUseAPI": [], "Fixed commit": "5985819c689aa5afadcdaa599f9092068e2cc387", "Url": "https://api.github.com/repos/objectos/sitebricks", "Date": "2012-01-31T05:07:00Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.common.dynamicextensions.ndao.TransactionManager.getInstance().newTxn()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (txn != null) { edu.common.dynamicextensions.ndao.TransactionManager.getInstance().commit(txn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7519/buggy-version/software.DynamicExtentions.src.java.edu.common.dynamicextensions.nui.action.CreateFormAction.java", "BodyUseAPI": ["edu.common.dynamicextensions.ndao.TransactionManager.getInstance().commit(edu.common.dynamicextensions.ndao.TransactionManager.Transaction)"], "Fixed commit": "b7dee24c7743d9ea6c0da4af48ff701462b07c7e", "Url": "https://api.github.com/repos/NCIP/catissue-dynamic-extensions", "Date": "2014-06-05T11:21:41Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<kr.co.toywings.floatingbutton.Data>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((data.ICON) == null) { data.BUTTON.setImageResource(data.IMAGE); }else { data.BUTTON.setImageBitmap(data.ICON); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2325/buggy-version/app.src.main.java.kr.co.toywings.floatingbutton.V_FloatingMenu.java", "BodyUseAPI": ["data.BUTTON.setImageResource(data.IMAGE)", "data.BUTTON.setImageBitmap(data.ICON)"], "Fixed commit": "4c66abc38a758f767381009a974aa2e5f9bc4e71", "Url": "https://api.github.com/repos/toywings/FloatingMenu", "Date": "2017-11-09T08:36:15Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentPlayer.place) != 10) { monoply.game.MonopolyBoardPanel.allTiles[secondPlace].performAction(currentPlayer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4949/buggy-version/src.monoply.game.Player.java", "BodyUseAPI": ["monoply.game.MonopolyBoardPanel.allTiles[secondPlace].performAction(monoply.game.Player)"], "Fixed commit": "90857134ce768736c3d1245303bd315df150069d", "Url": "https://api.github.com/repos/yehia67/Monoply-Game", "Date": "2017-10-16T10:55:26Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((dbProvider != null) && ((dbProvider.length()) > 0)) { if (dbProvider.equals(\"SQLServer\")) dbset.setProvider(\"sqlProvider\"); if (dbProvider.equals(\"MySQL\")) dbset.setProvider(\"mySqlProvider\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/270/buggy-version/dal-dao-gen.src.main.java.com.ctrip.platform.dal.daogen.resource.DalGroupDbResource.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "db4127e2b93ed19b01fd06572a33712cda443ba7", "Url": "https://api.github.com/repos/ctripcorp/dal", "Date": "2017-06-09T07:18:42Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { changeText(getString(R.string.button_repositoryImporter_importOk)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7413/buggy-version/app.src.main.java.com.faendir.lightning_launcher.multitool.launcherscript.LauncherScriptFragment.java", "BodyUseAPI": [], "Fixed commit": "a10cc52e4a20b7f00edfed5e55c7e7d1021743e2", "Url": "https://api.github.com/repos/F43nd1r/Multitool", "Date": "2016-03-04T18:02:16Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(OptionsMenu,java.lang.String,java.lang.String,int,<nulltype>,<nulltype>,chart.getUsername())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (username != null) chart.setUsername(username);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4190/buggy-version/src.OptionsMenu.java", "BodyUseAPI": ["ValueChart.setUsername(java.lang.String)"], "Fixed commit": "5c6184a107d87d57d3eb39064861c786257b9fad", "Url": "https://api.github.com/repos/ValueChart/ValueChartPlus", "Date": "2014-06-10T09:01:02Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jf.dexlib.Code.InstructionWithReference.getReferencedItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(referencedItem instanceof org.jf.dexlib.Code.Analysis.MethodIdItem)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4903/buggy-version/dexlib.src.main.java.org.jf.dexlib.Code.Analysis.SyntheticAccessorResolver.java", "BodyUseAPI": [], "Fixed commit": "9a12fbef9912a824a4824e392f0d2fdd5319f580", "Url": "https://api.github.com/repos/kanzure/smali", "Date": "2012-10-09T02:17:08Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jf.dexlib.Code.Format.Instruction22c.getReferencedItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(referencedItem instanceof org.jf.dexlib.Code.Analysis.FieldIdItem)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4903/buggy-version/dexlib.src.main.java.org.jf.dexlib.Code.Analysis.SyntheticAccessorResolver.java", "BodyUseAPI": [], "Fixed commit": "9a12fbef9912a824a4824e392f0d2fdd5319f580", "Url": "https://api.github.com/repos/kanzure/smali", "Date": "2012-10-09T02:17:08Z"},
{"Line": "=>790", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mainActivity.getDrawerLayout()) != null) && (mainActivity.getDrawerLayout().isDrawerVisible(GravityCompat.START))) { mPointProjection = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1497/buggy-version/app.src.main.java.com.ds.avare.views.LocationView.java", "BodyUseAPI": [], "Fixed commit": "d778de46e26fe26bb0d974b4a4b5e37c2b474ad9", "Url": "https://api.github.com/repos/apps4av/avare", "Date": "2016-07-31T05:52:18Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mCurrentPlace.isPrimary()) && (!(mCurrentPlace.isSet()))) { dbHelper.savePlace(mCurrentPlace); }else { dbHelper.updatePlace(mCurrentPlace); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7889/buggy-version/src.main.java.org.tndata.android.compass.activity.PlacesActivity.java", "BodyUseAPI": ["org.tndata.android.compass.database.CompassDbHelper.savePlace(org.tndata.android.compass.model.Place)", "org.tndata.android.compass.database.CompassDbHelper.updatePlace(org.tndata.android.compass.model.Place)"], "Fixed commit": "e030227aa38d932033015397cd64eecf044dc948", "Url": "https://api.github.com/repos/izzyalonso/android-app", "Date": "2015-09-17T14:30:45Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rowIndex == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8500/buggy-version/src.main.java.ca.utoronto.siren.internal.SirenTask.java", "BodyUseAPI": [], "Fixed commit": "8df2daf5dd7386a0b9dbcf38fb43b6e42dce46e4", "Url": "https://api.github.com/repos/BaderLab/SirenApp", "Date": "2013-08-27T16:03:21Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((values.length) < 2) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8500/buggy-version/src.main.java.ca.utoronto.siren.internal.SirenTask.java", "BodyUseAPI": [], "Fixed commit": "8df2daf5dd7386a0b9dbcf38fb43b6e42dce46e4", "Url": "https://api.github.com/repos/BaderLab/SirenApp", "Date": "2013-08-27T16:03:21Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ui.list.swing.BalloonTipSuggestion.getAutoFill()) != null) { UserInterface.textField.setText(((ui.list.swing.BalloonTipSuggestion.getAutoFill()) + \" \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7605/buggy-version/src.ui.list.swing.HotKeyListener.java", "BodyUseAPI": [], "Fixed commit": "ea4faad26fb13f678e471974c321a2b4d3b600e1", "Url": "https://api.github.com/repos/CS2103jan2015-w13-2j/main", "Date": "2015-04-07T05:44:46Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jayway.android.robotium.solo.ViewFetcher.getView(java.lang.Class,java.util.ArrayList<android.widget.ListView>,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((listView.getFirstVisiblePosition()) != (listView.getLastVisiblePosition())) scrollListToLine(listView, listView.getLastVisiblePosition()); else scrollListToLine(listView, ((listView.getFirstVisiblePosition()) + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7099/buggy-version/robotium-solo.src.main.java.com.jayway.android.robotium.solo.Scroller.java", "BodyUseAPI": ["android.widget.ListView.getLastVisiblePosition()", "com.jayway.android.robotium.solo.Scroller.scrollListToLine(android.widget.ListView,((listView.getFirstVisiblePosition()) + 1))", "com.jayway.android.robotium.solo.Scroller.scrollListToLine(android.widget.ListView,listView.getLastVisiblePosition())", "android.widget.ListView.getFirstVisiblePosition()"], "Fixed commit": "0266d24d71a3e22e365f1dcabefcd58ebe2f3c84", "Url": "https://api.github.com/repos/RobotiumTech/robotium", "Date": "2011-02-13T09:29:10Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jayway.android.robotium.solo.ViewFetcher.getView(java.lang.Class,java.util.ArrayList<android.widget.ListView>,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lineToScrollTo == (listView.getLastVisiblePosition())) lineToScrollTo--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7099/buggy-version/robotium-solo.src.main.java.com.jayway.android.robotium.solo.Scroller.java", "BodyUseAPI": [], "Fixed commit": "0266d24d71a3e22e365f1dcabefcd58ebe2f3c84", "Url": "https://api.github.com/repos/RobotiumTech/robotium", "Date": "2011-02-13T09:29:10Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.detroitlabs.icandigit.objects.Treasure>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (treasure != null) { holder.icon.setImageDrawable(context.getResources().getDrawable(R.drawable.ic_treasure)); holder.multiple.setText(\"X\"); holder.counter.setText(java.lang.String.valueOf(treasure.getItemAmount())); holder.treasure.setText(treasure.getItemType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5903/buggy-version/app.src.main.java.com.detroitlabs.icandigit.fragments.adapters.InventoryAdapter.java", "BodyUseAPI": ["com.detroitlabs.icandigit.objects.Treasure.getItemType()", "java.lang.String.valueOf(treasure.getItemAmount())", "android.widget.TextView.setText(treasure.getItemType())", "com.detroitlabs.icandigit.objects.Treasure.getItemAmount()", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "a93932afa0e8dc48a26ca70cb955cf33909ce7dc", "Url": "https://api.github.com/repos/aditishetty/i-can-dig-it", "Date": "2014-10-29T15:42:59Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world instanceof net.minecraft.world.World) return LiquidXPMod.fluid.getIcon(((net.minecraft.world.World) (world)), x, y, z);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/594/buggy-version/src.main.java.da3dsoul.scaryGen.liquidXP.BlockLiquidXP.java", "BodyUseAPI": [], "Fixed commit": "f6cd9958ce54d1c17f4c8ebd3d03bc0978f7cf8d", "Url": "https://api.github.com/repos/da3dsoul/Additional-Buildcraft-Objects", "Date": "2017-01-02T04:25:40Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(data.getColumnIndex(AlexandriaContract.AuthorEntry.AUTHOR))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (authors != null) { java.lang.String[] authorsArr = authors.split(\",\"); ((android.widget.TextView) (rootView.findViewById(R.id.authors))).setLines(authorsArr.length); ((android.widget.TextView) (rootView.findViewById(R.id.authors))).setText(authors.replace(\",\", \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2413/buggy-version/Alexandria.app.src.main.java.it.jaschke.alexandria.AddBook.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "((android.widget.TextView) (rootView.findViewById(R.id.authors))).setText(java.lang.String)"], "Fixed commit": "fdb8018e297b438e3e2b19063e23799256b24849", "Url": "https://api.github.com/repos/trogdan/NanoSuperDuo", "Date": "2015-10-27T17:53:17Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.trentorise.smartcampus.network.JsonUtils.convert(java.lang.Object,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (om != null) { for (java.lang.String key : om.keySet()) d.getValues().put(it.sayservice.platform.smartplanner.data.message.alerts.CreatorType.getAlertType(key), om.get(key)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3427/buggy-version/src.main.java.eu.trentorise.smartcampus.mobilityservice.MobilityDataService.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.keySet()", "d.getValues().put(it.sayservice.platform.smartplanner.data.message.alerts.CreatorType.getAlertType(key),java.lang.String)"], "Fixed commit": "3bce50442f87a2e39b41a54c51e841101b69253f", "Url": "https://api.github.com/repos/smartcampuslab/mobilityservice.client", "Date": "2013-10-29T14:00:30Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.trentorise.smartcampus.network.JsonUtils.convert(java.lang.Object,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (om != null) { for (java.lang.String key : om.keySet()) d.getValues().put(it.sayservice.platform.smartplanner.data.message.alerts.CreatorType.getAlertType(key), om.get(key)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3427/buggy-version/src.main.java.eu.trentorise.smartcampus.mobilityservice.MobilityDataService.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.keySet()", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "d.getValues().put(it.sayservice.platform.smartplanner.data.message.alerts.CreatorType.getAlertType(key),java.lang.String)"], "Fixed commit": "3bce50442f87a2e39b41a54c51e841101b69253f", "Url": "https://api.github.com/repos/smartcampuslab/mobilityservice.client", "Date": "2013-10-29T14:00:30Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.resources.IContainer.getFolder(org.eclipse.core.runtime.Path)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(out.exists())) { out.create(true, true, monitor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/489/buggy-version/plugins.org.obeonetwork.pim.uml2.gen.java.src.org.obeonetwork.pim.uml2.gen.java.services.WorkspaceServices.java", "BodyUseAPI": ["org.eclipse.core.resources.IFolder.create(boolean,boolean,org.eclipse.core.runtime.IProgressMonitor)"], "Fixed commit": "0834e742b08168a4521b408bf6504d4bb3deac20", "Url": "https://api.github.com/repos/ObeoNetwork/UML-Java-Generation", "Date": "2013-04-03T09:55:47Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.resources.IContainer.getFolder(org.eclipse.core.runtime.Path)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(src.exists())) { src.create(true, true, monitor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/489/buggy-version/plugins.org.obeonetwork.pim.uml2.gen.java.src.org.obeonetwork.pim.uml2.gen.java.services.WorkspaceServices.java", "BodyUseAPI": ["org.eclipse.core.resources.IFolder.create(boolean,boolean,org.eclipse.core.runtime.IProgressMonitor)"], "Fixed commit": "0834e742b08168a4521b408bf6504d4bb3deac20", "Url": "https://api.github.com/repos/ObeoNetwork/UML-Java-Generation", "Date": "2013-04-03T09:55:47Z"},
{"Line": "=>589", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.getMatcherForPattern(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((matcher.find(0)) && ((matcher.groupCount()) > 0)) { int end = matcher.end(); consume(end); java.lang.String match = matcher.group(1); if (match == null) val = \"default\"; else val = match; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/554/buggy-version/src.main.java.de.neuland.jade4j.lexer.Lexer.java", "BodyUseAPI": ["java.util.regex.Matcher.end()", "java.util.regex.Matcher.group(int)"], "Fixed commit": "1ef9ba54a36fadc2cf383e23b19a7c1a04d32b6a", "Url": "https://api.github.com/repos/neuland/jade4j", "Date": "2015-10-28T12:24:07Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getClient().newCall(request).execute()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (response.isSuccessful()) { publishResult(responseBody, result); }else { result.abort(new com.github.dm.jrt.retrofit.ErrorResponseException(retrofit2.Response.error(responseBody, response))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3274/buggy-version/androidretrofit.src.main.java.com.github.dm.jrt.android.retrofit.ServiceCallInvocation.java", "BodyUseAPI": ["retrofit2.Response.error(okhttp3.ResponseBody,okhttp3.Response)", "com.github.dm.jrt.core.channel.Channel<com.github.dm.jrt.android.channel.ParcelableSelectable<java.lang.Object>, ?>.abort(com.github.dm.jrt.retrofit.ErrorResponseException)"], "Fixed commit": "d8b9f1847cd4a5784e189d95fc5e8596782de703", "Url": "https://api.github.com/repos/davide-maestroni/jroutine", "Date": "2016-07-12T10:42:55Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrofit2.Call<java.lang.Object>.execute()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (response.isSuccessful()) { result.pass(response.body()); }else { result.abort(new com.github.dm.jrt.retrofit.ErrorResponseException(response)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3274/buggy-version/androidretrofit.src.main.java.com.github.dm.jrt.android.retrofit.ContextAdapterFactory.java", "BodyUseAPI": ["retrofit2.Response<java.lang.Object>.body()", "com.github.dm.jrt.core.channel.Channel<java.lang.Object, ?>.pass(response.body())", "com.github.dm.jrt.core.channel.Channel<java.lang.Object, ?>.abort(com.github.dm.jrt.retrofit.ErrorResponseException)"], "Fixed commit": "d8b9f1847cd4a5784e189d95fc5e8596782de703", "Url": "https://api.github.com/repos/davide-maestroni/jroutine", "Date": "2016-07-12T10:42:55Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrofit2.Call<java.lang.Object>.execute()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (response.isSuccessful()) { result.pass(response.body()); }else { result.abort(new com.github.dm.jrt.retrofit.ErrorResponseException(response)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3274/buggy-version/retrofit.src.main.java.com.github.dm.jrt.retrofit.AbstractAdapterFactory.java", "BodyUseAPI": ["retrofit2.Response<java.lang.Object>.body()", "com.github.dm.jrt.core.channel.Channel<java.lang.Object, ?>.abort(com.github.dm.jrt.retrofit.ErrorResponseException)", "com.github.dm.jrt.core.channel.Channel<java.lang.Object, ?>.pass(response.body())"], "Fixed commit": "d8b9f1847cd4a5784e189d95fc5e8596782de703", "Url": "https://api.github.com/repos/davide-maestroni/jroutine", "Date": "2016-07-12T10:42:55Z"},
{"Line": "=>993", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.coordinator.client.service.impl.CoordinatorClientImpl.getTargetInfo(java.lang.Class,java.lang.String,PropertyInfoExt.TARGET_PROPERTY)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (siteScopePropInfo != null) { info.getProperties().putAll(siteScopePropInfo.getProperties()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/9064/buggy-version/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.service.impl.CoordinatorClientImpl.java", "BodyUseAPI": ["info.getProperties().putAll(siteScopePropInfo.getProperties())", "com.emc.storageos.coordinator.client.model.PropertyInfoExt.getProperties()"], "Fixed commit": "f2487342d038a538d3f35199247fadd6914528da", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-01-06T16:21:37Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5881/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "96081b31a7d6b383fea3ccb90b616077f4d965df", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entity.id) == null) { entity.id = new java.lang.Long(0L); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3785/buggy-version/code.samples.MyFirstApp.app.mef.gen.MockUserDAO_GEN.java", "BodyUseAPI": [], "Fixed commit": "949397ff8b603300a005d97c6818139ac01f3b0c", "Url": "https://api.github.com/repos/ianrae/dalgen", "Date": "2013-10-03T09:59:56Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (searchCriteria == null) { searchCriteria = new ua.batimyk.vrentalstore.model.SearchCriteria(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8909/buggy-version/src.main.java.ua.batimyk.vrentalstore.controller.SearchFilmController.java", "BodyUseAPI": [], "Fixed commit": "6bf35a36d14ffcfdad5f552faaf60449b5677da0", "Url": "https://api.github.com/repos/batimyk/video-rental-store", "Date": "2016-11-15T13:14:31Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getContentResolver().query(WeatherContentProvider.WeatherData.CONTENT_URI,<nulltype>,<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (cursor != null) { displayFiveDay(cursor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/451/buggy-version/WCWidget.src.com.jpennell.wcwidget.MainActivity.java", "BodyUseAPI": ["com.jpennell.wcwidget.MainActivity.2.displayFiveDay(android.database.Cursor)"], "Fixed commit": "f4b9246425a4332f531abab138056188abddc604", "Url": "https://api.github.com/repos/JerryPennell/MDF3", "Date": "2013-09-21T00:34:24Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((_valid) != null) && ((_valid.numRows()) != (_train.numRows()))) error(\"_valid\", \"_valid must have same number of rows as _train\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2096/buggy-version/h2o-algos.src.main.java.hex.glrm.GLRM.java", "BodyUseAPI": [], "Fixed commit": "f0fb9e6086a0612040370f655a2153ceee96f3e8", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-11-23T21:24:46Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (is == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5676/buggy-version/src.main.java.com.elemenopy.backupcopy.config.BackupConfig.java", "BodyUseAPI": [], "Fixed commit": "0ad33189bc8c3f7ca6a6c5c015f72e992f7da050", "Url": "https://api.github.com/repos/svandezande/BackupCopy", "Date": "2016-07-27T16:14:10Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (in == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5676/buggy-version/src.main.java.com.elemenopy.backupcopy.config.BackupConfig.java", "BodyUseAPI": [], "Fixed commit": "0ad33189bc8c3f7ca6a6c5c015f72e992f7da050", "Url": "https://api.github.com/repos/svandezande/BackupCopy", "Date": "2016-07-27T16:14:10Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Integer, util.serialization.Serializable>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (item == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8521/buggy-version/XPTT_Web.src.util.serialization.LocalIdentifiabilitySerializer.java", "BodyUseAPI": [], "Fixed commit": "f845eea75aac91fd03329a2798902acc76d0ecb7", "Url": "https://api.github.com/repos/WhiskeyInc/XP-team-tools", "Date": "2015-05-30T20:24:00Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dateSet)) { com.jason.ocbcapp.AppointmentsFragment.chosenDate = new java.util.GregorianCalendar(year, month, day); changeDateShownInForm(com.jason.ocbcapp.AppointmentsFragment.chosenDate); getAvailableSlots(com.jason.ocbcapp.AppointmentsFragment.chosenDate); dateSet = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4085/buggy-version/src.com.jason.ocbcapp.AppointmentsFragment.java", "BodyUseAPI": [], "Fixed commit": "05607a326e6d048421b087eadba81830f5c5413e", "Url": "https://api.github.com/repos/jsyeo/OCBCApp", "Date": "2013-04-06T15:51:21Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (0 == (sequentialCFGs.size())) { this.exitNodes.add(conditionNode); }else { this.exitNodes.addAll(sequentialCFGs.get(((sequentialCFGs.size()) - 1)).exitNodes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3028/buggy-version/TinyPDG.src.yoshikihigo.tinypdg.cfg.CFG.java", "BodyUseAPI": ["java.util.Set<yoshikihigo.tinypdg.cfg.node.CFGNode<? extends yoshikihigo.tinypdg.pe.ProgramElementInfo>>.addAll(java.util.Set<yoshikihigo.tinypdg.cfg.node.CFGNode<? extends yoshikihigo.tinypdg.pe.ProgramElementInfo>>)", "java.util.List<yoshikihigo.tinypdg.cfg.CFG>.size()", "java.util.List<yoshikihigo.tinypdg.cfg.CFG>.get(int)"], "Fixed commit": "fa33e43bc718dd88afc9459dba54e963f895cd42", "Url": "https://api.github.com/repos/k-hotta/TinyPDG", "Date": "2014-11-04T18:50:27Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (encoding == null) { return com.github.javaparser.SourcesHelper.stringToStream(s); }else { java.io.InputStream in = new java.io.ByteArrayInputStream(s.getBytes(encoding)); return in; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7065/buggy-version/javaparser-core.src.main.java.com.github.javaparser.SourcesHelper.java", "BodyUseAPI": ["java.lang.String.getBytes(java.lang.String)"], "Fixed commit": "04a81d470473b81309a98a5afba120f320dad7d7", "Url": "https://api.github.com/repos/chundongwang/javaparser", "Date": "2015-02-11T20:28:38Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((buttonLayout) != null) { rightLayout.removeComponent(buttonLayout); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6149/buggy-version/src.main.java.au.com.vaadinutils.crud.ChildCrudView.java", "BodyUseAPI": [], "Fixed commit": "ffd0e0199149a9afe07b6480fd4cb0dfd32d78c1", "Url": "https://api.github.com/repos/rlsutton1/VaadinUtils", "Date": "2015-07-27T00:02:14Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((proteinSpectrum) != null) { double xp = proteinSpectrum[((proteinSpectrum.length) - 1)]; if (xp > x) { x = xp; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/71/buggy-version/src.ru.spbau.bioinf.tagfinder.ui.ScanView.java", "BodyUseAPI": [], "Fixed commit": "1566f1d6e84733abaa62371b2b51794709a75850", "Url": "https://api.github.com/repos/ablab/TagFinder", "Date": "2011-10-20T13:05:51Z"},
{"Line": "=>577", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wordpress.android.ui.posts.EditPostActivity.getPost()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (post.isLocalDraft()) content = org.wordpress.android.util.WPHtml.toHtml(s); else content = s.toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6699/buggy-version/src.org.wordpress.android.ui.posts.EditPostContentFragment.java", "BodyUseAPI": [], "Fixed commit": "3388148585f176965bf645f5f4f1db5744adda36", "Url": "https://api.github.com/repos/soulseekah/WordPress-Android", "Date": "2013-12-13T21:09:36Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (_failure != null) { close(false, _failure); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3997/buggy-version/jactor2-modules.src.main.java.org.agilewiki.jactor2.modules.impl.MFacilityImpl.java", "BodyUseAPI": ["1.close(boolean,java.lang.String)"], "Fixed commit": "a166880819387f4d2356de8599e94a3c674f8442", "Url": "https://api.github.com/repos/laforge49/JActor-Modules", "Date": "2014-08-29T16:45:14Z"},
{"Line": "=>1119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["aQute.bnd.build.Project.getBundle(java.lang.String,java.lang.String,aQute.bnd.build.Strategy,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((container.getError()) != null) { error(\"${repo} macro refers to an artifact %s-%s (%s) that has an error: %s\", bsn, version, strategy, container.getError()); }else add(paths, container);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7300/buggy-version/biz.aQute.bndlib.src.aQute.bnd.build.Project.java", "BodyUseAPI": ["aQute.bnd.build.Container.getError()", "aQute.bnd.build.Project.error(java.lang.String,java.lang.String,java.lang.String,aQute.bnd.build.Strategy,container.getError())", "aQute.bnd.build.Project.add(java.util.List<java.lang.String>,aQute.bnd.build.Container)"], "Fixed commit": "e1695eb0851d39d6a7a4efe4be166e624d01bee9", "Url": "https://api.github.com/repos/mcculls/bnd", "Date": "2013-09-06T16:58:55Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((temp.getInt(\"totalGames\")) > 0) { org.json.JSONArray matches = ((org.json.JSONArray) (temp.get(\"matches\"))); java.util.List<main.java.pt.tiago.lolstats.entities.MatchList> result = gson.fromJson(matches.toString(), new com.google.gson.reflect.TypeToken<java.util.List<main.java.pt.tiago.lolstats.entities.MatchList>>() {}.getType()); return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6369/buggy-version/src.main.java.pt.tiago.lolstats.facade.MatchListFacade.java", "BodyUseAPI": ["org.json.JSONObject.get(java.lang.String)"], "Fixed commit": "e7edeb5a3bf23de3ff7b5cb7df9700f4518a926a", "Url": "https://api.github.com/repos/LolStatsOrganization/LOLStats", "Date": "2015-12-13T17:11:56Z"},
{"Line": "=>919", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.sqooss.service.db.ProjectVersion.getPreviousVersion()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (previous == null) { warn((\"No previous version available for ProjectVersion \" + (pv.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2641/buggy-version/plug-ins.svn.src.main.java.eu.sqooss.plugins.updater.svn.SVNUpdaterImpl.java", "BodyUseAPI": [], "Fixed commit": "eb9c8f7eaa7bd5c2f9b6abd822ffbf0257f4e7ea", "Url": "https://api.github.com/repos/modernist/Alitheia-Core", "Date": "2014-03-10T23:23:23Z"},
{"Line": "=>927", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pf.isReplaced()) { old = pf.getCopyFrom(); }else { old = pf.getPreviousFileVersion(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2641/buggy-version/plug-ins.svn.src.main.java.eu.sqooss.plugins.updater.svn.SVNUpdaterImpl.java", "BodyUseAPI": ["eu.sqooss.service.db.ProjectFile.getCopyFrom()", "eu.sqooss.service.db.ProjectFile.getPreviousFileVersion()"], "Fixed commit": "eb9c8f7eaa7bd5c2f9b6abd822ffbf0257f4e7ea", "Url": "https://api.github.com/repos/modernist/Alitheia-Core", "Date": "2014-03-10T23:23:23Z"},
{"Line": "=>933", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.sqooss.service.db.ProjectVersion.getPreviousVersion()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((old != null) && (previous != null)) { old.setValidUntil(previous); }else { warn((((\"Previous file version of version \" + (pv.getRevisionId())) + \" not found for file: \") + (pf.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2641/buggy-version/plug-ins.svn.src.main.java.eu.sqooss.plugins.updater.svn.SVNUpdaterImpl.java", "BodyUseAPI": ["eu.sqooss.service.db.ProjectFile.setValidUntil(eu.sqooss.service.db.ProjectVersion)"], "Fixed commit": "eb9c8f7eaa7bd5c2f9b6abd822ffbf0257f4e7ea", "Url": "https://api.github.com/repos/modernist/Alitheia-Core", "Date": "2014-03-10T23:23:23Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (log.iterator().hasNext()) { org.tmatesoft.svn.core.SVNLogEntry full = log.iterator().next(); return new eu.sqooss.plugins.tds.svn.SVNProjectRevision(full, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2641/buggy-version/plug-ins.svn.src.main.java.eu.sqooss.plugins.tds.svn.SVNAccessorImpl.java", "BodyUseAPI": ["log.iterator().next()", "java.util.List<org.tmatesoft.svn.core.SVNLogEntry>.iterator()"], "Fixed commit": "eb9c8f7eaa7bd5c2f9b6abd822ffbf0257f4e7ea", "Url": "https://api.github.com/repos/modernist/Alitheia-Core", "Date": "2014-03-10T23:23:23Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paramMap != null) { vars = paramMap; }else { vars = java.util.Collections.emptyMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/149/buggy-version/src.main.java.org.codelibs.elasticsearch.sstmpl.chain.SearchTemplateChain.java", "BodyUseAPI": [], "Fixed commit": "43cf9bd57a2e0c1a7400c6b0b40a9685b13e98e5", "Url": "https://api.github.com/repos/codelibs/elasticsearch-sstmpl", "Date": "2015-03-25T13:15:03Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bottomModules) != null) for (gui.DisplayModule mod : bottomModules) { if (mod != null) mod.updateRtValues(rad); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2591/buggy-version/src.gui.HerciHSTab.java", "BodyUseAPI": [], "Fixed commit": "634287fe8d39bb7a676eeb8d694ce044cd0d6c62", "Url": "https://api.github.com/repos/ac2cz/FoxTelem", "Date": "2017-06-29T01:17:01Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (byte3 == 0) { midiEventListener.onMidiNoteOff(sender, cable, (byte1 & 15), byte2, byte3); }else { midiEventListener.onMidiNoteOn(sender, cable, (byte1 & 15), byte2, byte3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3762/buggy-version/MIDIDriver.src.jp.kshoji.driver.midi.handler.MidiMessageCallback.java", "BodyUseAPI": ["jp.kshoji.driver.midi.listener.OnMidiInputEventListener.onMidiNoteOn(jp.kshoji.driver.midi.device.MidiInputDevice,int,int,int,int)", "jp.kshoji.driver.midi.listener.OnMidiInputEventListener.onMidiNoteOff(jp.kshoji.driver.midi.device.MidiInputDevice,int,int,int,int)"], "Fixed commit": "57b0e6c08703083063034a8db96e2834dea6c024", "Url": "https://api.github.com/repos/kshoji/USB-MIDI-Driver", "Date": "2013-05-25T01:13:17Z"},
{"Line": "=>885", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cfgFile.exists())) org.apache.commons.io.FileUtils.deleteDirectory(jobFolder); else { com.coddotech.teamsubb.jobs.model.Job job = new com.coddotech.teamsubb.jobs.model.Job(); job.readConfigFile(cfgFile); acceptedJobs.add(job); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1874/buggy-version/src.com.coddotech.teamsubb.jobs.model.JobManager.java", "BodyUseAPI": ["com.coddotech.teamsubb.jobs.model.Job.readConfigFile(java.io.File)"], "Fixed commit": "871e76e2d37bea585a51d0a5747c394a203dbcba", "Url": "https://api.github.com/repos/coddo/TeamSubb", "Date": "2014-02-05T11:46:32Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.N)) { root = ((android.widget.LinearLayout) (findViewById(android.R.id.list).getParent().getParent())); }else { root = ((android.widget.LinearLayout) (findViewById(android.R.id.list).getParent().getParent().getParent())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4747/buggy-version/app.src.main.java.com.github.fi3te.iliasdownloader.view.preferences.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "2cf039e451193d12c31b413064eca1777f52c20f", "Url": "https://api.github.com/repos/fi3te/ILIASDownloaderAndroid", "Date": "2016-12-12T18:45:17Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<simulator.Access>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((access.accessType()) || (!((L1.getState(access.getAddress())) == (Block.MSIState.SHARED)))) stats.incrementDataMsg(); else stats.incrementControlMsg();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5606/buggy-version/simulator.src.simulator.Tile.java", "BodyUseAPI": [], "Fixed commit": "f90339dd879bb0eb1b1c8f863f723096835b4921", "Url": "https://api.github.com/repos/ercgrat/mem-sim", "Date": "2015-11-17T19:03:18Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["simulator.Statistics.getHitRates()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((hitRates[i][0]) == (-1)) java.lang.System.out.println((\"No accesses in L1 of tile \" + i)); else java.lang.System.out.println((((\"Hit rate in L1 of tile \" + i) + \" is \") + (hitRates[i][0])));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5606/buggy-version/simulator.src.simulator.Simulator.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "f90339dd879bb0eb1b1c8f863f723096835b4921", "Url": "https://api.github.com/repos/ercgrat/mem-sim", "Date": "2015-11-17T19:03:18Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["simulator.Statistics.getHitRates()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((hitRates[i][1]) == (-1)) java.lang.System.out.println((\"No accesses in L2 of tile \" + i)); else java.lang.System.out.println((((\"Hit rate in L2 of tile \" + i) + \" is \") + (hitRates[i][1])));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5606/buggy-version/simulator.src.simulator.Simulator.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "f90339dd879bb0eb1b1c8f863f723096835b4921", "Url": "https://api.github.com/repos/ercgrat/mem-sim", "Date": "2015-11-17T19:03:18Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((str == null) || (str.isEmpty())) { throw new core.exceptions.CoreException((\"Invalid integer \" + str)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1187/buggy-version/src.core.interpreter.implementations.IntParser.java", "BodyUseAPI": [], "Fixed commit": "7af0b7813d4d0fc7812f95d8c75553451c4cf934", "Url": "https://api.github.com/repos/FrankDattalo/core_project", "Date": "2017-03-11T02:01:42Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.preExistingJenkinsUser) && (shaded.com.google.common.base.Strings.isNullOrEmpty(adminUser))) { adminUser = getJenkinsUser(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1550/buggy-version/jclouds-plugin.src.main.java.jenkins.plugins.jclouds.compute.JCloudsSlaveTemplate.java", "BodyUseAPI": [], "Fixed commit": "878f19c2a1ce052be26710fae4635b455f830e01", "Url": "https://api.github.com/repos/thomedw/jclouds-plugin", "Date": "2015-02-06T21:03:03Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.list()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((langKeys.length) == 0) { return defaultValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6568/buggy-version/NLBL.src.main.java.com.nlbhub.nlb.util.FileManipulator.java", "BodyUseAPI": [], "Fixed commit": "e909fdd5a781f03f2a101aede4b51edb28b2d114", "Url": "https://api.github.com/repos/Antokolos/NLB", "Date": "2014-07-07T09:34:13Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (typedText.endsWith(mParkedText)) mText = typedText; else mText = typedText + (mParkedText);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4376/buggy-version/parkedtextview.src.main.java.com.goka.parkedtextview.ParkedTextView.java", "BodyUseAPI": [], "Fixed commit": "180a1564433b71dc790e834bcfb50b7c349f6361", "Url": "https://api.github.com/repos/foxsake/ParkedTextView", "Date": "2017-06-20T05:58:43Z"},
{"Line": "=>963", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((versions) != null) { java.util.Collections.sort(versions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2519/buggy-version/threadfix-entities.src.main.java.com.denimgroup.threadfix.data.entities.Application.java", "BodyUseAPI": [], "Fixed commit": "c49f35486f3e037d7533f501c7f6b5993b8ef5df", "Url": "https://api.github.com/repos/denimgroup/threadfix", "Date": "2015-10-29T15:27:47Z"},
{"Line": "=>574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cm.getActiveFgCall().getPhone()", "com.android.internal.telephony.Call.getPhone()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ringingPhone != activePhone) { if (ringing.isRinging()) { return com.android.phone.PhoneUtils.answerCall(ringing); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3697/buggy-version/src.com.android.phone.PhoneUtils.java", "BodyUseAPI": [], "Fixed commit": "097985ce08cd45ee3ef2c43d1269e4e7e71c276c", "Url": "https://api.github.com/repos/cristianomatos/android_packages_services_Telephony", "Date": "2013-11-15T09:10:54Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getPathInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((pathInfo != null) && (pathInfo.endsWith(ILayer.SOURCEMAP_RESOURCE_PATH))) && (!(com.ibm.jaggr.core.util.RequestUtil.isSourceMapRequest(req)))) { throw new com.ibm.jaggr.core.BadRequestException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4199/buggy-version/jaggr-core.src.main.java.com.ibm.jaggr.core.impl.AbstractAggregatorImpl.java", "BodyUseAPI": [], "Fixed commit": "e551b42778f62b8ffaa06057548b001d2a6a87ec", "Url": "https://api.github.com/repos/chuckdumont/JavascriptAggregator", "Date": "2015-08-19T19:46:18Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nameEntry.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(name.equals(\"\"))) { editor.putString(\"name\", name); editor.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8042/buggy-version/app.src.main.java.com.apperun.clubchooser.TitleActivity.java", "BodyUseAPI": ["SharedPreferences.Editor.putString(java.lang.String,java.lang.String)"], "Fixed commit": "20e6eca7ce86447c4ba91e746c878a303a44a108", "Url": "https://api.github.com/repos/pranav22all/ApperunClubChooser", "Date": "2017-07-07T23:25:30Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nameEntry.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(name.equals(\"\"))) { editor.putString(\"name\", name); editor.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8042/buggy-version/app.src.main.java.com.apperun.clubchooser.TitleActivity.java", "BodyUseAPI": ["SharedPreferences.Editor.putString(java.lang.String,java.lang.String)"], "Fixed commit": "20e6eca7ce86447c4ba91e746c878a303a44a108", "Url": "https://api.github.com/repos/pranav22all/ApperunClubChooser", "Date": "2017-07-07T23:25:30Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (toSanitize == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3965/buggy-version/src.main.java.it.hackcaffebabe.jdrive.mapping.PathSanitizer.java", "BodyUseAPI": [], "Fixed commit": "079bf95febe4c4d6e0a25510f247224231db2cbd", "Url": "https://api.github.com/repos/AndreaGhizzoni/JDrive", "Date": "2017-10-05T08:24:08Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sanitized == null) || (sanitized.isEmpty())) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3965/buggy-version/src.main.java.it.hackcaffebabe.jdrive.mapping.PathSanitizer.java", "BodyUseAPI": [], "Fixed commit": "079bf95febe4c4d6e0a25510f247224231db2cbd", "Url": "https://api.github.com/repos/AndreaGhizzoni/JDrive", "Date": "2017-10-05T08:24:08Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((project) == null) { project = at.tugraz.ist.catroid.common.StandardProjectHandler.createAndSaveStandardProject(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1460/buggy-version/catroid.src.at.tugraz.ist.catroid.ProjectManager.java", "BodyUseAPI": [], "Fixed commit": "45aaedbceca8105f09e7d1df99b6659f5cc58f05", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2012-07-17T13:50:00Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.base.Objects.equal(com.robotoworks.mechanoid.db.sqliteModel.ConfigBlock,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (_equals) { java.util.ArrayList<com.robotoworks.mechanoid.db.sqliteModel.ActionStatement> _arrayList = new java.util.ArrayList<com.robotoworks.mechanoid.db.sqliteModel.ActionStatement>(); return _arrayList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4581/buggy-version/plugins.com.robotoworks.mechanoid.db.xtend-gen.com.robotoworks.mechanoid.db.generator.ContentProviderContractGenerator.java", "BodyUseAPI": [], "Fixed commit": "bb4f8c0665c1ef352347f1acfab2e77e77fdee54", "Url": "https://api.github.com/repos/fluxtah/mechanoid", "Date": "2013-03-10T15:45:22Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (getString(R.string.factsheets_default_search).equals(findViewById.getText().toString())) { findViewById.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1888/buggy-version/TripMobile.app.src.main.java.me.tripsit.mobile.factsheets.Factsheets.java", "BodyUseAPI": ["android.widget.AutoCompleteTextView.setText(java.lang.String)"], "Fixed commit": "129a74adfa990efdfd3e25116046aee02a03801d", "Url": "https://api.github.com/repos/TripSit/tripmobile", "Date": "2015-03-28T19:03:03Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isComplete) { return (((((\"COMPLETED \" + (city1.toString())) + \" - \") + (city2.toString())) + \" \") + (points)) + \" points\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2842/buggy-version/shared.src.main.java.shared.classes.DestinationCard.java", "BodyUseAPI": [], "Fixed commit": "aadd544bb97561ab206f2a31477bb3797b4ea59c", "Url": "https://api.github.com/repos/jacobcovey/CS_340_project", "Date": "2017-06-12T15:38:34Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.chaemil.hgms.VideoPlayer.getSystemService(Context.POWER_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pm.isScreenOn()) { mVideoView.suspend(); }else { mVideoView.pause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2559/buggy-version/app.src.main.java.com.chaemil.hgms.VideoPlayer.java", "BodyUseAPI": [], "Fixed commit": "2d7ec0ebc94caf3ed071a310be965fbc1ca1e582", "Url": "https://api.github.com/repos/chaeMil/oazatv", "Date": "2014-12-29T21:11:57Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestContext.getUriInfo().getAbsolutePath().getPath().contains(simple.filter.MediaTypeContainerResponseFilter.WADL_URI)) { }else { responseContext.setEntity(new simple.base.ResourceDTO<java.lang.Object>(responseContext.getEntity())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/495/buggy-version/view.src.main.java.simple.filter.MediaTypeContainerResponseFilter.java", "BodyUseAPI": [], "Fixed commit": "1fd8015c920e2943ec97d5e56d81efb92d5ff41f", "Url": "https://api.github.com/repos/koshnarek/simple-rest", "Date": "2014-06-08T17:47:36Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gsingh.learnkirtan.Parser.note.length()) > 1) { for (int i = 0; i < 3; i++) { if (gsingh.learnkirtan.Parser.note.substring(i, (i + 1)).matches(\"[A-Z\\\\-]\")) break; count++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6569/buggy-version/src.gsingh.learnkirtan.Parser.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.matches(java.lang.String)"], "Fixed commit": "d86d62b6f73f382249764f4d3a218380b3882c76", "Url": "https://api.github.com/repos/gsingh93/Learn-Kirtan", "Date": "2012-03-31T18:41:54Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stage == 0) stage = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7551/buggy-version/app.src.main.java.edu.asu.fitbitgarden.managers.GameManager.java", "BodyUseAPI": [], "Fixed commit": "325841e5eb6e61b5adcac7630ff15b8e07e3ff1d", "Url": "https://api.github.com/repos/jithin/FitbitGarden", "Date": "2016-05-20T17:40:30Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((world.getChunkManager().getChunkFromPos(touchX, touchY).findLivingEntitiesInRange(touchX, touchY, ChunkManager.TILE_SIZE).size) == 0) { highlightedBlockPosition.set(((((int) (touchX)) / (com.jmrapp.terralegion.game.world.chunk.ChunkManager.TILE_SIZE)) * (com.jmrapp.terralegion.game.world.chunk.ChunkManager.TILE_SIZE)), ((((int) (touchY)) / (com.jmrapp.terralegion.game.world.chunk.ChunkManager.TILE_SIZE)) * (com.jmrapp.terralegion.game.world.chunk.ChunkManager.TILE_SIZE))); if (((com.jmrapp.terralegion.engine.utils.Timer.getGameTimeElapsed()) - (lastBlockPlace)) > 0.75F) { if ((world.getChunkManager().getBlockFromPos(touchX, touchY)) == (com.jmrapp.terralegion.game.world.block.BlockType.AIR)) { collisionTestRect.set(highlightedBlockPosition.x, highlightedBlockPosition.y, ChunkManager.TILE_SIZE, ChunkManager.TILE_SIZE); if ((!(world.getPlayer().getBounds().overlaps(collisionTestRect))) || (!(com.jmrapp.terralegion.game.world.block.BlockManager.getBlock(((com.jmrapp.terralegion.game.item.impl.BlockItem) (selectedItemStack.getItem())).getBlockType()).collides()))) { world.getChunkManager().setBlock(((com.jmrapp.terralegion.game.item.impl.BlockItem) (selectedItemStack.getItem())).getBlockType(), touchX, touchY, true); world.getPlayer().getInventory().removeItemStack(selectedItemStack.getItem(), 1); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6850/buggy-version/core.src.com.jmrapp.terralegion.game.views.ui.GameHud.java", "BodyUseAPI": ["world.getChunkManager().getBlockFromPos(float,float)", "com.jmrapp.terralegion.game.world.World.getChunkManager()", "world.getPlayer().getBounds()", "com.jmrapp.terralegion.game.world.World.getPlayer()", "world.getPlayer().getBounds().overlaps(com.badlogic.gdx.math.Rectangle)", "world.getPlayer().getInventory()", "world.getChunkManager().setBlock(((com.jmrapp.terralegion.game.item.impl.BlockItem) (selectedItemStack.getItem())).getBlockType(),float,float,boolean)", "world.getPlayer().getInventory().removeItemStack(selectedItemStack.getItem(),int)", "com.jmrapp.terralegion.game.world.World.getChunkManager()", "com.jmrapp.terralegion.game.world.World.getPlayer()"], "Fixed commit": "4123e358ea7e416c99d9f457d1a4000e26898047", "Url": "https://api.github.com/repos/stinsonga/TerraLegion", "Date": "2016-07-09T20:21:15Z"},
{"Line": "=>1685", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sessionFactory.getCurrentSession().createCriteria(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((criteria.list().size()) > 1) { return ((com.registryKit.survey.submittedsurveysessionstaff) (criteria.list().get(0))); }else { return ((com.registryKit.survey.submittedsurveysessionstaff) (criteria.uniqueResult())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6302/buggy-version/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyDAO.java", "BodyUseAPI": ["org.hibernate.Criteria.uniqueResult()", "criteria.list().get(int)", "org.hibernate.Criteria.list()"], "Fixed commit": "fa8c212a91b960ab97829be03682dac0d49f531f", "Url": "https://api.github.com/repos/bowlinktech/rr-mvn-repo", "Date": "2017-01-23T14:37:52Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.xgf.winecome.ui.activity.MainActivity.mGoodsList.size()) > 0) { com.xgf.winecome.utils.CartManager.setTotalMoney(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4428/buggy-version/src.com.xgf.winecome.ui.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ae08da3759d5ca069e965b69e97e5ed470fc8c39", "Url": "https://api.github.com/repos/xiguofeng/WineCome", "Date": "2015-09-03T14:05:58Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((minerFulParams.activitiesToExcludeFromResult) != null) && ((minerFulParams.activitiesToExcludeFromResult.size()) > 0)) { logParser.excludeTasksByName(minerFulParams.activitiesToExcludeFromResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8972/buggy-version/src.minerful.MinerFulMinerStarter.java", "BodyUseAPI": ["minerful.logparser.LogParser.excludeTasksByName(minerFulParams.activitiesToExcludeFromResult)"], "Fixed commit": "493cc4a13f6f4c8765c70a3d2121e401dcccda18", "Url": "https://api.github.com/repos/cdc08x/MINERful", "Date": "2016-07-21T12:08:54Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((andFilters.size()) > 0) return new com.browseengine.bobo.facets.filter.AndFilter(andFilters); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7988/buggy-version/sensei-core.src.main.java.com.sensei.search.query.filters.BooleanFilterConstructor.java", "BodyUseAPI": [], "Fixed commit": "8d13e02706d75438a0cd5bcabcf2029173f7245d", "Url": "https://api.github.com/repos/sguo/sensei", "Date": "2011-11-29T00:00:32Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((orFilters.size()) > 0) andFilters.add(new com.browseengine.bobo.facets.filter.OrFilter(orFilters));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7988/buggy-version/sensei-core.src.main.java.com.sensei.search.query.filters.BooleanFilterConstructor.java", "BodyUseAPI": ["java.util.List<org.apache.lucene.search.Filter>.add(com.browseengine.bobo.facets.filter.OrFilter)"], "Fixed commit": "8d13e02706d75438a0cd5bcabcf2029173f7245d", "Url": "https://api.github.com/repos/sguo/sensei", "Date": "2011-11-29T00:00:32Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (flavorConfig != null) { combinedConfig.putAll(flavorConfig); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1028/buggy-version/src.main.java.com.alisa.lswitch.server.lib.AppConfig.java", "BodyUseAPI": [], "Fixed commit": "52b32aeaa07ef9e2a61810348bbe8637424ae75c", "Url": "https://api.github.com/repos/sshlyk/switch-server", "Date": "2015-08-06T04:02:08Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getActionMasked()) == (android.view.MotionEvent.ACTION_DOWN)) { android.view.View child = rv.findChildViewUnder(e.getX(), e.getY()); int position = rv.getChildAdapterPosition(child); android.widget.Toast.makeText(getApplicationContext(), countries.get(position), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/429/buggy-version/RecyclerView.app.src.main.java.com.learn2crack.recyclerview.MainActivity.java", "BodyUseAPI": ["android.support.v7.widget.RecyclerView.findChildViewUnder(e.getX(),e.getY())", "android.view.MotionEvent.getX()", "android.view.MotionEvent.getY()"], "Fixed commit": "c24223e6d66b91771a5353d4309571354a547bdb", "Url": "https://api.github.com/repos/Learn2Crack/recycler-view", "Date": "2016-02-06T13:16:34Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cwd) == null) { bother.directory(new java.io.File(\"\").getCanonicalFile()); }else { bother.directory(cwd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8462/buggy-version/src.main.net.polydawn.josh.Josh.java", "BodyUseAPI": [], "Fixed commit": "94ec815f9bde3dc03287d016324836a83c27d001", "Url": "https://api.github.com/repos/polydawn/josh", "Date": "2014-06-01T18:10:31Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cape.isEmpty()) { com.massivecraft.factions.SpoutFeatures.spoutApp.resetPlayerCloak(sPlayer, viewed); }else { com.massivecraft.factions.SpoutFeatures.spoutApp.setPlayerCloak(sPlayer, viewed, cape); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8464/buggy-version/src.com.massivecraft.factions.SpoutFeatures.java", "BodyUseAPI": ["org.getspout.spoutapi.player.AppearanceManager.setPlayerCloak(org.getspout.spoutapi.player.SpoutPlayer,org.bukkit.entity.Player,java.lang.String)"], "Fixed commit": "c512f808666fa0813108fb10c2ce9983eecaf558", "Url": "https://api.github.com/repos/MassiveCraft/Factions", "Date": "2011-08-24T02:49:49Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Conf.spoutFactionAdminCapes) || (Conf.spoutFactionModeratorCapes)) { com.massivecraft.factions.SpoutFeatures.spoutApp.resetPlayerCloak(sPlayer, viewed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8464/buggy-version/src.com.massivecraft.factions.SpoutFeatures.java", "BodyUseAPI": [], "Fixed commit": "c512f808666fa0813108fb10c2ce9983eecaf558", "Url": "https://api.github.com/repos/MassiveCraft/Factions", "Date": "2011-08-24T02:49:49Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((notificationManager) != null) notificationManager.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3394/buggy-version/NotificationManager.src.main.java.org.md2k.notificationmanager.ServiceNotificationManager.java", "BodyUseAPI": [], "Fixed commit": "f1724155da59c5e53811ad5374a3c56456c06a80", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-NotificationManager", "Date": "2016-07-15T14:32:48Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUris()) != null) { removeAllWatchContentUris(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4772/buggy-version/src.main.java.com.mridang.weeknum.ImprovedExtension.java", "BodyUseAPI": [], "Fixed commit": "deea04e53de623dbfbc36390cde0e1f2f2a81840", "Url": "https://api.github.com/repos/mridang/dashclock-weeknum", "Date": "2015-03-29T09:12:57Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (parentItems.isEmpty()) { parentItems.add(1, \"Keine Kommentare abgegeben\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6085/buggy-version/app.src.main.java.pes.kneipenfinder.displayLocationDetailed.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(int,java.lang.String)"], "Fixed commit": "165742e95ee1434a6fea1ca6df4cbe90d229e77c", "Url": "https://api.github.com/repos/kneipenfinder/client", "Date": "2015-02-06T11:42:01Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.redhat.ceylon.eclipse.code.correct.CorrectionUtil.shortcut(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(hint.isEmpty())) { hint = hint + (hint.substring(2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2665/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.code.resolve.ReferencesHyperlinkDetector.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "060cc631787d48178296bf6beae2f83f3fab061e", "Url": "https://api.github.com/repos/eclipse/ceylon-ide-eclipse", "Date": "2016-06-02T18:11:25Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (alg = \"LRU\") { frameArray[frameToInsert].setLastUse(currentSlice); }else if (alg = \"LFU\") { frameArray[frameToInsert].incrementTimesUsed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7521/buggy-version/MemorySim.java", "BodyUseAPI": [], "Fixed commit": "6b1bb775e596bff97eb4741ffd1ee270c05fa4fe", "Url": "https://api.github.com/repos/ZacharyConlyn/demand-paging-simulator", "Date": "2016-12-18T02:51:55Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canStillRead()) { boolean isValidChar = add(s.charAt(index)); if (!isValidChar) { numValidChars = 0; bits = 0; }else { (numValidChars)++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4983/buggy-version/src.coPhylog.BitHolder.java", "BodyUseAPI": [], "Fixed commit": "f50072697ec5f6991f44f624b09221e8bec2b837", "Url": "https://api.github.com/repos/afodor/metagenomicsTools", "Date": "2013-07-06T01:21:49Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (stop != 0) com.ltcnextbus.ct.ltcnextbus.Toast.makeText(getApplicationContext(), \"Not a valid stop number\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/476/buggy-version/LTCNextBus.app.src.main.java.com.ltcnextbus.ct.ltcnextbus.LTCNextBusMain.java", "BodyUseAPI": [], "Fixed commit": "1aa7b4dd1394c7a290e8bee95bb045c15e281d83", "Url": "https://api.github.com/repos/ctreulieb/Bapp", "Date": "2014-10-23T05:44:28Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getDelta()) == null) { localState.dirty = true; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2638/buggy-version/src.eclipse.net.vtst.ow.eclipse.js.closure.src.net.vtst.ow.eclipse.js.closure.builder.ProjectOrderManager.java", "BodyUseAPI": [], "Fixed commit": "f66d05167ba1b116776966b690fb37190584b841", "Url": "https://api.github.com/repos/vtst/ow", "Date": "2012-05-17T16:05:55Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((top) == null) { top = new javax.swing.tree.DefaultMutableTreeNode(\"List of used Images:\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6394/buggy-version/src.main.java.ch.zhaw.ocr.gui.InputNavigation.java", "BodyUseAPI": [], "Fixed commit": "c1e9553c32c69e90f42286d7affcd276ae2bf5ca", "Url": "https://api.github.com/repos/aschi/ocr", "Date": "2012-06-05T21:32:46Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tree) == null) { tree = new javax.swing.JTree(top); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6394/buggy-version/src.main.java.ch.zhaw.ocr.gui.InputNavigation.java", "BodyUseAPI": [], "Fixed commit": "c1e9553c32c69e90f42286d7affcd276ae2bf5ca", "Url": "https://api.github.com/repos/aschi/ocr", "Date": "2012-06-05T21:32:46Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item.getItemId()) == (android.R.id.home)) { onBackPressed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3173/buggy-version/app.src.main.java.com.example.weatherapp.weatherapp.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "dcc412a5929c1f30ab18636e6814065305e49210", "Url": "https://api.github.com/repos/IIpocTo/WeatherApp", "Date": "2017-05-30T12:59:51Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (source.isFrozen()) { source = ((org.jruby.RubyString) (source.dup())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2655/buggy-version/java.src.json.ext.Parser.java", "BodyUseAPI": ["org.jruby.RubyString.dup()"], "Fixed commit": "047814c7a6916bde393e6080c98385c8170d3f98", "Url": "https://api.github.com/repos/flori/json", "Date": "2016-07-26T09:27:14Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<net.minecraft.world.biome.Biome>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (me.superckl.api.biometweaker.property.BiomePropertyManager.setProperty(gen, this.key.toLowerCase(), this.value, this.handler)) me.superckl.biometweaker.BiomeTweaker.getInstance().onTweak(net.minecraft.world.biome.Biome.getIdForBiome(gen));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3622/buggy-version/src.main.java.me.superckl.biometweaker.script.command.misc.ScriptCommandSetBiomeProperty.java", "BodyUseAPI": ["me.superckl.biometweaker.BiomeTweaker.getInstance().onTweak(net.minecraft.world.biome.Biome.getIdForBiome(gen))", "net.minecraft.world.biome.Biome.getIdForBiome(net.minecraft.world.biome.Biome)"], "Fixed commit": "138d574b5a6fd1e6031c8743f00c5dfafd7c65e2", "Url": "https://api.github.com/repos/superckl/BiomeTweaker", "Date": "2017-08-28T16:43:16Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((defaultDegreeOfParallelism) < 1) { org.apache.flink.compiler.PactCompiler.LOG.warn(((((\"Config value \" + (defaultDegreeOfParallelism)) + \" for option \") + (org.apache.flink.configuration.ConfigConstants.DEFAULT_PARALLELIZATION_DEGREE)) + \" is invalid. Ignoring and using a value of 1.\")); this.defaultDegreeOfParallelism = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5721/buggy-version/flink-compiler.src.main.java.org.apache.flink.compiler.PactCompiler.java", "BodyUseAPI": [], "Fixed commit": "f60a61f2b229a0a0750eeb92d0d09e78c05cac52", "Url": "https://api.github.com/repos/StephanEwen/incubator-flink", "Date": "2014-09-24T16:38:01Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lhs.getTime()) == (rhs.getTime())) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4963/buggy-version/src.strength.history.ui.history.HistoryChartActivity.java", "BodyUseAPI": [], "Fixed commit": "5b3eb5edd54c985e5a31edeaeb2e7e2d3495ada7", "Url": "https://api.github.com/repos/johvik/strength_history", "Date": "2013-07-16T18:00:38Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (attributes.getValue(\"type\").equals(\"woodensword\")) { sprites.add(new progprak.gruppe53.items.WoodenSword(xLocation, yLocation, game)); }else if (attributes.getValue(\"type\").equals(\"clotharmor\")) { sprites.add(new progprak.gruppe53.items.ClothArmor(xLocation, yLocation, game)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4866/buggy-version/Game.src.progprak.gruppe53.game.LevelLoaderSax.java", "BodyUseAPI": ["org.xml.sax.Attributes.getValue(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "781bfbc66488c7164693731098a01034c917d94e", "Url": "https://api.github.com/repos/propra13-orga/gruppe53", "Date": "2013-06-18T11:04:31Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parser.getCurrentToken()) == null) { parser.nextToken(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4756/buggy-version/slug-json.src.main.java.io.coronet.slug.json.JsonSlugModule.java", "BodyUseAPI": ["com.fasterxml.jackson.core.JsonParser.nextToken()"], "Fixed commit": "b60479caa84c1bcf58b93136b9914cb91cafb91c", "Url": "https://api.github.com/repos/fernomac/slug", "Date": "2015-07-18T22:21:02Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((keyBindings[index]) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/431/buggy-version/src.main.java.modwarriors.notenoughkeys.gui.GuiSubKeybindsScrollPanel.java", "BodyUseAPI": [], "Fixed commit": "6cd0e3ff1f3390dc92163468a09ef5847f64a7f4", "Url": "https://api.github.com/repos/mod-warriors/NotEnoughKeys", "Date": "2014-11-12T02:52:05Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((boardCurrent.getWinner()) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3724/buggy-version/app.src.main.java.com.example.kai.verschachtelt.pvAIGame.chess_AI.ChessGamePvAI.java", "BodyUseAPI": [], "Fixed commit": "22fcfd1dca629e757eb4dd95c946ba75071e269a", "Url": "https://api.github.com/repos/Cthaeeh/Verschachtelt", "Date": "2016-08-13T19:30:26Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((time.length()) < 18) { return answer; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4942/buggy-version/PennMobile.src.main.java.com.pennapps.labs.pennmobile.adapters.NsoAdapter.java", "BodyUseAPI": [], "Fixed commit": "42d195ed9be013d58ae81606fd8cc4362c7885a7", "Url": "https://api.github.com/repos/pennlabs/penn-mobile-android", "Date": "2016-08-23T03:25:18Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((client) != null) client.onDisconnectResult(disconnectOK);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7797/buggy-version/hrdevice.src.org.runnerup.hr.RetryingHRProviderProxy.java", "BodyUseAPI": [], "Fixed commit": "5f3bb4c2873c91af081ff33d4229cc92083f0f07", "Url": "https://api.github.com/repos/gerhardol/runnerup", "Date": "2016-08-03T11:51:34Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((client) != null) client.onConnectResult(closeOK);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7797/buggy-version/hrdevice.src.org.runnerup.hr.RetryingHRProviderProxy.java", "BodyUseAPI": [], "Fixed commit": "5f3bb4c2873c91af081ff33d4229cc92083f0f07", "Url": "https://api.github.com/repos/gerhardol/runnerup", "Date": "2016-08-03T11:51:34Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playerhasSweared) { e.setMessage(plugin.getConfig().getString(\"replaceMessage\")); if (plugin.getConfig().getBoolean(\"warnPlayer\")) { p.sendMessage(((((net.md_5.bungee.api.ChatColor.GREEN) + \"AntiSwear> \") + (net.md_5.bungee.api.ChatColor.WHITE)) + (plugin.getConfig().getString(\"warnMessage\")))); } if (plugin.getConfig().getBoolean(\"setFire\")) { p.setFireTicks(((plugin.getConfig().getInt(\"fireSecond\")) * 20)); } if (plugin.getConfig().getBoolean(\"strikeLightning\")) { for (int loopNumber = 0; loopNumber < (plugin.getConfig().getInt(\"lightningNumber\")); loopNumber++) { p.getLocation().getWorld().strikeLightning(p.getLocation()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/303/buggy-version/src.me.lightcab.AntiSwearPluginListener.java", "BodyUseAPI": [], "Fixed commit": "bfbf3440805c890219d6967e9fafe1f3fd26975f", "Url": "https://api.github.com/repos/Lightcab/AntiSwearPlugin", "Date": "2015-11-21T03:35:24Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (symbol.isParameter()) { org.eclipse.imp.pdb.facts.IConstructor treeSymbol = org.rascalmpl.interpreter.utils.Symbols.factory.constructor(RascalValueFactory.Symbol_Adt, org.rascalmpl.interpreter.utils.Symbols.factory.string(\"Tree\"), org.rascalmpl.interpreter.utils.Symbols.factory.listWriter().done()); return org.rascalmpl.interpreter.utils.Symbols.factory.constructor(RascalValueFactory.Symbol_Parameter, org.rascalmpl.interpreter.utils.Symbols.factory.string(((org.rascalmpl.ast.Nonterminal.Lexical) (symbol.getNonterminal())).getString()), treeSymbol); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/867/buggy-version/src.org.rascalmpl.interpreter.utils.Symbols.java", "BodyUseAPI": ["org.rascalmpl.ast.Sym.getNonterminal()", "org.eclipse.imp.pdb.facts.IValueFactory.string(((org.rascalmpl.ast.Nonterminal.Lexical) (symbol.getNonterminal())).getString())", "org.eclipse.imp.pdb.facts.IValueFactory.constructor(RascalValueFactory.Symbol_Parameter,org.rascalmpl.interpreter.utils.Symbols.factory.string(((org.rascalmpl.ast.Nonterminal.Lexical) (symbol.getNonterminal())).getString()),org.eclipse.imp.pdb.facts.IConstructor)", "((org.rascalmpl.ast.Nonterminal.Lexical) (symbol.getNonterminal())).getString()"], "Fixed commit": "44aba5985fe20b0b5d684ea56a672f13ddad3bdf", "Url": "https://api.github.com/repos/usethesource/rascal", "Date": "2015-07-30T10:18:58Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((question._fromEnvironment) && (question._detail)) { throw new org.batfish.common.BatfishException(java.lang.String.format(\"%s and %s flags together are currently unsupported\", org.batfish.question.RoutesQuestionPlugin.RoutesQuestion.PROP_FROM_ENVIRONMENT, org.batfish.question.RoutesQuestionPlugin.RoutesQuestion.PROP_DETAIL)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1315/buggy-version/projects.question.src.main.java.org.batfish.question.RoutesQuestionPlugin.java", "BodyUseAPI": [], "Fixed commit": "69b6b9a5deb31b9c6c177db4d2ec1ae8e9071c03", "Url": "https://api.github.com/repos/batfish/batfish", "Date": "2017-10-12T02:13:17Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i == (inflatedLengths.length)) && (pos >= (length))) { return (inflatedLengths.length) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2926/buggy-version/LuceneTransform.src.org.apache.lucene.store.transform.TransformedIndexInput.java", "BodyUseAPI": [], "Fixed commit": "f010775a9c8699bef812620ba0346c9d421b8505", "Url": "https://api.github.com/repos/mitjale/lucenetransform", "Date": "2011-09-09T22:00:15Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(itemStack.getItem().hasContainerItem(itemStack))) itemStack.stackSize -= dif;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7107/buggy-version/src.main.java.wanion.avaritiaddons.block.extremeautocrafter.TileEntityExtremeAutoCrafter.java", "BodyUseAPI": [], "Fixed commit": "66753098b4c34adbce31ee507fb3b08a2dcc1f85", "Url": "https://api.github.com/repos/WanionCane/Avaritiaddons", "Date": "2017-02-06T16:54:16Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.uci.ics.crawler4j.frontier.DocIDServer.getNewUnseenDocID(page.redirectedToUrl)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (docid >= 0) { webURL.setDocid(docid); frontier.schedule(webURL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/439/buggy-version/src.main.java.edu.uci.ics.crawler4j.crawler.WebCrawler.java", "BodyUseAPI": ["edu.uci.ics.crawler4j.url.WebURL.setDocid(int)"], "Fixed commit": "c174284c4e70cb4c74c7d225781cc6fed00540bc", "Url": "https://api.github.com/repos/EgbertW/crawler4j", "Date": "2015-07-14T12:55:54Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((powerToDistribute) > 0) (powerToDistribute)--; else powerToDistribute = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8453/buggy-version/influence.src.com.teremok.influence.model.player.Player.java", "BodyUseAPI": [], "Fixed commit": "b50173a015b29a0aefb4c598a8b8e60a67621b15", "Url": "https://api.github.com/repos/teremokgames/influence", "Date": "2014-02-02T15:06:02Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Thread.interrupted()) throw new java.lang.InterruptedException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/9214/buggy-version/commons.ioutils.src.main.java.com.github.pjpo.commons.ioutils.WriterToReader.java", "BodyUseAPI": [], "Fixed commit": "5816c54fd851c1ba82836795052e17978d06f475", "Url": "https://api.github.com/repos/pjpo/commons", "Date": "2014-07-18T10:02:51Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Thread.interrupted()) throw new java.lang.InterruptedException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/9214/buggy-version/commons.ioutils.src.main.java.com.github.pjpo.commons.ioutils.WriterToReader.java", "BodyUseAPI": [], "Fixed commit": "5816c54fd851c1ba82836795052e17978d06f475", "Url": "https://api.github.com/repos/pjpo/commons", "Date": "2014-07-18T10:02:51Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isConnected())) { reconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4387/buggy-version/src.main.java.com.dempe.lamp.client.CommonClient.java", "BodyUseAPI": [], "Fixed commit": "1bee08e9dd97a69a180fc254bb7c52f103c8efcb", "Url": "https://api.github.com/repos/dempeZheng/dolphin", "Date": "2016-03-09T08:16:41Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.atilika.kuromoji.dict.CharacterDefinitions.lookupCategories(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (categories != null) { for (int i = 0; i < (categories.length); i++) { int category = categories[i]; unknownWordEndIndex = processUnknownWord2(category, i, lattice, unknownWordEndIndex, startIndex, suffix, found); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8297/buggy-version/kuromoji-common.src.main.java.com.atilika.kuromoji.viterbi.ViterbiBuilder.java", "BodyUseAPI": [], "Fixed commit": "23f91ee64de6bc16469998244318e1750cc83e38", "Url": "https://api.github.com/repos/makigumo/kuromoji", "Date": "2015-07-08T12:04:04Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.atilika.kuromoji.dict.CharacterDefinitions.lookupCategories(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (categories == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8297/buggy-version/kuromoji-common.src.main.java.com.atilika.kuromoji.viterbi.ViterbiBuilder.java", "BodyUseAPI": [], "Fixed commit": "23f91ee64de6bc16469998244318e1750cc83e38", "Url": "https://api.github.com/repos/makigumo/kuromoji", "Date": "2015-07-08T12:04:04Z"},
{"Line": "=>1172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((main.mainframe.MainFrame.pressReleases.size()) > 0) { main.mainframe.MainFrame.pressReleases.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8415/buggy-version/src.main.mainframe.MainFrame.java", "BodyUseAPI": ["java.util.ArrayList<main.mainframe.objects.PressRelease>.clear()"], "Fixed commit": "29fe6a5bf2db594334afcf29d0ae7c806d6b1ea0", "Url": "https://api.github.com/repos/Investor-PAL/Investor-PAL", "Date": "2016-06-17T23:23:04Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((config == null) || (!(config.isConfigOk()))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5687/buggy-version/src.main.java.io.jboot.component.redis.JbootRedisManager.java", "BodyUseAPI": [], "Fixed commit": "1ad02c00efdf520643f1887cc3dd66024eeeef72", "Url": "https://api.github.com/repos/yangfuhai/jboot", "Date": "2017-06-27T06:59:02Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (nodeDrive != null) { nodeDrive = nodeDrive.clone(); nodeDrive.getParameters().put(ManageDriveServiceImpl.DRIVE_PARAMATER_USER_ID, (((((((splitedPath[2]) + \"/\") + (splitedPath[3])) + \"/\") + (splitedPath[4])) + \"/\") + (splitedPath[5]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/493/buggy-version/core.services.src.main.java.org.exoplatform.services.cms.documents.impl.DocumentServiceImpl.java", "BodyUseAPI": ["org.exoplatform.services.cms.drives.DriveData.clone()"], "Fixed commit": "eeb35e8fabc3176da5f732cdd8f1f992c56f0d0d", "Url": "https://api.github.com/repos/exodev/ecms", "Date": "2017-05-30T15:57:23Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"URI_SCHEME\".equals(localField.getName()))) { listHeader.add(fieldName.concat((\".\" + (localField.getName())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7333/buggy-version/konker.registry.src.main.java.com.konkerlabs.platform.registry.web.csv.CsvDownload.java", "BodyUseAPI": ["java.lang.String.concat(java.lang.String)", "java.lang.reflect.Field.getName()", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "809cb3772cca5a2f3b8b973184f3eb3202e9b69a", "Url": "https://api.github.com/repos/KonkerLabs/konker-platform", "Date": "2017-01-06T13:35:33Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileEnding != null) && (fileEnding.equals(context.getString(R.string.olex)))) { fileEnding = \"olx.gz\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7781/buggy-version/app.src.main.java.fiskinfoo.no.sintef.fiskinfoo.Implementation.FiskInfoUtility.java", "BodyUseAPI": [], "Fixed commit": "dcdc65b15badba1a1b77e118ae397e532d4abbc5", "Url": "https://api.github.com/repos/PeterHaro/Fiskinfoo", "Date": "2016-04-07T10:55:30Z"},
{"Line": "=>1295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (indexUpdates != null) { for (java.util.Map.Entry<com.psddev.dari.db.ObjectIndex, java.util.List<com.psddev.dari.db.State>> entry : indexUpdates.entrySet()) { doIndexUpdates(connection, isImmediate, entry.getKey(), entry.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8393/buggy-version/db.src.main.java.com.psddev.dari.db.AbstractDatabase.java", "BodyUseAPI": ["java.util.Map<com.psddev.dari.db.ObjectIndex, java.util.List<com.psddev.dari.db.State>>.entrySet()"], "Fixed commit": "384808b4ab3744794ade1d9aa3e92e292a3a60b0", "Url": "https://api.github.com/repos/perfectsense/dari", "Date": "2014-09-26T12:14:53Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tradingArea.getSelectedItemPosition()) == 0) { com.angcyo.ondemand.util.PopupTipWindow.showTip(mBaseActivity, \"\u8bf7\u9009\u62e9\u5546\u5708.\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3515/buggy-version/app.src.main.java.com.angcyo.ondemand.view.RegisterFragment.java", "BodyUseAPI": [], "Fixed commit": "a2af3339f94411f268062e89cc2d09d7b5664e50", "Url": "https://api.github.com/repos/angcyo/OnDemand", "Date": "2016-01-29T03:51:46Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (itemMeta instanceof org.bukkit.inventory.meta.BookMeta) { org.bukkit.inventory.meta.BookMeta bookMeta = ((org.bukkit.inventory.meta.BookMeta) (itemMeta)); bookMeta.setTitle(title); bookMeta.setAuthor(author); bookMeta.setLore(java.util.Arrays.asList(lore)); bookMeta.setPages(pages); setItemMeta(bookMeta); }else { itemMeta.setDisplayName(title); itemMeta.setLore(java.util.Arrays.asList(lore)); setItemMeta(itemMeta); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/9005/buggy-version/src.main.java.com.conventnunnery.plugins.mythicdrops.objects.parents.MythicTome.java", "BodyUseAPI": [], "Fixed commit": "a8b3cd3daa98358973c0e2fb2a2a786e43181c91", "Url": "https://api.github.com/repos/Nunnery/MythicDrops", "Date": "2013-05-19T21:02:32Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (patient == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/374/buggy-version/similarity-genotype-view.src.main.java.org.phenotips.data.similarity.genotype.DefaultPatientGenotypeManager.java", "BodyUseAPI": [], "Fixed commit": "fd16c8f56cef826ea359a6a51c853a4927a23042", "Url": "https://api.github.com/repos/phenotips/patient-network", "Date": "2017-12-07T16:56:37Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.genotype) != null) { json.put(\"genesStatus\", this.genotype.getGenesStatus()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/374/buggy-version/matching-notification-api.src.main.java.org.phenotips.matchingnotification.match.internal.DefaultPatientInMatch.java", "BodyUseAPI": [], "Fixed commit": "fd16c8f56cef826ea359a6a51c853a4927a23042", "Url": "https://api.github.com/repos/phenotips/patient-network", "Date": "2017-12-07T16:56:37Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.lang.model.element.Element.getConstantValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (defValue == null) { return \"null\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6377/buggy-version/compiler.src.main.java.me.zeyuan.lib.autopreferences.processor.PreferencesProcessor.java", "BodyUseAPI": [], "Fixed commit": "6b3c129e63e10c05f29b6087381b06da3d3a5621", "Url": "https://api.github.com/repos/HugeTimor/AutoPreferences", "Date": "2017-12-22T06:41:20Z"},
{"Line": "=>1056", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Double.parseDouble(request.getParameter(\"productWidth\"))) < 0) { request.setAttribute(\"_ERROR_MESSAGE_\", \"\u5e45\u5bbd\u5fc5\u987b\u5927\u4e8e\u7b49\u4e8e0\uff0c\u8bf7\u786e\u8ba4!\"); return \"error\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/858/buggy-version/hot-deploy.zuczugcommon.src.com.zuczug.product.ZuczugProductUtils.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "9a9ece54a454a882afb621a100d10285c53b6ea3", "Url": "https://api.github.com/repos/zuczug/bluemountain", "Date": "2016-06-29T07:08:15Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((danmakuView) != null) { master.flame.danmaku.controller.IDanmakuView.OnDanmakuClickListener onDanmakuClickListener = danmakuView.getOnDanmakuClickListener(); if (onDanmakuClickListener != null) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2616/buggy-version/DanmakuFlameMaster.src.main.java.master.flame.danmaku.ui.widget.DanmakuTouchHelper.java", "BodyUseAPI": [], "Fixed commit": "2723364b4bfdbef2ddad0cff814b0f7054b449d0", "Url": "https://api.github.com/repos/Bilibili/DanmakuFlameMaster", "Date": "2016-10-14T06:45:30Z"},
{"Line": "=>536", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.localizedLookup) != localizedLookup) { this.localizedLookup = localizedLookup; clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1159/buggy-version/src.main.java.freemarker.cache.TemplateCache.java", "BodyUseAPI": [], "Fixed commit": "caeccda7d74bf54627078153d5be3f06d55cfbc9", "Url": "https://api.github.com/repos/freemarker/freemarker-old", "Date": "2015-01-17T12:03:57Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.address.logic.parser.AddressBookParser.parseCommand(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((command instanceof seedu.address.logic.commands.ClearCommand) && (!((seedu.address.model.ListingUnit.getCurrentPredicate()) instanceof seedu.address.model.module.predicates.UniqueModuleCodePredicate))) { undoRedoStack.clearRedoStack(); undoRedoStack.clearUndoStack(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2977/buggy-version/src.main.java.seedu.address.logic.LogicManager.java", "BodyUseAPI": [], "Fixed commit": "07c4a862956f5181c9d81d66806392be1ed63514", "Url": "https://api.github.com/repos/CS2103AUG2017-W13-B4/main", "Date": "2017-11-12T15:46:04Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uiListedBaseContentData) != null) { uiListedBaseContentData.showEmptyView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8857/buggy-version/ocmsdk.src.main.java.com.gigigo.orchextra.core.sdk.model.grid.ContentGridLayoutView.java", "BodyUseAPI": [], "Fixed commit": "0d0d3ce7447bf56f87db2664a6f9134bc96f5336", "Url": "https://api.github.com/repos/Orchextra/orchextra-content-android-sdk", "Date": "2017-05-09T12:02:06Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.COMMON_CONFIG) { mCalcMonitor.addCalled(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/301/buggy-version/common.src.main.java.com.github.piasy.okbuck.example.common.Calc.java", "BodyUseAPI": [], "Fixed commit": "661fa5f0ee12aa976707e7a8618da79a8c470c57", "Url": "https://api.github.com/repos/uber/okbuck", "Date": "2015-10-14T06:49:23Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (uri != null) { com.matchandtrade.authentication.AuthenticationOAuthNewUserMock.logger.info(\"Redirecting to {}\", uri.toString()); response.sendRedirect(uri.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5049/buggy-version/src.main.java.com.matchandtrade.authentication.AuthenticationOAuthNewUserMock.java", "BodyUseAPI": ["java.net.URI.toString()", "javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)", "org.slf4j.Logger.info(java.lang.String,java.lang.String)", "java.net.URI.toString()"], "Fixed commit": "e7582bad725fe6465a6d12987b23678b025da889", "Url": "https://api.github.com/repos/rafasantos/matchandtrade-web-api", "Date": "2017-05-04T02:51:40Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((set == '*') || (set == '/')) { temp = calculate(st.nextToken()); val = val + (java.lang.Integer.toString(temp)); temp = -(calculate(val)); }else { temp = calculate(val); if (!(st.hasMoreTokens())) { temp = -temp; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4909/buggy-version/src.main.java.univ.lecture.Calculator.java", "BodyUseAPI": [], "Fixed commit": "8db87c25e06826ea29f08ff7f0d592a02117458f", "Url": "https://api.github.com/repos/Carlllll/ci-example-1", "Date": "2017-04-06T11:48:20Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(in.hasNext())) { throw new assignment2.APException((\"No expression specified, at line \" + (lineCount))); }else { throw new assignment2.APException(((((\"Invalid character for start of factor: '\" + (in.next())) + \"'\") + \" on line \") + (lineCount))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8691/buggy-version/src.assignment2.Main.java", "BodyUseAPI": ["java.util.Scanner.next()"], "Fixed commit": "de21f20e042e5227fa9461ee184838e7a16acab0", "Url": "https://api.github.com/repos/TjarcoKerssens/AP2", "Date": "2014-10-03T14:41:54Z"},
{"Line": "=>549", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.util.PsiTreeUtil.getParentOfType((pointer != null ? pointer.getElement() : null),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((typeCase != null) && ((typeCase.getDefault()) != null)) { return ((com.goide.psi.impl.GoTypeSwitchGuard) (parent)).getExpression().getGoType(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2444/buggy-version/src.com.goide.psi.impl.GoPsiImplUtil.java", "BodyUseAPI": [], "Fixed commit": "e15c1a0fe30c3f80d6811aa0215c02400eba9d9d", "Url": "https://api.github.com/repos/auduchinok/go-lang-idea-plugin", "Date": "2015-07-12T05:45:36Z"},
{"Line": "=>686", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dest.length) > 0) { name = dest[((dest.length) - 1)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5898/buggy-version/plugins.org.python.pydev.src.org.python.pydev.editor.PyEditTitle.java", "BodyUseAPI": [], "Fixed commit": "5d49ea2f6572b4dbf975943a2901bb55deb790c3", "Url": "https://api.github.com/repos/aptana/Pydev", "Date": "2011-04-05T23:09:31Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MainApplication.screenType) == null) MainApplication.screenType = MainApplication.LastScreenType.GAME;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3478/buggy-version/app.src.main.java.chess.chessgame.MainGame.java", "BodyUseAPI": [], "Fixed commit": "5b496e5ccfa0ad90c238ea201f12a1d0bda35e15", "Url": "https://api.github.com/repos/CodeDayPros/ChessGameAndroid", "Date": "2015-10-18T16:49:55Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MainApplication.screenType) == (MainApplication.LastScreenType.GAME)) { return gameScreen; }else if ((MainApplication.screenType) == (MainApplication.LastScreenType.LEVELSELECT)) { return new chess.chessgame.LevelSelectScreen(this, generator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3478/buggy-version/app.src.main.java.chess.chessgame.MainGame.java", "BodyUseAPI": [], "Fixed commit": "5b496e5ccfa0ad90c238ea201f12a1d0bda35e15", "Url": "https://api.github.com/repos/CodeDayPros/ChessGameAndroid", "Date": "2015-10-18T16:49:55Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["VariantAnnotationUtils.isSynonymousCodon.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (replacementMap != null) { java.lang.Boolean isSynonymous = replacementMap.get(java.lang.String.valueOf(modifiedCodonArray)); if (isSynonymous != null) { if (isSynonymous) { if (org.opencb.cellbase.core.variant.annotation.VariantAnnotationUtils.isStopCodon(referenceCodon)) { SoNames.add(VariantAnnotationUtils.STOP_RETAINED_VARIANT); } }else { if (org.opencb.cellbase.core.variant.annotation.VariantAnnotationUtils.isStopCodon(java.lang.String.valueOf(referenceCodon))) { SoNames.add(VariantAnnotationUtils.STOP_LOST); }else if (org.opencb.cellbase.core.variant.annotation.VariantAnnotationUtils.isStopCodon(java.lang.String.valueOf(modifiedCodonArray))) { SoNames.add(VariantAnnotationUtils.STOP_GAINED); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8004/buggy-version/cellbase-core.src.main.java.org.opencb.cellbase.core.variant.annotation.ConsequenceTypeCalculator.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Boolean>.get(java.lang.String)"], "Fixed commit": "a75fc8a22fbf3bc266af30543fe2fb3bd1c9e8da", "Url": "https://api.github.com/repos/opencb/cellbase", "Date": "2015-10-06T14:24:57Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.datavyu.Configuration.getIgnoreVersion()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((ignoreVersion == null) || ((m_server) == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5971/buggy-version/src.main.java.org.datavyu.views.UpdateV.java", "BodyUseAPI": [], "Fixed commit": "dfd8bb61931ace08c637d3deeec1f72b43863ae1", "Url": "https://api.github.com/repos/databrary/datavyu", "Date": "2013-08-27T19:08:36Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.shuyu.gsyvideoplayer.GSYVideoManager.instance().getMediaPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (mediaPlayer == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/9041/buggy-version/gsyVideoPlayer.src.main.java.com.shuyu.gsyvideoplayer.GSYVideoPlayer.java", "BodyUseAPI": [], "Fixed commit": "3d748da7a9f5cc5a51471105d06d5542fd01723b", "Url": "https://api.github.com/repos/junchenChow/GSYVideoPlayer", "Date": "2017-02-08T11:11:55Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.shuyu.gsyvideoplayer.GSYVideoManager.instance().getMediaPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (mediaPlayer == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/9041/buggy-version/gsyVideoPlayer.src.main.java.com.shuyu.gsyvideoplayer.GSYVideoPlayer.java", "BodyUseAPI": [], "Fixed commit": "3d748da7a9f5cc5a51471105d06d5542fd01723b", "Url": "https://api.github.com/repos/junchenChow/GSYVideoPlayer", "Date": "2017-02-08T11:11:55Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.eobjects.analyzer.util.ClassLoaderUtils.getParentClassLoader().equals(getClass().getClassLoader())) { classLoaders = new java.lang.ClassLoader[]{ org.eobjects.analyzer.util.ClassLoaderUtils.getParentClassLoader() }; }else { classLoaders = new java.lang.ClassLoader[]{ org.eobjects.analyzer.util.ClassLoaderUtils.getParentClassLoader(), getClass().getClassLoader() }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/9051/buggy-version/core.src.main.java.org.eobjects.datacleaner.util.ResourceManager.java", "BodyUseAPI": [], "Fixed commit": "47dd70bc6c9c1451bc6e8a8c28f51a30c64e15c0", "Url": "https://api.github.com/repos/mhorner7wd/DataCleaner", "Date": "2014-12-05T07:53:46Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (renderable.get()) { org.lwjgl.opengl.Display.processMessages(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7603/buggy-version/jme3-lwjgl.src.main.java.com.jme3.system.lwjgl.LwjglAbstractDisplay.java", "BodyUseAPI": [], "Fixed commit": "19338deaf88ae1683df2b83fefff77f1d30500ca", "Url": "https://api.github.com/repos/jMonkeyEngine/jmonkeyengine", "Date": "2015-03-28T02:42:34Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (noteLab == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1596/buggy-version/app.src.main.java.com.art2cat.dev.moonlightnote.Controller.Settings.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "e415b047a265c66a212254cb12ee37a61d308ef8", "Url": "https://api.github.com/repos/Art2Cat/MoonlightNote", "Date": "2017-01-06T12:22:40Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (listener != null) { if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.HONEYCOMB_MR1)) { listener.onUpdate((1 - (animation.getAnimatedFraction()))); }else { listener.onUpdate((((float) (animation.getCurrentPlayTime())) / (mDuration))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8296/buggy-version/src.com.yildizkabaran.twittersplash.view.SplashView.java", "BodyUseAPI": ["com.yildizkabaran.twittersplash.view.SplashView.ISplashListener.onUpdate((1 - (animation.getAnimatedFraction())))", "com.yildizkabaran.twittersplash.view.SplashView.ISplashListener.onUpdate(float)"], "Fixed commit": "329725b26890f43e07913aede82965259f95e9db", "Url": "https://api.github.com/repos/ykabaran/TwitterSplash", "Date": "2014-08-01T11:44:16Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (objAt.has(\"href\")) { this.artists.add(new com.jspotify.meta.Artist(objAt.getString(\"href\"), objAt.getString(\"name\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8581/buggy-version/src.com.jspotify.meta.Track.java", "BodyUseAPI": ["net.sf.json.JSONObject.getString(java.lang.String)", "net.sf.json.JSONObject.getString(java.lang.String)", "java.util.List<com.jspotify.meta.Artist>.add(com.jspotify.meta.Artist)"], "Fixed commit": "d3d2db356823d5fa502268b146429d92f86091ba", "Url": "https://api.github.com/repos/cannonpalms/JSpotify", "Date": "2013-06-17T23:43:01Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).get()", "io.cattle.platform.iaas.api.auth.dao.AuthDao.hasAccessToAnyProject(java.util.Set<io.cattle.platform.api.auth.Identity>,boolean,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((!hasAccessToAProject) && (hasLoggedIn != null)) && (!((java.lang.Boolean) (hasLoggedIn)))) { projectResourceManager.createProjectForUser(account); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5389/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.TokenUtils.java", "BodyUseAPI": [], "Fixed commit": "9668b45b66f587f594de203a8b0cfaf5074c4fbf", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-09-03T18:02:11Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (account != null) { io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).set(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5389/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.TokenUtils.java", "BodyUseAPI": ["io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN)", "io.cattle.platform.object.util.DataAccessor.fields(io.cattle.platform.core.model.Account)", "io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).set(boolean)"], "Fixed commit": "9668b45b66f587f594de203a8b0cfaf5074c4fbf", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-09-03T18:02:11Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (difficulties.isEmpty()) { for (models.Mode mode : modes) { bestScores.addAll(models.Scores.keepBestScoresForEachPlayer(filterBy(mode))); } return bestScores; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5392/buggy-version/app.models.Game.java", "BodyUseAPI": [], "Fixed commit": "d34a8ade4015e1777d1860b5ef4ec8d8c7404d70", "Url": "https://api.github.com/repos/jsmadja/shmuphiscores", "Date": "2013-12-02T19:31:21Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (buildingIds != null) { for (int buildingId : buildingIds) { com.lynnjosse.EvalTool.models.Building building = buildingDao.findOne(buildingId); user.removeFromBuilding(building); userDao.save(user); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3474/buggy-version/src.main.java.com.lynnjosse.EvalTool.Controllers.UserController.java", "BodyUseAPI": [], "Fixed commit": "a2588f51a3ee9b81cbb736d1b105b6ac731c6b5e", "Url": "https://api.github.com/repos/lynnjosse/EvalTool", "Date": "2017-09-12T22:28:53Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentLocationAddress) != null) { java.lang.String country = currentLocationAddress.getCountryName(); int countryIndex = countriesList.indexOf(country); if (countryIndex > (-1)) { countries.setSelection(countryIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3755/buggy-version/client.src.main.java.net.palacesoft.cngstation.client.StationActivity.java", "BodyUseAPI": [], "Fixed commit": "28be042b45b24984758e00d33d53a4a1289e7fea", "Url": "https://api.github.com/repos/manuel-palacio/CNG-Stations", "Date": "2012-08-25T14:31:08Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((authorData.getId()) == null) com.pratilipi.pagecontent.author.AuthorContentHelper.createUpdateAuthorPageUrl(author.getId(), request);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4658/buggy-version/src.com.pratilipi.pagecontent.author.AuthorContentHelper.java", "BodyUseAPI": [], "Fixed commit": "3e16ba0fa79655c4c1d4d1c08638270100a12af7", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2015-03-21T12:46:04Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.xml.bind.JAXBException.getMessage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (message == null) { message = e.getCause().getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3778/buggy-version/src.main.java.no.imr.nmdapi.common.jaxb.converters.JAXBHttpMessageConverter.java", "BodyUseAPI": [], "Fixed commit": "6d2d9dc51ee3ad389799f009f0f7056b9ed529d0", "Url": "https://api.github.com/repos/Institute-of-Marine-Research-NMD/commons-jaxb", "Date": "2015-09-22T10:33:14Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (candidates.isEmpty()) { candidates.addAll(agi.getAliveOthers()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7656/buggy-version/src.org.aiwolf.sample.player.SamplePossessed.java", "BodyUseAPI": ["java.util.List<org.aiwolf.common.data.Agent>.addAll(agi.getAliveOthers())"], "Fixed commit": "9a1e88995ca86c5c241a4253000fb3e219522454", "Url": "https://api.github.com/repos/aiwolf/AIWolfClient", "Date": "2017-07-17T05:12:01Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (candidates.isEmpty()) { candidates.addAll(agi.getAliveOthers()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7656/buggy-version/src.org.aiwolf.sample.player.SampleWerewolf.java", "BodyUseAPI": ["java.util.List<org.aiwolf.common.data.Agent>.addAll(agi.getAliveOthers())"], "Fixed commit": "9a1e88995ca86c5c241a4253000fb3e219522454", "Url": "https://api.github.com/repos/aiwolf/AIWolfClient", "Date": "2017-07-17T05:12:01Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.getBytes()", "com.orctom.rmq.QueueStore.iter(com.orctom.rmq.Queue)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (java.util.Arrays.equals(offsetBytes, iterator.key())) { iterator.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2997/buggy-version/src.main.java.com.orctom.rmq.Queue.java", "BodyUseAPI": ["org.rocksdb.RocksIterator.next()"], "Fixed commit": "59d33c697576b4105a3deb3bcdd5b685ed91e1e1", "Url": "https://api.github.com/repos/orctom/rmq", "Date": "2017-01-08T14:19:01Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (widget instanceof org.opencms.ade.containerpage.client.ui.CmsContainerPageElementPanel) { org.opencms.ade.containerpage.client.ui.CmsContainerPageElementPanel elemWidget = ((org.opencms.ade.containerpage.client.ui.CmsContainerPageElementPanel) (widget)); if (getController().requiresOptionBar(elemWidget, elemWidget.getParentTarget())) { getController().getContainerpageUtil().addOptionBar(elemWidget); }else { elemWidget.setElementOptionBar(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7381/buggy-version/src-gwt.org.opencms.ade.containerpage.client.ui.groupeditor.CmsGroupContainerEditor.java", "BodyUseAPI": [], "Fixed commit": "b8c38333b94d0fb5facc0b9cc8c1bf729506d8cc", "Url": "https://api.github.com/repos/alkacon/opencms-core", "Date": "2016-05-04T07:07:02Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ru.nekit.androidsamplelist.samples.BatteryActivity.instance) != null) { ru.nekit.androidsamplelist.samples.BatteryActivity.instance.updateBatteryInfo(intent); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3702/buggy-version/src.ru.nekit.androidsamplelist.samples.BatteryActivity.java", "BodyUseAPI": [], "Fixed commit": "36ebf1a7ddae062c5eb9dfd3758e14f3ddb9befe", "Url": "https://api.github.com/repos/ru-nekit-android/AndroidSampleList", "Date": "2012-08-25T06:48:15Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((destinations.size()) > 0) { packetsInTransit.add(new projectmsn.RetransmissionThread.PacketTransmissionInfo(packet, destinations)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6223/buggy-version/src.projectmsn.RetransmissionThread.java", "BodyUseAPI": ["java.util.List<projectmsn.RetransmissionThread.PacketTransmissionInfo>.add(projectmsn.RetransmissionThread.PacketTransmissionInfo)"], "Fixed commit": "9ecc3aa75a1e5949a49552e61df8184c0dc3fe15", "Url": "https://api.github.com/repos/Washi1337/ProjectMSN", "Date": "2016-04-08T09:34:59Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(target.endsWith(\"/\"))) { target = target.concat(\"/\"); java.lang.System.out.println((\"Hold it right there, you forgot to use a trailing slash! :D\" + \"\\nWorry not, I went ahead and added one myself for you. :)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1636/buggy-version/src.nl.compra.SiteMapGenerator.Program.java", "BodyUseAPI": [], "Fixed commit": "9c79a2e6008935fefdc1e5023d499565c240f8e1", "Url": "https://api.github.com/repos/CompraBV/CompraSiteMapper", "Date": "2016-01-28T15:48:36Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((java.lang.Boolean) (data))) { timer.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3464/buggy-version/app.src.main.java.com.calimero.knx.knxoncalimero.KnxCommunicationObject.java", "BodyUseAPI": [], "Fixed commit": "436f63c0e6d7a43507a96e082b03d769669e1211", "Url": "https://api.github.com/repos/Ch4ins4w/KNXonCalimero", "Date": "2015-01-14T13:31:29Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getTag().equals(FragmentTags.PROFILE_FROM_LOGIN)) { loadFragment(R.id.frame_content, ((li.barter.fragments.AbstractBarterLiFragment) (android.support.v4.app.Fragment.instantiate(getActivity(), li.barter.fragments.BooksAroundMeFragment.class.getName(), null))), FragmentTags.BOOKS_AROUND_ME, true, null); }else { onUpNavigate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1769/buggy-version/barter.li.src.li.barter.fragments.ProfileFragment.java", "BodyUseAPI": [], "Fixed commit": "220f53fabea92ec7b20eb67d508e745c640b737d", "Url": "https://api.github.com/repos/barterli/barterli_android", "Date": "2014-04-25T09:46:42Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (card == null) { cardId = cardDao.insert(handle, dataContainer, dataContainer.getSchema()); }else { cardDao.updateByCardId(handle, dataContainer, dataContainer.getSchema()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4408/buggy-version/src.main.java.com.anfelisa.box.views.CardView.java", "BodyUseAPI": [], "Fixed commit": "65a0ac9a367380edff78966bf98041c1aad10544", "Url": "https://api.github.com/repos/annettedorothea/com.anfelisa.server", "Date": "2017-02-06T19:59:15Z"},
{"Line": "=>630", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (srcType == (FileType.OWNED_FILE)) { if ((this.fileLedgers.get(filename).getReplicatedId()) == Node.Node.DEFAULT_ID) { client.sendFile(this.getFullPath(filename, FileType.OWNED_FILE)); }else { client.sendFile(this.getFullPath(filename, FileType.LOCAL_FILE)); } }else { client.sendFile(this.getFullPath(filename, srcType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/85/buggy-version/src.Node.FileManager.java", "BodyUseAPI": ["Node.FileManager.getFullPath(java.lang.String,Node.FileType)", "IO.Network.TCP.Client.sendFile(java.lang.String)"], "Fixed commit": "ade737a8d3cf7b5c52393a23964807622423c1f1", "Url": "https://api.github.com/repos/AstridVanneste/System_Y", "Date": "2017-12-11T10:56:17Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ifStatement.getOperation()) instanceof IC.AST.Break) { propagate(ifStatement.getOperation(), scope); }else { propagate(ifStatement.getOperation(), new IC.Symbols.CodeBlockSymbolTable(scope)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6140/buggy-version/src.IC.SemanticChecks.SymbolTableBuilder.java", "BodyUseAPI": ["IC.AST.If.getOperation()", "IC.AST.If.getOperation()", "IC.SemanticChecks.SymbolTableBuilder.propagate(ifStatement.getOperation(),IC.Symbols.CodeBlockSymbolTable)", "IC.SemanticChecks.SymbolTableBuilder.propagate(ifStatement.getOperation(),IC.Symbols.SymbolTable)"], "Fixed commit": "43af0ba1f3d2d0aac1303636846511025e8f87fe", "Url": "https://api.github.com/repos/sharon-rozinsky/ICCompiler", "Date": "2014-12-20T20:39:31Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((editOperation == (EditOperation.Delete)) && ((lastEditOperation) == (EditOperation.Insert))) { childEditDiscount = editDiscount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5262/buggy-version/FuzzySearch.src.Query.ActivePriorityNode.java", "BodyUseAPI": [], "Fixed commit": "0853662e749e706af934a73332ad4f2f11859788", "Url": "https://api.github.com/repos/Sigurdw/SteinkjerSearch", "Date": "2012-10-30T23:15:44Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.parser.JSONLexer.stringVal()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"\".equals(text)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7385/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec.java", "BodyUseAPI": [], "Fixed commit": "08329f4e0d9143a9378ef7baab71b1faef7c3c0d", "Url": "https://api.github.com/repos/VictorZeng/fastjson", "Date": "2017-02-14T06:31:01Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lexer.token()) == (com.alibaba.fastjson.parser.JSONToken.NULL)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7385/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec.java", "BodyUseAPI": [], "Fixed commit": "08329f4e0d9143a9378ef7baab71b1faef7c3c0d", "Url": "https://api.github.com/repos/VictorZeng/fastjson", "Date": "2017-02-14T06:31:01Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.dawnsci.plotting.api.IPlottingSystem<?>.getRegion(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (region == null) { createRegion(roi, guiBean); }else { region.setROI(roi); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4704/buggy-version/uk.ac.diamond.scisoft.analysis.plotclient.src.uk.ac.diamond.scisoft.analysis.plotclient.connection.PlottingGUIUpdate.java", "BodyUseAPI": ["org.eclipse.dawnsci.plotting.api.region.IRegion.setROI(org.eclipse.dawnsci.analysis.api.roi.IROI)"], "Fixed commit": "1f284a091b43d3afccb68eb5c3c3f08b5fa454a8", "Url": "https://api.github.com/repos/DawnScience/scisoft-ui", "Date": "2017-04-06T14:10:27Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((n != null) && (!(names.remove(n)))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4704/buggy-version/uk.ac.diamond.scisoft.analysis.plotclient.src.uk.ac.diamond.scisoft.analysis.plotclient.connection.PlottingGUIUpdate.java", "BodyUseAPI": [], "Fixed commit": "1f284a091b43d3afccb68eb5c3c3f08b5fa454a8", "Url": "https://api.github.com/repos/DawnScience/scisoft-ui", "Date": "2017-04-06T14:10:27Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.dawnsci.analysis.api.roi.IROI.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (n != null) { n = n.trim(); if ((n.length()) == 0) { n = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4704/buggy-version/uk.ac.diamond.scisoft.analysis.plotclient.src.uk.ac.diamond.scisoft.analysis.plotclient.connection.PlottingGUIUpdate.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "1f284a091b43d3afccb68eb5c3c3f08b5fa454a8", "Url": "https://api.github.com/repos/DawnScience/scisoft-ui", "Date": "2017-04-06T14:10:27Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.castorflex.android.quickanswer.ui.LinearLayout.findViewById(R.id.imageView_actionbar)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((imageView.getDrawable()) == null) imageView.setVisibility(View.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/291/buggy-version/src.fr.castorflex.android.quickanswer.ui.MessageFragment.java", "BodyUseAPI": ["fr.castorflex.android.quickanswer.ui.ImageView.setVisibility(View.GONE)"], "Fixed commit": "89f7f85d3065cf9681786485156f654ce0e9e0d5", "Url": "https://api.github.com/repos/castorflex/QuickAnswer", "Date": "2012-09-24T15:27:24Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((addTask) != null) { addTask.cancel(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1268/buggy-version/src.main.java.net.nikr.eve.jeveasset.gui.dialogs.account.AccountImportDialog.java", "BodyUseAPI": [], "Fixed commit": "703e8b828336b89ca0ecb1c87e6ee74fde5a3183", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-04-29T10:27:45Z"},
{"Line": "=>717", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (session != null) { session.capture(s.previewRequestBuilder.build(), null, handler); session.setRepeatingRequest(s.previewRequest, null, handler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8916/buggy-version/cam2.src.main.java.com.commonsware.cwac.cam2.CameraTwoEngine.java", "BodyUseAPI": ["android.hardware.camera2.CameraCaptureSession.capture(s.previewRequestBuilder.build(),<nulltype>,android.os.Handler)", "android.hardware.camera2.CameraCaptureSession.setRepeatingRequest(android.hardware.camera2.CaptureRequest,<nulltype>,android.os.Handler)"], "Fixed commit": "0b11a4a17f2bdcd65caa81b7009626302e72a41b", "Url": "https://api.github.com/repos/commonsguy/cwac-cam2", "Date": "2016-11-27T15:03:57Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.darkhax.bookshelf.lib.util.ItemStackUtils.createStackFromString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (net.darkhax.bookshelf.lib.util.ItemStackUtils.isValidStack(foodStack)) tip.add(((((net.minecraft.util.StatCollector.translateToLocal(\"tooltip.darkutils.feeder.type\")) + \": \") + (net.minecraft.util.EnumChatFormatting.BLUE)) + (foodStack.getDisplayName())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5489/buggy-version/src.main.java.net.darkhax.darkutils.addons.waila.DarkUtilsTileProvider.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(((((net.minecraft.util.StatCollector.translateToLocal(\"tooltip.darkutils.feeder.type\")) + \": \") + (net.minecraft.util.EnumChatFormatting.BLUE)) + (foodStack.getDisplayName())))", "net.minecraft.item.ItemStack.getDisplayName()"], "Fixed commit": "d989d3f659ce35dc8b1f91905b04c1028249e139", "Url": "https://api.github.com/repos/Darkhax-Minecraft/Dark-Utilities", "Date": "2016-03-11T21:46:58Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.avaje.ebean.Model.Finder<java.lang.Long, models.TravelOrder>.all()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((tos.isEmpty()) || (tos == null)) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5019/buggy-version/app.models.TravelOrder.java", "BodyUseAPI": [], "Fixed commit": "66fa033289528c5ccac0558cbd9b1361beecdb99", "Url": "https://api.github.com/repos/nvuchinic/FleetManagement.v1", "Date": "2015-10-06T10:54:32Z"},
{"Line": "=>8", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (number != 0) numberOfBits = (java.lang.Math.log(((int) (java.lang.Math.abs(number))))) / (java.lang.Math.log(2));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7676/buggy-version/src.numberConversionAlgoritme.SecondComplementBinaryConversion.java", "BodyUseAPI": ["java.lang.Math.abs(double)", "java.lang.Math.log(double)"], "Fixed commit": "bdf8c5bebca2103f420784e7d807220d5e395c9c", "Url": "https://api.github.com/repos/SanderDemeester/numberConverter", "Date": "2012-06-25T15:12:54Z"},
{"Line": "=>665", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data.contains(\"DB execute failed ERROR\")) { return \"There was a problem validating this order\"; }else return data;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2970/buggy-version/src.main.java.com.megaport.api.client.MegaportApiSession.java", "BodyUseAPI": [], "Fixed commit": "fe2d6b2df795f1b38b899c78be353e0acfc770bc", "Url": "https://api.github.com/repos/megaport/Java-MegaportAPI", "Date": "2016-10-13T04:25:53Z"},
{"Line": "=>726", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (amount <= 0) { return discardedCards; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2132/buggy-version/Mage.src.main.java.mage.players.PlayerImpl.java", "BodyUseAPI": [], "Fixed commit": "642de722f62b18e93d5d212cccf5e912105d8039", "Url": "https://api.github.com/repos/drmDev/mage", "Date": "2016-07-24T19:00:07Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sessionManager.checkLogin())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8566/buggy-version/app.src.main.java.com.ph.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "736bb929cb28696c880f82b5d00657469ce1a6e7", "Url": "https://api.github.com/repos/AnandSharma13/GOAL-Android-application", "Date": "2016-01-27T03:33:00Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isWindows) { robot.keyRelease(java.awt.event.KeyEvent.VK_WINDOWS); }else if (this.isMac) { robot.keyRelease(java.awt.event.KeyEvent.VK_META); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3407/buggy-version/src.app.util.AltTabStopper.java", "BodyUseAPI": [], "Fixed commit": "09416dce573d4c984d1ef7a1cfda7d583f7d2edf", "Url": "https://api.github.com/repos/baltzarmattsson/ewok", "Date": "2016-11-20T16:38:11Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState != null) { fragmentRecycler = ((todo.javier.mera.todolist.fragments.FragmentRecycler) (mFragmentHelper.findFragment(todo.javier.mera.todolist.ui.MainActivity.FRAGMENT_TAG))); getSupportActionBar().setDisplayHomeAsUpEnabled(true); }else { fragmentRecycler = todo.javier.mera.todolist.fragments.FragmentTodoList.newInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2931/buggy-version/app.src.main.java.todo.javier.mera.todolist.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b0492e60c0d43243587ff601e77b9d0b01a63c4d", "Url": "https://api.github.com/repos/JaviMera/TodoList", "Date": "2016-12-17T18:55:09Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nz.co.fortytwo.signalk.util.Util.getConfigProperty(Constants.CLIENT_MQTT)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(stompClients)) { java.lang.String[] clients = stompClients.split(\",\"); for (java.lang.String client : clients) { from((\"stomp://\" + client)).id((\"STOMP Client:\" + client)).onException(java.lang.Exception.class).handled(true).maximumRedeliveries(0).to(\"log:nz.co.fortytwo.signalk.client.stomp?level=ERROR&showException=true&showStackTrace=true\").end().transform(body().convertToString()).to(nz.co.fortytwo.signalk.server.RouteManager.SEDA_INPUT); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3817/buggy-version/src.main.java.nz.co.fortytwo.signalk.server.RouteManager.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "231ef1b681c37588130777e43372a2c9e0e37b4a", "Url": "https://api.github.com/repos/SignalK/signalk-server-java", "Date": "2015-08-17T02:10:48Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getImageLinks()) != null) { literatureItem.setImageUrl(getImageLinks().getThumbnail()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5288/buggy-version/src.main.java.com.github.lerkasan.literature.parser.GoogleBookJson.java", "BodyUseAPI": [], "Fixed commit": "032010da07c2d3bbbaf871243d77929e5acd4bf4", "Url": "https://api.github.com/repos/lerkasan/literature_collection", "Date": "2016-06-30T14:56:44Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getIndustryIdentifiers()) != null) && ((getIndustryIdentifiers().get(0)) != null)) { literatureItem.setIsbn(getIndustryIdentifiers().get(0).getIdentifier()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5288/buggy-version/src.main.java.com.github.lerkasan.literature.parser.GoogleBookJson.java", "BodyUseAPI": [], "Fixed commit": "032010da07c2d3bbbaf871243d77929e5acd4bf4", "Url": "https://api.github.com/repos/lerkasan/literature_collection", "Date": "2016-06-30T14:56:44Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (members.containsKey(identifier)) { result.add(members.get(identifier)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6961/buggy-version/src.main.java.de.uni.bremen.monty.moco.ast.ClassScope.java", "BodyUseAPI": ["de.uni.bremen.monty.moco.ast.ClassScope.get(de.uni.bremen.monty.moco.ast.ResolvableIdentifier)", "java.util.List<de.uni.bremen.monty.moco.ast.Declaration>.add(members.get(identifier))"], "Fixed commit": "e944e9394028eca328e27e2d98f511a102a4fbf1", "Url": "https://api.github.com/repos/cpfr/moco", "Date": "2015-11-02T15:56:33Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.devnied.emvnfccard.adapter.EventAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((event.getCurrency()) != (com.github.devnied.emvnfccard.model.enums.CurrencyEnum.XXX)) { java.util.Currency currency = java.util.Currency.getInstance(event.getCurrency().getCode()); if (currency != null) { symbol.setText(currency.getSymbol(java.util.Locale.getDefault())); amount.setText(event.getCurrency().format(event.getAmount().longValue())); }else { amount.setText(java.lang.String.valueOf(event.getAmount().longValue())); } }else { amount.setText(event.getCurrency().format(event.getAmount().longValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/123/buggy-version/sample.src.main.java.com.github.devnied.emvnfccard.adapter.EventAdapter.java", "BodyUseAPI": ["event.getCurrency().format(event.getAmount().longValue())", "java.util.Currency.getInstance(event.getCurrency().getCode())", "android.widget.TextView.setText(event.getCurrency().format(event.getAmount().longValue()))", "android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.setText(event.getCurrency().format(event.getAmount().longValue()))", "com.github.devnied.emvnfccard.model.EMVPaymentRecord.getCurrency()", "event.getAmount().longValue()", "event.getCurrency().getCode()", "event.getCurrency().format(event.getAmount().longValue())", "event.getAmount().longValue()", "event.getAmount().longValue()", "com.github.devnied.emvnfccard.model.EMVPaymentRecord.getAmount()", "com.github.devnied.emvnfccard.model.EMVPaymentRecord.getCurrency()", "com.github.devnied.emvnfccard.model.EMVPaymentRecord.getCurrency()", "java.lang.String.valueOf(event.getAmount().longValue())", "com.github.devnied.emvnfccard.model.EMVPaymentRecord.getAmount()", "com.github.devnied.emvnfccard.model.EMVPaymentRecord.getAmount()"], "Fixed commit": "4bc7c66efdb6ce40d5888b74364057a77046a3d3", "Url": "https://api.github.com/repos/devnied/EMV-NFC-Paycard-Enrollment", "Date": "2014-05-07T21:30:11Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (record != null) { if ((record.getCurrency()) == null) { record.setCurrency(CurrencyEnum.XXX); } listRecord.add(record); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/123/buggy-version/library.src.main.java.com.github.devnied.emvnfccard.parser.impl.DefaultEmvParser.java", "BodyUseAPI": ["com.github.devnied.emvnfccard.model.EMVPaymentRecord.setCurrency(CurrencyEnum.XXX)", "com.github.devnied.emvnfccard.model.EMVPaymentRecord.getCurrency()", "java.util.List<com.github.devnied.emvnfccard.model.EMVPaymentRecord>.add(com.github.devnied.emvnfccard.model.EMVPaymentRecord)"], "Fixed commit": "4bc7c66efdb6ce40d5888b74364057a77046a3d3", "Url": "https://api.github.com/repos/devnied/EMV-NFC-Paycard-Enrollment", "Date": "2014-05-07T21:30:11Z"},
{"Line": "=>898", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id.equals(\"unnamed#unnamed\")) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/9099/buggy-version/src.main.java.kodkod.engine.unbounded.ElectrodPrinter.java", "BodyUseAPI": [], "Fixed commit": "b9d864dcf1383a7093f7321de119be4558e30649", "Url": "https://api.github.com/repos/haslab/Pardinus", "Date": "2017-12-18T19:52:37Z"},
{"Line": "=>883", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id.isEmpty()) return \"unnamed#unnamed\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/9099/buggy-version/src.main.java.kodkod.engine.unbounded.ElectrodPrinter.java", "BodyUseAPI": [], "Fixed commit": "b9d864dcf1383a7093f7321de119be4558e30649", "Url": "https://api.github.com/repos/haslab/Pardinus", "Date": "2017-12-18T19:52:37Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mService) != null) mService.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5418/buggy-version/WristbandAPI.src.com.idthk.wristband.api.BLEBaseFragmentActivity.java", "BodyUseAPI": [], "Fixed commit": "f18e61ebb593a5826b1f685fe727cb6a638f188d", "Url": "https://api.github.com/repos/fishkingsin/WristbandProject", "Date": "2013-08-21T09:04:04Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((content) == null) { synchronized(this) { if ((content) == null) { cleaner.clean(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/890/buggy-version/devel.web.web-commons.src.main.java.net.contextfw.web.commons.minifier.ContentServlet.java", "BodyUseAPI": [], "Fixed commit": "ffb8a95957669db9bfd4ee3d5aeef61c05f6aa2f", "Url": "https://api.github.com/repos/contextfw/contextfw", "Date": "2011-11-22T17:30:51Z"},
{"Line": "=>637", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.chdp.chdpweb.service.PrescriptionService.getPrsForPrintOrderListUnprinted(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((prsList.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1031/buggy-version/src.main.java.com.chdp.chdpweb.service.PrescriptionService.java", "BodyUseAPI": [], "Fixed commit": "63b27646d9031516dcd362e145909fa405e87ad9", "Url": "https://api.github.com/repos/jianzj/CHDPWeb", "Date": "2016-06-05T06:18:06Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(has(playerName, v))) { return new net.milkbowl.vault.economy.EconomyResponse(v, getBalance(playerName), EconomyResponse.ResponseType.FAILURE, \"Insufficient funds.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/545/buggy-version/SaneEconomyCore.src.main.java.org.appledash.saneeconomy.vault.EconomySaneEconomy.java", "BodyUseAPI": ["org.appledash.saneeconomy.vault.EconomySaneEconomy.getBalance(java.lang.String)"], "Fixed commit": "5158689a2a2a2eae38f042faec23b8f4b40aedc1", "Url": "https://api.github.com/repos/AppleDash/SaneEconomy", "Date": "2016-07-22T17:12:57Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(has(offlinePlayer, v))) { return new net.milkbowl.vault.economy.EconomyResponse(v, getBalance(offlinePlayer), EconomyResponse.ResponseType.FAILURE, \"Insufficient funds.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/545/buggy-version/SaneEconomyCore.src.main.java.org.appledash.saneeconomy.vault.EconomySaneEconomy.java", "BodyUseAPI": ["org.appledash.saneeconomy.vault.EconomySaneEconomy.getBalance(org.bukkit.OfflinePlayer)"], "Fixed commit": "5158689a2a2a2eae38f042faec23b8f4b40aedc1", "Url": "https://api.github.com/repos/AppleDash/SaneEconomy", "Date": "2016-07-22T17:12:57Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (qLang == null) { qLang = \"en\"; if ((literal.lastIndexOf(\"@\")) != (-1)) { qLang = literal.substring(((literal.lastIndexOf(\"@\")) + 1), literal.length()); } literal = literal.substring(0, literal.lastIndexOf(\"@\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7537/buggy-version/src.main.java.org.aksw.gerbil.dataset.converter.impl.SPARQLBasedLiteral2Resource.java", "BodyUseAPI": [], "Fixed commit": "6b535804d2c54537e5cec33a6679643c0934b124", "Url": "https://api.github.com/repos/dice-group/gerbil", "Date": "2017-05-08T21:38:48Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.twitter.kinesis.utils.Environment.clientId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (clientId > 0) { return new com.twitter.hbc.core.endpoint.RealTimeEnterpriseStreamingEndpoint(account, product, label, clientId); }else { return new com.twitter.hbc.core.endpoint.RealTimeEnterpriseStreamingEndpoint(account, product, label); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4586/buggy-version/src.main.java.com.twitter.kinesis.ConnectorApplication.java", "BodyUseAPI": [], "Fixed commit": "0de438c39091715d1939601f269c6813e569bcb6", "Url": "https://api.github.com/repos/offerpop/sample-kinesis-connector", "Date": "2015-07-02T19:14:23Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dailystudio.app.fragment.AbsLoaderFragment<T>.getLoaderManagerSafe()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (ldMgr != null) { ldMgr.restartLoader(getLoaderId(), createLoaderArguments(), this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6966/buggy-version/src.main.java.com.dailystudio.app.fragment.AbsLoaderFragment.java", "BodyUseAPI": ["android.support.v4.app.LoaderManager.restartLoader(int,android.os.Bundle,com.dailystudio.app.fragment.AbsLoaderFragment<T>)"], "Fixed commit": "38cc087fd787672a929792042258415a81fa29fb", "Url": "https://api.github.com/repos/dailystudio/devbricks", "Date": "2017-02-10T08:02:10Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dailystudio.app.fragment.AbsLoaderFragment<T>.getLoaderManagerSafe()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (ldMgr != null) { ldMgr.initLoader(getLoaderId(), createLoaderArguments(), this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6966/buggy-version/src.main.java.com.dailystudio.app.fragment.AbsLoaderFragment.java", "BodyUseAPI": ["android.support.v4.app.LoaderManager.initLoader(int,android.os.Bundle,com.dailystudio.app.fragment.AbsLoaderFragment<T>)"], "Fixed commit": "38cc087fd787672a929792042258415a81fa29fb", "Url": "https://api.github.com/repos/dailystudio/devbricks", "Date": "2017-02-10T08:02:10Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (em.getTransaction().isActive()) { em.getTransaction().commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2513/buggy-version/vehicle-spring.vehicle-jpa.src.main.java.de.crowdcode.vehicle.controller.spi.DBFixture.java", "BodyUseAPI": ["em.getTransaction().commit()", "javax.persistence.EntityManager.getTransaction()"], "Fixed commit": "d170d27306bfc27cb3c4695f0ea72a1a7a906b75", "Url": "https://api.github.com/repos/idueppe/java-tdd-track", "Date": "2013-11-26T22:02:31Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(em.getTransaction().isActive())) { em.getTransaction().begin(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2513/buggy-version/vehicle-spring.vehicle-jpa.src.main.java.de.crowdcode.vehicle.controller.spi.DBFixture.java", "BodyUseAPI": ["javax.persistence.EntityManager.getTransaction()", "em.getTransaction().begin()"], "Fixed commit": "d170d27306bfc27cb3c4695f0ea72a1a7a906b75", "Url": "https://api.github.com/repos/idueppe/java-tdd-track", "Date": "2013-11-26T22:02:31Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isDirty) { lastDirtyWatcher = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4806/buggy-version/views.src.main.java.com.flarestar.drones.views.Scope.java", "BodyUseAPI": [], "Fixed commit": "f2f53a8761127c47fd6763f6890e0e4d267150fc", "Url": "https://api.github.com/repos/diosmosis/drones", "Date": "2015-11-27T19:34:17Z"},
{"Line": "=>802", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.egov.collection.utils.CollectionsUtil.LOGGER.isDebugEnabled()) org.egov.collection.utils.CollectionsUtil.LOGGER.debug(\"updateReceiptDetailsAndGetReceiptAmountInfo - before calling LAMS update\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7825/buggy-version/egov.egov-collection.src.main.java.org.egov.collection.utils.CollectionsUtil.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "a92f6e88cb4fd785f8b9e3606a750655f62c3dc0", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2017-06-01T06:40:33Z"},
{"Line": "=>806", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.egov.collection.utils.CollectionsUtil.LOGGER.isDebugEnabled()) org.egov.collection.utils.CollectionsUtil.LOGGER.debug((\"updateReceiptDetailsAndGetReceiptAmountInfo - url\" + url));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7825/buggy-version/egov.egov-collection.src.main.java.org.egov.collection.utils.CollectionsUtil.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "a92f6e88cb4fd785f8b9e3606a750655f62c3dc0", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2017-06-01T06:40:33Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(word.equals(\"\"))) { sequenceWords.add(word); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6246/buggy-version/src.indsys.Sequence.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "76ac6524d474ad8cee277fe804830b1a9ec89567", "Url": "https://api.github.com/repos/Semester5/SystemArchitecture01", "Date": "2017-10-25T09:24:30Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sequence.getSequenceWords().size()) > 0) { sequences.add(sequence); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6246/buggy-version/src.indsys.SequenceWordsFilter.java", "BodyUseAPI": ["java.util.ArrayList<indsys.Sequence>.add(indsys.Sequence)"], "Fixed commit": "76ac6524d474ad8cee277fe804830b1a9ec89567", "Url": "https://api.github.com/repos/Semester5/SystemArchitecture01", "Date": "2017-10-25T09:24:30Z"},
{"Line": "=>458", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((words.length) > 0) { labels = new java.util.ArrayList<java.lang.String>(); for (int i = 0; i < (words.length); i++) { labels.add(words[i]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7352/buggy-version/src.mytasks.parser.MyTasksParser.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "3504fd9ad7ab75a40c352c1d01f80ae76f176530", "Url": "https://api.github.com/repos/cs2103aug2014-w09-1j/main", "Date": "2014-10-21T06:25:23Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (user != null) { obj.add(\"userId\", toElement(user.getUuid())); obj.add(\"userName\", toElement(user.getName())); }else { obj.add(\"userId\", JsonNull.INSTANCE); obj.add(\"userName\", JsonNull.INSTANCE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4032/buggy-version/structr-core.src.main.java.org.structr.core.graph.GraphObjectModificationState.java", "BodyUseAPI": ["org.structr.core.entity.Principal.getName()", "com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)", "com.google.gson.JsonObject.add(java.lang.String,com.google.gson.JsonElement)", "org.structr.core.graph.GraphObjectModificationState.toElement(user.getUuid())", "org.structr.core.graph.GraphObjectModificationState.toElement(user.getName())", "org.structr.core.entity.Principal.getUuid()"], "Fixed commit": "d83ba5c710cb634f25e890f6fe9aa94d76eb81f1", "Url": "https://api.github.com/repos/structr/structr", "Date": "2017-08-03T13:48:48Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.contextInfo.getExecution().getOwner().getUserActor()) != null) { return this.contextInfo.getExecution().getOwner().getUserActor().getExternalId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4048/buggy-version/backend.src.main.java.cz.cuni.mff.xrg.odcs.backend.context.Context.java", "BodyUseAPI": ["this.contextInfo.getExecution().getOwner().getUserActor()", "cz.cuni.mff.xrg.odcs.commons.app.execution.context.ExecutionContextInfo.getExecution()", "this.contextInfo.getExecution().getOwner().getUserActor().getExternalId()", "this.contextInfo.getExecution().getOwner()"], "Fixed commit": "37c1b72d8bca3500040d5aac78a25cd420d88607", "Url": "https://api.github.com/repos/UnifiedViews/Core", "Date": "2015-05-11T09:37:39Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (responseCode == 404) { de.ifgi.lod4wfs.factory.FactorySPARQLFeatures.logger.info((\"URL cannot be resolved -> \" + endpoint)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/661/buggy-version/lod4wfs.src.main.java.de.ifgi.lod4wfs.factory.FactorySPARQLFeatures.java", "BodyUseAPI": [], "Fixed commit": "f7d5235adec676ef762fa8240ffe658fffddd3a6", "Url": "https://api.github.com/repos/jimjonesbr/lod4wfs", "Date": "2014-02-27T17:13:44Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()", "javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((csv.combinedLines(start, end).size()) == 0) { route.setText((\"<html>DIRECTIONS:<br>\" + (csv.directions(start, end, false)))); }else { route.setText(((\"<html>DIRECTIONS:<br>\" + (csv.directions2(start, end))) + \"</html>\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/952/buggy-version/Layout.java", "BodyUseAPI": ["CSVRoute.directions(java.lang.String,java.lang.String,boolean)", "javax.swing.JLabel.setText(((\"<html>DIRECTIONS:<br>\" + (csv.directions2(start, end))) + \"</html>\"))", "javax.swing.JLabel.setText((\"<html>DIRECTIONS:<br>\" + (csv.directions(start, end, false))))", "CSVRoute.directions2(java.lang.String,java.lang.String)"], "Fixed commit": "3e5b9af0c64fab2fb1df09e801705680d3e6fffe", "Url": "https://api.github.com/repos/drozenzaft/finalproject", "Date": "2017-01-18T02:49:23Z"},
{"Line": "=>805", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (prefix == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1482/buggy-version/src.org.exist.xmldb.XmldbURI.java", "BodyUseAPI": [], "Fixed commit": "de4cf446c51619532a8dffe53156b577d788977f", "Url": "https://api.github.com/repos/ljo/exist", "Date": "2016-08-27T07:01:02Z"},
{"Line": "=>812", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exist.xmldb.XmldbURI.getPathSegments()", "org.exist.xmldb.XmldbURI.getPathSegments()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((prefix_segments.length) > (segments.length)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1482/buggy-version/src.org.exist.xmldb.XmldbURI.java", "BodyUseAPI": [], "Fixed commit": "de4cf446c51619532a8dffe53156b577d788977f", "Url": "https://api.github.com/repos/ljo/exist", "Date": "2016-08-27T07:01:02Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCustomView) != null) { customViewFrame.setVisibility(View.VISIBLE); onBindCustomView(mCustomView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2/buggy-version/src.main.java.at.jclehner.rxdroid.ui.DialogLike.java", "BodyUseAPI": [], "Fixed commit": "aaff3b64c2f49da2ea589ae0f0b2c4d21b535584", "Url": "https://api.github.com/repos/jclehner/rxdroid", "Date": "2014-10-29T16:11:14Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((allocatedLocalPath) == null) allocatedLocalPath = new java.util.HashSet<org.apache.hadoop.fs.Path>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4610/buggy-version/genomix.genomix-data.src.main.java.edu.uci.ics.genomix.data.types.FileManager.java", "BodyUseAPI": [], "Fixed commit": "3d9e9305c52caeab2f546af2c056c12855b6a4d3", "Url": "https://api.github.com/repos/uci-cbcl/genomix", "Date": "2014-04-09T06:28:03Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((allocatedHdfsPath) == null) allocatedHdfsPath = new java.util.HashSet<org.apache.hadoop.fs.Path>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4610/buggy-version/genomix.genomix-data.src.main.java.edu.uci.ics.genomix.data.types.FileManager.java", "BodyUseAPI": [], "Fixed commit": "3d9e9305c52caeab2f546af2c056c12855b6a4d3", "Url": "https://api.github.com/repos/uci-cbcl/genomix", "Date": "2014-04-09T06:28:03Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (leftClicked) { java.lang.System.out.println(\"called\"); bu.setSelected(((!(bu.isSelected())) && (cancel))); }else bu.setSelected(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4872/buggy-version/MS.src.main.java.pat.game.MS.Game.java", "BodyUseAPI": [], "Fixed commit": "3e79ea8799a0743b993c5deedc9ecd23ae4e3a62", "Url": "https://api.github.com/repos/patrickkuo/minesweeper", "Date": "2012-07-08T17:31:46Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.stage.FileChooser.showSaveDialog(getScene().getWindow())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (file != null) { converter.convert(chart, file); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7942/buggy-version/src.main.java.org.cirdles.topsoil.chart.concordia.ErrorChartToolBar.java", "BodyUseAPI": ["org.cirdles.jfxutils.NodeToSVGConverter.convert(org.cirdles.topsoil.chart.concordia.ErrorEllipseChart,java.io.File)"], "Fixed commit": "05e7e794f5d36a98a9bec8de8138f077ff4aac58", "Url": "https://api.github.com/repos/CIRDLES/topsoil", "Date": "2014-10-13T15:45:51Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opendaylight.lispflowmapping.implementation.util.LispAFIConvertor.toAFI(org.opendaylight.yang.gen.v1.urn.opendaylight.lfm.control.plane.rev150314.lispaddress.LispAddressContainer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (address instanceof org.opendaylight.yang.gen.v1.urn.opendaylight.lfm.control.plane.rev150314.lispaddress.lispaddresscontainer.address.ipv6.Ipv6Address) { tab.setIpAddress(org.opendaylight.yang.gen.v1.urn.ietf.params.xml.ns.yang.ietf.inet.types.rev100924.IpAddressBuilder.getDefaultInstance(((org.opendaylight.yang.gen.v1.urn.opendaylight.lfm.control.plane.rev150314.lispaddress.lispaddresscontainer.address.ipv6.Ipv6Address) (address)).getIpv6Address().getValue())); tab.setPort(new org.opendaylight.yang.gen.v1.urn.ietf.params.xml.ns.yang.ietf.inet.types.rev100924.PortNumber(org.opendaylight.lispflowmapping.implementation.serializer.LispMessage.PORT_NUM)); }else if (address instanceof org.opendaylight.yang.gen.v1.urn.opendaylight.lfm.control.plane.rev150314.lispaddress.lispaddresscontainer.address.lcafkeyvalue.LcafKeyValueAddressAddr) { org.opendaylight.yang.gen.v1.urn.opendaylight.lfm.control.plane.rev150314.lispsimpleaddress.PrimitiveAddress primitiveAddress = ((org.opendaylight.yang.gen.v1.urn.opendaylight.lfm.control.plane.rev150314.lispaddress.lispaddresscontainer.address.lcafkeyvalue.LcafKeyValueAddressAddr) (address)).getValue().getPrimitiveAddress(); if (primitiveAddress instanceof org.opendaylight.yang.gen.v1.urn.opendaylight.lfm.control.plane.rev150314.LispDistinguishedNameAddress) { java.lang.String value = ((org.opendaylight.yang.gen.v1.urn.opendaylight.lfm.control.plane.rev150314.LispDistinguishedNameAddress) (primitiveAddress)).getDistinguishedName(); java.lang.String ip = value.split(\":\")[0]; int port = java.lang.Integer.valueOf(value.split(\":\")[1]); tab.setIpAddress(org.opendaylight.yang.gen.v1.urn.ietf.params.xml.ns.yang.ietf.inet.types.rev100924.IpAddressBuilder.getDefaultInstance(ip)); tab.setPort(new org.opendaylight.yang.gen.v1.urn.ietf.params.xml.ns.yang.ietf.inet.types.rev100924.PortNumber(port)); } }else if (address instanceof org.opendaylight.yang.gen.v1.urn.opendaylight.lfm.control.plane.rev150314.lispaddress.lispaddresscontainer.address.distinguishedname.DistinguishedName) { org.opendaylight.yang.gen.v1.urn.opendaylight.lfm.control.plane.rev150314.lispaddress.lispaddresscontainer.address.distinguishedname.DistinguishedName dname = ((org.opendaylight.yang.gen.v1.urn.opendaylight.lfm.control.plane.rev150314.lispaddress.lispaddresscontainer.address.distinguishedname.DistinguishedName) (address)); java.lang.String value = dname.getDistinguishedName(); java.lang.String ip = value.split(\":\")[0]; int port = java.lang.Integer.valueOf(value.split(\":\")[1]); tab.setIpAddress(org.opendaylight.yang.gen.v1.urn.ietf.params.xml.ns.yang.ietf.inet.types.rev100924.IpAddressBuilder.getDefaultInstance(ip)); tab.setPort(new org.opendaylight.yang.gen.v1.urn.ietf.params.xml.ns.yang.ietf.inet.types.rev100924.PortNumber(port)); }else if (address instanceof org.opendaylight.yang.gen.v1.urn.opendaylight.lfm.control.plane.rev150314.LcafApplicationDataAddress) { org.opendaylight.yang.gen.v1.urn.opendaylight.lfm.control.plane.rev150314.LcafApplicationDataAddress appData = ((org.opendaylight.yang.gen.v1.urn.opendaylight.lfm.control.plane.rev150314.LcafApplicationDataAddress) (address)); tab.setIpAddress(org.opendaylight.yang.gen.v1.urn.ietf.params.xml.ns.yang.ietf.inet.types.rev100924.IpAddressBuilder.getDefaultInstance(((org.opendaylight.yang.gen.v1.urn.opendaylight.lfm.control.plane.rev150314.lispsimpleaddress.primitiveaddress.Ipv4) (appData.getAddress().getPrimitiveAddress())).getIpv4Address().getIpv4Address().getValue())); tab.setPort(new org.opendaylight.yang.gen.v1.urn.ietf.params.xml.ns.yang.ietf.inet.types.rev100924.PortNumber(appData.getLocalPortLow())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4315/buggy-version/mappingservice.implementation.src.main.java.org.opendaylight.lispflowmapping.implementation.util.LispNotificationHelper.java", "BodyUseAPI": [], "Fixed commit": "167b38e797bd8a9442725cb9b1d383de1e12831c", "Url": "https://api.github.com/repos/opendaylight/lispflowmapping", "Date": "2015-06-30T22:32:25Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data) != null) { data.setBindingDefinitionType(DataBinding.BindingDefinitionType.GET); notifiedBindingChanged(this.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1124/buggy-version/flexo-foundation.src.main.java.org.openflexo.foundation.viewpoint.inspector.InspectorEntry.java", "BodyUseAPI": [], "Fixed commit": "5dbf49f0bb5a5b8797921042f3b3768461692dae", "Url": "https://api.github.com/repos/openflexo-team/openflexo-core", "Date": "2014-09-29T15:42:21Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["response.getRequest().getProjectPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(projectPath.endsWith(response.getPathSplitter()))) { projectPath += response.getPathSplitter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6798/buggy-version/src.com.ccnode.codegenerator.genCode.GenCodeService.java", "BodyUseAPI": ["com.ccnode.codegenerator.pojo.GenCodeResponse.getPathSplitter()"], "Fixed commit": "39da4e623dc86727f49057c01be82e342b90bf9c", "Url": "https://api.github.com/repos/zhengjunbase/codehelper.generator", "Date": "2016-07-25T07:26:07Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (prefs.getBoolean(\"school_wifi_login_flag\", false)) { final java.lang.String action = intent.getAction(); if (action != null) { if (action.equals(WifiManager.NETWORK_STATE_CHANGED_ACTION)) { android.net.wifi.WifiManager wfMgr = ((android.net.wifi.WifiManager) (context.getSystemService(Context.WIFI_SERVICE))); if (wfMgr.isWifiEnabled()) { android.net.wifi.WifiInfo wfInfo = wfMgr.getConnectionInfo(); if ((wfInfo.getSSID()) != null) { if (wfInfo.getSSID().contains(\"Ohs-Guest\")) { new us.rjuhsd.ohs.OHSApp.tasks.WiFiAutoLoginTask().execute(context); } } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1286/buggy-version/src.us.rjuhsd.ohs.OHSApp.https.WiFiStateReceiver.java", "BodyUseAPI": [], "Fixed commit": "231507f57743aca691983e4aa31c0156b0d921d1", "Url": "https://api.github.com/repos/OakmontHighSchool/OHSApp", "Date": "2014-03-08T08:22:14Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (new_mappingid.equals(mapping_id)) { return -1; }else { throw new it.unibz.krdb.obda.exception.DuplicateMappingException(new_mappingid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2321/buggy-version/obdalib-core.src.main.java.it.unibz.krdb.obda.model.impl.OBDAModelImpl.java", "BodyUseAPI": [], "Fixed commit": "ac63b82f18a235e70c3c21b074a1ec35206565db", "Url": "https://api.github.com/repos/ontop/ontop", "Date": "2014-11-03T18:01:03Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getSystemService(net.bertware.flybsca.notifications.CONNECTIVITY_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (manager == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3043/buggy-version/FlyBSCA.src.main.java.net.bertware.flybsca.notifications.NotificationAlarmManager.java", "BodyUseAPI": [], "Fixed commit": "bf47eba833fa428cffa757961f3e2248ed3a30bd", "Url": "https://api.github.com/repos/Bertware/FlyBSCA", "Date": "2017-09-24T09:22:46Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (spell instanceof edu.chl.KeyboardChaos.model.spell.Fireball) { edu.chl.KeyboardChaos.model.spell.Fireball fireball = new edu.chl.KeyboardChaos.model.spell.Fireball(); fireball.setPosX(posX); fireball.setPosY(posY); return new edu.chl.KeyboardChaos.controller.battlecontroller.spellcontroller.OffensiveSpellController(fireball, player, fixtureManager); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2101/buggy-version/core.src.edu.chl.KeyboardChaos.controller.battlecontroller.spellcontroller.SpellControllerFactory.java", "BodyUseAPI": [], "Fixed commit": "d4ecbb6e2cf00a074b94d6151732f5a8af821fb8", "Url": "https://api.github.com/repos/Clutchek/keyBoardChaos", "Date": "2015-05-31T14:05:58Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (haxeClass instanceof com.intellij.plugins.haxe.util.HaxeTypedefDeclaration) { com.intellij.plugins.haxe.util.HaxeClassResolveResult temp = com.intellij.plugins.haxe.util.HaxeClassResolveResult.create(haxeClass, specialization); temp.specializeByParameters(type.getTypeParam()); specialization = temp.getSpecialization(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2804/buggy-version/src.common.com.intellij.plugins.haxe.util.HaxeResolveUtil.java", "BodyUseAPI": ["com.intellij.plugins.haxe.util.HaxeClassResolveResult.create(com.intellij.plugins.haxe.util.HaxeClass,com.intellij.plugins.haxe.util.HaxeGenericSpecialization)"], "Fixed commit": "f2b4c4dd6899d9dbab71bae29adc4bc98745dbe9", "Url": "https://api.github.com/repos/eliasku/intellij-haxe", "Date": "2016-02-23T15:25:03Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((query) == null) { query = settings.getTargetResource(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4277/buggy-version/src.main.java.org.elasticsearch.hadoop.mr.ESInputFormat.java", "BodyUseAPI": [], "Fixed commit": "b1cabba31a9c2d36119a8965469e5696b566ea55", "Url": "https://api.github.com/repos/tzolov/elasticsearch-hadoop", "Date": "2013-04-10T01:23:19Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.motechproject.ebodac.domain.Visit>.get(visits.indexOf(visit))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((existingVisit.getMotechProjectedDate()) == null) { existingVisit.setMotechProjectedDate(visit.getMotechProjectedDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1204/buggy-version/src.main.java.org.motechproject.ebodac.service.impl.VisitServiceImpl.java", "BodyUseAPI": ["org.motechproject.ebodac.domain.Visit.setMotechProjectedDate(visit.getMotechProjectedDate())"], "Fixed commit": "b691b63eede3cb63d3fa835a0f767d60725fa5b4", "Url": "https://api.github.com/repos/MikolajBasSoldevelo/ebodac", "Date": "2015-10-05T17:10:19Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, MultiQueueFiFoScheduler.QueueProperty>.get(queryTaskContext.getSession().getVariable(Scheduler.QUERY_QUEUE_KEY, Scheduler.DEFAULT_QUEUE_NAME))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((queueProperty.getMaxCapacity()) > 0) { resources = java.lang.Math.min(event.getRequiredNum(), queueProperty.getMaxCapacity()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2061/buggy-version/tajo-core.src.main.java.org.apache.tajo.worker.TajoResourceAllocator.java", "BodyUseAPI": ["MultiQueueFiFoScheduler.QueueProperty.getMaxCapacity()", "java.lang.Math.min(event.getRequiredNum(),queueProperty.getMaxCapacity())"], "Fixed commit": "16584977a1f81fbabb0e2915bfc9991ca5a4f95a", "Url": "https://api.github.com/repos/babokim/tajo", "Date": "2014-06-17T02:18:39Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pair == null) return new java.util.ArrayList<DummyCore.Utils.UnformedItemStack>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6698/buggy-version/java.ec3.api.MagicianTableRecipes.java", "BodyUseAPI": [], "Fixed commit": "3deae9dd4985f74217d3a292cf0e7d0c434cfdd7", "Url": "https://api.github.com/repos/Modbder/EssentialCraft3", "Date": "2015-05-12T21:19:40Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.johnny.gank.ui.activity.PictureActivity.getInitPicPos(mStore.getPictureList())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (0 == initPos) { mPageChangeListener.onPageSelected(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/596/buggy-version/app.src.main.java.com.johnny.gank.ui.activity.PictureActivity.java", "BodyUseAPI": [], "Fixed commit": "b860038a65fb45c1e76784ed6c7cea224509d3ed", "Url": "https://api.github.com/repos/JohnnyShieh/Gank", "Date": "2016-07-31T10:45:58Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (field.isAdvanced()) llAdvancedFields.addView(together); else llFormFields.addView(together);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3564/buggy-version/src.de.geeksfactory.opacclient.frontend.SearchFragment.java", "BodyUseAPI": [], "Fixed commit": "9aeba67465140096db539664ca96465dd46085c6", "Url": "https://api.github.com/repos/johan12345/opacclient", "Date": "2014-09-18T08:53:40Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (path == null) this.path = com.github.marmalade.aRevelation.OpenFileFragment.DEFAULT_PATH; else this.path = path;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7001/buggy-version/src.com.github.marmalade.aRevelation.OpenFileFragment.java", "BodyUseAPI": [], "Fixed commit": "21aad2aaee46caeb5573145ff1883a37cc023840", "Url": "https://api.github.com/repos/sviro/aRevelation", "Date": "2013-09-07T12:30:37Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["old.m_Reservations.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (old_res != null) { old.m_Reservations.put(key, old_res.copy()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8569/buggy-version/src.ResImpl.ResourceManagerImpl.java", "BodyUseAPI": ["ResImpl.ReservedItem.copy()", "old.m_Reservations.put(java.lang.String,old_res.copy())"], "Fixed commit": "668a8867ebee753668d226a3f5f090649a4c6be2", "Url": "https://api.github.com/repos/aallai/the_reservator", "Date": "2011-11-14T20:12:46Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((config) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4323/buggy-version/app.src.main.java.org.cm.podd.report.model.view.QuestionView.java", "BodyUseAPI": [], "Fixed commit": "152d446a14392d47c2716758a7857bada19b0567", "Url": "https://api.github.com/repos/openpodd/podd-android", "Date": "2017-04-04T14:16:33Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((config) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4323/buggy-version/app.src.main.java.org.cm.podd.report.model.view.QuestionView.java", "BodyUseAPI": [], "Fixed commit": "152d446a14392d47c2716758a7857bada19b0567", "Url": "https://api.github.com/repos/openpodd/podd-android", "Date": "2017-04-04T14:16:33Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileList.get(i)) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8840/buggy-version/src.main.java.eu.koncina.ij.V5S.V5sReader.java", "BodyUseAPI": [], "Fixed commit": "815b5cac7f929ee3e7e508556b181301113f0537", "Url": "https://api.github.com/repos/koncina/Virtual_5D_Stack", "Date": "2017-02-26T10:07:13Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isBackPressed)) { startActivity(startMenuActivity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3150/buggy-version/src.com.chalmers.schmaps.Startup.java", "BodyUseAPI": [], "Fixed commit": "afcc19a0644323de593f570711e3b79f8f3bef4a", "Url": "https://api.github.com/repos/Frolle/Schmaps", "Date": "2012-10-17T19:47:54Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(registers.containsKey(regIndex))) { registers.put(regIndex, new Memory.Register(regIndex)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8860/buggy-version/registerMachine.src.Memory.Configuration.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, Memory.Register>.put(int,Memory.Register)"], "Fixed commit": "dce2d70cd190d83e0fe93855997e41674ebb24d9", "Url": "https://api.github.com/repos/WenquanZou/RegisterMachine", "Date": "2017-12-25T06:15:25Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.Integer.compareUnsigned(end, b.start)) > 0) && ((java.lang.Integer.compareUnsigned(b.end, start)) > 0)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2102/buggy-version/src.data.AddressBlock.java", "BodyUseAPI": [], "Fixed commit": "aaf0897d5d10f9c17832f40f9551458b4a26ecc0", "Url": "https://api.github.com/repos/VivienGaluchot/HexUtil", "Date": "2017-02-20T17:23:30Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((end) != (getAlignedEnd())) return (((((((((\"0x\" + (java.lang.Integer.toHexString(start))) + \"->\") + \"0x\") + (java.lang.Integer.toHexString(end))) + \"/0x\") + (java.lang.Integer.toHexString(getAlignedEnd()))) + \" : \") + (getSize())) + \"/\") + (getAlignedSize()); else return (((((\"0x\" + (java.lang.Integer.toHexString(start))) + \"->\") + \"0x\") + (java.lang.Integer.toHexString(end))) + \" : \") + (getSize());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2102/buggy-version/src.data.AddressBlock.java", "BodyUseAPI": [], "Fixed commit": "aaf0897d5d10f9c17832f40f9551458b4a26ecc0", "Url": "https://api.github.com/repos/VivienGaluchot/HexUtil", "Date": "2017-02-20T17:23:30Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (codeEpoch < 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8223/buggy-version/APP-CineReminDay.src.main.java.fr.delcey.cinereminday.CRDUtils.java", "BodyUseAPI": [], "Fixed commit": "5f5f35bdc625bb0a1e03b99ee4ef8f77d9a42b42", "Url": "https://api.github.com/repos/NinoDLC/CineReminDay", "Date": "2017-06-26T00:35:47Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (codeEpoch < 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8223/buggy-version/APP-CineReminDay.src.main.java.fr.delcey.cinereminday.CRDUtils.java", "BodyUseAPI": [], "Fixed commit": "5f5f35bdc625bb0a1e03b99ee4ef8f77d9a42b42", "Url": "https://api.github.com/repos/NinoDLC/CineReminDay", "Date": "2017-06-26T00:35:47Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.andes.kernel.OnflightMessageTracker.getInstance().getNotAckedMessageCount(localSubscription.getChannelID())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (notAckedMsgCount < 0) { if (org.wso2.andes.kernel.MessageFlusher.log.isDebugEnabled()) { org.wso2.andes.kernel.MessageFlusher.log.debug(\"Invalid local subscription selected to send messages\"); } return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1481/buggy-version/modules.andes-core.broker.src.main.java.org.wso2.andes.kernel.MessageFlusher.java", "BodyUseAPI": [], "Fixed commit": "109f3d8e60831b4e4b6fddea6a7179c70e890c8b", "Url": "https://api.github.com/repos/AnujaLK/andes", "Date": "2015-04-07T12:41:40Z"},
{"Line": "=>688", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((unAckedMsgCountMap.get(channelID)) != null) { return unAckedMsgCountMap.get(channelID).get(); }else { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1481/buggy-version/modules.andes-core.broker.src.main.java.org.wso2.andes.kernel.OnflightMessageTracker.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicInteger.get()", "java.util.concurrent.ConcurrentMap<java.util.UUID, java.util.concurrent.atomic.AtomicInteger>.get(java.util.UUID)"], "Fixed commit": "109f3d8e60831b4e4b6fddea6a7179c70e890c8b", "Url": "https://api.github.com/repos/AnujaLK/andes", "Date": "2015-04-07T12:41:40Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(f.exists())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3951/buggy-version/src.main.java.ora4mas.nopl.WebInterface.java", "BodyUseAPI": [], "Fixed commit": "618b4019312192ac9a3b9c4ad048ae40669d6bce", "Url": "https://api.github.com/repos/moise-lang/moise", "Date": "2017-11-08T15:47:23Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.sf.cram.structure.Slice.log.isEnabled(LogLevel.DEBUG)) { java.lang.StringBuffer sb = new java.lang.StringBuffer(); int shoulder = 10; if ((ref.length) <= (shoulder * 2)) sb.append(new java.lang.String(ref)); else { sb.append(new java.lang.String(java.util.Arrays.copyOfRange(ref, ((alignmentStart) - 1), ((alignmentStart) + shoulder)))); sb.append(\"...\"); sb.append(new java.lang.String(java.util.Arrays.copyOfRange(ref, ((((alignmentStart) - 1) + span) - shoulder), ((alignmentStart) + span)))); } net.sf.cram.structure.Slice.log.debug(java.lang.String.format(\"Slice md5: %s for %d:%d-%d, %s\", java.lang.String.format(\"%032x\", new java.math.BigInteger(1, refMD5)), sequenceId, alignmentStart, (((alignmentStart) + span) - 1), sb.toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7618/buggy-version/src.main.java.net.sf.cram.structure.Slice.java", "BodyUseAPI": ["net.sf.picard.util.Log.debug(java.lang.String)"], "Fixed commit": "05c5fd5f02802ff2e09f1c6d489fc8dceb292b34", "Url": "https://api.github.com/repos/enasequence/cramtools", "Date": "2015-04-17T13:06:37Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type != (java.sql.Types.SMALLINT)) return rst.getObject(columnIndex);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3388/buggy-version/railo-java.railo-core.src.railo.runtime.query.caster.OtherCast.java", "BodyUseAPI": [], "Fixed commit": "4c43213e608ca31893e4e41e6ef3ca2ced98501a", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-04-04T11:32:37Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (anno == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5321/buggy-version/src.main.java.de.unihalle.informatik.Alida.dataio.provider.swing.ALDOperatorDataIOSwing.java", "BodyUseAPI": [], "Fixed commit": "1d6875bd33df2ed16c1ea71163906ec06beb4957", "Url": "https://api.github.com/repos/alida-hub/alida", "Date": "2015-09-23T09:35:34Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (true) { throw new java.lang.Exception(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2044/buggy-version/kevoree-corelibrary.javase.org.kevoree.library.javase.fakeDomo.src.main.java.org.kevoree.library.FakeConsole.java", "BodyUseAPI": [], "Fixed commit": "4bb76fc8d70d727f7fe29828b7432aa61cb35c1e", "Url": "https://api.github.com/repos/dukeboard/kevoree", "Date": "2012-10-10T18:49:27Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.fabric8.kubernetes.api.model.Pod.getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"Succeeded\".equals(podStatus.getPhase())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2720/buggy-version/components.fabric8-arquillian.src.main.java.io.fabric8.arquillian.kubernetes.await.SessionPodsAreReady.java", "BodyUseAPI": [], "Fixed commit": "24f0e91eb3eb7b902b944aa0b091accc834ad8c2", "Url": "https://api.github.com/repos/chirino/fabric8v2", "Date": "2016-10-07T13:22:05Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (justClickedOnUrlLink) { justClickedOnUrlLink = false; }else if (!(webView.inSelectionActionMode())) { activity.switchFullscreen(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7011/buggy-version/bilingual-reader.src.cz.metaverse.android.bilingualreader.helper.BookPanelOnTouchListener.java", "BodyUseAPI": [], "Fixed commit": "53d358f1b57e41a079aeee1e4d46970e2e4d96ce", "Url": "https://api.github.com/repos/tomparys/bilingual-reader", "Date": "2015-05-02T00:42:37Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mtrx.length) > 0) { for (; i < (mtrx[0].length); i++) { sb.append(ss[i]); sb.append(org.nutz.dao.Sqls.formatFieldValue(mtrx[0][i])); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/14/buggy-version/src.org.nutz.dao.impl.sql.NutStatement.java", "BodyUseAPI": ["java.lang.StringBuilder.append(org.nutz.dao.Sqls.formatFieldValue(mtrx[0][i]))", "org.nutz.dao.Sqls.formatFieldValue(java.lang.Object)"], "Fixed commit": "3b218f7e0ac8f13811f51f62c097516093fd1fb3", "Url": "https://api.github.com/repos/nutzam/nutz", "Date": "2011-11-01T10:38:49Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.grow.cmputf17team4.grow.Controllers.DataManager.getInstance().getUser()) != null) { try { new com.grow.cmputf17team4.grow.Controllers.DataManager.CancelAccountTask().execute().get(); } catch (java.lang.Exception e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2155/buggy-version/Grow.app.src.main.java.com.grow.cmputf17team4.grow.Controllers.DataManager.java", "BodyUseAPI": [], "Fixed commit": "3162ba61201320fd3c7f4846f1d3db9dc6d568d8", "Url": "https://api.github.com/repos/CMPUT301F17T04/Grow", "Date": "2017-12-03T00:43:59Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (menuButton.isEnabled()) { menuItemListerner.eventFired(menuButton); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/769/buggy-version/gwt-cordova.src.main.java.nl.ru.languageininteraction.synaesthesia.client.view.MenuView.java", "BodyUseAPI": ["nl.ru.languageininteraction.synaesthesia.client.listener.PresenterEventListner.eventFired(com.google.gwt.user.client.ui.Button)"], "Fixed commit": "abba7bc5ad0794ce2a097a7613293cb723d6968e", "Url": "https://api.github.com/repos/languageininteraction/LanguageMemoryApp", "Date": "2015-02-02T14:30:51Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["at.porscheinformatik.common.spring.web.extended.io.ResourceUtils.unlocalize(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(names.contains(unlocalized))) { names.add(unlocalized); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3117/buggy-version/src.main.java.at.porscheinformatik.common.spring.web.extended.template.cache.AbstractTemplateCache.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "129dc2c8b312f03f2f8c0a4ecfd476e2b293c0e2", "Url": "https://api.github.com/repos/furti/spring-web-extended", "Date": "2014-03-29T17:22:11Z"},
{"Line": "=>706", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (function.getName().equals(\"let\")) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6747/buggy-version/SMTInterpol.src.de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.EprTheory.java", "BodyUseAPI": [], "Fixed commit": "603491ad6f3dd7678974647172eaa0f32b473009", "Url": "https://api.github.com/repos/ultimate-pa/smtinterpol", "Date": "2016-06-01T22:14:26Z"},
{"Line": "=>705", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (function.getName().equals(\"and\")) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6747/buggy-version/SMTInterpol.src.de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.EprTheory.java", "BodyUseAPI": [], "Fixed commit": "603491ad6f3dd7678974647172eaa0f32b473009", "Url": "https://api.github.com/repos/ultimate-pa/smtinterpol", "Date": "2016-06-01T22:14:26Z"},
{"Line": "=>708", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (function.getName().equals(\"=\")) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6747/buggy-version/SMTInterpol.src.de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.EprTheory.java", "BodyUseAPI": [], "Fixed commit": "603491ad6f3dd7678974647172eaa0f32b473009", "Url": "https://api.github.com/repos/ultimate-pa/smtinterpol", "Date": "2016-06-01T22:14:26Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.company.UserStorage.findUser(com.company.User)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (userToArray != null) { if (userToArray[0].equals(user.getLogin())) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2788/buggy-version/src.com.company.UserStorage.java", "BodyUseAPI": ["java.lang.String.equals(user.getLogin())"], "Fixed commit": "b3122abb1e7fa4caa06a708d31b14d2ee654969d", "Url": "https://api.github.com/repos/mzdzioch/auctionPlatform", "Date": "2017-10-28T13:09:36Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ParkingGarage.parkInGarage(Vehicle)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result) v.getATicket();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8280/buggy-version/ParkingGarageOOD.src.AccessController.java", "BodyUseAPI": [], "Fixed commit": "0f424905707ee1ac4d4444399c3cd37e2b745574", "Url": "https://api.github.com/repos/zhangruinan/LC", "Date": "2017-03-08T07:23:09Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.apache.drill.exec.proto.CoordinationProtos.DrillbitEndpoint, org.apache.drill.exec.store.schedule.AssignmentCreator.FragIteratorWrapper>.get(org.apache.drill.exec.proto.CoordinationProtos.DrillbitEndpoint)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (iteratorWrapper == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8644/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.store.schedule.AssignmentCreator.java", "BodyUseAPI": [], "Fixed commit": "84a28c0dc639d0599ade428352618ca8b32c2141", "Url": "https://api.github.com/repos/StevenMPhillips/drill", "Date": "2015-04-04T01:56:40Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPrint) return sb.toString(); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7720/buggy-version/src.main.java.net.xssu.ipm.util.PatternConvert.java", "BodyUseAPI": [], "Fixed commit": "0098995d8595c4222cc63948ae8fbaf953cc0b76", "Url": "https://api.github.com/repos/bonult/ipm", "Date": "2017-04-16T09:17:49Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((areas.size()) > 0) resourceMapper.createAreas(areas);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7720/buggy-version/src.main.java.net.xssu.ipm.service.impl.ResourceServiceImpl.java", "BodyUseAPI": ["net.xssu.ipm.mapper.ResourceMapper.createAreas(java.util.List<net.xssu.ipm.pojo.Area>)"], "Fixed commit": "0098995d8595c4222cc63948ae8fbaf953cc0b76", "Url": "https://api.github.com/repos/bonult/ipm", "Date": "2017-04-16T09:17:49Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"rmv\".equals(op)) { java.lang.String id = request.getParameter(\"dlts\"); if (id == null) { resp.setReason(Constants.ERROR_ILLEGAL); return resp; } net.xssu.ipm.pojo.Automata a = new net.xssu.ipm.pojo.Automata(java.lang.Integer.parseInt(id)); error = resourceService.simpleDelete(a); resp.setReason(\"\u5220\u9664\u6210\u529f\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7720/buggy-version/src.main.java.net.xssu.ipm.controller.AdminController.java", "BodyUseAPI": [], "Fixed commit": "0098995d8595c4222cc63948ae8fbaf953cc0b76", "Url": "https://api.github.com/repos/bonult/ipm", "Date": "2017-04-16T09:17:49Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (error == null) resp.setError_code(0); else resp.setReason(error);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7720/buggy-version/src.main.java.net.xssu.ipm.controller.AdminController.java", "BodyUseAPI": ["net.xssu.ipm.json.Resp<java.lang.String>.setReason(java.lang.String)"], "Fixed commit": "0098995d8595c4222cc63948ae8fbaf953cc0b76", "Url": "https://api.github.com/repos/bonult/ipm", "Date": "2017-04-16T09:17:49Z"},
{"Line": "=>1065", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((params.get(\"primary_recipients_toggle\")) != null) && ((primary_recipients.size()) == 0)) || (((params.get(\"primary_recipients_toggle\")) == null) && ((params.get(\"cc_recipients_toggle\")) != null))) { validation.addError(\"addFileTo\", \"You must include at least one primary recipient (not cc) when sending an email.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5365/buggy-version/app.controllers.ViewTab.java", "BodyUseAPI": [], "Fixed commit": "c8243da632cd996b3bdf1b0756e64d2ec3ec6425", "Url": "https://api.github.com/repos/TexasDigitalLibrary/Vireo", "Date": "2015-03-03T18:15:54Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((!(railo.runtime.config.NullSupportHelper.full())) && (rtn == null)) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5272/buggy-version/railo-java.railo-core.src.railo.runtime.type.scope.UndefinedImpl.java", "BodyUseAPI": [], "Fixed commit": "1ea2494a49931150a28a1198dfad9afb83cc1c4c", "Url": "https://api.github.com/repos/clitnak/mcrailo", "Date": "2013-05-02T20:47:49Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (resource == null) { throw new java.lang.IllegalArgumentException(((((\"Class \" + (clazz.getName())) + \" not found! (resource: \") + name) + \" )\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4398/buggy-version/src.main.java.org.ops4j.pax.tinybundles.core.intern.TinyBundleImpl.java", "BodyUseAPI": [], "Fixed commit": "f9428d2bee1344c2caef1752be9278da78c1044a", "Url": "https://api.github.com/repos/ops4j/org.ops4j.pax.tinybundles", "Date": "2011-07-22T12:03:04Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (choice == 4) return new LibraryDirector(connection);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2201/buggy-version/InquirySystem.java", "BodyUseAPI": [], "Fixed commit": "9e9af8614d14981cb8a167083044cd61d7ecf3ea", "Url": "https://api.github.com/repos/grayy921013/3170project", "Date": "2016-04-04T05:35:06Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.camel.util.ObjectHelper.isNotEmpty(configuration.getAmazonSNSEndpoint())) { org.apache.camel.component.aws.sns.SnsEndpoint.LOG.trace((\"Updating the SNS region with : {} \" + (configuration.getAmazonSNSEndpoint()))); getSNSClient().setEndpoint(configuration.getAmazonSNSEndpoint()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5123/buggy-version/components.camel-aws.src.main.java.org.apache.camel.component.aws.sns.SnsEndpoint.java", "BodyUseAPI": ["com.amazonaws.services.sns.AmazonSNS.setEndpoint(configuration.getAmazonSNSEndpoint())", "org.apache.camel.component.aws.sns.SnsConfiguration.getAmazonSNSEndpoint()", "org.apache.camel.component.aws.sns.SnsConfiguration.getAmazonSNSEndpoint()", "org.slf4j.Logger.trace((\"Updating the SNS region with : {} \" + (configuration.getAmazonSNSEndpoint())))"], "Fixed commit": "6936213d234556d0425f3aba668e4c1e256485c8", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-03-12T02:45:19Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.broadleafcommerce.core.web.checkout.service.CheckoutFormServiceImpl.getAddressFromCCOrderPayment(org.broadleafcommerce.core.order.domain.Order)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (orderPaymentBillingAddress != null) { billingInfoForm.setAddress(orderPaymentBillingAddress); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2331/buggy-version/core.broadleaf-framework-web.src.main.java.org.broadleafcommerce.core.web.checkout.service.CheckoutFormServiceImpl.java", "BodyUseAPI": ["org.broadleafcommerce.core.web.checkout.model.BillingInfoForm.setAddress(org.broadleafcommerce.profile.core.domain.Address)"], "Fixed commit": "67f5c78efc8881497214b2c0782b0426f7179c5f", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2017-08-11T13:04:16Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((table6.getVisibility()) == (android.view.View.VISIBLE)) { android.widget.Toast.makeText(this, \"\ub354 \uc774\uc0c1 \ub9cc\ub4e4\uc218 \uc5c6\uc2b5\ub2c8\ub2e4.\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5029/buggy-version/app.src.main.java.com.example.dsm2017.goodday.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "0718c8d723824c6ada2ece85ea6f94ff8da0d179", "Url": "https://api.github.com/repos/gtobio11/GoodDay", "Date": "2017-11-28T09:16:03Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((username.getText().toString().equals(\"admin\")) && (password.getText().toString().equals(\"admin\"))) { android.widget.Toast.makeText(getApplicationContext(), \"Redirecting to Food Bank Screen\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2783/buggy-version/app.src.main.java.com.example.anton.codeforgood.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e119db5bfa040d69c6983fb7fe755bff0ee2c404", "Url": "https://api.github.com/repos/relisher/CodeForGood", "Date": "2015-03-28T17:20:02Z"},
{"Line": "=>943", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (elementLocator.endsWith(\")\")) { elementLocator = elementLocator.substring(0, ((elementLocator.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6839/buggy-version/src.java.com.zimbra.qa.selenium.framework.ui.AbsSeleniumObject.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "4aa9a9c4b6d0c03ae5cbe6ba436764af805fe401", "Url": "https://api.github.com/repos/Zimbra/zm-selenium", "Date": "2017-09-20T06:22:45Z"},
{"Line": "=>831", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.sbolstandard.core2.SBOLReader.getNumErrors()) != 0) { for (java.lang.String error : org.sbolstandard.core2.SBOLReader.getErrors()) { java.lang.System.err.println(error); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6981/buggy-version/core2.src.main.java.org.sbolstandard.core2.SBOLValidate.java", "BodyUseAPI": [], "Fixed commit": "a52655759bcd8b8faa78446d869b157f5385d317", "Url": "https://api.github.com/repos/SynBioDex/libSBOLj", "Date": "2016-02-08T17:39:35Z"},
{"Line": "=>826", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.sbolstandard.core2.SBOLValidate.getNumErrors()) != 0) { for (java.lang.String error : org.sbolstandard.core2.SBOLValidate.getErrors()) { java.lang.System.err.println(error); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6981/buggy-version/core2.src.main.java.org.sbolstandard.core2.SBOLValidate.java", "BodyUseAPI": [], "Fixed commit": "a52655759bcd8b8faa78446d869b157f5385d317", "Url": "https://api.github.com/repos/SynBioDex/libSBOLj", "Date": "2016-02-08T17:39:35Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLoadedGame) { game_interface.UserInterface.PrintBoard(gameLogic.getGameBoard().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8959/buggy-version/src.game_engine.GameManager.java", "BodyUseAPI": [], "Fixed commit": "53ca446079bfd599a08b86946fc78aadb6dd2ab5", "Url": "https://api.github.com/repos/AlenaMus/Numberiada", "Date": "2016-12-17T17:34:42Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((boardRange.getFrom()) >= (-99)) && ((boardRange.getTo()) <= 99))) { UserInterface.ValidationErrors.add(java.lang.String.format(\"Random Board Validation Error: Board Range have to be between [-99,99]\")); return isValidBoard; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8959/buggy-version/src.game_engine.GameLogic.java", "BodyUseAPI": [], "Fixed commit": "53ca446079bfd599a08b86946fc78aadb6dd2ab5", "Url": "https://api.github.com/repos/AlenaMus/Numberiada", "Date": "2016-12-17T17:34:42Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.activePlayer) != null) { if ((playerInfo.getId()) == (this.activePlayer.getId())) { holder.bg.setBackgroundColor(this.resources.getColor(R.color.playerActive, null)); }else { holder.bg.setBackgroundColor(this.resources.getColor(R.color.playerInactive, null)); } }else { holder.bg.setBackgroundColor(this.resources.getColor(R.color.playerInactive, null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4742/buggy-version/FruitMatcher.app.src.main.java.com.example.vojtch.fruitmatcher.PlayerAdapter.java", "BodyUseAPI": [], "Fixed commit": "e17dc7088cebc3742d63c6e29d5bb522a30ca021", "Url": "https://api.github.com/repos/theazgra/FruitMatcher", "Date": "2017-11-17T10:46:46Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (EM) (trainingRound)++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2758/buggy-version/src.org.seqcode.projects.chexmix.mixturemodel.BindingMixture.java", "BodyUseAPI": [], "Fixed commit": "6735876ddabad372065ab0f33bb29d2802694a90", "Url": "https://api.github.com/repos/seqcode/chexmix", "Date": "2017-11-15T22:12:20Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.getTypePoints(c)) != null) { for (int bt = 0; bt < (this.getTypePoints(c).length); bt++) { for (int s = 0; s < 2; s++) { out = (((out + \"\\t\") + (this.getTypePoints(c)[bt][s])) + \"\\t\") + (java.lang.String.format(\"%.2f\", this.getTypeProbs(c)[bt][s])); if ((org.seqcode.projects.chexmix.events.BindingEvent.config.isAddingSequences()) && (org.seqcode.projects.chexmix.events.BindingEvent.findMotif)) if ((this.getSequence(c)) != null) out = (((out + \"\\t\") + (this.getSequence(c)[bt][s])) + \"\\t\") + (java.lang.String.format(\"%.2f\", this.getMotifScore(c)[bt][s])); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2758/buggy-version/src.org.seqcode.projects.chexmix.events.BindingEvent.java", "BodyUseAPI": ["org.seqcode.projects.chexmix.events.BindingEvent.getTypePoints(org.seqcode.deepseq.experiments.ExperimentCondition)", "org.seqcode.projects.chexmix.events.BindingEvent.getSequence(org.seqcode.deepseq.experiments.ExperimentCondition)", "java.lang.String.format(java.lang.String,this.getMotifScore(c)[bt][s])", "org.seqcode.projects.chexmix.events.BindingEvent.getSequence(org.seqcode.deepseq.experiments.ExperimentCondition)", "org.seqcode.projects.chexmix.events.BindingEvent.getTypeProbs(org.seqcode.deepseq.experiments.ExperimentCondition)", "org.seqcode.projects.chexmix.events.BindingEvent.getMotifScore(org.seqcode.deepseq.experiments.ExperimentCondition)", "org.seqcode.projects.chexmix.events.BindingEvent.getTypePoints(org.seqcode.deepseq.experiments.ExperimentCondition)", "java.lang.String.format(java.lang.String,this.getTypeProbs(c)[bt][s])"], "Fixed commit": "6735876ddabad372065ab0f33bb29d2802694a90", "Url": "https://api.github.com/repos/seqcode/chexmix", "Date": "2017-11-15T22:12:20Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) <= (Build.VERSION_CODES.JELLY_BEAN_MR1)) { requestLayout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3164/buggy-version/bubbleactions.src.main.java.me.samthompson.bubbleactions.BubbleActionOverlay.java", "BodyUseAPI": [], "Fixed commit": "92618e42e55f3c7abfaec3563e7f2d3b51fc6b63", "Url": "https://api.github.com/repos/SamThompson/BubbleActions", "Date": "2015-12-08T00:19:13Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (overrides != null) config.addConfiguration(overrides, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8119/buggy-version/guice.common.src.main.java.com.peterphi.std.guice.apploader.impl.GuiceBuilder.java", "BodyUseAPI": ["org.apache.commons.configuration.CompositeConfiguration.addConfiguration(org.apache.commons.configuration.Configuration,boolean)"], "Fixed commit": "0204a5592c4587c922a7f6f833deb32379a08968", "Url": "https://api.github.com/repos/petergeneric/stdlib", "Date": "2014-08-14T13:42:29Z"},
{"Line": "=>909", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pratilipi.data.DataAccessor.getPratilipi(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((pratilipi.getLanguage()) == (com.pratilipi.common.type.Language.GUJARATI)) || ((pratilipi.getLanguage()) == (com.pratilipi.common.type.Language.TAMIL))) com.pratilipi.common.util.FacebookApi.postScrapeRequest(((\"http://\" + (pratilipi.getLanguage().getHostName())) + (page.getUri()))); else com.pratilipi.common.util.FacebookApi.postScrapeRequest(((\"http://\" + (Website.ALL_LANGUAGE.getHostName())) + (page.getUri())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/872/buggy-version/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java", "BodyUseAPI": ["com.pratilipi.data.type.Pratilipi.getLanguage()", "pratilipi.getLanguage().getHostName()", "com.pratilipi.common.util.FacebookApi.postScrapeRequest(((\"http://\" + (pratilipi.getLanguage().getHostName())) + (page.getUri())))"], "Fixed commit": "6fa2cfb0d7061a054e2f63eddc9b251aa90883d9", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-04-17T04:47:25Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (santa) str = \"N/S Light Green. Time: \" + time; else str = \"E/W Light Green, Time: \" + time;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4435/buggy-version/src.Project1.TrafficSim.java", "BodyUseAPI": [], "Fixed commit": "a2f94a7dec90f651cb8c8352e365aac4d9272586", "Url": "https://api.github.com/repos/mjudy/TrafficSimulation", "Date": "2014-02-20T20:24:16Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.HONEYCOMB)) mAuthTask.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR); else mAuthTask.execute();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4592/buggy-version/app.src.main.java.com.ppp.esir.projetvelo.activities.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "ddc5f86ff3b11bda64a9d0189aa6a3e75adb9030", "Url": "https://api.github.com/repos/thelittlefireman/AndroidProjetVelo", "Date": "2016-05-27T08:43:12Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.plugins) != null) { this.plugins.getPluginEventManager().register(listener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6731/buggy-version/ngrinder-controller.src.main.java.org.ngrinder.infra.plugin.PluginManager.java", "BodyUseAPI": [], "Fixed commit": "8a27ea714b54b198562db056963f3ccb663935fc", "Url": "https://api.github.com/repos/nhnopensource/ngrinder", "Date": "2012-11-21T05:37:17Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((json.charAt(((json.length()) - 1))) == ',') { json = json.substring(0, ((json.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6010/buggy-version/src.net.scientifichooliganism.jsonplugin.JSONPlugin.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "4d3ada510630cfbf4f365c27fa33584bb01881d7", "Url": "https://api.github.com/repos/johnny-b-goode/powerstrip-json", "Date": "2016-08-09T14:23:41Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((java.lang.String) (this.getProduct().getTop(\"product_type\"))).toUpperCase().equals(\"ASIN\"))) asin = fetchItem(requestUrl, \"ASIN\"); else asin = ((java.lang.String) (this.getProduct().getTop(\"product_type\"))).toUpperCase();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4321/buggy-version/src.zebradev.zebraviews.processor.AmazonProcessor.java", "BodyUseAPI": [], "Fixed commit": "000cce92ac69730d668145f7435f85a0afec186c", "Url": "https://api.github.com/repos/AnimatedJuzz/ZebraViews-Server", "Date": "2014-07-10T23:07:49Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((classNode.superName.equals(\"org/bukkit/plugin/java/JavaPlugin\")) || (classNode.superName.equals(\"net/md_5/bungee/api/plugin/Plugin\"))) { for (java.util.Iterator<org.objectweb.asm.tree.FieldNode> it = classNode.fields.iterator(); it.hasNext();) { org.objectweb.asm.tree.FieldNode fieldNode = it.next(); if (((fieldNode.access) == 9) && (fieldNode.desc.equalsIgnoreCase(\"I\"))) { it.remove(); }else if (((fieldNode.access) == 9) && (fieldNode.desc.equalsIgnoreCase(\"Ljava/lang/String;\"))) { it.remove(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7972/buggy-version/me.itzsomebody.injectorremover.InjectorRemover.java", "BodyUseAPI": ["classNode.fields.iterator()"], "Fixed commit": "b91725ef3a3ae6e027e41040fc6f8980ccb5e357", "Url": "https://api.github.com/repos/ItzSomebody/DirectLeaks-AntiReleak-Remover", "Date": "2017-10-03T15:03:10Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (tx != null) { tx.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1132/buggy-version/ui.rcp.plugins.org.activitymgr.ui.rcp.src.org.activitymgr.ui.rcp.MainView.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "b0631fd633d6761e5f9c5233aa498e0a899c0549", "Url": "https://api.github.com/repos/jfbrazeau/Activity-Manager", "Date": "2015-04-18T10:56:26Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (tx != null) { tx.rollback(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1132/buggy-version/ui.rcp.plugins.org.activitymgr.ui.rcp.src.org.activitymgr.ui.rcp.MainView.java", "BodyUseAPI": ["java.sql.Connection.rollback()"], "Fixed commit": "b0631fd633d6761e5f9c5233aa498e0a899c0549", "Url": "https://api.github.com/repos/jfbrazeau/Activity-Manager", "Date": "2015-04-18T10:56:26Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getEditText()) == null) || (getEditText().isInEditMode())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4728/buggy-version/library.src.com.andreabaccega.widget.DefaultEditTextValidator.java", "BodyUseAPI": [], "Fixed commit": "f1210403aaa4ac83a3bfa9b1517361836d827498", "Url": "https://api.github.com/repos/indication/android-form-edittext", "Date": "2013-05-15T14:55:01Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.persistence.EntityManager.find(java.lang.Class,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((myUser.getUserType()) != null) { if (myUser.getUserType().equals(\"superuser\")) { result = allLog; } }else { for (java.lang.Object o : allLog) { entity.SystemLog mylog = ((entity.SystemLog) (o)); if ((mylog.getSystemUsersystemUserId().getSystemUserId()) == userId) { result.add(mylog); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7241/buggy-version/MerlionPortal.MerlionPortal-ejb.src.merlionportal.ci.loggingmodule.SystemLogSessionBean.java", "BodyUseAPI": ["entity.SystemUser.getUserType()", "myUser.getUserType().equals(java.lang.String)"], "Fixed commit": "6da6bb97c747a7524c2c16b02724725394de1e3b", "Url": "https://api.github.com/repos/PATHolongba0/merlionPortal", "Date": "2014-10-28T13:05:41Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.ayyoob.sdn.of.simulator.apps.IoTDeviceFlowBuilder.enabled)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7325/buggy-version/src.main.java.com.ayyoob.sdn.of.simulator.apps.IoTDeviceFlowBuilder.java", "BodyUseAPI": [], "Fixed commit": "9a0c87eeb668085c9121e6aee4fc99b74bbf905c", "Url": "https://api.github.com/repos/ayyoob/sdn-pcap-simulator", "Date": "2017-11-06T15:28:05Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.ayyoob.sdn.of.simulator.apps.SingleSwitchStatsCollector.enabled)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7325/buggy-version/src.main.java.com.ayyoob.sdn.of.simulator.apps.SingleSwitchStatsCollector.java", "BodyUseAPI": [], "Fixed commit": "9a0c87eeb668085c9121e6aee4fc99b74bbf905c", "Url": "https://api.github.com/repos/ayyoob/sdn-pcap-simulator", "Date": "2017-11-06T15:28:05Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentUser) != null) { return userDAO.getUserById(currentUser.getUserID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3279/buggy-version/src.main.java.taskManager.services.UserContext.java", "BodyUseAPI": [], "Fixed commit": "a2b7aac657b340a0fb47152565a849253db4984c", "Url": "https://api.github.com/repos/KanchoK/TaskManager", "Date": "2015-07-02T09:10:05Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.fi.muni.pa165.musiclibrary.facade.GenreFacade.findById(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((albumFacade.findByGenre(genre.getId()).isEmpty()) == false) { java.lang.String flashMessage = messageSource.getMessage(\"genre.delete.couldnotbydeleted\", null, loc); redirectAttributes.addFlashAttribute(\"alert_danger\", flashMessage); return \"redirect:/genre/list\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5204/buggy-version/music-library-web.src.main.java.cz.fi.muni.pa165.musiclibrary.web.controllers.GenreController.java", "BodyUseAPI": [], "Fixed commit": "be26b5fbbbb7317a3382b2c7a86dc430c759fd0e", "Url": "https://api.github.com/repos/fabik/fi-muni-PA165-music-library", "Date": "2017-12-19T18:11:48Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((temperature) != null) && ((windSpeed) != null)) { if ((temperature) < 10) { return new java.lang.Float((((13.12 + (0.6215 * (temperature))) - (13.956 * (java.lang.Math.pow(windSpeed, 0.16)))) + ((0.4867 * (temperature)) * (java.lang.Math.pow(windSpeed, 0.16))))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6255/buggy-version/weather.src.main.java.org.koivusaari.weather.pojo.StationData.java", "BodyUseAPI": [], "Fixed commit": "2c6031909ba7e90dcdeed004833f2fc57d22ac8a", "Url": "https://api.github.com/repos/mika-koivusaari/weather", "Date": "2017-04-28T20:14:36Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (neoe.util.FindJDK.isWindows) sb.append('\"');", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5155/buggy-version/src.neoe.build.tools.Path1.java", "BodyUseAPI": [], "Fixed commit": "ba071bdd323a29c8443e371009490cbe99a89707", "Url": "https://api.github.com/repos/neoedmund/neoebuild", "Date": "2017-07-21T02:46:39Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (neoe.util.FindJDK.isWindows) sb.append('\"');", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5155/buggy-version/src.neoe.build.tools.Path1.java", "BodyUseAPI": [], "Fixed commit": "ba071bdd323a29c8443e371009490cbe99a89707", "Url": "https://api.github.com/repos/neoedmund/neoebuild", "Date": "2017-07-21T02:46:39Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pet.isTamed()) tip.add((((net.minecraft.util.StatCollector.translateToLocal(\"tooltip.wawla.sit\")) + \": \") + (pet.isSitting())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/9070/buggy-version/src.main.java.net.darkhax.wawla.addons.generic.AddonGenericEntities.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add((((net.minecraft.util.StatCollector.translateToLocal(\"tooltip.wawla.sit\")) + \": \") + (pet.isSitting())))", "net.minecraft.entity.passive.EntityTameable.isSitting()"], "Fixed commit": "b9de7900dd1841d59538c18863f26b21abadca11", "Url": "https://api.github.com/repos/Darkhax-Minecraft/WAWLA", "Date": "2015-06-19T07:20:30Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (md.enableBaseMap) { initBinaryMapFile(md.baseFile.getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8652/buggy-version/OsmAndMapCreator.src.net.osmand.swing.NativeSwingRendering.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "net.osmand.swing.NativeSwingRendering.initBinaryMapFile(java.lang.String)"], "Fixed commit": "430a2d3a4b28405ffdfea8e10cb41fa8a94ed895", "Url": "https://api.github.com/repos/osmandapp/OsmAnd-tools", "Date": "2017-06-25T11:19:29Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.gw.emulator.http.client.contexts.HttpClientRequestBuilderContext.getPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (path == null) { uri = (httpSchema + uri) + \"/\"; return uri; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5514/buggy-version/integration.emulator.src.main.java.org.wso2.gw.emulator.http.client.processors.HttpRequestInformationProcessor.java", "BodyUseAPI": [], "Fixed commit": "81fcc86c5dba14f028b606ea1d4901a9e5c96499", "Url": "https://api.github.com/repos/dilshankanchana/product-gw", "Date": "2016-02-06T06:54:49Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["predicate.getTemplate().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((k.indexOf(\"#\")) > 0) { k = k.substring(((k.lastIndexOf('#')) + 1), ((k.length()) - 1)); }else { k = k.substring(((k.lastIndexOf('/')) + 1), ((k.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4993/buggy-version/src.main.java.edu.isi.karma.er.helper.SPARQLGeneratorUtil.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(char)", "java.lang.String.lastIndexOf(char)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.length()"], "Fixed commit": "1d506817c738f535153b0fb71e90c3e71248e8a0", "Url": "https://api.github.com/repos/shrikanthn/Web-Karma", "Date": "2014-02-26T18:11:47Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id == null) { throw new java.lang.IllegalArgumentException(\"Id is null.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5064/buggy-version/src.main.java.cz.muni.fi.pa165.jtravelagency.service.ReservationServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "b90827e11314cb59beeb537ae227ee0b8dcb0c9d", "Url": "https://api.github.com/repos/mvaraga/JTravelAgency", "Date": "2013-11-01T17:51:42Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (commandSender instanceof net.minecraft.tileentity.CommandBlockBaseLogic) { return new minetweaker.mc19.player.CommandBlockPlayer(commandSender); }else { java.lang.System.out.println((\"Unsupported command sender: \" + commandSender)); java.lang.System.out.println((\"player name: \" + (commandSender.getName()))); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3130/buggy-version/MineTweaker3-MC19-Main.src.main.java.minetweaker.mc19.server.MCServer.java", "BodyUseAPI": ["java.io.PrintStream.println((\"player name: \" + (commandSender.getName())))", "java.io.PrintStream.println((\"Unsupported command sender: \" + commandSender))", "net.minecraft.command.ICommandSender.getName()"], "Fixed commit": "33849588a7f9c63e61cbfda09b69b06c104b59a4", "Url": "https://api.github.com/repos/CraftTweaker/CraftTweaker", "Date": "2016-05-09T09:56:08Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (commandSender instanceof net.minecraft.command.server.CommandBlockLogic) { return new minetweaker.mc18.player.CommandBlockPlayer(commandSender); }else { java.lang.System.out.println((\"Unsupported command sender: \" + commandSender)); java.lang.System.out.println((\"player name: \" + (commandSender.getName()))); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3130/buggy-version/MineTweaker3-MC18-Main.src.main.java.minetweaker.mc18.server.MCServer.java", "BodyUseAPI": ["java.io.PrintStream.println((\"Unsupported command sender: \" + commandSender))", "java.io.PrintStream.println((\"player name: \" + (commandSender.getName())))", "net.minecraft.command.ICommandSender.getName()"], "Fixed commit": "33849588a7f9c63e61cbfda09b69b06c104b59a4", "Url": "https://api.github.com/repos/CraftTweaker/CraftTweaker", "Date": "2016-05-09T09:56:08Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (commandSender instanceof net.minecraft.command.server.CommandBlockLogic) { return new minetweaker.mc1710.player.CommandBlockPlayer(commandSender); }else { java.lang.System.out.println((\"Unsupported command sender: \" + commandSender)); java.lang.System.out.println((\"player name: \" + (commandSender.getCommandSenderName()))); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3130/buggy-version/MineTweaker3-MC1710-Main.src.main.java.minetweaker.mc1710.server.MCServer.java", "BodyUseAPI": ["net.minecraft.command.ICommandSender.getCommandSenderName()", "java.io.PrintStream.println((\"Unsupported command sender: \" + commandSender))", "java.io.PrintStream.println((\"player name: \" + (commandSender.getCommandSenderName())))"], "Fixed commit": "33849588a7f9c63e61cbfda09b69b06c104b59a4", "Url": "https://api.github.com/repos/CraftTweaker/CraftTweaker", "Date": "2016-05-09T09:56:08Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getFragmentManager().findFragmentById(android.R.id.content)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fragment == null) { getFragmentManager().beginTransaction().add(android.R.id.content, new com.example.android.sunshine.app.SettingsFragment()).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7139/buggy-version/app.src.main.java.com.example.android.sunshine.app.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "5ea55fcf5f4c2d3ae3ed66144b90f7c7a8be289b", "Url": "https://api.github.com/repos/zhengwuhao/Sunshine", "Date": "2016-09-21T10:21:34Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (neg) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4955/buggy-version/jphp-core.src.php.runtime.memory.StringMemory.java", "BodyUseAPI": [], "Fixed commit": "df3020b6b8e8f01e2b6831157388abc8669fa70e", "Url": "https://api.github.com/repos/POPSuL/jphp", "Date": "2014-04-05T06:32:01Z"},
{"Line": "=>891", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!customElementFound) targetNode = firstNode;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3670/buggy-version/src.main.java.com.hapiware.agent.Agent.java", "BodyUseAPI": [], "Fixed commit": "0061e144bbb2cbd865eb2a49995be5182745ee0c", "Url": "https://api.github.com/repos/Hapi/General-Java-agent", "Date": "2011-02-16T10:13:49Z"},
{"Line": "=>885", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (textNodeFound && customElementFound) throw new com.hapiware.agent.Agent.ConfigurationError((\"/agent/configuration/custom element cannot co-exist with a text element \" + \"(i.e. a pure string under /agent/configuration).\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3670/buggy-version/src.main.java.com.hapiware.agent.Agent.java", "BodyUseAPI": [], "Fixed commit": "0061e144bbb2cbd865eb2a49995be5182745ee0c", "Url": "https://api.github.com/repos/Hapi/General-Java-agent", "Date": "2011-02-16T10:13:49Z"},
{"Line": "=>893", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (customElementFound) { try { return delegateAgentClass.getMethod(\"unmarshall\", new java.lang.Class[]{ org.w3c.dom.Element.class }).invoke(null, targetNode); } catch (java.lang.NoSuchMethodException e) { throw new com.hapiware.agent.Agent.ConfigurationError(((\"static Object unmarshall(Element) method was not defined in \\\"\" + (delegateAgentClass.getName())) + \"\\\".\"), e); } catch (java.lang.IllegalArgumentException e) { throw new com.hapiware.agent.Agent.ConfigurationError((((\"Argument mismatch with static Object unmarshall(Element) method \" + \"in \\\"\") + (delegateAgentClass.getName())) + \"\\\".\"), e); } catch (java.lang.reflect.InvocationTargetException e) { throw new com.hapiware.agent.Agent.ConfigurationError((((\"static Object unmarshall(Element) method \" + \"in \\\"\") + (delegateAgentClass.getName())) + \"\\\" threw an exception.\"), e); } catch (java.lang.IllegalAccessException e) { assert false : e; return null; } }else { if ((targetNode == null) || ((targetNode.getNodeValue().trim().length()) == 0)) throw new com.hapiware.agent.Agent.ConfigurationError((\"/agent/configuration does not have a proper string (i.e. text element) \" + \"(or any other elements)\")); return targetNode.getNodeValue().trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3670/buggy-version/src.main.java.com.hapiware.agent.Agent.java", "BodyUseAPI": [], "Fixed commit": "0061e144bbb2cbd865eb2a49995be5182745ee0c", "Url": "https://api.github.com/repos/Hapi/General-Java-agent", "Date": "2011-02-16T10:13:49Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((start) >= 1) cis.skip(((start) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2597/buggy-version/java.main.org.hedera.io.input.WikiRevisionReader.java", "BodyUseAPI": ["org.apache.hadoop.io.compress.CompressionInputStream.skip(long)"], "Fixed commit": "7b15b3c79f657058038f213b4a7317e4bbab9a75", "Url": "https://api.github.com/repos/antoine-tran/Hedera", "Date": "2014-06-24T12:48:42Z"},
{"Line": "=>631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkedMods.contains(className)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5282/buggy-version/db.src.main.java.com.psddev.dari.db.State.java", "BodyUseAPI": [], "Fixed commit": "aa163fba9b6c11f8faeffe58c172a042b5abb0a3", "Url": "https://api.github.com/repos/perfectsense/dari", "Date": "2014-11-21T12:45:00Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Integer.parseInt(value)) > 0) { g.i().hero.getHurt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1175/buggy-version/CS185TD.src.com.touchspin.td.Trigger.java", "BodyUseAPI": [], "Fixed commit": "ae25ccfc9a835523fffcb251e7d6df0e91b15b4c", "Url": "https://api.github.com/repos/adamsbriand/CS185", "Date": "2014-06-16T20:46:25Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Integer.parseInt(value)) > 0) { g.i().hero.getHurt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1175/buggy-version/CS185TD.src.com.touchspin.td.Trigger.java", "BodyUseAPI": [], "Fixed commit": "ae25ccfc9a835523fffcb251e7d6df0e91b15b4c", "Url": "https://api.github.com/repos/adamsbriand/CS185", "Date": "2014-06-16T20:46:25Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (toggleCPU.getText().equals(\"Intel\")) { tempB = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3356/buggy-version/app.src.main.java.com.ocfc.hardwarecompared.BuildFragment.java", "BodyUseAPI": [], "Fixed commit": "6954f96be506a0e4451014d914e6ec275b444d5b", "Url": "https://api.github.com/repos/jasona99/HardwareCompared", "Date": "2016-05-23T11:10:09Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (toggleCPU.getText().equals(\"AMD\")) { tempB = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3356/buggy-version/app.src.main.java.com.ocfc.hardwarecompared.BuildFragment.java", "BodyUseAPI": [], "Fixed commit": "6954f96be506a0e4451014d914e6ec275b444d5b", "Url": "https://api.github.com/repos/jasona99/HardwareCompared", "Date": "2016-05-23T11:10:09Z"},
{"Line": "=>770", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > 11) { float x = sidePanel.getX(); if (x < 0.0F) { showSidePanel(); }else { hideSidePanel(); } }else { if ((sidePanel.getVisibility()) == (android.view.View.VISIBLE)) { hideSidePanel(); }else { showSidePanel(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8154/buggy-version/src.com.firebirdberlin.nightdream.ui.NightDreamUI.java", "BodyUseAPI": [], "Fixed commit": "490510cd088bf81cf59d84d04a6935e05ccbe225", "Url": "https://api.github.com/repos/firebirdberlin/nightdream", "Date": "2017-03-21T10:37:12Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((flag) == 0) { com.example.shashankraj.shoppers.MainActivity.count = java.lang.Integer.parseInt(dataSnapshot.child(\"count\").getValue().toString()); com.example.shashankraj.shoppers.MainActivity.count += 1; flag = 1; myRef.child(\"count\").setValue(com.example.shashankraj.shoppers.MainActivity.count); bstac.setUserFacts(\"bt\", com.example.shashankraj.shoppers.MainActivity.count); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/2157/buggy-version/Downloads.Shoppers.app.src.main.java.com.example.shashankraj.shoppers.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "308c773fb79f1a2e56e65cd7c1cf33e521759dea", "Url": "https://api.github.com/repos/shashankraj02/Shoppers", "Date": "2017-01-16T05:31:45Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.encodedPhoto.size()) != 0) { if ((this.encodedPhoto.get(0)) != null) { this.encodedPhoto.remove(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6550/buggy-version/TradioGC.app.src.main.java.com.example.yunita.tradiogc.photo.Photo.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.remove(int)", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "7c218611ae01ca46c0691ed538e2d0ef422eebbe", "Url": "https://api.github.com/repos/CMPUT301F15T09/Cloud9", "Date": "2015-12-01T04:58:06Z"},
{"Line": "=>1183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (es == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8836/buggy-version/hadoop-hdfs-project.hadoop-hdfs.src.main.java.org.apache.hadoop.hdfs.server.namenode.NameNodeDummy.java", "BodyUseAPI": [], "Fixed commit": "c07dd47e1d38294502278c8fea21f4a307282eb6", "Url": "https://api.github.com/repos/rlzhang/hadoop", "Date": "2015-08-04T21:54:38Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((friend.getFriendNames()) == null) friend.setFriendNames(new java.util.HashSet());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4058/buggy-version/src.main.java.com.wetrack.service.FriendService.java", "BodyUseAPI": ["com.wetrack.model.Friend.setFriendNames(java.util.HashSet)"], "Fixed commit": "8a865fd90cf79633e1f982c69132e73ea2b6e501", "Url": "https://api.github.com/repos/WeTrack/WeTrack-Backend", "Date": "2016-12-14T04:47:02Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mQuickAdapter.isLoading())) { mQuickAdapter.openLoadMore(com.jason.loaddatademo.BasePagingActivity.PAGE_SIZE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7882/buggy-version/app.src.main.java.com.jason.loaddatademo.BasePagingActivity.java", "BodyUseAPI": ["com.chad.library.adapter.base.BaseQuickAdapter.openLoadMore(int)"], "Fixed commit": "a082744b4806fa9811e9da3f4a4fdb3e88debf0e", "Url": "https://api.github.com/repos/aii1991/LoadDataDemo", "Date": "2016-10-11T01:48:39Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["M.getRGBChannelCount(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (samples == 0) samples = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8900/buggy-version/components.scifio-devel.src.ome.scifio.AbstractWriter.java", "BodyUseAPI": [], "Fixed commit": "ac7998919b916f6a6487db2645db1656cb6a0d0a", "Url": "https://api.github.com/repos/hinerm/bioformats", "Date": "2013-03-15T18:15:10Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getAction()) != (org.bukkit.event.block.Action.RIGHT_CLICK_BLOCK)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6931/buggy-version/src.main.java.com.sk89q.craftbook.mech.cauldron.ImprovedCauldron.java", "BodyUseAPI": [], "Fixed commit": "2b08b4fa1f3a36d929a7a1393996452544dca98d", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2014-01-28T05:33:01Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.nitnelave.CreeperHeal.config.CreeperConfig.lightweightMode)) com.nitnelave.CreeperHeal.block.ExplodedBlockManager.explosionIndex.removeElement(cEx, cEx.getLocation().getX(), cEx.getLocation().getZ());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6172/buggy-version/src.main.java.com.nitnelave.CreeperHeal.block.ExplodedBlockManager.java", "BodyUseAPI": [], "Fixed commit": "dd083d89fa91c57513e8fad4fd90844d87f77bea", "Url": "https://api.github.com/repos/nitnelave/CreeperHeal", "Date": "2013-02-03T16:47:18Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (clazz.isEnum()) { com.alibaba.fastjson.annotation.JSONType jsonType = com.alibaba.fastjson.util.TypeUtils.getAnnotation(clazz, com.alibaba.fastjson.annotation.JSONType.class); if ((jsonType != null) && (jsonType.serializeEnumAsJavaBean())) { put(clazz, (writer = createJavaBeanSerializer(clazz))); }else { put(clazz, (writer = EnumSerializer.instance)); } }else if (((superClass = clazz.getSuperclass()) != null) && (superClass.isEnum())) { com.alibaba.fastjson.annotation.JSONType jsonType = com.alibaba.fastjson.util.TypeUtils.getAnnotation(superClass, com.alibaba.fastjson.annotation.JSONType.class); if ((jsonType != null) && (jsonType.serializeEnumAsJavaBean())) { put(clazz, (writer = createJavaBeanSerializer(clazz))); }else { put(clazz, (writer = EnumSerializer.instance)); } }else if (clazz.isArray()) { java.lang.Class<?> componentType = clazz.getComponentType(); com.alibaba.fastjson.serializer.ObjectSerializer compObjectSerializer = getObjectWriter(componentType); put(clazz, (writer = new com.alibaba.fastjson.serializer.ArraySerializer(componentType, compObjectSerializer))); }else if (java.lang.Throwable.class.isAssignableFrom(clazz)) { com.alibaba.fastjson.serializer.SerializeBeanInfo beanInfo = com.alibaba.fastjson.util.TypeUtils.buildBeanInfo(clazz, null, propertyNamingStrategy); beanInfo.features |= SerializerFeature.WriteClassName.mask; put(clazz, (writer = new com.alibaba.fastjson.serializer.JavaBeanSerializer(beanInfo))); }else if ((java.util.TimeZone.class.isAssignableFrom(clazz)) || (java.util.Map.Entry.class.isAssignableFrom(clazz))) { put(clazz, (writer = MiscCodec.instance)); }else if (java.lang.Appendable.class.isAssignableFrom(clazz)) { put(clazz, (writer = AppendableSerializer.instance)); }else if (java.nio.charset.Charset.class.isAssignableFrom(clazz)) { put(clazz, (writer = ToStringSerializer.instance)); }else if (java.util.Enumeration.class.isAssignableFrom(clazz)) { put(clazz, (writer = EnumerationSerializer.instance)); }else if ((java.util.Calendar.class.isAssignableFrom(clazz)) || (javax.xml.datatype.XMLGregorianCalendar.class.isAssignableFrom(clazz))) { put(clazz, (writer = CalendarCodec.instance)); }else if (java.sql.Clob.class.isAssignableFrom(clazz)) { put(clazz, (writer = ClobSeriliazer.instance)); }else if (com.alibaba.fastjson.util.TypeUtils.isPath(clazz)) { put(clazz, (writer = ToStringSerializer.instance)); }else if (java.util.Iterator.class.isAssignableFrom(clazz)) { put(clazz, (writer = MiscCodec.instance)); }else { if ((className.startsWith(\"java.awt.\")) && (com.alibaba.fastjson.serializer.AwtCodec.support(clazz))) { if (!(com.alibaba.fastjson.serializer.SerializeConfig.awtError)) { try { java.lang.String[] names = new java.lang.String[]{ \"java.awt.Color\", \"java.awt.Font\", \"java.awt.Point\", \"java.awt.Rectangle\" }; for (java.lang.String name : names) { if (name.equals(className)) { put(java.lang.Class.forName(name), (writer = AwtCodec.instance)); return writer; } } } catch (java.lang.Throwable e) { com.alibaba.fastjson.serializer.SerializeConfig.awtError = true; } } } if ((!(com.alibaba.fastjson.serializer.SerializeConfig.jdk8Error)) && ((((className.startsWith(\"java.time.\")) || (className.startsWith(\"java.util.Optional\"))) || (className.equals(\"java.util.concurrent.atomic.LongAdder\"))) || (className.equals(\"java.util.concurrent.atomic.DoubleAdder\")))) { try { { java.lang.String[] names = new java.lang.String[]{ \"java.time.LocalDateTime\", \"java.time.LocalDate\", \"java.time.LocalTime\", \"java.time.ZonedDateTime\", \"java.time.OffsetDateTime\", \"java.time.OffsetTime\", \"java.time.ZoneOffset\", \"java.time.ZoneRegion\", \"java.time.Period\", \"java.time.Duration\", \"java.time.Instant\" }; for (java.lang.String name : names) { if (name.equals(className)) { put(java.lang.Class.forName(name), (writer = com.alibaba.fastjson.parser.deserializer.Jdk8DateCodec.instance)); return writer; } } } { java.lang.String[] names = new java.lang.String[]{ \"java.util.Optional\", \"java.util.OptionalDouble\", \"java.util.OptionalInt\", \"java.util.OptionalLong\" }; for (java.lang.String name : names) { if (name.equals(className)) { put(java.lang.Class.forName(name), (writer = com.alibaba.fastjson.parser.deserializer.OptionalCodec.instance)); return writer; } } } { java.lang.String[] names = new java.lang.String[]{ \"java.util.concurrent.atomic.LongAdder\", \"java.util.concurrent.atomic.DoubleAdder\" }; for (java.lang.String name : names) { if (name.equals(className)) { put(java.lang.Class.forName(name), (writer = AdderSerializer.instance)); return writer; } } } } catch (java.lang.Throwable e) { com.alibaba.fastjson.serializer.SerializeConfig.jdk8Error = true; } } if ((!(com.alibaba.fastjson.serializer.SerializeConfig.oracleJdbcError)) && (className.startsWith(\"oracle.sql.\"))) { try { java.lang.String[] names = new java.lang.String[]{ \"oracle.sql.DATE\", \"oracle.sql.TIMESTAMP\" }; for (java.lang.String name : names) { if (name.equals(className)) { put(java.lang.Class.forName(name), (writer = DateCodec.instance)); return writer; } } } catch (java.lang.Throwable e) { com.alibaba.fastjson.serializer.SerializeConfig.oracleJdbcError = true; } } if ((!(com.alibaba.fastjson.serializer.SerializeConfig.springfoxError)) && (className.equals(\"springfox.documentation.spring.web.json.Json\"))) { try { put(java.lang.Class.forName(\"springfox.documentation.spring.web.json.Json\"), (writer = com.alibaba.fastjson.support.springfox.SwaggerJsonSerializer.instance)); return writer; } catch (java.lang.ClassNotFoundException e) { com.alibaba.fastjson.serializer.SerializeConfig.springfoxError = true; } } if ((!(com.alibaba.fastjson.serializer.SerializeConfig.guavaError)) && (className.startsWith(\"com.google.common.collect.\"))) { try { java.lang.String[] names = new java.lang.String[]{ \"com.google.common.collect.HashMultimap\", \"com.google.common.collect.LinkedListMultimap\", \"com.google.common.collect.ArrayListMultimap\", \"com.google.common.collect.TreeMultimap\" }; for (java.lang.String name : names) { if (name.equals(className)) { put(java.lang.Class.forName(name), (writer = GuavaCodec.instance)); return writer; } } } catch (java.lang.ClassNotFoundException e) { com.alibaba.fastjson.serializer.SerializeConfig.guavaError = true; } } if ((!(com.alibaba.fastjson.serializer.SerializeConfig.jsonnullError)) && (className.equals(\"net.sf.json.JSONNull\"))) { try { put(java.lang.Class.forName(\"net.sf.json.JSONNull\"), (writer = MiscCodec.instance)); return writer; } catch (java.lang.ClassNotFoundException e) { com.alibaba.fastjson.serializer.SerializeConfig.jsonnullError = true; } } java.lang.Class[] interfaces = clazz.getInterfaces(); if (((interfaces.length) == 1) && (interfaces[0].isAnnotation())) { return AnnotationSerializer.instance; } if (com.alibaba.fastjson.util.TypeUtils.isProxy(clazz)) { java.lang.Class<?> superClazz = clazz.getSuperclass(); com.alibaba.fastjson.serializer.ObjectSerializer superWriter = getObjectWriter(superClazz); put(clazz, superWriter); return superWriter; } if (java.lang.reflect.Proxy.isProxyClass(clazz)) { java.lang.Class handlerClass = null; if ((interfaces.length) == 2) { handlerClass = interfaces[1]; }else { for (java.lang.Class proxiedInterface : interfaces) { if (proxiedInterface.getName().startsWith(\"org.springframework.aop.\")) { continue; } if (handlerClass != null) { handlerClass = null; break; } handlerClass = proxiedInterface; } } if (handlerClass != null) { com.alibaba.fastjson.serializer.ObjectSerializer superWriter = getObjectWriter(handlerClass); put(clazz, superWriter); return superWriter; } } if (create) { writer = createJavaBeanSerializer(clazz); put(clazz, writer); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8902/buggy-version/src.main.java.com.alibaba.fastjson.serializer.SerializeConfig.java", "BodyUseAPI": ["java.lang.Class<?>.isArray()", "java.lang.Class<?>.getInterfaces()", "java.lang.Class<?>.getSuperclass()", "com.alibaba.fastjson.serializer.SerializeConfig.put(java.lang.Class<?>,(writer = createJavaBeanSerializer(clazz)))", "com.alibaba.fastjson.serializer.SerializeConfig.put(java.lang.Class<?>,(writer = new com.alibaba.fastjson.serializer.JavaBeanSerializer(beanInfo)))", "com.alibaba.fastjson.serializer.AwtCodec.support(java.lang.Class<?>)", "com.alibaba.fastjson.serializer.SerializeConfig.put(java.lang.Class<?>,com.alibaba.fastjson.serializer.ObjectSerializer)", "java.lang.Class.isAssignableFrom(java.lang.Class<?>)", "java.lang.Class<?>.getSuperclass()", "java.lang.Class.isAssignableFrom(java.lang.Class<?>)", "java.lang.Class.isAssignableFrom(java.lang.Class<?>)", "com.alibaba.fastjson.serializer.SerializeConfig.createJavaBeanSerializer(java.lang.Class<?>)", "com.alibaba.fastjson.util.TypeUtils.isProxy(java.lang.Class<?>)", "com.alibaba.fastjson.serializer.SerializeConfig.put(java.lang.Class<?>,(writer = EnumSerializer.instance))", "com.alibaba.fastjson.serializer.SerializeConfig.put(java.lang.Class<?>,(writer = EnumSerializer.instance))", "com.alibaba.fastjson.serializer.SerializeConfig.put(java.lang.Class<?>,com.alibaba.fastjson.serializer.ObjectSerializer)", "java.lang.Class<?>.getComponentType()", "java.lang.Class.isAssignableFrom(java.lang.Class<?>)", "com.alibaba.fastjson.serializer.SerializeConfig.put(java.lang.Class<?>,(writer = AppendableSerializer.instance))", "com.alibaba.fastjson.serializer.SerializeConfig.createJavaBeanSerializer(java.lang.Class<?>)", "java.lang.Class.isAssignableFrom(java.lang.Class<?>)", "java.lang.Class.isAssignableFrom(java.lang.Class<?>)", "com.alibaba.fastjson.serializer.SerializeConfig.put(java.lang.Class<?>,com.alibaba.fastjson.serializer.ObjectSerializer)", "com.alibaba.fastjson.util.TypeUtils.buildBeanInfo(java.lang.Class<?>,<nulltype>,com.alibaba.fastjson.serializer.PropertyNamingStrategy)", "com.alibaba.fastjson.util.TypeUtils.getAnnotation(java.lang.Class<?>,java.lang.Class)", "java.lang.Class.isAssignableFrom(java.lang.Class<?>)", "com.alibaba.fastjson.serializer.SerializeConfig.put(java.lang.Class<?>,(writer = createJavaBeanSerializer(clazz)))", "com.alibaba.fastjson.serializer.SerializeConfig.createJavaBeanSerializer(java.lang.Class<?>)", "com.alibaba.fastjson.serializer.SerializeConfig.put(java.lang.Class<?>,(writer = MiscCodec.instance))", "java.lang.Class.isAssignableFrom(java.lang.Class<?>)", "com.alibaba.fastjson.serializer.SerializeConfig.put(java.lang.Class<?>,(writer = new com.alibaba.fastjson.serializer.ArraySerializer(componentType, compObjectSerializer)))", "java.lang.Class.isAssignableFrom(java.lang.Class<?>)", "com.alibaba.fastjson.serializer.SerializeConfig.put(java.lang.Class<?>,(writer = ClobSeriliazer.instance))", "com.alibaba.fastjson.util.TypeUtils.isPath(java.lang.Class<?>)", "java.lang.Class.isAssignableFrom(java.lang.Class<?>)", "java.lang.reflect.Proxy.isProxyClass(java.lang.Class<?>)", "com.alibaba.fastjson.serializer.SerializeConfig.put(java.lang.Class<?>,(writer = ToStringSerializer.instance))", "com.alibaba.fastjson.serializer.SerializeConfig.put(java.lang.Class<?>,(writer = MiscCodec.instance))", "com.alibaba.fastjson.serializer.SerializeConfig.put(java.lang.Class<?>,(writer = EnumerationSerializer.instance))", "com.alibaba.fastjson.serializer.SerializeConfig.put(java.lang.Class<?>,(writer = CalendarCodec.instance))", "com.alibaba.fastjson.serializer.SerializeConfig.put(java.lang.Class<?>,(writer = ToStringSerializer.instance))"], "Fixed commit": "69ae2be568f6f20a2dbfbb005ca81bf0848abcce", "Url": "https://api.github.com/repos/FlakyTestDetection/fastjson", "Date": "2017-10-01T14:08:56Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 0) { android.util.Log.i(\"Main:\", \"on home frag selected\"); homeFrag.setTodaysEvents(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/9255/buggy-version/StuderaEffektivt.app.src.main.java.se.chalmers.datx02_15_36.studeraeffektivt.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "51d5d74cd68dae6fc6907209574b1eac472b6049", "Url": "https://api.github.com/repos/Soya93/DATX02_15_36", "Date": "2015-04-13T19:18:08Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((children) == null) { children = new java.util.ArrayList<util.ast.node.Node>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3469/buggy-version/Hog.src.util.ast.node.Node.java", "BodyUseAPI": [], "Fixed commit": "fe1faabcdf0a1bb7465c0762fced3d8b06fa963e", "Url": "https://api.github.com/repos/smessing/Hog", "Date": "2012-04-11T21:46:50Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mainEntryList.contains(fileEntry.getName()))) { mainEntryList.add(fileEntry.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1288/buggy-version/app.src.main.java.com.example.samcl.journalbuddy.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.io.File.getName()"], "Fixed commit": "7f0e5f0f7162633ef0bc78e21d882ee66cbb3fed", "Url": "https://api.github.com/repos/samclane/JournalBuddy", "Date": "2016-01-09T22:43:24Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imat.view.VarukorgController.firstTimeDelete) == 0) { shoppingCartListView.getSelectionModel().selectIndices(((index) - 1)); (imat.view.VarukorgController.firstTimeDelete)++; }else { shoppingCartListView.getSelectionModel().selectIndices(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3443/buggy-version/src.imat.view.VarukorgController.java", "BodyUseAPI": [], "Fixed commit": "d275862d3de6aae4c96f15c24b0acd3e4ab0f675", "Url": "https://api.github.com/repos/husnjak/iMAT", "Date": "2015-03-06T20:21:31Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s.startsWith(\"#\")) return s;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/5929/buggy-version/src.main.java.scrum.client.wiki.Link.java", "BodyUseAPI": [], "Fixed commit": "d3b2ff6e8b795099b51da2e1d972aefb8bc36078", "Url": "https://api.github.com/repos/Kunagi/kunagi", "Date": "2012-06-27T22:46:17Z"},
{"Line": "=>585", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (buffManager.addBuff(nextBuff)) setBonusBuff = nextBuff;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6408/buggy-version/src.entity.mobs.PlayerMob.java", "BodyUseAPI": [], "Fixed commit": "11929d984660cd412a32f42831965a3b782c862a", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-04-12T10:55:44Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((user.optString(\"HousingPrice\").toString()) != \"null\") { tempHousingPrice = user.optString(\"HousingPrice\").toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/6573/buggy-version/RoomMe.app.src.main.java.com.example.trocket.roomme.JsonParser.java", "BodyUseAPI": ["org.json.JSONObject.optString(java.lang.String)", "user.optString(\"HousingPrice\").toString()"], "Fixed commit": "37b27af131147352b29b72b24a505a0595b7b846", "Url": "https://api.github.com/repos/zplata/RoomMe", "Date": "2015-07-19T21:33:37Z"},
{"Line": "=>1865", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getContext().getComparisonMethod()) == (cz.fidentis.comparison.ComparisonMethod.PROCRUSTES)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7794/buggy-version/GUI.src.cz.fidentis.gui.comparison_one_to_many.OneToManyComparisonResults.java", "BodyUseAPI": [], "Fixed commit": "a8132093b140f9081b34a4c21d6af4ecbbec898b", "Url": "https://api.github.com/repos/Fidentis/Analyst", "Date": "2017-11-16T23:44:21Z"},
{"Line": "=>1853", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getContext().getComparisonMethod()) == (cz.fidentis.comparison.ComparisonMethod.PROCRUSTES)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/7794/buggy-version/GUI.src.cz.fidentis.gui.comparison_batch.BatchComparisonResults.java", "BodyUseAPI": [], "Fixed commit": "a8132093b140f9081b34a4c21d6af4ecbbec898b", "Url": "https://api.github.com/repos/Fidentis/Analyst", "Date": "2017-11-16T23:44:21Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getAccount()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((account.getUserType()) == (com.echarm.apigateway.accountsystem.util.UserType.USER)) { reqAccount = new com.echarm.apigateway.accountsystem.model.UserAccount(); }else if ((account.getUserType()) == (com.echarm.apigateway.accountsystem.util.UserType.DOCTOR)) { reqAccount = new com.echarm.apigateway.accountsystem.model.DoctorAccount(); }else if ((account.getUserType()) == (com.echarm.apigateway.accountsystem.util.UserType.ADMIN)) { reqAccount = new com.echarm.apigateway.accountsystem.model.AdminAccount(); }else { reqAccount = new com.echarm.apigateway.accountsystem.model.Account(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/4384/buggy-version/src.main.java.com.echarm.apigateway.security.controller.AuthController.java", "BodyUseAPI": ["com.echarm.apigateway.accountsystem.model.Account.getUserType()", "com.echarm.apigateway.accountsystem.model.Account.getUserType()"], "Fixed commit": "c6511e04a45ccadc1bf22f133a3dfd8578311ea3", "Url": "https://api.github.com/repos/sevenlol/APIGatewayService", "Date": "2015-06-04T14:51:09Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getSupportFragmentManager().findFragmentById(R.id.tagcontent).isVisible()) { transaction.hide(getSupportFragmentManager().findFragmentById(R.id.tagcontent)); transaction.show(getSupportFragmentManager().findFragmentById(R.id.maincontent)); transaction.addToBackStack(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3316/buggy-version/src.com.pindroid.activity.BrowseBookmarks.java", "BodyUseAPI": [], "Fixed commit": "02396b664106b546a4a2fef62cf8a07dcb5d5037", "Url": "https://api.github.com/repos/maxpower47/PinDroid", "Date": "2012-04-05T19:37:26Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (remote == null) { remote = gitSCM.getRepositoryByName(targetRepo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1320/buggy-version/src.main.java.hudson.plugins.git.GitPublisher.java", "BodyUseAPI": [], "Fixed commit": "390ec1a81834929f35c517a43bc39657c8f9e03c", "Url": "https://api.github.com/repos/ekrupnik/git-plugin", "Date": "2014-03-26T19:09:27Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (remote == null) { remote = gitSCM.getRepositoryByName(targetRepo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1320/buggy-version/src.main.java.hudson.plugins.git.GitPublisher.java", "BodyUseAPI": [], "Fixed commit": "390ec1a81834929f35c517a43bc39657c8f9e03c", "Url": "https://api.github.com/repos/ekrupnik/git-plugin", "Date": "2014-03-26T19:09:27Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (remote == null) { remote = gitSCM.getRepositoryByName(targetRepo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/1320/buggy-version/src.main.java.hudson.plugins.git.GitPublisher.java", "BodyUseAPI": [], "Fixed commit": "390ec1a81834929f35c517a43bc39657c8f9e03c", "Url": "https://api.github.com/repos/ekrupnik/git-plugin", "Date": "2014-03-26T19:09:27Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((auth.zoekGebruikerMetToken(token).getId()) != (cirkelsessies.find(service.find(id).getCirkelsessie().getId()).getGebruiker().getId())) || ((auth.zoekGebruikerMetToken(token).getId()) != (service.find(id).getGebruiker().getId()))) { throw new be.kdg.teamh.exceptions.gebruiker.ToegangVerboden(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/8397/buggy-version/src.main.java.be.kdg.teamh.controllers.DeelnameController.java", "BodyUseAPI": [], "Fixed commit": "409ada79bb2998549f2836fe8905f3d1bbd9a9e5", "Url": "https://api.github.com/repos/xZliman/teamh-spring", "Date": "2016-03-20T19:21:45Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((applicationGroup.getPackageMetadata()) == null) { applicationGroup.setPackageMetadata(new org.jboss.windup.web.services.model.PackageMetadata()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V123/3899/buggy-version/services.src.main.java.org.jboss.windup.web.services.rest.ApplicationGroupEndpointImpl.java", "BodyUseAPI": ["org.jboss.windup.web.services.model.ApplicationGroup.setPackageMetadata(org.jboss.windup.web.services.model.PackageMetadata)"], "Fixed commit": "0fc4267310d9da3f663a5b310259c35c85a5f163", "Url": "https://api.github.com/repos/klinki/windup-web", "Date": "2016-10-11T11:40:47Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.backend.models.Game.liveScheduledExecutorService) != null) { com.backend.models.Game.liveScheduledExecutorService.shutdownNow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5294/buggy-version/src.server.src.main.java.com.backend.models.Game.java", "BodyUseAPI": [], "Fixed commit": "827c8f9d0f64413b20e35d21940b721e66bdcbb5", "Url": "https://api.github.com/repos/robo-crc/scoreboard", "Date": "2015-02-13T02:08:46Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.tehkode.permissions.PermissionManager.getUser(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (user != null) return (user.getPrefix()) == null ? \"\" : user.getPrefix();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/329/buggy-version/src.main.java.be.Balor.Manager.Permissions.Plugins.PermissionsEx.java", "BodyUseAPI": ["ru.tehkode.permissions.PermissionUser.getPrefix()", "ru.tehkode.permissions.PermissionUser.getPrefix()"], "Fixed commit": "1a964931c629b8ba1a9e3f2e654e0a48306b6511", "Url": "https://api.github.com/repos/Belphemur/AdminCmd", "Date": "2011-12-14T09:33:09Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (thriftClientInfo.isStatsPublisherEnabled()) { java.util.ArrayList<org.wso2.carbon.databridge.agent.thrift.lb.DataPublisherHolder> dataPublisherHolders = new java.util.ArrayList<org.wso2.carbon.databridge.agent.thrift.lb.DataPublisherHolder>(); org.wso2.carbon.databridge.agent.thrift.lb.DataPublisherHolder aNode = new org.wso2.carbon.databridge.agent.thrift.lb.DataPublisherHolder(null, buildUrl(thriftClientInfo), thriftClientInfo.getUsername(), thriftClientInfo.getPassword()); dataPublisherHolders.add(aNode); org.wso2.carbon.databridge.agent.thrift.lb.ReceiverGroup group = new org.wso2.carbon.databridge.agent.thrift.lb.ReceiverGroup(dataPublisherHolders); receiverGroups.add(group); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/474/buggy-version/components.org.apache.stratos.common.src.main.java.org.apache.stratos.common.statistics.publisher.ThriftStatisticsPublisher.java", "BodyUseAPI": ["org.apache.stratos.common.statistics.publisher.ThriftClientInfo.getUsername()", "org.apache.stratos.common.statistics.publisher.ThriftClientInfo.getPassword()", "org.apache.stratos.common.statistics.publisher.ThriftStatisticsPublisher.buildUrl(org.apache.stratos.common.statistics.publisher.ThriftClientInfo)"], "Fixed commit": "f726ea8c22207e7f0ae4c99cc7a622e71f16687d", "Url": "https://api.github.com/repos/ravihansa3000/stratos", "Date": "2015-11-29T20:12:30Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (columnName.equals(mColumnIdName)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5901/buggy-version/library.src.cat.picas.spades.TableBuilder.java", "BodyUseAPI": [], "Fixed commit": "f84fbb5a80a2a649e5662c5c5db1909e730e81bf", "Url": "https://api.github.com/repos/ppicas/spades", "Date": "2014-04-12T09:27:36Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(baseUrl.endsWith(\"/\"))) { baseUrl = baseUrl + \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5171/buggy-version/src.main.java.com.r573.enfili.common.resource.rest.RestClient.java", "BodyUseAPI": [], "Fixed commit": "2fdfe47f0a2afbffc060d1dacf0f963d2238bbdc", "Url": "https://api.github.com/repos/ryanhosp/enfili", "Date": "2014-05-08T03:29:28Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mirror.android.content.pm.PackageParser.Package.protectedBroadcasts.get(PackageParser.Package)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (protectedBroadcasts != null) { cache.protectedBroadcasts = new java.util.ArrayList(protectedBroadcasts); cache.protectedBroadcasts.addAll(protectedBroadcasts); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3988/buggy-version/VirtualApp.lib.src.main.java.com.lody.virtual.server.pm.parser.PackageParserEx.java", "BodyUseAPI": ["cache.protectedBroadcasts.addAll(java.util.List<java.lang.String>)"], "Fixed commit": "3ece4a3e36fbbe7f57ba6815760e1f40cf4d77a1", "Url": "https://api.github.com/repos/hhkhub/VirtualApp", "Date": "2017-03-22T13:30:43Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (record != null) { link += record.getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6004/buggy-version/admin.broadleaf-open-admin-platform.src.main.java.org.broadleafcommerce.openadmin.web.processor.AdminListGridLinkProcessor.java", "BodyUseAPI": ["org.broadleafcommerce.openadmin.web.form.component.ListGridRecord.getId()"], "Fixed commit": "ebb021ef866f4486edb3f8cc299dd45fe893f5fa", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2013-03-18T16:38:17Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["element.getAttributeValue(attributeName).split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotEmpty(expressions[2])) { record = ((org.broadleafcommerce.openadmin.web.form.component.ListGridRecord) (org.thymeleaf.standard.expression.StandardExpressionProcessor.processExpression(arguments, expressions[2]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6004/buggy-version/admin.broadleaf-open-admin-platform.src.main.java.org.broadleafcommerce.openadmin.web.processor.AdminListGridLinkProcessor.java", "BodyUseAPI": ["org.thymeleaf.standard.expression.StandardExpressionProcessor.processExpression(org.thymeleaf.Arguments,java.lang.String)"], "Fixed commit": "ebb021ef866f4486edb3f8cc299dd45fe893f5fa", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2013-03-18T16:38:17Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.Activity.findViewById(R.id.toolbar_layout)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (appBarLayout != null) { appBarLayout.setTitle(mItem.position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/933/buggy-version/app.src.main.java.com.benjaminafallon.androidapps.example999.JobDetailFragment.java", "BodyUseAPI": ["android.support.design.widget.CollapsingToolbarLayout.setTitle(mItem.position)"], "Fixed commit": "78ba05d4e9d3cee29d5e742052b250e41a71d0a9", "Url": "https://api.github.com/repos/benfallon/doggydoor", "Date": "2016-04-12T05:08:38Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (addToList) { itemAdapter.addMessage(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3392/buggy-version/leancloudimkit.src.main.java.cn.leancloud.imkit.activity.LCIMConversationFragment.java", "BodyUseAPI": [], "Fixed commit": "da82373cd68c04486caf910817dde037a3969b13", "Url": "https://api.github.com/repos/leancloud/LeanCloudChatKit-Android", "Date": "2016-05-14T07:59:11Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rs == null) || (rs.wasNull())) { throw new com.github.xy8864.webGenerator.core.GeneratorException(java.lang.String.format(\"\u8868[%s]\u6ca1\u6709\u627e\u5230\", table)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4812/buggy-version/src.main.java.com.github.xy8864.webGenerator.marker.mysql.MysqlResultHandler.java", "BodyUseAPI": [], "Fixed commit": "643ed8d44278f279edb28cb1c0cfdeb5b3fa4ff7", "Url": "https://api.github.com/repos/xy8864/WebGenerator", "Date": "2016-02-15T09:15:57Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((peerListModel.size()) != (peerList.size())) RegeneratePeerList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3267/buggy-version/src.p2pnetwork.Application.java", "BodyUseAPI": [], "Fixed commit": "9055c1794c15333d41804bbcbf50fe09436a6689", "Url": "https://api.github.com/repos/MorenoB/P2P-Networking", "Date": "2017-02-10T09:19:54Z"},
{"Line": "=>1589", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flowspaceDef == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7789/buggy-version/src.main.java.net.floodlightcontroller.topology.OFFlowspace.java", "BodyUseAPI": [], "Fixed commit": "f62c0650fd743b578c0faa97c6c5d23e8b85728d", "Url": "https://api.github.com/repos/gopidirajesh/floodlight", "Date": "2013-11-08T06:20:46Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.json.JSONObject.getLong(java.lang.String)", "com.liferay.portal.kernel.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((com.liferay.portal.kernel.util.Validator.isNull(uuid)) && (com.liferay.portal.kernel.util.Validator.isNull(groupId))) { return com.liferay.portal.kernel.util.StringPool.BLANK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/314/buggy-version/modules.apps.forms-and-workflow.dynamic-data-mapping.dynamic-data-mapping-service.src.main.java.com.liferay.dynamic.data.mapping.render.impl.DocumentLibraryDDMFormFieldValueRenderer.java", "BodyUseAPI": [], "Fixed commit": "108313caf2d2171eda828bb29a8d575f0f72f03a", "Url": "https://api.github.com/repos/vsingleton/liferay-portal", "Date": "2016-06-20T18:13:47Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.json.JSONObject.getLong(java.lang.String)", "com.liferay.portal.kernel.json.JSONObject.getLong(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((com.liferay.portal.kernel.util.Validator.isNull(groupId)) && (com.liferay.portal.kernel.util.Validator.isNull(layoutId))) { return com.liferay.portal.kernel.util.StringPool.BLANK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/314/buggy-version/modules.apps.forms-and-workflow.dynamic-data-mapping.dynamic-data-mapping-service.src.main.java.com.liferay.dynamic.data.mapping.render.impl.LinkToPageDDMFormFieldValueRenderer.java", "BodyUseAPI": [], "Fixed commit": "108313caf2d2171eda828bb29a8d575f0f72f03a", "Url": "https://api.github.com/repos/vsingleton/liferay-portal", "Date": "2016-06-20T18:13:47Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.json.JSONObject.getLong(java.lang.String)", "com.liferay.portal.kernel.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((com.liferay.portal.kernel.util.Validator.isNull(className)) && (com.liferay.portal.kernel.util.Validator.isNull(classPK))) { return com.liferay.portal.kernel.util.StringPool.BLANK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/314/buggy-version/modules.apps.forms-and-workflow.dynamic-data-mapping.dynamic-data-mapping-service.src.main.java.com.liferay.dynamic.data.mapping.render.impl.JournalArticleDDMFormFieldValueRenderer.java", "BodyUseAPI": [], "Fixed commit": "108313caf2d2171eda828bb29a8d575f0f72f03a", "Url": "https://api.github.com/repos/vsingleton/liferay-portal", "Date": "2016-06-20T18:13:47Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(android.media.audiofx.AcousticEchoCanceler.isAvailable())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/778/buggy-version/app.src.main.java.com.ssthouse.moduo.control.video.AudioHandler.java", "BodyUseAPI": [], "Fixed commit": "5448fb56fc13122121fb287fe4dbd4782b134169", "Url": "https://api.github.com/repos/ssthouse/moduo", "Date": "2016-03-25T03:15:32Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.ssthouse.moduo.control.xpg.XPGController.getCurrentDevice()) == null) { tvModuoState.setText(\"\u7528\u6237\u767b\u5f55\u6210\u529f, \u672a\u8fde\u63a5\u9b54\u54c6\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/778/buggy-version/app.src.main.java.com.ssthouse.moduo.fragment.sliding.main.View.MainFragment.java", "BodyUseAPI": [], "Fixed commit": "5448fb56fc13122121fb287fe4dbd4782b134169", "Url": "https://api.github.com/repos/ssthouse/moduo", "Date": "2016-03-25T03:15:32Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (o == null) str += \"null\"; else { de.johmat.myjojox.utils.log.ILogEntryObjectProcessor processor = findMostSuitingProcessor(o.getClass()); if (processor == null) throw new java.lang.RuntimeException(\"No suiting ILogEntryProcessor found\"); str += processor.process(o, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1582/buggy-version/MyJojoXUtils.src.de.johmat.myjojox.utils.log.Logger.java", "BodyUseAPI": ["java.lang.Object.getClass()", "de.johmat.myjojox.utils.log.Logger.findMostSuitingProcessor(java.lang.Class<? extends java.lang.Object>)", "de.johmat.myjojox.utils.log.ILogEntryObjectProcessor.process(java.lang.Object,de.johmat.myjojox.utils.log.Logger)"], "Fixed commit": "6141f0513e48f7f65dd70cce901a52f0299deed9", "Url": "https://api.github.com/repos/MyJojoX/MyJojoXUtils", "Date": "2017-06-27T13:25:45Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (linkNotificationWithVolume && (com.android.settings.Utils.isVoiceCapable(getActivity()))) { removeListEntry(mVolumeDefault, java.lang.String.valueOf(AudioSystem.STREAM_NOTIFICATION)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2488/buggy-version/src.com.android.settings.ButtonSettings.java", "BodyUseAPI": [], "Fixed commit": "f050d912b84e67677814da08f9f56e835e0c7ec1", "Url": "https://api.github.com/repos/ErcOneMOD/android_packages_apps_Settings", "Date": "2015-03-10T23:31:50Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dir.isDirectory()) { java.lang.String retVal; try { retVal = dir.getCanonicalFile().getName(); } catch (java.lang.Exception e) { retVal = lang; } return retVal; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7694/buggy-version/src.infinity.resource.ResourceFactory.java", "BodyUseAPI": ["java.io.File.getCanonicalFile()", "java.io.File.getName()"], "Fixed commit": "2cefaa23cab167f00146a288d8ad6b27c19da66b", "Url": "https://api.github.com/repos/Argent77/NearInfinity", "Date": "2015-03-28T14:56:29Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count == 1) { org.apache.phoenix.compile.ColumnProjector projector = rowProjector.getColumnProjector(0); current = rowProjector.getColumnProjector(0).getValue(tuple, projector.getExpression().getDataType(), ptr); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1778/buggy-version/phoenix-core.src.main.java.org.apache.phoenix.calcite.CalciteRuntime.java", "BodyUseAPI": [], "Fixed commit": "f04eaf172b7ca3b100cc14cc191800cc98e508ee", "Url": "https://api.github.com/repos/apurtell/phoenix", "Date": "2015-04-03T21:16:44Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(table.isEmpty())) { table.getLast().trimToSize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3616/buggy-version/lists.impl.src.main.java.lists.impl.HybridList.java", "BodyUseAPI": ["java.util.LinkedList<java.util.ArrayList<T>>.getLast()", "java.util.ArrayList<T>.trimToSize()"], "Fixed commit": "712c6a7c9c154f1e61fd487892a347e00b3dda47", "Url": "https://api.github.com/repos/andrepnh/data-structure-fun", "Date": "2016-12-11T11:44:20Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((minechem.item.molecule.MoleculeItem.getMolecule(stack)) != (MoleculeEnum.water)) fluidStack = new net.minecraftforge.fluids.FluidStack(FluidHelper.molecules.get(minechem.item.molecule.MoleculeItem.getMolecule(stack)), 125);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/678/buggy-version/src.main.java.minechem.item.molecule.MoleculeItem.java", "BodyUseAPI": ["FluidHelper.molecules.get(minechem.item.molecule.MoleculeEnum)", "minechem.item.molecule.MoleculeItem.getMolecule(net.minecraft.item.ItemStack)"], "Fixed commit": "522e487090b3c3467a4b602c28a874c35f2a5496", "Url": "https://api.github.com/repos/jakimfett/Minechem", "Date": "2014-11-07T14:33:13Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerDropItemEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((player.getHealth()) > 0) { info.faceland.strife.data.Champion champion = plugin.getChampionManager().getChampion(player.getUniqueId()); java.util.Map<info.faceland.strife.attributes.StrifeAttribute, java.lang.Double> attributeDoubleMap = champion.getAttributeValues(); info.faceland.strife.attributes.AttributeHandler.updateHealth(player, attributeDoubleMap); double perc = (attributeDoubleMap.get(StrifeAttribute.MOVEMENT_SPEED)) / 100.0; float speed = 0.2F * ((float) (perc)); player.setWalkSpeed(java.lang.Math.min(java.lang.Math.max((-1.0F), speed), 1.0F)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5822/buggy-version/src.main.java.info.faceland.strife.listeners.HealthListener.java", "BodyUseAPI": ["plugin.getChampionManager().getChampion(player.getUniqueId())", "org.bukkit.entity.Player.getUniqueId()", "info.faceland.strife.attributes.AttributeHandler.updateHealth(org.bukkit.entity.Player,java.util.Map<info.faceland.strife.attributes.StrifeAttribute, java.lang.Double>)", "org.bukkit.entity.Player.setWalkSpeed(float)"], "Fixed commit": "341093fcc0b8258681737811733772bbf4505f04", "Url": "https://api.github.com/repos/TealCube/strife", "Date": "2015-02-19T19:38:25Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stationAdapter.fragments.size()) != 0) { stationAdapter.deleteStrings(); stationAdapter.fragments.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3644/buggy-version/app.src.main.java.com.uni_wuppertal.iad.vierteltour.ui.map.MapsActivity.java", "BodyUseAPI": ["com.uni_wuppertal.iad.vierteltour.ui.map.station_pager.StationAdapter.deleteStrings()", "stationAdapter.fragments.clear()"], "Fixed commit": "746e9794258ad7c0b7695fe4db5dfdcffa8fb27a", "Url": "https://api.github.com/repos/branb/vierteltour", "Date": "2017-03-09T00:12:56Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.http.client.HttpClient.execute(org.apache.http.client.methods.HttpPost)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((response.getStatusLine().getStatusCode()) == (org.apache.http.HttpStatus.SC_BAD_REQUEST)) { if (errorMessage.contains(ResponseConstants.QUOTA_EXCEEDED_FOR_INSTANCES)) { throw new org.fogbowcloud.manager.occi.core.OCCIException(org.fogbowcloud.manager.occi.core.ErrorType.QUOTA_EXCEEDED, errorMessage); } throw new org.fogbowcloud.manager.occi.core.OCCIException(org.fogbowcloud.manager.occi.core.ErrorType.BAD_REQUEST, errorMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7879/buggy-version/src.main.java.org.fogbowcloud.manager.core.plugins.openstack.OpenStackComputePlugin.java", "BodyUseAPI": [], "Fixed commit": "e7e0ce9c3f5c92bc75ca9644f21d13afb681967a", "Url": "https://api.github.com/repos/fogbow/fogbow-manager", "Date": "2014-05-02T21:21:25Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((tabStyle) & (TaskEditViewPager.TAB_SHOW_MORE)) > 0) { setCurrentTab(com.todoroo.astrid.activity.TaskEditFragment.TAB_VIEW_MORE); setPagerHeightForPosition(com.todoroo.astrid.activity.TaskEditFragment.TAB_VIEW_MORE); }else { setCurrentTab(com.todoroo.astrid.activity.TaskEditFragment.TAB_VIEW_UPDATES); setPagerHeightForPosition(com.todoroo.astrid.activity.TaskEditFragment.TAB_VIEW_UPDATES); android.os.Handler handler = new android.os.Handler(); handler.postDelayed(new java.lang.Runnable() { @java.lang.Override public void run() { if ((mPager.getCurrentItem()) == (com.todoroo.astrid.activity.TaskEditFragment.TAB_VIEW_UPDATES)) setPagerHeightForPosition(com.todoroo.astrid.activity.TaskEditFragment.TAB_VIEW_UPDATES); } }, 500L); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7141/buggy-version/astrid.src.com.todoroo.astrid.activity.TaskEditFragment.java", "BodyUseAPI": [], "Fixed commit": "12de9f9949712cf83eeec823f0cd11100d07fedd", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2012-11-10T01:22:07Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((id == null) || (id.toString().equals(\"null\"))) { isCurrentUserIdLoaded = false; }else { setCurrentUserId(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5406/buggy-version/src.main.java.com.strongloop.android.loopback.UserRepository.java", "BodyUseAPI": ["com.strongloop.android.loopback.UserRepository<U>.setCurrentUserId(java.lang.Object)"], "Fixed commit": "704011abff0b44225175edd8aa570dfa203b461e", "Url": "https://api.github.com/repos/chaitanya0bhagvan/loopback-sdk-android", "Date": "2015-09-20T10:26:12Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((testClient) != null) { testClient.sendEdit(editor.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4878/buggy-version/TritonCode.src.main.java.EditorViewController.java", "BodyUseAPI": [], "Fixed commit": "dacea42e890aaeab3d4ae035c16119a43e26d9f3", "Url": "https://api.github.com/repos/sidneynguyen/TritonCode", "Date": "2017-10-22T06:34:57Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentFile) != null) { start(editor.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4878/buggy-version/TritonCode.src.main.java.EditorViewController.java", "BodyUseAPI": [], "Fixed commit": "dacea42e890aaeab3d4ae035c16119a43e26d9f3", "Url": "https://api.github.com/repos/sidneynguyen/TritonCode", "Date": "2017-10-22T06:34:57Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentFile) != null) { connect(editor.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4878/buggy-version/TritonCode.src.main.java.EditorViewController.java", "BodyUseAPI": [], "Fixed commit": "dacea42e890aaeab3d4ae035c16119a43e26d9f3", "Url": "https://api.github.com/repos/sidneynguyen/TritonCode", "Date": "2017-10-22T06:34:57Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mActionMode) != null) { listView.clearChoices(); mActionMode.finish(); mActionMode = null; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8587/buggy-version/src.org.qii.weiciyuan.ui.browser.RepostsByIdTimeLineFragment.java", "BodyUseAPI": [], "Fixed commit": "31b5c0444b68e156a3ea90aa197ca2da6f7aaf78", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-11T01:35:55Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((permsL == null) && (permsR == null)) { java.lang.String lhsName = ((java.lang.String) (lhs.applicationInfo.loadLabel(mPackMan))); java.lang.String rhsName = ((java.lang.String) (rhs.applicationInfo.loadLabel(mPackMan))); return lhsName.compareToIgnoreCase(rhsName); }else if (permsL == null) return -1; else return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6676/buggy-version/src.edu.nkuresearch.securitychecker.fragments.Utils.java", "BodyUseAPI": [], "Fixed commit": "1ba434bc9462dbe56edbdceb561f2eaf10443211", "Url": "https://api.github.com/repos/leibreichb1/Security-App", "Date": "2012-11-05T03:18:04Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((permsL == null) && (permsR == null)) { java.lang.String lhsName = ((java.lang.String) (lhs.applicationInfo.loadLabel(mPackMan))); java.lang.String rhsName = ((java.lang.String) (rhs.applicationInfo.loadLabel(mPackMan))); return lhsName.compareToIgnoreCase(rhsName); }else if (permsL == null) return 1; else return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6676/buggy-version/src.edu.nkuresearch.securitychecker.fragments.Utils.java", "BodyUseAPI": [], "Fixed commit": "1ba434bc9462dbe56edbdceb561f2eaf10443211", "Url": "https://api.github.com/repos/leibreichb1/Security-App", "Date": "2012-11-05T03:18:04Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mesquite.molec.lib.StringUtil.blank(searchString)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6388/buggy-version/Source.mesquite.molec.lib.NCBIUtil.java", "BodyUseAPI": [], "Fixed commit": "313c0af6b00673ad3ef2c9b2a9c4fa77240a9323", "Url": "https://api.github.com/repos/wmaddisn/MesquiteCore", "Date": "2016-05-23T20:39:50Z"},
{"Line": "=>458", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mesquite.molec.lib.StringUtil.notEmpty(accessionNumbers[(i + startIndex)])) { searchString += accessionNumbers[(i + startIndex)]; if ((i == ((mesquite.molec.lib.NCBIUtil.maxGenBankRequest) - 1)) || (i < ((accessionNumbers.length) - 1))) searchString += \"+OR+\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6388/buggy-version/Source.mesquite.molec.lib.NCBIUtil.java", "BodyUseAPI": [], "Fixed commit": "313c0af6b00673ad3ef2c9b2a9c4fa77240a9323", "Url": "https://api.github.com/repos/wmaddisn/MesquiteCore", "Date": "2016-05-23T20:39:50Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (saveAsFasta) { filePath += \".fas\"; fileContents.append(\">\"); if (!(taxonName.isBlank())) fileContents.append(((taxonName.getValue()) + \" \")); if (!(geneName.isBlank())) fileContents.append(((geneName.getValue()) + \" \")); if (!(fragmentName.isBlank())) fileContents.append(((fragmentName.getValue()) + \" \")); if (!(voucherCode.isBlank())) fileContents.append(((voucherCode.getValue()) + \" \")); fileContents.append(mesquite.molec.FetchGenBank.StringUtil.lineEnding()); if (!(sequence.isBlank())) fileContents.append(sequence.getValue()); fileContents.append(mesquite.molec.FetchGenBank.StringUtil.lineEnding()); }else { filePath += \".xml\"; fileContents.append(sequences[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6388/buggy-version/Source.mesquite.molec.FetchGenBank.FetchGenBank.java", "BodyUseAPI": [], "Fixed commit": "313c0af6b00673ad3ef2c9b2a9c4fa77240a9323", "Url": "https://api.github.com/repos/wmaddisn/MesquiteCore", "Date": "2016-05-23T20:39:50Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((icp.getPointMatches()) == null) { result.setCandidates(new java.util.ArrayList()); result.setInliers(new java.util.ArrayList(), java.lang.Double.NaN); result.setResult(java.lang.System.currentTimeMillis(), \"No corresponding points.\"); }else { result.setCandidates(mpicbg.icp.ICP.unwrapPointMatches(icp.getPointMatches())); result.setInliers(mpicbg.icp.ICP.unwrapPointMatches(icp.getPointMatches()), icp.getAverageError()); result.setResult(java.lang.System.currentTimeMillis(), ((((((\"Found \" + (icp.getNumPointMatches())) + \" matches, avg error [px] \") + (icp.getAverageError())) + \" after \") + i) + \" iterations\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7556/buggy-version/src.main.java.spim.process.interestpointregistration.pairwise.methods.icp.IterativeClosestPointPairwise.java", "BodyUseAPI": ["mpicbg.icp.ICP.unwrapPointMatches(icp.getPointMatches())", "spim.process.interestpointregistration.pairwise.PairwiseResult<I>.setInliers(mpicbg.icp.ICP.unwrapPointMatches(icp.getPointMatches()),icp.getAverageError())", "mpicbg.icp.ICP<I>.getPointMatches()", "spim.process.interestpointregistration.pairwise.PairwiseResult<I>.setResult(long,((((((\"Found \" + (icp.getNumPointMatches())) + \" matches, avg error [px] \") + (icp.getAverageError())) + \" after \") + i) + \" iterations\"))", "spim.process.interestpointregistration.pairwise.PairwiseResult<I>.setCandidates(mpicbg.icp.ICP.unwrapPointMatches(icp.getPointMatches()))", "mpicbg.icp.ICP<I>.getPointMatches()", "mpicbg.icp.ICP<I>.getAverageError()", "mpicbg.icp.ICP<I>.getNumPointMatches()", "mpicbg.icp.ICP<I>.getAverageError()", "mpicbg.icp.ICP.unwrapPointMatches(icp.getPointMatches())"], "Fixed commit": "312596925027c24a861a5a86f6dca6852ca43fde", "Url": "https://api.github.com/repos/fiji/SPIM_Registration", "Date": "2017-06-13T16:46:42Z"},
{"Line": "=>1102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(initComplete)) { networks.get(java.lang.Integer.parseInt(objectName)).onUserJoined(user); }else { service.getHandler().obtainMessage(R.id.NEW_USER_ADDED, java.lang.Integer.parseInt(objectName), 0, user).sendToTarget(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2677/buggy-version/src.com.iskrembilen.quasseldroid.io.CoreConnection.java", "BodyUseAPI": [], "Fixed commit": "c00b67bb6c3300240331d259d868fc2650408b0a", "Url": "https://api.github.com/repos/sandsmark/QuasselDroid", "Date": "2012-07-11T23:31:25Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (frame != null) { size += frame.getSize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8363/buggy-version/src.main.java.de.wsdevel.tools.streams.container.Segment.java", "BodyUseAPI": ["de.wsdevel.tools.streams.container.Frame.getSize()"], "Fixed commit": "e1cfccf4b11381d42f4fbb9a66e128bd92cb255e", "Url": "https://api.github.com/repos/dawnofmusic/SAW_Java-Tools", "Date": "2013-05-06T10:35:57Z"},
{"Line": "=>556", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cloudstack.api.command.user.vm.DeployVMCmd.findById(java.lang.Class,java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(serviceOffering.isDynamic())) { for (java.lang.String detail : getDetails().keySet()) { if (((detail.equalsIgnoreCase(\"cpuNumber\")) || (detail.equalsIgnoreCase(\"cpuSpeed\"))) || (detail.equalsIgnoreCase(\"memory\"))) { throw new com.cloud.exception.InvalidParameterValueException(\"cpuNumber or cpuSpeed or memory should not be specified for static service offering\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2863/buggy-version/api.src.org.apache.cloudstack.api.command.user.vm.DeployVMCmd.java", "BodyUseAPI": [], "Fixed commit": "149f6c05147a07abe845b53ed4d9bc159b68b0ff", "Url": "https://api.github.com/repos/nlivens/cloudstack", "Date": "2015-12-23T06:42:44Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (vCall.addr instanceof regalloc.VAddr.Var) { use.add(vCall.addr.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8642/buggy-version/regalloc.RegAllocHelper.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(vCall.addr.toString())", "vCall.addr.toString()"], "Fixed commit": "bebd30e24c0d5e1ee94a43aecb2d2097d7b7d23f", "Url": "https://api.github.com/repos/wrand001/CS179E-Senior-Design", "Date": "2017-05-30T23:00:00Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (writer != null) writer.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1738/buggy-version/src.java.carmen.demo.LocationResolverDemo.java", "BodyUseAPI": ["java.io.Writer.close()"], "Fixed commit": "272e1d607697120693e877846157c45e60473c23", "Url": "https://api.github.com/repos/mdredze/carmen", "Date": "2014-04-17T13:47:41Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((window.getPassageStringLeft()) == null) && ((window.getPassageStringRight()) == null)) { window.setCentroidSimilarityLeft(window.getCentroidSimilarity()); window.setEntityLinkingLeft(window.getEntityLinking()); window.setEsaCosineSimilarityLeft(window.getEsaCosineSimilarity()); window.setCentroidSimilarityRight(window.getCentroidSimilarity()); window.setEntityLinkingRight(window.getEntityLinking()); window.setEsaCosineSimilarityRight(window.getEsaCosineSimilarity()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/354/buggy-version/Learning2Rank.src.main.java.com.technion.ir.baseline.BaseLinePassage3MMNormLTR.java", "BodyUseAPI": ["com.technion.ir.baseline.WindowBoundary.setEsaCosineSimilarityLeft(window.getEsaCosineSimilarity())", "com.technion.ir.baseline.WindowBoundary.getCentroidSimilarity()", "com.technion.ir.baseline.WindowBoundary.setCentroidSimilarityLeft(window.getCentroidSimilarity())", "com.technion.ir.baseline.WindowBoundary.setCentroidSimilarityRight(window.getCentroidSimilarity())", "com.technion.ir.baseline.WindowBoundary.setEntityLinkingRight(window.getEntityLinking())", "com.technion.ir.baseline.WindowBoundary.setEntityLinkingLeft(window.getEntityLinking())", "com.technion.ir.baseline.WindowBoundary.getEsaCosineSimilarity()", "com.technion.ir.baseline.WindowBoundary.getEsaCosineSimilarity()", "com.technion.ir.baseline.WindowBoundary.getEntityLinking()", "com.technion.ir.baseline.WindowBoundary.getCentroidSimilarity()", "com.technion.ir.baseline.WindowBoundary.getEntityLinking()", "com.technion.ir.baseline.WindowBoundary.setEsaCosineSimilarityRight(window.getEsaCosineSimilarity())"], "Fixed commit": "8445997e5fddcb96d0310cb15bd2692ff81c7f53", "Url": "https://api.github.com/repos/Eilons/Learning2Rank", "Date": "2016-05-30T13:53:35Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!passwordEquals) { request.getSession().setAttribute(KeyConstant.ERROR_MESSAGE, \"\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef!\"); return mapping.findForward(\"error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1071/buggy-version/oa_public_portal.src.com.china.center.oa.publics.action.LoginAction.java", "BodyUseAPI": [], "Fixed commit": "af1394654123f64649080cf6d505af0b1a15cec5", "Url": "https://api.github.com/repos/kingofhawks/yycoin", "Date": "2017-04-08T05:45:34Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isContentFullScreen) { onRequestToggleFullscreen(); }else finish();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2208/buggy-version/src.com.wb.nextgen.activity.ECGalleryActivity.java", "BodyUseAPI": [], "Fixed commit": "18f502bc6b56eb695cb889c867f58e5ab79bfd38", "Url": "https://api.github.com/repos/warnerbros/cpe-manifest-android-experience", "Date": "2016-07-14T23:43:56Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((resultGenerated.get((key + (typeOfGenFile)))) == null) { java.lang.System.out.println(((\"Test \" + key) + \" is invalid\")); java.lang.System.out.println(\"No file was generated.\"); }else { java.lang.System.out.println(((\"Test \" + key) + \" is invalid\")); java.lang.System.out.println((((\"Expected : \" + (resultSource.get(key))) + \" Got : \") + (resultGenerated.get((key + (typeOfGenFile)))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8352/buggy-version/src.com.company.Generator.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "7240043ee07229b6fadb4cd3ccf8216bfbbe2428", "Url": "https://api.github.com/repos/laymard/Projet-Tiresias", "Date": "2017-01-22T14:24:15Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (raw == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1788/buggy-version/src.main.java.com.turt2live.antishare.config.ConfigConvert.java", "BodyUseAPI": [], "Fixed commit": "52dc6182d8080fac6592730bcd8ced4c9307a187", "Url": "https://api.github.com/repos/turt2live/AntiShare", "Date": "2013-03-01T03:07:49Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s1 == null) || (s2 == null)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1788/buggy-version/src.main.java.com.turt2live.antishare.config.ConfigConvert.java", "BodyUseAPI": [], "Fixed commit": "52dc6182d8080fac6592730bcd8ced4c9307a187", "Url": "https://api.github.com/repos/turt2live/AntiShare", "Date": "2013-03-01T03:07:49Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["posts.get(0).getAsJsonObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (op.has(\"com\")) { subject = extras.URLTitles.makeClean(((op.get(\"com\").getAsString()) + \"\u0003\")); }else { subject = \"No Subject\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3543/buggy-version/extras.urlparsers.ChanParser.java", "BodyUseAPI": ["extras.URLTitles.makeClean(((op.get(\"com\").getAsString()) + \"\u0003\"))", "op.get(\"com\").getAsString()", "com.google.gson.JsonObject.get(java.lang.String)"], "Fixed commit": "5c3a6b73524ae74e47d14b774726f52e040960c2", "Url": "https://api.github.com/repos/wiiaam/taylorswift.old", "Date": "2015-08-29T04:26:33Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (is != null) { java.util.Scanner s = new java.util.Scanner(is).useDelimiter(\"\\\\A\"); return s.hasNext() ? s.next() : \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5444/buggy-version/src.com.bbaumgar.net.Utils.java", "BodyUseAPI": ["java.util.Scanner.useDelimiter(java.lang.String)"], "Fixed commit": "37b00a2b4c382dda895ba283d89f3df0a33e4531", "Url": "https://api.github.com/repos/bbaumgar/DeadZoneFinder", "Date": "2013-03-04T03:21:49Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.pms.util.StringUtil.hasValue(tagInfo.year)) { if ((tagInfo.year.length()) > 4) { result.updateString(\"YEAR\", tagInfo.year.substring(0, 4)); }else { result.updateString(\"YEAR\", tagInfo.year); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8627/buggy-version/src.main.java.net.pms.database.TableMusicBrainzReleases.java", "BodyUseAPI": ["java.sql.ResultSet.updateString(java.lang.String,tagInfo.year)", "java.sql.ResultSet.updateString(java.lang.String,tagInfo.year.substring(0, 4))", "tagInfo.year.length()", "tagInfo.year.substring(int,int)"], "Fixed commit": "bf6386f9f965d8bc8800586123ac271ef4a8e15c", "Url": "https://api.github.com/repos/UniversalMediaServer/UniversalMediaServer", "Date": "2016-12-18T06:28:01Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.svenskfiskapps.materialtodo.MainActivity.deleteTaskMode)) new android.os.Handler().postDelayed(new java.lang.Runnable() { public void run() { fab.show(); } }, 400);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7477/buggy-version/app.src.main.java.com.svenskfiskapps.materialtodo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "031c60e3c7d155079579cae605728a630e20a931", "Url": "https://api.github.com/repos/williamsam1/MaterialToDo", "Date": "2015-08-31T12:56:44Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (line.contains(\"[error]\")) { i = (line.indexOf(']')) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/786/buggy-version/src.com.twitter.intellij.pants.execution.PantsFilter.java", "BodyUseAPI": ["java.lang.String.indexOf(char)"], "Fixed commit": "af5637c837199e9d17ca58ea0c70c81f1edd54e8", "Url": "https://api.github.com/repos/fkorotkov/intellij-pants", "Date": "2014-07-30T17:52:55Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNameMap.get(name)) != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5267/buggy-version/src.com.tieto.crterminal.ui.PlayerFragment.java", "BodyUseAPI": [], "Fixed commit": "e21b9f597243d11d31904b81d610b43931a70135", "Url": "https://api.github.com/repos/miflysky/CRTerminal", "Date": "2015-10-16T05:32:25Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selected) != null) { device.setIconType(selected.getBuiltInIcon()); device.setIcon(selected.getDatabaseIcon()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4737/buggy-version/src.main.java.org.traccar.web.client.view.DeviceIconEditor.java", "BodyUseAPI": [], "Fixed commit": "32843e3536c987abd2f5f966450c568b68030ce8", "Url": "https://api.github.com/repos/vitalidze/traccar-web", "Date": "2016-05-07T10:46:05Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.polarnick.mathlogic.assumptionCheckerAndConverter.Expression.diffToExpression(com.polarnick.mathlogic.assumptionCheckerAndConverter.Expression)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((diff.size()) == 0) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2407/buggy-version/AssumptionConverterWithQuantifiers.src.main.java.com.polarnick.mathlogic.assumptionCheckerAndConverter.Checker.java", "BodyUseAPI": [], "Fixed commit": "bf41ac85ce66389da107398ef9c3f1255828d3b0", "Url": "https://api.github.com/repos/PolarNick239/MathLogic", "Date": "2016-03-28T20:46:06Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.polarnick.mathlogic.assumptionCheckerAndConverter.Expression.diffToExpression(com.polarnick.mathlogic.assumptionCheckerAndConverter.Expression)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((diff.size()) == 0) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2407/buggy-version/AssumptionConverterWithQuantifiers.src.main.java.com.polarnick.mathlogic.assumptionCheckerAndConverter.Checker.java", "BodyUseAPI": [], "Fixed commit": "bf41ac85ce66389da107398ef9c3f1255828d3b0", "Url": "https://api.github.com/repos/PolarNick239/MathLogic", "Date": "2016-03-28T20:46:06Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.eveningoutpost.dexdrip.GoogleDriveInterface.prefs.getString(\"custom_sync_key\", \"\").equals(\"\")) { com.eveningoutpost.dexdrip.GoogleDriveInterface.prefs.edit().putString(\"custom_sync_key\", com.eveningoutpost.dexdrip.utils.CipherUtils.getRandomHexKey()).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8183/buggy-version/app.src.main.java.com.eveningoutpost.dexdrip.GoogleDriveInterface.java", "BodyUseAPI": ["android.content.SharedPreferences.edit()", "com.eveningoutpost.dexdrip.GoogleDriveInterface.prefs.edit().putString(\"custom_sync_key\", com.eveningoutpost.dexdrip.utils.CipherUtils.getRandomHexKey()).commit()", "com.eveningoutpost.dexdrip.GoogleDriveInterface.prefs.edit().putString(java.lang.String,com.eveningoutpost.dexdrip.utils.CipherUtils.getRandomHexKey())"], "Fixed commit": "85033647b2d654065c6808ac38de89062975eea8", "Url": "https://api.github.com/repos/jamorham/xDrip-plus", "Date": "2016-06-16T16:09:55Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pw.rapit.likes.service.FacebookFetcherService.extractPageName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isEmpty(pageName)) { throw new java.lang.IllegalArgumentException(\"Empty page Id\"); }else if (isEmpty(postId)) { throw new java.lang.IllegalArgumentException(\"Empty post Id\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3514/buggy-version/src.main.java.pw.rapit.likes.service.FacebookFetcherService.java", "BodyUseAPI": [], "Fixed commit": "964a26adde969d4726505b62e574d23754ca2c79", "Url": "https://api.github.com/repos/jbylina/likes", "Date": "2017-02-13T22:12:34Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((file) != null) { root.writeJSONString(new java.io.FileWriter(file)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7247/buggy-version/backend.src.main.java.org.getlwc.configuration.json.JSONConfiguration.java", "BodyUseAPI": [], "Fixed commit": "7531f8e3d6819fe73ebd28d43085443995b03a02", "Url": "https://api.github.com/repos/Hidendra/LWC", "Date": "2014-12-25T19:45:09Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jetbrick.template.parser.VariableResolver.resolveClass(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (klass == null) { throw new java.lang.IllegalStateException((\"Cannot resolve class: \" + klassName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7423/buggy-version/src.main.java.jetbrick.template.parser.VariableResolver.java", "BodyUseAPI": [], "Fixed commit": "859b58deef423435c7ddb34325e604e1a41313e4", "Url": "https://api.github.com/repos/subchen/jetbrick-template", "Date": "2014-05-10T13:41:20Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jetbrick.template.parser.VariableResolver.resolveClass(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (klass == null) { throw new java.lang.IllegalStateException((\"Cannot resolve class: \" + klassName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7423/buggy-version/src.main.java.jetbrick.template.parser.VariableResolver.java", "BodyUseAPI": [], "Fixed commit": "859b58deef423435c7ddb34325e604e1a41313e4", "Url": "https://api.github.com/repos/subchen/jetbrick-template", "Date": "2014-05-10T13:41:20Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jetbrick.template.parser.VariableResolver.resolveClass(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (klass == null) { throw new java.lang.IllegalStateException((\"Cannot resolve class: \" + klassName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7423/buggy-version/src.main.java.jetbrick.template.parser.VariableResolver.java", "BodyUseAPI": [], "Fixed commit": "859b58deef423435c7ddb34325e604e1a41313e4", "Url": "https://api.github.com/repos/subchen/jetbrick-template", "Date": "2014-05-10T13:41:20Z"},
{"Line": "=>845", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((rpw.getStatusUser()) != null) && ((rpw.getStatusUser().length()) == 0)) { jLabelStatusRepairIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/bike_gui/picture/repairUserStep1.png\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4499/buggy-version/Bike.src.bike_gui.GreenSociety.java", "BodyUseAPI": [], "Fixed commit": "9114af1d8f0b36accc82bdec477beaf8c1573eb4", "Url": "https://api.github.com/repos/ThanattaJ/Project-Bike", "Date": "2017-05-21T17:12:22Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((type == (ItemRenderType.EQUIPPED)) || (type == (ItemRenderType.EQUIPPED_FIRST_PERSON))) || (type == (ItemRenderType.ENTITY))) { org.lwjgl.opengl.GL11.glTranslatef((-0.22F), (-0.2F), (-0.22F)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2864/buggy-version/common.mekanism.client.render.item.ItemRenderingHandler.java", "BodyUseAPI": [], "Fixed commit": "c9b5c7b51f00ca71d0b24345d7a0cedbcb989a5f", "Url": "https://api.github.com/repos/aidancbrady/Mekanism", "Date": "2013-11-13T19:59:11Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ASSESSMENT.equalsIgnoreCase(collectionType)) { placeRequest = org.ednovo.gooru.application.client.gin.AppClientFactory.getPlaceManager().preparePlaceRequest(PlaceTokens.ASSESSMENT_PLAY, params); }else { placeRequest = org.ednovo.gooru.application.client.gin.AppClientFactory.getPlaceManager().preparePlaceRequest(PlaceTokens.COLLECTION_PLAY, params); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4982/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.util.FolderCollectionView.java", "BodyUseAPI": [], "Fixed commit": "700c7ac8042631deb1784aee6152425f2653e3ed", "Url": "https://api.github.com/repos/chandrasekharv/Gooru-Web", "Date": "2015-09-30T09:52:29Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.araqne.logdb.query.expr.Mul.eval(org.araqne.logdb.Row)", "org.araqne.logdb.query.expr.Mul.eval(org.araqne.logdb.Row)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((o1 == null) || (o2 == null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2606/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.expr.Mul.java", "BodyUseAPI": [], "Fixed commit": "a080801e2b4e3c7e59be855a975e7d45d0b50ed2", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-12-11T07:14:09Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.araqne.logdb.query.expr.Add.eval(org.araqne.logdb.Row)", "org.araqne.logdb.query.expr.Add.eval(org.araqne.logdb.Row)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((o1 == null) || (o2 == null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2606/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.expr.Add.java", "BodyUseAPI": [], "Fixed commit": "a080801e2b4e3c7e59be855a975e7d45d0b50ed2", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-12-11T07:14:09Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.araqne.logdb.query.expr.Sub.eval(org.araqne.logdb.Row)", "org.araqne.logdb.query.expr.Sub.eval(org.araqne.logdb.Row)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((o1 == null) || (o2 == null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2606/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.expr.Sub.java", "BodyUseAPI": [], "Fixed commit": "a080801e2b4e3c7e59be855a975e7d45d0b50ed2", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-12-11T07:14:09Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Interval.DEFAULT.equals(interval)) { return java.util.Collections.unmodifiableCollection(data.values()); }else { return java.util.Collections.unmodifiableCollection(data.subMap(interval.getStart(), true, interval.getEnd(), true).values()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5767/buggy-version/src.com.ibm.nmon.data.DataSet.java", "BodyUseAPI": ["java.util.TreeMap<java.lang.Long, com.ibm.nmon.data.DataRecord>.subMap(interval.getStart(),boolean,interval.getEnd(),boolean)", "com.ibm.nmon.interval.Interval.getStart()", "java.util.Collections.unmodifiableCollection(data.subMap(interval.getStart(), true, interval.getEnd(), true).values())", "data.subMap(interval.getStart(), true, interval.getEnd(), true).values()", "com.ibm.nmon.interval.Interval.getEnd()"], "Fixed commit": "3f123301a309f1a888cdfd385134578fe360ff70", "Url": "https://api.github.com/repos/nmonvisualizer/nmonvisualizer", "Date": "2014-10-23T15:50:46Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(messageString.isEmpty())) { org.bukkit.Bukkit.getScheduler().runTask(state.plugin, new org.bukkit.scheduler.BukkitRunnable() { @java.lang.Override public void run() { state.getPlayer().sendMessage(messageString); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1727/buggy-version/src.com.pwn9.PwnFilter.rules.action.Actionpoints.java", "BodyUseAPI": ["org.bukkit.Bukkit.getScheduler().runTask(state.plugin,org.bukkit.scheduler.BukkitRunnable)", "state.getPlayer().sendMessage(java.lang.String)"], "Fixed commit": "fc458efd6a2f672e1cfe3a0f2d8ef6740d911657", "Url": "https://api.github.com/repos/Pwn9/PwnFilter", "Date": "2014-04-30T01:40:41Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getEventType()) == (UsageEvents.Event.MOVE_TO_FOREGROUND)) { if (isGoOpen) GOClosed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6098/buggy-version/app.src.main.java.com.tomerrosenfeld.tweaksforgo.Services.MainService.java", "BodyUseAPI": [], "Fixed commit": "9360e899d915164360ff9863f21287e15105ca4d", "Url": "https://api.github.com/repos/rosenpin/Enhancer-For-GO", "Date": "2016-07-24T08:44:23Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 0) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5407/buggy-version/src.main.java.com.tomgibara.bits.LongBitStore.java", "BodyUseAPI": [], "Fixed commit": "71dcc01b9c6c9573f84e15c64d9eddcffbbbadc9", "Url": "https://api.github.com/repos/tomgibara/bits", "Date": "2015-09-26T13:54:22Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 0) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5407/buggy-version/src.main.java.com.tomgibara.bits.LongBitStore.java", "BodyUseAPI": [], "Fixed commit": "71dcc01b9c6c9573f84e15c64d9eddcffbbbadc9", "Url": "https://api.github.com/repos/tomgibara/bits", "Date": "2015-09-26T13:54:22Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((movies) == null) { mErrorMessageTextView.setText(R.string.error_favourite); }else { mErrorMessageTextView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7692/buggy-version/app.src.main.java.com.example.android.popularmovies.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "70adf7fa6843b6865cb8df132c852046a623b953", "Url": "https://api.github.com/repos/jayjhaveri/Popular-movies-App", "Date": "2016-12-23T13:49:41Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.gary.comm.utils.Helper.isNull(oecodes))) { data.put(org.gary.elasticsearch.hks.GIndex.KEY_RELATION_OECODE, oecodes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2654/buggy-version/pubTools.src.main.java.org.gary.elasticsearch.hks.GIndex.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.util.Set<java.lang.String>)"], "Fixed commit": "b933e94b3f65bd46650f3d2922142879ba5abfec", "Url": "https://api.github.com/repos/garyHuang/pubTool", "Date": "2016-05-26T01:25:40Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (def instanceof com.zendesk.maxwell.schema.columndef.BigIntColumnDef) { jgen.writeBooleanField(\"signed\", ((com.zendesk.maxwell.schema.columndef.BigIntColumnDef) (def)).isSigned()); }else if (def instanceof com.zendesk.maxwell.schema.columndef.EnumeratedColumnDef) { jgen.writeArrayFieldStart(\"enum-values\"); for (java.lang.String s : ((com.zendesk.maxwell.schema.columndef.EnumeratedColumnDef) (def)).getEnumValues()) jgen.writeString(s); jgen.writeEndArray(); }else if (def instanceof com.zendesk.maxwell.schema.columndef.DateTimeColumnDef) { java.lang.Long columnLength = ((com.zendesk.maxwell.schema.columndef.DateTimeColumnDef) (def)).getColumnLength(); if (columnLength != null) jgen.writeNumberField(\"column-length\", columnLength); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2032/buggy-version/src.main.java.com.zendesk.maxwell.schema.columndef.ColumnDefSerializer.java", "BodyUseAPI": [], "Fixed commit": "dcf513357a8f718b491b3c7d26a4bb54d17306b4", "Url": "https://api.github.com/repos/zendesk/maxwell", "Date": "2016-09-01T21:11:44Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { imageUUID = java.util.UUID.fromString(savedInstanceState.getString(\"imageUUID\")); }else { imageUUID = java.util.UUID.randomUUID(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3720/buggy-version/Aikuma.src.org.lp20.aikuma.ui.AddSpeakerActivity3.java", "BodyUseAPI": ["java.util.UUID.fromString(savedInstanceState.getString(\"imageUUID\"))", "android.os.Bundle.getString(java.lang.String)"], "Fixed commit": "ec32e0729001110befb14bd3206f57d8b3048511", "Url": "https://api.github.com/repos/langtech/aikuma", "Date": "2014-11-11T02:03:16Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((takePictureIntent.resolveActivity(getPackageManager())) != null) { startActivityForResult(takePictureIntent, actionCode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3720/buggy-version/Aikuma.src.org.lp20.aikuma.ui.AddSpeakerActivity3.java", "BodyUseAPI": ["org.lp20.aikuma.ui.AddSpeakerActivity3.startActivityForResult(android.content.Intent,int)"], "Fixed commit": "ec32e0729001110befb14bd3206f57d8b3048511", "Url": "https://api.github.com/repos/langtech/aikuma", "Date": "2014-11-11T02:03:16Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (element == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8245/buggy-version/src.sk.sorien.silexplugin.pimple.PimplePhpTypeProvider.java", "BodyUseAPI": [], "Fixed commit": "15b62292339137c0bf771e529596ca314ff0f60c", "Url": "https://api.github.com/repos/CarsonF/silex-idea-plugin", "Date": "2015-08-10T07:26:06Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.db.ODatabaseDocumentInternal.getTransaction()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tx.isActive()) { final com.orientechnologies.orient.core.record.ORecord txRecord = tx.getRecord(rid); if (txRecord != null) txRecord.fromStream(iRecordContent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6897/buggy-version/core.src.main.java.com.orientechnologies.orient.core.conflict.OAutoMergeRecordConflictStrategy.java", "BodyUseAPI": ["com.orientechnologies.orient.core.tx.OTransaction.getRecord(com.orientechnologies.orient.core.id.ORecordId)"], "Fixed commit": "861727defccb98a9eccbaecd575a1ed8c6d8e436", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-06-11T17:07:18Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e == (Cell.timedOut)) timer_new.setTimer((-2));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5973/buggy-version/src.kilim.Task.java", "BodyUseAPI": [], "Fixed commit": "d794962609770f3814842471cb01de4126fd4621", "Url": "https://api.github.com/repos/nqzero/kilim", "Date": "2016-09-05T14:31:25Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasPermission) initLrc();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5771/buggy-version/app.src.main.java.com.example.liPATHng.lab6.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "313ad56e32c9d78075d7517d247978c8c3c056eb", "Url": "https://api.github.com/repos/KinomotoSakura/Android_Lab6", "Date": "2017-12-04T17:32:48Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.citizensnpcs.npcs.NPCManager.isNPC(entity)) { }else if ((net.citizensnpcs.resources.npclib.creatures.CreatureTask.getCreature(entity)) != null) { retrieved = get(getByType(MOBS), net.citizensnpcs.utils.StringUtils.format(net.citizensnpcs.resources.npclib.creatures.CreatureTask.getCreature(entity).getType(), false)); }else if (entity instanceof org.bukkit.entity.Player) { java.lang.String name = ((org.bukkit.entity.Player) (entity)).getName().toLowerCase(); retrieved = ((get(getByType(PLAYERS), name)) == null) ? groupMap.get(name) : get(getByType(PLAYERS), name); }else { retrieved = get(getByType(MOBS), net.citizensnpcs.utils.EntityUtils.getMonsterName(entity)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3580/buggy-version/src.guard.net.citizensnpcs.guards.flags.FlagSorter.java", "BodyUseAPI": ["net.citizensnpcs.utils.EntityUtils.getMonsterName(org.bukkit.entity.LivingEntity)", "net.citizensnpcs.guards.flags.FlagSorter.get(java.util.Map<java.lang.String, net.citizensnpcs.guards.flags.FlagInfo>,net.citizensnpcs.utils.StringUtils.format(net.citizensnpcs.resources.npclib.creatures.CreatureTask.getCreature(entity).getType(), false))", "net.citizensnpcs.resources.npclib.creatures.CreatureTask.getCreature(org.bukkit.entity.LivingEntity)", "net.citizensnpcs.resources.npclib.creatures.CreatureTask.getCreature(entity).getType()", "net.citizensnpcs.resources.npclib.creatures.CreatureTask.getCreature(org.bukkit.entity.LivingEntity)", "net.citizensnpcs.utils.StringUtils.format(net.citizensnpcs.resources.npclib.creatures.CreatureTask.getCreature(entity).getType(),boolean)", "net.citizensnpcs.guards.flags.FlagSorter.get(java.util.Map<java.lang.String, net.citizensnpcs.guards.flags.FlagInfo>,net.citizensnpcs.utils.EntityUtils.getMonsterName(entity))"], "Fixed commit": "9c6d10ca2003f801105c731c8572b15452cfa527", "Url": "https://api.github.com/repos/CitizensDev/Citizens", "Date": "2011-08-29T10:25:41Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["at.jclehner.rxdroid.Settings.getDate(Keys.NEXT_REFILL_REMINDER_DATE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (nextRefillReminder != null) { final java.util.Date today = at.jclehner.rxdroid.util.DateTime.today(); if ((java.lang.Math.abs(at.jclehner.rxdroid.util.DateTime.diffDays(nextRefillReminder, today))) > 1) { at.jclehner.rxdroid.Settings.putDate(Keys.NEXT_REFILL_REMINDER_DATE, at.jclehner.rxdroid.util.DateTime.add(today, java.util.Calendar.DAY_OF_MONTH, 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8839/buggy-version/src.main.java.at.jclehner.rxdroid.SystemEventReceiver.java", "BodyUseAPI": ["at.jclehner.rxdroid.util.DateTime.diffDays(java.util.Date,java.util.Date)", "java.lang.Math.abs(at.jclehner.rxdroid.util.DateTime.diffDays(nextRefillReminder, today))"], "Fixed commit": "c88c339316e46e7a3a18f46087c6e164928e2370", "Url": "https://api.github.com/repos/jclehner/rxdroid", "Date": "2015-03-13T15:55:23Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.europeana.uim.Registry.getWorkflow(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ingestionworkflow == null) { throw new eu.europeana.uim.mintclient.service.exceptions.MintOSGIClientException(\"Failed to get reference to InitialIngestionWorkflow\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1121/buggy-version/plugins.mintjmsclient.src.main.java.eu.europeana.uim.mintclient.service.ReponseHandler.java", "BodyUseAPI": [], "Fixed commit": "d575d63ead0be15a4097406692e3a3ec3a0a9ea1", "Url": "https://api.github.com/repos/europeana/uim-europeana", "Date": "2013-11-21T11:04:05Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isComplete(this.currentSchedule)) { compareSchedule(); }else java.lang.System.out.println(\"The local serarch didnt return a complete schedule\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6186/buggy-version/DTU_openShop.src.DataObject.java", "BodyUseAPI": [], "Fixed commit": "9250a5b501da2da7bd7019d5c96295199c4cc388", "Url": "https://api.github.com/repos/wilfriedgh/DTU_Opt", "Date": "2016-03-29T13:46:22Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isComplete()) { }else for (int m = 0; m < (this.machineCount); m++) { for (int j = 0; j < (this.jobCount); j++) { if ((this.startTime[m][j]) == (-1)) { addJob(j, m); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6186/buggy-version/DTU_openShop.src.Schedule.java", "BodyUseAPI": [], "Fixed commit": "9250a5b501da2da7bd7019d5c96295199c4cc388", "Url": "https://api.github.com/repos/wilfriedgh/DTU_Opt", "Date": "2016-03-29T13:46:22Z"},
{"Line": "=>1021", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.pandcorps.furguardians.Level.theme) == (Level.Theme.Cave)) { y = ((((Level.tm.getHeight()) * (Level.tm.getTileHeight())) - 1) - (H)) - ((org.pandcorps.furguardians.Level.MAX_CAVE_CEILING_SIZE) * 16); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1206/buggy-version/game.furguardians.org.pandcorps.furguardians.Player.java", "BodyUseAPI": [], "Fixed commit": "65632e90daf575714f058d6e94ec8904c9ca64c4", "Url": "https://api.github.com/repos/pandcorps/pandam", "Date": "2015-06-16T12:42:31Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasEntity()) { if (isInputStreamEntity()) { try { ((java.io.InputStream) (entity.getEntity())).reset(); } catch (java.io.IOException e) { throw new org.openstack4j.api.exceptions.ConnectionException(\"Reset of input stream not possible. Aborting operation.\", 0, e); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7225/buggy-version/connectors.jersey2.src.main.java.org.openstack4j.connectors.jersey2.HttpCommand.java", "BodyUseAPI": [], "Fixed commit": "d8494f731619781dead87738731700942ee5b3c8", "Url": "https://api.github.com/repos/westenb/openstack4j", "Date": "2016-06-03T09:25:40Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((height) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5099/buggy-version/com.pset3.Pyramid.java", "BodyUseAPI": [], "Fixed commit": "3f9fcac8821b3d3c2621881e33007c194ce61529", "Url": "https://api.github.com/repos/JayHWill/Mario", "Date": "2015-03-09T04:13:35Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cpw.mods.fml.common.Loader.isModLoaded(filename.substring(0, ((filename.length()) - 4)))) { valueMap.putAll(getFileValues(file)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4871/buggy-version/src.main.java.net.multiplemonomials.eer.handler.ValueFilesHandlerServer.java", "BodyUseAPI": [], "Fixed commit": "30c11f11b3bc8adab41172ffbddf0f0d77bf564e", "Url": "https://api.github.com/repos/multiplemonomials/Equivalent-Exchange-Reborn", "Date": "2015-01-11T03:33:20Z"},
{"Line": "=>606", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (data != null) { data.saveDataToFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/377/buggy-version/src.main.java.mca.core.MCA.java", "BodyUseAPI": ["radixcore.data.AbstractPlayerData.saveDataToFile()"], "Fixed commit": "135da269c7993e94b272bbe7af81433610d4d40b", "Url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive", "Date": "2015-07-12T02:39:48Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.zkoss.bind.init.ZKBinderPhaseListeners._listeners.containsKey(klass.getName()))) { org.zkoss.bind.init.ZKBinderPhaseListeners._listeners.put(klass.getName(), ((org.zkoss.bind.PhaseListener) (klass.newInstance()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5522/buggy-version/zkbind.src.org.zkoss.bind.init.ZKBinderPhaseListeners.java", "BodyUseAPI": ["java.lang.Class<?>.getName()", "java.lang.Class<?>.newInstance()", "java.util.Map<java.lang.String, org.zkoss.bind.PhaseListener>.put(java.lang.String,((org.zkoss.bind.PhaseListener) (klass.newInstance())))"], "Fixed commit": "6f55018d048394594b20bd2cba9131c0e36f668e", "Url": "https://api.github.com/repos/zkoss/zk", "Date": "2015-12-18T10:04:52Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((str.trim().charAt(0)) == '#') { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8436/buggy-version/src.Server.TracerConf.java", "BodyUseAPI": [], "Fixed commit": "586c51cb3008c6b49dd124f858cd28d6d368890c", "Url": "https://api.github.com/repos/EddiePi/tracing-server", "Date": "2017-04-19T22:18:22Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (task1.getDateStart().after(task2.getDateStart())) { moustachio.task_catalyst.Task temp = task1; task1 = task2; task2 = temp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7009/buggy-version/task_catalyst.src.main.java.moustachio.task_catalyst.ListProcessorActual.java", "BodyUseAPI": [], "Fixed commit": "b781e16d2989d69798083cffb31db176dae8eea5", "Url": "https://api.github.com/repos/cs2103aug2014-t17-4j/main", "Date": "2014-10-26T09:37:29Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((values.length) <= 1) { return values; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2249/buggy-version/src.com.wesleyreisz.samples.mergesort.MergeSort.java", "BodyUseAPI": [], "Fixed commit": "e492b525e5ecb6e8843a164a7a33911e6b68ebc1", "Url": "https://api.github.com/repos/wesreisz/algorithmsrefresher", "Date": "2013-07-14T20:09:24Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parameterList) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7515/buggy-version/project-set.components.uri-normalization.src.main.java.com.rackspace.papi.components.unorm.normalizer.MultiInstanceWhiteList.java", "BodyUseAPI": [], "Fixed commit": "8d492f595f4e3166d9c2d2cc00463da647705159", "Url": "https://api.github.com/repos/RackerWilliams/repose", "Date": "2013-03-08T18:41:24Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.util.List<edu.umass.ciir.fws.clustering.ScoredFacet>>.get(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (i < (facets.size())) { edu.umass.ciir.fws.clustering.ScoredFacet facet = facets.get(i); facet.score = 1; pool.add(facet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5820/buggy-version/java.src.main.java.edu.umass.ciir.fws.anntation.PoolFacets.java", "BodyUseAPI": ["java.util.List<edu.umass.ciir.fws.clustering.ScoredFacet>.get(int)"], "Fixed commit": "17a5e0f4866229d516910bfec7f5e180f99c6f39", "Url": "https://api.github.com/repos/weize/fws", "Date": "2014-05-04T02:54:09Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (railo.commons.lang.StringUtil.isEmpty(method, true)) throw new railo.runtime.exp.ApplicationException(\"Attribute [method] for tag [invoke] is required in this context.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3112/buggy-version/railo-java.railo-core.src.railo.runtime.tag.Invoke.java", "BodyUseAPI": [], "Fixed commit": "489ae821cd14c788af2f5b19631a67066bc7b939", "Url": "https://api.github.com/repos/cybersonic/railo", "Date": "2010-12-15T23:02:32Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f.isDirectory()) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3735/buggy-version/org.jeie.Jeie.java", "BodyUseAPI": [], "Fixed commit": "4f603fbc380f7ad671034ffd621151d7e62c2182", "Url": "https://api.github.com/repos/IsmAvatar/JEIE", "Date": "2012-04-05T23:27:01Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(line.toLowerCase().contains(\"warning: failed creating\"))) { if (!(line.toLowerCase().contains(\"fingerprint md5\"))) { publishProgress(line); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6560/buggy-version/src.net.cachapa.remotegallery.ssh.Ssh.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "net.cachapa.remotegallery.ssh.Ssh.ErrorStreamReader.publishProgress(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "8686e08cef0c01d1afe7e2ef495909083016305b", "Url": "https://api.github.com/repos/bigwave/RemoteGallery", "Date": "2015-05-28T17:26:05Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (val.isObject()) { return new com.github.wnameless.json.flattener.JsonFlattener(val.toString()).withFlattenMode(flattenMode).flattenAsMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5790/buggy-version/src.main.java.com.github.wnameless.json.flattener.JsonFlattener.java", "BodyUseAPI": ["com.eclipsesource.json.JsonValue.toString()", "com.github.wnameless.json.flattener.JsonFlattener.flattenAsMap()", "com.github.wnameless.json.flattener.JsonFlattener.withFlattenMode(com.github.wnameless.json.flattener.FlattenMode)"], "Fixed commit": "8d4bcacbcacb290aea3929ecf4624a5b09e4ec45", "Url": "https://api.github.com/repos/wnameless/json-flattener", "Date": "2016-06-05T02:20:16Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.constellio.model.services.schemas.SchemaUtils.getSchemaTypeCode(metadata.getSchemaCode())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cachedRecord.getTypeCode().equals(metadataTypeCode)) { java.lang.Object recordValue = cachedRecord.get(metadata); if ((recordValue != null) && (recordValue.equals(value))) { return cachedRecord; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6750/buggy-version/model.src.com.constellio.model.services.records.cache.RecordsCacheRequestImpl.java", "BodyUseAPI": ["com.constellio.model.entities.records.Record.get(com.constellio.model.entities.schemas.Metadata)"], "Fixed commit": "fddf064cfa94153a757e0049dbb7e77ae41550f9", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2017-07-12T14:37:13Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((order.equals(Constant.ORDER_COMPANY_ASC)) || (order.equals(Constant.ORDER_COMPANY_DESC))) { query = session.createQuery(((\"SELECT C FROM Computer C \" + \"left outer join C.company as Cpn \") + orderBy)); }else { query = session.createQuery((\" FROM Computer C \" + orderBy)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2907/buggy-version/persistence.src.main.java.dao.computer.ComputerDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "820591379ee9caa7588e8f9e4c5e08353d8009da", "Url": "https://api.github.com/repos/gdanguy/training-java-gdanguy", "Date": "2017-05-31T08:06:34Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getStringSet(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (thing != null) { android.util.Log.d(uk.co.eleusis.android.fcoalerts.MainActivity.TAG, (((\"'\" + key) + \"' contains object of class: \") + (thing.getClass().getName()))); android.util.Log.d(uk.co.eleusis.android.fcoalerts.MainActivity.TAG, (\".. and contents are: \" + (thing.toString()))); java.util.Set<java.lang.String> countries = ((java.util.Set<java.lang.String>) (thing)); if (prefs.getBoolean(\"all_countries_checkbox\", false)) { saveCountriesToServer(countries); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5669/buggy-version/src.uk.co.eleusis.android.fcoalerts.MainActivity.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Object>.getName()", "android.util.Log.d(java.lang.String,java.lang.String)", "java.lang.Object.getClass()", "android.util.Log.d(java.lang.String,java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "4fe547c8cab4d95e5325a92841d20b6990df1800", "Url": "https://api.github.com/repos/keefmarshall/fco-alerts-app", "Date": "2016-02-20T16:34:12Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Locale.getLanguage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((languageCode.length()) > 2) { logger.error((\"cookie resolver locale language issue\" + languageCode)); languageCode = locale.getDefault().getLanguage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3680/buggy-version/src.main.java.eu.trentorise.smartcampus.permissionprovider.controller.ExtraInfoController.java", "BodyUseAPI": ["org.apache.commons.logging.Log.error(java.lang.String)"], "Fixed commit": "b0cb67fdfa74bd68459573b2d564648113a15f16", "Url": "https://api.github.com/repos/smartcommunitylab/permission.provider", "Date": "2017-03-30T06:52:44Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (p0 != null) { ofl.add(new com.annot.room.ObjectInstance.ObjectFace(this, p, p0, camRot.mul(getNormal()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7314/buggy-version/src.com.annot.room.MyBox.java", "BodyUseAPI": ["java.util.List<com.annot.room.ObjectInstance.ObjectFace>.add(com.annot.room.ObjectInstance.ObjectFace)"], "Fixed commit": "7c888316ef2ac8f26afa2a72b238bf05d98ffaf3", "Url": "https://api.github.com/repos/vdel/RoomAnnotTool", "Date": "2013-01-24T01:37:46Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInEditMode())) { mGPUImage = new jp.co.cyberagent.android.gpuimage.GPUImage(getContext()); mGPUImage.setGLSurfaceView(mGLSurfaceView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8655/buggy-version/library.src.jp.co.cyberagent.android.gpuimage.GPUImageView.java", "BodyUseAPI": [], "Fixed commit": "b6fa764525854d1e895c9b2e4b5e836fb531692c", "Url": "https://api.github.com/repos/jonan/android-gpuimage", "Date": "2015-10-04T10:42:03Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (c == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2664/buggy-version/client.src.LLAMA.app.src.main.java.org.llama.llama.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "04cbf77ca75274df88ba4afd91071f17044e24c3", "Url": "https://api.github.com/repos/feberhard/LLAMA", "Date": "2017-01-21T10:15:06Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pivotIdx == j) { pivotIdx = i; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/895/buggy-version/src.Lab3_2.ArrayMethods2.java", "BodyUseAPI": [], "Fixed commit": "1bb16509d840f090e0ddcb6e612f257a8dd47c77", "Url": "https://api.github.com/repos/afeng5853/Classwork", "Date": "2017-11-14T18:17:06Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player instanceof com.brookmanholmes.billiards.player.CompPlayer) && (opponent instanceof com.brookmanholmes.billiards.player.CompPlayer)) { ((android.widget.TextView) (itemView.findViewById(R.id.tvWinTotalTitle))).setText(itemView.getContext().getString(R.string.title_games_won_apa)); tvWinTotalPlayer.setText(itemView.getContext().getString(R.string.out_of, player.getWins(), player.getGamesPlayed())); tvWinTotalOpponent.setText(itemView.getContext().getString(R.string.out_of, opponent.getWins(), opponent.getGamesPlayed())); }else { tvWinTotalPlayer.setText(itemView.getContext().getString(R.string.out_of, player.getWins(), player.getRank())); tvWinTotalOpponent.setText(itemView.getContext().getString(R.string.out_of, opponent.getWins(), opponent.getRank())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2927/buggy-version/app.src.main.java.com.brookmanholmes.bma.adaptervh.MatchOverviewHolder.java", "BodyUseAPI": ["android.widget.TextView.setText(itemView.getContext().getString(R.string.out_of, player.getWins(), player.getGamesPlayed()))", "itemView.getContext().getString(R.string.out_of,player.getWins(),player.getRank())", "com.brookmanholmes.billiards.player.AbstractPlayer.getGamesPlayed()", "com.brookmanholmes.billiards.player.AbstractPlayer.getRank()", "com.brookmanholmes.billiards.player.AbstractPlayer.getGamesPlayed()", "com.brookmanholmes.billiards.player.AbstractPlayer.getRank()", "itemView.getContext().getString(R.string.out_of,player.getWins(),player.getGamesPlayed())", "com.brookmanholmes.billiards.player.AbstractPlayer.getWins()", "com.brookmanholmes.billiards.player.AbstractPlayer.getWins()", "itemView.getContext().getString(R.string.out_of,opponent.getWins(),opponent.getGamesPlayed())", "itemView.getContext().getString(R.string.out_of,opponent.getWins(),opponent.getRank())", "com.brookmanholmes.billiards.player.AbstractPlayer.getWins()", "android.widget.TextView.setText(itemView.getContext().getString(R.string.out_of, opponent.getWins(), opponent.getGamesPlayed()))", "android.widget.TextView.setText(itemView.getContext().getString(R.string.out_of, player.getWins(), player.getRank()))", "android.widget.TextView.setText(itemView.getContext().getString(R.string.out_of, opponent.getWins(), opponent.getRank()))", "com.brookmanholmes.billiards.player.AbstractPlayer.getWins()"], "Fixed commit": "eb257e12fb6d5870f04e53486d587136d38ae3a6", "Url": "https://api.github.com/repos/brookman-holmes/BilliardMatchAnalyzer", "Date": "2016-09-06T20:42:20Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (serverProxy.contains(\"http://\")) server = serverProxy.replace(\"http://\", \"\").replace(\":8080\", \"\"); else server = serverProxy.replace(\"https://\", \"\").replace(\":8080\", \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1830/buggy-version/src.main.java.edu.stanford.isis.epad.plugin.lesiontracking.server.TrackingServiceImpl.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "4086c8d3fa6965f547f2c6ebbb889b1da4b924fc", "Url": "https://api.github.com/repos/DilvanLab/LesionTracking", "Date": "2014-11-26T21:01:53Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currency == null) currency = TNE.instance.manager.currencyManager.get(TNE.instance.defaultWorld, \"Major\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6094/buggy-version/src.com.github.tnerevival.core.currency.CurrencyFormatter.java", "BodyUseAPI": [], "Fixed commit": "40a59ae35fc7993e08a06b45418e200ef8d26b1e", "Url": "https://api.github.com/repos/TheNewEconomy/TNE-Bukkit", "Date": "2016-11-07T00:23:07Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kabbage.customentitylibrary.CustomEntityWrapper.getCustomEntity(org.bukkit.entity.Entity)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (customEnt == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1172/buggy-version/src.kabbage.customentitylibrary.listeners.LibraryEntityListener.java", "BodyUseAPI": [], "Fixed commit": "9de6c51f10f53ab13c208a2005f3cef8fd9a641f", "Url": "https://api.github.com/repos/smaltby/CustomEntityLibrary", "Date": "2013-03-03T17:30:32Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.paulvarry.intra42.adapters.ListAdapterCorrections.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((item.beginAt) == null) holder.textViewDate.setVisibility(View.GONE); else { java.lang.String str = (com.paulvarry.intra42.utils.DateTool.getTodayTomorrow(activity, item.beginAt, true)) + (com.paulvarry.intra42.utils.DateTool.getDateTimeLong(item.beginAt)); holder.textViewDate.setVisibility(View.VISIBLE); holder.textViewDate.setText(str); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3782/buggy-version/app.src.main.java.com.paulvarry.intra42.adapters.ListAdapterCorrections.java", "BodyUseAPI": ["com.paulvarry.intra42.utils.DateTool.getDateTimeLong(item.beginAt)", "com.paulvarry.intra42.utils.DateTool.getTodayTomorrow(com.paulvarry.intra42.activities.home.HomeActivity,item.beginAt,boolean)"], "Fixed commit": "9eec42541992b5a952e739f810a3d3e09f2ca154", "Url": "https://api.github.com/repos/pvarry/intra42", "Date": "2017-07-05T11:18:08Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3782/buggy-version/app.src.main.java.com.paulvarry.intra42.utils.DateTool.java", "BodyUseAPI": [], "Fixed commit": "9eec42541992b5a952e739f810a3d3e09f2ca154", "Url": "https://api.github.com/repos/pvarry/intra42", "Date": "2017-07-05T11:18:08Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) != null) { playerPosition = java.lang.Math.max(0, player.getContentPosition()); autoPlay = player.getPlayWhenReady(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/683/buggy-version/app.src.main.java.com.piatt.udacity.bakeaide.view.RecipeItemFragment.java", "BodyUseAPI": [], "Fixed commit": "cee096541edfe15bdb0c43b9eab0759102b08f9b", "Url": "https://api.github.com/repos/piatt/BakeAide", "Date": "2017-09-25T16:33:09Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Basic.filePath.equals(\"\")) { java.lang.String test = com.rfo.basic.Settings.getBaseDrive(this); if (test.equals(\"none\")) Basic.basePath = android.os.Environment.getExternalStorageDirectory().getPath(); else Basic.basePath = test; Basic.filePath = ((Basic.basePath) + \"/\") + (Basic.AppPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8716/buggy-version/src.com.rfo.basic.LauncherShortcuts.java", "BodyUseAPI": [], "Fixed commit": "8cdaad40544b82a7e714052b2f7a5c4d9147df4d", "Url": "https://api.github.com/repos/RFO-BASIC/Basic", "Date": "2013-01-23T21:53:32Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((val1 == null) && (val2 == null)) { return 0; }else if (val1 == null) { return -1; }else if (val2 == null) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5574/buggy-version/src.main.java.com.github.mongobee.utils.ChangelogComparator.java", "BodyUseAPI": [], "Fixed commit": "790c9600013def3823d80d8d6407895582568282", "Url": "https://api.github.com/repos/mongobee/mongobee", "Date": "2014-09-22T16:10:02Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((notice.getMail().getFrom()) != null) { prop.setProperty(\"notice.mail.from\", notice.getMail().getFrom()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4402/buggy-version/src.main.java.com.behase.relumin.config.ReluminConfig.java", "BodyUseAPI": ["notice.getMail().getFrom()", "com.behase.relumin.config.NoticeConfig.getMail()", "java.util.Properties.setProperty(java.lang.String,notice.getMail().getFrom())"], "Fixed commit": "8e91796eb79539065bb5f84c28de6d64fbbb4319", "Url": "https://api.github.com/repos/be-hase/relumin", "Date": "2015-06-12T10:41:26Z"},
{"Line": "=>1484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["wyscript.io.Parser.parseExpression(java.util.List<wyscript.error.ParserErrorData>,java.util.Set<Token.Kind>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (e != null) e.attributes().add(new wyscript.util.Attribute.Parentheses());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3540/buggy-version/src.wyscript.io.Parser.java", "BodyUseAPI": ["wyscript.lang.Expr.attributes()", "e.attributes().add(wyscript.util.Attribute.Parentheses)"], "Fixed commit": "a36c6fb7cb7329ebad08557760ee29ce9cdf0eda", "Url": "https://api.github.com/repos/DavePearce/Wyscript", "Date": "2014-01-14T03:06:33Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.bson.Document>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (unaskedQuestionCount < 1) { throw new java.lang.IllegalStateException(\"Ran out of Questions\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/738/buggy-version/backend.src.main.java.subtle_scheme.LiePhase.java", "BodyUseAPI": [], "Fixed commit": "8314f78765b4347c3ac148b8eb007aa312aba0ba", "Url": "https://api.github.com/repos/3StackGames/Digital-Compass", "Date": "2015-10-14T00:30:16Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (writeConcern.isAcknowledged()) { throw e; }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6331/buggy-version/driver-core.src.main.com.mongodb.connection.WriteProtocol.java", "BodyUseAPI": [], "Fixed commit": "fc6dda94721fb867b257832767803ca69ff038b7", "Url": "https://api.github.com/repos/matfur92/mongo-java-driver", "Date": "2015-09-16T15:10:37Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (oi.xbox.GetBValue()) { shooterSubsystem.setShooterAngle(ShooterPositions.flat); }else if (oi.xbox.GetYValue()) { shooterSubsystem.setShooterAngle(ShooterPositions.ready); }else if (oi.xbox.GetXValue()) { shooterSubsystem.setShooterAngle(ShooterPositions.shoot); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/80/buggy-version/FRC2016.src.org.usfirst.frc.team2022.robot.commands.ShooterCommand.java", "BodyUseAPI": ["oi.xbox.GetXValue()", "oi.xbox.GetYValue()"], "Fixed commit": "26083578794c7b898d432f8353180b168ff31644", "Url": "https://api.github.com/repos/Titan2022RoboticsTeam/2022JavaCode", "Date": "2016-02-17T00:08:10Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (min == null) min = score; else min = ((min.getScore()) < (score.getScore())) ? min : score;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3943/buggy-version/app.src.main.java.com.starproductions.starmotion.starmotion.ScoreSystem.ScoreManager.java", "BodyUseAPI": ["com.starproductions.starmotion.starmotion.ScoreSystem.Score.getScore()"], "Fixed commit": "a7789e1fb61fda2306fd0006d4160addf30da9b8", "Url": "https://api.github.com/repos/NiklasWoiton/Starmotion", "Date": "2017-09-21T22:59:03Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reverse) { int tmp = l; l = h; h = tmp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7926/buggy-version/1_4.int_p2.BitonicSearch.java", "BodyUseAPI": [], "Fixed commit": "84d9c30703fc4e6465f2abaf1c2ce713e835c58a", "Url": "https://api.github.com/repos/XiaofanLinUS/coursera_algorithm_p1", "Date": "2017-12-04T22:58:25Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getArguments().getString(TranslateActivity.TRANSLATION).split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((raw.length) != 1) { translation = raw[1]; }else { translation = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5516/buggy-version/src.com.johndaniel.glosar.TranslateHolder.java", "BodyUseAPI": [], "Fixed commit": "03ab1d56377b681babc10a93b313615eae10735a", "Url": "https://api.github.com/repos/JohnTheDaniel/glosar", "Date": "2013-08-19T13:30:07Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getArguments().getString(TranslateActivity.TRANSLATION).split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((raw[0]) != null) { word = raw[0]; }else { word = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5516/buggy-version/src.com.johndaniel.glosar.TranslateHolder.java", "BodyUseAPI": [], "Fixed commit": "03ab1d56377b681babc10a93b313615eae10735a", "Url": "https://api.github.com/repos/JohnTheDaniel/glosar", "Date": "2013-08-19T13:30:07Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((status) == 0) { java.nio.file.Files.move(tempPath, targetPath, java.nio.file.StandardCopyOption.REPLACE_EXISTING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/473/buggy-version/src.main.java.org.unixdiff.UnixPatch.java", "BodyUseAPI": [], "Fixed commit": "fe18b4dea6856706d140a319ac109031a5b00b07", "Url": "https://api.github.com/repos/jdesrosiers/http-server", "Date": "2017-05-16T23:33:39Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((myEnemies[j].getDimensions().top) - (myEnemies[i].getDimensions().bottom)) <= 50) { myEnemies[j].stopMovement(); if ((myEnemies[j].getDimensions().bottom) > ((gGInstance.getScreenHeight()) - 50)) { laneLastSpawnSpace[(myLane - 1)] = ((int) (myEnemies[j].getDimensions().height())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2667/buggy-version/Code.00Driver.app.src.main.java.abyssproductions.double0driver.GameEngine.GameEngine.java", "BodyUseAPI": ["myEnemies[j].stopMovement()", "myEnemies[j].getDimensions()", "myEnemies[j].getDimensions()", "myEnemies[j].getDimensions().height()"], "Fixed commit": "9733de7220cb9a961b18a38441394584651478e0", "Url": "https://api.github.com/repos/MandipSan/00Driver", "Date": "2017-03-02T21:18:57Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((myEnemies[i].getDimensions().top) - (myEnemies[j].getDimensions().bottom)) <= 50) { myEnemies[i].stopMovement(); if ((myEnemies[i].getDimensions().bottom) > ((gGInstance.getScreenHeight()) - 50)) { laneLastSpawnSpace[(myLane - 1)] = ((int) (myEnemies[i].getDimensions().height())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2667/buggy-version/Code.00Driver.app.src.main.java.abyssproductions.double0driver.GameEngine.GameEngine.java", "BodyUseAPI": ["myEnemies[i].getDimensions()", "myEnemies[i].getDimensions().height()", "myEnemies[i].stopMovement()", "myEnemies[i].getDimensions()"], "Fixed commit": "9733de7220cb9a961b18a38441394584651478e0", "Url": "https://api.github.com/repos/MandipSan/00Driver", "Date": "2017-03-02T21:18:57Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPullRequest) == null) { menu.removeItem(R.id.share); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/910/buggy-version/src.com.gh4a.fragment.PullRequestFragment.java", "BodyUseAPI": [], "Fixed commit": "568bc259065298a68a4e8ef4910dc05ec25b1d33", "Url": "https://api.github.com/repos/slapperwan/gh4a", "Date": "2014-09-16T14:23:24Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Arrays.asList(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((wordList.size()) > 0) bw.append(wordList.get(0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4418/buggy-version/edu.usc.cssl.tacit.topicmodel.lda.src.edu.usc.cssl.tacit.topicmodel.lda.services.LdaAnalysis.java", "BodyUseAPI": ["java.io.BufferedWriter.append(java.lang.String)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "e50f9f0aa800cef80779bace62cace0bbe8a2af1", "Url": "https://api.github.com/repos/USC-CSSL/TACIT", "Date": "2015-12-23T00:09:12Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (node != null) { for (pengyifan.heap.FibonacciHeapNode cur : node.nodelist()) { java.lang.String s = new java.lang.String(); for (pengyifan.heap.FibonacciHeapNode p = cur.getParent(); p != null; p = p.getParent()) { s = ((pengyifan.string.StringUtils.BAR) + \" \") + s; } if ((cur.getRight()) != node) { s += (pengyifan.string.StringUtils.MIDDLE) + \" \"; }else { s += (pengyifan.string.StringUtils.END) + \" \"; } sb.append(((s + cur) + \"\\n\")); pengyifan.string.heap.FibonacciHeapString.toStringPreOrder(cur.getChild(), sb); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/882/buggy-version/src.pengyifan.string.heap.FibonacciHeapString.java", "BodyUseAPI": ["pengyifan.heap.FibonacciHeapNode.nodelist()"], "Fixed commit": "9c4b551ee44d7e122d93d0609cb30e07b8374c0f", "Url": "https://api.github.com/repos/yfpeng/java-ds", "Date": "2013-09-21T16:13:15Z"},
{"Line": "=>717", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getInputs().size()) == 0) { rewriteGeneric(p); }else { throw org.apache.calcite.util.Util.newInternal((((\"no '\" + visitMethodName) + \"' method found for class \") + (p.getClass().getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8190/buggy-version/core.src.main.java.org.apache.calcite.sql2rel.RelStructuredTypeFlattener.java", "BodyUseAPI": ["p.getClass().getName()", "org.apache.calcite.rel.RelNode.getClass()", "org.apache.calcite.sql2rel.RelStructuredTypeFlattener.RewriteRelVisitor.rewriteGeneric(org.apache.calcite.rel.RelNode)", "org.apache.calcite.util.Util.newInternal((((\"no '\" + visitMethodName) + \"' method found for class \") + (p.getClass().getName())))"], "Fixed commit": "0f6ccef18c4b311af3aded085e732ba5fb436bd5", "Url": "https://api.github.com/repos/julienledem/calcite", "Date": "2015-11-13T20:13:21Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (tagStr != null) { tags = tagStr.split(\",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6658/buggy-version/src.main.java.org.berlinvegan.generators.Restaurant.java", "BodyUseAPI": [], "Fixed commit": "0f5aed436fd5c711f9f88478ab6ae12bf1afbef9", "Url": "https://api.github.com/repos/smeir/berlin-vegan-tools", "Date": "2013-06-24T12:11:05Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((inventorySlots.size()) != (getSlotsCount())) { throw new java.lang.RuntimeException(((((\"Expected count of slots is \" + (getSlotsCount())) + \", but current number of slots is \") + (inventorySlots.size())) + \".\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8407/buggy-version/src.monnef.core.block.ContainerMonnefCore.java", "BodyUseAPI": [], "Fixed commit": "b8b158f9d8e8f4e690de4f4b7c64abef7c385a87", "Url": "https://api.github.com/repos/mnn/monnefcore", "Date": "2013-10-16T18:10:51Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((listItems.size()) > 9) { adPosition = 3; listItems.add(adPosition, adViewtop); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/993/buggy-version/app.src.main.java.com.rocdev.guardianreader.fragments.ArticlesFragment.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.add(int,com.google.android.gms.ads.NativeExpressAdView)"], "Fixed commit": "ee1dc52d5203c863fd877eb99a578b3d106e76e6", "Url": "https://api.github.com/repos/pieeet/GuardianReader", "Date": "2017-07-06T13:19:40Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connection) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7183/buggy-version/src.main.java.fr.kubithon.kubidibot.AudioBridge.java", "BodyUseAPI": [], "Fixed commit": "ed7d11bc793f8cc6031b6cfae0650b9365566a2b", "Url": "https://api.github.com/repos/Kubithorg/kubidibot", "Date": "2017-05-12T21:13:46Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (myWorld.getSlider().isVisible()) { font.draw(batcher, ((myWorld.getSlider().getValue()) + \"\"), ((myWorld.getSlider().getX()) + 20), myWorld.getSlider().getY()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6390/buggy-version/core.src.com.tp.holdem.GameRenderer.java", "BodyUseAPI": ["com.badlogic.gdx.graphics.g2d.BitmapFont.draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,((myWorld.getSlider().getValue()) + \"\"),((myWorld.getSlider().getX()) + 20),myWorld.getSlider().getY())", "com.tp.holdem.GameWorld.getSlider()", "myWorld.getSlider().getValue()", "myWorld.getSlider().getX()", "myWorld.getSlider().getY()", "com.tp.holdem.GameWorld.getSlider()", "com.tp.holdem.GameWorld.getSlider()"], "Fixed commit": "81a0be7ec76409e6faee9912e427a681a999671f", "Url": "https://api.github.com/repos/xShadov/HoldemTP", "Date": "2015-12-12T15:25:40Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((org.apache.brooklyn.util.text.Strings.isBlank(propCollection)) && (org.apache.brooklyn.util.text.Strings.isBlank(propName))) { throw new java.lang.IllegalStateException(((((((\"Relationship for Requirement \" + (relationshipTemplate.getRequirementName())) + \" on NodeTemplate \") + (nodeTemplate.getName())) + \". Collection Name or Property Name should\") + \" be defined for RelationsType \") + (relationshipTemplate.getType()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8511/buggy-version/brooklyn-tosca-transformer.src.main.java.org.apache.brooklyn.tosca.a4c.brooklyn.ToscaNodeToEntityConverter.java", "BodyUseAPI": [], "Fixed commit": "edb02089ba12f63f72dc9b71996a22ff083a07fd", "Url": "https://api.github.com/repos/tbouron/brooklyn-tosca", "Date": "2015-11-11T10:41:42Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.getName().endsWith(\".jar\")) { aQute.bnd.osgi.Jar jar = new aQute.bnd.osgi.Jar(node.get(\"artifactId\").asText(), file); list.add(jar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6378/buggy-version/wisdom-maven-plugin.src.main.java.org.wisdom.maven.utils.BundlePackager.java", "BodyUseAPI": [], "Fixed commit": "949d60cdd7c72d63c25928952e4ce74ca75954e7", "Url": "https://api.github.com/repos/wisdom-framework/wisdom", "Date": "2014-03-21T11:04:12Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(checkPermissions())) { requestPermissions(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6893/buggy-version/app.src.main.java.com.hetic.hetic_e18_bart.DealsFragment.java", "BodyUseAPI": [], "Fixed commit": "a115457b2feb77097fd0cb3ec05be5b6f3a5fd19", "Url": "https://api.github.com/repos/nothaldir/HETIC-Bart-Project", "Date": "2017-12-22T02:07:28Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.atlas.repository.store.graph.AtlasEntityStore.searchEntities(org.apache.atlas.model.SearchFilter)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (atlasEntities != null) { for (org.apache.atlas.model.instance.AtlasEntity atlasEntity : atlasEntities.getList()) { entityHeaders.getList().add(new org.apache.atlas.model.instance.AtlasEntityHeader(atlasEntity.getTypeName(), atlasEntity.getAttributes())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4213/buggy-version/webapp.src.main.java.org.apache.atlas.web.rest.EntitiesREST.java", "BodyUseAPI": ["AtlasEntity.AtlasEntities.getList()"], "Fixed commit": "c3318467eb3954b7fc6490312bee4ce0d36cf081", "Url": "https://api.github.com/repos/apoorvnaik/incubator-atlas", "Date": "2016-12-25T08:12:35Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.atlas.web.adapters.AtlasStructType.getAttributeType(attrDef.getName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (attrType == null) { org.apache.atlas.web.adapters.AtlasStructFormatConverter.LOG.warn(\"ignored attribute {}.{}: failed to find AtlasType\", structType.getTypeName(), attrDef.getName()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4213/buggy-version/webapp.src.main.java.org.apache.atlas.web.adapters.AtlasStructFormatConverter.java", "BodyUseAPI": [], "Fixed commit": "c3318467eb3954b7fc6490312bee4ce0d36cf081", "Url": "https://api.github.com/repos/apoorvnaik/incubator-atlas", "Date": "2016-12-25T08:12:35Z"},
{"Line": "=>838", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jtermios.windows.JTermiosImpl.getPort(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(GetOverlappedResult(port.m_Comm, port.m_SelOVL, port.m_SelN, false))) { if ((GetLastError()) != (ERROR_IO_INCOMPLETE)) port.fail(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4129/buggy-version/src.jtermios.windows.JTermiosImpl.java", "BodyUseAPI": ["jtermios.windows.JTermiosImpl.Port.fail()"], "Fixed commit": "7bb52d3674b2df886a4b72617d169f627d493ce1", "Url": "https://api.github.com/repos/mattharris/purejavacomm", "Date": "2016-05-22T04:27:23Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.codehaus.plexus.util.StringUtils.isNotEmpty(versionString)) { resultVersion = mainVersion; }else { resultVersion = (mainVersion + \"-\") + versionString; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8055/buggy-version/external-version-strategies.src.main.java.org.apache.maven.version.strategy.ScriptStrategy.java", "BodyUseAPI": [], "Fixed commit": "932462eb83b700be5415f53c9fecde8ef3a59cb1", "Url": "https://api.github.com/repos/FirstFuel/maven-external-version", "Date": "2016-12-15T11:45:15Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((subTimers.get(org.vanilladb.core.util.Timer.EXE_TIME_KEY)) != null) sb.append(java.lang.String.format(\"%-40s: %d us\\n\", org.vanilladb.core.util.Timer.EXE_TIME_KEY, subTimers.get(org.vanilladb.core.util.Timer.EXE_TIME_KEY).getTotalTime()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7173/buggy-version/src.main.java.org.vanilladb.core.util.Timer.java", "BodyUseAPI": ["java.util.Map<java.lang.Object, org.vanilladb.core.util.Timer.SubTimer>.get(java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String,long)", "org.vanilladb.core.util.Timer.SubTimer.getTotalTime()", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "c04b71f8506590b3e6c74d71369409ec3deb19e1", "Url": "https://api.github.com/repos/vanilladb/vanillacore", "Date": "2017-08-08T07:48:40Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (newValue == null) { content += (\" <b>REMOVED</b><i> \" + (oldValue.getUsername())) + \"</i><br />\"; }else { content += (((\" <b>FROM</b><i> \" + (oldValue.getUsername())) + \" </i><b>TO</b><i> \") + (newValue.getUsername())) + \"</i><br />\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7866/buggy-version/DefectTracker.src.edu.wpi.cs.wpisuitetng.modules.defecttracker.defect.DefectChangesetPanel.java", "BodyUseAPI": [], "Fixed commit": "c71af02ed022e8a2a6329e578e599649dc2074bc", "Url": "https://api.github.com/repos/fracture91/wpi-suite-tng", "Date": "2013-01-23T01:32:29Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mondrian.spi.impl.JdbcStatisticsProvider.LOG.isDebugEnabled()) { mondrian.spi.impl.JdbcStatisticsProvider.LOG.debug((\"JdbcStatisticsProvider failed to get the cardinality of the table \" + table), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5788/buggy-version/src.main.mondrian.spi.impl.JdbcStatisticsProvider.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String,java.sql.SQLException)"], "Fixed commit": "6507fc0dec736987a462f555e30e53b86b6889fb", "Url": "https://api.github.com/repos/pentaho/mondrian", "Date": "2012-07-26T13:54:38Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (menuLoad.isInside(x, y)) { return START_MENU_DIALOG_RESULT.LOAD_GAME; }else if (menuQuit.isInside(x, y)) { return START_MENU_DIALOG_RESULT.QUIT_GAME; }else { return START_MENU_DIALOG_RESULT.NOTHING_CLICKED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8981/buggy-version/src.main.java.com.lordstephen77.dreamblocks.ui.StartMenu.java", "BodyUseAPI": ["com.lordstephen77.dreamblocks.ui.Button.isInside(int,int)"], "Fixed commit": "11417eeeb933672ae2763a7ec1f1de3bb052341d", "Url": "https://api.github.com/repos/LordStephen77/DreamBlocks", "Date": "2017-06-27T17:58:49Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getSource()) instanceof com.google.gwt.user.client.ui.FocusWidget) { com.google.gwt.user.client.ui.FocusWidget widget = ((com.google.gwt.user.client.ui.FocusWidget) (event.getSource())); if (((widget.getElement()) != null) && ((widget.getElement().getId()) != null)) { this.usedWidgetsCodes.add(widget.getElement().getId()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4944/buggy-version/src.com.aacdil.municipality.client.MunicipalityInfrastructureService.java", "BodyUseAPI": ["com.google.gwt.event.dom.client.BlurEvent.getSource()"], "Fixed commit": "44f460837a72630bbdeb923b363105295483f23a", "Url": "https://api.github.com/repos/ivailo-pashov/MunicipalityInfrastructureService", "Date": "2014-05-19T19:15:51Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((unicode & 65535) == 65534) { char[] c = new char[]{ 65534 }; return new java.lang.String(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1278/buggy-version/src.main.java.org.verapdf.pd.font.cmap.ToUnicodeInterval.java", "BodyUseAPI": [], "Fixed commit": "e9e24c12bd0e2239d2e0ba6c076cf22395799f6b", "Url": "https://api.github.com/repos/shem-sergey/veraPDF-pdflib", "Date": "2017-08-03T12:21:28Z"},
{"Line": "=>7105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((pickInstance.result) == (-1)) && ((values.length) > 0)) { pickInstance.result = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3163/buggy-version/Ports.Android.src.com.codename1.impl.android.AndroidImplementation.java", "BodyUseAPI": [], "Fixed commit": "5186ff4355ed79130979d1b70d96d5283bd0e0dd", "Url": "https://api.github.com/repos/ThomasH99/CodenameOne", "Date": "2017-04-11T17:13:07Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((element instanceof au.gov.ga.earthsci.catalog.LoadingCatalogTreeNode) || (element instanceof au.gov.ga.earthsci.catalog.ErrorCatalogTreeNode)) { return node.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7816/buggy-version/plugins.au.gov.ga.earthsci.catalog.ui.src.au.gov.ga.earthsci.catalog.ui.CatalogTreeLabelProvider.java", "BodyUseAPI": [], "Fixed commit": "ddfb9d871bffc39bb642f30fa21e59f7b2105d83", "Url": "https://api.github.com/repos/ga-m3dv/ga-earthsci-rcp", "Date": "2013-04-02T02:57:43Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diff > 172800000) { javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), \"You cannot book a car for more than 2 days! Please choose a another return time before.\", \"Inane error\", javax.swing.JOptionPane.ERROR_MESSAGE); }else if (currTime > (ReturnTimeDate.getTime())) { javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), \"You cannot book a car before current time! Please choose a another return time in the future.\", \"Inane error\", javax.swing.JOptionPane.ERROR_MESSAGE); }else if (currTime > (PickUpTimeDate.getTime())) { javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), \"You cannot book a car for more than 2 days! Please choose a another return time before.\", \"Inane error\", javax.swing.JOptionPane.ERROR_MESSAGE); }else { locationString = ((java.lang.String) (LocationCombo.getSelectedItem())); carTypeString = ((java.lang.String) (CarTypesCombo.getSelectedItem())); carModelString = ((java.lang.String) (CarsCombo.getSelectedItem())); java.lang.String statement = \"SELECT Model_Name, Car_Type, Location_Name, \" + (((\"Color, Hourly_Rate, Daily_Rate, Seating_Cap, Transmission_Type, Bluetooth, \" + \"Auxiliary_Cable, Estimated_Cost, Vehicle_Sno FROM Car NATURAL JOIN Reservation WHERE Car_Type = ? \") + \"AND Model_Name = ? AND Car.Location_Name = ? AND \") + \"? > ?\"); java.sql.Connection conn = rentalcar.RentCarPanel.connection.createConnection(); java.lang.Object[][] rowDataArr = null; int rowcount = 0; try { java.sql.PreparedStatement prep = conn.prepareStatement(statement); prep.setString(1, carTypeString); prep.setString(2, carModelString); prep.setString(3, locationString); prep.setDate(4, PickUpTimeDate); prep.setDate(5, ReturnTimeDate); com.mysql.jdbc.ResultSet rsCarAvailability = ((com.mysql.jdbc.ResultSet) (prep.executeQuery())); if (rsCarAvailability.last()) { rowcount = rsCarAvailability.getRow(); rsCarAvailability.beforeFirst(); } rowDataArr = new java.lang.Object[rowcount][15]; rowcount = 0; int i = 0; while (rsCarAvailability.next()) { rowDataArr[i][0] = rsCarAvailability.getString(\"Model_Name\"); rowDataArr[i][1] = rsCarAvailability.getString(\"Car_Type\"); rowDataArr[i][2] = rsCarAvailability.getString(\"Location_Name\"); rowDataArr[i][3] = rsCarAvailability.getString(\"Color\"); rowDataArr[i][4] = rsCarAvailability.getString(\"Hourly_Rate\"); rowDataArr[i][7] = rsCarAvailability.getString(\"Daily_Rate\"); rowDataArr[i][8] = rsCarAvailability.getString(\"Seating_Cap\"); rowDataArr[i][9] = rsCarAvailability.getString(\"Transmission_Type\"); rowDataArr[i][10] = rsCarAvailability.getString(\"Bluetooth\"); rowDataArr[i][11] = rsCarAvailability.getString(\"Auxiliary_Cable\"); rowDataArr[i][13] = rsCarAvailability.getString(\"Estimated_Cost\"); rowDataArr[i][14] = new javax.swing.JRadioButton(); VehicleNumber = rsCarAvailability.getString(\"Vehicle_Sno\"); i++; } prep.close(); rentalcar.RentCarPanel.connection.closeConnection(conn); } catch (java.sql.SQLException e) { e.printStackTrace(); rentalcar.RentCarPanel.connection.closeConnection(conn); } java.lang.String statement1 = \"SELECT Pick_Up_Date_Time AS Available_till, \" + ((\"FROM Car NATURAL JOIN Reservation WHERE Car_Type = ? AND \" + \"Model_Name = ? AND Car.Location_Name = ? AND \") + \"? > ?\"); try { java.sql.PreparedStatement prep1 = conn.prepareStatement(statement1); prep1.setString(1, carTypeString); prep1.setString(2, carModelString); prep1.setString(3, locationString); prep1.setDate(4, PickUpTimeDate); prep1.setDate(5, ReturnTimeDate); com.mysql.jdbc.ResultSet rsCarAvailableTill = ((com.mysql.jdbc.ResultSet) (prep1.executeQuery())); if (rsCarAvailableTill.last()) { rowcount = rsCarAvailableTill.getRow(); rsCarAvailableTill.beforeFirst(); } int j = 0; while (rsCarAvailableTill.next()) { rowDataArr[j][12] = rsCarAvailableTill.getString(\"Available_till\"); j++; } prep1.close(); rentalcar.RentCarPanel.connection.closeConnection(conn); } catch (java.sql.SQLException e) { rentalcar.RentCarPanel.connection.closeConnection(conn); } java.lang.String statement2 = \"CREATE VIEW DISCOUNTED AS \" + (((\"SELECT f.Discount AS Frequent_DRate, d.Discount as Daily_DRate \" + \"FROM Driving_Plan AS f, Driving_Plan AS d WHERE \") + \"f.Plan_Type = \\\"Frequent Driving\\\" AND \") + \"d.Plan_Type = \\\"Daily Driving\\\"\"); try { java.sql.PreparedStatement prep2 = conn.prepareStatement(statement2); com.mysql.jdbc.ResultSet rsDiscountedRate = ((com.mysql.jdbc.ResultSet) (prep2.executeQuery())); if (rsDiscountedRate.last()) { rowcount = rsDiscountedRate.getRow(); rsDiscountedRate.beforeFirst(); } int j = 0; while (rsDiscountedRate.next()) { rowDataArr[j][5] = rsDiscountedRate.getString(\"Frequent_DRate\"); rowDataArr[j][6] = rsDiscountedRate.getString(\"Daily_DRate\"); j++; } prep2.close(); rentalcar.RentCarPanel.connection.closeConnection(conn); } catch (java.sql.SQLException e) { rentalcar.RentCarPanel.connection.closeConnection(conn); } if (rowcount == 0) { javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), \"No Car Available For these Times. Please enter a new pick up time or return time!\", \"Inane error\", javax.swing.JOptionPane.ERROR_MESSAGE); }else { java.util.ArrayList<java.lang.Object> tempArr = new java.util.ArrayList<java.lang.Object>(); tempArr.add(PickUpTimeDate); tempArr.add(ReturnTimeDate); tempArr.add(VehicleNumber); tempArr.add(locationString); rentalcar.CarAvailPanel panel = new rentalcar.CarAvailPanel(member, rowDataArr, rowcount, tempArr); mainFrame.setContentPane(panel); mainFrame.setBounds(mainFrame.getContentPane().getBounds()); mainFrame.setVisible(true); mainFrame.repaint(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4989/buggy-version/src.rentalcar.RentCarPanel.java", "BodyUseAPI": [], "Fixed commit": "2eceecf04b3228bc9234f93dc0e914917bc9d8ce", "Url": "https://api.github.com/repos/rlobo3/GTCarRentalDBProj", "Date": "2013-04-25T07:05:34Z"},
{"Line": "=>1687", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getTag()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (item == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8320/buggy-version/app.src.main.java.com.kkk8888.bdosimulator.EnchantFirst.java", "BodyUseAPI": [], "Fixed commit": "d90d441919950ab55762e6dc9b1a824cf02bef7a", "Url": "https://api.github.com/repos/rhtodtjs/BDOSimulator", "Date": "2017-09-12T08:08:29Z"},
{"Line": "=>1693", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((enchantGrade) != null) enchantGrade.setText(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8320/buggy-version/app.src.main.java.com.kkk8888.bdosimulator.EnchantFirst.java", "BodyUseAPI": [], "Fixed commit": "d90d441919950ab55762e6dc9b1a824cf02bef7a", "Url": "https://api.github.com/repos/rhtodtjs/BDOSimulator", "Date": "2017-09-12T08:08:29Z"},
{"Line": "=>657", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((argand_b) < 0) { font.draw(game.batch, (((((((\"z=(\" + (double_formatted(posn_x))) + (double_formatted_prepl(posn_y))) + \"i) x (\") + (argand_a)) + \"\") + (argand_b)) + \"i)\"), 30, 455); }else { font.draw(game.batch, (((((((\"z=(\" + (double_formatted(posn_x))) + (double_formatted_prepl(posn_y))) + \"i) x (\") + (argand_a)) + \"+\") + (argand_b)) + \"i)\"), 30, 455); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6864/buggy-version/core.src.com.hbp.pointdef.BookScreen_2.java", "BodyUseAPI": ["com.badlogic.gdx.graphics.g2d.BitmapFont.draw(game.batch,java.lang.String,int,int)", "com.badlogic.gdx.graphics.g2d.BitmapFont.draw(game.batch,java.lang.String,int,int)"], "Fixed commit": "defdd2eb550c25711f868187a7b46f6284b3cd3b", "Url": "https://api.github.com/repos/H-B-P/pointdef", "Date": "2016-07-06T17:47:49Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.map) == null) { this.map = new java.util.HashMap<java.lang.String, java.lang.Object>(4); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/328/buggy-version/src.org.maxgamer.rs.structure.configs.ConfigSection.java", "BodyUseAPI": [], "Fixed commit": "07e6d95c6bc86621e653c4052efd1660d24349a2", "Url": "https://api.github.com/repos/netherfoam/Titan", "Date": "2015-12-09T12:53:02Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.map) == null) { this.map = new java.util.HashMap<java.lang.String, java.lang.Object>(4); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/328/buggy-version/src.org.maxgamer.rs.structure.configs.ConfigSection.java", "BodyUseAPI": [], "Fixed commit": "07e6d95c6bc86621e653c4052efd1660d24349a2", "Url": "https://api.github.com/repos/netherfoam/Titan", "Date": "2015-12-09T12:53:02Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.map) == null) { this.map = new java.util.HashMap<java.lang.String, java.lang.Object>(4); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/328/buggy-version/src.org.maxgamer.rs.structure.configs.ConfigSection.java", "BodyUseAPI": [], "Fixed commit": "07e6d95c6bc86621e653c4052efd1660d24349a2", "Url": "https://api.github.com/repos/netherfoam/Titan", "Date": "2015-12-09T12:53:02Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["forestry.core.fluids.FluidHelper.getFluidStackInContainer(net.minecraft.item.ItemStack)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (input == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5749/buggy-version/src.main.java.forestry.factory.tiles.TileBottler.java", "BodyUseAPI": [], "Fixed commit": "08812ae5eadc11b360c9df4492265dec4a17d6e9", "Url": "https://api.github.com/repos/ForestryMC/ForestryMC", "Date": "2015-11-04T05:41:59Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.ndrei.teslacorelib.compatibility.ItemStackUtil.isEmpty(stack)) || ((stack.getItem()) != (net.minecraft.init.Items.SHEARS))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/771/buggy-version/src.main.java.mekfarm.machines.wrappers.animals.VanillaGenericAnimal.java", "BodyUseAPI": [], "Fixed commit": "11c0e8cdc0a0809eb379f630f10d00f7ac145f44", "Url": "https://api.github.com/repos/faceofcat/Mekfarm", "Date": "2017-04-19T14:31:54Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(chunk.getWorld().isChunkLoaded(chunk))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/196/buggy-version/src.main.java.com.sk89q.craftbook.core.st.SelfTriggeringManager.java", "BodyUseAPI": [], "Fixed commit": "e542434940a7ea3c376010468f6b0ce4596feb7c", "Url": "https://api.github.com/repos/EngineHub/CraftBook", "Date": "2016-07-19T07:19:22Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(vmServiceModule.isLoading())) { if (!(isDirectChild(vmServiceModule))) { addChildNode(vmServiceModule); } vmServiceModule.load(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2757/buggy-version/src.android.com.microsoftopentechnologies.intellij.serviceexplorer.azure.AzureServiceModule.java", "BodyUseAPI": ["com.microsoftopentechnologies.intellij.serviceexplorer.azure.vm.VMServiceModule.load()", "com.microsoftopentechnologies.intellij.serviceexplorer.azure.AzureServiceModule.isDirectChild(com.microsoftopentechnologies.intellij.serviceexplorer.azure.vm.VMServiceModule)", "com.microsoftopentechnologies.intellij.serviceexplorer.azure.AzureServiceModule.addChildNode(com.microsoftopentechnologies.intellij.serviceexplorer.azure.vm.VMServiceModule)"], "Fixed commit": "6e11f2622c16f9300e9f0de2e519eaea8b6fbf6d", "Url": "https://api.github.com/repos/leotilli/msopentech-tools-for-intellij", "Date": "2015-02-26T19:50:25Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mobileServiceModule.isLoading())) { if (!(isDirectChild(mobileServiceModule))) { addChildNode(mobileServiceModule); } mobileServiceModule.load(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2757/buggy-version/src.android.com.microsoftopentechnologies.intellij.serviceexplorer.azure.AzureServiceModule.java", "BodyUseAPI": ["com.microsoftopentechnologies.intellij.serviceexplorer.azure.AzureServiceModule.addChildNode(com.microsoftopentechnologies.intellij.serviceexplorer.azure.mobileservice.MobileServiceModule)", "com.microsoftopentechnologies.intellij.serviceexplorer.azure.AzureServiceModule.isDirectChild(com.microsoftopentechnologies.intellij.serviceexplorer.azure.mobileservice.MobileServiceModule)", "com.microsoftopentechnologies.intellij.serviceexplorer.azure.mobileservice.MobileServiceModule.load()"], "Fixed commit": "6e11f2622c16f9300e9f0de2e519eaea8b6fbf6d", "Url": "https://api.github.com/repos/leotilli/msopentech-tools-for-intellij", "Date": "2015-02-26T19:50:25Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["loci.common.IniList.getTable(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (microscopeTable != null) { java.lang.String objective = microscopeTable.get(\"Objective\"); int space = objective.indexOf(\" \"); if (space != (-1)) { magnification = new java.lang.Double(objective.substring(0, (space - 1))); immersion = objective.substring((space + 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1266/buggy-version/components.formats-gpl.src.loci.formats.in.SimplePCITiffReader.java", "BodyUseAPI": ["loci.common.IniTable.get(java.lang.String)"], "Fixed commit": "bc457721fd02daaae0474e31f2065699f7d51274", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-05-25T14:20:36Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<T>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (n <= 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3887/buggy-version/src.infoadminsys.util.AdminUtil.java", "BodyUseAPI": [], "Fixed commit": "13fcd48d58fe56c3826c80fb08fcc3e4b66a9929", "Url": "https://api.github.com/repos/SHiftLin/InfoAdminSys", "Date": "2017-05-05T12:10:12Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends hubberts.codejam.CodeJamProblem>.getSimpleName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(className.endsWith(\"Problem\"))) { throw new java.lang.IllegalArgumentException((((\"Class \" + className) + \" does not follow the standard naming \") + \"convention, you must override getProblem().\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7777/buggy-version/src.hubberts.codejam.CodeJamProblem.java", "BodyUseAPI": [], "Fixed commit": "2a9d15644ecaed14eb6bf43ee040beff77b7ea91", "Url": "https://api.github.com/repos/jhubberts/GoogleCodeJamJava", "Date": "2015-04-02T05:14:22Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (processingError) { if (strictMode) { org.easybatch.core.impl.Engine.LOGGER.info(org.easybatch.core.impl.Engine.STRICT_MODE_MESSAGE); report.setStatus(Status.ABORTED); break; } }else { report.addSuccessRecord(currentRecordNumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5914/buggy-version/easybatch-core.src.main.java.org.easybatch.core.impl.Engine.java", "BodyUseAPI": [], "Fixed commit": "450caf862b601e44b2b54bc147ae3e81f375b4be", "Url": "https://api.github.com/repos/j-easy/easy-batch", "Date": "2015-01-27T21:53:44Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.tags.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3029/buggy-version/src.main.java.com.sangupta.shire.model.Page.java", "BodyUseAPI": [], "Fixed commit": "92dd1c22083592145c3a9316acdd452548e62f5f", "Url": "https://api.github.com/repos/sangupta/shire", "Date": "2012-06-28T18:17:05Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.categories.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3029/buggy-version/src.main.java.com.sangupta.shire.model.Page.java", "BodyUseAPI": [], "Fixed commit": "92dd1c22083592145c3a9316acdd452548e62f5f", "Url": "https://api.github.com/repos/sangupta/shire", "Date": "2012-06-28T18:17:05Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!include) { int needed = (targetDocumentCount) - (target.getDocumentCount()); if (needed > 0) { int remaining = (source.getDocumentCount()) - (sourceDocsSeen); if (needed < remaining) { include = (java.lang.Math.random()) < (((double) (needed)) / remaining); }else { include = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8149/buggy-version/src.main.java.com.bronzespear.hdpa.corpus.utils.CorpusShrinker.java", "BodyUseAPI": [], "Fixed commit": "b6238ba2d84d319e36fcae87080ab20caffe9be8", "Url": "https://api.github.com/repos/jesterhazy/hdpa", "Date": "2013-03-08T06:06:04Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (svdRecommender != null) { putRecommender(svdRecommender, name); putTrainer(new org.plista.kornakapi.web.servlets.FactorizationbasedInMemoryTrainer(factorizationbasedConf), factorizationbasedConf, name, label); org.plista.kornakapi.web.servlets.BigBangServletContextListener.log.info(\"Created FactorizationBasedRecommender [{}] using [{}] features and [{}] iterations\", new java.lang.Object[]{ name, factorizationbasedConf.getNumberOfFeatures(), factorizationbasedConf.getNumberOfIterations() }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6419/buggy-version/src.main.java.org.plista.kornakapi.web.servlets.BigBangServletContextListener.java", "BodyUseAPI": ["org.plista.kornakapi.web.servlets.BigBangServletContextListener.putRecommender(org.plista.kornakapi.core.recommender.FoldingFactorizationBasedRecommender,java.lang.String)"], "Fixed commit": "e7147de16928228d4068707770fe5ff49de3a6b9", "Url": "https://api.github.com/repos/KukumavMozolo/kornakapi", "Date": "2015-06-11T11:39:14Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mskcc.cbio.oncokb.util.Evidence.getShortDescription()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mutationSummary == null) { mutationSummary = ev.getDescription(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3341/buggy-version/core.src.main.java.org.mskcc.cbio.oncokb.util.SummaryUtils.java", "BodyUseAPI": [], "Fixed commit": "200c244b0499a77112d7781d849d4fa2956b7abc", "Url": "https://api.github.com/repos/zhx828/oncokb", "Date": "2015-09-10T20:24:16Z"},
{"Line": "=>734", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((SubscriptionList.size()) < 1) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5446/buggy-version/CloudGameReport.src.java.com.cloudgamereport.DAO.QuestionDAO.java", "BodyUseAPI": [], "Fixed commit": "3583047eb3ad151be0a5a6ca71557a58cb63c1a6", "Url": "https://api.github.com/repos/sbvb/CloudEducationGameReport", "Date": "2015-03-21T18:45:02Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (asmEnable) { com.alibaba.fastjson.util.DeserializeBeanInfo beanInfo = com.alibaba.fastjson.util.DeserializeBeanInfo.computeSetters(clazz); for (com.alibaba.fastjson.util.FieldInfo fieldInfo : beanInfo.getFieldList()) { if (!(java.lang.reflect.Modifier.isPublic(fieldInfo.getFieldClass().getModifiers()))) { asmEnable = false; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6497/buggy-version/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java", "BodyUseAPI": [], "Fixed commit": "e62160fb6f8515ba521e64e74b009586a9cb84fe", "Url": "https://api.github.com/repos/AlibabaTech/fastjson", "Date": "2011-11-18T02:17:17Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (asmEnable && (!(java.lang.reflect.Modifier.isPublic(clazz.getModifiers())))) { asmEnable = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6497/buggy-version/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java", "BodyUseAPI": [], "Fixed commit": "e62160fb6f8515ba521e64e74b009586a9cb84fe", "Url": "https://api.github.com/repos/AlibabaTech/fastjson", "Date": "2011-11-18T02:17:17Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((null != (room.getDataHandler())) && (null != (room.getDataHandler().getBingRulesManager()))) { if (room.getDataHandler().getBingRulesManager().isRoomMentionOnly(room.getRoomId())) { badgeCount += room.getHighlightCount(); }else { badgeCount += room.getNotificationCount(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8535/buggy-version/vector.src.main.java.im.vector.adapters.HomeRoomAdapter.java", "BodyUseAPI": ["room.getDataHandler().getBingRulesManager().isRoomMentionOnly(room.getRoomId())", "org.matrix.androidsdk.data.Room.getDataHandler()", "room.getDataHandler().getBingRulesManager()", "org.matrix.androidsdk.data.Room.getHighlightCount()", "org.matrix.androidsdk.data.Room.getRoomId()", "org.matrix.androidsdk.data.Room.getNotificationCount()"], "Fixed commit": "7ddcf808986918637edc4137ff9b0f4a465f491c", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2017-06-20T07:48:27Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(recordingFileName)) { ringtone.play(); }else { soundLogic.playSoundByFileName(recordingFileName, new android.media.MediaPlayer.OnCompletionListener() { @java.lang.Override public void onCompletion(android.media.MediaPlayer mediaPlayer) { ringtone.play(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2301/buggy-version/app.src.main.java.cs371m.alarming.MainActivity.java", "BodyUseAPI": ["cs371.record_sound_logic.SoundLogic.playSoundByFileName(java.lang.String,android.media.MediaPlayer.OnCompletionListener)"], "Fixed commit": "88d414ff0aa8aeb7e7696ea409e59e8c319e5dca", "Url": "https://api.github.com/repos/lock14/alarming", "Date": "2017-08-03T02:08:05Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tabManager.getCurrentTabGroup().getCurrentTab().getTitle()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(title))) { sendIntent.putExtra(Intent.EXTRA_SUBJECT, title); url = (title + \"\\n\") + url; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/615/buggy-version/app.src.main.java.peter.util.searcher.activity.MainActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(Intent.EXTRA_SUBJECT,java.lang.String)"], "Fixed commit": "a01aa9bcc47370e7bb627bfc2d6880783d1eb539", "Url": "https://api.github.com/repos/javalive09/Searcher", "Date": "2017-09-26T02:15:39Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.primefaces.extensions.optimizerplugin.AbstractOptimizer.getOutputFile(org.primefaces.extensions.optimizerplugin.ResourcesSetAdapter)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (delimeters && ((outputFile.length()) > 0)) { com.google.common.io.Files.append(\";\", outputFile, cset); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7359/buggy-version/src.main.java.org.primefaces.extensions.optimizerplugin.AbstractOptimizer.java", "BodyUseAPI": ["com.google.common.io.Files.append(java.lang.String,java.io.File,java.nio.charset.Charset)"], "Fixed commit": "dcbea89d190deab63b70a5223a7f880b0bc0ff67", "Url": "https://api.github.com/repos/primefaces-extensions/resources-optimizer-maven-plugin", "Date": "2011-12-28T19:12:17Z"},
{"Line": "=>3601", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((key.equals(\"Content-Length\")) && (((java.net.URLConnection) (connection)).getDoOutput())) && (connection instanceof java.net.HttpURLConnection)) { ((java.net.HttpURLConnection) (connection)).setChunkedStreamingMode(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4443/buggy-version/Ports.Android.src.com.codename1.impl.android.AndroidImplementation.java", "BodyUseAPI": [], "Fixed commit": "fea583ed6ba6676040a8b7c1cff5369e41a01312", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2015-06-09T19:54:42Z"},
{"Line": "=>5274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((key.equals(\"Content-Length\")) && (con.getDoOutput())) { con.setChunkedStreamingMode(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4443/buggy-version/Ports.JavaSE.src.com.codename1.impl.javase.JavaSEPort.java", "BodyUseAPI": ["java.net.HttpURLConnection.setChunkedStreamingMode(int)"], "Fixed commit": "fea583ed6ba6676040a8b7c1cff5369e41a01312", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2015-06-09T19:54:42Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (resUrl == null) throw new java.io.FileNotFoundException(((\"No such file: \" + (u.getHost())) + (u.getPath())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3734/buggy-version/src.main.java.io.antielectron.framework.connection.ClasspathStreamHandler.java", "BodyUseAPI": [], "Fixed commit": "a5dbd6848f23aa0c794208d339e515ce64a60c15", "Url": "https://api.github.com/repos/anti-electron/positron", "Date": "2016-11-25T02:08:07Z"},
{"Line": "=>1429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (setEnabled) { enableAll(fileOverrides); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8933/buggy-version/Magic.src.main.java.com.elmakers.mine.bukkit.magic.MagicController.java", "BodyUseAPI": [], "Fixed commit": "0f96479ba1dc1a77d410bf0c38ac5bded2382b24", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2017-03-02T00:03:21Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue()) != null) { setText(entry.getValue().toString()); }else { setText(\"null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8260/buggy-version/app.src.main.java.net.demilich.metastone.gui.sandboxmode.EntityEditor.java", "BodyUseAPI": ["net.demilich.metastone.gui.sandboxmode.GameTagEntry.getValue()", "net.demilich.metastone.gui.sandboxmode.EntityEditor.PairValueCell.setText(entry.getValue().toString())", "entry.getValue().toString()"], "Fixed commit": "3c781d4ca3338e506f4f5280894250ad3f61ad98", "Url": "https://api.github.com/repos/webadict/metastone", "Date": "2017-03-29T01:08:13Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (activity != null) { com.google.android.gms.analytics.Tracker tracker = io.evercam.androidapp.EvercamPlayApplication.getAppTracker(activity); tracker.send(new com.google.android.gms.analytics.HitBuilders.ExceptionBuilder().setDescription(e.getStackTrace()[0].toString().replace(\"io.evercam.androidapp\", e.toString())).setFatal(false).build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3048/buggy-version/evercamPlay.src.main.java.io.evercam.androidapp.EvercamPlayApplication.java", "BodyUseAPI": ["io.evercam.androidapp.EvercamPlayApplication.getAppTracker(android.app.Activity)"], "Fixed commit": "5230025b03e061ecbfb0878a02f5d3540ba6d957", "Url": "https://api.github.com/repos/evercam/evercam-android", "Date": "2016-04-01T08:34:34Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (activity != null) { com.google.android.gms.analytics.Tracker tracker = io.evercam.androidapp.EvercamPlayApplication.getAppTracker(activity); tracker.send(new com.google.android.gms.analytics.HitBuilders.EventBuilder().setCategory(activity.getString(cateory)).setAction(activity.getString(action)).setLabel(activity.getString(label)).build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3048/buggy-version/evercamPlay.src.main.java.io.evercam.androidapp.EvercamPlayApplication.java", "BodyUseAPI": ["new com.google.android.gms.analytics.HitBuilders.EventBuilder().setCategory(activity.getString(cateory)).setAction(activity.getString(action)).setLabel(activity.getString(label)).build()", "com.google.android.gms.analytics.HitBuilders.EventBuilder.setCategory(activity.getString(cateory))", "android.app.Activity.getString(int)", "new com.google.android.gms.analytics.HitBuilders.EventBuilder().setCategory(activity.getString(cateory)).setAction(activity.getString(action)).setLabel(activity.getString(label))", "com.google.android.gms.analytics.Tracker.send(new com.google.android.gms.analytics.HitBuilders.EventBuilder().setCategory(activity.getString(cateory)).setAction(activity.getString(action)).setLabel(activity.getString(label)).build())", "new com.google.android.gms.analytics.HitBuilders.EventBuilder().setCategory(activity.getString(cateory)).setAction(activity.getString(action))", "io.evercam.androidapp.EvercamPlayApplication.getAppTracker(android.app.Activity)", "android.app.Activity.getString(int)", "android.app.Activity.getString(int)"], "Fixed commit": "5230025b03e061ecbfb0878a02f5d3540ba6d957", "Url": "https://api.github.com/repos/evercam/evercam-android", "Date": "2016-04-01T08:34:34Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (activity != null) { com.google.android.gms.analytics.Tracker tracker = io.evercam.androidapp.EvercamPlayApplication.getAppTracker(activity); tracker.send(new com.google.android.gms.analytics.HitBuilders.ExceptionBuilder().setDescription(message).setFatal(true).build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3048/buggy-version/evercamPlay.src.main.java.io.evercam.androidapp.EvercamPlayApplication.java", "BodyUseAPI": ["io.evercam.androidapp.EvercamPlayApplication.getAppTracker(android.app.Activity)"], "Fixed commit": "5230025b03e061ecbfb0878a02f5d3540ba6d957", "Url": "https://api.github.com/repos/evercam/evercam-android", "Date": "2016-04-01T08:34:34Z"},
{"Line": "=>3653", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (listener != null) { listener.nodeMoved(oldNodeId, newNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8999/buggy-version/src.org.exist.xquery.XQueryContext.java", "BodyUseAPI": ["org.exist.storage.UpdateListener.nodeMoved(org.exist.numbering.NodeId,org.exist.dom.persistent.NodeHandle)"], "Fixed commit": "4423029f9c1da8d219b3de745f0ca8960811a203", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2015-12-08T13:22:12Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(player.capabilities.isCreativeMode)) { if (((uncraftIn.getStackInSlot(0).getItem().getItemEnchantability()) > 0) && ((org.jglrxavpok.mods.decraft.common.config.ModConfiguration.uncraftMethod) == 1)) { org.jglrxavpok.mods.decraft.ItemStack s1 = uncraftIn.getStackInSlot(0); int percent = ((int) ((((double) (s1.getItemDamage())) / ((double) (s1.getMaxDamage()))) * 100)); uncraftingCost = ((org.jglrxavpok.mods.decraft.common.config.ModConfiguration.maxUsedLevel) * percent) / 100; } if ((lvl < ((org.jglrxavpok.mods.decraft.common.config.ModConfiguration.standardLevel) + (uncraftingCost))) && (!(player.capabilities.isCreativeMode))) { uncraftingStatus = org.jglrxavpok.mods.decraft.ContainerUncraftingTable.UncraftingStatus.ERROR; uncraftingStatusText = org.jglrxavpok.mods.decraft.I18n.format(\"uncrafting.result.needMoreXP\"); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6266/buggy-version/src.main.java.org.jglrxavpok.mods.decraft.ContainerUncraftingTable.java", "BodyUseAPI": [], "Fixed commit": "c3b7e4a4be1c46281c9b73dd04abb4b288103e26", "Url": "https://api.github.com/repos/crazysnailboy/UncraftingTable", "Date": "2016-12-16T21:15:18Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONArray.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dstObj == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/9118/buggy-version/zorka-agent.src.main.java.com.jitlogic.zorka.agent.zabbix.ZabbixLib.java", "BodyUseAPI": [], "Fixed commit": "245e6605b26271105955a313dc50a568ef49d647", "Url": "https://api.github.com/repos/jitlogic/zorka", "Date": "2012-09-01T08:00:33Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.umn.biomedicus.modification.ContextCues.search(java.util.List<edu.umn.biomedicus.common.labels.Label<edu.umn.biomedicus.common.types.text.TermToken>>,edu.umn.biomedicus.common.labels.Labels<edu.umn.biomedicus.common.types.syntax.PartOfSpeech>,java.util.List<java.util.List<java.lang.String>>,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (search != null) { java.util.Collections.reverse(search); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5404/buggy-version/biomedicus-core.src.main.java.edu.umn.biomedicus.modification.ContextCues.java", "BodyUseAPI": ["java.util.Collections.reverse(java.util.List<edu.umn.biomedicus.common.labels.Label<edu.umn.biomedicus.common.types.text.TermToken>>)"], "Fixed commit": "556d8116a86cf660f30652f22c13d6ffc5988c8c", "Url": "https://api.github.com/repos/nlpie/biomedicus", "Date": "2016-10-10T14:34:20Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((x > 0) && (y > 0)) { dstBmp = android.graphics.Bitmap.createBitmap(srcBmp, x, y, reqWidth, reqHeight); }else { dstBmp = android.media.ThumbnailUtils.extractThumbnail(srcBmp, reqWidth, reqHeight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8596/buggy-version/src.it.feio.android.omninotes.utils.BitmapHelper.java", "BodyUseAPI": ["android.graphics.Bitmap.createBitmap(android.graphics.Bitmap,int,int,int,int)"], "Fixed commit": "e3f4e1435bcbbb7d930dc4f63cd682dd06969e9a", "Url": "https://api.github.com/repos/federicoiosue/Omni-Notes", "Date": "2014-02-21T21:38:25Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerTeleportEvent.getPlayer()", "org.bukkit.event.player.PlayerTeleportEvent.getTo()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((target.getWorld()) == (player.getBedSpawnLocation().getWorld())) if ((target.distance(player.getBedSpawnLocation())) < 10) { savelogin.setDataVia1(player, event.getTo()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3118/buggy-version/src.de.st_ddt.crazylogin.CrazyLoginPlayerListener.java", "BodyUseAPI": ["org.bukkit.Location.distance(player.getBedSpawnLocation())", "org.bukkit.entity.Player.getBedSpawnLocation()", "de.st_ddt.crazyutil.PairList<org.bukkit.entity.Player, org.bukkit.Location>.setDataVia1(org.bukkit.entity.Player,event.getTo())"], "Fixed commit": "b9385c8680699a650d047f17cec71ae63078bda5", "Url": "https://api.github.com/repos/ST-DDT/CrazyLogin", "Date": "2012-04-05T21:54:18Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((req.getSession().getAttribute(com.epam.as.bookhotel.action.LogoutAction.USER_SESSION_ATTRIBUTE_NAME)) != null) { com.epam.as.bookhotel.model.User user = ((com.epam.as.bookhotel.model.User) (req.getSession().getAttribute(com.epam.as.bookhotel.action.LogoutAction.USER_SESSION_ATTRIBUTE_NAME))); com.epam.as.bookhotel.action.LogoutAction.logger.debug(\"User with id=\\\"{}\\\" and login=\\\"{}\\\" logout now.\", user.getId(), user.getLogin()); req.getSession().invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3167/buggy-version/src.main.java.com.epam.as.bookhotel.action.LogoutAction.java", "BodyUseAPI": ["req.getSession().invalidate()", "javax.servlet.http.HttpServletRequest.getSession()", "req.getSession().getAttribute(java.lang.String)", "javax.servlet.http.HttpServletRequest.getSession()"], "Fixed commit": "3c3ad6ae899096637977426bb668ffcf5621246c", "Url": "https://api.github.com/repos/Andrey-Shulga/BookHotelSystem", "Date": "2016-12-09T14:22:25Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pw.NeutralPlanets().size()) != 0) { averagePlanetSize = java.lang.Math.round((totalPlanetSize / (pw.NeutralPlanets().size()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5723/buggy-version/IntelligentSystems.Bots.MyBot.java", "BodyUseAPI": ["pw.NeutralPlanets().size()", "PlanetWars.NeutralPlanets()", "java.lang.Math.round((totalPlanetSize / (pw.NeutralPlanets().size())))"], "Fixed commit": "3c1eefb4bf978fa410e8dbf6a00dbfa150fe6a89", "Url": "https://api.github.com/repos/Luc-Veldhuis/IntelligentSystems", "Date": "2015-01-08T13:36:09Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(player instanceof org.bukkit.entity.Player)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5323/buggy-version/thulinma.mixedmodeauth.MixedModeAuth.java", "BodyUseAPI": [], "Fixed commit": "16538e146eb414268f997d94ec9489af077f608d", "Url": "https://api.github.com/repos/Thulinma/MixedModeAuth", "Date": "2011-09-15T20:03:27Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.oddbit.telolet.models.User.getCurrentLocation()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((lastKnownLocation == null) || (lastKnownLocation.isEmpty())) { lastKnownLocation = \"-----------\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1397/buggy-version/mobile.src.main.java.se.oddbit.telolet.services.LocationService.java", "BodyUseAPI": [], "Fixed commit": "3ccb1ae1d9a50e510e1862a2a3d5c00770849cfd", "Url": "https://api.github.com/repos/DennisAlund/telolet", "Date": "2017-01-09T03:53:14Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (qs > 0) uri = uri.substring(0, qs);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8527/buggy-version/jflask.src.main.java.net.jflask.sun.AbstractResourceHandler.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "979bbc7b4425534a0009b85d8a3ee1a22ba0ee4b", "Url": "https://api.github.com/repos/pcdv/jflask", "Date": "2015-04-30T08:45:21Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEnded()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2635/buggy-version/src.com.jcwhatever.bukkit.generic.performance.queued.Iteration3DTask.java", "BodyUseAPI": [], "Fixed commit": "081f271facab695f4a2a83e5acedda845135a0f7", "Url": "https://api.github.com/repos/JCThePants/GenericsLib", "Date": "2014-11-14T03:35:47Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEnded()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2635/buggy-version/src.com.jcwhatever.bukkit.generic.performance.queued.IterationTask.java", "BodyUseAPI": [], "Fixed commit": "081f271facab695f4a2a83e5acedda845135a0f7", "Url": "https://api.github.com/repos/JCThePants/GenericsLib", "Date": "2014-11-14T03:35:47Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((clients.size()) > 0) { clients.get(index).kill(); clients.remove(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8815/buggy-version/Controller.java", "BodyUseAPI": ["clients.get(index).kill()", "java.util.ArrayList<chatbox.Client>.get(int)", "java.util.ArrayList<chatbox.Client>.remove(int)"], "Fixed commit": "57cc1e33e80359da03e89b543a39cfc74bacea0f", "Url": "https://api.github.com/repos/SirCunningham/chatbox", "Date": "2014-02-23T14:40:05Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args[1]) == 0.0) { throw new java.lang.ArithmeticException(\"Division by zero!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3492/buggy-version/src.main.java.net.objecthunter.exp4j.operator.Operators.java", "BodyUseAPI": [], "Fixed commit": "a0514387cf001e31c90349c23d76605e65d5cf38", "Url": "https://api.github.com/repos/fasseg/exp4j", "Date": "2014-07-10T21:03:56Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args[1]) == 0.0) { throw new java.lang.ArithmeticException(\"Division by zero!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3492/buggy-version/src.main.java.net.objecthunter.exp4j.operator.Operators.java", "BodyUseAPI": [], "Fixed commit": "a0514387cf001e31c90349c23d76605e65d5cf38", "Url": "https://api.github.com/repos/fasseg/exp4j", "Date": "2014-07-10T21:03:56Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["myBot.getGunManager().getTarget()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (tmpEnemyBot != null) { a = java.lang.Math.toRadians((90 + (math.game_angles2cortesian(math.angle2pt(myPos, tmpEnemyBot.getPosition()))))); double angleSpread = (java.lang.Math.PI) / 2; a += angleSpread * ((java.lang.Math.random()) - 0.5); if ((java.lang.Math.random()) > 0.5) { a += java.lang.Math.PI; } }else { a = (2 * (java.lang.Math.PI)) * (java.lang.Math.random()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7353/buggy-version/motion.exactPathDangerMotion.java", "BodyUseAPI": ["java.lang.Math.toRadians((90 + (math.game_angles2cortesian(math.angle2pt(myPos, tmpEnemyBot.getPosition())))))", "eem.frame.motion.exactPathDangerMotion.game_angles2cortesian(math.angle2pt(myPos, tmpEnemyBot.getPosition()))", "eem.frame.motion.exactPathDangerMotion.angle2pt(java.awt.geom.Point2D.Double,tmpEnemyBot.getPosition())", "eem.frame.motion.fighterBot.getPosition()"], "Fixed commit": "9188adeb057f59cb49f9820aa08cff6ab584b8f4", "Url": "https://api.github.com/repos/evgmik/robocode_bots.frame-lib", "Date": "2017-08-12T05:56:08Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(value.isDisabled())) { view.onAppNameSelected(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4239/buggy-version/src.main.java.org.iplantc.core.uiapps.client.views.cells.AppHyperlinkCell.java", "BodyUseAPI": ["org.iplantc.core.uiapps.client.views.AppsView.onAppNameSelected(org.iplantc.core.uiapps.client.models.autobeans.App)"], "Fixed commit": "0ea82c0a01a1027ee25d986f9f7ad9294acc5e66", "Url": "https://api.github.com/repos/iPlantCollaborativeOpenSource/ui-applications-module", "Date": "2013-06-21T18:58:51Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bean.getFileId()) != null) pubBean.setUserDeletable(springSecurityAclService.currentUserHasDeletePermission(bean.getFileId(), SecureClassesEnum.PUBLICATION.getClazz()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/102/buggy-version/software.cananolab-webapp.src.gov.nih.nci.cananolab.restful.publication.PublicationBO.java", "BodyUseAPI": ["gov.nih.nci.cananolab.dto.common.PublicationBean.setUserDeletable(springSecurityAclService.currentUserHasDeletePermission(bean.getFileId(), SecureClassesEnum.PUBLICATION.getClazz()))", "gov.nih.nci.cananolab.restful.view.edit.SimpleSubmitPublicationBean.getFileId()", "gov.nih.nci.cananolab.security.service.SpringSecurityAclService.currentUserHasDeletePermission(bean.getFileId(),SecureClassesEnum.PUBLICATION.getClazz())"], "Fixed commit": "e61e780caebd482fbb6db6de11f9b8d4dde24d4a", "Url": "https://api.github.com/repos/CBIIT/cananolab", "Date": "2016-09-27T18:58:32Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nih.nci.cananolab.dto.common.PublicationBean.getDomainFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((publication.getId()) != null) newPub = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/102/buggy-version/software.cananolab-webapp.src.gov.nih.nci.cananolab.service.publication.impl.PublicationServiceLocalImpl.java", "BodyUseAPI": [], "Fixed commit": "e61e780caebd482fbb6db6de11f9b8d4dde24d4a", "Url": "https://api.github.com/repos/CBIIT/cananolab", "Date": "2016-09-27T18:58:32Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (facet == null) { final org.apache.isis.objectstore.jdo.metamodel.facets.object.persistencecapable.JdoPersistenceCapableFacet jdoPersistenceCapableFacet = facetHolder.getFacet(org.apache.isis.objectstore.jdo.metamodel.facets.object.persistencecapable.JdoPersistenceCapableFacet.class); if (jdoPersistenceCapableFacet != null) { facet = org.apache.isis.core.metamodel.facets.object.domainobject.objectspecid.ObjectSpecIdFacetForJdoPersistenceCapableAnnotation.create(jdoPersistenceCapableFacet, facetHolder); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1986/buggy-version/core.metamodel.src.main.java.org.apache.isis.core.metamodel.facets.object.domainobject.DomainObjectAnnotationFacetFactory.java", "BodyUseAPI": [], "Fixed commit": "c79af4e2427c6bb51bf6257aac9790a39065e63a", "Url": "https://api.github.com/repos/incodehq/isis", "Date": "2015-03-20T15:41:53Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(this.davCmp.isExists())) { throw DcCoreException.Dav.CELL_NOT_FOUND; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5772/buggy-version/core.src.main.java.com.fujitsu.dc.core.rs.cell.CellResource.java", "BodyUseAPI": [], "Fixed commit": "7968bf1d6e0d98dfd81becbb5407ea8981bc0d7b", "Url": "https://api.github.com/repos/fujitsu-pio/io", "Date": "2016-01-29T01:01:05Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dna.profiler.complexity.ComplexityType.Type.compareTo(dna.profiler.complexity.ComplexityType.Type)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((res == 0) && ((this.complexityType) == (dna.profiler.complexity.ComplexityType.Type.Linear))) { res = this.complexityBase.compareTo(o.complexityBase); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2524/buggy-version/src.dna.profiler.complexity.ComplexityType.java", "BodyUseAPI": [], "Fixed commit": "ecdb2a154d2d5f1138f2b8058970a936cb7f6d3e", "Url": "https://api.github.com/repos/BenjaminSchiller/DNA", "Date": "2013-10-09T09:00:04Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tagCompound.hasKey(\"Knapsack\"))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8809/buggy-version/src.main.java.tconstruct.armor.player.KnapsackInventory.java", "BodyUseAPI": [], "Fixed commit": "8de3882dce8563e107c2a518b4b10ed119445731", "Url": "https://api.github.com/repos/SlimeKnights/TinkersConstruct", "Date": "2015-02-21T20:25:00Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fr.cobaltians.cobalt.Cobalt.DEBUG) && ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT))) { android.webkit.WebView.setWebContentsDebuggingEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5903/buggy-version/src.main.java.fr.cobaltians.cobalt.fragments.CobaltFragment.java", "BodyUseAPI": [], "Fixed commit": "f91672862f061c476987462bc031d10ec5f02b4b", "Url": "https://api.github.com/repos/cobaltians/Cobalt-Android", "Date": "2015-10-07T12:07:56Z"},
{"Line": "=>720", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mEndlessScrollListener) != null) { mEndlessScrollListener.pagingLoading = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8607/buggy-version/xcore.src.by.istin.android.xcore.fragment.XListFragment.java", "BodyUseAPI": [], "Fixed commit": "65d8209624a6d7e963cb737cc53322345b8e49a5", "Url": "https://api.github.com/repos/IstiN/android_xcore", "Date": "2013-09-07T02:09:06Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.orientechnologies.orient.core.record.impl.ORecordBytes.RECORD_TYPE) == (com.orientechnologies.orient.core.record.ORecordInternal.getRecordType(record))) { for (java.util.Map.Entry<java.lang.String, java.lang.Object> projection : iProjections.entrySet()) { if (\"rid\".equalsIgnoreCase(projection.getKey())) { iValue.field(projection.getKey(), record.getIdentity()); } } return iValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5993/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.ORuntimeResult.java", "BodyUseAPI": ["com.orientechnologies.orient.core.record.ORecord.getIdentity()", "com.orientechnologies.orient.core.record.impl.ODocument.field(java.lang.String,record.getIdentity())"], "Fixed commit": "381fbba8bd80378631864cdf80f55f10bfddb5fa", "Url": "https://api.github.com/repos/sonatype/orientdb", "Date": "2016-04-15T16:11:17Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((me.getUsersFollowed()) != null) { for (cmput301f17t09.goalsandhabits.Profiles.Profile name : me.getUsersFollowed()) { if (name.getUsername().equals(p.getUsername())) { android.widget.Toast.makeText(this, \"You have already followed that user!\", Toast.LENGTH_SHORT).show(); alreadyFollowed = true; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1494/buggy-version/GoalsAndHabits.app.src.main.java.cmput301f17t09.goalsandhabits.Follow_Activity.SearchResultsActivity.java", "BodyUseAPI": ["cmput301f17t09.goalsandhabits.Profiles.Profile.getUsersFollowed()"], "Fixed commit": "3c22fa8d29b883538d033fe4de7230f6e171c411", "Url": "https://api.github.com/repos/CMPUT301F17T09/GoalsAndHabits", "Date": "2017-12-05T04:36:11Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((allRooms.size()) > 0) { allRooms.remove(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6660/buggy-version/src.GuestSession.java", "BodyUseAPI": ["java.util.ArrayList.remove(int)"], "Fixed commit": "018374451b74d6a1019a8a3240f6be452f9cc9f9", "Url": "https://api.github.com/repos/jonlikesapples/hotel-project", "Date": "2016-12-11T06:14:24Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((allRes.size()) > 0) { allRes.remove(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6660/buggy-version/src.GuestSession.java", "BodyUseAPI": ["java.util.ArrayList<Reservation>.remove(int)"], "Fixed commit": "018374451b74d6a1019a8a3240f6be452f9cc9f9", "Url": "https://api.github.com/repos/jonlikesapples/hotel-project", "Date": "2016-12-11T06:14:24Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newRooms.size()) > 0) { newRooms.remove(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6660/buggy-version/src.GuestSession.java", "BodyUseAPI": ["java.util.ArrayList.remove(int)"], "Fixed commit": "018374451b74d6a1019a8a3240f6be452f9cc9f9", "Url": "https://api.github.com/repos/jonlikesapples/hotel-project", "Date": "2016-12-11T06:14:24Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newRes.size()) > 0) { newRes.remove(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6660/buggy-version/src.GuestSession.java", "BodyUseAPI": ["java.util.ArrayList<Reservation>.remove(int)"], "Fixed commit": "018374451b74d6a1019a8a3240f6be452f9cc9f9", "Url": "https://api.github.com/repos/jonlikesapples/hotel-project", "Date": "2016-12-11T06:14:24Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (num > (ds.size())) { num = ds.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7697/buggy-version/src.main.java.com.blm.corals.study.Operators.java", "BodyUseAPI": ["java.util.List<T>.size()"], "Fixed commit": "daf0fcd962a1bb4243dcd8b4eee91839b4e36726", "Url": "https://api.github.com/repos/ilazarte/corals", "Date": "2016-05-11T10:41:53Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start < 0) { start = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7697/buggy-version/src.main.java.com.blm.corals.study.Operators.java", "BodyUseAPI": [], "Fixed commit": "daf0fcd962a1bb4243dcd8b4eee91839b4e36726", "Url": "https://api.github.com/repos/ilazarte/corals", "Date": "2016-05-11T10:41:53Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((UsableQueue.isEmpty()) == true) { isValid = false; return isValid; }else if (UsableQueue.peek().equals(numDivider)) { isValid = false; return isValid; }else if (UsableQueue.peek().equals(decimalOperator)) { decimalcount++; numElements++; temp = UsableQueue.poll(); if (UsableQueue.isEmpty()) { isValid = false; return isValid; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3274/buggy-version/Calculator_Implementation.src.com.example.calculator_implementation.MainActivity.java", "BodyUseAPI": ["java.util.concurrent.LinkedBlockingQueue<java.lang.String>.isEmpty()", "java.lang.String.equals(java.lang.String)", "java.util.concurrent.LinkedBlockingQueue<java.lang.String>.peek()", "java.util.concurrent.LinkedBlockingQueue<java.lang.String>.peek()", "java.lang.String.equals(java.lang.String)", "java.util.concurrent.LinkedBlockingQueue<java.lang.String>.poll()"], "Fixed commit": "484d7f93fb861ab011ca406dd83e42d39b38d1bc", "Url": "https://api.github.com/repos/expensivecow/Calculator", "Date": "2014-10-10T06:23:24Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diffo < (-(java.lang.Math.PI))) diffo += 2 * (java.lang.Math.PI);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5182/buggy-version/pc.src.pathfinding.astar.arcs.CercleArrivee.java", "BodyUseAPI": [], "Fixed commit": "f870a618f6cd4b638cc3779ba9f88ec04a367f19", "Url": "https://api.github.com/repos/INTechSenpai/moon-rover", "Date": "2017-05-11T09:27:53Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (v != 0) latLongString = ((v * 3.6) + \" km/h, \") + (location.getSpeed()); else latLongString = java.lang.Double.toString(location.getSpeed());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8875/buggy-version/src.com.gpsspeed.MyGoogleMap.java", "BodyUseAPI": [], "Fixed commit": "e33cc1f3b5c3c645a012fe78da435a3f8f14ab35", "Url": "https://api.github.com/repos/csl/speedgps", "Date": "2011-09-27T02:04:20Z"},
{"Line": "=>2171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vb instanceof com.jme3.scene.PartialUpdatedVertexBuffer) { com.jme3.scene.PartialUpdatedVertexBuffer pvb = ((com.jme3.scene.PartialUpdatedVertexBuffer) (vb)); pvb.getAndClearUpdates(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4726/buggy-version/engine.src.lwjgl.com.jme3.renderer.lwjgl.LwjglRenderer.java", "BodyUseAPI": [], "Fixed commit": "afc734d2001d9861af2a690d73b5ed39b67b26fc", "Url": "https://api.github.com/repos/entrusc/jmonkeyengine", "Date": "2016-06-20T17:51:28Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bloatit.data.queries.DaoIdentifiableQuery<?>.uniqueResult()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (uniqueResult == null) { throw new com.bloatit.framework.webprocessor.annotations.ConversionErrorException(\"No identifiable matching the id\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6595/buggy-version/main.src.main.java.com.bloatit.framework.webprocessor.url.Loaders.java", "BodyUseAPI": [], "Fixed commit": "310ff9e091f100557a3a5ba0a9313f998dc1a93b", "Url": "https://api.github.com/repos/BloatIt/bloatit", "Date": "2011-06-10T10:13:52Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pkg == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2724/buggy-version/app.src.main.java.org.dutchaug.levelizer.util.PackageUtils.java", "BodyUseAPI": [], "Fixed commit": "5128f5553c964a0d7068429f9506b1d30b10ff79", "Url": "https://api.github.com/repos/pflammertsma/levelizer", "Date": "2016-07-25T17:15:44Z"},
{"Line": "=>832", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mListener.getPathBuffers()) != null) { for (java.util.List<com.mapbox.mapboxsdk.geometry.LatLng> polygonPoints : mListener.getPathBuffers()) { com.mapbox.mapboxsdk.annotations.PolygonOptions polygonOptions = mListener.getAnnotationsFactory().getDefaultPolygonOptions().addAll(polygonPoints); flightPolygon = map.addPolygon(polygonOptions); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2749/buggy-version/airmapsdk.src.main.java.com.airmap.airmapsdk.UI.Fragments.FlightDetailsFragment.java", "BodyUseAPI": ["com.airmap.airmapsdk.ui.fragments.FlightDetailsFragment.OnFragmentInteractionListener.getAnnotationsFactory()", "com.airmap.airmapsdk.ui.fragments.FlightDetailsFragment.OnFragmentInteractionListener.getPathBuffers()", "mListener.getAnnotationsFactory().getDefaultPolygonOptions().addAll(java.util.List<com.mapbox.mapboxsdk.geometry.LatLng>)", "com.airmap.airmapsdk.util.AnnotationsFactory.getDefaultPolygonOptions()"], "Fixed commit": "e50d657ef284c140c9f7e7b30102ac674c44f9e0", "Url": "https://api.github.com/repos/airmap/AirMapSDK-Android", "Date": "2017-01-24T06:24:33Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stringBuilder) != null) { stringBuilder.append(f.message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5033/buggy-version/src.main.java.jaws.Connection.java", "BodyUseAPI": [], "Fixed commit": "94aa504aebeab5f85f9ba562c44c0f4ec5b4be08", "Url": "https://api.github.com/repos/oskogstad/JaWS", "Date": "2016-04-26T13:29:52Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stringBuilder) != null) { stringBuilder.append(f.message); jaws.onMessage(this, stringBuilder.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5033/buggy-version/src.main.java.jaws.Connection.java", "BodyUseAPI": [], "Fixed commit": "94aa504aebeab5f85f9ba562c44c0f4ec5b4be08", "Url": "https://api.github.com/repos/oskogstad/JaWS", "Date": "2016-04-26T13:29:52Z"},
{"Line": "=>569", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Catalog.search(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(item instanceof Book)) { return Library.NOT_A_BOOK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1355/buggy-version/GP2.src.Library.java", "BodyUseAPI": [], "Fixed commit": "84de3c9f434227cc657973980b7e6656b97c9199", "Url": "https://api.github.com/repos/rdenman/gp2", "Date": "2016-11-07T02:41:20Z"},
{"Line": "=>638", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((px >= 0) && (py >= 0)) && (px < (screen.getWidth()))) && (py < (screen.getHeight()))) { screen.setRGB(((part.getX()) + (viewPointOffsetX)), ((part.getY()) + (viewPointOffsetY)), part.getColor().getRGB()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5794/buggy-version/src.org.openRealmOfStars.gui.mapPanel.MapPanel.java", "BodyUseAPI": ["java.awt.image.BufferedImage.setRGB(((part.getX()) + (viewPointOffsetX)),((part.getY()) + (viewPointOffsetY)),part.getColor().getRGB())"], "Fixed commit": "80c0b657585c30fdd3f02c5eabe0766edb1da65a", "Url": "https://api.github.com/repos/tuomount/Open-Realms-of-Stars", "Date": "2016-10-23T20:37:26Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Long, java.lang.String>.get(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (mapFileToOwnerTransaction.containsKey(fileName)) y = (mapFileToOwnerTransaction.get(fileName)) != txnID;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6481/buggy-version/src.main_package.ReplicaServer.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Long>.get(java.lang.String)"], "Fixed commit": "77622a7038668ba97fb5c8938031121b8d5ec7fa", "Url": "https://api.github.com/repos/houssainy/Replicated-Distributed-File-System", "Date": "2015-05-27T23:03:16Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((callback) != null) { callback.onTap(v); }else { android.util.Log.e(App.TAG, \"FullScreenPageFragment:onCreateView:imageView.OnClickListener: callback not set, not handling click!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4821/buggy-version/app.src.main.java.nl.jeroenhd.app.bcbreader.fragments.FullscreenPageFragment.java", "BodyUseAPI": [], "Fixed commit": "fd1732dedff26fa2e9228a0dc34aaa98f7f895c1", "Url": "https://api.github.com/repos/jeroenhd/UnofficialBCBReader", "Date": "2017-06-20T06:41:07Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (android.os.Build.VERSION_CODES.JELLY_BEAN_MR1)) { nb.setShowWhen(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1689/buggy-version/app.src.main.java.be.ppareit.swiftp.gui.FsNotification.java", "BodyUseAPI": [], "Fixed commit": "503b42fa625027ff472683c954b00e5bc4b02b31", "Url": "https://api.github.com/repos/tuzhao/rsftp", "Date": "2017-09-02T14:33:02Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (apps.isEmpty()) { com.google.firebase.FirebaseApp.initializeApp(com.flow.railwayservice.service.util.firebase.FirebaseAuthentication.options, com.flow.railwayservice.service.util.firebase.FirebaseAuthentication.APP_NAME); }else if (!(apps.contains(com.google.firebase.FirebaseApp.getInstance(com.flow.railwayservice.service.util.firebase.FirebaseAuthentication.APP_NAME)))) { com.google.firebase.FirebaseApp.initializeApp(com.flow.railwayservice.service.util.firebase.FirebaseAuthentication.options, com.flow.railwayservice.service.util.firebase.FirebaseAuthentication.APP_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/529/buggy-version/src.main.java.com.flow.railwayservice.service.util.firebase.FirebaseAuthentication.java", "BodyUseAPI": [], "Fixed commit": "ac2c5eb1655b5901d8c02579a85f89d2781011f7", "Url": "https://api.github.com/repos/dnaismyth/railway-service", "Date": "2017-03-15T15:23:40Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((amount.compareTo(java.math.BigDecimal.ZERO)) == 0) amount = new java.math.BigDecimal(map.get(\"amount2\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2747/buggy-version/xchange-cexio.src.main.java.org.knowm.xchange.cexio.dto.trade.CexIOArchivedOrder.java", "BodyUseAPI": [], "Fixed commit": "25d6902949079f4f76221bc2fbea1775d4c25f92", "Url": "https://api.github.com/repos/knowm/XChange", "Date": "2017-12-27T14:12:15Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInEditMode())) { applicationContext.addLifecycleCallback(viewGroupId, \"RecyclerView.onDraw\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2396/buggy-version/app.src.main.java.com.example.android.lifecycleapplication.NewRecyclerView.java", "BodyUseAPI": [], "Fixed commit": "b027abfda07c0e17cce0663590ce414c69dfa6ce", "Url": "https://api.github.com/repos/mborzenkov/lifecycle-educational-app", "Date": "2017-04-07T14:38:20Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((opponent) != null) { opponent.sendMessage(uiTurn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1152/buggy-version/src.Engine.Game.java", "BodyUseAPI": [], "Fixed commit": "4e2631620a1c91d01737ec8a0b6da7c54dfabf5a", "Url": "https://api.github.com/repos/bmoor/ConnectFour", "Date": "2014-05-11T17:58:49Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((property.equals(\"studyId\")) || (property.equals(\"ruleSetRunSchedule\"))) || (property.equals(\"actionType\"))) || (property.equals(\"actionExecuteOn\"))) || (property.equals(\"ruleSetRuleStatus\"))) { criteria = ((((criteria + \" \") + (columnMapping.get(property))) + \" = \") + (value.toString())) + \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1594/buggy-version/core.src.main.java.org.akaza.openclinica.dao.hibernate.ViewRuleAssignmentFilter.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "df08d98a815655b98a3650b46e3b295e8763b280", "Url": "https://api.github.com/repos/rooney/OpenClinica", "Date": "2015-10-14T15:37:34Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (property.equals(\"ruleSetRunTime\")) { criteria = ((((criteria + \" \") + (columnMapping.get(property))) + \" = '\") + (value.toString())) + \"' \"; }else { criteria += ((((\" UPPER(\" + (columnMapping.get(property))) + \") like UPPER('%\") + (value.toString())) + \"%')\") + \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1594/buggy-version/core.src.main.java.org.akaza.openclinica.dao.hibernate.ViewRuleAssignmentFilter.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "df08d98a815655b98a3650b46e3b295e8763b280", "Url": "https://api.github.com/repos/rooney/OpenClinica", "Date": "2015-10-14T15:37:34Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((0 == (functionList.size())) && (null != (this.superStateMetadata))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8250/buggy-version/Platform.Lifecycle.src.main.java.net.madz.lifecycle.meta.impl.builder.StateMetaBuilderImpl.java", "BodyUseAPI": [], "Fixed commit": "6ec821d8d0a4dd6331c81a578706e3e61939ecda", "Url": "https://api.github.com/repos/zhongdj/Swordfish", "Date": "2013-11-03T06:32:19Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isScrollingPaused(listView))) { listView.setSelectionFromTop(index, px); }else { listView.setSelectionFromTop((index + (listView.getHeaderViewsCount())), px); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/793/buggy-version/library-ui.src.com.eyeem.poll.AnimatedPollAdapter.java", "BodyUseAPI": ["android.widget.ListView.setSelectionFromTop((index + (listView.getHeaderViewsCount())),int)", "android.widget.ListView.getHeaderViewsCount()", "android.widget.ListView.setSelectionFromTop(int,int)"], "Fixed commit": "8ff4c44720bd489faf8c8604d9080cd200c1c557", "Url": "https://api.github.com/repos/vishna/PotatoLibrary", "Date": "2013-03-13T19:17:17Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.password) == null) { this.password = password; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1474/buggy-version/OneButtonApp.src.OBAController.java", "BodyUseAPI": [], "Fixed commit": "de6584cd72d9ed1bd22f206d82458e213130919b", "Url": "https://api.github.com/repos/wangruowen/One-Button-App", "Date": "2012-04-15T18:13:48Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.username) == null) { this.username = username; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1474/buggy-version/OneButtonApp.src.OBAController.java", "BodyUseAPI": [], "Fixed commit": "de6584cd72d9ed1bd22f206d82458e213130919b", "Url": "https://api.github.com/repos/wangruowen/One-Button-App", "Date": "2012-04-15T18:13:48Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.topfood.recipes.like.model.Like.getUser()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (likeUser != null) { like.setUser(userRepository.findByName(likeUser.getName()).get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7165/buggy-version/src.main.java.com.topfood.recipes.like.service.LikeService.java", "BodyUseAPI": ["userRepository.findByName(likeUser.getName()).get(int)", "com.topfood.recipes.like.model.Like.setUser(userRepository.findByName(likeUser.getName()).get(0))", "com.topfood.recipes.user.model.User.getName()", "com.topfood.recipes.user.repository.UserRepository.findByName(likeUser.getName())"], "Fixed commit": "5d8b3ad9331133dceb258bb8d227854e4dc3f7ae", "Url": "https://api.github.com/repos/slayjoker95/top-food-recipes", "Date": "2017-12-11T13:56:26Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.emf.ecore.EObject.eGet(org.eclipse.emf.ecore.EReference)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1680/buggy-version/org.spoofax.modelware.emf.src.org.spoofax.modelware.emf.tree2model.Model2Term.java", "BodyUseAPI": [], "Fixed commit": "7bb3410de1a34a242e1e1272299ebb620790b415", "Url": "https://api.github.com/repos/metaborg/spoofax-modelware", "Date": "2013-07-10T21:37:47Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["linkRegistry.getLinkEntries().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (entry == null) { newEntry.setNewLink(newEntry); }else { processCircularRename(entry, newEntry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6136/buggy-version/wiki-service.src.main.java.org.exoplatform.wiki.service.impl.WikiServiceImpl.java", "BodyUseAPI": ["org.exoplatform.wiki.service.impl.WikiServiceImpl.processCircularRename(org.exoplatform.wiki.mow.core.api.wiki.LinkEntry,org.exoplatform.wiki.mow.core.api.wiki.LinkEntry)"], "Fixed commit": "a5f6758dd808b717df8a2543d7a284826d9a5c3c", "Url": "https://api.github.com/repos/exodev/wiki", "Date": "2013-10-24T10:23:41Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["linkRegistry.getLinkEntries().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (entry != null) { entry.setNewLink(newEntry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6136/buggy-version/wiki-service.src.main.java.org.exoplatform.wiki.service.impl.WikiServiceImpl.java", "BodyUseAPI": ["org.exoplatform.wiki.mow.core.api.wiki.LinkEntry.setNewLink(org.exoplatform.wiki.mow.core.api.wiki.LinkEntry)"], "Fixed commit": "a5f6758dd808b717df8a2543d7a284826d9a5c3c", "Url": "https://api.github.com/repos/exodev/wiki", "Date": "2013-10-24T10:23:41Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sourceLinkRegistry.getLinkEntries().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (entry != null) { entry.setNewLink(newEntry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6136/buggy-version/wiki-service.src.main.java.org.exoplatform.wiki.service.impl.WikiServiceImpl.java", "BodyUseAPI": ["org.exoplatform.wiki.mow.core.api.wiki.LinkEntry.setNewLink(org.exoplatform.wiki.mow.core.api.wiki.LinkEntry)"], "Fixed commit": "a5f6758dd808b717df8a2543d7a284826d9a5c3c", "Url": "https://api.github.com/repos/exodev/wiki", "Date": "2013-10-24T10:23:41Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sourceLinkRegistry.getLinkEntries().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (entry == null) { newEntry.setNewLink(newEntry); }else { processCircularRename(entry, newEntry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6136/buggy-version/wiki-service.src.main.java.org.exoplatform.wiki.service.impl.WikiServiceImpl.java", "BodyUseAPI": ["org.exoplatform.wiki.service.impl.WikiServiceImpl.processCircularRename(org.exoplatform.wiki.mow.core.api.wiki.LinkEntry,org.exoplatform.wiki.mow.core.api.wiki.LinkEntry)"], "Fixed commit": "a5f6758dd808b717df8a2543d7a284826d9a5c3c", "Url": "https://api.github.com/repos/exodev/wiki", "Date": "2013-10-24T10:23:41Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((build.getResult()) != (hudson.model.Result.SUCCESS)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6682/buggy-version/src.main.java.org.jenkinsci.plugins.rundeck.RundeckNotifier.java", "BodyUseAPI": [], "Fixed commit": "97ba57512c4a33723b3257232f880c7f1ef9ec25", "Url": "https://api.github.com/repos/vbehar/jenkins-rundeck-plugin", "Date": "2011-02-11T12:56:16Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (firstLineIndent != null) currentLineString = org.apache.commons.lang.StringUtils.removeStart(currentLineString, firstLineIndent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4305/buggy-version/reporting.impl.src.main.java.org.jboss.windup.reporting.xml.HintHandler.java", "BodyUseAPI": ["org.apache.commons.lang.StringUtils.removeStart(java.lang.String,java.lang.String)"], "Fixed commit": "cf66efc6c8887cfd9231f32c066ef7361239fb56", "Url": "https://api.github.com/repos/windup/windup", "Date": "2015-08-04T20:22:24Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((firstLineIndent == null) && (!(org.apache.commons.lang.StringUtils.isEmpty(currentLineString)))) { int firstNonWhitespaceIndex = org.apache.commons.lang.StringUtils.indexOfAnyBut(currentLineString, \" \\t\"); if (firstNonWhitespaceIndex != (-1)) firstLineIndent = currentLineString.substring(0, firstNonWhitespaceIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4305/buggy-version/reporting.impl.src.main.java.org.jboss.windup.reporting.xml.HintHandler.java", "BodyUseAPI": ["org.apache.commons.lang.StringUtils.indexOfAnyBut(java.lang.String,java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "cf66efc6c8887cfd9231f32c066ef7361239fb56", "Url": "https://api.github.com/repos/windup/windup", "Date": "2015-08-04T20:22:24Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((redoArray.size()) != 0) redoArray.remove(((redoArray.size()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1809/buggy-version/ChessBoard.java", "BodyUseAPI": ["java.util.ArrayList<RedoMoveObject>.size()", "java.util.ArrayList<RedoMoveObject>.remove(((redoArray.size()) - 1))"], "Fixed commit": "528c5eedc627fe012cf7f2fa0e7f265b483386dd", "Url": "https://api.github.com/repos/Patosai/Chess", "Date": "2014-05-26T17:33:16Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((client) != null) && (client.isAlive())) { getConnectionInfo(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5509/buggy-version/MobileTennis.android.src.de.teammt.mobiletennis.connection.Client.ClientPeerConn.java", "BodyUseAPI": [], "Fixed commit": "292c2e5d1d68152ab79be1f8cbb8598b5264a53c", "Url": "https://api.github.com/repos/TeamMobileTennis/MobileTennis", "Date": "2017-06-20T08:47:28Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sumFuncs.last().gradient()) == null) { throw new java.lang.IllegalArgumentException(\"Internal functions must implement not-null gradient()\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8762/buggy-version/ml.src.com.spbsu.ml.methods.StochasticGradientDescent.java", "BodyUseAPI": [], "Fixed commit": "aece15045080853ca7c9b6b93301af7942bc56f2", "Url": "https://api.github.com/repos/spbsu-ml-community/jmll", "Date": "2014-05-07T15:23:40Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((contactEdit.getName()) != \"\") { this.contactName.setText(number); contactEdit.setName(number); }else if ((contactName.getText().toString()) != \"\") { contactEdit.setName(contactName.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1114/buggy-version/branches.tinfoil-sms.src.com.tinfoil.sms.settings.AddContact.java", "BodyUseAPI": ["com.tinfoil.sms.dataStructures.TrustedContact.setName(contactName.getText().toString())", "com.tinfoil.sms.dataStructures.TrustedContact.setName(java.lang.String)"], "Fixed commit": "27a373c75aad8547174d11dfc0f5b4d0944a348e", "Url": "https://api.github.com/repos/tinfoilhat/tinfoil-sms", "Date": "2013-08-06T14:49:00Z"},
{"Line": "=>769", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_previousInsertion) == child) { org.zkoss.zk.ui.HtmlShadowElement.setPrevInsertion(this, child.getPreviousSibling()); }else if ((_nextInsertion) == child) { org.zkoss.zk.ui.HtmlShadowElement.setPrevInsertion(child.getNextSibling(), this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2980/buggy-version/zk.src.org.zkoss.zk.ui.HtmlShadowElement.java", "BodyUseAPI": ["org.zkoss.zk.ui.Component.getPreviousSibling()", "org.zkoss.zk.ui.Component.getNextSibling()", "org.zkoss.zk.ui.HtmlShadowElement.setPrevInsertion(org.zkoss.zk.ui.HtmlShadowElement,child.getPreviousSibling())", "org.zkoss.zk.ui.HtmlShadowElement.setPrevInsertion(child.getNextSibling(),org.zkoss.zk.ui.HtmlShadowElement)"], "Fixed commit": "5850dfef85d9463c11e28d2818944677fac24634", "Url": "https://api.github.com/repos/chunfuchang/zk", "Date": "2015-04-20T09:12:47Z"},
{"Line": "=>976", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((shadow.getShadowHost()) != baseChild) { switch (org.zkoss.zk.ui.HtmlShadowElement.inRange(shadow, baseChild)) { case IN_RANGE : case FIRST : case LAST : val = shadow.resolveVariable(baseChild, name, recurse); if (val != null) return val; break; } }else { val = shadow.resolveVariable(baseChild, name, recurse); if (val != null) return val; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2980/buggy-version/zk.src.org.zkoss.zk.ui.AbstractComponent.java", "BodyUseAPI": ["org.zkoss.zk.ui.HtmlShadowElement.inRange(org.zkoss.zk.ui.HtmlShadowElement,org.zkoss.zk.ui.AbstractComponent)", "org.zkoss.zk.ui.HtmlShadowElement.resolveVariable(org.zkoss.zk.ui.AbstractComponent,java.lang.String,boolean)", "org.zkoss.zk.ui.HtmlShadowElement.resolveVariable(org.zkoss.zk.ui.AbstractComponent,java.lang.String,boolean)"], "Fixed commit": "5850dfef85d9463c11e28d2818944677fac24634", "Url": "https://api.github.com/repos/chunfuchang/zk", "Date": "2015-04-20T09:12:47Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((path == null) && ((sliceObject) != null)) { path = sliceObject.getPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3095/buggy-version/org.dawnsci.slicing.src.org.dawnsci.slicing.component.SliceSystemImpl.java", "BodyUseAPI": [], "Fixed commit": "3f701d74827469c100ca5d1af2abf575341e7494", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2016-11-10T15:57:16Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (path != null) { final org.eclipse.ui.IWorkbenchPart part = ((getPlottingSystem()) != null) ? getPlottingSystem().getPart() : null; if ((part != null) && (part instanceof org.dawnsci.common.widgets.editor.ITitledEditor)) { final java.io.File file = new java.io.File(path); ((org.dawnsci.common.widgets.editor.ITitledEditor) (part)).setPartTitle(file.getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3095/buggy-version/org.dawnsci.slicing.src.org.dawnsci.slicing.component.SliceSystemImpl.java", "BodyUseAPI": [], "Fixed commit": "3f701d74827469c100ca5d1af2abf575341e7494", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2016-11-10T15:57:16Z"},
{"Line": "=>569", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(world.equals(other.world))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1318/buggy-version/src.Block.java", "BodyUseAPI": [], "Fixed commit": "ab8d644e1fd83f405bf274aed5b723e47e81e098", "Url": "https://api.github.com/repos/shadow386/CanaryMod", "Date": "2011-06-25T00:17:59Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSetRightOut.isRunning()) || (mSetLeftIn.isRunning())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8833/buggy-version/EasyFlipView-Library.src.main.java.com.wajahatkarim3.easyflipview.EasyFlipView.java", "BodyUseAPI": [], "Fixed commit": "83af7b0913863ef0af70f20026f0c7ff0c40c35d", "Url": "https://api.github.com/repos/wajahatkarim3/EasyFlipView", "Date": "2017-01-10T18:35:53Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cmd.getName().equalsIgnoreCase(\"bcdmapsync\")) { com.github.catageek.ByteCart.plugins.BCDynmapPlugin.removeObsoleteMarkers(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2214/buggy-version/src.com.github.catageek.ByteCart.BytecartCommandExecutor.java", "BodyUseAPI": [], "Fixed commit": "07e9d1c237245543f0ad000aceb0ea098e083d7e", "Url": "https://api.github.com/repos/catageek/ByteCart", "Date": "2013-08-09T23:03:21Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cloneNode.getParent()) == null) { updatedSelectionList.add(cloneNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8891/buggy-version/src.ca.mcgill.cs.stg.jetuml.framework.CutPasteBehavior.java", "BodyUseAPI": ["ca.mcgill.cs.stg.jetuml.framework.SelectionList.add(ca.mcgill.cs.stg.jetuml.graph.Node)"], "Fixed commit": "0c85b43ee536651def27f8d92fccc7e11040de89", "Url": "https://api.github.com/repos/prmr/JetUML", "Date": "2015-02-06T02:03:03Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.orion.internal.server.servlets.file.DirectoryHandlerV1.getCreateOptions(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (options == ((org.eclipse.orion.internal.server.servlets.file.DirectoryHandlerV1.CREATE_MOVE) | (org.eclipse.orion.internal.server.servlets.file.DirectoryHandlerV1.CREATE_NO_OVERWRITE))) { isNameEqualCaseInsensitive = fileFound.getName().equals(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3276/buggy-version/bundles.org.eclipse.orion.server.servlets.src.org.eclipse.orion.internal.server.servlets.file.DirectoryHandlerV1.java", "BodyUseAPI": [], "Fixed commit": "cb7700ef3e8cbe5b498de6ef8349793922b429a8", "Url": "https://api.github.com/repos/Meeranair/orion.server", "Date": "2012-11-21T00:46:34Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((terrainMap) != null) && ((terrainMap.undoableEdit) != null)) { org.shaman.rpg.engine.core.math.Point3i p = new org.shaman.rpg.engine.core.math.Point3i(x, y, this.height); terrainMap.undoableEdit.addOldTile(null, p); terrainMap.undoableEdit.addNewTile(this, p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8472/buggy-version/Engine.Engine-Core.src.org.shaman.rpg.engine.sdk.terrain.TerrainMap.java", "BodyUseAPI": ["org.shaman.rpg.engine.sdk.terrain.TileChangesUndoableEdit.addNewTile(org.shaman.rpg.engine.sdk.terrain.TerrainMap.Tile,org.shaman.rpg.engine.core.math.Point3i)", "org.shaman.rpg.engine.sdk.terrain.TileChangesUndoableEdit.addOldTile(<nulltype>,org.shaman.rpg.engine.core.math.Point3i)"], "Fixed commit": "6ea2edc75da75c79f2625976a778afa018e6a6a0", "Url": "https://api.github.com/repos/shamanDevel/shaman.rpg", "Date": "2017-04-08T19:45:24Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((notes.get(position).title.length()) != 0) { holder.letter.setText(java.lang.String.valueOf(java.lang.Character.toUpperCase(notes.get(position).title.charAt(0)))); }else { holder.letter.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7115/buggy-version/app.src.main.java.com.evlishelper.lwizapp.activities.notes.NoteAdapter.java", "BodyUseAPI": ["java.lang.Character.toUpperCase(notes.get(position).title.charAt(0))", "java.util.List<com.evlishelper.lwizapp.activities.notes.Note>.get(int)", "notes.get(position).title.charAt(int)", "android.widget.TextView.setText(java.lang.String)", "java.lang.String.valueOf(char)"], "Fixed commit": "abfa48daaf6344decbe322236d5f91f851161874", "Url": "https://api.github.com/repos/GaliFFun/LwizApp", "Date": "2017-07-17T07:35:54Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pavement.roads.RoadTerminus.getPoint()", "org.pavement.util.Point.distanceTo(org.pavement.util.Point)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((x.translate(vector().unit()).distanceTo(p)) > l) { m = distance + l; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8578/buggy-version/src.org.pavement.roads.RoadTerminus.java", "BodyUseAPI": [], "Fixed commit": "03e4ff5d7b3596a81b701bed9145e78e3d0bc40d", "Url": "https://api.github.com/repos/LiviasSecret/Pavement", "Date": "2014-06-22T20:14:54Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.swt.widgets.TableItem.getData()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (node != null) { table.redraw(); table.setToolTipText(getTooltipDecorator().decorate(node)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8734/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.explore.ViewList.java", "BodyUseAPI": ["getTooltipDecorator().decorate(org.deidentifier.arx.ARXLattice.ARXNode)", "org.mihalis.opal.dynamictablecolumns.DynamicTable.setToolTipText(getTooltipDecorator().decorate(node))"], "Fixed commit": "bca5e5426f55183c7855e9a62c0641790574e45f", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2015-02-04T09:28:57Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isForExpressions) { filterResults = new java.util.ArrayList<java.lang.Boolean>(); for (int j = 0; j < (this.expressionDataPurifiers.size()); j++) { ml.shifu.shifu.core.DataPurifier dp = this.expressionDataPurifiers.get(j); filterResults.add(dp.isFilter(valueStr)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5571/buggy-version/src.main.java.ml.shifu.shifu.core.binning.UpdateBinningInfoMapper.java", "BodyUseAPI": [], "Fixed commit": "81082c63ee2605d1536c8f93b86b47eb6b240f28", "Url": "https://api.github.com/repos/huzza/shifu", "Date": "2017-09-01T08:13:13Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((method.getAnnotations()) != null) && ((method.getAnnotations().length) > 0)) { addAction(objectClazz, method); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7909/buggy-version/yawp-core.src.main.java.io.yawp.repository.EndpointScanner.java", "BodyUseAPI": ["io.yawp.repository.EndpointScanner.addAction(java.lang.Class<?>,java.lang.reflect.Method)"], "Fixed commit": "6b411484988af85b525242f40ba0d0f6a59aec1e", "Url": "https://api.github.com/repos/feroult/yawp", "Date": "2015-12-11T01:59:13Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((page.getResultItems().getAll().size()) == 0) { page.getResultItems().setSkip(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4081/buggy-version/webmagic-extension.src.main.java.us.codecraft.webmagic.model.ModelPageProcessor.java", "BodyUseAPI": ["us.codecraft.webmagic.Page.getResultItems()", "page.getResultItems().setSkip(boolean)"], "Fixed commit": "dafd0b5875cd174db545e3cdcbd9b1c9908e4a76", "Url": "https://api.github.com/repos/sebastian1118/webmagic", "Date": "2014-04-04T12:36:31Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (code.trim().endsWith(\"{\")) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4209/buggy-version/src.main.java.org.walkmod.sonar.visitors.RemoveCodeComment.java", "BodyUseAPI": [], "Fixed commit": "3e426fa6e009aa42f5f0a1665ba899c37680abfd", "Url": "https://api.github.com/repos/walkmod/walkmod-sonar-plugin", "Date": "2016-05-31T17:11:13Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (image) { java.lang.System.out.println(\"Es una imagen\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/267/buggy-version/src.ar.edu.it.itba.pdc.Implementations.proxy.utils.DecoderImpl.java", "BodyUseAPI": [], "Fixed commit": "f200d67844b20c944fd67f0a5747ac39296e382b", "Url": "https://api.github.com/repos/mdesanti/TPE-Protos", "Date": "2012-05-13T23:56:01Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ar.edu.it.itba.pdc.Interfaces.HTTPHeaders.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (contentType != null) image = contentType.contains(\"image/\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/267/buggy-version/src.ar.edu.it.itba.pdc.Implementations.proxy.utils.DecoderImpl.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)"], "Fixed commit": "f200d67844b20c944fd67f0a5747ac39296e382b", "Url": "https://api.github.com/repos/mdesanti/TPE-Protos", "Date": "2012-05-13T23:56:01Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.UserStatus.getValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (status == (model.UserStatus.ACTIVATED)) { isBruteForce = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4461/buggy-version/src.service.UserService.java", "BodyUseAPI": [], "Fixed commit": "e72fecc49722182239c11e302d1313a80d1c0132", "Url": "https://api.github.com/repos/fuouo/SECURDE_OLS", "Date": "2017-08-04T17:03:20Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!done) { net.slipcor.pvparena.arena.Arena.pmsg(sender, net.slipcor.pvparena.core.Language.parse(MSG.ERROR_NOPERM, MSG.ERROR_NOPERM_X_ADMIN.toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7834/buggy-version/src.net.slipcor.pvparena.commands.AbstractGlobalCommand.java", "BodyUseAPI": [], "Fixed commit": "bd74e078f54fce5f1b66fed9962f660e3eb16af9", "Url": "https://api.github.com/repos/slipcor/pvparena", "Date": "2014-10-05T21:27:28Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLike) { com.thebestory.android.api.urlCollection.PostUrls.PostInit.init(connection, postArgs); }else { com.thebestory.android.api.urlCollection.PostUrls.DeleteInit.init(connection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3309/buggy-version/app.src.main.java.com.thebestory.android.api.urlCollection.PostUrls.PostLikeFactory.java", "BodyUseAPI": [], "Fixed commit": "1713aad98bf23053b316312051e1dcf4e1aa2b1e", "Url": "https://api.github.com/repos/thebestory/android", "Date": "2016-12-20T20:01:54Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((config.get(SwarmConfigKeys.CONFIG_KEY_BUGSWARM_PARTICIPATION_APIKEY)) == null) return \"[NONE]\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2944/buggy-version/com.buglabs.bug.swarm.connector.src.com.buglabs.bug.swarm.connector.Configuration.java", "BodyUseAPI": [], "Fixed commit": "0acb92cf4f7d1e74244b4bffd6852c24811d96b4", "Url": "https://api.github.com/repos/buglabs/bugswarm-connector", "Date": "2011-10-28T01:39:10Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((config.get(SwarmConfigKeys.CONFIG_KEY_BUGSWARM_CONFIGURATION_APIKEY)) == null) return \"[NONE]\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2944/buggy-version/com.buglabs.bug.swarm.connector.src.com.buglabs.bug.swarm.connector.Configuration.java", "BodyUseAPI": [], "Fixed commit": "0acb92cf4f7d1e74244b4bffd6852c24811d96b4", "Url": "https://api.github.com/repos/buglabs/bugswarm-connector", "Date": "2011-10-28T01:39:10Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arduinoMessages.size()) > 0) { grogAvailable = true; state = protocol.ServerProtocolParser.BUSY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4978/buggy-version/Eclipse.src.protocol.ServerProtocolParser.java", "BodyUseAPI": [], "Fixed commit": "af676adaea14694a32db5ad9ae42475010463ef0", "Url": "https://api.github.com/repos/dwildmark/bArduino", "Date": "2015-04-20T11:25:25Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (literal.endsWith(\"=true\")) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6850/buggy-version/statistics-generator.statistics-generator-impl.src.main.java.pl.edu.icm.coansys.statisticsgenerator.filters.AbstractLogicalEvaluator.java", "BodyUseAPI": [], "Fixed commit": "55ff2afaa15aa4ca3b170ff7b383d4f24ac9ca1c", "Url": "https://api.github.com/repos/CeON/CoAnSys", "Date": "2014-04-08T13:53:34Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((!(hasDrunkard)) || (moveTo == null)) { moveTo = field.findFirstStepInPath(this.getPos(), goalDrunkard.getPos()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8972/buggy-version/src.ru.spbau.drunkard.actors.Policeman.java", "BodyUseAPI": [], "Fixed commit": "d895ba6dc8c5eaec8e52831e917470ff2e237b17", "Url": "https://api.github.com/repos/Icemore/drunkard", "Date": "2014-05-19T06:30:21Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((currentMissionInit()) != null) && ((currentMissionInit().getClientRole()) == 0)) && (currentMissionInit().getExperimentUID().equals(missionInit.getExperimentUID()))) && (areMissionsEqual(currentMissionInit().getMission(), missionInit.getMission()))) { reply = \"MALMOERROR Non-unique experiment ID detected!\"; keepProcessing = false; }else { com.microsoft.Malmo.IState currentState = getStableState(); if ((currentState != null) && (currentState.equals(ClientState.DORMANT))) { reply = \"MALMOOK\"; keepProcessing = true; }else { reply = \"MALMOBUSY\"; keepProcessing = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7076/buggy-version/Minecraft.src.main.java.com.microsoft.Malmo.Client.ClientStateMachine.java", "BodyUseAPI": [], "Fixed commit": "a0595aaabafbda51e1601dc38cf9156211b5f29b", "Url": "https://api.github.com/repos/Microsoft/malmo", "Date": "2016-08-31T13:10:21Z"},
{"Line": "=>1939", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ge.research.sadl.model.DeclarationExtensions.getOntConceptType(com.ge.research.sadl.sADL.SadlResource)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (propType.equals(OntConceptType.CLASS_PROPERTY)) { prop = getOrCreateObjectProperty(propUri); }else { prop = getOrCreateDatatypeProperty(propUri); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2029/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlModelProcessor.java", "BodyUseAPI": [], "Fixed commit": "00f4f9dcc8c0fc4acf59b518196f5f85d2f54d47", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2016-05-19T10:31:56Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((obj instanceof com.github.chungkwong.jschememin.type.ScmError) && ((((com.github.chungkwong.jschememin.type.ScmError) (obj)).getType()) == (com.github.chungkwong.jschememin.type.ScmError.ErrorType.JAVA))) return new com.github.chungkwong.jschememin.type.ScmError.ScmException(obj, ((java.lang.Throwable) (((com.github.chungkwong.jschememin.type.ScmJavaObject) (com.github.chungkwong.jschememin.type.ScmList.first(((com.github.chungkwong.jschememin.type.ScmError) (obj)).getIrritants()))).getJavaObject()))); else return new com.github.chungkwong.jschememin.type.ScmError.ScmException(obj);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7494/buggy-version/src.com.github.chungkwong.jschememin.type.ScmError.java", "BodyUseAPI": ["com.github.chungkwong.jschememin.type.ScmList.first(com.github.chungkwong.jschememin.type.ScmPairOrNil)", "((com.github.chungkwong.jschememin.type.ScmJavaObject) (com.github.chungkwong.jschememin.type.ScmList.first(((com.github.chungkwong.jschememin.type.ScmError) (obj)).getIrritants()))).getJavaObject()", "com.github.chungkwong.jschememin.type.ScmObject.getIrritants()"], "Fixed commit": "9170132fc09d96fcffe2704bad83e58fe2e03438", "Url": "https://api.github.com/repos/chungkwong/JSchemeMin", "Date": "2017-11-29T15:50:38Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (obj instanceof com.github.chungkwong.jschememin.type.ScmPair) obj = com.github.chungkwong.jschememin.type.ScmList.first(obj);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7494/buggy-version/src.com.github.chungkwong.jschememin.type.ScmError.java", "BodyUseAPI": ["com.github.chungkwong.jschememin.type.ScmList.first(com.github.chungkwong.jschememin.type.ScmObject)"], "Fixed commit": "9170132fc09d96fcffe2704bad83e58fe2e03438", "Url": "https://api.github.com/repos/chungkwong/JSchemeMin", "Date": "2017-11-29T15:50:38Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.processes) == null) { this.processes = processes; }else { this.processes.clear(); this.processes.addAll(processes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4659/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Batch.java", "BodyUseAPI": [], "Fixed commit": "ad5132cabe2765ea400813ddf0d7e9a7b37bd48d", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.batches) == null) { this.batches = batches; }else { this.batches.clear(); this.batches.addAll(batches); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4659/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Process.java", "BodyUseAPI": [], "Fixed commit": "ad5132cabe2765ea400813ddf0d7e9a7b37bd48d", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>1078", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rockwellcollins.atc.agree.agree.NestedDotID.getBase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (namedEl instanceof org.osate.aadl2.DataSubcomponent) { com.rockwellcollins.atc.agree.agree.NestedDotID tempId = orgId; while (!((tempId.getBase()) instanceof org.osate.aadl2.DirectedFeature)) { tempId = orgId.getSub(); } if ((((org.osate.aadl2.DirectedFeature) (tempId.getBase())).getDirection()) == (org.osate.aadl2.DirectionType.OUT)) { outputVars.add(tempStrType); } }else if ((((org.osate.aadl2.DirectedFeature) (namedEl)).getDirection()) == (org.osate.aadl2.DirectionType.OUT)) { outputVars.add(tempStrType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2351/buggy-version/fm-workbench.agree.com.rockwellcollins.atc.agree.analysis.src.com.rockwellcollins.atc.agree.analysis.AgreeAnnexEmitter.java", "BodyUseAPI": [], "Fixed commit": "f0f53810a1fc783703012a3a955218d80a868996", "Url": "https://api.github.com/repos/smaccm/smaccm", "Date": "2014-03-28T22:25:28Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!add) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6085/buggy-version/app.src.main.java.org.digitalcampus.oppia.task.ScanMediaTask.java", "BodyUseAPI": [], "Fixed commit": "51a5d3bc93cf032ffa3bfd2cc61c06944179b385", "Url": "https://api.github.com/repos/jjoseba/oppia-mobile-android", "Date": "2016-09-06T09:24:21Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["util.TimeUtil.isBeforeNow(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isBefore) { daysDiff = -daysDiff; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4868/buggy-version/src.util.TimeUtil.java", "BodyUseAPI": [], "Fixed commit": "4eb748aed99853c27abfc38ac8e9ef13e65463f5", "Url": "https://api.github.com/repos/cs2103aug2015-w14-3j/main", "Date": "2015-11-07T10:02:25Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((instance.getLocationList()) == null) { writer.writeObject(new java.util.ArrayList<org.jason.mapmaker.shared.model.Location>()); }else { writer.writeObject(new java.util.ArrayList<org.jason.mapmaker.shared.model.Location>(instance.getLocationList())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2534/buggy-version/src.main.java.org.jason.mapmaker.shared.model.ShapefileMetadata_CustomFieldSerializer.java", "BodyUseAPI": ["com.google.gwt.user.client.rpc.SerializationStreamWriter.writeObject(java.util.ArrayList<org.jason.mapmaker.shared.model.Location>)", "org.jason.mapmaker.shared.model.ShapefileMetadata.getLocationList()"], "Fixed commit": "86ed6c8bc4a42a02fb7ab71a827e1e2af63b4fbc", "Url": "https://api.github.com/repos/fergusonjason/mapmaker", "Date": "2011-09-12T17:17:48Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((instance.getLocationList()) == null) { writer.writeObject(new java.util.ArrayList<org.jason.mapmaker.shared.model.Location>()); }else { writer.writeObject(new java.util.ArrayList<org.jason.mapmaker.shared.model.Location>(instance.getLocationList())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2534/buggy-version/src.main.java.org.jason.mapmaker.shared.model.ShapefileMetadata_CustomFieldSerializer.java", "BodyUseAPI": ["org.jason.mapmaker.shared.model.ShapefileMetadata.getLocationList()", "com.google.gwt.user.client.rpc.SerializationStreamWriter.writeObject(java.util.ArrayList<org.jason.mapmaker.shared.model.Location>)"], "Fixed commit": "86ed6c8bc4a42a02fb7ab71a827e1e2af63b4fbc", "Url": "https://api.github.com/repos/fergusonjason/mapmaker", "Date": "2011-09-12T17:17:48Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getRemainingCooldown()) > 0) { lastUsed += milliseconds; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5650/buggy-version/MeteorDefense.src.com.esnefedroetem.meteordefense.model.armoryitem.AbstractArmoryItem.java", "BodyUseAPI": [], "Fixed commit": "35c725bf82630c7bcc6dfb2eda8cea53146f41d0", "Url": "https://api.github.com/repos/jacgid/MeteorDefense", "Date": "2014-05-16T10:39:43Z"},
{"Line": "=>623", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((securityMetaData.getSecurityRoleLinks()) != null) { java.util.Collection<java.lang.String> linked = securityMetaData.getSecurityRoleLinks().get(roleName); if (linked != null) { for (java.lang.String role : roles) { if (linked.contains(role)) { return true; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8007/buggy-version/ejb3.src.main.java.org.jboss.as.ejb3.component.EJBComponent.java", "BodyUseAPI": ["org.jboss.as.ejb3.security.EJBSecurityMetaData.getSecurityRoleLinks()", "securityMetaData.getSecurityRoleLinks().get(java.lang.String)"], "Fixed commit": "8f5812a279a8edfc7fed089ef4d8104ae4afe693", "Url": "https://api.github.com/repos/darranl/wildfly", "Date": "2017-03-07T03:56:38Z"},
{"Line": "=>616", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"**\".equals(roleName)) { return !(identity.isAnonymous()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8007/buggy-version/ejb3.src.main.java.org.jboss.as.ejb3.component.EJBComponent.java", "BodyUseAPI": [], "Fixed commit": "8f5812a279a8edfc7fed089ef4d8104ae4afe693", "Url": "https://api.github.com/repos/darranl/wildfly", "Date": "2017-03-07T03:56:38Z"},
{"Line": "=>620", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wildfly.security.auth.server.SecurityIdentity.getRoles(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (roles.contains(roleName)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8007/buggy-version/ejb3.src.main.java.org.jboss.as.ejb3.component.EJBComponent.java", "BodyUseAPI": [], "Fixed commit": "8f5812a279a8edfc7fed089ef4d8104ae4afe693", "Url": "https://api.github.com/repos/darranl/wildfly", "Date": "2017-03-07T03:56:38Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.llp.lunchkaki.models.Perkies.getPerkie(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (perkie.getString(TblPerkies.SEE_PROFILE).equals(\"0\")) { org.json.JSONArray array = new org.json.JSONArray(AbstractActivity.user.footer_number); new com.llp.lunchkaki.models.User().updateFooterNumber(((((((\"[\\\"\" + (array.get(0).toString())) + \"\\\",\\\"\") + ((java.lang.Integer.parseInt(array.get(1).toString())) - 1)) + \"\\\",\\\"\") + (array.get(2).toString())) + \"\\\"]\")); AbstractActivity.gif_self.setFooterNumber(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/476/buggy-version/app.src.main.java.com.llp.lunchkaki.models.Perkies.java", "BodyUseAPI": [], "Fixed commit": "d9fa0b2c993e7a69d28e1b12eca1105bfee6b151", "Url": "https://api.github.com/repos/brianfwz/lkk", "Date": "2016-05-12T10:31:54Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((minY) > 0) { minY = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8454/buggy-version/app.src.main.java.com.example.jianming.views.YImageView.java", "BodyUseAPI": [], "Fixed commit": "7b232f83ad3fe586e2785a2f0da380af84a56fd0", "Url": "https://api.github.com/repos/knightingal/android_start_demo", "Date": "2015-06-13T14:11:13Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(competition.isSubsidiary())) { results.addAll(competition.getResults()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4483/buggy-version/chilternquizleague.src.org.chilternquizleague.web.ViewServices.java", "BodyUseAPI": ["java.util.List<org.chilternquizleague.domain.Results>.addAll(competition.getResults())", "org.chilternquizleague.domain.TeamCompetition.getResults()"], "Fixed commit": "9379a97992852858320436bd7186e9dec57e042b", "Url": "https://api.github.com/repos/gumdrop/chilternquizleague", "Date": "2014-08-08T14:47:01Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3331/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "2a7c1da7496ca20f44639f274f6173f1420a7406", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-01T03:01:33Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["prod.product_image.replace(\"upload/\", ((((((\"upload/w_\" + 250) + \",h_\") + 250) + \",r_\") + 20) + \"/\")).replace(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(url.isEmpty())) com.squareup.picasso.Picasso.with(m).load(url).into(holder.image);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8518/buggy-version/app.src.main.java.com.grabandgo.consumer.Adapters.ExpandableAdapter.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(m).load(url).into(holder.image)", "com.squareup.picasso.Picasso.with(m).load(java.lang.String)"], "Fixed commit": "aa009bcf04567849661133dc96278bee503900c9", "Url": "https://api.github.com/repos/cantfindit91/GoTheOn", "Date": "2016-07-18T09:25:57Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (ref == null) { ref = ID; builder.append(constructXMLNode(ID, null, cNP)); builder.append(\"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6938/buggy-version/src.main.java.ga.coreference.main.CandidateEvaluator.java", "BodyUseAPI": [], "Fixed commit": "6201a4d7e0697464a34cbd6ef0666412331524c2", "Url": "https://api.github.com/repos/tejashs/CoreferenceResolution", "Date": "2016-11-08T04:49:30Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((picked != null) && ((movesComparator.getPerformance(picked)) > 50.0)) { org.maximachess.jdrone.learn.LearnBook.LOGGER.info(\"picked {} ({}%)\", picked.toString(), java.lang.String.format(\"%.2f\", movesComparator.getPerformance(picked))); }else if (picked != null) { org.maximachess.jdrone.learn.LearnBook.LOGGER.info(\"not picked, score too low: {} ({}%)\", picked.toString(), java.lang.String.format(\"%.2f\", movesComparator.getPerformance(picked))); picked = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7014/buggy-version/src.main.java.org.maximachess.jdrone.learn.LearnBook.java", "BodyUseAPI": ["org.maximachess.jdrone.learn.LBMove.toString()", "java.lang.String.format(java.lang.String,double)", "org.maximachess.jdrone.learn.LearnBook.MovesComparator.getPerformance(org.maximachess.jdrone.learn.LBMove)", "org.apache.logging.log4j.Logger.info(java.lang.String,picked.toString(),java.lang.String)", "org.apache.logging.log4j.Logger.info(java.lang.String,picked.toString(),java.lang.String)", "org.maximachess.jdrone.learn.LearnBook.MovesComparator.getPerformance(org.maximachess.jdrone.learn.LBMove)", "java.lang.String.format(java.lang.String,double)", "org.maximachess.jdrone.learn.LBMove.toString()"], "Fixed commit": "d78713c99f8bb058ac002b0cc0aa2192ac9b4e62", "Url": "https://api.github.com/repos/hof/jdrone", "Date": "2016-04-25T13:15:20Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (id == null) task = taskBoard.addTaskToLane(laneId, title, description, assignee); else task = taskBoard.addTaskToLane(laneId, id);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3622/buggy-version/src.main.java.be.davidopdebeeck.taskboard.api.controller.LaneController.java", "BodyUseAPI": ["be.davidopdebeeck.taskboard.service.TaskBoard.addTaskToLane(java.lang.String,java.lang.String)"], "Fixed commit": "96f942e111b1c2273c08581d4d0f408f1b643b26", "Url": "https://api.github.com/repos/DavidOpDeBeeck/taskboard", "Date": "2016-04-05T10:51:08Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(impassableRoadIds.contains(r.id))) { impassableRoadIds.add(r.id); impassableRoads.add(r); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/9192/buggy-version/OsmAnd-java.src.net.osmand.router.RoutingConfiguration.java", "BodyUseAPI": ["java.util.List<net.osmand.binary.RouteDataObject>.add(net.osmand.binary.RouteDataObject)", "gnu.trove.set.hash.TLongHashSet.add(r.id)"], "Fixed commit": "5f321bd150ba016a1e94433fa0542f9150ab738c", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2014-11-19T12:58:16Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (1 == (parts.length)) { return java.util.Collections.emptySet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1614/buggy-version/SciGraph-core.src.main.java.edu.sdsc.scigraph.owlapi.CurieUtil.java", "BodyUseAPI": [], "Fixed commit": "d9e3e7083736e2c9c4936c3fc37f772ff49393ad", "Url": "https://api.github.com/repos/SciCrunch/SciGraph", "Date": "2014-11-26T15:19:44Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.fau.cs.mad.wanthavers.common.DesireFilter.getLastDesireId()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (tmpDesireid != null) { desireFilter.setLastDesireId(tmpDesireid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3313/buggy-version/app.src.main.java.wanthavers.mad.cs.fau.de.wanthavers_android.domain.usecases.GetDesireList.java", "BodyUseAPI": ["de.fau.cs.mad.wanthavers.common.DesireFilter.setLastDesireId(java.lang.Long)"], "Fixed commit": "1349457e5a549e348445b43d7ac8f8379dcc52c1", "Url": "https://api.github.com/repos/FAU-Inf2/wanthavers-android", "Date": "2016-07-05T19:47:55Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/303/buggy-version/project.processor.w3c.xs.validation.src.main.java.org.genxdm.processor.w3c.xs.validation.impl.IdentityKey.java", "BodyUseAPI": [], "Fixed commit": "a90e133958211da6feee5d8d26d65623da8ed9be", "Url": "https://api.github.com/repos/TIBCOSoftware/genxdm", "Date": "2017-11-08T19:39:29Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCurrentMap()) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4252/buggy-version/src.me.chaseoes.tf2.GamePlayer.java", "BodyUseAPI": [], "Fixed commit": "ea12902ccb3aec7727e5d74d1589ace6397813ba", "Url": "https://api.github.com/repos/chaseoes/TF2", "Date": "2012-12-30T19:24:28Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (rssItems != null) { hello.setText(rssItems.get(0).getDescription()); }else { hello.setText(\"It's null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6291/buggy-version/FoodAtCTH.app.src.main.java.com.nielsen.simon.foodatcth.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(rssItems.get(0).getDescription())", "java.util.List<com.nielsen.simon.foodatcth.RssItem>.get(int)", "rssItems.get(0).getDescription()"], "Fixed commit": "67dbb38957cd1361ad836e8171afcb2af97c18b0", "Url": "https://api.github.com/repos/siMs0n/FoodAtCTH", "Date": "2015-06-03T21:13:16Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((logLevel) != null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6091/buggy-version/android.sdk.src.main.java.com.taobao.weex.bridge.WXParams.java", "BodyUseAPI": [], "Fixed commit": "8832cc3433acd857b7a0fad188fe410a4e1780d6", "Url": "https://api.github.com/repos/acton393/incubator-weex", "Date": "2017-04-10T08:24:11Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((needInitV8) != null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6091/buggy-version/android.sdk.src.main.java.com.taobao.weex.bridge.WXParams.java", "BodyUseAPI": [], "Fixed commit": "8832cc3433acd857b7a0fad188fe410a4e1780d6", "Url": "https://api.github.com/repos/acton393/incubator-weex", "Date": "2017-04-10T08:24:11Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCause()) instanceof org.broadleafcommerce.core.inventory.exception.InventoryUnavailableException) { throw new org.broadleafcommerce.core.inventory.exception.InventoryUnavailableException(e.getCause()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1552/buggy-version/core.broadleaf-framework.src.main.java.org.broadleafcommerce.core.order.service.OrderServiceImpl.java", "BodyUseAPI": ["org.broadleafcommerce.core.workflow.WorkflowException.getCause()"], "Fixed commit": "ae4ce3f7c8ee4c5521b833a043b2503ba0158653", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2012-10-22T16:43:33Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInverse())) { nextObjectType : for (java.util.Iterator<net.ripe.db.whois.common.rpsl.ObjectType> it = response.iterator(); it.hasNext();) { net.ripe.db.whois.common.rpsl.ObjectType objectType = it.next(); for (final net.ripe.db.whois.common.rpsl.AttributeType attribute : net.ripe.db.whois.common.rpsl.ObjectTemplate.getTemplate(objectType).getLookupAttributes()) { if (net.ripe.db.whois.query.query.AttributeMatcher.fetchableBy(attribute, this)) { continue nextObjectType; } } it.remove(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5589/buggy-version/whois-query.src.main.java.net.ripe.db.whois.query.query.Query.java", "BodyUseAPI": [], "Fixed commit": "59717d07a6986c49df0a0ff3fb1e85b85c4a4a7e", "Url": "https://api.github.com/repos/APNIC-net/whois", "Date": "2013-08-26T09:05:07Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((pokerHand.getPokerRank()) != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3829/buggy-version/src.main.java.ca.carleton.poker.service.rank.PokerRankService.java", "BodyUseAPI": [], "Fixed commit": "bf2a2a2e0a0c108324a8c772aba08951eddc4c32", "Url": "https://api.github.com/repos/michaelhum/4004-SimplisticPoker", "Date": "2015-09-21T21:51:26Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((out == null) || (logInst == null)) { throw new java.lang.NullPointerException(\"here\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8677/buggy-version/src.edu.ucla.pls.wiretap.recorders.BinaryLogger.java", "BodyUseAPI": [], "Fixed commit": "ffb385652c5a1b05e90844bd31f2350e38af07f8", "Url": "https://api.github.com/repos/ucla-pls/wiretap", "Date": "2017-02-04T00:20:20Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((message.getContent()) != null) { if ((message.getContent()) instanceof pro.zackpollard.telegrambot.api.chat.message.content.TextContent) { pro.zackpollard.telegrambot.api.chat.message.content.TextContent textContent = ((pro.zackpollard.telegrambot.api.chat.message.content.TextContent) (message.getContent())); if (textContent.getContent().equals(threadInformation)) { return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7711/buggy-version/src.main.java.me.stuntguy3000.java.redditlivebot.handler.AdminControlHandler.java", "BodyUseAPI": ["pro.zackpollard.telegrambot.api.chat.message.Message.getContent()", "pro.zackpollard.telegrambot.api.chat.message.Message.getContent()"], "Fixed commit": "f376f342e29a37e74276cf35192684f5c9b89321", "Url": "https://api.github.com/repos/stuntguy3000/RedditLiveBot", "Date": "2016-06-13T03:56:05Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((updateRecords) != null) { updateRecords.cancel(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8111/buggy-version/src.fr.neamar.summon.SummonActivity.java", "BodyUseAPI": [], "Fixed commit": "e33b19eaecd53c28db8690eeb8c0dd52d340fdb2", "Url": "https://api.github.com/repos/Neamar/Summon", "Date": "2012-11-10T20:48:03Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (($held.size()) <= 0) $outbound.sink().close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4885/buggy-version/src.main.us.exultant.ahs.thread.FuturePipe.java", "BodyUseAPI": [], "Fixed commit": "5e95dc90c40c1b56c476f3886f89e7a1ab55acbc", "Url": "https://api.github.com/repos/heavenlyhash/ahslib", "Date": "2012-09-02T21:23:12Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(item.isEmpty())) { exceptionList.append(item); exceptionList.append(\";\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3525/buggy-version/libs.boost-dpu.src.main.java.cz.cuni.mff.xrg.uv.boost.extensions.FaultTolerance.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "0bf4cbd62300a7909e8e93db495692a354c3dcd9", "Url": "https://api.github.com/repos/mff-uk/DPUs", "Date": "2015-02-10T10:43:36Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((camera) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4101/buggy-version/src.PicassoEngine.Renderer.java", "BodyUseAPI": [], "Fixed commit": "f32a7638bf112f68551449121e0d62c3d4fe7ab8", "Url": "https://api.github.com/repos/Keavon/Picasso", "Date": "2015-05-30T21:50:22Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pathname.isFile()) { return false; }else { return !(names.contains(pathname.getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4074/buggy-version/src.org.centny.jetty4a.server.api.JettyServer.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.contains(java.lang.String)", "java.io.File.getName()"], "Fixed commit": "e04790475b200868ac20ac9832b78e66cdad60ad", "Url": "https://api.github.com/repos/Centny/Jetty4A", "Date": "2013-05-26T07:00:03Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (res == 0) { return 0; }else if (res > 0) { return -1; }else { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7123/buggy-version/photoweb.src.com.backend.facer.FacerUtils.java", "BodyUseAPI": [], "Fixed commit": "596e50df0960eeec4d9ca82fbba38a8619fa6ca7", "Url": "https://api.github.com/repos/shentar/jAlbum", "Date": "2017-03-21T16:07:37Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.backend.FileInfo.getPhotoTime()", "com.backend.FileInfo.getPhotoTime()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((d1 == null) && (d2 == null)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7123/buggy-version/photoweb.src.com.backend.facer.FacerUtils.java", "BodyUseAPI": [], "Fixed commit": "596e50df0960eeec4d9ca82fbba38a8619fa6ca7", "Url": "https://api.github.com/repos/shentar/jAlbum", "Date": "2017-03-21T16:07:37Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.backend.FileInfo.getPhotoTime()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (d2 == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7123/buggy-version/photoweb.src.com.backend.facer.FacerUtils.java", "BodyUseAPI": [], "Fixed commit": "596e50df0960eeec4d9ca82fbba38a8619fa6ca7", "Url": "https://api.github.com/repos/shentar/jAlbum", "Date": "2017-03-21T16:07:37Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((repository) != null) { repository.wrap(root); issue.wrap(repository); }else { issue.wrap(root); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4099/buggy-version/src.main.java.org.kohsuke.github.GHEventPayload.java", "BodyUseAPI": [], "Fixed commit": "01b8b1034411f6b9e44c5e49849f6ae0cedc9efc", "Url": "https://api.github.com/repos/stephenc/github-api", "Date": "2015-07-06T10:07:05Z"},
{"Line": "=>637", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isRefreshing) && (!refreshing)) { finishRefreshing(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8172/buggy-version/krefresh.src.main.java.com.charry.krefresh.KRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "04f86c902ca0704037687203a3f07b5f8e625e2d", "Url": "https://api.github.com/repos/CharryLi/KRefreshLayout", "Date": "2016-05-11T10:08:12Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (value == null) { value = getParent().getVariable(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8622/buggy-version/src.main.java.jp.co.tabocom.teratermstation.model.TargetNode.java", "BodyUseAPI": [], "Fixed commit": "74cd67600db8ca77aa5f78a29b994460f3bb2ab0", "Url": "https://api.github.com/repos/turbou/TeratermStation", "Date": "2016-07-10T00:33:16Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { if ((this.category) != null) { value = this.category.getVariable(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8622/buggy-version/src.main.java.jp.co.tabocom.teratermstation.model.TargetNode.java", "BodyUseAPI": [], "Fixed commit": "74cd67600db8ca77aa5f78a29b994460f3bb2ab0", "Url": "https://api.github.com/repos/turbou/TeratermStation", "Date": "2016-07-10T00:33:16Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.lang.model.element.ExecutableElement.getParameters()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((selectorParams.size()) == 1) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/9028/buggy-version/ashigel-compiler.src.main.java.com.asakusafw.compiler.operator.processor.MasterKindOperatorAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "7e361e8557585b6bbbc1ce275843cbaac0da3d90", "Url": "https://api.github.com/repos/asakusafw/asakusafw", "Date": "2011-05-27T08:27:10Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (askCamera) { net.jejer.hipda.bean.HiSettingsHelper.getInstance().setCameraPermAsked(true); perms = new java.lang.String[]{ Manifest.permission.CAMERA }; }else if (askStorage) { perms = new java.lang.String[]{ Manifest.permission.WRITE_EXTERNAL_STORAGE }; android.widget.Toast.makeText(ctx, \"\\u9700\\u8981\\u6388\\u4e88 \\\"\\u5b58\\u50a8\\u7a7a\\u95f4\\\" \\u6743\\u9650\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5529/buggy-version/hipda.src.main.java.net.jejer.hipda.utils.UIUtils.java", "BodyUseAPI": [], "Fixed commit": "d3586da8668f437905af9080194b040ec8ee89f5", "Url": "https://api.github.com/repos/GreenSkinMonster/hipda", "Date": "2017-06-20T06:21:02Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.mkdirs()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!directoryCreated) { throw new java.io.IOException(\"Directory could not be created.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3629/buggy-version/src.ModelWrapper.src.uk.ac.ox.zoo.seeg.abraid.mp.modelwrapper.model.WorkspaceProvisionerImpl.java", "BodyUseAPI": [], "Fixed commit": "3ca4dff3fa23ad0ef9c25f6c90116de63561e4bf", "Url": "https://api.github.com/repos/SEEG-Oxford/ABRAID-MP", "Date": "2014-02-25T10:31:47Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (solutions.isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2616/buggy-version/objectmodel.AutoplayCommandQueue.java", "BodyUseAPI": [], "Fixed commit": "9e168d9d4b3ea5ac4e7f8833b287caf7c75b1384", "Url": "https://api.github.com/repos/a2g/core", "Date": "2015-05-21T13:28:31Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((content != null) && ((org.apache.commons.lang.StringUtils.isBlank(content)) == false)) { toUse = content + \"&submitted=submitted\"; }else { toUse = \"submitted=submitted\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1719/buggy-version/maid-syncher.src.main.java.pt.ist.maidSyncher.api.activeCollab.ACContext.java", "BodyUseAPI": [], "Fixed commit": "9ddcb981ef96ded84522dcaea0584033e0fa65c4", "Url": "https://api.github.com/repos/joantune/maidSyncher", "Date": "2013-05-24T19:55:23Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((preliminarObject.getComplete()) != null) && ((preliminarObject.getComplete()) == true)) { if ((org.apache.commons.lang.ObjectUtils.equals(preliminarObject.getComplete(), recentlyCreatedACTask.getComplete())) == false) { recentlyCreatedACTask = recentlyCreatedACTask.postComplete(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1719/buggy-version/maid-syncher.src.main.java.pt.ist.maidSyncher.api.activeCollab.ACTask.java", "BodyUseAPI": ["pt.ist.maidSyncher.api.activeCollab.ACTask.getComplete()", "org.apache.commons.lang.ObjectUtils.equals(java.lang.Boolean,java.lang.Boolean)"], "Fixed commit": "9ddcb981ef96ded84522dcaea0584033e0fa65c4", "Url": "https://api.github.com/repos/joantune/maidSyncher", "Date": "2013-05-24T19:55:23Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (allAI) { kill = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2146/buggy-version/Server.src.cox5529.catan.CatanGame.java", "BodyUseAPI": [], "Fixed commit": "aba466bd7d731024a1e78a2a62656be1f75ff149", "Url": "https://api.github.com/repos/cox5529/catan-multiplayer", "Date": "2017-12-09T07:03:22Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (command != null) { command.onExecute(null, sender); }else { io.github.dre2n.commons.util.messageutil.MessageUtil.sendMessage(sender, \"&cThis command does not exist!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4770/buggy-version/src.main.java.io.github.dre2n.commons.command.BRCommandExecutor.java", "BodyUseAPI": ["io.github.dre2n.commons.command.BRCommand.onExecute(<nulltype>,org.bukkit.command.CommandSender)"], "Fixed commit": "d48178f82c38fc050a7e21a4c79b3a1eb09e4bfd", "Url": "https://api.github.com/repos/DRE2N/DRECommons", "Date": "2016-03-01T20:45:16Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((headers[i].getName().equalsIgnoreCase(\"Set-Cookie\")) && (!(headers[i].getValue().startsWith(\"sessionid=\")))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/456/buggy-version/src.com.android.volley.toolbox.BasicNetwork.java", "BodyUseAPI": [], "Fixed commit": "8c552ae6d4379fc37c6941c24324782b0045b149", "Url": "https://api.github.com/repos/chicheng/Volley", "Date": "2013-11-19T02:22:13Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sig.paramCount) < 3) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6171/buggy-version/core.src.main.java.com.questdb.ql.ops.FunctionFactories.java", "BodyUseAPI": [], "Fixed commit": "79ee0fb1f1fbf8eac1ad971d551cbe04c60c2914", "Url": "https://api.github.com/repos/bluestreak01/questdb", "Date": "2016-11-24T13:43:23Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dhn.marrysocial.utils.Utils.decodeThumbnail(java.lang.String,<nulltype>,Utils.mThumbPhotoWidth)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (thumbHeader != null) { mHeaderLayoutBkg.setBackground(com.dhn.marrysocial.utils.ImageUtils.bitmapToDrawable(thumbHeader)); }else { mHeaderLayoutBkg.setBackgroundResource(R.drawable.person_default_bkg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/468/buggy-version/src.com.dhn.marrysocial.activity.ContactsInfoActivity.java", "BodyUseAPI": ["com.dhn.marrysocial.utils.ImageUtils.bitmapToDrawable(android.graphics.Bitmap)", "android.widget.RelativeLayout.setBackground(com.dhn.marrysocial.utils.ImageUtils.bitmapToDrawable(thumbHeader))"], "Fixed commit": "103f355cd4df8fcf05c87cdc14cdd8c90f3bdf83", "Url": "https://api.github.com/repos/413326885/Marry_Social", "Date": "2015-02-09T07:07:01Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (proportion > 0.31) { return (proportion - 0.1) * (GDP); }else if (proportion > 0.19) { return (proportion - 0.05) * (GDP); }else { return proportion * (GDP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2007/buggy-version/kyoto.src.main.java.uk.ac.ic.kyoto.countries.AbstractCountry.java", "BodyUseAPI": [], "Fixed commit": "8ff92b25ef6475c0baea2f9a04048e8d10bc7f16", "Url": "https://api.github.com/repos/farhanrahman/kyoto", "Date": "2012-05-31T16:54:12Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (proportion > 0.21) { result = (proportion + 0.1) * (dirtyIndustry); }else if (proportion > 0.14) { result = (proportion + 0.05) * (dirtyIndustry); }else { result = proportion * (dirtyIndustry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2007/buggy-version/kyoto.src.main.java.uk.ac.ic.kyoto.countries.AbstractCountry.java", "BodyUseAPI": [], "Fixed commit": "8ff92b25ef6475c0baea2f9a04048e8d10bc7f16", "Url": "https://api.github.com/repos/farhanrahman/kyoto", "Date": "2012-05-31T16:54:12Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.minecraftdimensions.bungeesuite.managers.WarpsManager.getWarp(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (w == null) { sender.sendMessage(Messages.PORTAL_DESTINATION_NOT_EXIST); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4493/buggy-version/src.main.java.com.minecraftdimensions.bungeesuite.managers.PortalManager.java", "BodyUseAPI": [], "Fixed commit": "fb1d5d2d2dd8b57316b95bba6e9dd88fd92032b4", "Url": "https://api.github.com/repos/Bloodsplat/BungeeSuite", "Date": "2013-10-09T06:35:47Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (activity.isComment()) { if (!(activity.getTitleId().equals(\"forum.remove-poll\"))) { if (activity.getTitleId().equals(\"forum.add-poll\")) { return org.exoplatform.social.notification.LinkProviderUtils.getOpenLink(org.exoplatform.social.notification.Utils.getActivityManager().getParentActivity(activity)); }else { return templateParams.get(\"PostLink\"); } } }else { return (org.exoplatform.commons.utils.CommonsUtils.getCurrentDomain()) + (templateParams.get(\"TopicLink\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4036/buggy-version/component.notification.src.main.java.org.exoplatform.social.notification.LinkProviderUtils.java", "BodyUseAPI": ["org.exoplatform.social.core.activity.model.ExoSocialActivity.getTitleId()", "activity.getTitleId().equals(java.lang.String)", "activity.getTitleId().equals(java.lang.String)", "org.exoplatform.social.notification.Utils.getActivityManager().getParentActivity(org.exoplatform.social.core.activity.model.ExoSocialActivity)", "org.exoplatform.social.core.activity.model.ExoSocialActivity.getTitleId()", "org.exoplatform.social.notification.LinkProviderUtils.getOpenLink(org.exoplatform.social.notification.Utils.getActivityManager().getParentActivity(activity))"], "Fixed commit": "81b626375f7ef899212d521c541cd329f53de173", "Url": "https://api.github.com/repos/exodev/social", "Date": "2016-08-24T11:33:45Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<com.opengamma.engine.function.ParameterizedFunction, com.opengamma.util.tuple.Pair<com.opengamma.engine.depgraph.DependencyNode, com.opengamma.engine.value.ValueSpecification>>.get(resolvedFunction.getFirst())", "existingNode.getSecond().compose(com.opengamma.engine.value.ValueRequirement)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(existingNode.getSecond().equals(resolvedOutput))) { com.opengamma.engine.depgraph.DependencyGraphBuilder.s_logger.debug(\"Reducing existing specification {} to {}\", existingNode, resolvedOutput); _graph.removeDependencyNode(existingNode.getFirst()); existingNode.getFirst().replaceOutputValue(existingNode.getSecond(), resolvedOutput); _graph.addDependencyNode(existingNode.getFirst()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7669/buggy-version/projects.OG-Engine.src.com.opengamma.engine.depgraph.DependencyGraphBuilder.java", "BodyUseAPI": ["com.opengamma.util.tuple.Pair<com.opengamma.engine.depgraph.DependencyNode, com.opengamma.engine.value.ValueSpecification>.getFirst()", "org.slf4j.Logger.debug(java.lang.String,com.opengamma.util.tuple.Pair<com.opengamma.engine.depgraph.DependencyNode, com.opengamma.engine.value.ValueSpecification>,com.opengamma.engine.value.ValueSpecification)", "com.opengamma.engine.depgraph.DependencyGraph.removeDependencyNode(existingNode.getFirst())", "com.opengamma.util.tuple.Pair<com.opengamma.engine.depgraph.DependencyNode, com.opengamma.engine.value.ValueSpecification>.getFirst()", "com.opengamma.util.tuple.Pair<com.opengamma.engine.depgraph.DependencyNode, com.opengamma.engine.value.ValueSpecification>.getFirst()", "com.opengamma.engine.depgraph.DependencyGraph.addDependencyNode(existingNode.getFirst())", "existingNode.getFirst().replaceOutputValue(existingNode.getSecond(),com.opengamma.engine.value.ValueSpecification)", "com.opengamma.util.tuple.Pair<com.opengamma.engine.depgraph.DependencyNode, com.opengamma.engine.value.ValueSpecification>.getSecond()"], "Fixed commit": "e51993726593c7f376c9307d9772ff85424bca70", "Url": "https://api.github.com/repos/OpenGamma/OG-Platform", "Date": "2011-07-28T13:27:29Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((stack != null) && ((stack.getItem()) instanceof wundr.endadvance.item.tool.EnderPickaxe)) { stack.addEnchantment(EnderAdvancement.DUPER, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3651/buggy-version/src.main.java.wundr.endadvance.item.tool.EnderPickaxe.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.addEnchantment(EnderAdvancement.DUPER,int)"], "Fixed commit": "722093cc7a743f3b2a78b781e57423bda5a7515a", "Url": "https://api.github.com/repos/wundrweapon/Ender-Advancement", "Date": "2017-07-02T11:56:47Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jdon.util.Debug.getLogger(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (logger.isDebugEnabled()) logger.debug(msg, t); else if (logger.isErrorEnabled()) logger.error(msg, t); else if (logger.isInfoEnabled()) logger.info(msg, t); else if (logger.isWarnEnabled()) logger.warn(msg, t); else if (logger.isFatalEnabled()) logger.fatal(msg, t); else if (logger.isTraceEnabled()) logger.trace(msg, t);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2339/buggy-version/src.com.jdon.util.Debug.java", "BodyUseAPI": ["org.apache.logging.log4j.Logger.error(java.lang.String,java.lang.Throwable)", "org.apache.logging.log4j.Logger.warn(java.lang.String,java.lang.Throwable)", "org.apache.logging.log4j.Logger.isFatalEnabled()", "org.apache.logging.log4j.Logger.isTraceEnabled()", "org.apache.logging.log4j.Logger.isErrorEnabled()", "org.apache.logging.log4j.Logger.isInfoEnabled()", "org.apache.logging.log4j.Logger.isWarnEnabled()", "org.apache.logging.log4j.Logger.info(java.lang.String,java.lang.Throwable)", "org.apache.logging.log4j.Logger.trace(java.lang.String,java.lang.Throwable)", "org.apache.logging.log4j.Logger.fatal(java.lang.String,java.lang.Throwable)", "org.apache.logging.log4j.Logger.debug(java.lang.String,java.lang.Throwable)"], "Fixed commit": "1be610469de82f5a705e9b81e0d145d8cef475b9", "Url": "https://api.github.com/repos/banq/jdonframework", "Date": "2013-03-14T06:07:32Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<com.jdon.container.interceptor.IntroduceInfo>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (introduceInfos == null) return names;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2339/buggy-version/src.com.jdon.container.interceptor.IntroduceInfoHolder.java", "BodyUseAPI": [], "Fixed commit": "1be610469de82f5a705e9b81e0d145d8cef475b9", "Url": "https://api.github.com/repos/banq/jdonframework", "Date": "2013-03-14T06:07:32Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playersIn.size()) == 1) { cleanRound = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1109/buggy-version/HandOfPoker.java", "BodyUseAPI": [], "Fixed commit": "d13793c592976a9b4e8932ce9707e2675923dde2", "Url": "https://api.github.com/repos/COMP30050DHK/PokerBot", "Date": "2017-04-21T11:05:01Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((finalMerger) != null) { finalMerger.setStopProcess(true); mergerQueue.offer(finalMerger); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4851/buggy-version/processing.src.main.java.org.apache.carbondata.processing.newflow.sort.impl.UnsafeBatchParallelReadMergeSorterImpl.java", "BodyUseAPI": [], "Fixed commit": "72235b3f12f867b78dfd769797f16bd48ed2e062", "Url": "https://api.github.com/repos/sraghunandan/carbondata-1", "Date": "2017-06-15T11:02:09Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!noBoxesSelected) { selectMachines(); current.setBackground(orange); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7193/buggy-version/src.GUI.UserGUI.java", "BodyUseAPI": [], "Fixed commit": "76bbaeb9158387ee4f75faa5b78d78e0ed920766", "Url": "https://api.github.com/repos/nhetrick/MachineShop", "Date": "2013-06-12T00:10:43Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.Integer>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (intSlotsWithoutBookedSlots == 12) { slotsWithoutBookedSlots = (intSlotsWithoutBookedSlots + \" \") + (com.strengthcoach.strengthcoach.helpers.Constants.PM); }else { slotsWithoutBookedSlots = ((intSlotsWithoutBookedSlots - 12) + \" \") + (com.strengthcoach.strengthcoach.helpers.Constants.PM); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7368/buggy-version/StrengthCoach.app.src.main.java.com.strengthcoach.strengthcoach.activities.BlockSlotActivity.java", "BodyUseAPI": [], "Fixed commit": "1e68c806155c8dfe94b3e660ae28337e0579f2a4", "Url": "https://api.github.com/repos/fitness-buddy/Fitness-Buddy-Group-Project", "Date": "2015-06-16T22:07:44Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["spSelectSlot.getSelectedItem().toString().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (selectedSlot[1].equals(Constants.PM)) { if (slotTime.equals(\"12\")) { finalSelectedSlot = slotTime; }else { int intSlot = 12 + (java.lang.Integer.valueOf(slotTime)); finalSelectedSlot = java.lang.Integer.toString(intSlot); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7368/buggy-version/StrengthCoach.app.src.main.java.com.strengthcoach.strengthcoach.activities.BlockSlotActivity.java", "BodyUseAPI": [], "Fixed commit": "1e68c806155c8dfe94b3e660ae28337e0579f2a4", "Url": "https://api.github.com/repos/fitness-buddy/Fitness-Buddy-Group-Project", "Date": "2015-06-16T22:07:44Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.strengthcoach.strengthcoach.models.BlockedSlots.getSlotTime()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((java.lang.Integer.valueOf(slot)) == 12) { finalSlot = ((java.lang.Integer.valueOf(slot)) + \" \") + (com.strengthcoach.strengthcoach.helpers.Constants.PM); }else { finalSlot = (((java.lang.Integer.valueOf(slot)) - 12) + \" \") + (com.strengthcoach.strengthcoach.helpers.Constants.PM); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7368/buggy-version/StrengthCoach.app.src.main.java.com.strengthcoach.strengthcoach.adapters.CartItemsAdapter.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)", "java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "1e68c806155c8dfe94b3e660ae28337e0579f2a4", "Url": "https://api.github.com/repos/fitness-buddy/Fitness-Buddy-Group-Project", "Date": "2015-06-16T22:07:44Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.parse.ParseUser.getParseFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (imageFile == null) { findNearbyImageView.setImageResource(R.drawable.no_user_logo); }else { imageFile.getDataInBackground(new com.parse.GetDataCallback() { public void done(byte[] data, com.parse.ParseException e) { if (e == null) { android.graphics.Bitmap bmp = android.graphics.BitmapFactory.decodeByteArray(data, 0, data.length); findNearbyImageView.setImageBitmap(bmp); }else { } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/519/buggy-version/getFit.app.src.main.java.com.gym8.findnearby.FindNearbyFragment.java", "BodyUseAPI": ["com.parse.ParseFile.getDataInBackground(com.parse.GetDataCallback)"], "Fixed commit": "a6ea2ded3f032bc8bf709c5de9853a6a27f96e6c", "Url": "https://api.github.com/repos/guttamc7/CS-490", "Date": "2015-05-03T21:29:11Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((userJSONObj.has(\"screen_name\")) && (!(userJSONObj.isNull(\"screen_name\")))) { homeTimeLineModel.setScreenName(userJSONObj.getString(\"screen_name\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5389/buggy-version/app.src.main.java.com.codepath.apps.simpletweets.activities.HomeTimeLineActivity.java", "BodyUseAPI": ["com.codepath.apps.simpletweets.models.HomeTimeLineModel.setScreenName(userJSONObj.getString(\"screen_name\"))", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "8c27bf7da595366227dff6ce5fdc76447e1c6364", "Url": "https://api.github.com/repos/ksridhar3/SimpleTweets", "Date": "2015-12-12T10:02:24Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((userJSONObj.has(\"name\")) && (!(userJSONObj.isNull(\"name\")))) { homeTimeLineModel.setUserName(userJSONObj.getString(\"name\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5389/buggy-version/app.src.main.java.com.codepath.apps.simpletweets.activities.HomeTimeLineActivity.java", "BodyUseAPI": ["com.codepath.apps.simpletweets.models.HomeTimeLineModel.setUserName(userJSONObj.getString(\"name\"))", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "8c27bf7da595366227dff6ce5fdc76447e1c6364", "Url": "https://api.github.com/repos/ksridhar3/SimpleTweets", "Date": "2015-12-12T10:02:24Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.twu.biblioteca.Customer.checkAvailableBooks()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (books.isEmpty()) { presenter.displayMessage(Message.NO_BOOKS); }else { presenter.displayItemsAsMenuOptions(books); int chosenBookNumber = presenter.getUserInput(books.size()); com.twu.biblioteca.Book selectedBook = books.get((chosenBookNumber - 1)); com.twu.biblioteca.Message checkoutResult = customer.checkout(selectedBook); presenter.displayMessage(checkoutResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5206/buggy-version/src.com.twu.biblioteca.CheckoutOption.java", "BodyUseAPI": ["java.util.List<com.twu.biblioteca.Book>.size()", "com.twu.biblioteca.Presenter.displayItemsAsMenuOptions(java.util.List<com.twu.biblioteca.Book>)", "java.util.List<com.twu.biblioteca.Book>.get(int)", "com.twu.biblioteca.Presenter.getUserInput(books.size())"], "Fixed commit": "5f8b0e55795da069081dfd578e4e0e1adf7b03df", "Url": "https://api.github.com/repos/cristianivascu/twu-biblioteca-cristian", "Date": "2015-02-21T18:25:00Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (groups != null) { io.hops.security.UsersGroups.cached.put(user, groups); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5602/buggy-version/hadoop-common-project.hadoop-common.src.main.java.io.hops.security.UsersGroups.java", "BodyUseAPI": ["com.googlecode.concurrentlinkedhashmap.ConcurrentLinkedHashMap<java.lang.String, java.util.List<java.lang.String>>.put(java.lang.String,java.util.List<java.lang.String>)"], "Fixed commit": "9ea6589e78213e23c44950249663aa081a8d5ae3", "Url": "https://api.github.com/repos/maismail/hops", "Date": "2015-10-06T15:13:42Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dayNumber > 0) { details = com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter.mMonthRepeatByDayOfWeekStrs[weekday][(dayNumber - 1)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8417/buggy-version/library.src.main.java.com.codetroopers.betterpickers.recurrencepicker.EventRecurrenceFormatter.java", "BodyUseAPI": [], "Fixed commit": "eafc6504bc7b416e1c1991c193c0171466885dfa", "Url": "https://api.github.com/repos/carrizo/android-betterpickers", "Date": "2017-12-15T05:02:58Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ws.travel.ItineraryPool.getItinerary(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (itinerary.getStatus().equals(\"CONFIRMED\")) { return javax.ws.rs.core.Response.status(Status.NOT_ACCEPTABLE).entity(ws.travel.HotelInfoResource.ITINERARY_BOOKED_ALREADY).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7381/buggy-version/TravelGoodREST.src.java.ws.travel.HotelInfoResource.java", "BodyUseAPI": [], "Fixed commit": "95ab3ffe434350fdca6dcb4de0b0f1f1449e5d8f", "Url": "https://api.github.com/repos/ogzd/webservices-project", "Date": "2014-11-24T15:36:47Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ws.travel.ItineraryPool.getItinerary(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (itinerary.getStatus().equals(\"CANCELLED\")) { return javax.ws.rs.core.Response.status(Status.NOT_ACCEPTABLE).entity(ws.travel.HotelInfoResource.ITINERARY_CANCELLED_ALREADY).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7381/buggy-version/TravelGoodREST.src.java.ws.travel.HotelInfoResource.java", "BodyUseAPI": [], "Fixed commit": "95ab3ffe434350fdca6dcb4de0b0f1f1449e5d8f", "Url": "https://api.github.com/repos/ogzd/webservices-project", "Date": "2014-11-24T15:36:47Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ws.travel.ItineraryPool.getItinerary(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (itinerary == null) { return javax.ws.rs.core.Response.status(Status.NOT_FOUND).entity(ws.travel.HotelInfoResource.ITINERARY_NOT_FOUND).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7381/buggy-version/TravelGoodREST.src.java.ws.travel.HotelInfoResource.java", "BodyUseAPI": [], "Fixed commit": "95ab3ffe434350fdca6dcb4de0b0f1f1449e5d8f", "Url": "https://api.github.com/repos/ogzd/webservices-project", "Date": "2014-11-24T15:36:47Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((list1.size()) == 0) || ((list2.size()) == 0)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1110/buggy-version/JaMoPPCartridge.org.splevo.jamopp.algorithm.clones.baxtor.src.org.splevo.jamopp.algorithm.clones.baxtor.CloneDetector.java", "BodyUseAPI": [], "Fixed commit": "a6ffc2aef4a8c38ba6e53be8bdb029d33ee8c6da", "Url": "https://api.github.com/repos/kopl/SPLevo", "Date": "2014-09-30T22:18:16Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((commentable1 == null) || (commentable2 == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1110/buggy-version/JaMoPPCartridge.org.splevo.jamopp.algorithm.clones.baxtor.src.org.splevo.jamopp.algorithm.clones.baxtor.CloneDetector.java", "BodyUseAPI": [], "Fixed commit": "a6ffc2aef4a8c38ba6e53be8bdb029d33ee8c6da", "Url": "https://api.github.com/repos/kopl/SPLevo", "Date": "2014-09-30T22:18:16Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list1 == null) || (list2 == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1110/buggy-version/JaMoPPCartridge.org.splevo.jamopp.algorithm.clones.baxtor.src.org.splevo.jamopp.algorithm.clones.baxtor.CloneDetector.java", "BodyUseAPI": [], "Fixed commit": "a6ffc2aef4a8c38ba6e53be8bdb029d33ee8c6da", "Url": "https://api.github.com/repos/kopl/SPLevo", "Date": "2014-09-30T22:18:16Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((alphabet2[scanAlpha]) == 'J') { alphabet2[scanAlpha] = 'I'; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3702/buggy-version/classical_encryption_schemes.playfair_cipher.playfair.java", "BodyUseAPI": [], "Fixed commit": "ff9529dbf9bcf11915de2a6cf94d832787c3ad74", "Url": "https://api.github.com/repos/JeremyBarthelemy/OpenSource_Cryptography", "Date": "2013-12-24T13:35:49Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["interactionVO.getClass().getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((interactionType.compareToIgnoreCase(\"dilmaj.shared.LikeComposite\")) == 0) { java.lang.String un = interactionVO.getUser(); if (username.equals(un)) return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3886/buggy-version/src.dilmaj.server.InteractionServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "7afecbd7a3057c818e8bda4bef4baf98a098efe0", "Url": "https://api.github.com/repos/sohale/dilmajtemp", "Date": "2011-08-15T18:17:36Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.user.getHolidays().determineKindOf(org.joda.time.DateTime)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (kindOf == (de.wk.date.WKDateTime.KindOfDay.WEEK)) { de.wk.date.holiday.VariableHoliday variableHoliday = new de.wk.date.holiday.VariableHoliday(\"must be holiday\", dateTime); this.user.getHolidays().add(variableHoliday); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/501/buggy-version/src.main.java.de.wk.date.holiday.HolidayCalculator.java", "BodyUseAPI": [], "Fixed commit": "bec472355748bf3a9f6098dff21948e015483ed9", "Url": "https://api.github.com/repos/swillrich/wk", "Date": "2015-08-04T19:21:12Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(classNames.contains(className))) { classNames.add(className); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3626/buggy-version/processor.src.main.java.com.eqot.xray.processor.XrayProcessor.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "134bf7477e24aad67cdeddb00e23843fb32a428d", "Url": "https://api.github.com/repos/eqot/xray", "Date": "2016-09-14T13:40:45Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ent.boundingBox.expand((expansion + (ent.width)),(expansion + (ent.ySize)),(expansion + (ent.width)))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((aabb.isVecInside(origin)) || (aabb.isVecInside(end))) return new net.minecraft.util.MovingObjectPosition(ent, end);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3180/buggy-version/src.main.java.io.darkcraft.darkcore.mod.helpers.RaytraceHelper.java", "BodyUseAPI": [], "Fixed commit": "fa8a69a4d1ae1f001ac49bec663d3f2f65181a40", "Url": "https://api.github.com/repos/DarkholmeTenk/Darkcore", "Date": "2016-06-20T17:06:27Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7266/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "e82e77410ce60c967d1b7aec5a7d7c8fb4d579fd", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-11T03:01:13Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.provider.Settings.canDrawOverlays(getApplicationContext())) { start(); }else { android.widget.Toast.makeText(getApplicationContext(), \"Please permit drawing over apps.\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7243/buggy-version/app.src.main.java.com.idoideas.xoutof10.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f7c1bf23772f9c4b0bca4bc6a093a063498fcafa", "Url": "https://api.github.com/repos/idoideas/XOutOf10", "Date": "2017-09-17T23:52:54Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (timerTaskDown)) { timerTaskDown.cancel(); timerForKeyDown.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3018/buggy-version/app.src.main.java.com.sony.tv.app.atsc3receiver1_0.PlayerActivity.java", "BodyUseAPI": [], "Fixed commit": "f6ee2ce7e8b2522ca83a3d41cd89effa1f1ee8a0", "Url": "https://api.github.com/repos/xhamc/ATSC3RCVR", "Date": "2017-04-19T18:21:18Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (timerTaskUp)) { timerTaskUp.cancel(); timerForKeyUp.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3018/buggy-version/app.src.main.java.com.sony.tv.app.atsc3receiver1_0.PlayerActivity.java", "BodyUseAPI": [], "Fixed commit": "f6ee2ce7e8b2522ca83a3d41cd89effa1f1ee8a0", "Url": "https://api.github.com/repos/xhamc/ATSC3RCVR", "Date": "2017-04-19T18:21:18Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((colorCounter) >= 0) colorCounter -= delta * (game.tile.arena.Game.FPS);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1887/buggy-version/core.src.game.tile.arena.entity.Entity.java", "BodyUseAPI": [], "Fixed commit": "d36c9e8047057b587db8af27f737f51225db7e99", "Url": "https://api.github.com/repos/anubiann00b/TileArena", "Date": "2014-11-02T15:12:42Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((curLevel) < (levelCount)) { bLevels[i].setOnClickListener(this); bLevels[i].setBackgroundColor(getResources().getColor(R.color.crate_maze_orange)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3500/buggy-version/app.src.main.java.com.cratemaze.kark.cratemaze.SelectionActivity.java", "BodyUseAPI": [], "Fixed commit": "89a713da939c2696f219cbf3d62f762c6e621bcf", "Url": "https://api.github.com/repos/luxamy/CrateMaze", "Date": "2016-12-14T07:31:47Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_image) != null) { home.setImage(_image); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/226/buggy-version/src.nl.rootdev.android.kookjijclient2.ui.frames.RecipieFrame.java", "BodyUseAPI": [], "Fixed commit": "765470242a3e1565cbd4ed67efb3cb8e5cf6a848", "Url": "https://api.github.com/repos/mpdroog/android-kookjij", "Date": "2012-12-28T13:27:42Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((row) == null) { try { nextMessage(); } catch (com.metamx.common.parsers.ParseException e) { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8145/buggy-version/extensions-contrib.kafka-eight-simpleConsumer.src.main.java.io.druid.firehose.kafka.KafkaEightSimpleConsumerFirehoseFactory.java", "BodyUseAPI": [], "Fixed commit": "db656c5a88d3c548ce60227905e881413d8eea5f", "Url": "https://api.github.com/repos/jdye64/druid", "Date": "2017-04-18T18:23:02Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hanuor.onyx.helper.ClarifaiClient.recognize(com.hanuor.onyx.helper.RecognitionRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((results.size()) != 0) { for (com.hanuor.onyx.helper.Tag tag : results.get(0).getTags()) { probableTags.add(tag.getName()); } return probableTags; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8259/buggy-version/onyx.src.main.java.com.hanuor.onyx.hub.Tags.java", "BodyUseAPI": ["results.get(0).getTags()", "java.util.List<com.hanuor.onyx.helper.RecognitionResult>.get(int)"], "Fixed commit": "90a489c1087e177aac71b66f6bd17bdd4c8682b7", "Url": "https://api.github.com/repos/hanuor/onyx", "Date": "2016-08-10T07:46:56Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hanuor.onyx.helper.ClarifaiClient.recognize(com.hanuor.onyx.helper.RecognitionRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((results.size()) != 0) { for (com.hanuor.onyx.helper.Tag tag : results.get(0).getTags()) { probableTags.add(tag.getName()); } return probableTags; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8259/buggy-version/onyx.src.main.java.com.hanuor.onyx.hub.Tags.java", "BodyUseAPI": ["java.util.List<com.hanuor.onyx.helper.RecognitionResult>.get(int)", "results.get(0).getTags()"], "Fixed commit": "90a489c1087e177aac71b66f6bd17bdd4c8682b7", "Url": "https://api.github.com/repos/hanuor/onyx", "Date": "2016-08-10T07:46:56Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedImport != null) && (!(selectedImport.trim().isEmpty()))) { loadParameters(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2100/buggy-version/controller.src.main.java.dk.statsbiblioteket.doms.gui.CreateNewRecordBean.java", "BodyUseAPI": [], "Fixed commit": "1ebb4ad69c1aae836f92558725d2dc8ae44e4cba", "Url": "https://api.github.com/repos/statsbiblioteket/doms-gui", "Date": "2012-09-20T14:15:22Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((world.provider) instanceof micdoodle8.mods.galacticraft.api.world.IExitHeight) { if (((((micdoodle8.mods.galacticraft.api.world.IExitHeight) (world.provider)).getYCoordinateToTeleport()) - 10) <= (spawnPos.y)) { spawnPos.y = (((micdoodle8.mods.galacticraft.api.world.IExitHeight) (world.provider)).getYCoordinateToTeleport()) - 10; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/99/buggy-version/src.main.java.de.katzenpapst.amunra.ShuttleTeleportHelper.java", "BodyUseAPI": ["((micdoodle8.mods.galacticraft.api.world.IExitHeight) (world.provider)).getYCoordinateToTeleport()", "((micdoodle8.mods.galacticraft.api.world.IExitHeight) (world.provider)).getYCoordinateToTeleport()"], "Fixed commit": "3ccba216e6fb3f72db386299fc5c5958f6765bb8", "Url": "https://api.github.com/repos/katzenpapst/amunra", "Date": "2016-12-29T00:34:55Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (subjectsNotificationsJSONObject.has(listDataHeader.get(i))) { org.json.JSONArray iSubjectNotificationsJSONArray = subjectsNotificationsJSONObject.getJSONArray(listDataHeader.get(i)); for (int j = 0; j < (iSubjectNotificationsJSONArray.length()); j++) { org.json.JSONObject subjectJSONObject = iSubjectNotificationsJSONArray.getJSONObject(j); java.lang.String title = subjectJSONObject.getString(\"title\"); dataChild.add(title); } listDataChild.put(listDataHeader.get(i), dataChild); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4537/buggy-version/app.src.main.java.com.upc.fib.racopocket.NotificationsMainMenu.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "org.json.JSONObject.getJSONArray(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.put(java.lang.String,java.util.List<java.lang.String>)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "2c1205298489561e81687cd3a56cc51c2836e664", "Url": "https://api.github.com/repos/JosepRivaille/RacoPocket", "Date": "2016-08-30T14:22:33Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (panel.PlayingPanel.getInstance().getNeedSwitch()) { frame.MainFrame.getInstance().SwitchPanel(\"client\"); if ((panel.PlayingPanel.getInstance().getStageBGM()) != null) { panel.PlayingPanel.getInstance().getStageBGM().stop(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1811/buggy-version/src.littletyper.SocketPackage.java", "BodyUseAPI": [], "Fixed commit": "94513cf9246103d19a2edde4dd31c2a89d0654b4", "Url": "https://api.github.com/repos/bruce30262/LittleTyper", "Date": "2014-05-27T15:12:08Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (panel.PlayingPanel.getInstance().getNeedSwitch()) { frame.MainFrame.getInstance().SwitchPanel(\"host\"); if ((panel.PlayingPanel.getInstance().getStageBGM()) != null) { panel.PlayingPanel.getInstance().getStageBGM().stop(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1811/buggy-version/src.littletyper.SocketPackage.java", "BodyUseAPI": [], "Fixed commit": "94513cf9246103d19a2edde4dd31c2a89d0654b4", "Url": "https://api.github.com/repos/bruce30262/LittleTyper", "Date": "2014-05-27T15:12:08Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4557/buggy-version/src.net.slipcor.pvparena.arena.ArenaClass.java", "BodyUseAPI": [], "Fixed commit": "d74bc9b946d0acd32114223cd7580a4e5759f11f", "Url": "https://api.github.com/repos/slipcor/pvparena", "Date": "2017-02-07T00:52:18Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arena.getArenaConfig().getBoolean(CFG.USES_DEATHMESSAGES)) || (arena.getArenaConfig().getBoolean(CFG.USES_DEATHMESSAGESCUSTOM))) { event.setDeathMessage(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4557/buggy-version/src.net.slipcor.pvparena.classes.PACheck.java", "BodyUseAPI": [], "Fixed commit": "d74bc9b946d0acd32114223cd7580a4e5759f11f", "Url": "https://api.github.com/repos/slipcor/pvparena", "Date": "2017-02-07T00:52:18Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defaultGUI) != null) ps.setString(((\"principal_\" + (this.getInfoGluePrincipal().getName())) + \"_defaultGUI\"), defaultGUI);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8493/buggy-version/src.java.org.infoglue.cms.applications.managementtool.actions.UpdateMySettingsAction.java", "BodyUseAPI": [], "Fixed commit": "2e5488f1db6d76dcedf42b61f10603ffabcce4a7", "Url": "https://api.github.com/repos/stenbacka/infoglue", "Date": "2013-06-26T05:57:20Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((theme) != null) ps.setString(((\"principal_\" + (this.getInfoGluePrincipal().getName())) + \"_theme\"), theme);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8493/buggy-version/src.java.org.infoglue.cms.applications.managementtool.actions.UpdateMySettingsAction.java", "BodyUseAPI": [], "Fixed commit": "2e5488f1db6d76dcedf42b61f10603ffabcce4a7", "Url": "https://api.github.com/repos/stenbacka/infoglue", "Date": "2013-06-26T05:57:20Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((toolbarVariant) != null) ps.setString(((\"principal_\" + (this.getInfoGluePrincipal().getName())) + \"_toolbarVariant\"), toolbarVariant);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8493/buggy-version/src.java.org.infoglue.cms.applications.managementtool.actions.UpdateMySettingsAction.java", "BodyUseAPI": [], "Fixed commit": "2e5488f1db6d76dcedf42b61f10603ffabcce4a7", "Url": "https://api.github.com/repos/stenbacka/infoglue", "Date": "2013-06-26T05:57:20Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((languageCode) != null) ps.setString(((\"principal_\" + (this.getInfoGluePrincipal().getName())) + \"_languageCode\"), languageCode);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8493/buggy-version/src.java.org.infoglue.cms.applications.managementtool.actions.UpdateMySettingsAction.java", "BodyUseAPI": [], "Fixed commit": "2e5488f1db6d76dcedf42b61f10603ffabcce4a7", "Url": "https://api.github.com/repos/stenbacka/infoglue", "Date": "2013-06-26T05:57:20Z"},
{"Line": "=>576", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((n.getMaturityDate()) == null) { java.lang.System.out.println((((((((((((((((((\"UPDATE Note SET \" + \"title = '\") + (n.getTitle())) + \"',\") + \"subtitle = '\") + (n.getSubTitle())) + \"',\") + \"content = '\") + (n.getText())) + \"',\") + \"maturity = \") + (n.getMaturityDate())) + \",\") + \"modificationDate = '\") + (n.getModificationDate())) + \"' \") + \" WHERE noteId=\") + (n.getId()))); stmt.executeUpdate((((((((((((((((((\"UPDATE Note SET \" + \"title = '\") + (n.getTitle())) + \"',\") + \"subtitle = '\") + (n.getSubTitle())) + \"',\") + \"content = '\") + (n.getText())) + \"',\") + \"maturity = \") + (n.getMaturityDate())) + \",\") + \"modificationDate = '\") + (n.getModificationDate())) + \"' \") + \" WHERE noteId=\") + (n.getId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8745/buggy-version/noteit.src.de.hdm.itprojekt.noteit.server.db.NoteMapper.java", "BodyUseAPI": ["de.hdm.itprojekt.noteit.shared.bo.Note.getId()", "de.hdm.itprojekt.noteit.shared.bo.Note.getText()", "de.hdm.itprojekt.noteit.shared.bo.Note.getMaturityDate()", "de.hdm.itprojekt.noteit.shared.bo.Note.getModificationDate()", "de.hdm.itprojekt.noteit.shared.bo.Note.getMaturityDate()", "de.hdm.itprojekt.noteit.shared.bo.Note.getTitle()", "de.hdm.itprojekt.noteit.shared.bo.Note.getSubTitle()", "de.hdm.itprojekt.noteit.shared.bo.Note.getText()", "de.hdm.itprojekt.noteit.shared.bo.Note.getSubTitle()", "java.sql.Statement.executeUpdate((((((((((((((((((\"UPDATE Note SET \" + \"title = '\") + (n.getTitle())) + \"',\") + \"subtitle = '\") + (n.getSubTitle())) + \"',\") + \"content = '\") + (n.getText())) + \"',\") + \"maturity = \") + (n.getMaturityDate())) + \",\") + \"modificationDate = '\") + (n.getModificationDate())) + \"' \") + \" WHERE noteId=\") + (n.getId())))", "de.hdm.itprojekt.noteit.shared.bo.Note.getTitle()", "de.hdm.itprojekt.noteit.shared.bo.Note.getId()", "de.hdm.itprojekt.noteit.shared.bo.Note.getModificationDate()", "java.io.PrintStream.println((((((((((((((((((\"UPDATE Note SET \" + \"title = '\") + (n.getTitle())) + \"',\") + \"subtitle = '\") + (n.getSubTitle())) + \"',\") + \"content = '\") + (n.getText())) + \"',\") + \"maturity = \") + (n.getMaturityDate())) + \",\") + \"modificationDate = '\") + (n.getModificationDate())) + \"' \") + \" WHERE noteId=\") + (n.getId())))"], "Fixed commit": "5dd9d27e8ca1d16a53c25d927a3006b94bd50865", "Url": "https://api.github.com/repos/ChristianUlrichRoth/itprojektws1617-noteit", "Date": "2017-01-05T11:26:41Z"},
{"Line": "=>533", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((n.getMaturityDate()) != null) { java.lang.System.out.println((((((((((((((((((\"UPDATE Note SET \" + \"title = '\") + (n.getTitle())) + \"',\") + \"subtitle = '\") + (n.getSubTitle())) + \"',\") + \"content = '\") + (n.getText())) + \"',\") + \"maturity = '\") + (n.getMaturityDate())) + \"',\") + \"modificationDate = '\") + (n.getModificationDate())) + \"' \") + \" WHERE noteId=\") + (n.getId()))); stmt.executeUpdate((((((((((((((((((\"UPDATE Note SET \" + \"title = '\") + (n.getTitle())) + \"',\") + \"subtitle = '\") + (n.getSubTitle())) + \"',\") + \"content = '\") + (n.getText())) + \"',\") + \"maturity = '\") + (n.getMaturityDate())) + \"',\") + \"modificationDate = '\") + (n.getModificationDate())) + \"' \") + \" WHERE noteId=\") + (n.getId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8745/buggy-version/noteit.src.de.hdm.itprojekt.noteit.server.db.NoteMapper.java", "BodyUseAPI": ["de.hdm.itprojekt.noteit.shared.bo.Note.getId()", "de.hdm.itprojekt.noteit.shared.bo.Note.getModificationDate()", "de.hdm.itprojekt.noteit.shared.bo.Note.getSubTitle()", "de.hdm.itprojekt.noteit.shared.bo.Note.getMaturityDate()", "de.hdm.itprojekt.noteit.shared.bo.Note.getText()", "de.hdm.itprojekt.noteit.shared.bo.Note.getSubTitle()", "de.hdm.itprojekt.noteit.shared.bo.Note.getModificationDate()", "de.hdm.itprojekt.noteit.shared.bo.Note.getTitle()", "de.hdm.itprojekt.noteit.shared.bo.Note.getMaturityDate()", "de.hdm.itprojekt.noteit.shared.bo.Note.getTitle()", "java.io.PrintStream.println((((((((((((((((((\"UPDATE Note SET \" + \"title = '\") + (n.getTitle())) + \"',\") + \"subtitle = '\") + (n.getSubTitle())) + \"',\") + \"content = '\") + (n.getText())) + \"',\") + \"maturity = '\") + (n.getMaturityDate())) + \"',\") + \"modificationDate = '\") + (n.getModificationDate())) + \"' \") + \" WHERE noteId=\") + (n.getId())))", "java.sql.Statement.executeUpdate((((((((((((((((((\"UPDATE Note SET \" + \"title = '\") + (n.getTitle())) + \"',\") + \"subtitle = '\") + (n.getSubTitle())) + \"',\") + \"content = '\") + (n.getText())) + \"',\") + \"maturity = '\") + (n.getMaturityDate())) + \"',\") + \"modificationDate = '\") + (n.getModificationDate())) + \"' \") + \" WHERE noteId=\") + (n.getId())))", "de.hdm.itprojekt.noteit.shared.bo.Note.getText()", "de.hdm.itprojekt.noteit.shared.bo.Note.getId()"], "Fixed commit": "5dd9d27e8ca1d16a53c25d927a3006b94bd50865", "Url": "https://api.github.com/repos/ChristianUlrichRoth/itprojektws1617-noteit", "Date": "2017-01-05T11:26:41Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rs.next()) { n.setId(((rs.getInt(\"maxId\")) + 1)); stmt = con.createStatement(); if ((n.getMaturityDate()) != null) { java.lang.System.out.println((((((((((((((((((\"INSERT INTO Note (noteId, title, subtitle, content, maturity, creationDate, User_userId, Notebook_notebookId) \" + \"VALUES ('\") + (n.getId())) + \"', '\") + (n.getTitle())) + \"', '\") + (n.getSubTitle())) + \"', '\") + (n.getText())) + \"', '\") + (n.getMaturityDate())) + \"', '\") + (n.getCreationDate())) + \"', '\") + (n.getUserId())) + \"', '\") + (n.getNotebookId())) + \"');\")); stmt.executeUpdate((((((((((((((((((\"INSERT INTO Note (noteId, title, subtitle, content, maturity, creationDate, User_userId, Notebook_notebookId) \" + \"VALUES ('\") + (n.getId())) + \"', '\") + (n.getTitle())) + \"', '\") + (n.getSubTitle())) + \"', '\") + (n.getText())) + \"', '\") + (n.getMaturityDate())) + \"', '\") + (n.getCreationDate())) + \"', '\") + (n.getUserId())) + \"', '\") + (n.getNotebookId())) + \"');\")); } if ((n.getMaturityDate()) == null) { java.lang.System.out.println((((((((((((((((((\"INSERT INTO Note (noteId, title, subtitle, content, maturity, creationDate, User_userId, Notebook_notebookId) \" + \"VALUES ('\") + (n.getId())) + \"', '\") + (n.getTitle())) + \"', '\") + (n.getSubTitle())) + \"', '\") + (n.getText())) + \"', \") + (n.getMaturityDate())) + \", '\") + (n.getCreationDate())) + \"', '\") + (n.getUserId())) + \"', '\") + (n.getNotebookId())) + \"');\")); stmt.executeUpdate((((((((((((((((((\"INSERT INTO Note (noteId, title, subtitle, content, maturity, creationDate, User_userId, Notebook_notebookId) \" + \"VALUES ('\") + (n.getId())) + \"', '\") + (n.getTitle())) + \"', '\") + (n.getSubTitle())) + \"', '\") + (n.getText())) + \"', \") + (n.getMaturityDate())) + \", '\") + (n.getCreationDate())) + \"', '\") + (n.getUserId())) + \"', '\") + (n.getNotebookId())) + \"');\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8745/buggy-version/noteit.src.de.hdm.itprojekt.noteit.server.db.NoteMapper.java", "BodyUseAPI": ["de.hdm.itprojekt.noteit.shared.bo.Note.setId(int)", "java.sql.ResultSet.getInt(java.lang.String)"], "Fixed commit": "5dd9d27e8ca1d16a53c25d927a3006b94bd50865", "Url": "https://api.github.com/repos/ChristianUlrichRoth/itprojektws1617-noteit", "Date": "2017-01-05T11:26:41Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (io.fabric8.utils.Strings.isNullOrBlank(metadata.getName())) { metadata.setName(project.getArtifactId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6197/buggy-version/plugin.src.main.java.io.fabric8.maven.plugin.ResourceMojo.java", "BodyUseAPI": ["io.fabric8.maven.plugin.ObjectMeta.setName(project.getArtifactId())"], "Fixed commit": "14cccd00b7134fc61825a6f9847051bc3932dcd0", "Url": "https://api.github.com/repos/jstrachan/fabric8-maven-plugin", "Date": "2016-05-24T14:55:33Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.fabric8.maven.plugin.HasMetadata.getMetadata()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (metadata == null) { metadata = new io.fabric8.maven.plugin.ObjectMeta(); hasMeta.setMetadata(metadata); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6197/buggy-version/plugin.src.main.java.io.fabric8.maven.plugin.ResourceMojo.java", "BodyUseAPI": [], "Fixed commit": "14cccd00b7134fc61825a6f9847051bc3932dcd0", "Url": "https://api.github.com/repos/jstrachan/fabric8-maven-plugin", "Date": "2016-05-24T14:55:33Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(pass.getText().equals(\"\"))) { com.nekocraft.launcher.LoginFrame.savepwd.setSelected(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8566/buggy-version/src.main.java.com.nekocraft.launcher.LoginFrame.java", "BodyUseAPI": [], "Fixed commit": "53b4fa070005c888c19fb334648c2f245ba948cc", "Url": "https://api.github.com/repos/Nekocraft/NekoLauncher", "Date": "2013-07-03T11:50:39Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (localSelector.isTokenAware()) { replicationFactor.set(calculateReplicationFactor(allHostTokens)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7174/buggy-version/dyno-core.src.main.java.com.netflix.dyno.connectionpool.impl.lb.HostSelectionWithFallback.java", "BodyUseAPI": [], "Fixed commit": "cdae8e66b65fe6bcdd6158af2a290cdc15dc5edc", "Url": "https://api.github.com/repos/Netflix/dyno", "Date": "2016-05-20T16:36:11Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(createdEventListeners.contains(listener))) { createdEventListeners.add(listener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3407/buggy-version/src.main.java.com.globi.infa.generator.AbstractGenerationStrategy.java", "BodyUseAPI": ["java.util.List<com.globi.infa.generator.WorkflowCreatedEventListener>.add(com.globi.infa.generator.WorkflowCreatedEventListener)"], "Fixed commit": "83ed671eff36c9544a754a1c12d5a304ae44f41f", "Url": "https://api.github.com/repos/girishla/globi-admin", "Date": "2017-05-31T10:01:35Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (!((authenticationToken == null) || (authenticationToken == \"\"))) { Configuration.Database.getInstance().ExecuteUpdate(((((\"UPDATE `accounts` SET `authToken` = '\" + authenticationToken) + \"', `authTokenCreated` = CURRENT_TIMESTAMP WHERE `username` = '\") + username) + \"';\"), new java.util.ArrayList<java.lang.String>()); }else { this.returnStatus(response, new ApiServer.Status.IllegalArgumentStatus(null)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4555/buggy-version/src.main.java.ApiServer.Resource.AuthenticateResource.java", "BodyUseAPI": ["Configuration.Database.getInstance().ExecuteUpdate(java.lang.String,java.util.ArrayList<java.lang.String>)"], "Fixed commit": "1f61bb3e8f533c411920b6bba6f387f4bc6573aa", "Url": "https://api.github.com/repos/ThomasMulder/dinnermanserver", "Date": "2016-03-22T09:50:12Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(topic.hasNext())) { node.getMatchedClients().add(identifier); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6068/buggy-version/src.main.java.io.dovakinmq.cache.SubscriptionTree.java", "BodyUseAPI": [], "Fixed commit": "00cc5046d24ee1822ab441a4e859e9583453aa7f", "Url": "https://api.github.com/repos/Dovakin-IO/DovakinMQ", "Date": "2017-08-25T15:17:32Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ednovo.gooru.application.client.gin.AppClientFactory.getPlaceManager().getRequestParameter(UrlNavigationTokens.STUDENT_CLASSPAGE_COURSE_ID,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (classGooruOid != null) { getView().setContentVisiblity(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/9176/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.classpage.studentclassview.learningmap.StudentClassLearningMapPresenter.java", "BodyUseAPI": [], "Fixed commit": "eac817ff3950549b501123debf9c61b53e352620", "Url": "https://api.github.com/repos/mitraj/Gooru-Web", "Date": "2015-08-28T13:07:28Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stonecraft.datastore.interaction.Query.getSelectionArgs()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((listArgs != null) && (!(listArgs.isEmpty()))) { args = listArgs.toArray(new java.lang.String[listArgs.size()]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4004/buggy-version/stonecraft-orm.src.main.java.com.stonecraft.datastore.AndroidDBConnection.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.toArray(java.lang.String[])"], "Fixed commit": "786bc239d060a127c772074f278294d7be39a0f1", "Url": "https://api.github.com/repos/stimsoni9/Stonecraft-Datastore", "Date": "2016-10-28T01:02:57Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myQuery) instanceof com.stonecraft.datastore.interaction.Query) { data = connector.query(((com.stonecraft.datastore.interaction.Query) (myQuery))); return ((T[]) (parseQuery(((com.stonecraft.datastore.interaction.Query) (myQuery)), data, classOfT))); }else { throw new com.stonecraft.datastore.exceptions.DatabaseException((((((\"Unknown statement type \" + (myQuery.getClass().getSimpleName())) + \". Must be either \") + (com.stonecraft.datastore.interaction.Query.class.getSimpleName())) + \" or \") + (com.stonecraft.datastore.interaction.RawSQLQuery.class.getSimpleName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4004/buggy-version/stonecraft-orm.src.main.java.com.stonecraft.datastore.DatabaseQueryTask.java", "BodyUseAPI": [], "Fixed commit": "786bc239d060a127c772074f278294d7be39a0f1", "Url": "https://api.github.com/repos/stimsoni9/Stonecraft-Datastore", "Date": "2016-10-28T01:02:57Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (memo.isNewMemo()) { memo.setNewMemo(false); i++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5672/buggy-version/IrcBot.src.main.java.org.siery.irc.action.memo.MemoHolder.java", "BodyUseAPI": ["org.siery.irc.action.memo.Memo.setNewMemo(boolean)"], "Fixed commit": "e81363bb7e1c86da09a1cde0a3914885a2e26812", "Url": "https://api.github.com/repos/dotintegral/KraszBot", "Date": "2011-10-11T20:33:54Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.geosdi.geoplatform.gui.client.widget.WorkspacesComboBox.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (gpWorkspace == null) { workspaceName = workspaceSimpleComboBox.getRawValue(); }else { workspaceName = gpWorkspace.getWorkspaceName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8719/buggy-version/geoplatform-gui.extensions.gp-publisher-widget.src.main.java.org.geosdi.geoplatform.gui.client.widget.AbstractPublisherWidget.java", "BodyUseAPI": ["org.geosdi.geoplatform.gui.client.model.GPWorkspace.getWorkspaceName()"], "Fixed commit": "e9168d63b821e79b920882be67a57f7bfae20a2b", "Url": "https://api.github.com/repos/glascaleia/geo-platform", "Date": "2015-06-01T13:34:20Z"},
{"Line": "=>1278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.mongodb.morphia.mapping.MappedField>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((q.get(versionMF.getNameToStore())) == null) { if (!(u.containsField(\"$inc\"))) { u.put(\"$inc\", new com.mongodb.BasicDBObject(versionMF.getNameToStore(), 1)); }else { ((java.util.Map) (u.get(\"$inc\"))).put(versionMF.getNameToStore(), 1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6311/buggy-version/morphia.src.main.java.org.mongodb.morphia.DatastoreImpl.java", "BodyUseAPI": ["org.mongodb.morphia.mapping.MappedField.getNameToStore()", "((java.util.Map) (u.get(\"$inc\"))).put(versionMF.getNameToStore(),int)", "org.mongodb.morphia.mapping.MappedField.getNameToStore()", "com.mongodb.DBObject.put(java.lang.String,com.mongodb.BasicDBObject)"], "Fixed commit": "52faa00d2228b3b02ca283f7244f6662b5b3e1ec", "Url": "https://api.github.com/repos/aaujon/morphia", "Date": "2015-06-08T07:33:33Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (inGame.contains(e.getEntity())) { e.getDrops().clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/636/buggy-version/src.me.oliver276.kitpvp.Main.java", "BodyUseAPI": ["org.bukkit.event.entity.PlayerDeathEvent.getDrops()", "e.getDrops().clear()"], "Fixed commit": "4adc4f7d50af57caf5c34741701c3576cafd3e08", "Url": "https://api.github.com/repos/oliver276/DeathArena", "Date": "2014-02-08T16:32:18Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (recordList != null) { recordList = tradingRecordMapper.getRecordListByPhoneNo(phoneNumber); map.put(\"recordList\", recordList); map.put(\"errorCode\", 0); return map; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3599/buggy-version/src.main.java.org.luojj.controller.TradingRecordController.java", "BodyUseAPI": [], "Fixed commit": "abcdba4beb68a48df2cd3edf02082ed4074df983", "Url": "https://api.github.com/repos/luojj99/test", "Date": "2016-04-21T12:07:42Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (p >= 0) { spec = ((spec.substring(0, p)) + \"/\") + (spec.substring((p + 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1996/buggy-version/impl.src.main.java.ceylon.modules.jboss.runtime.AbstractJBossRuntime.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.substring(int,int)"], "Fixed commit": "7230b0dda265bc5132667b99b4ad57ed4355cc5d", "Url": "https://api.github.com/repos/ceylon/ceylon-runtime", "Date": "2015-02-04T21:46:52Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["xyz.luan.console.parser.Context.execute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (r == (CallResult.INVALID_COMMAND)) { console.error(\"Invalid command. Type help for a list of valid operations.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3751/buggy-version/src.main.java.xyz.luan.console.parser.Application.java", "BodyUseAPI": [], "Fixed commit": "863a0d2e420b5a8014868921813790de20c1d881", "Url": "https://api.github.com/repos/luanpotter/console-parser", "Date": "2014-10-01T20:41:07Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (call == null) { return CallResult.INVALID_COMMAND; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3751/buggy-version/src.main.java.xyz.luan.console.parser.Caller.java", "BodyUseAPI": [], "Fixed commit": "863a0d2e420b5a8014868921813790de20c1d881", "Url": "https://api.github.com/repos/luanpotter/console-parser", "Date": "2014-10-01T20:41:07Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((term.getSource()) != null) { jsonTerm.put(\"source\", this.createBasicJSONTerm(term.getSource())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7303/buggy-version/src.org.phenoscape.ws.resource.BulkTermNameResource.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,this.createBasicJSONTerm(term.getSource()))", "org.phenoscape.ws.resource.BulkTermNameResource.createBasicJSONTerm(term.getSource())", "org.phenoscape.obd.model.Term.getSource()"], "Fixed commit": "267adb6454b056409c5769403a524937ecf28002", "Url": "https://api.github.com/repos/phenoscape/PhenoscapeOBD-WS", "Date": "2011-08-17T16:34:02Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mWakeLock) != null) { if (mWakeLock.isHeld()) { mWakeLock.release(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7074/buggy-version/app.src.main.java.com.voipgrid.vialer.util.ProximitySensorHelper.java", "BodyUseAPI": [], "Fixed commit": "fbe0fb434d5ff6bcded25ecbc190ec8127b5204c", "Url": "https://api.github.com/repos/VoIPGRID/vialer-android", "Date": "2016-11-08T09:59:27Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (profileId.equals(userId)) navigationView.getMenu().getItem(0).setChecked(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2258/buggy-version/app.src.main.java.ru.velkonost.lume.activity.ProfileActivity.java", "BodyUseAPI": [], "Fixed commit": "112ef5701242647576c32b4d1d6fe155fe62771a", "Url": "https://api.github.com/repos/Velkonost/Lume", "Date": "2017-01-07T16:53:48Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(this.getSeqString().isEmpty())) { edu.msu.cme.rdp.readseq.utils.orientation.GoodWordIterator iterator = new edu.msu.cme.rdp.readseq.utils.orientation.GoodWordIterator(this.getSeqString()); this.wordIndexArr = iterator.getWordArr(); this.goodWordCount = wordIndexArr.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2318/buggy-version/src.edu.msu.cme.rdp.classifier.utils.ClassifierSequence.java", "BodyUseAPI": [], "Fixed commit": "63c637b2c8b3b941cf021d1e549caec0041b4c3c", "Url": "https://api.github.com/repos/rdpstaff/classifier", "Date": "2015-02-20T19:42:40Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isValid())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2692/buggy-version/SteamGamePicker.src.us.mcsw.gamepicker.picker.CanvasPicker.java", "BodyUseAPI": [], "Fixed commit": "179a196fed3ab37895992d89d62e46aa470b77ce", "Url": "https://api.github.com/repos/ProfessorSnep/SteamGamePicker", "Date": "2016-05-23T15:47:26Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((v.getId()) == (R.id.bRegister)) { intent.putExtra(CONST.SHOULD_SHOW_REGISTRATION, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1374/buggy-version/app.src.main.java.com.brainmurphy.roomhack.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "101d22a8e7fd2ae50d6a46ee1f344d9c44240fb4", "Url": "https://api.github.com/repos/JinmingYu/roomate-organizer", "Date": "2015-09-26T14:24:46Z"},
{"Line": "=>1087", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataCollector) != null) { dataCollector.startCollectingData(m); new ca.cumulonimbus.pressurenetsdk.CbService.StreamObservation().execute(m); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8504/buggy-version/src.ca.cumulonimbus.pressurenetsdk.CbService.java", "BodyUseAPI": [], "Fixed commit": "b1cc2f9170e7361b64aa807b426ed96d93a7f96f", "Url": "https://api.github.com/repos/Cbsoftware/pressureNET-SDK", "Date": "2013-08-18T20:49:44Z"},
{"Line": "=>949", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((settingsHandler) == null) { settingsHandler = new ca.cumulonimbus.pressurenetsdk.CbSettingsHandler(getApplicationContext()); settingsHandler.setServerURL(serverURL); settingsHandler.setAppID(\"ca.cumulonimbus.barometernetwork\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8504/buggy-version/src.ca.cumulonimbus.pressurenetsdk.CbService.java", "BodyUseAPI": [], "Fixed commit": "b1cc2f9170e7361b64aa807b426ed96d93a7f96f", "Url": "https://api.github.com/repos/Cbsoftware/pressureNET-SDK", "Date": "2013-08-18T20:49:44Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (libcore.icu.TimeZoneNames.isUtc(result1[0])) { result1[1] = libcore.icu.TimeZoneNames.UTC; result1[2] = libcore.icu.TimeZoneNames.UTC; result1[3] = libcore.icu.TimeZoneNames.UTC; result1[4] = libcore.icu.TimeZoneNames.UTC; }else { libcore.icu.TimeZoneNames.fillZoneStringNames(localeId, result1); if (result1[0].equals(libcore.icu.TimeZoneNames.PACIFIC_APIA)) { result1[3] = libcore.icu.TimeZoneNames.SAMOA_DAYLIGHT_TIME; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/9107/buggy-version/jre_emul.android.libcore.luni.src.main.java.libcore.icu.TimeZoneNames.java", "BodyUseAPI": ["libcore.icu.TimeZoneNames.fillZoneStringNames(java.lang.String,java.lang.String[])", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "c937b56fb9f8430f9bc39b8c5bc520601c895a72", "Url": "https://api.github.com/repos/doppllib/j2objc", "Date": "2016-07-18T00:50:25Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rapla.entities.domain.Allocatable.getOwnerRef()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((user != null) && (ownerRef != null)) && (user.getReference().equals(ownerRef))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6470/buggy-version/src.main.java.org.rapla.storage.PermissionController.java", "BodyUseAPI": [], "Fixed commit": "2c5902dc709267de3adc42b2beac43cd5d073802", "Url": "https://api.github.com/repos/rapla/rapla", "Date": "2016-02-23T14:13:19Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((version.compareTo(\"paid\")) != 0) { if (((hasRatedPref) == 0) && ((useCountPref) > 6)) displayDialog(com.wckd_dev.mirror.core.MirrorActivity.RATE); else { (useCountPref)++; this.finish(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3204/buggy-version/src.com.wckd_dev.mirror.core.MirrorActivity.java", "BodyUseAPI": [], "Fixed commit": "be80e0f5ed4ea88b90c82ec00f594546db52ee07", "Url": "https://api.github.com/repos/bjcrawford/Mirror-Core", "Date": "2013-11-24T01:17:33Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((builder.sessionCallback) != null) { try { this.sessionCallback = ((com.nowellpoint.oauth.session.OAuthSessionCallback) (java.lang.Class.forName(builder.sessionCallback).newInstance())); } catch (java.lang.InstantiationException | java.lang.IllegalAccessException | java.lang.ClassNotFoundException e) { throw new java.lang.RuntimeException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3810/buggy-version/src.main.java.com.nowellpoint.oauth.client.OAuthClient.java", "BodyUseAPI": [], "Fixed commit": "3945b71404590d37f49661791540972835714c89", "Url": "https://api.github.com/repos/nowellpoint/nowellpoint-oauth-api", "Date": "2014-01-13T03:11:38Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nominator == 0.0) && (denominator == 0.0)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1124/buggy-version/src.lisong_mechlab.model.item.Weapon.java", "BodyUseAPI": [], "Fixed commit": "6e8f130b59af88129e0d457d8130859e771f9dd6", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2013-10-17T21:22:23Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((config.getProperty(\"AGGREGATION\")) != null) { window_size = new java.lang.Integer(config.getProperty(\"AGGREGATION\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1286/buggy-version/src.main.java.com.yahoo.egads.utilities.ArrayInputFuturePredictor.java", "BodyUseAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Fixed commit": "51de8d35b280e9c4654f23c89fd081b7de074b14", "Url": "https://api.github.com/repos/manolama/egads", "Date": "2016-05-25T18:24:21Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((config.getProperty(\"PERIOD\")) != null) { period = new java.lang.Long(config.getProperty(\"PERIOD\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1286/buggy-version/src.main.java.com.yahoo.egads.utilities.ArrayInputFuturePredictor.java", "BodyUseAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Fixed commit": "51de8d35b280e9c4654f23c89fd081b7de074b14", "Url": "https://api.github.com/repos/manolama/egads", "Date": "2016-05-25T18:24:21Z"},
{"Line": "=>1018", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (retExpression == null) retVal = utils.Constants.NULL; else retVal = new symbols.value.StaticVal(symbols.value.Value_t.AST, retExpression);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4825/buggy-version/src.libraryFunctions.LibraryFunctions.java", "BodyUseAPI": [], "Fixed commit": "12404a290975cfb64233697c83196f400411fb7b", "Url": "https://api.github.com/repos/kostasDrk/metafox", "Date": "2016-09-09T20:12:10Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((weatherC.getTimeInMillis()) - 60000) > (sk.jmmobilesoft.smartalarm.helpers.Helper.getCurrentTime().getTimeInMillis())) { aManager.setExact(AlarmManager.RTC_WAKEUP, weatherC.getTimeInMillis(), weather); sk.jmmobilesoft.smartalarm.log.Logger.serviceInfo((\"Setting weather refresh for:\" + (weatherC.getTime()))); }else sk.jmmobilesoft.smartalarm.log.Logger.serviceInfo(\"Weather refresh not set\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4921/buggy-version/SmartAlarm.src.sk.jmmobilesoft.smartalarm.service.ClockSetting.java", "BodyUseAPI": ["android.app.AlarmManager.setExact(AlarmManager.RTC_WAKEUP,long,android.app.PendingIntent)", "java.util.Calendar.getTime()", "sk.jmmobilesoft.smartalarm.log.Logger.serviceInfo(java.lang.String)", "java.util.Calendar.getTimeInMillis()"], "Fixed commit": "f64fc3f33a4f53bdb32ff98f42c1165f25e23362", "Url": "https://api.github.com/repos/streetdriver02/smal", "Date": "2015-01-26T09:03:49Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((v) != null) { v.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4921/buggy-version/SmartAlarm.src.sk.jmmobilesoft.smartalarm.ClockRingActivity.java", "BodyUseAPI": [], "Fixed commit": "f64fc3f33a4f53bdb32ff98f42c1165f25e23362", "Url": "https://api.github.com/repos/streetdriver02/smal", "Date": "2015-01-26T09:03:49Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(inputBuffer.hasRemaining())) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3909/buggy-version/src.main.java.org.jboss.stdio.WriterOutputStream.java", "BodyUseAPI": [], "Fixed commit": "8ae0bc961fcafb996469621bf48617bc69832f17", "Url": "https://api.github.com/repos/stuartwdouglas/jboss-stdio", "Date": "2011-05-11T02:59:52Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (interacted.canMove(placeDown.getMovement().getDirection())) { interacted.setAnimationState(placeDown); done = true; }else if (interacted.canMove(dir)) { interacted.setAnimationState(new edu.chalmers.blockster.core.objects.movement.AnimationState(edu.chalmers.blockster.core.objects.movement.Movement.getMoveMovement(dir))); done = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4840/buggy-version/Blockster.src.main.java.edu.chalmers.blockster.core.objects.interactions.BlockLiftedInteraction.java", "BodyUseAPI": ["edu.chalmers.blockster.core.objects.interactions.Interactable.canMove(edu.chalmers.blockster.core.objects.movement.Direction)", "edu.chalmers.blockster.core.objects.interactions.Interactable.setAnimationState(edu.chalmers.blockster.core.objects.movement.AnimationState)", "edu.chalmers.blockster.core.objects.interactions.Interactable.setAnimationState(edu.chalmers.blockster.core.objects.movement.AnimationState)"], "Fixed commit": "a948b3d0911cd2eccbb8542119d6665fdd11d49c", "Url": "https://api.github.com/repos/oskarjonefors/TDA367", "Date": "2014-05-15T19:58:46Z"},
{"Line": "=>558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((consistentId) != null) node.setConsistentId(consistentId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/9188/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.managers.discovery.GridDiscoveryManager.java", "BodyUseAPI": [], "Fixed commit": "3d28a98827564ce28ddd29dc31ca2fd2f0c8ce29", "Url": "https://api.github.com/repos/gridgain/apache-ignite", "Date": "2017-10-03T10:21:48Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSelectedImage) != null) currentSelectedImage.setImageResource(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6050/buggy-version/app.src.main.java.com.hulkdx.moneymanager.ui.main.CategoryAdapter.java", "BodyUseAPI": [], "Fixed commit": "a853c6c89889fa46c0e48622dc3790d5d69f74a4", "Url": "https://api.github.com/repos/hulkdx/MoneyManager", "Date": "2017-07-26T17:15:11Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sender instanceof org.bukkit.entity.Player)) { java.lang.System.out.println(\"Command can only be run in-game.\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2568/buggy-version/net.agazed.worldload.WorldLoad.java", "BodyUseAPI": [], "Fixed commit": "4738ce78004e39478873011153ae27f3f3523806", "Url": "https://api.github.com/repos/Agazed/WorldLoad", "Date": "2015-07-28T00:26:58Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zstack.storage.backup.sftp.APIAddSftpBackupStorageMsg.getUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((dir.startsWith(\"/proc\")) || (dir.startsWith(\"/dev\"))) || (dir.startsWith(\"/sys\"))) { throw new org.zstack.header.apimediator.ApiMessageInterceptionException(argerr(\" the url contains an invalid folder[/dev or /proc]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8041/buggy-version/plugin.sftpBackupStorage.src.main.java.org.zstack.storage.backup.sftp.SftpBackupStorageApiInterceptor.java", "BodyUseAPI": [], "Fixed commit": "8b744113602ad35e95f06c0f67463b73e37b71f8", "Url": "https://api.github.com/repos/camilesing/zstack", "Date": "2017-04-08T13:37:32Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fList != null) { for (java.io.File file : fList) { if (file.isFile()) { files.add(file.getName()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8576/buggy-version/reader.src.main.java.org.kaazing.monitoring.reader.file.location.impl.MonitoringFolderAgronaImpl.java", "BodyUseAPI": [], "Fixed commit": "5165246fd60d6dac9c4bf3fa1fd85faabd8990bd", "Url": "https://api.github.com/repos/irina-mitrea-luxoft/metrics", "Date": "2015-07-01T06:25:31Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lobby.size()) == (Lobby.MAX_PLAYERS)) { return new controllers.Msg.No(\"Can't invite more players to this lobby!\"); }else if ((invited.invitedToLobby) != null) { return new controllers.Msg.No(\"That player already has a pending invite!\"); }else if ((invited.memberOfLobby) != null) { return new controllers.Msg.No(\"That player is already in a lobby!\"); }else if ((invited.playingGame) != null) { return new controllers.Msg.No(\"That player is already in a game!\"); }else { inviteToLobby(inviterId, invitedName); return new controllers.Msg.Ok(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4332/buggy-version/app.controllers.Server.java", "BodyUseAPI": [], "Fixed commit": "63539cfeba6e29a816df0abaa47f295fdd32be21", "Url": "https://api.github.com/repos/JonathanMurray/4-word-server", "Date": "2015-08-02T19:41:14Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mIterator) != null) { while (mIterator.hasNext()) { mIterator.next().update(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5654/buggy-version/src.com.android.mms.transaction.Observable.java", "BodyUseAPI": [], "Fixed commit": "2d6e17d6aef47a7e238e575e3ed9021d6bbaf6d7", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-packages-apps-Mms", "Date": "2016-03-23T08:04:29Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (direction.equals(Direction.OUTGOING)) newRel = stayingReading.createRelationshipTo(deletingRel.getOtherNode(deletingReading), ERelations.NORMAL); else newRel = deletingRel.getOtherNode(deletingReading).createRelationshipTo(stayingReading, ERelations.NORMAL);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/217/buggy-version/stemmarest.src.main.java.net.stemmaweb.rest.Reading.java", "BodyUseAPI": [], "Fixed commit": "629b7ac96095003894164a9f9db0304e9632df57", "Url": "https://api.github.com/repos/tohotforice/PSE2_DH", "Date": "2015-05-13T21:26:24Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsDrawFocusMoveAnim) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7543/buggy-version/tvrecyclerview.src.main.java.app.com.tvrecyclerview.TvRecyclerView.java", "BodyUseAPI": [], "Fixed commit": "a871d3b2ac6c239ae9ab0f160c404d17834541fe", "Url": "https://api.github.com/repos/henryblue/TvRecyclerView", "Date": "2017-01-06T09:11:53Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNextFocused) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7543/buggy-version/tvrecyclerview.src.main.java.app.com.tvrecyclerview.TvRecyclerView.java", "BodyUseAPI": [], "Fixed commit": "a871d3b2ac6c239ae9ab0f160c404d17834541fe", "Url": "https://api.github.com/repos/henryblue/TvRecyclerView", "Date": "2017-01-06T09:11:53Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.app.FragmentManager.findFragmentByTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((productList != null) && (fragmentManager.findFragmentByTag(\"CostSaleProductList\").isResumed())) mjkarbasian.moshtarimadar.Helpers.Utility.activityOnBackExit(this); else super.onBackPressed();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6806/buggy-version/app.src.main.java.mjkarbasian.moshtarimadar.Costs.Costs.java", "BodyUseAPI": [], "Fixed commit": "0a5a9dcbf4ceafea0b5b8e56e3a4d7a8c1b3c351", "Url": "https://api.github.com/repos/javadKarbasian/Kaseb-1", "Date": "2017-01-25T14:05:28Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.app.FragmentManager.findFragmentByTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((productList != null) && (fragmentManager.findFragmentByTag(\"CostSaleProductList\").isResumed())) mjkarbasian.moshtarimadar.Helpers.Utility.activityOnBackExit(this); else super.onBackPressed();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6806/buggy-version/app.src.main.java.mjkarbasian.moshtarimadar.Sales.Sales.java", "BodyUseAPI": [], "Fixed commit": "0a5a9dcbf4ceafea0b5b8e56e3a4d7a8c1b3c351", "Url": "https://api.github.com/repos/javadKarbasian/Kaseb-1", "Date": "2017-01-25T14:05:28Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["restoNameText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((restoName.trim().length()) == 0) { finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/445/buggy-version/src.ph.edu.uplb.ics.srg.android.stk.AddRestaurantActivity.java", "BodyUseAPI": [], "Fixed commit": "8e38e68ec3077deba8bcd3155e3f7b52a09cc1a6", "Url": "https://api.github.com/repos/srg-ics-uplb/SaanTayoKakain", "Date": "2014-12-08T09:22:12Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (env.equals(\"INFO\")) { logging(new com.greenfoxacademy.peer2peer.model.LogMessage(\" /update\", \" POST \", (\"changedName: \" + changedName))); }else if (env.equals(\"ERROR\")) { java.lang.System.err.println(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1642/buggy-version/src.main.java.com.greenfoxacademy.peer2peer.controller.MainController.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "794f4dadfcb533974fbc94d13f03ad13b4be91c5", "Url": "https://api.github.com/repos/podi87/podi87-P2P", "Date": "2017-05-23T15:58:11Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (env.equals(\"INFO\")) { logging(new com.greenfoxacademy.peer2peer.model.LogMessage(\" / \", \" GET \", \"\")); }else if (env.equals(\"ERROR\")) { java.lang.System.err.println(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1642/buggy-version/src.main.java.com.greenfoxacademy.peer2peer.controller.MainController.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "794f4dadfcb533974fbc94d13f03ad13b4be91c5", "Url": "https://api.github.com/repos/podi87/podi87-P2P", "Date": "2017-05-23T15:58:11Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (env.equals(\"INFO\")) { logging(new com.greenfoxacademy.peer2peer.model.LogMessage(\" /enter\", \" POST \", (\"newName: \" + newName))); }else if (env.equals(\"ERROR\")) { java.lang.System.err.println(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1642/buggy-version/src.main.java.com.greenfoxacademy.peer2peer.controller.MainController.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "794f4dadfcb533974fbc94d13f03ad13b4be91c5", "Url": "https://api.github.com/repos/podi87/podi87-P2P", "Date": "2017-05-23T15:58:11Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (scheduleItemJsonObject.has(\"authors\")) { event_authors = scheduleItemJsonObject.getJSONArray(\"authors\").toString().replace(\"\\\"\", \"\").replace(\"[\", \"\").replace(\"]\", \"\"); android.util.Log.i(LOG_TAG, (\"Basic Event - Authors: \" + event_authors)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6982/buggy-version/Conference.src.com.g_node.gca.schedule.ScheduleJSONParse.java", "BodyUseAPI": ["scheduleItemJsonObject.getJSONArray(\"authors\").toString().replace(java.lang.String,java.lang.String)", "org.json.JSONObject.getJSONArray(java.lang.String)", "scheduleItemJsonObject.getJSONArray(\"authors\").toString().replace(\"\\\"\", \"\").replace(\"[\", \"\").replace(java.lang.String,java.lang.String)", "scheduleItemJsonObject.getJSONArray(\"authors\").toString().replace(\"\\\"\", \"\").replace(java.lang.String,java.lang.String)", "scheduleItemJsonObject.getJSONArray(\"authors\").toString()"], "Fixed commit": "7785425dbd0c3e5a6bdd69423d815d913f780e04", "Url": "https://api.github.com/repos/G-Node/GCA-Android", "Date": "2016-08-02T13:02:13Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sets[Driver.setIndex]) == null) { java.lang.System.out.println(((\"Set \" + (Driver.setIndex)) + \" does not exist.\")); }else { sets[Driver.setIndex].add(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4208/buggy-version/Driver.java", "BodyUseAPI": ["java.util.Set.add(int)"], "Fixed commit": "1ad447bdcfb075b83eeead25f66d7f8db32dc659", "Url": "https://api.github.com/repos/churley862/sets-and-arrays", "Date": "2017-12-03T22:46:42Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eu.innovation.engineering.start.Start.loadDictionariesFromFile) dictionaries = dictionaryBuilder.load(((eu.innovation.engineering.config.PathConfigurator.dictionariesFolder) + \"dictionaries.json\")); else dictionaries = dictionaryBuilder.build(jsonPathDictionariesAndTrain, Configurator.numFeatures);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3457/buggy-version/DataSourceClassificator.src.main.java.eu.innovation.engineering.start.Start.java", "BodyUseAPI": [], "Fixed commit": "085c21637ed549b3d7fc4d50a845cd4a47e697a5", "Url": "https://api.github.com/repos/luilom/DataSourceClassificator", "Date": "2017-09-07T09:03:34Z"},
{"Line": "=>517", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((groupDialog) != null) { groupDialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1610/buggy-version/app.src.main.java.radonsoft.mireaassistant.fragments.Settings.java", "BodyUseAPI": [], "Fixed commit": "bb2aa6100f718f8175a2d02356df41d292386464", "Url": "https://api.github.com/repos/RuslanBarcho/MIREAAssistant", "Date": "2017-10-11T14:58:40Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((server) != null) { server.quit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3242/buggy-version/client.src.ClientGUI.java", "BodyUseAPI": [], "Fixed commit": "998bf8508994cab0cf2fc5cddf2db43f92cb4e12", "Url": "https://api.github.com/repos/jbukowsky97/OpenDraw", "Date": "2017-12-05T20:26:07Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.parostroj.timetable.gui.components.Event.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((data.getFromIndex()) != null) { str.append(\" From index: \").append(java.lang.Integer.toString(data.getFromIndex())).append('\\n'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5189/buggy-version/grafikon-gui-components.src.main.java.net.parostroj.timetable.gui.components.GTEventOutputVisitor.java", "BodyUseAPI": ["net.parostroj.timetable.gui.components.ListData.getFromIndex()", "java.lang.Integer.toString(data.getFromIndex())", "java.lang.Appendable.append(char)", "java.lang.Appendable.append(java.lang.String)"], "Fixed commit": "eef4e6749991f72a6f89d0b4291725f07b1ec253", "Url": "https://api.github.com/repos/jub77/grafikon", "Date": "2015-10-14T15:50:56Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((bufferInfo.flags) & (android.media.MediaCodec.BUFFER_FLAG_CODEC_CONFIG)) != 0) { android.util.Log.d(dennymades.space.mediaencoder.AudioEncoder.TAG, \"in BUFFER_FLAG_CODEC_CONFIG\"); bufferInfo.size = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4743/buggy-version/app.src.main.java.dennymades.space.mediaencoder.AudioEncoder.java", "BodyUseAPI": [], "Fixed commit": "e3f147799717e56fd8614120bfb46c4978a01078", "Url": "https://api.github.com/repos/dennyabrain/android-audio-video-mp4-encoding", "Date": "2016-10-26T14:54:50Z"},
{"Line": "=>1988", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.tilak.noteshare.NoteMainActivity.noteIdForDetails) == null) selectIntent.putExtra(\"a\", 0); else selectIntent.putExtra(\"a\", 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/13/buggy-version/app.src.main.java.com.tilak.noteshare.NoteMainActivity.java", "BodyUseAPI": [], "Fixed commit": "27e533c480af476a3320b5cc23a532d53d7da26a", "Url": "https://api.github.com/repos/WohligTechnology/NoteShareNative", "Date": "2015-10-29T06:32:04Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((paragraphsStack.isEmpty()) || (!(paragraphsStack.peek()))) { super.setTextLocation(TextLocation.End); internalStartParagraph(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5989/buggy-version/document.fr.opensagres.xdocreport.document.odt.src.main.java.fr.opensagres.xdocreport.document.odt.textstyling.ODTDocumentHandler.java", "BodyUseAPI": [], "Fixed commit": "c361697c073d9486e98087a4f28461a7901ee40b", "Url": "https://api.github.com/repos/opensagres/xdocreport", "Date": "2012-04-17T22:14:52Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.komamitsu.android.naver.topic.Widget.getNextNews()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((news.getImage()) != null) { updateViews.setImageViewBitmap(R.id.news_image, news.getImage()); }else { updateViews.setImageViewResource(R.id.news_image, R.drawable.noimage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2015/buggy-version/src.com.komamitsu.android.naver.topic.Widget.java", "BodyUseAPI": ["android.widget.RemoteViews.setImageViewBitmap(R.id.news_image,news.getImage())", "com.komamitsu.android.naver.topic.Topic.getImage()"], "Fixed commit": "951f6da2f76e37cfc6503257203ee58dcfb7659e", "Url": "https://api.github.com/repos/komamitsu/android-naver-topic-widget", "Date": "2012-04-05T07:43:41Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((paint.Main.selected.x) > (-1)) && ((paint.Main.selected.y) > (-1))) { java.awt.Color color = paint.Main.colorBar[paint.Main.selected.y][paint.Main.selected.x]; clib.setFrontBrush(color); clib.put(paint.Main.selected.x, (((paint.Main.selected.y) + (paint.Main.screenSize.height)) - (paint.Main.colorHeight)), paint.Main.icon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2752/buggy-version/src.paint.Main.java", "BodyUseAPI": ["com.github.EnderCrypt.CLib.CLib.put(int,int,char)"], "Fixed commit": "d89026bde99215d0a68428910ea652596d80e3da", "Url": "https://api.github.com/repos/EnderCrypt/CLib", "Date": "2015-10-04T20:56:18Z"},
{"Line": "=>1710", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((tootReply.getSpoiler_text()) != null) && ((tootReply.getSpoiler_text().length()) > 0)) { toot_cw_content.setText(tootReply.getSpoiler_text()); toot_cw_content.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8088/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.activities.TootActivity.java", "BodyUseAPI": ["android.widget.EditText.setText(tootReply.getSpoiler_text())", "fr.gouv.etalab.mastodon.client.Entities.Status.getSpoiler_text()"], "Fixed commit": "65685ddbfb6b95370c29d3b130a268c97e36612e", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-11-07T15:09:34Z"},
{"Line": "=>742", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activePlayers.size()) == 0) { org.mcsg.survivalgames.SurvivalGames.$(gameID, java.util.logging.Level.WARNING, ((\"Last player (\" + (p.getName())) + \") died in the arena!\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6987/buggy-version/src.main.java.org.mcsg.survivalgames.Game.java", "BodyUseAPI": [], "Fixed commit": "c268bf81a8d4112ae9167f861ccb91b8da49995f", "Url": "https://api.github.com/repos/AddstarMC/Survival-Games", "Date": "2015-06-09T13:35:02Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.denimgroup.threadfix.service.util.ControllerUtils.getItem(javax.servlet.http.HttpServletRequest,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (logId != null) { map.put(\"logIdToExpand\", logId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/9210/buggy-version/threadfix-main.src.main.java.com.denimgroup.threadfix.webapp.controller.ErrorLogController.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object)"], "Fixed commit": "ce37978be5743da434caf85317c32958ec32683a", "Url": "https://api.github.com/repos/denimgroup/threadfix", "Date": "2015-04-08T17:01:05Z"},
{"Line": "=>998", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_row) == null) _row = new java.lang.ThreadLocal();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4769/buggy-version/h2o-algos.src.main.java.hex.glm.GLMModel.java", "BodyUseAPI": [], "Fixed commit": "3a61eaaabd75b725952c746e566c3cb984cc057e", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2016-02-03T00:01:51Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.getPlayers().getPlayer(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (skyPlayer != null) { skyPlayer.addScore(diff); }else { backend.addScore(uuid, diff); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8121/buggy-version/src.main.java.net.daboross.bukkitdev.skywars.score.ScoreStorage.java", "BodyUseAPI": ["net.daboross.bukkitdev.skywars.api.players.SkyPlayer.addScore(int)"], "Fixed commit": "20ee86076b7cab15d1f9d7b8d87a891c0b7f537e", "Url": "https://api.github.com/repos/SkyWars/SkyWars", "Date": "2016-02-23T09:43:00Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(data.getColumnIndex(AlexandriaContract.CategoryEntry.CATEGORY))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (categories != null) ((android.widget.TextView) (rootView.findViewById(R.id.categories))).setText(categories);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1299/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": ["((android.widget.TextView) (rootView.findViewById(R.id.categories))).setText(java.lang.String)"], "Fixed commit": "9d9497caf0d2db27ec3078f43e8c06da818e1c3a", "Url": "https://api.github.com/repos/vezikon/Super-Duo", "Date": "2015-10-27T12:42:21Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(data.getColumnIndex(AlexandriaContract.BookEntry.DESC))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (desc != null) ((android.widget.TextView) (rootView.findViewById(R.id.fullBookDesc))).setText(desc);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1299/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": ["((android.widget.TextView) (rootView.findViewById(R.id.fullBookDesc))).setText(java.lang.String)"], "Fixed commit": "9d9497caf0d2db27ec3078f43e8c06da818e1c3a", "Url": "https://api.github.com/repos/vezikon/Super-Duo", "Date": "2015-10-27T12:42:21Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(data.getColumnIndex(AlexandriaContract.AuthorEntry.AUTHOR))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (authors != null) { java.lang.String[] authorsArr = authors.split(\",\"); ((android.widget.TextView) (rootView.findViewById(R.id.authors))).setLines(authorsArr.length); ((android.widget.TextView) (rootView.findViewById(R.id.authors))).setText(authors.replace(\",\", \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1299/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": ["((android.widget.TextView) (rootView.findViewById(R.id.authors))).setText(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "9d9497caf0d2db27ec3078f43e8c06da818e1c3a", "Url": "https://api.github.com/repos/vezikon/Super-Duo", "Date": "2015-10-27T12:42:21Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(data.getColumnIndex(AlexandriaContract.BookEntry.SUBTITLE))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (bookSubTitle != null) ((android.widget.TextView) (rootView.findViewById(R.id.fullBookSubTitle))).setText(bookSubTitle);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1299/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": ["((android.widget.TextView) (rootView.findViewById(R.id.fullBookSubTitle))).setText(java.lang.String)"], "Fixed commit": "9d9497caf0d2db27ec3078f43e8c06da818e1c3a", "Url": "https://api.github.com/repos/vezikon/Super-Duo", "Date": "2015-10-27T12:42:21Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (article != null) { setArticleTypeAndCreatorAndSchool(article); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4834/buggy-version/src.main.java.com.nenu.innovation.service.impl.ArticleServiceImpl.java", "BodyUseAPI": ["com.nenu.innovation.service.impl.ArticleServiceImpl.setArticleTypeAndCreatorAndSchool(com.nenu.innovation.entity.Article)"], "Fixed commit": "e8b9ed290e53520799320c720d3e82321c972062", "Url": "https://api.github.com/repos/chenwenyan/innovation-web", "Date": "2017-05-06T12:56:34Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user_id == null) { net.djp3.qualoscopy.datastore.DatastoreInterface.getLog().error(\"Can't wipe session for null user_id\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3560/buggy-version/src.web.server.src.net.djp3.qualoscopy.datastore.DatastoreInterface.java", "BodyUseAPI": [], "Fixed commit": "49777051cc5bd3ccfd7c509be15cfac9ac07139c", "Url": "https://api.github.com/repos/djp3/qualoscopy", "Date": "2015-07-15T19:50:19Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((session.getUser_id()) == null) { net.djp3.qualoscopy.datastore.DatastoreInterface.getLog().error(\"Why do I have a session with a null user_id?\"); removeUs.add(session); }else { if (user_id.equals(session.getUser_id())) { removeUs.add(session); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3560/buggy-version/src.web.server.src.net.djp3.qualoscopy.datastore.DatastoreInterface.java", "BodyUseAPI": ["java.util.Set<net.djp3.qualoscopy.datastore.DatastoreInterface.Session>.add(net.djp3.qualoscopy.datastore.DatastoreInterface.Session)", "java.util.Set<net.djp3.qualoscopy.datastore.DatastoreInterface.Session>.add(net.djp3.qualoscopy.datastore.DatastoreInterface.Session)", "net.djp3.qualoscopy.datastore.DatastoreInterface.Session.getUser_id()", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "49777051cc5bd3ccfd7c509be15cfac9ac07139c", "Url": "https://api.github.com/repos/djp3/qualoscopy", "Date": "2015-07-15T19:50:19Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((d1.Destination2) != null) { drawString(d1.Destination2, jb.plasma.renderers.LeftMargin, 0.97, jb.plasma.renderers.TextColor, NextDestination2Font); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8157/buggy-version/jb.plasma.renderers.CityrailV4Portrait.java", "BodyUseAPI": ["jb.plasma.renderers.CityrailV4Portrait.drawString(d1.Destination2,jb.plasma.renderers.LeftMargin,double,jb.plasma.renderers.TextColor,java.awt.Font)"], "Fixed commit": "7fca1401af4eb86510060a13222a0a8f62fd4f78", "Url": "https://api.github.com/repos/jaboles/DVA5", "Date": "2017-03-16T03:54:22Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(net.slipcor.pvparena.core.Debug.override)) db.i(\"RegionRunnable commiting\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4783/buggy-version/src.net.slipcor.pvparena.runnables.RegionRunnable.java", "BodyUseAPI": [], "Fixed commit": "75ce5dd74fb891d77672b3181c781bc88de0eea6", "Url": "https://api.github.com/repos/slipcor/pvparena", "Date": "2012-11-20T00:25:05Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > 1) { args = net.slipcor.pvparena.core.StringParser.shiftArrayBy(args, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4783/buggy-version/src.net.slipcor.pvparena.PVPArena.java", "BodyUseAPI": ["net.slipcor.pvparena.core.StringParser.shiftArrayBy(java.lang.String[],int)"], "Fixed commit": "75ce5dd74fb891d77672b3181c781bc88de0eea6", "Url": "https://api.github.com/repos/slipcor/pvparena", "Date": "2012-11-20T00:25:05Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(net.slipcor.pvparena.core.Debug.override)) net.slipcor.pvparena.api.PVPArenaAPI.db.i((\"API: get arena of location: \" + (location.toString())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4783/buggy-version/src.net.slipcor.pvparena.api.PVPArenaAPI.java", "BodyUseAPI": [], "Fixed commit": "75ce5dd74fb891d77672b3181c781bc88de0eea6", "Url": "https://api.github.com/repos/slipcor/pvparena", "Date": "2012-11-20T00:25:05Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(net.slipcor.pvparena.core.Debug.override)) net.slipcor.pvparena.api.PVPArenaAPI.db.i((\"API: get arena of player: \" + (player.getName())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4783/buggy-version/src.net.slipcor.pvparena.api.PVPArenaAPI.java", "BodyUseAPI": [], "Fixed commit": "75ce5dd74fb891d77672b3181c781bc88de0eea6", "Url": "https://api.github.com/repos/slipcor/pvparena", "Date": "2012-11-20T00:25:05Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(net.slipcor.pvparena.core.Debug.override)) net.slipcor.pvparena.api.PVPArenaAPI.db.i((\"API: get arena of location: \" + (location.toString())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4783/buggy-version/src.net.slipcor.pvparena.api.PVPArenaAPI.java", "BodyUseAPI": [], "Fixed commit": "75ce5dd74fb891d77672b3181c781bc88de0eea6", "Url": "https://api.github.com/repos/slipcor/pvparena", "Date": "2012-11-20T00:25:05Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(config.hasPath(org.apache.drill.exec.ExecConstants.USER_AUTHENTICATOR_IMPL))) { throw new org.apache.drill.exec.exception.DrillbitStartupException(java.lang.String.format(\"BOOT option '%s' is missing in config.\", org.apache.drill.exec.ExecConstants.USER_AUTHENTICATOR_IMPL)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2720/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.rpc.user.security.UserAuthenticatorFactory.java", "BodyUseAPI": [], "Fixed commit": "883817da376af593508c339a5f9cc2a38cef1682", "Url": "https://api.github.com/repos/sohami/drill", "Date": "2017-02-28T07:28:14Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((e.getSource()) == (mw.getRestart()))) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7569/buggy-version/ConnectFour.src.Connect4Panel.java", "BodyUseAPI": [], "Fixed commit": "ca8b7d779dd604f5dbed34b4942deaea4fb09647", "Url": "https://api.github.com/repos/holty777/connect4", "Date": "2015-05-12T01:41:28Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((board.get(i)) == null) { Tokens token = new Tokens(true); board.get(i).add(token); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7569/buggy-version/ConnectFour.src.Board.java", "BodyUseAPI": ["board.get(i).add(Tokens)", "java.util.ArrayList<java.util.ArrayList<Tokens>>.get(int)"], "Fixed commit": "ca8b7d779dd604f5dbed34b4942deaea4fb09647", "Url": "https://api.github.com/repos/holty777/connect4", "Date": "2015-05-12T01:41:28Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((player.getGameMode()) == (org.bukkit.GameMode.SURVIVAL)) || ((player.getGameMode()) == (org.bukkit.GameMode.ADVENTURE))) player.setAllowFlight(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/14/buggy-version/src.main.java.com.MegaVoxel.DoubleJump4NCP.DoubleJump4NCPPlugin.java", "BodyUseAPI": ["org.bukkit.entity.Player.setAllowFlight(boolean)"], "Fixed commit": "d93f306cfe93e5820482de5d3eebbc6e5a401073", "Url": "https://api.github.com/repos/HyperPlay/DoubleJump4NCP", "Date": "2016-03-15T16:37:15Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((players[0]) != null) { PlayerOneInfoLabel.setText((\"Player 1 Name: \" + (players[0].getCustomName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7576/buggy-version/src.GUI.BoardGUI.java", "BodyUseAPI": ["players[0].getCustomName()", "javax.swing.JLabel.setText((\"Player 1 Name: \" + (players[0].getCustomName())))"], "Fixed commit": "20ed2b3a2c0504bc102b0821b72ee3b01f2b843b", "Url": "https://api.github.com/repos/BlackNinja0001/Board-Game-JFTHA", "Date": "2014-04-25T20:37:48Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.Object>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((player.getWorld()) == (location.getWorld())) { if ((location.distance(player.getLocation())) <= 25) { if (!(sent.contains(player))) { player.sendMessage(((((org.bukkit.ChatColor.RED) + \"**Explosion area regenerating in \") + warning) + \" seconds**\")); sent.add(player); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6729/buggy-version/src.main.java.me.michaelkrauty.CarbonCreepers.Main.java", "BodyUseAPI": ["java.util.ArrayList<org.bukkit.entity.Player>.add(org.bukkit.entity.Player)", "java.util.ArrayList<org.bukkit.entity.Player>.contains(org.bukkit.entity.Player)", "org.bukkit.entity.Player.getLocation()", "org.bukkit.Location.distance(player.getLocation())", "org.bukkit.entity.Player.sendMessage(((((org.bukkit.ChatColor.RED) + \"**Explosion area regenerating in \") + warning) + \" seconds**\"))"], "Fixed commit": "111ca4cd06aa9da81df68d50b00a2379865b6e02", "Url": "https://api.github.com/repos/michaelkrauty/CarbonCreepers", "Date": "2014-07-15T20:25:46Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.Object>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((player.getWorld()) == (location.getWorld())) { if ((location.distance(player.getLocation())) <= 25) { if (!(sent.contains(player))) { player.sendMessage(((org.bukkit.ChatColor.RED) + \"**Explosion area regenerating**\")); sent.add(player); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6729/buggy-version/src.main.java.me.michaelkrauty.CarbonCreepers.Main.java", "BodyUseAPI": ["org.bukkit.entity.Player.getLocation()", "java.util.ArrayList<org.bukkit.entity.Player>.contains(org.bukkit.entity.Player)", "org.bukkit.Location.distance(player.getLocation())", "org.bukkit.entity.Player.sendMessage(((org.bukkit.ChatColor.RED) + \"**Explosion area regenerating**\"))", "java.util.ArrayList<org.bukkit.entity.Player>.add(org.bukkit.entity.Player)"], "Fixed commit": "111ca4cd06aa9da81df68d50b00a2379865b6e02", "Url": "https://api.github.com/repos/michaelkrauty/CarbonCreepers", "Date": "2014-07-15T20:25:46Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hashTagList.isFocused())) { double scrollAmt = (taskScrollPane.getVvalue()) + (((taskScrollPane.getHeight()) / 4) / (taskScrollPane.getContent().getBoundsInLocal().getHeight())); taskScrollPane.setVvalue(scrollAmt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/700/buggy-version/task_catalyst.src.main.java.moustachio.task_catalyst.UIController.java", "BodyUseAPI": [], "Fixed commit": "8b2ede757c466dcdf02a5940d762a251ad9f4992", "Url": "https://api.github.com/repos/cs2103aug2014-t17-4j/main", "Date": "2014-11-04T02:31:32Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hashTagList.isFocused())) { double scrollAmt = (taskScrollPane.getVvalue()) - (((taskScrollPane.getHeight()) / 4) / (taskScrollPane.getContent().getBoundsInLocal().getHeight())); taskScrollPane.setVvalue(scrollAmt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/700/buggy-version/task_catalyst.src.main.java.moustachio.task_catalyst.UIController.java", "BodyUseAPI": [], "Fixed commit": "8b2ede757c466dcdf02a5940d762a251ad9f4992", "Url": "https://api.github.com/repos/cs2103aug2014-t17-4j/main", "Date": "2014-11-04T02:31:32Z"},
{"Line": "=>997", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getResources()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (hasNavBar(resources)) { int resourceId = resources.getIdentifier(\"navigation_bar_height\", \"dimen\", \"android\"); if (resourceId > 0) { bottomPadding += resources.getDimensionPixelSize(resourceId); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5186/buggy-version/library.src.com.jeremyfeinstein.slidingmenu.lib.SlidingMenu.java", "BodyUseAPI": ["android.content.res.Resources.getDimensionPixelSize(int)", "android.content.res.Resources.getIdentifier(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "0af3f78af36d735620f979ca82b34a45c5d326a5", "Url": "https://api.github.com/repos/Marlinski/SlidingMenu", "Date": "2017-04-08T13:49:18Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isLogined())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1400/buggy-version/src.main.java.com.allen.guide.model.imples.GuideModel.java", "BodyUseAPI": [], "Fixed commit": "a924fc6e868387b50c98ec2e300ab354e0b91884", "Url": "https://api.github.com/repos/ALLENnan/ClinicalGuide", "Date": "2017-03-06T13:06:54Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasMaster())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/552/buggy-version/src.main.java.de.katzenpapst.amunra.tile.TileEntityMothershipEngineBooster.java", "BodyUseAPI": [], "Fixed commit": "a432eef79010dcaf9b8ed802039c2e3d59371f5d", "Url": "https://api.github.com/repos/katzenpapst/amunra", "Date": "2017-01-08T17:01:41Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.xCoord) > (this.masterX)) { return new de.katzenpapst.amunra.vec.Vector3int(((xCoord) + 1), yCoord, zCoord); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/552/buggy-version/src.main.java.de.katzenpapst.amunra.tile.TileEntityMothershipEngineBooster.java", "BodyUseAPI": [], "Fixed commit": "a432eef79010dcaf9b8ed802039c2e3d59371f5d", "Url": "https://api.github.com/repos/katzenpapst/amunra", "Date": "2017-01-08T17:01:41Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.zCoord) > (this.masterZ)) { return new de.katzenpapst.amunra.vec.Vector3int(xCoord, yCoord, ((zCoord) + 1)); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/552/buggy-version/src.main.java.de.katzenpapst.amunra.tile.TileEntityMothershipEngineBooster.java", "BodyUseAPI": [], "Fixed commit": "a432eef79010dcaf9b8ed802039c2e3d59371f5d", "Url": "https://api.github.com/repos/katzenpapst/amunra", "Date": "2017-01-08T17:01:41Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"[WORD_ID\".equals(tmp[0])) lastWasLemmaStart = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3052/buggy-version/src.main.java.fi.seco.lexical.hfst.HFSTLexicalAnalysisService.java", "BodyUseAPI": [], "Fixed commit": "12d7868488732c00c8326883b737be67bcd6cd1d", "Url": "https://api.github.com/repos/jiemakel/seco-lexicalanalysis", "Date": "2017-03-31T09:22:20Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (columnType.isAnnotationPresent(com.orm.dsl.Table.class)) { java.lang.reflect.Field field = null; try { field = columnType.getDeclaredField(\"id\"); field.setAccessible(true); } catch (java.lang.NoSuchFieldException e) { e.printStackTrace(); } values.put(columnName, (field != null ? java.lang.String.valueOf(field.get(columnValue)) : \"0\")); }else if (com.orm.SugarRecord.class.isAssignableFrom(columnType)) { values.put(columnName, (columnValue != null ? java.lang.String.valueOf(((com.orm.SugarRecord) (columnValue)).getId()) : \"0\")); }else { if ((columnType.equals(java.lang.Short.class)) || (columnType.equals(short.class))) { values.put(columnName, ((java.lang.Short) (columnValue))); }else if ((columnType.equals(java.lang.Integer.class)) || (columnType.equals(int.class))) { values.put(columnName, ((java.lang.Integer) (columnValue))); }else if ((columnType.equals(java.lang.Long.class)) || (columnType.equals(long.class))) { values.put(columnName, ((java.lang.Long) (columnValue))); }else if ((columnType.equals(java.lang.Float.class)) || (columnType.equals(float.class))) { values.put(columnName, ((java.lang.Float) (columnValue))); }else if ((columnType.equals(java.lang.Double.class)) || (columnType.equals(double.class))) { values.put(columnName, ((java.lang.Double) (columnValue))); }else if ((columnType.equals(java.lang.Boolean.class)) || (columnType.equals(boolean.class))) { values.put(columnName, ((java.lang.Boolean) (columnValue))); }else if (java.sql.Timestamp.class.equals(columnType)) { try { values.put(columnName, ((java.sql.Timestamp) (column.get(object))).getTime()); } catch (java.lang.NullPointerException e) { values.put(columnName, ((java.lang.Long) (null))); } }else if (java.util.Date.class.equals(columnType)) { try { values.put(columnName, ((java.util.Date) (column.get(object))).getTime()); } catch (java.lang.NullPointerException e) { values.put(columnName, ((java.lang.Long) (null))); } }else if (java.util.Calendar.class.equals(columnType)) { try { values.put(columnName, ((java.util.Calendar) (column.get(object))).getTimeInMillis()); } catch (java.lang.NullPointerException e) { values.put(columnName, ((java.lang.Long) (null))); } }else { if (columnValue == null) { values.putNull(columnName); }else { values.put(columnName, java.lang.String.valueOf(columnValue)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5260/buggy-version/library.src.main.java.com.orm.util.ReflectionUtil.java", "BodyUseAPI": ["java.lang.Class<?>.equals(java.lang.Class)", "java.lang.Class<?>.equals(java.lang.Class)", "java.lang.Class<?>.equals(java.lang.Class)", "java.lang.Class<?>.equals(java.lang.Class)", "java.lang.Class<?>.equals(java.lang.Class)", "java.lang.Class.equals(java.lang.Class<?>)", "java.lang.Class<?>.equals(java.lang.Class)", "java.lang.Class<?>.equals(java.lang.Class)", "java.lang.Class<?>.getDeclaredField(java.lang.String)", "java.lang.Class<?>.equals(java.lang.Class)", "java.lang.Class.isAssignableFrom(java.lang.Class<?>)", "java.lang.Class.equals(java.lang.Class<?>)", "java.lang.Class<?>.equals(java.lang.Class)", "java.lang.Class<?>.equals(java.lang.Class)", "java.lang.Class<?>.equals(java.lang.Class)", "java.lang.Class.equals(java.lang.Class<?>)", "java.lang.Class<?>.equals(java.lang.Class)"], "Fixed commit": "66a5b3788466179ee23917c97526c523642317a2", "Url": "https://api.github.com/repos/chennaione/sugar", "Date": "2015-03-30T02:00:36Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (object.getClass().isAnnotationPresent(com.orm.dsl.Table.class)) { if (idField != null) { idField.setAccessible(true); try { idField.set(object, new java.lang.Long(id)); } catch (java.lang.IllegalAccessException e) { e.printStackTrace(); } } }else if (com.orm.SugarRecord.class.isAssignableFrom(object.getClass())) { ((com.orm.SugarRecord) (object)).setId(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5260/buggy-version/library.src.main.java.com.orm.SugarRecord.java", "BodyUseAPI": ["java.lang.Object.getClass()", "java.lang.reflect.Field.set(java.lang.Object,java.lang.Long)", "java.lang.Class.isAssignableFrom(java.lang.Class<? extends java.lang.Object>)"], "Fixed commit": "66a5b3788466179ee23917c97526c523642317a2", "Url": "https://api.github.com/repos/chennaione/sugar", "Date": "2015-03-30T02:00:36Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((column.getName()) == \"id\") { idField = column; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5260/buggy-version/library.src.main.java.com.orm.SugarRecord.java", "BodyUseAPI": [], "Fixed commit": "66a5b3788466179ee23917c97526c523642317a2", "Url": "https://api.github.com/repos/chennaione/sugar", "Date": "2015-03-30T02:00:36Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((profileSetting2.getFileData()) != null) { byte[] encodeBase64 = org.apache.commons.codec.binary.Base64.encodeBase64(profileSetting2.getFileData()); java.lang.String base64Encoded = new java.lang.String(encodeBase64, \"UTF-8\"); profileSetting2.setPicImg(base64Encoded); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5322/buggy-version/src.main.java.com.click.controller.SearchController.java", "BodyUseAPI": ["org.apache.commons.codec.binary.Base64.encodeBase64(profileSetting2.getFileData())", "com.click.entity.ProfileSetting.setPicImg(java.lang.String)", "com.click.entity.ProfileSetting.getFileData()"], "Fixed commit": "af90f5a468ed3ca1a93e985f4882f02dc066c0f7", "Url": "https://api.github.com/repos/srivastava-rahul/Kheechodalo", "Date": "2017-08-13T04:11:06Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.click.service.ProfileSettingService.findProfileByEmailId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((profileSetting.getFileData()) != null) { com.click.controller.ProfileController.LOG.info((\"rahl***************\" + (profileSetting.getFileData()))); byte[] encodeBase64 = org.apache.commons.codec.binary.Base64.encodeBase64(profileSetting.getFileData()); java.lang.String base64Encoded = new java.lang.String(encodeBase64, \"UTF-8\"); model.addAttribute(\"picImg\", base64Encoded); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5322/buggy-version/src.main.java.com.click.controller.ProfileController.java", "BodyUseAPI": ["com.click.entity.ProfileSetting.getFileData()", "com.click.entity.ProfileSetting.getFileData()", "org.apache.commons.codec.binary.Base64.encodeBase64(profileSetting.getFileData())", "org.apache.log4j.Logger.info((\"rahl***************\" + (profileSetting.getFileData())))"], "Fixed commit": "af90f5a468ed3ca1a93e985f4882f02dc066c0f7", "Url": "https://api.github.com/repos/srivastava-rahul/Kheechodalo", "Date": "2017-08-13T04:11:06Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.entities.Item.getContainer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cont instanceof model.entities.ProductGroup) { groupName = cont.getName(); }else { unitName = cont.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2788/buggy-version/src.gui.inventory.InventoryController.java", "BodyUseAPI": ["model.entities.ProductContainer.getName()", "model.entities.ProductContainer.getName()"], "Fixed commit": "954a78419e04b518b45f423e1ddcd9d9e5ca5415", "Url": "https://api.github.com/repos/caseymonc/hit", "Date": "2012-10-12T14:50:29Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gui.inventory.ProductContainerData.getTag()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (container != null) { items = sortItemsByEntryDate(container.getItemsByProduct(product)); }else { items = sortItemsByEntryDate(((java.util.Set<model.entities.Item>) (pController.getItemsByProduct(product)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2788/buggy-version/src.gui.inventory.InventoryController.java", "BodyUseAPI": ["gui.inventory.InventoryController.sortItemsByEntryDate(container.getItemsByProduct(product))", "model.entities.ProductContainer.getItemsByProduct(model.entities.Product)"], "Fixed commit": "954a78419e04b518b45f423e1ddcd9d9e5ca5415", "Url": "https://api.github.com/repos/caseymonc/hit", "Date": "2012-10-12T14:50:29Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(world.isRemote)) { net.minecraft.tileentity.TileEntity te = world.getTileEntity(x, y, z); if (te instanceof rubedo.tileentity.TileEntityMagmaFurnace) { player.openGui(RubedoCore.instance, GuiHandler.Types.MAGMA_FURNACE.ordinal(), world, x, y, z); return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4627/buggy-version/src.main.java.rubedo.blocks.BlockMagmaFurnace.java", "BodyUseAPI": ["net.minecraft.entity.player.EntityPlayer.openGui(RubedoCore.instance,GuiHandler.Types.MAGMA_FURNACE.ordinal(),net.minecraft.world.World,int,int,int)", "net.minecraft.world.World.getTileEntity(int,int,int)"], "Fixed commit": "358048de3416e80bb9a6870260e3f78f39413fae", "Url": "https://api.github.com/repos/Katalliaan/Rubedo", "Date": "2014-10-23T16:15:53Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newText.contains(\"\\\"\")) { data.filter = \"\"; android.widget.Toast.makeText(this, \"Bez \\\" Prosz\\u0119 ;)\", Toast.LENGTH_SHORT).show(); }else { data.filter = newText; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7954/buggy-version/Ajwon.src.main.java.com.apps.szpansky.ajwon_app.tools.SimpleActivity.java", "BodyUseAPI": [], "Fixed commit": "60413c40774747c54647e6a8860ed03309496639", "Url": "https://api.github.com/repos/Szpansky/Ajwon_App", "Date": "2017-07-08T23:03:06Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (unit)) { return super.getDetails(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3550/buggy-version/MekHQ.src.mekhq.campaign.parts.equipment.JumpJet.java", "BodyUseAPI": [], "Fixed commit": "667480ca3a8a6cc2e1b62ddeabeac655a48b3e46", "Url": "https://api.github.com/repos/Akjosch/mekhq", "Date": "2015-09-01T14:57:13Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getSupportFragmentManager().findFragmentByTag(com.silpe.vire.slip.MainActivity.QR_FRAGMENT)) == null) { this.getSupportFragmentManager().beginTransaction().replace(R.id.toplevel, com.silpe.vire.slip.fragments.QRFragment.newInstance(user.uid), com.silpe.vire.slip.MainActivity.QR_FRAGMENT).addToBackStack(com.silpe.vire.slip.MainActivity.QR_FRAGMENT).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4548/buggy-version/app.src.main.java.com.silpe.vire.slip.MainActivity.java", "BodyUseAPI": ["this.getSupportFragmentManager().beginTransaction().replace(R.id.toplevel, com.silpe.vire.slip.fragments.QRFragment.newInstance(user.uid), com.silpe.vire.slip.MainActivity.QR_FRAGMENT).addToBackStack(java.lang.String)", "this.getSupportFragmentManager().beginTransaction().replace(R.id.toplevel, com.silpe.vire.slip.fragments.QRFragment.newInstance(user.uid), com.silpe.vire.slip.MainActivity.QR_FRAGMENT).addToBackStack(com.silpe.vire.slip.MainActivity.QR_FRAGMENT).commit()", "this.getSupportFragmentManager().beginTransaction().replace(R.id.toplevel,com.silpe.vire.slip.fragments.QRFragment.newInstance(user.uid),java.lang.String)"], "Fixed commit": "0acb427312061f4c03eabc0b5068245d3c2d70ef", "Url": "https://api.github.com/repos/Kamagawa/SlipCard", "Date": "2017-03-09T06:25:51Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (loc != null) agent.setAttribute(IKeyword.REAL_SPEED, ((loc.euclidianDistanceTo(location)) / (scope.getClock().getStepInSeconds()))); else agent.setAttribute(IKeyword.REAL_SPEED, 0.0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/156/buggy-version/msi.gama.core.src.msi.gaml.skills.MovingSkill.java", "BodyUseAPI": ["msi.gama.metamodel.agent.IAgent.setAttribute(IKeyword.REAL_SPEED,((loc.euclidianDistanceTo(location)) / (scope.getClock().getStepInSeconds())))", "msi.gama.metamodel.shape.ILocation.euclidianDistanceTo(msi.gama.metamodel.shape.ILocation)"], "Fixed commit": "a618ffa6a3cd6e30d2e8582adb7d1623e114c656", "Url": "https://api.github.com/repos/gama-platform/gama", "Date": "2017-03-01T01:35:45Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(localSocket.isClosed())) localSocket.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5123/buggy-version/common.src.main.java.com.justinmichaud.remotesupport.common.LocalTunnelClientService.java", "BodyUseAPI": ["java.net.Socket.close()"], "Fixed commit": "2f5a39ef868617ebc5c48ca0deeebeaf931801f4", "Url": "https://api.github.com/repos/justinmichaud/remote-support", "Date": "2016-07-29T20:13:50Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.axelby.podax.ui.SearchFragment.SearchResultsAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cursor == null) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6576/buggy-version/src.com.axelby.podax.ui.SearchFragment.java", "BodyUseAPI": [], "Fixed commit": "8da764906b05884d7c1c2fd8fa4a24fe6da4b8b4", "Url": "https://api.github.com/repos/thasmin/Podax", "Date": "2012-09-08T21:25:47Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isPercentageOfAmount()) { this.minCap = minCap; this.maxCap = maxCap; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6805/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.portfolio.charge.domain.Charge.java", "BodyUseAPI": [], "Fixed commit": "961e581f63fd77302f01b7c9e0d13c009e306874", "Url": "https://api.github.com/repos/sangameshn/mifosx", "Date": "2013-10-18T11:19:17Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (childNode instanceof org.opendaylight.yangtools.yang.model.api.LeafSchemaNode) { org.json.JSONObject property = processLeafNode(((org.opendaylight.yangtools.yang.model.api.LeafSchemaNode) (childNode))); properties.put(childNode.getQName().getLocalName(), property); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5508/buggy-version/opendaylight.md-sal.sal-rest-docgen.src.main.java.org.opendaylight.controller.sal.rest.doc.impl.ModelGenerator.java", "BodyUseAPI": ["org.json.JSONObject.put(childNode.getQName().getLocalName(),org.json.JSONObject)", "childNode.getQName().getLocalName()", "org.opendaylight.yangtools.yang.model.api.DataSchemaNode.getQName()"], "Fixed commit": "3f25afcf0f3faa4d372329faf1a3c90c6711edbd", "Url": "https://api.github.com/repos/mandeepdhami/controller", "Date": "2014-10-15T16:25:07Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((childNode instanceof org.opendaylight.yangtools.yang.model.api.ContainerSchemaNode) || (childNode instanceof org.opendaylight.yangtools.yang.model.api.ListSchemaNode)) { processDataNodeContainer(((org.opendaylight.yangtools.yang.model.api.DataNodeContainer) (childNode)), moduleName, models, true, schemaContext); processDataNodeContainer(((org.opendaylight.yangtools.yang.model.api.DataNodeContainer) (childNode)), moduleName, models, false, schemaContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5508/buggy-version/opendaylight.md-sal.sal-rest-docgen.src.main.java.org.opendaylight.controller.sal.rest.doc.impl.ModelGenerator.java", "BodyUseAPI": [], "Fixed commit": "3f25afcf0f3faa4d372329faf1a3c90c6711edbd", "Url": "https://api.github.com/repos/mandeepdhami/controller", "Date": "2014-10-15T16:25:07Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.jboss.portletbridge.bridge.scope.BridgeRequestScope>.remove(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (scope != null) { scope.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1773/buggy-version/core.impl.src.main.java.org.jboss.portletbridge.bridge.scope.BridgeRequestScopeManagerImpl.java", "BodyUseAPI": ["org.jboss.portletbridge.bridge.scope.BridgeRequestScope.clear()"], "Fixed commit": "d92bc0884cec8a43a1cf07338899c3408685eaf0", "Url": "https://api.github.com/repos/jpkrohling/portletbridge", "Date": "2015-02-22T02:20:14Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b == false) { playerHistory.addStep(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5531/buggy-version/src.Player.java", "BodyUseAPI": [], "Fixed commit": "8768a6dee3f337abfc0dacaa4e08bf32387dfe05", "Url": "https://api.github.com/repos/ryanseys/zuul", "Date": "2012-10-18T21:13:53Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (c.getCommandWord().equals(CommandWords.DROP)) { Item i = ((Item) (c.getSecondWord())); removeItem(i); if (b == false) { playerHistory.addStep(c); } }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5531/buggy-version/src.Player.java", "BodyUseAPI": ["PlayerHistory.addStep(Command)", "Command.getSecondWord()"], "Fixed commit": "8768a6dee3f337abfc0dacaa4e08bf32387dfe05", "Url": "https://api.github.com/repos/ryanseys/zuul", "Date": "2012-10-18T21:13:53Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { bean = ((com.ysy.ysywb.bean.MessageListBean) (savedInstanceState.getSerializable(\"bean\"))); }else { bean = com.ysy.ysywb.support.database.DatabaseManager.getInstance().getHomeLineMsgList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2576/buggy-version/app.src.main.java.com.ysy.ysywb.ui.timeline.FriendsTimeLineFragment.java", "BodyUseAPI": ["android.os.Bundle.getSerializable(java.lang.String)"], "Fixed commit": "2851deab90b3ebb15d98dfcd9415c1d549fbc1bf", "Url": "https://api.github.com/repos/yeshiyuan00/YSYWB", "Date": "2015-09-17T01:26:55Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lac.getParameters().size()) == 2) return java.lang.String.format(\"%s->%s(%s -> begin() + %s, %s)\", lac.getExpression(), \"insert\", lac.getExpression(), lac.getParameters().get(0), gool.generator.GeneratorHelper.joinParams(lac.getParameters().subList(1, lac.getParameters().size()))); else return java.lang.String.format(\"%s->%s(%s)\", lac.getExpression(), \"push_back\", gool.generator.GeneratorHelper.joinParams(lac.getParameters()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7195/buggy-version/src.gool.generator.cpp.CppGenerator.java", "BodyUseAPI": ["lac.getParameters().subList(int,lac.getParameters().size())", "lac.getParameters().size()", "gool.ast.list.ListAddCall.getParameters()", "java.lang.String.format(java.lang.String,lac.getExpression(),java.lang.String,gool.generator.GeneratorHelper.joinParams(lac.getParameters()))", "gool.ast.list.ListAddCall.getParameters()", "gool.ast.list.ListAddCall.getExpression()", "gool.ast.list.ListAddCall.getExpression()", "lac.getParameters().get(int)", "gool.generator.GeneratorHelper.joinParams(lac.getParameters().subList(1, lac.getParameters().size()))", "gool.ast.list.ListAddCall.getParameters()", "gool.ast.list.ListAddCall.getParameters()", "gool.ast.list.ListAddCall.getExpression()", "java.lang.String.format(java.lang.String,lac.getExpression(),java.lang.String,lac.getExpression(),lac.getParameters().get(0),gool.generator.GeneratorHelper.joinParams(lac.getParameters().subList(1, lac.getParameters().size())))", "gool.generator.GeneratorHelper.joinParams(lac.getParameters())"], "Fixed commit": "6629e355d45b3719dff403eb537b4466d8c1f8a9", "Url": "https://api.github.com/repos/lublud/GOOL", "Date": "2015-03-15T13:37:40Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(members.contains(newMember))) { members.add(newMember); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2844/buggy-version/src.main.java.com.blogboard.server.data.entity.Board.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "b81f87b5fd719480e7117c1ccfb8c1e96fbbce4a", "Url": "https://api.github.com/repos/ReneeSlamka/BlogBoard", "Date": "2015-11-24T20:51:40Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ds.startsWith(\"@\")) { ds = ds.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3907/buggy-version/src.main.java.com.mcjty.rftools.dimension.description.DimensionDescriptor.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "40bc64173237f04d6bc72d753a61b31919af0a98", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2015-03-15T13:51:54Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.java_websocket.util.Charsetfunctions.stringUtf8(frame.getPayloadData())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (decodedString.equals(\",\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2987/buggy-version/signalr-client-sdk.src.main.java.microsoft.aspnet.signalr.client.transport.WebsocketTransport.java", "BodyUseAPI": [], "Fixed commit": "5a0f3d65cd02e7d1aec799d3c638371007b78c33", "Url": "https://api.github.com/repos/maks-pasichnyk/signalr-java-client", "Date": "2017-12-06T14:16:22Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tags == null) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4979/buggy-version/samples.java-jersey-jaxrs.src.main.java.com.wordnik.swagger.sample.data.PetData.java", "BodyUseAPI": [], "Fixed commit": "04642ff55159db4ef8d3e594c3a8d3d56c73d091", "Url": "https://api.github.com/repos/swagger-api/swagger-core", "Date": "2015-03-30T16:57:58Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.jfrog.hudson.ArtifactoryServer.log.isLoggable(java.util.logging.Level.FINE)) { org.jfrog.hudson.ArtifactoryServer.log.log(java.util.logging.Level.WARNING, ((\"Could not obtain local repositories list from '\" + (url)) + \"'\"), e); }else { org.jfrog.hudson.ArtifactoryServer.log.log(java.util.logging.Level.WARNING, (((\"Could not obtain local repositories list from '\" + (url)) + \"': \") + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1166/buggy-version/src.main.java.org.jfrog.hudson.ArtifactoryServer.java", "BodyUseAPI": ["java.util.logging.Logger.log(java.util.logging.Level,java.lang.String,java.io.IOException)", "java.util.logging.Logger.log(java.util.logging.Level,java.lang.String)"], "Fixed commit": "ce029010fd5311760c5acd547e58209b2fb4a305", "Url": "https://api.github.com/repos/jenkinsci/artifactory-plugin", "Date": "2012-02-29T07:33:51Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (ratingsHtml != null) { java.util.List<ba.aljovic.amer.application.database.entities.userratingsjob.MovieRating> movieRatingsForPage = imdbParser.getRatingsForPage(ratingsHtml, user); movieRatings.addAll(movieRatingsForPage); ratingsUrl = ((user.getUrl()) + \"ratings\") + (imdbParser.nextUserRatingsPage(ratingsHtml)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3201/buggy-version/src.main.java.ba.aljovic.amer.application.batch.chunk.userratings.ImdbUserProcessor.java", "BodyUseAPI": ["ba.aljovic.amer.application.component.service.ImdbParser.getRatingsForPage(java.lang.String,ba.aljovic.amer.application.database.entities.userratingsjob.ImdbUser)", "ba.aljovic.amer.application.component.service.ImdbParser.nextUserRatingsPage(java.lang.String)"], "Fixed commit": "804a851431b8cd28395ac0e777edfaa828ba5bfa", "Url": "https://api.github.com/repos/ameraljovic/movie_crawler", "Date": "2015-03-11T06:32:08Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.carting.service.CompetitionService.getCompetitionById(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (competition.isEnabled()) { model.addAttribute(\"competition\", competition); return new org.springframework.web.servlet.ModelAndView(\"competition_add_edit\"); }else { return new org.springframework.web.servlet.ModelAndView((\"redirect:/competition/\" + (competition.getId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1945/buggy-version/src.main.java.net.carting.web.CompetitionController.java", "BodyUseAPI": ["net.carting.domain.Competition.getId()", "org.springframework.ui.Model.addAttribute(java.lang.String,net.carting.domain.Competition)"], "Fixed commit": "bcebcad6bdf8c1f4d9d9042f420262927df3cfae", "Url": "https://api.github.com/repos/nromanen/Ch-023", "Date": "2014-07-21T14:25:41Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.arcbees.gaestudio.server.service.auth.AuthService.checkLogin()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user == null) { throw new com.arcbees.gaestudio.server.exception.UserNotLoggedInException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7444/buggy-version/gae-studio.gae-studio-server.src.main.java.com.arcbees.gaestudio.server.license.LicenseCheckerImpl.java", "BodyUseAPI": [], "Fixed commit": "93ef39012bb5eed618e1e366dd88c6ad82ae148f", "Url": "https://api.github.com/repos/ArcBees/gae-studio", "Date": "2014-04-24T17:01:43Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (getInnerParamResolver(type))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5979/buggy-version/src.main.java.vee.web.action.reflect.param.resolve.DefaultParamResolverMgr.java", "BodyUseAPI": [], "Fixed commit": "3af88495b70f7813b0c858b58c46c60bce9a35ab", "Url": "https://api.github.com/repos/RisingV/web-v", "Date": "2015-11-02T09:59:31Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(splittedWay.contains(way))) { splittedWay.add(way); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/874/buggy-version/src.main.java.ch.zhaw.jroute.routedata.BoxHandler.java", "BodyUseAPI": ["java.util.List<ch.zhaw.jroute.model.Way>.add(ch.zhaw.jroute.model.Way)"], "Fixed commit": "f9c247a4a59c014803f595317848399c56903b1a", "Url": "https://api.github.com/repos/barneyyy844/jroute", "Date": "2013-05-28T12:50:38Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"resourceClassName\".equals(name)) { return getResourceClassName(true); }else if (\"resourceClassNameNoGeneric\".equals(name)) { return getResourceClassName(false); }else if (\"contentTypeProfileId\".equals(name)) { return getProfileId(); }else if (\"sectionClassName\".equals(name)) { return getSectionClassName(); }else if (\"editorClassName\".equals(name)) { return getEditorClassName(); }else if (\"filterClassName\".equals(name)) { return getFilterClassName(); }else if (\"compositeName\".equals(name)) { return getCompositeClassName(); }else if (\"bindingsCode\".equals(name)) { return getPropertyBindingsCode(); }else if (\"controlGroupCode\".equals(name)) { return getControlGroupCode(); }else if (\"propertyFields\".equals(name)) { return getPropertyFieldsCode(); }else { return super.getStringOption(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7134/buggy-version/plugins.gov.redhawk.ide.ui.templates.src.gov.redhawk.ide.internal.ui.templates.ResourceControlPanelTemplateSection.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "gov.redhawk.ide.internal.ui.templates.BaseControlPanelTemplate.getStringOption(java.lang.String)"], "Fixed commit": "abf3752c2e37edf1efd9e6cb6ea02e5269c05a6f", "Url": "https://api.github.com/repos/RedhawkSDR/eclipse-gov.redhawk.ide", "Date": "2014-04-29T18:46:23Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasGeneric) { return \"gov.redhawk.model.sca.ScaDevice<?>\"; }else { return \"gov.redhawk.model.sca.ScaDevice\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7134/buggy-version/plugins.gov.redhawk.ide.ui.templates.src.gov.redhawk.ide.internal.ui.templates.ResourceControlPanelTemplateSection.java", "BodyUseAPI": [], "Fixed commit": "abf3752c2e37edf1efd9e6cb6ea02e5269c05a6f", "Url": "https://api.github.com/repos/RedhawkSDR/eclipse-gov.redhawk.ide", "Date": "2014-04-29T18:46:23Z"},
{"Line": "=>567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((null != (session.getDataHandler())) && (null != (session.getDataHandler().getStore()))) { boolean isSessionReady = session.getDataHandler().getStore().isReady(); if (!isSessionReady) { org.matrix.androidsdk.util.Log.e(im.vector.activity.CommonActivityUtils.LOG_TAG, ((\"## startEventStreamService() : the session \" + (session.getMyUserId())) + \" is not opened\")); session.getDataHandler().getStore().open(); }else { org.matrix.androidsdk.util.Log.e(im.vector.activity.CommonActivityUtils.LOG_TAG, (\"## startEventStreamService() : check if the crypto of the session \" + (session.getMyUserId()))); session.checkCrypto(); } matrixIds.add(session.getCredentials().userId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5282/buggy-version/vector.src.main.java.im.vector.activity.CommonActivityUtils.java", "BodyUseAPI": ["org.matrix.androidsdk.MXSession.getDataHandler()", "org.matrix.androidsdk.MXSession.getCredentials()", "org.matrix.androidsdk.util.Log.e(java.lang.String,(\"## startEventStreamService() : check if the crypto of the session \" + (session.getMyUserId())))", "org.matrix.androidsdk.MXSession.checkCrypto()", "org.matrix.androidsdk.MXSession.getMyUserId()", "session.getDataHandler().getStore().open()", "org.matrix.androidsdk.util.Log.e(java.lang.String,((\"## startEventStreamService() : the session \" + (session.getMyUserId())) + \" is not opened\"))", "org.matrix.androidsdk.MXSession.getDataHandler()", "session.getDataHandler().getStore()", "session.getDataHandler().getStore().isReady()", "org.matrix.androidsdk.MXSession.getMyUserId()", "java.util.ArrayList<java.lang.String>.add(session.getCredentials().userId)", "session.getDataHandler().getStore()"], "Fixed commit": "19ad3a8fc483ed446a76bda2c925fa06aa4355f5", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2017-07-10T12:58:29Z"},
{"Line": "=>746", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(activityType.equals(individual(\"legacy:StatusChangeActivity\")))) { triggerActivityAssignments(serviceActivity, activityType, outcome, assignedTo, bo, messages); triggerReferralCaseOnOutcome(outcome, bo); triggerCloseCaseOnOutcome(serviceActivity, outcome, bo, messages); triggerSendEmailOnOutCome(outcome, bo, messages); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5681/buggy-version/src.java.org.sharegov.cirm.legacy.ActivityManager.java", "BodyUseAPI": ["org.sharegov.cirm.legacy.ActivityManager.triggerActivityAssignments(org.semanticweb.owlapi.model.OWLNamedIndividual,org.semanticweb.owlapi.model.OWLNamedIndividual,org.semanticweb.owlapi.model.OWLNamedIndividual,java.lang.String,org.sharegov.cirm.BOntology,java.util.List<org.sharegov.cirm.legacy.CirmMessage>)"], "Fixed commit": "17edbacd4376974c07a2fb41064684b6e76dbe99", "Url": "https://api.github.com/repos/sharegov/opencirm", "Date": "2016-11-24T20:24:48Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activity) != null) { android.view.inputmethod.InputMethodManager imm = ((android.view.inputmethod.InputMethodManager) (activity.getSystemService(Context.INPUT_METHOD_SERVICE))); imm.hideSoftInputFromWindow(edit_text_native.getWindowToken(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/9090/buggy-version/app.src.main.java.ch.unibe.scg.zeeguu.Search_Fragments.FragmentText.java", "BodyUseAPI": [], "Fixed commit": "e035538a12123825a54ca57454febb00437299e5", "Url": "https://api.github.com/repos/SimpleDay/Zeeguu", "Date": "2015-04-22T16:16:57Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (locationsURL != null) { bufferedReader = new java.io.BufferedReader(new java.io.FileReader(locationsURL.getFile())); java.lang.String jsonContent = \"\"; java.lang.String line = null; while ((line = bufferedReader.readLine()) != null) jsonContent += line; locations = new org.codehaus.jettison.json.JSONObject(jsonContent); bufferedReader.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4913/buggy-version/src.main.java.it.istc.cnr.stlab.clodg.workflow.GenerateAppData.java", "BodyUseAPI": ["java.net.URL.getFile()"], "Fixed commit": "7c277db6a189012b141f65d71bd34345cfdccb8e", "Url": "https://api.github.com/repos/AnLiGentile/cLODg", "Date": "2015-10-05T10:50:15Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isBusy())) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8917/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.experimental.VisionRobot.java", "BodyUseAPI": [], "Fixed commit": "d27d39bfb5c776949ff7cc7b29bbdb0bf370533d", "Url": "https://api.github.com/repos/Team327/Competition16-17", "Date": "2017-03-08T23:17:41Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((channelVulnerabilityFilterService) == null) { throw new java.lang.IllegalStateException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8952/buggy-version/threadfix-main.src.main.java.com.denimgroup.threadfix.webapp.controller.ScannerMappingsController.java", "BodyUseAPI": [], "Fixed commit": "46c168c4aa34c5d6fffcc2d65203fb4aedee19f1", "Url": "https://api.github.com/repos/denimgroup/threadfix", "Date": "2015-08-07T18:34:26Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player.getGameBoard().getNumOfVillager()) == 0) { errorLb = new pulpcore.sprite.Label(\"No villager available to gather!\", 0, 0); }else { errorLb = new pulpcore.sprite.Label(\"No resource can be gathered!!\", 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5230/buggy-version/src.menuscene.GatherScreen.java", "BodyUseAPI": [], "Fixed commit": "4df92700a4ec37c9d0180bcf653856c7923482e5", "Url": "https://api.github.com/repos/strtsoia/AgeOfMyth", "Date": "2011-11-14T23:25:33Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["DAO.UserQueries.getActiveUsers()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((usernames.size()) < 5) || ((points.size()) < 5)) { toRet.put(\"usernames\", usernames); toRet.put(\"points\", points); }else { toRet.put(\"usernames\", usernames.subList(0, 5)); toRet.put(\"points\", points.subList(0, 5)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6631/buggy-version/APPlaus.src.java.DbManager.MongoDbImpl.StatisticsManagerImpl.java", "BodyUseAPI": ["java.util.Map.put(java.lang.String,java.util.List<java.lang.Integer>)", "java.util.List<java.lang.String>.subList(int,int)", "java.util.Map.put(java.lang.String,java.util.List<java.lang.Integer>)", "java.util.Map.put(java.lang.String,java.util.List<java.lang.String>)", "java.util.List<java.lang.Integer>.subList(int,int)", "java.util.Map.put(java.lang.String,java.util.List<java.lang.String>)"], "Fixed commit": "1c653aef1dedd4b9ac1c55d3d0d3b8688e3876f6", "Url": "https://api.github.com/repos/eirikst/applaus", "Date": "2014-04-22T13:30:49Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (channel == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6165/buggy-version/src.managers.ChannelManager.java", "BodyUseAPI": [], "Fixed commit": "ac76046de241cb0874aec79d651f64b17a3fa324", "Url": "https://api.github.com/repos/palepail/palebotV3", "Date": "2015-08-11T03:53:50Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (featureMode.equals(Constants.FM_UNIT)) { files = filterRedundantCasByName(files); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/9057/buggy-version/dkpro-tc-core.src.main.java.org.dkpro.tc.core.task.MetaInfoTask.java", "BodyUseAPI": [], "Fixed commit": "0c4a14df99fc0e886e043e9e560b3ea2631470c8", "Url": "https://api.github.com/repos/dkpro/dkpro-tc", "Date": "2016-04-18T12:52:14Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (featureMode.equals(Constants.FM_UNIT)) { files = filterRedundantCasByName(files); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/9057/buggy-version/dkpro-tc-core.src.main.java.org.dkpro.tc.core.task.MetaInfoTask.java", "BodyUseAPI": [], "Fixed commit": "0c4a14df99fc0e886e043e9e560b3ea2631470c8", "Url": "https://api.github.com/repos/dkpro/dkpro-tc", "Date": "2016-04-18T12:52:14Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (minigame.isAllowedFlight()) { ply.getPlayer().setAllowFlight(true); if (minigame.isFlightEnabled()) ply.getPlayer().setFlying(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/765/buggy-version/Minigames.src.au.com.mineauz.minigames.PlayerData.java", "BodyUseAPI": ["au.com.mineauz.minigames.minigame.Minigame.isFlightEnabled()"], "Fixed commit": "5d1b376c59b1ceac57c4bd30b9018280da1356eb", "Url": "https://api.github.com/repos/Razz0991/Minigames", "Date": "2014-07-10T05:43:09Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((minigame.getType()) == (au.com.mineauz.minigames.gametypes.MinigameType.SINGLEPLAYER)) { if (!(minigame.isAllowedFlight())) { player.getPlayer().setAllowFlight(false); player.getPlayer().setFlying(true); }else player.getPlayer().setAllowFlight(true); }else { player.getPlayer().setAllowFlight(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/765/buggy-version/Minigames.src.au.com.mineauz.minigames.PlayerData.java", "BodyUseAPI": ["au.com.mineauz.minigames.minigame.Minigame.isAllowedFlight()"], "Fixed commit": "5d1b376c59b1ceac57c4bd30b9018280da1356eb", "Url": "https://api.github.com/repos/Razz0991/Minigames", "Date": "2014-07-10T05:43:09Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (params.isEmpty()) { throw new org.apache.wicket.RestartResponseException(cz.larpovadatabaze.components.page.game.ListGame.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5112/buggy-version/src.main.java.cz.larpovadatabaze.components.page.game.GameDetail.java", "BodyUseAPI": [], "Fixed commit": "e4297d4c5e89583d8fd7602bc8d0bacb5e61a088", "Url": "https://api.github.com/repos/CSLD/CSLD", "Date": "2015-01-01T17:36:05Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.wicket.markup.html.form.Form<?>.getModelObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((game.getLang()) != null) { toBeSaved = localeProvider.transformToLocale(game.getLang()); }else { game.setAvailableLanguages(new java.util.ArrayList<cz.larpovadatabaze.components.panel.game.GameHasLanguages>()); toBeSaved = sessionLanguageSolver.getLanguagesForUser().get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5112/buggy-version/src.main.java.cz.larpovadatabaze.components.panel.game.CreateOrUpdateGamePanel.java", "BodyUseAPI": ["cz.larpovadatabaze.components.panel.game.Game.getLang()", "cz.larpovadatabaze.lang.LocaleProvider.transformToLocale(game.getLang())", "cz.larpovadatabaze.components.panel.game.Game.setAvailableLanguages(java.util.ArrayList<cz.larpovadatabaze.components.panel.game.GameHasLanguages>)"], "Fixed commit": "e4297d4c5e89583d8fd7602bc8d0bacb5e61a088", "Url": "https://api.github.com/repos/CSLD/CSLD", "Date": "2015-01-01T17:36:05Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Die.roll()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tokens.get(roll).isEmpty()) { tokens.remove(roll); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4861/buggy-version/PHold.java", "BodyUseAPI": ["java.util.TreeMap<java.lang.Integer, java.util.ArrayList<Token>>.remove(int)"], "Fixed commit": "2017e0ecada4f06b1616972a71c2744bc25cdd75", "Url": "https://api.github.com/repos/rcieoktgieke/CS150-Project-2", "Date": "2016-03-17T19:57:12Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Die.roll()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tokens.get(roll).isEmpty()) { tokens.remove(roll); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4861/buggy-version/PHold.java", "BodyUseAPI": ["java.util.TreeMap<java.lang.Integer, java.util.ArrayList<Token>>.remove(int)"], "Fixed commit": "2017e0ecada4f06b1616972a71c2744bc25cdd75", "Url": "https://api.github.com/repos/rcieoktgieke/CS150-Project-2", "Date": "2016-03-17T19:57:12Z"},
{"Line": "=>2107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((boatStatus != null) && ((boatStatus.getBoatId()) != null)) { reservations = boatReservations.getBoatReservations(boatStatus.getBoatId(), now, Daten.efaConfig.getValueEfaDirekt_resLookAheadTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/2182/buggy-version/src.de.nmichael.efa.gui.EfaBoathouseFrame.java", "BodyUseAPI": ["de.nmichael.efa.data.BoatStatusRecord.getBoatId()", "de.nmichael.efa.data.BoatReservations.getBoatReservations(boatStatus.getBoatId(),long,Daten.efaConfig.getValueEfaDirekt_resLookAheadTime())"], "Fixed commit": "466294f7ec19a6b7566b8dd412ad570432f2c781", "Url": "https://api.github.com/repos/abfahr/efa220oh", "Date": "2017-06-26T01:39:47Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.ServletRequest.notConsumed()", "spark.http.matching.Body.create()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((body.notSet()) && (!isConsumed)) && ((httpResponse.getStatus()) != (javax.servlet.http.HttpServletResponse.SC_NO_CONTENT))) { spark.http.matching.MatcherFilter.LOG.warn(((\"Route [\" + uri) + \"] responded with no body and status different of 204\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6811/buggy-version/src.main.java.spark.http.matching.MatcherFilter.java", "BodyUseAPI": [], "Fixed commit": "d22cb38465a55a8decb069d18d6597dfc3c75d44", "Url": "https://api.github.com/repos/QuackMartins/spark", "Date": "2016-08-06T06:42:11Z"},
{"Line": "=>672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (apiData.containsKey(\"wsdl\")) { java.lang.String wsdl = ((java.lang.String) (apiData.get(\"wsdl\", apiData))); if ((wsdl != null) && (!(wsdl.isEmpty()))) { api.setWsdlUrl(wsdl); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5317/buggy-version/components.apimgt.org.wso2.carbon.apimgt.hostobjects.src.main.java.org.wso2.carbon.apimgt.hostobjects.APIProviderHostObject.java", "BodyUseAPI": ["org.wso2.carbon.apimgt.hostobjects.NativeObject.get(java.lang.String,org.wso2.carbon.apimgt.hostobjects.NativeObject)"], "Fixed commit": "9cd493693863739e9f60278b9db504092421a9b0", "Url": "https://api.github.com/repos/lakmali/carbon-apimgt", "Date": "2015-04-20T06:03:44Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (key.isConnectable()) { net.openhft.collections.map.replicators.ClientTcpSocketReplicator.LOG.info(\"here.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3324/buggy-version/collections-sandbox.src.main.java.net.openhft.collections.map.replicators.ClientTcpSocketReplicator.java", "BodyUseAPI": [], "Fixed commit": "419f69c8b1cd4796c61312d9f316caee81ba7d4a", "Url": "https://api.github.com/repos/OpenHFT/HugeCollections", "Date": "2014-05-20T18:59:39Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.outputStream) != null) { final java.io.OutputStream outputStream = this.outputStream; updateWriter(outputStream, encoding); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4745/buggy-version/src.main.java.org.jboss.logmanager.handlers.OutputStreamHandler.java", "BodyUseAPI": [], "Fixed commit": "719a16c97500babf3d599c75192467d69b19ff73", "Url": "https://api.github.com/repos/baranowb/jboss-logmanager", "Date": "2013-08-09T09:27:45Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((map[((this.x) + xAdj)][((this.y) + yAdj)].hardness) != 100) { this.x += xAdj; this.y += yAdj; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4261/buggy-version/src.dungeonCrawler.Monster.java", "BodyUseAPI": [], "Fixed commit": "61015dcc1bcfcb2bdf2e63c86a08370a8b440b14", "Url": "https://api.github.com/repos/steves66/DungeonCrawler", "Date": "2017-10-21T20:16:43Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.glowstone.net.codec.PacketType.getPacketFromId(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (packetType != (PacketType.PacketKeyPress)) { java.lang.System.out.println((\"[debug] Got Spout packet \" + (packetType.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/306/buggy-version/src.main.java.net.glowstone.net.codec.SpoutCodec.java", "BodyUseAPI": ["net.glowstone.net.codec.PacketType.toString()", "java.io.PrintStream.println((\"[debug] Got Spout packet \" + (packetType.toString())))"], "Fixed commit": "0bf36d48501cf39b91d87a0278a0adb9a3f61a0a", "Url": "https://api.github.com/repos/GlowstoneMC/Glowstone-Legacy", "Date": "2011-08-06T05:57:43Z"},
{"Line": "=>730", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (action.equals(AutoScalingSupport.UPDATE_SCALING_GROUP)) { return new java.lang.String[]{ (EC2Method.AUTOSCALING_PREFIX) + (EC2Method.UPDATE_AUTO_SCALING_GROUP) }; }else if (action.equals(AutoScalingSupport.SUSPEND_AUTO_SCALING_GROUP)) { return new java.lang.String[]{ (EC2Method.AUTOSCALING_PREFIX) + (EC2Method.SUSPEND_AUTO_SCALING_GROUP) }; }else if (action.equals(AutoScalingSupport.RESUME_AUTO_SCALING_GROUP)) { return new java.lang.String[]{ (EC2Method.AUTOSCALING_PREFIX) + (EC2Method.RESUME_AUTO_SCALING_GROUP) }; }else if (action.equals(AutoScalingSupport.PUT_SCALING_POLICY)) { return new java.lang.String[]{ (EC2Method.AUTOSCALING_PREFIX) + (EC2Method.PUT_SCALING_POLICY) }; }else if (action.equals(AutoScalingSupport.DELETE_SCALING_POLICY)) { return new java.lang.String[]{ (EC2Method.AUTOSCALING_PREFIX) + (EC2Method.DELETE_SCALING_POLICY) }; }else if (action.equals(AutoScalingSupport.LIST_SCALING_POLICIES)) { return new java.lang.String[]{ (EC2Method.AUTOSCALING_PREFIX) + (EC2Method.DESCRIBE_SCALING_POLICIES) }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6503/buggy-version/src.main.java.org.dasein.cloud.aws.compute.AutoScaling.java", "BodyUseAPI": ["org.dasein.cloud.identity.ServiceAction.equals(AutoScalingSupport.RESUME_AUTO_SCALING_GROUP)", "org.dasein.cloud.identity.ServiceAction.equals(AutoScalingSupport.LIST_SCALING_POLICIES)", "org.dasein.cloud.identity.ServiceAction.equals(AutoScalingSupport.PUT_SCALING_POLICY)", "org.dasein.cloud.identity.ServiceAction.equals(AutoScalingSupport.SUSPEND_AUTO_SCALING_GROUP)", "org.dasein.cloud.identity.ServiceAction.equals(AutoScalingSupport.DELETE_SCALING_POLICY)"], "Fixed commit": "0523782f5576e5286cf6829f035d87ca1347b398", "Url": "https://api.github.com/repos/TheWeatherCompany/dasein-cloud-aws", "Date": "2013-05-07T19:56:51Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (click) { for (gui.Console2.TowerButton tb : _tbs) { if (tb.getRect().contains(x, y)) { this.unhighlightTb(); tb.highlight(); return tb.getName(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6963/buggy-version/src.gui.Console2.java", "BodyUseAPI": [], "Fixed commit": "fff7b1b2ed268c40e0af64cf9c60aa51e4c5e6e0", "Url": "https://api.github.com/repos/mjhart/ztd", "Date": "2014-05-02T18:56:52Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!click) { cb.highlight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6963/buggy-version/src.gui.Console2.java", "BodyUseAPI": [], "Fixed commit": "fff7b1b2ed268c40e0af64cf9c60aa51e4c5e6e0", "Url": "https://api.github.com/repos/mjhart/ztd", "Date": "2014-05-02T18:56:52Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (navPair != null) { host.startActivity(intent, android.support.v4.app.ActivityOptionsCompat.makeSceneTransitionAnimation(host, authorPair, photoPair, statusPair, navPair).toBundle()); }else { host.startActivity(intent, android.support.v4.app.ActivityOptionsCompat.makeSceneTransitionAnimation(host, authorPair, photoPair, statusPair).toBundle()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5364/buggy-version/app.src.main.java.com.crusader.rxlayouttransitiondemo.adapters.PhotoAdapter.java", "BodyUseAPI": ["android.app.Activity.startActivity(android.content.Intent,android.support.v4.app.ActivityOptionsCompat.makeSceneTransitionAnimation(host, authorPair, photoPair, statusPair, navPair).toBundle())", "android.support.v4.app.ActivityOptionsCompat.makeSceneTransitionAnimation(host, authorPair, photoPair, statusPair, navPair).toBundle()", "android.support.v4.app.ActivityOptionsCompat.makeSceneTransitionAnimation(android.app.Activity,android.support.v4.util.Pair<android.view.View, java.lang.String>,android.support.v4.util.Pair<android.view.View, java.lang.String>,android.support.v4.util.Pair,android.support.v4.util.Pair)"], "Fixed commit": "c58ff062ac7a8076efd77cc195d8599d15b20731", "Url": "https://api.github.com/repos/CRUSADER1912/RxLayoutTransitionDemo", "Date": "2016-06-02T16:09:30Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(android.R.id.navigationBarBackground)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (navBackground != null) { navPair = android.support.v4.util.Pair.create(navBackground, navBackground.getTransitionName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5364/buggy-version/app.src.main.java.com.crusader.rxlayouttransitiondemo.adapters.PhotoAdapter.java", "BodyUseAPI": ["android.view.View.getTransitionName()", "android.support.v4.util.Pair.create(android.view.View,navBackground.getTransitionName())"], "Fixed commit": "c58ff062ac7a8076efd77cc195d8599d15b20731", "Url": "https://api.github.com/repos/CRUSADER1912/RxLayoutTransitionDemo", "Date": "2016-06-02T16:09:30Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (properties != null) { hasTrueDeletedProperty = ((properties.get(\"_deleted\")) != null) && (((java.lang.Boolean) (properties.get(\"_deleted\"))).booleanValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/9162/buggy-version/src.main.java.com.couchbase.cblite.CBLDocument.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.Object.booleanValue()", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "456197f2c50eeef1addf053c104b15fe67a432ff", "Url": "https://api.github.com/repos/couchbase/couchbase-lite-android-core", "Date": "2013-10-25T23:12:10Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((properties != null) && (properties.containsKey(\"_id\"))) { newId = ((java.lang.String) (properties.get(\"_id\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/9162/buggy-version/src.main.java.com.couchbase.cblite.CBLDocument.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "456197f2c50eeef1addf053c104b15fe67a432ff", "Url": "https://api.github.com/repos/couchbase/couchbase-lite-android-core", "Date": "2013-10-25T23:12:10Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((properties != null) && (properties.containsKey(\"__attachments\"))) { attachments = ((java.util.Map<java.lang.String, java.lang.Object>) (properties.get(\"_attachments\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/9162/buggy-version/src.main.java.com.couchbase.cblite.CBLDocument.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "456197f2c50eeef1addf053c104b15fe67a432ff", "Url": "https://api.github.com/repos/couchbase/couchbase-lite-android-core", "Date": "2013-10-25T23:12:10Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Abstract.ClassField.getResultType()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (resultType == null) { myErrorReporter.report(com.jetbrains.jetpad.vclang.term.abs.AbstractExpressionError.incomplete(field.getReferable())); }else { classFields.add(new com.jetbrains.jetpad.vclang.term.concrete.Concrete.ClassField(field.getReferable(), classDef, resultType.accept(this, null))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/774/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.term.abs.ConcreteBuilder.java", "BodyUseAPI": ["Abstract.Expression.accept(com.jetbrains.jetpad.vclang.term.abs.ConcreteBuilder,<nulltype>)", "java.util.List<Concrete.ClassField>.add(com.jetbrains.jetpad.vclang.term.concrete.Concrete.ClassField)"], "Fixed commit": "4a3bfa1374c1a683116f938138d8f452b3e38bfe", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2017-09-27T23:30:08Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Abstract.LetClause.getTerm()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (term == null) { myErrorReporter.report(com.jetbrains.jetpad.vclang.term.abs.AbstractExpressionError.incomplete(clause.getReferable())); }else { com.jetbrains.jetpad.vclang.term.abs.Abstract.Expression resultType = clause.getResultType(); clauses.add(new com.jetbrains.jetpad.vclang.term.concrete.Concrete.LetClause(clause.getReferable(), buildParameters(clause.getParameters()), (resultType == null ? null : resultType.accept(this, null)), term.accept(this, null))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/774/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.term.abs.ConcreteBuilder.java", "BodyUseAPI": ["Abstract.Expression.accept(com.jetbrains.jetpad.vclang.term.abs.ConcreteBuilder,<nulltype>)", "java.util.List<Concrete.LetClause>.add(com.jetbrains.jetpad.vclang.term.concrete.Concrete.LetClause)"], "Fixed commit": "4a3bfa1374c1a683116f938138d8f452b3e38bfe", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2017-09-27T23:30:08Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (attribute.isForeignEntity()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4941/buggy-version/src.main.java.models.base.BaseObject.java", "BodyUseAPI": [], "Fixed commit": "c81248293bae5f27bf50b87ad5e6acf86793e19c", "Url": "https://api.github.com/repos/NathanVeillon/cs5530.team60project.com", "Date": "2017-03-26T21:41:36Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(java.lang.Boolean.parseBoolean(nl.nn.adapterframework.util.AppConstants.getInstance().getProperty(\"jdbc.convertFieldnamesToUppercase\")))) nl.nn.adapterframework.configuration.ConfigurationWarnings.getInstance().add(nl.nn.adapterframework.configuration.IbisContext.LOG, \"DEPRECATED: jdbc.convertFieldnamesToUppercase is set to false, please set to true. XML field definitions of SQL senders will be uppercased!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5116/buggy-version/core.src.main.java.nl.nn.adapterframework.configuration.IbisContext.java", "BodyUseAPI": [], "Fixed commit": "25cd99b4dc121b7c6053f93114fec7e91bb0e4bb", "Url": "https://api.github.com/repos/gvanbrakel/iaf", "Date": "2017-09-11T12:45:13Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (edge == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8531/buggy-version/java.src.cs224n.MC.StatementFactory.java", "BodyUseAPI": [], "Fixed commit": "83619b2c43b484d7a975f47d24799d2a851455a6", "Url": "https://api.github.com/repos/qiaojingy/MC", "Date": "2015-12-02T22:30:47Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (edge == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8531/buggy-version/java.src.cs224n.MC.StatementFactory.java", "BodyUseAPI": [], "Fixed commit": "83619b2c43b484d7a975f47d24799d2a851455a6", "Url": "https://api.github.com/repos/qiaojingy/MC", "Date": "2015-12-02T22:30:47Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (edge == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8531/buggy-version/java.src.cs224n.MC.StatementFactory.java", "BodyUseAPI": [], "Fixed commit": "83619b2c43b484d7a975f47d24799d2a851455a6", "Url": "https://api.github.com/repos/qiaojingy/MC", "Date": "2015-12-02T22:30:47Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (edge == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8531/buggy-version/java.src.cs224n.MC.StatementFactory.java", "BodyUseAPI": [], "Fixed commit": "83619b2c43b484d7a975f47d24799d2a851455a6", "Url": "https://api.github.com/repos/qiaojingy/MC", "Date": "2015-12-02T22:30:47Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hangum.tadpole.rdb.model.Relation.getTarget()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (table == null) { conn.add(labelSourceTarget, new org.eclipse.draw2d.ConnectionLocator(conn, org.eclipse.draw2d.ConnectionLocator.MIDDLE)); }else { org.eclipse.emf.common.util.EList<com.hangum.tadpole.rdb.model.Relation> list = table.getIncomingLinks(); if ((list.size()) == 1) { conn.add(labelSourceTarget, new org.eclipse.draw2d.ConnectionLocator(conn, org.eclipse.draw2d.ConnectionLocator.MIDDLE)); }else { for (com.hangum.tadpole.rdb.model.Relation tmpRelation : list) { if (org.apache.commons.lang.StringUtils.equals(tmpRelation.getConstraint_name(), relation.getConstraint_name())) { org.eclipse.draw2d.ConnectionLocator cl = new org.eclipse.draw2d.ConnectionLocator(conn, org.eclipse.draw2d.ConnectionLocator.MIDDLE); cl.setGap(10); cl.setRelativePosition(PositionConstants.SOUTH); conn.add(labelSourceTarget, cl); }else { org.eclipse.draw2d.ConnectionLocator cl = new org.eclipse.draw2d.ConnectionLocator(conn, org.eclipse.draw2d.ConnectionLocator.MIDDLE); cl.setRelativePosition(PositionConstants.WEST); conn.add(labelSourceTarget, cl); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1062/buggy-version/com.hangum.tadpole.rdb.erd.core.src.com.hangum.tadpole.rdb.erd.core.part.RelationEditPart.java", "BodyUseAPI": ["com.hangum.tadpole.rdb.model.Table.getIncomingLinks()"], "Fixed commit": "69ddfb22b6b4ef34db6c54d6cd68e6252c01e95d", "Url": "https://api.github.com/repos/hangum/TadpoleForDBTools", "Date": "2016-06-08T13:59:02Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Gdx.input.isKeyPressed(Input.Keys.LEFT))) { inputGiven = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6294/buggy-version/core.src.com.develorain.game.tools.GameInputHandler.java", "BodyUseAPI": [], "Fixed commit": "18bd597ea585fe173302ec5c0e9ca9dd6b36dfc1", "Url": "https://api.github.com/repos/Develorain/Illumination", "Date": "2016-02-03T20:09:19Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Gdx.input.isKeyPressed(Input.Keys.RIGHT))) { inputGiven = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6294/buggy-version/core.src.com.develorain.game.tools.GameInputHandler.java", "BodyUseAPI": [], "Fixed commit": "18bd597ea585fe173302ec5c0e9ca9dd6b36dfc1", "Url": "https://api.github.com/repos/Develorain/Illumination", "Date": "2016-02-03T20:09:19Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (addborder) { b.setX(((b.getX()) + 1)); b.setY(((b.getY()) + 1)); b.setZ(((b.getZ()) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3393/buggy-version/src.main.java.com.github.catageek.BCProtect.Regions.Cuboid.java", "BodyUseAPI": [], "Fixed commit": "701c29017b9679ba3e0b447714c8d6f21b385d2f", "Url": "https://api.github.com/repos/catageek/BCProtect", "Date": "2013-04-30T09:52:14Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currentApplication) == null) { if (!(this.findApplication(req, apptype))) { throw new com.mobilehelix.appserver.errorhandling.AppserverSystemException(\"Failed to lookup current application in process request.\", \"SessionCannotFindApp\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/7110/buggy-version/ApplicationServer-ejbPublic.src.java.com.mobilehelix.appserver.session.Session.java", "BodyUseAPI": [], "Fixed commit": "61ddde79b693b24ee6e0578d208a3bbc2321284c", "Url": "https://api.github.com/repos/shallem/LinkPublicAppServer", "Date": "2013-10-09T02:04:57Z"},
{"Line": "=>560", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.tessoft.common.Util.isEmptyString(post.getUser().getKakaoID()))) findViewById(R.id.imgKakaoIcon).setVisibility(ViewGroup.VISIBLE); else findViewById(R.id.imgKakaoIcon).setVisibility(ViewGroup.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/9225/buggy-version/FavorForMe.src.com.tessoft.nearhere.TaxiPostDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "948747ec84a741377b10f3eb657c75298b1d1ba9", "Url": "https://api.github.com/repos/kim2509/NearhereTaxi", "Date": "2015-09-04T14:33:12Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((t.getHandle().lastDamager) != null) { double d0 = (t.getHandle().lastDamager.locX) - (t.getHandle().locX); double d1; for (d1 = (t.getHandle().lastDamager.locZ) - (t.getHandle().locZ); ((d0 * d0) + (d1 * d1)) < 1.0E-4; d1 = ((java.lang.Math.random()) - (java.lang.Math.random())) * 0.01) { d0 = ((java.lang.Math.random()) - (java.lang.Math.random())) * 0.01; } t.getHandle().az = ((float) (((net.minecraft.server.v1_9_R1.MathHelper.b(d1, d0)) * 57.2957763671875) - ((double) (t.getHandle().yaw)))); t.getHandle().a(t.getHandle().lastDamager, knockback, d0, d1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/8867/buggy-version/src.main.java.net.avatar.realms.spigot.bending.utils.DamageTools.java", "BodyUseAPI": ["org.bukkit.craftbukkit.v1_9_R1.entity.CraftLivingEntity.getHandle()", "org.bukkit.craftbukkit.v1_9_R1.entity.CraftLivingEntity.getHandle()", "org.bukkit.craftbukkit.v1_9_R1.entity.CraftLivingEntity.getHandle()", "org.bukkit.craftbukkit.v1_9_R1.entity.CraftLivingEntity.getHandle()", "org.bukkit.craftbukkit.v1_9_R1.entity.CraftLivingEntity.getHandle()", "org.bukkit.craftbukkit.v1_9_R1.entity.CraftLivingEntity.getHandle()", "org.bukkit.craftbukkit.v1_9_R1.entity.CraftLivingEntity.getHandle()", "org.bukkit.craftbukkit.v1_9_R1.entity.CraftLivingEntity.getHandle()", "t.getHandle().a(t.getHandle().lastDamager,float,double,double)"], "Fixed commit": "3be6334d4acbfdbefbe9cbce91a7adcc0004c66f", "Url": "https://api.github.com/repos/Bendercraft/spigot-bending", "Date": "2016-04-24T21:43:19Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNewActivity == true) { ret.put(Activity.idKey, activityId.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/3588/buggy-version/app.controllers.ActivityController.java", "BodyUseAPI": [], "Fixed commit": "618e1deb2afe0d3b1e4cdbfc2c94fc821e61325f", "Url": "https://api.github.com/repos/genxium/PlayHongKongResort", "Date": "2014-04-28T18:55:59Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((filePage.getNextPage()) != null) && ((filePage.getNextPage()) instanceof org.eclipse.ui.dialogs.WizardNewFileCreationPage)) { org.eclipse.ui.dialogs.WizardNewFileCreationPage nextPage = ((org.eclipse.ui.dialogs.WizardNewFileCreationPage) (filePage.getNextPage())); nextPage.setFileName(edu.toronto.cs.se.mmint.mid.library.MultiModelUtils.replaceFileNameInUri(nextPage.getFileName(), edu.toronto.cs.se.mmint.mid.library.MultiModelUtils.getFileNameFromUri(filePage.getFileName()))); filePage = nextPage; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/5575/buggy-version/Core.edu.toronto.cs.se.mmint.src.edu.toronto.cs.se.mmint.mid.ui.EditorCreationWizardDialog.java", "BodyUseAPI": ["edu.toronto.cs.se.mmint.mid.library.MultiModelUtils.getFileNameFromUri(filePage.getFileName())", "org.eclipse.ui.dialogs.WizardNewFileCreationPage.getFileName()", "org.eclipse.ui.dialogs.WizardNewFileCreationPage.getNextPage()", "org.eclipse.ui.dialogs.WizardNewFileCreationPage.setFileName(edu.toronto.cs.se.mmint.mid.library.MultiModelUtils.replaceFileNameInUri(nextPage.getFileName(), edu.toronto.cs.se.mmint.mid.library.MultiModelUtils.getFileNameFromUri(filePage.getFileName())))", "edu.toronto.cs.se.mmint.mid.library.MultiModelUtils.replaceFileNameInUri(nextPage.getFileName(),edu.toronto.cs.se.mmint.mid.library.MultiModelUtils.getFileNameFromUri(filePage.getFileName()))"], "Fixed commit": "56e99efbf5264611f958ce7a2044f1a9215816ff", "Url": "https://api.github.com/repos/adisandro/MMINT", "Date": "2014-05-30T18:32:58Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x < 0) || (y < 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1463/buggy-version/src.cs175.hw4.snakes.TileView.java", "BodyUseAPI": [], "Fixed commit": "11b4e71192aa05d4dd3f90f66fbb61aca22aaa01", "Url": "https://api.github.com/repos/swathi-k/HW4version2", "Date": "2014-11-17T04:03:40Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x < 0) || (y < 0)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/1463/buggy-version/src.cs175.hw4.snakes.Walls.java", "BodyUseAPI": [], "Fixed commit": "11b4e71192aa05d4dd3f90f66fbb61aca22aaa01", "Url": "https://api.github.com/repos/swathi-k/HW4version2", "Date": "2014-11-17T04:03:40Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player instanceof org.bukkit.entity.Player) { uk.co.CyniCode.CyniChat.PermissionManager.addChannelPerms(player, newChan, protect); uk.co.CyniCode.CyniChat.objects.UserDetails current = uk.co.CyniCode.CyniChat.DataManager.getOnlineDetails(((org.bukkit.entity.Player) (player))); current.joinChannel(newChan, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/4254/buggy-version/src.main.java.uk.co.CyniCode.CyniChat.Command.AdminCommand.java", "BodyUseAPI": ["uk.co.CyniCode.CyniChat.PermissionManager.addChannelPerms(org.bukkit.command.CommandSender,uk.co.CyniCode.CyniChat.objects.Channel,java.lang.Boolean)"], "Fixed commit": "adfc1ead878ea88d2e2b009892717a0107f58c1f", "Url": "https://api.github.com/repos/m477h3w1012/CyniChat", "Date": "2013-10-17T20:52:20Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yhtye.gongjiaochaxun.ResultActivity.getNowLineInfo()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (lineInfo == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6941/buggy-version/src.com.yhtye.gongjiaochaxun.ResultActivity.java", "BodyUseAPI": [], "Fixed commit": "a33d26d675201e25e0e161bb7d6b6891430bc1c6", "Url": "https://api.github.com/repos/xqr/shgongjiao", "Date": "2016-01-13T02:49:08Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yhtye.gongjiaochaxun.ResultActivity.SearchCarsSearchLineRunable.getNowLineInfo()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (lineInfo == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/6941/buggy-version/src.com.yhtye.gongjiaochaxun.ResultActivity.java", "BodyUseAPI": [], "Fixed commit": "a33d26d675201e25e0e161bb7d6b6891430bc1c6", "Url": "https://api.github.com/repos/xqr/shgongjiao", "Date": "2016-01-13T02:49:08Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.lang.PsiBuilder.getTokenType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tokenType == (PACKAGE_IDENTIFIER)) || (com.perl5.lang.perl.parser.PerlParserUitl.CONVERTABLE_TOKENS.contains(tokenType))) { b.remapCurrentToken(com.perl5.lang.perl.parser.PACKAGE); b.advanceLexer(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V124/591/buggy-version/src.com.perl5.lang.perl.parser.PerlParserUitl.java", "BodyUseAPI": [], "Fixed commit": "9e8644bca570d1b3cf86dc8500fe8ee4472031c3", "Url": "https://api.github.com/repos/Camelcade/Perl5-IDEA", "Date": "2015-07-07T14:59:27Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"sms\".equalsIgnoreCase(type)) { backRenderPage = \"sms_list\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8530/buggy-version/src.cc.triffic.wc.kafkamonitor.controller.AlarmController.java", "BodyUseAPI": [], "Fixed commit": "dd6a40384fa32acaf6be29ed414d1873a5f8b023", "Url": "https://api.github.com/repos/triffic-tang/AnotherKafkaMonitor-AKM-", "Date": "2017-03-21T08:54:47Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.csstudio.opibuilder.validation.Activator.getInstance().isNestMarkers()) { org.csstudio.opibuilder.validation.core.ValidationFailure f = getValidationFailure(element); if (f != null) return f.hasSubFailures(); if (original.hasChildren(element)) { java.lang.Object[] obj = filterChildren(original.getChildren(element)); return (obj.length) > 0; } return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5859/buggy-version/applications.plugins.org.csstudio.opibuilder.validation.src.org.csstudio.opibuilder.validation.core.ui.ContentProvider.java", "BodyUseAPI": [], "Fixed commit": "361798ac20dd9e10fd45f31292439a1761ddd367", "Url": "https://api.github.com/repos/dls-controls/cs-studio", "Date": "2015-03-09T09:14:27Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPageCount()) > 0) { removePage(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7455/buggy-version/Gradle.PaginizeDemo.src.main.java.net.neevek.android.demo.paginize.pages.SwipeableTabPage.java", "BodyUseAPI": [], "Fixed commit": "f736ef15db51df2af3a23324a41dbf57b008dbc6", "Url": "https://api.github.com/repos/zhangxg910/Paginize", "Date": "2016-08-29T15:00:40Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.exec.OS.isFamilyUnix()) { if ((archiveName) == null) { archiveName = \"EventStore-OSS-Linux\"; } if ((archiveExtension) == null) { archiveExtension = \"tar.gz\"; } }else { if ((archiveName) == null) { throw new org.apache.maven.plugin.MojoExecutionException(\"Unknown OS - You must use the 'archive-name' parameter\"); } if ((archiveExtension) == null) { throw new org.apache.maven.plugin.MojoExecutionException(\"Unknown OS - You must use the 'archive-ext' parameter\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7518/buggy-version/es-maven-plugin.src.main.java.org.fuin.esmp.AbstractEventStoreMojo.java", "BodyUseAPI": [], "Fixed commit": "8cd9d6355c322e76e0eaf7ff9d7f010a59f60d6d", "Url": "https://api.github.com/repos/fuinorg/event-store-maven-plugin", "Date": "2015-06-19T14:44:00Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((selectedGroup) != null) && (!(selectedGroup.getName().equals(\"(selection)\")))) { if (((selectedDevice) != null) && (!(weightInput.value().equals(selectedGroup.getWeight(selectedDevice))))) { selectedGroup.setWeight(selectedDevice, java.lang.Math.round(weightInput.value())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/701/buggy-version/src.mashine.ui.boxes.DeviceSelector.java", "BodyUseAPI": ["mashine.scene.DeviceGroup.setWeight(mashine.scene.Device,int)", "weightInput.value().equals(selectedGroup.getWeight(selectedDevice))", "mashine.scene.DeviceGroup.getWeight(mashine.scene.Device)"], "Fixed commit": "177cc7dc73bca6a472b099615b795e4126078182", "Url": "https://api.github.com/repos/procsynth/MaShine", "Date": "2016-04-11T23:50:00Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((caller) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/318/buggy-version/CrowdMotoringDemo.src.com.example.crowdmotoringdemo.servercommunication.ServerCommunication.java", "BodyUseAPI": [], "Fixed commit": "532e10b77f2ef35c0a01c117dc84b63c79a28722", "Url": "https://api.github.com/repos/BeatTheBuzzer/CS3282", "Date": "2014-03-27T06:30:08Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((map[y][x].getBiome().getContents()) != null) { for (slug.soc.game.gameObjects.TerrainObject t : map[y][x].getBiome().getContents()) { if (t != null) { t.setOwner(faction); } } y++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5195/buggy-version/src.slug.soc.game.gameState.GameModeState.java", "BodyUseAPI": ["map[y][x].getBiome().getContents()", "map[y][x].getBiome()"], "Fixed commit": "92b64110992a1189da782faf8535e6102bb89b32", "Url": "https://api.github.com/repos/cmarshall93/OpenGLSoC", "Date": "2013-02-16T02:22:49Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mActionPopupSearch) != null) { mActionPopupSearch.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/770/buggy-version/popupsearch.src.main.java.fr.ravenfeld.librairies.popupsearch.example.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "217257bb352f04da59cfba7c9055a5282f45b7cc", "Url": "https://api.github.com/repos/ravenfeld/PopupSearch", "Date": "2014-03-13T10:41:10Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (authentication != null) java.lang.System.out.println(authentication.toString()); else java.lang.System.out.println(\"------Auth null-------\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/690/buggy-version/src.main.java.is.hi.soguheimur.controller.LoginController.java", "BodyUseAPI": ["java.io.PrintStream.println(authentication.toString())", "org.springframework.security.core.Authentication.toString()"], "Fixed commit": "bbb95a8ae6453d07360b4f9dc1b976b9951707a2", "Url": "https://api.github.com/repos/steina1989/Soguheimur", "Date": "2017-10-27T16:22:33Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (determineAttackers) validAttackingUnitsForThisRoll = games.strategy.util.Match.getMatches(m_attackingUnits, new games.strategy.util.CompositeMatchOr(games.strategy.triplea.delegate.Matches.unitIsOfTypes(targetUnitTypesForThisTypeAA), new games.strategy.util.CompositeMatchAnd<games.strategy.engine.data.Unit>(Matches.UnitIsAirborne, games.strategy.triplea.delegate.Matches.unitIsOfTypes(airborneTypesTargettedToo))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/9240/buggy-version/src.games.strategy.triplea.delegate.StrategicBombingRaidBattle.java", "BodyUseAPI": [], "Fixed commit": "302800f412fb91f3a6449a8d40bae53e289eefef", "Url": "https://api.github.com/repos/simon33-2/triplea", "Date": "2016-08-15T09:00:10Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isCompleted())) path.removeFirst();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6847/buggy-version/src.org.lannister.brain.AgentPlan.java", "BodyUseAPI": [], "Fixed commit": "943bcca0d385468d14eca810a0febe0b4e36efc0", "Url": "https://api.github.com/repos/ogzd/Lannister", "Date": "2014-04-29T00:15:22Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.brown.benchmark.articles.procedures.AddComment.debug.val) edu.brown.benchmark.articles.procedures.AddComment.LOG.warn(exception.block_ids[0]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3342/buggy-version/src.benchmarks.edu.brown.benchmark.articles.procedures.AddComment.java", "BodyUseAPI": [], "Fixed commit": "a84b02486875b549d257b2d57cadf6b97c51acc4", "Url": "https://api.github.com/repos/malin1993ml/h-store", "Date": "2015-09-05T23:10:00Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.brown.benchmark.articles.procedures.GetArticle.debug.val) { edu.brown.benchmark.articles.procedures.GetArticle.LOG.info(exception.block_ids[0]); java.lang.System.out.println(a_id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3342/buggy-version/src.benchmarks.edu.brown.benchmark.articles.procedures.GetArticle.java", "BodyUseAPI": [], "Fixed commit": "a84b02486875b549d257b2d57cadf6b97c51acc4", "Url": "https://api.github.com/repos/malin1993ml/h-store", "Date": "2015-09-05T23:10:00Z"},
{"Line": "=>585", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (what == (com.beeminder.beedroid.api.Session.MSG_API_RESPONSE_BADVERSION)) { mError = new com.beeminder.beedroid.api.Session.SessionError(com.beeminder.beedroid.api.Session.ErrorType.ERROR_BADVERSION, errormsg); }else if (what == (com.beeminder.beedroid.api.Session.MSG_API_RESPONSE_NOTFOUND)) { mError = new com.beeminder.beedroid.api.Session.SessionError(com.beeminder.beedroid.api.Session.ErrorType.ERROR_NOTFOUND, errormsg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5400/buggy-version/library.src.com.beeminder.beedroid.api.Session.java", "BodyUseAPI": [], "Fixed commit": "b3ffae968b0ba651f2997eb0c327c1b37eff8e90", "Url": "https://api.github.com/repos/beeminder/beedroid-api", "Date": "2013-10-30T14:16:25Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getInt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((max + (1000 % 2000)) == 0) { max += 1000; }else { max += 2000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8342/buggy-version/app.src.main.java.com.mj.drinkmorewater.Activities.HistoryActivity.java", "BodyUseAPI": [], "Fixed commit": "7209efa0ab6bdd4c67dc787e64a46b4684e61359", "Url": "https://api.github.com/repos/mkloar/DrinkMoreWater", "Date": "2017-12-27T17:58:25Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.startsWith(declareClass)) { husacct.analyse.domain.famix.FamixLocalVariable variable = ((husacct.analyse.domain.famix.FamixLocalVariable) (theModel.structuralEntities.get(s))); if (variable.belongsToMethod.equals(belongsToMethod)) { if (variable.name.equals(nameOfInstance)) { return variable.declareType; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6102/buggy-version/src.husacct.analyse.domain.famix.FamixDependencyConnector.java", "BodyUseAPI": ["theModel.structuralEntities.get(java.lang.String)"], "Fixed commit": "f3ace51f2eae00f636bd65f9b458a8b8d52ec39f", "Url": "https://api.github.com/repos/timmuller/HUSACCT", "Date": "2012-05-17T17:00:04Z"},
{"Line": "=>1014", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchView) != null) { outState.putBoolean(com.owncloud.android.ui.activity.FileDisplayActivity.KEY_IS_SEARCH_OPEN, (!(mSearchView.isIconified()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5237/buggy-version/src.main.java.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "85d13f74c4623a32b82902434467f05095e2d330", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-23T10:00:13Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (dt != null) { value = sdf.format(dt); }else { value = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2357/buggy-version/geoportal.src.com.esri.gpt.control.georss.DcatJsonFeedWriter.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(java.util.Date)"], "Fixed commit": "f91ec06eb63c637d5cffcd0655c1ad78a41acf03", "Url": "https://api.github.com/repos/Esri/geoportal-server", "Date": "2014-03-31T22:41:37Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hlb.dblogging.jpa.repository.UsersRepository.findByUsername(users.getUsername())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (usersToBeUpdated == null) throw new java.lang.RuntimeException(\"Username not found\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/393/buggy-version/src.main.java.com.hlb.dblogging.security.users.service.UsersServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "e24ee618233fbb356b29c7bf6132d680d01903fc", "Url": "https://api.github.com/repos/lakshminarayanar/DBLogging_JPA", "Date": "2016-02-25T03:34:30Z"},
{"Line": "=>574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastestNode == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5696/buggy-version/microbat.src.main.microbat.codeanalysis.runtime.ProgramExecutor.java", "BodyUseAPI": [], "Fixed commit": "7da240c9d9edc98f2167d841fb9bb35377794bdc", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2017-08-09T03:47:08Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFirstVisibleItem) == 0) { mActionButton.hide(); }else { mActionButton.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6063/buggy-version/app.src.main.java.com.shopping.swb.shopping.fragment.AllManagerFragment.java", "BodyUseAPI": [], "Fixed commit": "c05029f4cdb347346f26e0499e67f0e5ac7260a9", "Url": "https://api.github.com/repos/shewenbiao/Shopping", "Date": "2015-05-17T14:23:39Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFirstVisibleItem) == 0) { mActionButton.hide(); }else { mActionButton.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6063/buggy-version/app.src.main.java.com.shopping.swb.shopping.fragment.GoodsFragment.java", "BodyUseAPI": [], "Fixed commit": "c05029f4cdb347346f26e0499e67f0e5ac7260a9", "Url": "https://api.github.com/repos/shewenbiao/Shopping", "Date": "2015-05-17T14:23:39Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFirstVisibleItem) == 0) { mActionButton.hide(); }else { mActionButton.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6063/buggy-version/app.src.main.java.com.shopping.swb.shopping.fragment.GoodsSearchFragment.java", "BodyUseAPI": [], "Fixed commit": "c05029f4cdb347346f26e0499e67f0e5ac7260a9", "Url": "https://api.github.com/repos/shewenbiao/Shopping", "Date": "2015-05-17T14:23:39Z"},
{"Line": "=>2046", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((literal.value) instanceof java.lang.String) { s = (\"\\\"\" + (literal.value)) + \"\\\"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5675/buggy-version/src.main.java.org.jsweet.transpiler.typescript.Java2TypeScriptTranslator.java", "BodyUseAPI": [], "Fixed commit": "75af4015566a202ce0e1397d025231a4840f793c", "Url": "https://api.github.com/repos/cincheo/jsweet", "Date": "2016-04-15T15:08:21Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((byteArray1k) == null) byteArray1k = createFBSByteArray(generator().rtree1k);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4051/buggy-version/src.main.java.com.github.ambling.rtreebenchmark.FBSRTree.java", "BodyUseAPI": [], "Fixed commit": "a80a890ce9de3d6627cce1e62f80b3f374c69951", "Url": "https://api.github.com/repos/ambling/rtree-benchmark", "Date": "2017-03-23T08:45:34Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((byteArrayGreek) == null) byteArrayGreek = createFBSByteArray(generator().rtreeGreek);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4051/buggy-version/src.main.java.com.github.ambling.rtreebenchmark.FBSRTree.java", "BodyUseAPI": [], "Fixed commit": "a80a890ce9de3d6627cce1e62f80b3f374c69951", "Url": "https://api.github.com/repos/ambling/rtree-benchmark", "Date": "2017-03-23T08:45:34Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.juehvtech.yayu.server.account.YoutubeAccountManager.getInstance().getService()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (service == null) { java.util.logging.Logger.getLogger(de.juehvtech.yayu.server.upload.UploadWorker.class.getName()).severe(\"Got no yt service. Exit.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8369/buggy-version/trunk.YAYU_Server.src.de.juehvtech.yayu.server.upload.UploadWorker.java", "BodyUseAPI": [], "Fixed commit": "21f0dff19bf8ff2b2185dafebf3b43d1185c1899", "Url": "https://api.github.com/repos/juehv/YAYU", "Date": "2013-01-23T17:48:57Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ball.getProspectBallX()) >= (StateGame.player1.getX())) { ball.setProspectBallX(((float) ((ball.getProspectBallX()) - ((ball.getdX()) - 0.002)))); ball.setProspectBallY(((ball.getProspectBallY()) - (ball.getdY()))); if (((ball.getProspectBallY()) <= 0) || (((ball.getProspectBallY()) + (ball.getWAndH())) >= (org.lwjgl.opengl.Display.getHeight()))) { ball.setdY((-(ball.getdY()))); } }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/302/buggy-version/src.game.pong.client.Ball.java", "BodyUseAPI": ["game.pong.client.Ball.getdY()", "game.pong.client.Ball.getdX()", "game.pong.client.Ball.getdY()", "game.pong.client.Ball.setProspectBallX(double)", "game.pong.client.Ball.getProspectBallY()", "game.pong.client.Ball.getWAndH()", "game.pong.client.Ball.getProspectBallY()", "game.pong.client.Ball.setdY(float)", "game.pong.client.Ball.getProspectBallY()", "game.pong.client.Ball.getProspectBallX()", "game.pong.client.Ball.setProspectBallY(float)"], "Fixed commit": "46a0a11c01bf4d3aa50786c2e4073d21370610b4", "Url": "https://api.github.com/repos/robmadeyou/Network", "Date": "2013-03-07T08:13:02Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((returnSelected().getName().equals(\"dynamite\")) | (returnSelected().getName().equals(\"string\"))) && ((myGame.getCurrentPlayer().getInventory().size()) == 5)) { combineItem = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8686/buggy-version/BEERGame.src.InventoryPanel.java", "BodyUseAPI": [], "Fixed commit": "c7ff8b73b10a4ef7956ecb30d1e94f841b1e4012", "Url": "https://api.github.com/repos/minivitale/BEERJava", "Date": "2011-05-16T18:45:28Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Project.UserStories.Spr4_Ding_US38(Data.Individual)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(list_name.isEmpty())) { s.addAll(list_name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4260/buggy-version/CS555Project.src.Project.ProcessData.java", "BodyUseAPI": ["java.util.Vector<java.lang.String>.addAll(java.util.List<java.lang.String>)"], "Fixed commit": "1b0d7caff25ac5100ef28ca584182ed9f66fb0d4", "Url": "https://api.github.com/repos/CS555/CS555", "Date": "2015-11-05T19:37:55Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Project.UserStories.Spr4_Ding_US10(Data.Individual)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(res6.equals(\"\"))) { s.add(res6); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4260/buggy-version/CS555Project.src.Project.ProcessData.java", "BodyUseAPI": ["java.util.Vector<java.lang.String>.add(java.lang.String)"], "Fixed commit": "1b0d7caff25ac5100ef28ca584182ed9f66fb0d4", "Url": "https://api.github.com/repos/CS555/CS555", "Date": "2015-11-05T19:37:55Z"},
{"Line": "=>682", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getParent()) != null) layout();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2334/buggy-version/applications.plugins.org.csstudio.swt.xygraph.src.org.csstudio.swt.xygraph.figures.Annotation.java", "BodyUseAPI": [], "Fixed commit": "b4202544f07ab0d7c7af2b6d60d9f340d7253d8a", "Url": "https://api.github.com/repos/ControlSystemStudio/cs-studio", "Date": "2013-09-23T20:36:50Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reader) == null) { this.reader = new com.sevenid.mobile.reader.bt77.RfidReader(cordova.getActivity()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/246/buggy-version/src.android.BT77RfidReader.java", "BodyUseAPI": [], "Fixed commit": "f11b00b1cfe35559cac86e3ed2dd89419d7313ee", "Url": "https://api.github.com/repos/ByteDoc/cordova-rfid-bt77", "Date": "2016-11-08T15:11:31Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (resource == null) { resource = new org.eobjects.metamodel.util.FileResource(filename); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3477/buggy-version/core.src.main.java.org.eobjects.analyzer.connection.CsvDatastore.java", "BodyUseAPI": [], "Fixed commit": "96beec3952a5c887e561ef03c166bd04dc674ea7", "Url": "https://api.github.com/repos/datacleaner/AnalyzerBeans", "Date": "2014-07-13T17:57:04Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MessageService.dba.getKeyExchangeMessageCount()) == 0) { MessageService.mNotificationManager.cancel(MessageService.KEY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4647/buggy-version/branches.tinfoil-sms.src.com.tinfoil.sms.sms.KeyExchangeManager.java", "BodyUseAPI": [], "Fixed commit": "411d1e45e39939b8475a290adc1a6f7dc0bab326", "Url": "https://api.github.com/repos/tinfoilhat/tinfoil-sms", "Date": "2013-08-03T17:46:26Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.cmy.xcheck.util.StringUtil.isAllDigit(checkItemLogic.getRightField())) { rightValues = new java.lang.String[]{ checkItemLogic.getRightField() }; }else { rightValues = requestParams.get(checkItemLogic.getRightField()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4293/buggy-version/xcheck.src.main.java.com.cmy.xcheck.util.handler.impl.LogicValidationHandlerImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String[]>.get(checkItemLogic.getRightField())", "com.cmy.xcheck.util.item.impl.XCheckItemLogic.getRightField()", "com.cmy.xcheck.util.item.impl.XCheckItemLogic.getRightField()"], "Fixed commit": "14fbdf6a3995920836130e4de087890b91a91af1", "Url": "https://api.github.com/repos/kevin72c/xcheck-project", "Date": "2017-02-07T07:59:58Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s.toString().equals(mEvent.getTitle())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7622/buggy-version/app.src.main.java.com.simaskuprelis.schedulenotifier.EventFragment.java", "BodyUseAPI": [], "Fixed commit": "aa152e46bd28d5b3271b1273c89a691b800f95a3", "Url": "https://api.github.com/repos/kuprelis/ScheduleNotifier", "Date": "2015-12-20T13:20:48Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (doToast) { android.widget.Toast.makeText(this, \"Screen always on enabled\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2863/buggy-version/app.src.main.java.com.vejkamera.favorites.FavoritesActivity.java", "BodyUseAPI": [], "Fixed commit": "b27dc31a4ee64ebead99ee8c0bdd127500873fbb", "Url": "https://api.github.com/repos/andersdinesen/VejKamera", "Date": "2016-02-25T10:39:41Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (doToast) { android.widget.Toast.makeText(this, \"Screen always on disabled\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2863/buggy-version/app.src.main.java.com.vejkamera.favorites.FavoritesActivity.java", "BodyUseAPI": [], "Fixed commit": "b27dc31a4ee64ebead99ee8c0bdd127500873fbb", "Url": "https://api.github.com/repos/andersdinesen/VejKamera", "Date": "2016-02-25T10:39:41Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.lwjgl.input.Mouse.isGrabbed()) org.lwjgl.input.Mouse.setGrabbed(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1763/buggy-version/src.dev.game.project.menus.PauseMenu.java", "BodyUseAPI": [], "Fixed commit": "75a755c3b2f021ca7cac0d6910c42a7081e79026", "Url": "https://api.github.com/repos/gameDevPrep/PaddleGame", "Date": "2013-11-01T13:50:02Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (intent != null) { intentData = intent.getExtras(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2550/buggy-version/app.src.main.java.com.ivarprudnikov.sensors.SensorDataSenderService.java", "BodyUseAPI": ["android.content.Intent.getExtras()"], "Fixed commit": "5acc8c75dac535740700fe3e4a26c2e081743751", "Url": "https://api.github.com/repos/ivarprudnikov/android_sensors", "Date": "2015-12-01T22:02:16Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (tasks != null) { for (se.chalmers.lidkopingsh.model.Task t : tasks) { t.addTaskListener(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5056/buggy-version/src.se.chalmers.lidkopingsh.model.Product.java", "BodyUseAPI": [], "Fixed commit": "d48e7443899d2926dbdaa9485c4c0fd104de4d5c", "Url": "https://api.github.com/repos/Farenheight/Lidkoping-SH", "Date": "2013-09-27T11:39:16Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (products != null) { for (se.chalmers.lidkopingsh.model.Product p : products) { p.addProductListener(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5056/buggy-version/src.se.chalmers.lidkopingsh.model.Order.java", "BodyUseAPI": [], "Fixed commit": "d48e7443899d2926dbdaa9485c4c0fd104de4d5c", "Url": "https://api.github.com/repos/Farenheight/Lidkoping-SH", "Date": "2013-09-27T11:39:16Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((text2.getText().length()) == 4) { text2.setText(((text2.getText()) + \"0\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/164/buggy-version/Machine.java", "BodyUseAPI": ["javax.swing.JTextArea.setText(java.lang.String)", "javax.swing.JTextArea.getText()"], "Fixed commit": "0e1f47395bf8240a730ad79896c6964c901b81ad", "Url": "https://api.github.com/repos/jashinxd/apcs-final", "Date": "2015-01-20T13:35:28Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((amt) < (prc)) && ((amt) > 0.0)) { response.setText(((\"You do not have enough money, you need $\" + ((prc) - (amt))) + \" more\")); }else if (((amt) >= (prc)) && ((stocks[i]) > 0)) { stocks[i] = (stocks[i]) - 1; text3.setText((\"\" + (stocks[i]))); response.setText((\"Your change is $\" + ((amt) - (prc)))); if ((response.getText().length()) == 19) { response.setText(((response.getText()) + \"0\")); } amt = 0.0; prc = 0.0; text1.setText((\"$\" + (prc))); if ((text1.getText().length()) == 4) { text1.setText(((text1.getText()) + \"0\")); } text2.setText((\"$\" + (amt))); if ((text2.getText().length()) == 4) { text2.setText(((text2.getText()) + \"0\")); } }else if ((stocks[i]) == 0) { response.setText(\"there are no more stocks\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/164/buggy-version/Machine.java", "BodyUseAPI": ["javax.swing.JTextArea.setText(java.lang.String)", "javax.swing.JTextArea.setText(java.lang.String)", "javax.swing.JTextArea.setText(java.lang.String)", "javax.swing.JTextArea.setText(java.lang.String)"], "Fixed commit": "0e1f47395bf8240a730ad79896c6964c901b81ad", "Url": "https://api.github.com/repos/jashinxd/apcs-final", "Date": "2015-01-20T13:35:28Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stocks[i]) == 0) { response.setText(\"there are no more stocks\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/164/buggy-version/Machine.java", "BodyUseAPI": [], "Fixed commit": "0e1f47395bf8240a730ad79896c6964c901b81ad", "Url": "https://api.github.com/repos/jashinxd/apcs-final", "Date": "2015-01-20T13:35:28Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((text1.getText().length()) == 4) { text1.setText(((text1.getText()) + \"0\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/164/buggy-version/Machine.java", "BodyUseAPI": ["javax.swing.JTextArea.getText()", "javax.swing.JTextArea.setText(java.lang.String)"], "Fixed commit": "0e1f47395bf8240a730ad79896c6964c901b81ad", "Url": "https://api.github.com/repos/jashinxd/apcs-final", "Date": "2015-01-20T13:35:28Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((yproc) != null) yproc.doStop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4372/buggy-version/yamcs-core.src.main.java.org.yamcs.archive.ParameterReplayHandler.java", "BodyUseAPI": [], "Fixed commit": "a05ab78c43a02737594136e971087aacb9ee38b6", "Url": "https://api.github.com/repos/yamcs/yamcs", "Date": "2016-01-22T12:24:36Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.grickle.rebind.NameMangler.getPackageName(com.google.gwt.core.ext.typeinfo.JType)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rv == null) rv = \"org.grickle.client\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2145/buggy-version/src.main.java.org.grickle.rebind.NameMangler.java", "BodyUseAPI": [], "Fixed commit": "ded63b8287dc37a2c7b3cb0a53334244b51ebcc0", "Url": "https://api.github.com/repos/jamesharr/jsondto", "Date": "2011-05-15T03:25:21Z"},
{"Line": "=>854", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isDefaultDisplay) { android.app.ResourcesManager.applyNonDefaultDisplayMetricsToConfiguration(dm, tmpConfig); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8352/buggy-version/core.java.android.app.ResourcesManager.java", "BodyUseAPI": [], "Fixed commit": "0858d08a884c45d49fb513bb9503ddfd969280e5", "Url": "https://api.github.com/repos/AOSiP/platform_frameworks_base", "Date": "2016-10-18T22:46:22Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((you.weapon.ammoTotal) > 0) { you.coins += 10; you.scrap += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1675/buggy-version/RPG8.src.project.items.ItemScreen.java", "BodyUseAPI": [], "Fixed commit": "c7f11e52b2c741e5f627219d3066aa33717f703f", "Url": "https://api.github.com/repos/bnockles/RPG8", "Date": "2016-02-25T17:40:57Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(onefengma.demo.server.config.Config.LOG_OPEN)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7970/buggy-version/src.main.java.onefengma.demo.server.core.LogUtils.java", "BodyUseAPI": [], "Fixed commit": "1d1b908bf09a6c2cc98104c92c51c650b42b1e79", "Url": "https://api.github.com/repos/chufengma/b2b", "Date": "2016-07-24T08:01:26Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.example.irenechen.sushigobbleagain.src.src.SushiGobble.MainMenuScreen.play) { com.example.irenechen.sushigobbleagain.src.src.SushiGobble.Assets.loadMenuMusic(game); }else { com.example.irenechen.sushigobbleagain.src.src.SushiGobble.MainMenuScreen.play = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1527/buggy-version/app.src.main.java.com.example.irenechen.sushigobbleagain.src.src.SushiGobble.MainMenuScreen.java", "BodyUseAPI": [], "Fixed commit": "3042ab14b0c9c08e0a1f12270c73dce757285c65", "Url": "https://api.github.com/repos/irenewchen/SushiGobble", "Date": "2015-07-04T07:01:41Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter((\"valueCodedText.\" + (question.getId())))", "question.getQuestion().getQuestionType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(\"AUTOCOMPLETE\".equals(codedType.getFieldStyle()))) || (org.apache.commons.lang.StringUtils.isNotBlank(valueCodedTextParam))) { valueCoded = codedType.getOptionById(java.lang.Integer.parseInt(valueCodedParam)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7293/buggy-version/omod.src.main.java.org.openmrs.module.facilitydata.web.controller.FacilityDataFormEntryFormController.java", "BodyUseAPI": ["org.openmrs.module.facilitydata.model.CodedFacilityDataQuestionType.getOptionById(int)"], "Fixed commit": "c2591b378fb3a3e806e5f11e4eaabac9abca4fb1", "Url": "https://api.github.com/repos/openmrs/openmrs-module-facilitydata", "Date": "2014-09-02T16:34:16Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((anzahlLinien) > 0) { for (int i = 0; i < ((anzahlLinien) + 1); i++) { anschlussLinien[i].bahnhofEntfernen(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5870/buggy-version/src.de.vp.Bahnhof.java", "BodyUseAPI": [], "Fixed commit": "9c0beaeefe8c106ab88d86f332ab59a2208bd7f1", "Url": "https://api.github.com/repos/verkehrsplaner/vp", "Date": "2014-06-19T18:47:14Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.util.math.AxisAlignedBB.calculateIntercept(net.minecraft.util.math.Vec3d,net.minecraft.util.math.Vec3d)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((crankShaftPos != null) && ((start.distanceTo(crankShaftPos.hitVec)) < distance)) { lookObject = crankShaftPos; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4671/buggy-version/src.main.java.tech.flatstone.appliedlogistics.common.blocks.misc.BlockCrank.java", "BodyUseAPI": [], "Fixed commit": "c7e6f63436eee87fd107f7ddd960fb8c0a9b659f", "Url": "https://api.github.com/repos/Phylogeny/AppliedLogistics", "Date": "2016-06-13T01:56:22Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.util.math.AxisAlignedBB.calculateIntercept(net.minecraft.util.math.Vec3d,net.minecraft.util.math.Vec3d)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (crankTopPos != null) { lookObject = crankTopPos; distance = start.distanceTo(crankTopPos.hitVec); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4671/buggy-version/src.main.java.tech.flatstone.appliedlogistics.common.blocks.misc.BlockCrank.java", "BodyUseAPI": ["net.minecraft.util.math.Vec3d.distanceTo(crankTopPos.hitVec)"], "Fixed commit": "c7e6f63436eee87fd107f7ddd960fb8c0a9b659f", "Url": "https://api.github.com/repos/Phylogeny/AppliedLogistics", "Date": "2016-06-13T01:56:22Z"},
{"Line": "=>530", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getMachineId(stack)) != (-1)) RebuildStructure(player.worldObj, this.machineList.get(getMachineId(stack)), stack, x, y, z, net.minecraft.util.EnumFacing.getFront(dir));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5751/buggy-version/src.main.java.zmaster587.libVulpes.items.ItemProjector.java", "BodyUseAPI": ["zmaster587.libVulpes.items.ItemProjector.RebuildStructure(player.worldObj,this.machineList.get(getMachineId(stack)),net.minecraft.item.ItemStack,int,int,int,net.minecraft.util.EnumFacing.getFront(dir))", "zmaster587.libVulpes.items.ItemProjector.getMachineId(net.minecraft.item.ItemStack)", "java.util.ArrayList<zmaster587.libVulpes.tile.multiblock.TileMultiBlock>.get(int)"], "Fixed commit": "d2777d13e424c4fbba06a1269397e728bb87e31b", "Url": "https://api.github.com/repos/zmaster587/libVulpes", "Date": "2017-04-26T23:20:51Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeService.getCurrentYear()) != 0) { checkReports(); monitorCountries(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6401/buggy-version/kyoto.src.main.java.uk.ac.ic.kyoto.countries.Monitor.java", "BodyUseAPI": [], "Fixed commit": "0a333f3dbf1449ef42690861a9ce2cdfc686f18b", "Url": "https://api.github.com/repos/farhanrahman/kyoto", "Date": "2012-06-16T15:25:23Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isBackfill) { mergedAnomalyResultDTO.setNotified(isBackfill); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/576/buggy-version/thirdeye.thirdeye-pinot.src.main.java.com.linkedin.thirdeye.anomaly.merge.AnomalyMergeExecutor.java", "BodyUseAPI": ["com.linkedin.thirdeye.datalayer.dto.MergedAnomalyResultDTO.setNotified(boolean)"], "Fixed commit": "cec341d539b78fb43f5b3a6b700f0da272ed0d6e", "Url": "https://api.github.com/repos/linkedin/pinot", "Date": "2016-11-12T16:14:40Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mAuthorText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((author_adapter.getPosition(mAuthor)) < 0) { author_adapter.add(mAuthor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6776/buggy-version/src.com.eleybourn.bookcatalogue.BookISBNSearch.java", "BodyUseAPI": ["android.widget.ArrayAdapter<java.lang.String>.add(java.lang.String)"], "Fixed commit": "45381d29c44cce1482c3c0a7ae3a918fd0c387cc", "Url": "https://api.github.com/repos/rwetzlmayr/Book-Catalogue", "Date": "2012-06-21T17:32:20Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.therm.thermicscontrol.AndroidComponentUtil.missingPermissions(com.therm.thermicscontrol.MainMenuActivity,com.therm.thermicscontrol.AndroidComponentUtil.getPermissions())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((missingPermissions.length) > 0) { android.support.v4.app.ActivityCompat.requestPermissions(this, missingPermissions, com.therm.thermicscontrol.MainMenuActivity.PERMISSIONS_REQUEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2265/buggy-version/ThermicsControl.thermicsControl.src.main.java.com.therm.thermicscontrol.MainMenuActivity.java", "BodyUseAPI": ["android.support.v4.app.ActivityCompat.requestPermissions(com.therm.thermicscontrol.MainMenuActivity,java.lang.String[],int)"], "Fixed commit": "e37223c8484f432fdad53eee98b702401c7626a1", "Url": "https://api.github.com/repos/ifelsedeveloper/thermicsgsm", "Date": "2016-09-27T02:34:48Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((minY) > 0) { minY = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7802/buggy-version/app.src.main.java.com.example.jianming.views.YImageView.java", "BodyUseAPI": [], "Fixed commit": "a268957c2c8df907b4d3005c11ea4b4c7b97cfdf", "Url": "https://api.github.com/repos/knightingal/android_start_demo", "Date": "2015-06-13T14:17:51Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((parentFile.list()) != null) { picSize = parentFile.list(new java.io.FilenameFilter() { @java.lang.Override public boolean accept(java.io.File dir, java.lang.String filename) { return ((filename.toLowerCase().endsWith(\".jpg\")) || (filename.toLowerCase().endsWith(\".png\"))) || (filename.toLowerCase().endsWith(\".jpeg\")); } }).length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/464/buggy-version/DemoImgPick.app.src.main.java.com.example.leeyou.demoimgpick.ImageGridShowActivity.java", "BodyUseAPI": ["java.io.File.list(java.io.FilenameFilter)"], "Fixed commit": "5de42ef4e5039a393a0051d50d6b3942075f9867", "Url": "https://api.github.com/repos/LeeeYou/PickImg", "Date": "2017-11-10T06:18:51Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.page) < 2) { for (int i = 0; i < 20; i++) { com.ray.mvvm.lib.model.model.test.TestEntity testEntity = new com.ray.mvvm.lib.model.model.test.TestEntity((\"Title\" + (index)), \"Description\"); testEntities.add(testEntity); index += 1; } (this.page)++; respEntity.setHasMore(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1178/buggy-version/V2EXSample.src.main.java.com.ray.sample.v2ex.view.mock.presenter.WrapperListSampleP.java", "BodyUseAPI": [], "Fixed commit": "721afe95a53aae208e326bc72ee80da28bfd6025", "Url": "https://api.github.com/repos/TheInternationalAndroid/V2EXAndroidClient", "Date": "2016-11-30T04:30:35Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inNoteBounds && ((lastDragLocation) == null)) { lastDragLocation = new proj4ChanceLinRemondiSolis.Controller.Coordinates(); lastDragLocation.x = mouseEvent.getX(); lastDragLocation.y = mouseEvent.getY(); return; }else if ((lastDragLocation) != null) { compositionPaneManager.moveSelectedNotes(((mouseEvent.getX()) - (lastDragLocation.x)), ((mouseEvent.getY()) - (lastDragLocation.y))); lastDragLocation.x = mouseEvent.getX(); lastDragLocation.y = mouseEvent.getY(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2606/buggy-version/src.proj4ChanceLinRemondiSolis.Controller.java", "BodyUseAPI": [], "Fixed commit": "11fb522e10b9f0ecc0dc66ae0710709d71d8135f", "Url": "https://api.github.com/repos/JennyTS13/CS361Project4", "Date": "2016-10-08T20:17:17Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((model.getOfficeApp()) != null) { updateO365Permission(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/245/buggy-version/src.android.com.microsoftopentechnologies.intellij.wizards.activityConfiguration.SummaryStep.java", "BodyUseAPI": [], "Fixed commit": "4e68f6490b8c0911bf393369f677fa0e786495a8", "Url": "https://api.github.com/repos/leotilli/msopentech-tools-for-intellij", "Date": "2015-04-30T19:51:36Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fileList.size()) > 0) { copyDialog.setMax(fileList.size()); }else { copyDialog.setMax(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/9048/buggy-version/src.com.tortel.externalize.MainActivity.java", "BodyUseAPI": ["android.app.ProgressDialog.setMax(int)", "java.util.List<java.io.File>.size()"], "Fixed commit": "6d7265facde0197d4645b88f6dd5d2bd1652763d", "Url": "https://api.github.com/repos/Tortel/Externalize", "Date": "2011-08-08T03:24:13Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((pco.getCollideWithGroups()) > 1) || ((pco1.getCollisionGroup()) > 1)) { if (((pco.getCollideWithGroups()) == (pco1.getCollisionGroup())) || ((pco1.getCollideWithGroups()) == (pco.getCollisionGroup()))) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8289/buggy-version/src.main.java.edu.chl.LifeOfAGoblin.jME3.controller.CollisionObjectListener.java", "BodyUseAPI": ["com.jme3.bullet.collision.PhysicsCollisionObject.getCollisionGroup()", "com.jme3.bullet.collision.PhysicsCollisionObject.getCollisionGroup()", "com.jme3.bullet.collision.PhysicsCollisionObject.getCollideWithGroups()", "com.jme3.bullet.collision.PhysicsCollisionObject.getCollideWithGroups()"], "Fixed commit": "88a1e799e135b47373e89c0b65de31e918ee1893", "Url": "https://api.github.com/repos/Mrmiffo/LifeOfAGoblin", "Date": "2015-05-17T20:36:14Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getProperties().get(Constants.WWW_USERS_REQUIRE_LOGIN).equals(Properties.YES)) { return (action.requiresLogin()) && ((getUser()) == null) ? false : true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4653/buggy-version/src.com.pugh.sockso.web.action.Api.java", "BodyUseAPI": [], "Fixed commit": "d21004199152193248af463a7455b8d51e6cce9b", "Url": "https://api.github.com/repos/rodnaph/sockso", "Date": "2011-07-18T22:49:40Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((file) != null) && ((o.file) != null)) { if (file.equals(o.file)) { return (startLine) - (o.startLine); }else { return file.compareTo(o.file); } }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/528/buggy-version/compilers.framework.src.main.java.org.thingml.compilers.checker.Checker.java", "BodyUseAPI": ["java.lang.String.compareTo(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "428a68c93d81427bdf4ebeb116b09711f8766dd5", "Url": "https://api.github.com/repos/TelluIoT/ThingML", "Date": "2017-06-27T10:43:50Z"},
{"Line": "=>1439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (haveFilters) unlockFilters(ses);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6435/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.util.nio.GridNioServer.java", "BodyUseAPI": [], "Fixed commit": "84ffd061290b96f768e9ea589d642112171f5cd9", "Url": "https://api.github.com/repos/NSAmelchev/ignite", "Date": "2017-12-08T10:58:02Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sender instanceof org.bukkit.command.ConsoleCommandSender) { sender.sendMessage(((((((((org.bukkit.ChatColor.BLUE) + \"[\") + (org.bukkit.ChatColor.GOLD)) + \" OpMe \") + (org.bukkit.ChatColor.BLUE)) + \"] \") + (org.bukkit.ChatColor.RED)) + \"Sorry! You can't do that! \")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2695/buggy-version/src.me.bands.voxela.voxela.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage(((((((((org.bukkit.ChatColor.BLUE) + \"[\") + (org.bukkit.ChatColor.GOLD)) + \" OpMe \") + (org.bukkit.ChatColor.BLUE)) + \"] \") + (org.bukkit.ChatColor.RED)) + \"Sorry! You can't do that! \"))"], "Fixed commit": "913d6c60228b84d7ed0e05525ee6fcbfdffd492a", "Url": "https://api.github.com/repos/bands/OpMe", "Date": "2017-11-14T22:25:08Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.dbdeploy.AntTarget.createUndoOutputPrintStream(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (undoOutputPrintStream != null) { undoOutputPrintStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4734/buggy-version/dbdeploy.src.java.net.sf.dbdeploy.AntTarget.java", "BodyUseAPI": ["java.io.PrintStream.close()"], "Fixed commit": "3f96364c38d54e425b96636168c7d615dfa2f094", "Url": "https://api.github.com/repos/sudr/dbdeploy", "Date": "2007-01-09T15:28:45Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(lblValidUntil.getText().toString().isEmpty())) { date_validUntil = formatterVoucher.parseDateTime(lblValidUntil.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2224/buggy-version/VTrack.app.src.main.java.ch.mobop.mse.vtrack.NewVoucherActivity.java", "BodyUseAPI": ["android.widget.TextView.getText()", "org.joda.time.format.DateTimeFormatter.parseDateTime(lblValidUntil.getText().toString())", "lblValidUntil.getText().toString()"], "Fixed commit": "c36d3b1cac347eb360683b0e0359cfaca3d52dbb", "Url": "https://api.github.com/repos/n0daft/VTrack", "Date": "2015-03-18T14:36:33Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(lblReceivedAt.getText().toString().isEmpty())) { date_receivedAt = formatterVoucher.parseDateTime(lblReceivedAt.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2224/buggy-version/VTrack.app.src.main.java.ch.mobop.mse.vtrack.NewVoucherActivity.java", "BodyUseAPI": ["android.widget.TextView.getText()", "lblReceivedAt.getText().toString()", "org.joda.time.format.DateTimeFormatter.parseDateTime(lblReceivedAt.getText().toString())"], "Fixed commit": "c36d3b1cac347eb360683b0e0359cfaca3d52dbb", "Url": "https://api.github.com/repos/n0daft/VTrack", "Date": "2015-03-18T14:36:33Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fenixedu.academic.domain.degreeStructure.Context.getCurriculumAggregator()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((aggregator != null) && (aggregator.isEnrolmentMaster())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2958/buggy-version/src.main.java.org.fenixedu.ulisboa.specifications.domain.studentCurriculum.CurriculumAggregatorListeners.java", "BodyUseAPI": [], "Fixed commit": "310155d6f8fbe23f321455a0ede0290a13b345a4", "Url": "https://api.github.com/repos/qub-it/fenixedu-ulisboa-specifications", "Date": "2016-06-02T22:15:24Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (location == null) { lat = null; lon = null; }else { lat = location.getLatitude(); lon = location.getLongitude(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6208/buggy-version/LostAndFound.app.src.main.java.edu.gatech.lostandfound.FoundActivity.java", "BodyUseAPI": ["android.location.Location.getLatitude()", "android.location.Location.getLongitude()"], "Fixed commit": "a1a498d567361663a642511bfdafc2fc6f713520", "Url": "https://api.github.com/repos/kszr/cs6235-app", "Date": "2016-10-27T19:52:27Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.gatech.lostandfound.FoundActivity.getSystemService(Context.LOCATION_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (lm.isProviderEnabled(LocationManager.GPS_PROVIDER)) location = lm.getLastKnownLocation(LocationManager.GPS_PROVIDER); else if (lm.isProviderEnabled(LocationManager.NETWORK_PROVIDER)) location = lm.getLastKnownLocation(LocationManager.NETWORK_PROVIDER); else location = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6208/buggy-version/LostAndFound.app.src.main.java.edu.gatech.lostandfound.FoundActivity.java", "BodyUseAPI": ["android.location.LocationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER)", "android.location.LocationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER)", "android.location.LocationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER)"], "Fixed commit": "a1a498d567361663a642511bfdafc2fc6f713520", "Url": "https://api.github.com/repos/kszr/cs6235-app", "Date": "2016-10-27T19:52:27Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.dailyplanner.commons.util.DateUtil.nowAsDateTime()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((end.getDate().compareTo(nowAsDateTime.getDate())) < 0) { return \"OVERDUE\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5653/buggy-version/src.main.java.seedu.dailyplanner.model.task.Task.java", "BodyUseAPI": [], "Fixed commit": "731b5d4154254ce092c4f9f36a12f8381e5e3722", "Url": "https://api.github.com/repos/CS2103AUG2016-F11-C4/main", "Date": "2016-11-07T03:35:46Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (trainingNames == null) { throw new java.lang.IllegalArgumentException(\"The list of training names is null.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3699/buggy-version/src.com.valkryst.generator.MarkovNameGenerator.java", "BodyUseAPI": [], "Fixed commit": "7fc46ad81b54da29d842cd0745249d927b564962", "Url": "https://api.github.com/repos/Valkryst/VNameGenerator", "Date": "2017-06-24T15:46:00Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((trainingNames.size()) == 0) { throw new java.lang.IllegalArgumentException(\"The list of training names is empty.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3699/buggy-version/src.com.valkryst.generator.MarkovNameGenerator.java", "BodyUseAPI": [], "Fixed commit": "7fc46ad81b54da29d842cd0745249d927b564962", "Url": "https://api.github.com/repos/Valkryst/VNameGenerator", "Date": "2017-06-24T15:46:00Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang.StringUtils.trimToEmpty(dso2.getName())", "org.apache.commons.lang.StringUtils.trimToEmpty(dso1.getName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (name1.equals(name2)) { return org.apache.commons.lang.ObjectUtils.compare(dso1.getID(), dso2.getID()); }else { return name1.compareToIgnoreCase(name2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/68/buggy-version/dspace-api.src.main.java.org.dspace.content.comparator.NameAscendingComparator.java", "BodyUseAPI": ["java.lang.String.compareToIgnoreCase(java.lang.String)"], "Fixed commit": "cc3342894b695db6f9b878e1cce392a3f77509b2", "Url": "https://api.github.com/repos/Georgetown-University-Libraries/DSpace", "Date": "2017-05-22T08:52:15Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((model) != null) && ((model.getFeatureProject().getFeatureModel().getFeature(name).getColorList()) != null)) { de.ovgu.featureide.fm.core.Feature feature = model.getFeatureProject().getFeatureModel().getFeature(name); if ((feature.getColorList()) != null) { return model.getFeatureProject().getFeatureModel().getFeature(name).getColorList().getColor(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4057/buggy-version/plugins.de.ovgu.featureide.core.src.de.ovgu.featureide.core.fstmodel.FSTFeature.java", "BodyUseAPI": ["model.getFeatureProject().getFeatureModel().getFeature(java.lang.String)", "model.getFeatureProject().getFeatureModel()", "model.getFeatureProject().getFeatureModel().getFeature(name).getColorList()", "de.ovgu.featureide.core.fstmodel.FSTModel.getFeatureProject()", "model.getFeatureProject().getFeatureModel().getFeature(name).getColorList().getColor()", "model.getFeatureProject().getFeatureModel().getFeature(java.lang.String)", "model.getFeatureProject().getFeatureModel()", "de.ovgu.featureide.core.fstmodel.FSTModel.getFeatureProject()"], "Fixed commit": "20cd6497e026918cf7023392d956d9d815e5713b", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2015-08-18T09:25:52Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numChar[index]) == '0') { if (startingZero) { if (n > 0) { n++; } }else { n++; } }else { if (startingZero) { startingZero = false; } n++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8962/buggy-version/src.apcompsci.SigFigs.java", "BodyUseAPI": [], "Fixed commit": "4bf6ecec35f998408082846462b112637d4def13", "Url": "https://api.github.com/repos/Epik-Glow/MiscellaneousStuff", "Date": "2012-12-01T06:56:18Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (instr == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/857/buggy-version/src.com.twu.biblioteca.UserConsole.java", "BodyUseAPI": [], "Fixed commit": "db15c6d996f14d93b4c0d303346c35b6b745e39d", "Url": "https://api.github.com/repos/carwestsam/twu-biblioteca-cedlik", "Date": "2015-08-02T16:40:46Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((p.getOpenInventory()) != null) && (p.getOpenInventory().getTitle().equals((((((((((((org.bukkit.ChatColor.LIGHT_PURPLE) + \"\") + (org.bukkit.ChatColor.MAGIC)) + \"abc\") + (org.bukkit.ChatColor.RESET)) + (org.bukkit.ChatColor.DARK_PURPLE)) + \" Runecrafting \") + (org.bukkit.ChatColor.LIGHT_PURPLE)) + \"\") + (org.bukkit.ChatColor.MAGIC)) + \"cba\")))) p.setItemOnCursor(result); else p.getInventory().addItem(result);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2115/buggy-version/src.com.taiter.ce.CEventHandler.java", "BodyUseAPI": ["p.getInventory().addItem(org.bukkit.inventory.ItemStack)", "org.bukkit.entity.Player.getInventory()", "org.bukkit.entity.Player.setItemOnCursor(org.bukkit.inventory.ItemStack)"], "Fixed commit": "7197c3e2cd3498eb0a303623ec975595c8ab4424", "Url": "https://api.github.com/repos/Taiterio/ce", "Date": "2016-01-31T17:21:57Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.worldObj.isRemote)) { worldObj.createExplosion(this, posX, posY, posZ, 2.7F, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5091/buggy-version/src.main.java.com.gameminers.farrago.kahur.entity.EntityKahurProjectile.java", "BodyUseAPI": [], "Fixed commit": "87aa78a3289b35919e49cb7eca5bd74f716e96d1", "Url": "https://api.github.com/repos/unascribed/Farrago", "Date": "2015-02-18T19:01:57Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uri.toString().startsWith(\"//\")) { uri = android.net.Uri.parse((\"http:\" + (uri.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6434/buggy-version/src.com.bigpupdev.synodroid.ui.DownloadFragment.java", "BodyUseAPI": ["android.net.Uri.parse((\"http:\" + (uri.toString())))", "android.net.Uri.toString()"], "Fixed commit": "0cc87f9eb58f1b1885a9fe782241b613478c286d", "Url": "https://api.github.com/repos/stevegaron/Synodroid", "Date": "2012-08-25T02:08:47Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7424/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "d1fd88604f33cff6d1dcd06037929b570dbfe67e", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-12T21:55:31Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["response.getHighlighting().get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (highlights != null) { for (java.lang.String highlihgtkey : highlights.keySet()) { for (java.lang.String fieldkey : document.getFieldNames()) { if (highlihgtkey.contains(fieldkey)) { hit.getHighlights().put(fieldkey, highlights.get(highlihgtkey)); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3700/buggy-version/src.main.java.com.searchbox.core.search.result.TemplateElementSolrAdapter.java", "BodyUseAPI": ["hit.getHighlights().put(java.lang.String,java.util.List<java.lang.String>)", "java.util.Map<java.lang.String, java.util.List<java.lang.String>>.keySet()", "java.util.Map<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)"], "Fixed commit": "bc2304eb0f1dc1f58f007b2e7b5dca63fb2d620f", "Url": "https://api.github.com/repos/searchbox/framework", "Date": "2014-03-18T06:51:20Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(json)) { return com.flightstats.hub.model.ChannelConfiguration.builder().withName(name).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2203/buggy-version/src.main.java.com.flightstats.hub.model.ChannelConfiguration.java", "BodyUseAPI": [], "Fixed commit": "11fb7d9c8e0ceba73e65e0d129a673bd09592473", "Url": "https://api.github.com/repos/flightstats/hub", "Date": "2015-02-25T22:20:30Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.field(OIndexInternal.INDEX_VERSION)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (version != null) return version;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7892/buggy-version/core.src.main.java.com.orientechnologies.orient.core.index.OIndexRemote.java", "BodyUseAPI": [], "Fixed commit": "7afe70261cc466a2f4cc273080dd32f6b01e94a3", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-01-13T15:03:46Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!hasModified) { families.append(\"\\t\\t\\t\").append((-1)).append(\");\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2763/buggy-version/src.java.com.bizosys.hsearch.treetable.compiler.HSearchCompiler.java", "BodyUseAPI": [], "Fixed commit": "9c816c3b75b672bf365af67ccef9adf17117046a", "Url": "https://api.github.com/repos/bizosys/hsearch-core", "Date": "2013-04-24T05:41:31Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.function.Function<T, ?>.apply(T)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (applied instanceof java.lang.Number) { hash = (31 * hash) + (((java.lang.Number) (applied)).intValue()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/323/buggy-version/chrl-parent.chrl-utils.src.main.java.at.chrl.nutils.ClassUtils.java", "BodyUseAPI": [], "Fixed commit": "13063a2ff0c311c7286d55d238f87e89ea326bde", "Url": "https://api.github.com/repos/vinzynth/ChRL", "Date": "2015-08-26T20:37:33Z"},
{"Line": "=>700", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mPost.getSlug().equals(slug)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8420/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.posts.EditPostSettingsFragment.java", "BodyUseAPI": [], "Fixed commit": "fdccec1e316b56f13207e293eb37cc2a4f600447", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2017-06-16T13:54:25Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vo.getMethodParams().size()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((met_targetType != null) && ((met_paramTypes[met_param_index]) == null)) { vo.addMethodParam(null); }else { java.lang.Object metparam = jexcelunit.classmodule.PrimitiveChecker.convertObject(met_targetType, met_paramString); vo.addMethodParam(metparam); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2346/buggy-version/JexcelUnit.src.jexcelunit.excel.ExcelReader.java", "BodyUseAPI": ["jexcelunit.classmodule.PrimitiveChecker.convertObject(java.lang.Class,java.lang.String)"], "Fixed commit": "7b95c61ffa5fb110f7bf4049a923bbf7a2689d41", "Url": "https://api.github.com/repos/shpongle2634/JexcelUnit", "Date": "2017-10-23T07:41:54Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paramString.toLowerCase().equals(\"null\")) return null; else return paramString;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2346/buggy-version/JexcelUnit.src.jexcelunit.classmodule.PrimitiveChecker.java", "BodyUseAPI": [], "Fixed commit": "7b95c61ffa5fb110f7bf4049a923bbf7a2689d41", "Url": "https://api.github.com/repos/shpongle2634/JexcelUnit", "Date": "2017-10-23T07:41:54Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cell.getCellComment()) != null) cell.removeCellComment();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2346/buggy-version/JexcelUnit.src.jexcelunit.excel.ExcelResultSaver.java", "BodyUseAPI": ["org.apache.poi.xssf.usermodel.XSSFCell.removeCellComment()"], "Fixed commit": "7b95c61ffa5fb110f7bf4049a923bbf7a2689d41", "Url": "https://api.github.com/repos/shpongle2634/JexcelUnit", "Date": "2017-10-23T07:41:54Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((r <= (p - 5)) || (r > (p + 5))) return r; else return WorldClass.randomGen(lower, upper, p);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5328/buggy-version/src.WorldClass.java", "BodyUseAPI": ["WorldClass.randomGen(float,float,float)"], "Fixed commit": "2d0b26c093847c82177c035b7d8aa0cb071c5b44", "Url": "https://api.github.com/repos/88denooyer/cube-quest-graphics", "Date": "2017-12-10T20:03:04Z"},
{"Line": "=>1591", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.Uri.getEncodedQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (equalsIndex >= (query.length())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3128/buggy-version/core.java.android.net.Uri.java", "BodyUseAPI": [], "Fixed commit": "a52c85dab1f48916f347d0e7bdaaa0bf1df5c4a8", "Url": "https://api.github.com/repos/halogenOS/android_frameworks_base", "Date": "2010-05-11T17:26:24Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPaused()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2907/buggy-version/src.scene.TrailScene.java", "BodyUseAPI": [], "Fixed commit": "03679a3a91043c55cdb09b96a2d7054175fd694b", "Url": "https://api.github.com/repos/Tanner/Oregon-Trail", "Date": "2011-11-09T01:12:38Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPaused()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2907/buggy-version/src.scene.TrailScene.java", "BodyUseAPI": [], "Fixed commit": "03679a3a91043c55cdb09b96a2d7054175fd694b", "Url": "https://api.github.com/repos/Tanner/Oregon-Trail", "Date": "2011-11-09T01:12:38Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPaused()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2907/buggy-version/src.scene.TrailScene.java", "BodyUseAPI": [], "Fixed commit": "03679a3a91043c55cdb09b96a2d7054175fd694b", "Url": "https://api.github.com/repos/Tanner/Oregon-Trail", "Date": "2011-11-09T01:12:38Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["module.repo.getConfig()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(cfg.getFile().exists())) { module.repo.create(false); }else { try { new net.polydawn.mdm.Git(module.getRepo()).reset().setMode(ResetType.HARD).call(); } catch (net.polydawn.mdm.CheckoutConflictException e) { throw new net.polydawn.mdm.MajorBug(\"an unrecognized problem occurred. please file a bug report.\", e); } catch (net.polydawn.mdm.GitAPIException e) { throw new net.polydawn.mdm.MajorBug(\"an unrecognized problem occurred. please file a bug report.\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8881/buggy-version/src.main.net.polydawn.mdm.Plumbing.java", "BodyUseAPI": [], "Fixed commit": "b1efeada9392619a4468dd98bbd10c4b35e9603b", "Url": "https://api.github.com/repos/polydawn/mdm", "Date": "2014-05-31T20:24:44Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((previousScreen.getClass()) == (kiviuq.views.SelectScreen.class)) { ((kiviuq.views.SelectScreen) (previousScreen)).refreshHighScores(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4881/buggy-version/src.kiviuq.views.LevelScreen.java", "BodyUseAPI": [], "Fixed commit": "87c6ba9da0ef20be3ff299d203b1dff5d415819c", "Url": "https://api.github.com/repos/WPISoftwareEngineeringD2015/WildSixesGame", "Date": "2015-05-06T00:15:24Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (low <= high) push(new io.github.kpatel.dsalg.model.util.DeltaMoveMarker(\"High\", high));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8568/buggy-version/src.main.java.io.github.kpatel.dsalg.model.search.BinarySearch.java", "BodyUseAPI": ["io.github.kpatel.dsalg.model.search.BinarySearch<E>.push(io.github.kpatel.dsalg.model.util.DeltaMoveMarker)"], "Fixed commit": "f21497b6f30c130bbff3f87e0b6ced07a9a173c0", "Url": "https://api.github.com/repos/kpatel20538/Data-Structures-Demonstration", "Date": "2017-08-23T16:32:06Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (low <= high) push(new io.github.kpatel.dsalg.model.util.DeltaMoveMarker(\"Low\", low));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8568/buggy-version/src.main.java.io.github.kpatel.dsalg.model.search.BinarySearch.java", "BodyUseAPI": ["io.github.kpatel.dsalg.model.search.BinarySearch<E>.push(io.github.kpatel.dsalg.model.util.DeltaMoveMarker)"], "Fixed commit": "f21497b6f30c130bbff3f87e0b6ced07a9a173c0", "Url": "https://api.github.com/repos/kpatel20538/Data-Structures-Demonstration", "Date": "2017-08-23T16:32:06Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isWin())) { flagField(x, y, (!(isFlaged(x, y)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8655/buggy-version/src.main.java.sapper.Board.java", "BodyUseAPI": [], "Fixed commit": "8621f403aebfabb3fa4ab1283b948a37e55b946e", "Url": "https://api.github.com/repos/wszib-kolo/sapper", "Date": "2013-12-06T14:55:28Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lastURLFormatOffset != (urlFormat.length())) url.append(urlFormat.substring(lastURLFormatOffset, urlFormat.length()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3579/buggy-version/util-common.src.main.java.net.link.util.util.CodeUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "8a309e1283895b3c8ad148f7a1bed85db015b024", "Url": "https://api.github.com/repos/link-nv/util", "Date": "2014-04-30T14:44:52Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((logMediator.getLogSeparator()) != null) { logSeparatorText.setText(logMediator.getLogSeparator()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5894/buggy-version/esb.org.wso2.developerstudio.eclipse.gmf.esb.diagram.src.org.wso2.developerstudio.eclipse.gmf.esb.diagram.custom.configure.ui.ConfigureLogMediatorDialog.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Text.setText(logMediator.getLogSeparator())", "org.wso2.developerstudio.eclipse.gmf.esb.LogMediator.getLogSeparator()"], "Fixed commit": "7ae1a41cf1b87ba7b5f35bbf4046c412167b3f65", "Url": "https://api.github.com/repos/lsdeva/developer-studio", "Date": "2014-05-08T04:51:52Z"},
{"Line": "=>2852", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.ex.chips.RecipientEditTextView.tokenizeAddress(temp.getEntry().getDestination())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(android.text.TextUtils.isEmpty(address))) { final com.android.ex.chips.RecipientEntry entry = createValidatedEntry(entries.get(address.toLowerCase())); if (entry != null) { mHandler.post(new java.lang.Runnable() { @java.lang.Override public void run() { replaceChip(temp, entry); } }); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7862/buggy-version/src.com.android.ex.chips.RecipientEditTextView.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.android.ex.chips.RecipientEntry>.get(java.lang.String)", "java.lang.String.toLowerCase()", "com.android.ex.chips.RecipientEditTextView.IndividualReplacementTask.1.createValidatedEntry(entries.get(address.toLowerCase()))"], "Fixed commit": "5879bf6820d5a53e51ea124803dc4c239b6d37b4", "Url": "https://api.github.com/repos/DirtyUnicorns/android_frameworks_opt_chips", "Date": "2015-02-03T23:25:46Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataSnapshot.child(\"firstuser\").getValue()) == null) { firstPos = 0; queueRef.child(\"firstuser\").setValue(firstPos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8051/buggy-version/app.src.main.java.com.decode.qme.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "618c6392baa3e928ed36893b3c932fe5b5501a67", "Url": "https://api.github.com/repos/jatin-jt/qMe", "Date": "2016-12-29T13:39:08Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((chars.getHeader()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/400/buggy-version/src.linus.io.config.ConfigWriter.java", "BodyUseAPI": [], "Fixed commit": "4ed745878f44ac43e468542f0e787ed1f8b0b06d", "Url": "https://api.github.com/repos/Steinschnueffler/Config-IO", "Date": "2017-10-27T13:31:30Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (source == null) source = java.lang.System.out;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/400/buggy-version/src.linus.io.config.ConfigWriter.java", "BodyUseAPI": [], "Fixed commit": "4ed745878f44ac43e468542f0e787ed1f8b0b06d", "Url": "https://api.github.com/repos/Steinschnueffler/Config-IO", "Date": "2017-10-27T13:31:30Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (info == null) info = \"null\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/400/buggy-version/src.linus.io.config.ConfigWriter.java", "BodyUseAPI": [], "Fixed commit": "4ed745878f44ac43e468542f0e787ed1f8b0b06d", "Url": "https://api.github.com/repos/Steinschnueffler/Config-IO", "Date": "2017-10-27T13:31:30Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e.equals(GameStatus.STARTED)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8925/buggy-version/HtwgMonopoly.src.de.htwg.monopoly.view.GraphicUserInterface.java", "BodyUseAPI": [], "Fixed commit": "47935b4364699785dd410ed09e3e7d59a839d3e4", "Url": "https://api.github.com/repos/T1m1/de.htwg.se.monopoly", "Date": "2015-05-30T12:29:12Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (stackNameOrId != null) { criteria.add(org.hibernate.criterion.Restrictions.or(org.hibernate.criterion.Restrictions.and(org.hibernate.criterion.Restrictions.eq(\"recordDeleted\", java.lang.Boolean.FALSE), org.hibernate.criterion.Restrictions.eq(\"stackName\", stackNameOrId)), org.hibernate.criterion.Restrictions.eq(\"stackId\", stackNameOrId))); }else { criteria.add(org.hibernate.criterion.Restrictions.eq(\"recordDeleted\", java.lang.Boolean.FALSE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4365/buggy-version/clc.modules.cloudformation.src.main.java.com.eucalyptus.cloudformation.entity.StackEntityManager.java", "BodyUseAPI": ["org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.and(org.hibernate.criterion.Restrictions.eq(\"recordDeleted\", java.lang.Boolean.FALSE),org.hibernate.criterion.Restrictions.eq(\"stackName\", stackNameOrId))", "org.hibernate.criterion.Restrictions.or(org.hibernate.criterion.Restrictions.and(org.hibernate.criterion.Restrictions.eq(\"recordDeleted\", java.lang.Boolean.FALSE), org.hibernate.criterion.Restrictions.eq(\"stackName\", stackNameOrId)),org.hibernate.criterion.Restrictions.eq(\"stackId\", stackNameOrId))", "org.hibernate.Criteria.add(org.hibernate.criterion.Restrictions.or(org.hibernate.criterion.Restrictions.and(org.hibernate.criterion.Restrictions.eq(\"recordDeleted\", java.lang.Boolean.FALSE), org.hibernate.criterion.Restrictions.eq(\"stackName\", stackNameOrId)), org.hibernate.criterion.Restrictions.eq(\"stackId\", stackNameOrId)))"], "Fixed commit": "c2d43126aaded6e175d96280d7b63c38840b829c", "Url": "https://api.github.com/repos/sjones4/eucalyptus", "Date": "2014-04-08T20:52:52Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (toRemovePlayer != null) { model.Player.removeUserFromSession(toRemovePlayer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7659/buggy-version/zagar_server.src.main.java.network.handlers.PacketHandlerAuth.java", "BodyUseAPI": [], "Fixed commit": "292fb9dc5af40946c2241f2fd1309116462cf23b", "Url": "https://api.github.com/repos/danicheg/atom-jAgar", "Date": "2016-12-18T13:26:26Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(urlSet.contains(request.getUrl()))) { list.add(request); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8251/buggy-version/webmagic-extension.src.main.java.us.codecraft.webmagic.scheduler.StackScheduler.java", "BodyUseAPI": ["java.util.List<us.codecraft.webmagic.Request>.add(us.codecraft.webmagic.Request)"], "Fixed commit": "cc22c5dd7aa899735b6ef26a7a02f089799d2c62", "Url": "https://api.github.com/repos/shengcanxu/webmagic", "Date": "2015-02-28T05:54:36Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.hsos.mad.clique.activities.LoginActivity.findViewById(R.id.loginPassword)", "de.hsos.mad.clique.activities.LoginActivity.findViewById(R.id.loginEmail)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(email.getText().toString().isEmpty())) && (!(pw.getText().toString().isEmpty()))) { de.hsos.mad.clique.controller.UserController.getInstance().login(email.getText().toString(), pw.getText().toString(), this); }else { android.widget.Toast.makeText(this.getApplicationContext(), \"Unvollst\u00e4ndige Eingabe..\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/9023/buggy-version/app.src.main.java.de.hsos.mad.clique.activities.LoginActivity.java", "BodyUseAPI": ["android.widget.TextView.getText()", "android.widget.TextView.getText()", "pw.getText().toString()", "de.hsos.mad.clique.controller.UserController.getInstance().login(email.getText().toString(),pw.getText().toString(),de.hsos.mad.clique.activities.LoginActivity)", "email.getText().toString()"], "Fixed commit": "953e834265a2a5f2943e977368554802fe10db30", "Url": "https://api.github.com/repos/DaHerzog/Clique", "Date": "2016-08-30T10:44:07Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (intent == null) { android.util.Log.i(nodomain.freeyourgadget.gadgetbridge.BluetoothCommunicationService.TAG, \"no intent\"); return START_NOT_STICKY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3570/buggy-version/app.src.main.java.nodomain.freeyourgadget.gadgetbridge.BluetoothCommunicationService.java", "BodyUseAPI": [], "Fixed commit": "74f2b8c1c2c8c5363cbd597ef7af31770bc6c1dd", "Url": "https://api.github.com/repos/danielegobbetti/Gadgetbridge", "Date": "2015-04-03T20:39:25Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getSelf().check(Attribute.Cunning, difficulty)) { if (getSelf().human()) { if (getSelf().hasStatus(Stsflag.cockbound)) { c.write(getSelf(), ((\"You somehow managed to wiggle out of \" + (target.name())) + \"'s iron grip on your dick.\")); getSelf().removeStatus(Stsflag.cockbound); return true; } c.write(getSelf(), ((\"Your quick wits find a gap in \" + (target.name())) + \"'s hold and you slip away.\")); }else if (c.shouldPrintReceive(target)) { if (getSelf().hasStatus(Stsflag.cockbound)) { c.write(getSelf(), java.lang.String.format(\"%s somehow managed to wiggle out of %s iron grip on %s dick.\", getSelf().pronoun(), target.nameOrPossessivePronoun(), getSelf().possessivePronoun())); getSelf().removeStatus(Stsflag.cockbound); return true; } c.write(getSelf(), java.lang.String.format((\"%s goes limp and %s the opportunity to adjust %s grip on %s\" + (\". As soon as %s %s, %s bolts out of %s weakened hold. \" + \"It was a trick!\")), getSelf().name(), target.subjectAction(\"take\"), target.possessivePronoun(), getSelf().directObject(), target.pronoun(), target.action(\"move\"), getSelf().pronoun(), target.possessivePronoun())); } c.setStance(new nightgames.stance.Neutral(getSelf(), target)); }else { if (getSelf().human()) { if (getSelf().hasStatus(Stsflag.cockbound)) { c.write(getSelf(), ((\"You try to escape \" + (target.name())) + \"'s iron grip on your dick. However, her pussy tongue has other ideas. She runs her tongue up and down your cock and leaves you gasping with pleasure.\")); int m = 8; getSelf().body.pleasure(target, target.body.getRandom(\"pussy\"), getSelf().body.getRandom(\"cock\"), m, c, this); }else if (getSelf().crotchAvailable()) { c.write(getSelf(), ((\"You try to take advantage of an opening in \" + (target.name())) + \"'s stance to slip away, but she catches you by your protruding penis and reasserts her position.\")); }else { c.write(getSelf(), ((\"You think you see an opening in \" + (target.name())) + \"'s stance, but she corrects it before you can take advantage.\")); } }else if (c.shouldPrintReceive(target)) { c.write(getSelf(), java.lang.String.format((\"%s manages to slip out of %s grip for a moment, but %s %s %s \" + \"before %s can get far and %s control.\"), getSelf().name(), target.nameOrPossessivePronoun(), target.pronoun(), target.action(\"tickle\"), getSelf().directObject(), getSelf().pronoun(), getSelf().action(\"regain\"))); } getSelf().struggle(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2545/buggy-version/NightgamesMod.nightgames.skills.Escape.java", "BodyUseAPI": [], "Fixed commit": "a2397c625717d184ae80af9fa360b518b4454e3e", "Url": "https://api.github.com/repos/logosK/nightgamesmod", "Date": "2016-11-06T14:52:21Z"},
{"Line": "=>622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (mSecondaryMenu)) { getHitRect(rect); rect.left = (rect.right) - (mEdgeSlideWidth); result |= rect.contains(((int) (x)), ((int) (y))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3991/buggy-version/SlideMenu.src.com.aretha.slidemenu.SlideMenu.java", "BodyUseAPI": [], "Fixed commit": "62d79bf6ef78ba51c3e782ffea04f3cbbb653d56", "Url": "https://api.github.com/repos/TangKe/SlideMenu", "Date": "2013-11-13T10:00:31Z"},
{"Line": "=>616", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (mPrimaryMenu)) { getHitRect(rect); rect.right = mEdgeSlideWidth; result |= rect.contains(((int) (x)), ((int) (y))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3991/buggy-version/SlideMenu.src.com.aretha.slidemenu.SlideMenu.java", "BodyUseAPI": [], "Fixed commit": "62d79bf6ef78ba51c3e782ffea04f3cbbb653d56", "Url": "https://api.github.com/repos/TangKe/SlideMenu", "Date": "2013-11-13T10:00:31Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((s.length()) % 2) != 0) s = \"0\" + s;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2403/buggy-version/src.Util.java", "BodyUseAPI": [], "Fixed commit": "dc4d6ba4b0c4b82a3c648336d5c425d7c07d40c6", "Url": "https://api.github.com/repos/Zeohye/IdPUProve", "Date": "2014-11-26T06:08:59Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stateData.trip) != null) { return stateData.trip.getId(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3638/buggy-version/opentripplanner-routing.src.main.java.org.opentripplanner.routing.core.State.java", "BodyUseAPI": ["stateData.trip.getId()"], "Fixed commit": "3feb58e5313a523520d1da91f5ae5577797777c7", "Url": "https://api.github.com/repos/jkoelewijn/OpenTripPlanner", "Date": "2013-06-21T07:48:40Z"},
{"Line": "=>740", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((roles.size()) == 0) { roles.add(Constants.NO_ROLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5852/buggy-version/src.com.gitblit.ConfigUserService.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(Constants.NO_ROLE)"], "Fixed commit": "ce2a408256dcd81690f812dee95b0797e8880824", "Url": "https://api.github.com/repos/delight/gitblit", "Date": "2012-07-11T21:07:46Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((email.length()) == 0) { tilEmail.setError(\"Field cannot be blank\"); isValid = false; }else if (!emailBool) { tilEmail.setError(\"Enter a valid Email Address\"); isValid = false; }else { tilEmail.setErrorEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8503/buggy-version/app.src.main.java.com.example.seetharaman.trial.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c00252708bc454b11e7e18a74449e82dbf24a1aa", "Url": "https://api.github.com/repos/SeetharamanSubramanian/Trial", "Date": "2016-06-07T15:33:43Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.indoona.openplatform.sdk.model.ConnectedUser.fromJson(com.indoona.openplatform.sdk.provider.ProviderLocator.getInstance().getApiProvider().invokeMeApi(token))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((com.googlecode.objectify.ObjectifyService.ofy().load().type(com.gmr.indoona.model.User.class).filter(\"userId\", cusr.getUserId()).first().now()) == null) { usr = new com.gmr.indoona.model.User(token.getUserId(), token.getToken(), token.getRefreshToken(), token.toJson(), cusr.getName(), cusr.getSurname(), cusr.getMsisdn()); com.googlecode.objectify.ObjectifyService.ofy().save().entity(usr).now(); }else { usr = com.googlecode.objectify.ObjectifyService.ofy().load().type(com.gmr.indoona.model.User.class).filter(\"userId\", cusr.getUserId()).first().now(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8945/buggy-version/gmr.src.main.java.com.gmr.indoona.model.User.java", "BodyUseAPI": ["com.googlecode.objectify.ObjectifyService.ofy().load().type(java.lang.Class)", "com.indoona.openplatform.sdk.model.ConnectedUser.getName()", "com.indoona.openplatform.sdk.model.ConnectedUser.getUserId()", "com.indoona.openplatform.sdk.model.ConnectedUser.getSurname()", "com.googlecode.objectify.ObjectifyService.ofy().load().type(com.gmr.indoona.model.User.class).filter(java.lang.String,cusr.getUserId())", "com.googlecode.objectify.ObjectifyService.ofy().load().type(com.gmr.indoona.model.User.class).filter(\"userId\", cusr.getUserId()).first()", "com.googlecode.objectify.ObjectifyService.ofy().load().type(com.gmr.indoona.model.User.class).filter(\"userId\", cusr.getUserId()).first().now()", "com.indoona.openplatform.sdk.model.ConnectedUser.getMsisdn()"], "Fixed commit": "08b39b8169803161c518c4e2fea9e3c294547472", "Url": "https://api.github.com/repos/ricsirigu/gmr-indoona", "Date": "2015-11-18T16:16:57Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dev.kkorolyov.sqlob.statement.StatementCommand.getParameters()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (parameters != null) { for (dev.kkorolyov.sqlob.construct.RowEntry parameter : parameters) result = result.replaceFirst(dev.kkorolyov.sqlob.statement.StatementCommand.PARAMETER_MARKER, parameter.getValue().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3726/buggy-version/src.dev.kkorolyov.sqlob.statement.StatementCommand.java", "BodyUseAPI": [], "Fixed commit": "062dcf71988a6004c477d2d5db14f7bde6d8eacd", "Url": "https://api.github.com/repos/kkorolyov/SQLOb", "Date": "2016-08-03T10:28:53Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mediaPlayer) != null) { pausedTime = mediaPlayer.getCurrentPosition(); mediaPlayer.pause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2855/buggy-version/app.src.main.java.com.neosinan.cspr.cerkezce.NumbersActivity.java", "BodyUseAPI": [], "Fixed commit": "13f05010eb9f598cc076a604b14c87ce379550cb", "Url": "https://api.github.com/repos/neosinan/Cerkesce", "Date": "2017-10-14T21:57:00Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraft.item.Item.getItemFromBlock(block)) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2218/buggy-version/src.main.java.forestry.core.utils.BlockUtil.java", "BodyUseAPI": [], "Fixed commit": "a401995e7e617c7d28599eadb40b3b39b727721d", "Url": "https://api.github.com/repos/ForestryMC/ForestryMC", "Date": "2016-03-31T22:28:31Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canMove) { canMove = false; location = Model.Location.newLocation(degrees, location); location.setDir(degrees); registerTile(location); alert(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7540/buggy-version/src.Model.GameObject.MobileObjects.MobileObject.java", "BodyUseAPI": [], "Fixed commit": "cc6ac0e1a2f471a17627815dcce0890d587ad942", "Url": "https://api.github.com/repos/IronicCats/Iteration2", "Date": "2016-03-09T04:30:00Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ardublock.translator.block.SerialPrintlnBlock.getTranslatorBlockAtSocket(int,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (translatorBlock != null) { ret = translatorBlock.toCode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2648/buggy-version/src.main.java.com.ardublock.translator.block.SerialPrintlnBlock.java", "BodyUseAPI": ["com.ardublock.translator.block.TranslatorBlock.toCode()"], "Fixed commit": "f6dde35f80a5218845a76af9917c46a1e97f86d5", "Url": "https://api.github.com/repos/TonyCallear/ardublock", "Date": "2014-07-04T15:03:06Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controller.getStackInSlot(slot).copy()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((drop.getItem()) instanceof net.minecraft.item.ItemBlock) { drop.setItemDamage(((net.minecraft.item.ItemBlock) (drop.getItem())).getMetadata(drop.getItemDamage())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/909/buggy-version/src.main.java.me.dmillerw.storage.block.tile.TileItemBlock.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.getItem()", "net.minecraft.item.ItemStack.setItemDamage(((net.minecraft.item.ItemBlock) (drop.getItem())).getMetadata(drop.getItemDamage()))", "net.minecraft.item.ItemStack.getItemDamage()", "((net.minecraft.item.ItemBlock) (drop.getItem())).getMetadata(drop.getItemDamage())"], "Fixed commit": "c67876bd973c35979568db1b1a742584dfdaf2bf", "Url": "https://api.github.com/repos/dmillerw/Impractical-Storage", "Date": "2017-04-08T01:39:54Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (distanceY > 0) { speedY = (((character.getDefaultSpeed()) * ((int) (java.lang.Math.signum(distanceY)))) / 2) + ((int) (application.component.system.GameEnvironment.getGravity())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3904/buggy-version/src.application.component.system.character.controller.Enemy.java", "BodyUseAPI": ["java.lang.Math.signum(int)"], "Fixed commit": "fe4e65c3acd47c0651442675fea465e091eb8fe3", "Url": "https://api.github.com/repos/morivden/InfoEnvExpr2JavaGame", "Date": "2017-11-20T11:05:16Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((projection.epsgCode) == 0) { if (isLocalsystem) projection.epsgCode = projection.getEpsgcode(epsg_localsystem); else projection.epsgCode = epsg_localsystem; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6018/buggy-version/src.CacheWolf.navi.ProjectedPoint.java", "BodyUseAPI": [], "Fixed commit": "af95540e3e432d9668fc6c22a033c73466994855", "Url": "https://api.github.com/repos/cachewolf/cachewolf", "Date": "2012-04-01T17:06:51Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((sortfield != null) && ((sortfield.length()) > 0)) && ((order == null) || ((order.length()) == 0))) order = uk.ac.ebi.ddi.ebe.ws.dao.utils.Constans.ASCENDING;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/602/buggy-version/src.main.java.uk.ac.ebi.ddi.ebe.ws.dao.client.dataset.DatasetWsClient.java", "BodyUseAPI": [], "Fixed commit": "3e03c1f3f6fd326f8cdb78e814ce6a8da4abe281", "Url": "https://api.github.com/repos/OmicsDI/ddi-ebeye-ws-dao", "Date": "2015-05-22T14:46:46Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.fluids.FluidTank.getFluidAmount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (prevAmount != (tank2.getFluidAmount())) update = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6639/buggy-version/src.main.java.blusunrize.immersiveengineering.common.blocks.metal.TileEntityRefinery.java", "BodyUseAPI": [], "Fixed commit": "96971650ee79d977ea476c68f282202d52fa0bb2", "Url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering", "Date": "2015-10-29T10:24:09Z"},
{"Line": "=>571", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.fluids.FluidTank.getFluidAmount()", "net.minecraft.item.ItemStack.getItem()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((available >= space) && ((iContainer.fill(containerIn, tank.getFluid(), false)) == space)) { net.minecraft.item.ItemStack filledContainer = blusunrize.immersiveengineering.common.util.Utils.copyStackWithAmount(containerIn, 1); int filled = iContainer.fill(filledContainer, tank.getFluid(), true); if ((containerOut == null) || ((net.minecraftforge.oredict.OreDictionary.itemMatches(containerOut, filledContainer, true)) && (net.minecraft.item.ItemStack.areItemStackTagsEqual(filledContainer, containerOut)))) { tank.drain(filled, true); return filledContainer; } }else { if ((containerIn.stackSize) == 1) { int filled = iContainer.fill(containerIn, tank.getFluid(), true); tank.drain(filled, true); }else { net.minecraft.item.ItemStack filledContainer = blusunrize.immersiveengineering.common.util.Utils.copyStackWithAmount(containerIn, 1); int filled = iContainer.fill(filledContainer, tank.getFluid(), true); if ((containerOut == null) || (((net.minecraftforge.oredict.OreDictionary.itemMatches(containerOut, filledContainer, true)) && (net.minecraft.item.ItemStack.areItemStackTagsEqual(filledContainer, containerOut))) && (((containerOut.stackSize) + 1) < (containerOut.getMaxStackSize())))) { tank.drain(filled, true); return filledContainer; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6639/buggy-version/src.main.java.blusunrize.immersiveengineering.common.util.Utils.java", "BodyUseAPI": ["blusunrize.immersiveengineering.common.util.Utils.copyStackWithAmount(net.minecraft.item.ItemStack,int)", "net.minecraftforge.fluids.FluidTank.drain(int,boolean)", "net.minecraftforge.fluids.FluidTank.drain(int,boolean)", "net.minecraftforge.fluids.FluidTank.getFluid()", "net.minecraftforge.fluids.FluidTank.drain(int,boolean)", "net.minecraftforge.fluids.IFluidContainerItem.fill(net.minecraft.item.ItemStack,tank.getFluid(),boolean)", "net.minecraftforge.fluids.IFluidContainerItem.fill(net.minecraft.item.ItemStack,tank.getFluid(),boolean)", "net.minecraftforge.fluids.FluidTank.getFluid()", "net.minecraftforge.fluids.FluidTank.getFluid()", "blusunrize.immersiveengineering.common.util.Utils.copyStackWithAmount(net.minecraft.item.ItemStack,int)", "net.minecraftforge.fluids.IFluidContainerItem.fill(net.minecraft.item.ItemStack,tank.getFluid(),boolean)"], "Fixed commit": "96971650ee79d977ea476c68f282202d52fa0bb2", "Url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering", "Date": "2015-10-29T10:24:09Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tokens.length) > 1) { doSettings(tokens[1]); }else { doSettings(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/9046/buggy-version/FitnessUA.src.ua.nure.ostpc.malibu.shedule.client.ScheduleManagerEntryPoint.java", "BodyUseAPI": ["ua.nure.ostpc.malibu.shedule.client.ScheduleManagerEntryPoint.doSettings(java.lang.String)"], "Fixed commit": "c494202c231d7e908a0bbcf40ff3031c665bbda1", "Url": "https://api.github.com/repos/engsyst/ftua", "Date": "2015-03-03T16:33:37Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((config.getConfig().getBoolean((\"General.\" + (\"Clans\" + \".Enabled\")))) == true) { sender.sendMessage(((((((net.md_5.bungee.api.ChatColor.DARK_GRAY) + \"You are currently in the \") + (net.md_5.bungee.api.ChatColor.GOLD)) + (data.getConfig().getString(((\"Players.\" + playerName) + \".Clan\")))) + (net.md_5.bungee.api.ChatColor.DARK_GRAY)) + \" clan.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/327/buggy-version/SuperNaturalPlayers.src.com.weeryan17.snp.Commands.ClassCommand.java", "BodyUseAPI": [], "Fixed commit": "3a563fcfd29cfbe51fda10bb5b75954814504f09", "Url": "https://api.github.com/repos/weeryan17/SuperNaturalPlayers", "Date": "2015-10-10T04:31:34Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Integer.TYPE.equals(param)) { mv.visitVarInsn(org.xmlbeam.util.intern.ILOAD, (c++)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6145/buggy-version/src.main.java.org.xmlbeam.util.intern.ASMHelper.java", "BodyUseAPI": [], "Fixed commit": "3f7fd493fedfa84b28c509c50fd596cc09a84ae7", "Url": "https://api.github.com/repos/SvenEwald/xmlbeam", "Date": "2014-03-25T16:01:03Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.reunionemu.jreunion.server.World.getCommand()", "java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (com.createChar(client, slot, message[2], race, sex, java.lang.Integer.parseInt(message[5]), java.lang.Integer.parseInt(message[6]), java.lang.Integer.parseInt(message[7]), java.lang.Integer.parseInt(message[8]), java.lang.Integer.parseInt(message[9]), java.lang.Integer.parseInt(message[10]))) { com.sendSuccess(client); }else { client.sendPacket(Type.FAIL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/745/buggy-version/jreunion.src.main.java.org.reunionemu.jreunion.server.PacketParser.java", "BodyUseAPI": ["org.reunionemu.jreunion.server.Client.sendPacket(Type.FAIL)", "org.reunionemu.jreunion.server.Command.sendSuccess(org.reunionemu.jreunion.server.Client)"], "Fixed commit": "2d2094c6aafa7c51fcacfeda5605bc39e1418d36", "Url": "https://api.github.com/repos/ReunionDev/reunion", "Date": "2012-11-09T08:36:58Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (super.getApplication().getModel().getLevel().isRemoveMoveSelected()) { g.drawImage(this.selectedImage, ((this.removeTileButton.getX()) - 3), ((this.removeTileButton.getY()) - 3), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6754/buggy-version/src.hackstreet.sixeswild.gui.game.ActiveGameScreen.java", "BodyUseAPI": [], "Fixed commit": "8e25732cdfc72f39ec8c0d4e4e3d13cc6c6af6c0", "Url": "https://api.github.com/repos/HackStreetBoys/SixesWild", "Date": "2015-05-05T06:43:16Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (super.getApplication().getModel().getLevel().isSwapMoveSelected()) { g.drawImage(this.selectedImage, ((this.switchTilesButton.getX()) - 3), ((this.switchTilesButton.getY()) - 3), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6754/buggy-version/src.hackstreet.sixeswild.gui.game.ActiveGameScreen.java", "BodyUseAPI": [], "Fixed commit": "8e25732cdfc72f39ec8c0d4e4e3d13cc6c6af6c0", "Url": "https://api.github.com/repos/HackStreetBoys/SixesWild", "Date": "2015-05-05T06:43:16Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((ts.transmisson.longValue()) < (us.dot.its.jpo.ode.plugin.j2735.oss.OssTransmissionAndSpeed.TRANSMISSION_LOWER_BOUND)) || ((ts.transmisson.longValue()) > (us.dot.its.jpo.ode.plugin.j2735.oss.OssTransmissionAndSpeed.TRANSMISSION_UPPER_BOUND))) { throw new java.lang.IllegalArgumentException(\"Transmission value out of bounds [0..7]\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/838/buggy-version/jpo-ode-plugins.src.main.java.us.dot.its.jpo.ode.plugin.j2735.oss.OssTransmissionAndSpeed.java", "BodyUseAPI": [], "Fixed commit": "f920a83be0821bbf360deb57d325b5288cffd486", "Url": "https://api.github.com/repos/usdot-jpo-ode/jpo-ode", "Date": "2016-12-20T19:20:45Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mytown.commands.CommandsAssistant.getTownFromResident(mytown.entities.Resident)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (town.isPointInTown(player.dimension, ((int) (player.posX)), ((int) (player.posZ)))) throw new mytown.util.exceptions.MyTownCommandException(getLocal().getLocalization(\"mytown.cmd.err.setspawn.notintown\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7173/buggy-version/src.main.java.mytown.commands.CommandsAssistant.java", "BodyUseAPI": [], "Fixed commit": "7e378a1991024e0cb9743db19879f91f21e60980", "Url": "https://api.github.com/repos/MyEssentials/MyTown2", "Date": "2014-11-17T12:38:31Z"},
{"Line": "=>1745", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)", "java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (y1 == y2) { return (to.get(java.util.Calendar.DAY_OF_YEAR)) - (from.get(java.util.Calendar.DAY_OF_YEAR)); }else { int result = 0; java.util.Calendar fromClone = ((java.util.Calendar) (from.clone())); while ((fromClone.get(java.util.Calendar.YEAR)) != y2) { int dayOfYear = fromClone.get(java.util.Calendar.DAY_OF_YEAR); fromClone.set(java.util.Calendar.MONTH, 11); fromClone.set(java.util.Calendar.DAY_OF_MONTH, 31); result += (fromClone.get(java.util.Calendar.DAY_OF_YEAR)) - dayOfYear; fromClone.add(java.util.Calendar.DATE, 1); result++; } result += (to.get(java.util.Calendar.DAY_OF_YEAR)) - (fromClone.get(java.util.Calendar.DAY_OF_YEAR)); return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1626/buggy-version/plugins.org.activitymgr.core.src.org.activitymgr.core.ModelMgr.java", "BodyUseAPI": [], "Fixed commit": "fb052cf8eb36ea36ede7aa704d485ab61836d342", "Url": "https://api.github.com/repos/jfbrazeau/Activity-Manager", "Date": "2013-01-23T21:04:04Z"},
{"Line": "=>1738", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date1.after(date2)) { from = date2; to = date1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1626/buggy-version/plugins.org.activitymgr.core.src.org.activitymgr.core.ModelMgr.java", "BodyUseAPI": [], "Fixed commit": "fb052cf8eb36ea36ede7aa704d485ab61836d342", "Url": "https://api.github.com/repos/jfbrazeau/Activity-Manager", "Date": "2013-01-23T21:04:04Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (estimatedMeanSize < 1) { estimatedMeanSize = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/38/buggy-version/src.dna.graph.datastructures.GraphDataStructure.java", "BodyUseAPI": [], "Fixed commit": "c4da48d668c9d9632f380901e519c4b2aa0b3055", "Url": "https://api.github.com/repos/NicoHaase/DNA", "Date": "2014-04-13T11:45:45Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (dept_pk != null) { if (!(this.restrictions.canAccessDepartment(dept_pk))) { throw new javax.ws.rs.ForbiddenException(); } query.addConditions(SITES.SITE_DEPT_FK.eq(dept_pk)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8243/buggy-version/src.main.java.org.ccjmne.faomaintenance.api.rest.ResourcesEndpoint.java", "BodyUseAPI": ["org.jooq.SelectQuery<org.jooq.Record>.addConditions(SITES.SITE_DEPT_FK.eq(dept_pk))", "org.ccjmne.faomaintenance.api.modules.Restrictions.canAccessDepartment(java.lang.Integer)", "SITES.SITE_DEPT_FK.eq(java.lang.Integer)"], "Fixed commit": "874dd1579bae49398b789d2f4ccef64636100d24", "Url": "https://api.github.com/repos/ccjmne/orca-api", "Date": "2017-01-09T16:00:25Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isPingTaskStarted())) startPingTask();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3325/buggy-version/src.main.java.org.jitsi.jicofo.xmpp.FocusComponent.java", "BodyUseAPI": [], "Fixed commit": "e303e19450501925a6444cf2e747239355bcd249", "Url": "https://api.github.com/repos/jitsi/jicofo", "Date": "2015-10-15T20:54:54Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBleScanner) != null) { mBleScanner.stopScan(mScanCallback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7590/buggy-version/dConnectDevicePlugin.dConnectDeviceHeartRate.app.src.main.java.org.deviceconnect.android.deviceplugin.heartrate.ble.adapter.NewBleDeviceAdapterImpl.java", "BodyUseAPI": [], "Fixed commit": "be7bf550fa2bb887225f1e8c76bc6bc4cbd542f6", "Url": "https://api.github.com/repos/TakayukiHoshi1984/DeviceConnect-Android", "Date": "2015-10-09T06:47:15Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (holder1.root.isOpen()) { holder1.root.clearAnimation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8753/buggy-version/app.src.main.java.com.me.swipeitemrecycler.MyAdapter.java", "BodyUseAPI": ["com.me.swipeitemrecycler.SwipeLayout.clearAnimation()"], "Fixed commit": "97b2fc5029055a8562dae8af23251de1e249e1c5", "Url": "https://api.github.com/repos/jiangzhenguo/SwipeItemRecycler", "Date": "2017-02-04T10:15:12Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.graphics.drawable.VectorDrawableCompat.create(box.getContext().getResources(),R.drawable.abc_btn_check_material,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (checkDrawable == null) { checkDrawable = android.support.v4.content.ContextCompat.getDrawable(box.getContext(), R.drawable.abc_btn_check_material); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2833/buggy-version/core.src.main.java.com.afollestad.materialdialogs.internal.MDTintHelper.java", "BodyUseAPI": [], "Fixed commit": "a6c0591e5cf78f54c725e6e57bf36494b3cf145e", "Url": "https://api.github.com/repos/mariotaku/material-dialogs", "Date": "2016-03-17T06:45:04Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Math.abs(filter.dV)) > 180) { offset -= (java.lang.Math.signum(filter.dV)) * 360; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/23/buggy-version/YourCodeHere.src.main.java.org.usfirst.ftc.exampleteam.yourcodehere.MasterAutonomous.java", "BodyUseAPI": ["java.lang.Math.signum(filter.dV)"], "Fixed commit": "af1277f459818b6742c87487ad4511811cf06a57", "Url": "https://api.github.com/repos/mridulavenkatesan/ftc_app", "Date": "2016-01-10T00:53:42Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bang) { throw new siteswapsuite.InvalidSiteswapNotationException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7109/buggy-version/src.notation.NotatedSiteswap.java", "BodyUseAPI": [], "Fixed commit": "3dc8e78eefbef0a70edb20172b1ad11619f69b66", "Url": "https://api.github.com/repos/fictionic/SiteswapSuite", "Date": "2017-12-13T23:12:00Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((args != null) && ((args.length) > 0)) && ((args[0]) != null)) && (!((args[0]) instanceof java.lang.Integer))) { numTriples = ((java.lang.Integer) (args[0])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8481/buggy-version/src.main.java.eu.diachron.qualitymetrics.intrinsic.conciseness.ExtensionalConcisenessBloom.java", "BodyUseAPI": [], "Fixed commit": "784656fcc660d6f843252dca8964d4c5314cc9d1", "Url": "https://api.github.com/repos/diachron/quality", "Date": "2014-11-04T13:31:44Z"},
{"Line": "=>873", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.TreeMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (next != null) { java.lang.String[] nextc = next.split(\":\"); state = nextc[0]; s.append(nextc[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3754/buggy-version/src.db.SQLRunner.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "d57f201e39e66f80350eeac6a368d27d12919470", "Url": "https://api.github.com/repos/profphreak/sqlrunner", "Date": "2014-05-08T03:55:46Z"},
{"Line": "=>1004", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((io.github.yannici.bedwars.Main.getInstance().isHologramsEnabled()) && ((io.github.yannici.bedwars.Main.getInstance().getHolographicInteractor()) != null)) { io.github.yannici.bedwars.Main.getInstance().getHolographicInteractor().unloadAllHolograms(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1040/buggy-version/src.io.github.yannici.bedwars.Listener.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "550d0d6e765c982460cd82ca02ee12c437494221", "Url": "https://api.github.com/repos/Block-Build/bedwars-reloaded", "Date": "2015-11-03T14:28:21Z"},
{"Line": "=>1076", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.getResultState().equals(EventResult.EventQCResultState.NOT_RUN)) && (verbatimEventDate.matches(\"^[0-9]{4}-[0-9]{2}/[0-9]{4}-[0-9]{2}$\"))) { try { org.joda.time.Interval parseDate = org.joda.time.Interval.parse(verbatimEventDate); org.filteredpush.qc.date.DateUtils.logger.debug(parseDate); resultDate = ((parseDate.getStart().toString(\"yyyy-MM\")) + \"/\") + (parseDate.getEnd().toString(\"yyyy-MM\")); result.setResultState(EventResult.EventQCResultState.RANGE); result.setResult(resultDate); } catch (java.lang.Exception e) { org.filteredpush.qc.date.DateUtils.logger.debug(e.getMessage()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4960/buggy-version/src.main.java.org.filteredpush.qc.date.DateUtils.java", "BodyUseAPI": ["org.filteredpush.qc.date.EventResult.setResult(java.lang.String)", "org.filteredpush.qc.date.EventResult.setResultState(EventResult.EventQCResultState.RANGE)", "org.joda.time.Interval.parse(java.lang.String)"], "Fixed commit": "c6727688f44ec30cde556d348118a05bf1d71f83", "Url": "https://api.github.com/repos/FilteredPush/event_date_qc", "Date": "2017-02-17T21:26:22Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentException) != null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2525/buggy-version/cascading-core.src.main.java.cascading.tuple.TupleEntrySchemeIterator.java", "BodyUseAPI": [], "Fixed commit": "3a61ef50d796b22b9d344540c0809f4f406bff6b", "Url": "https://api.github.com/repos/cchepelov/cascading", "Date": "2014-11-28T21:34:57Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.app) != null) { drawDetails(this.app); }else { java.lang.System.out.println(\"App not retrieved\"); finishActivity(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4421/buggy-version/app.src.main.java.com.github.yeriomin.yalpstore.DetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "14e4e5c0f70385446896fd16e7d9adbc2749d627", "Url": "https://api.github.com/repos/yeriomin/YalpStore", "Date": "2016-12-14T15:43:30Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((total) != 0) { d = ((double) (correct)) / ((double) (total)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8317/buggy-version/android.src.com.fourpool.mathdash.android.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "4abb75a6c232b303150adb2fd013925465b04ae5", "Url": "https://api.github.com/repos/matthewmichihara/mathdash-android", "Date": "2012-10-17T22:23:45Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (line == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7857/buggy-version/src.thobe.logfileviewer.kernel.source.IpLogStreamReader.java", "BodyUseAPI": [], "Fixed commit": "94c06b9e8d4528ba4c4da9b2c61c15186ae86624", "Url": "https://api.github.com/repos/ThomasObenaus/LogFileViewer", "Date": "2014-08-15T23:22:55Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<com.google.dart.compiler.resolver.VariableElement, jdart.compiler.type.Type>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((getType(key)) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3665/buggy-version/src.jdart.compiler.phase.FlowEnv.java", "BodyUseAPI": [], "Fixed commit": "0826f70a6190bda46354524a5b260fbae69dcbb2", "Url": "https://api.github.com/repos/Geozz/DartRuntime", "Date": "2012-05-22T09:18:22Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<com.google.dart.compiler.resolver.VariableElement, jdart.compiler.type.Type>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((getType(key)) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3665/buggy-version/src.jdart.compiler.phase.FlowEnv.java", "BodyUseAPI": [], "Fixed commit": "0826f70a6190bda46354524a5b260fbae69dcbb2", "Url": "https://api.github.com/repos/Geozz/DartRuntime", "Date": "2012-05-22T09:18:22Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((issue.getWatchers()) != null) && ((issue.getWatchers().size()) > 0)) { writer.key(\"watcher_user_ids\"); writer.array(); for (com.taskadapter.redmineapi.internal.Watcher watcher : issue.getWatchers()) if ((watcher.getId()) != null) writer.value(watcher.getId()); writer.endArray(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3887/buggy-version/src.main.java.com.taskadapter.redmineapi.internal.RedmineJSONBuilder.java", "BodyUseAPI": ["com.taskadapter.redmineapi.bean.Issue.getWatchers()"], "Fixed commit": "ebb648806f59b56bf88e785a6e79bcc112b3777e", "Url": "https://api.github.com/repos/scrapmac/redmine-java-api", "Date": "2013-12-24T10:31:06Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Thread.currentThread()) != currentThread) { com.liferay.portal.kernel.cache.ThreadLocalCacheManager.clearAll(Lifecycle.REQUEST); com.liferay.portal.kernel.util.CentralizedThreadLocal.clearShortLivedThreadLocals(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1218/buggy-version/portal-service.src.com.liferay.portal.kernel.messaging.SerialDestination.java", "BodyUseAPI": [], "Fixed commit": "dd641794ee1d550dcbd105bb4e7f8723bea9aa3e", "Url": "https://api.github.com/repos/matethurzo/liferay-portal", "Date": "2015-04-16T16:05:31Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (xFilter != null) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5916/buggy-version/app.what.sp_chart_creation.ChartHelper.java", "BodyUseAPI": [], "Fixed commit": "c198fb76427a123126a7919206b79f77d8ee46b9", "Url": "https://api.github.com/repos/Gruppe14/KIT-PSE", "Date": "2013-01-24T21:46:00Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.kth.kthfsdashboard.host.HostEJB.findByHostId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (host.isRegistered()) { se.kth.kthfsdashboard.rest.resources.AgentResource.logger.log(java.util.logging.Level.INFO, \"Did not register host with id {0}: already registered.\", hostId); return javax.ws.rs.core.Response.status(Response.Status.NOT_FOUND).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5301/buggy-version/src.main.java.se.kth.kthfsdashboard.rest.resources.AgentResource.java", "BodyUseAPI": [], "Fixed commit": "4f56a1acedf6e9d11a440b72a818a791aeb318d7", "Url": "https://api.github.com/repos/hopshadoop/hopsworks", "Date": "2013-12-25T19:28:45Z"},
{"Line": "=>822", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.ignite.internal.binary.BinaryRawReaderEx.readInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (argCnt > 0) { args = new java.lang.Object[argCnt]; for (int i = 0; i < argCnt; i++) args[i] = reader.readObjectDetached(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2952/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.platform.cache.PlatformCache.java", "BodyUseAPI": [], "Fixed commit": "03f6822319b9c3d4ca7e76daef5a671097b913d9", "Url": "https://api.github.com/repos/x-kreator/ignite", "Date": "2017-01-20T09:56:26Z"},
{"Line": "=>558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (transaction.isDeposit().equalsIgnoreCase(\"Expense\")) { amount = -amount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4389/buggy-version/main.src.InitialScreen.java", "BodyUseAPI": [], "Fixed commit": "e71491de99bf90cb8baefab7b6aee42d02466fd4", "Url": "https://api.github.com/repos/luckek/Gemini", "Date": "2017-11-14T05:10:01Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((defaultValue) != null) { properties.setProperty(property, defaultValue); log.info(((((\"No match was found for property '\" + (property)) + \"', setting to default value '\") + (defaultValue)) + \"'\")); }else { log.info((\"No match was found for property '\" + (property))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7898/buggy-version/src.main.java.de.matzefratze123.setproperty.Extraction.java", "BodyUseAPI": ["org.apache.maven.plugin.logging.Log.info(java.lang.String)"], "Fixed commit": "58b389829f5e418b8e8e281c9dc0418be82430c4", "Url": "https://api.github.com/repos/roytmana/set-property-maven-plugin", "Date": "2017-07-08T21:15:09Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(stack.isEmpty())) { int[] ids = net.minecraftforge.oredict.OreDictionary.getOreIDs(stack); if ((ids.length) > 0) { for (pl.asie.ucw.UCWObjectFactory factory : rule.objectFactories.valueCollection()) { for (int i : ids) { net.minecraftforge.oredict.OreDictionary.registerOre(net.minecraftforge.oredict.OreDictionary.getOreName(i), factory.block); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8553/buggy-version/src.main.java.pl.asie.ucw.UnlimitedChiselWorks.java", "BodyUseAPI": ["net.minecraftforge.oredict.OreDictionary.getOreIDs(net.minecraft.item.ItemStack)"], "Fixed commit": "ae07d26cc64ac5f1cb3062208f18fa3f7a4f437a", "Url": "https://api.github.com/repos/asiekierka/UnlimitedChiselWorks", "Date": "2017-09-17T09:02:26Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(checkGappsAreInstalled())) { updateInstallerState(org.fairphone.launcher.gappsinstaller.GappsInstallerHelper.GAPPS_STATES_INITIAL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1433/buggy-version/FairphoneHome.src.org.fairphone.launcher.gappsinstaller.GappsInstallerHelper.java", "BodyUseAPI": [], "Fixed commit": "70a16c0d47e60675e5849055941b9dddef577f4a", "Url": "https://api.github.com/repos/Kwamecorp/Fairphone", "Date": "2014-05-01T13:55:26Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lient1) != null) lient1.setText(\"Who we are ?\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8412/buggy-version/src.main.java.fr.polytech.ihm.controller.MenuController.java", "BodyUseAPI": [], "Fixed commit": "b84a47c1bc09e47ad9438e78d7df50546215faea", "Url": "https://api.github.com/repos/Azu-Chan/IHM_Magasin_SophiaTech", "Date": "2017-03-15T11:08:42Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lient2) != null) lient2.setText(\"To knew more\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8412/buggy-version/src.main.java.fr.polytech.ihm.controller.MenuController.java", "BodyUseAPI": [], "Fixed commit": "b84a47c1bc09e47ad9438e78d7df50546215faea", "Url": "https://api.github.com/repos/Azu-Chan/IHM_Magasin_SophiaTech", "Date": "2017-03-15T11:08:42Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextHeight > ((maxHeight) - 2)) { nextHeight = (maxHeight) - 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7826/buggy-version/SWEJNR.src.sw.superwhateverjnr.world.RandomWorldGenerator.java", "BodyUseAPI": [], "Fixed commit": "4b8d66ef4a84574123da70cb38f69b07e93c8959", "Url": "https://api.github.com/repos/weaondara/SWEJNR", "Date": "2014-05-20T20:26:33Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mEasterEgg) == null) { initEasterEgg(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1649/buggy-version/Events.eventscorelib.src.main.java.com.globant.eventscorelib.baseActivities.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "1b38f2661b5ec2b07bcb0cd9056ba046c667b818", "Url": "https://api.github.com/repos/juancruzgs/GlobantEvents", "Date": "2015-06-05T19:03:32Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.haskins.cloudtrailviewer.dialog.s3filechooser.EnhancedS3FileChooser.loadClicked) { return new com.haskins.cloudtrailviewer.model.load.LoadFileRequest(com.haskins.cloudtrailviewer.dialog.s3filechooser.EnhancedS3FileChooser.fileList.getSelectedFiles(), com.haskins.cloudtrailviewer.dialog.s3filechooser.EnhancedS3FileChooser.FILTER_PANEL.getFilters()); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/932/buggy-version/src.main.java.com.haskins.cloudtrailviewer.dialog.s3filechooser.EnhancedS3FileChooser.java", "BodyUseAPI": [], "Fixed commit": "d8f5b51251d3c7abfa7f045dc6bd499cafb2c5af", "Url": "https://api.github.com/repos/githublemming/CloudTrailViewer", "Date": "2016-03-17T12:10:05Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.haskins.cloudtrailviewer.dialog.s3filechooser.EnhancedS3FileChooser.showDialog(CloudTrailViewer.frame,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (request != null) { application.newS3Files(request); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/932/buggy-version/src.main.java.com.haskins.cloudtrailviewer.application.LoadToolBar.java", "BodyUseAPI": ["com.haskins.cloudtrailviewer.application.CloudTrailViewerApplication.newS3Files(com.haskins.cloudtrailviewer.model.load.LoadFileRequest)"], "Fixed commit": "d8f5b51251d3c7abfa7f045dc6bd499cafb2c5af", "Url": "https://api.github.com/repos/githublemming/CloudTrailViewer", "Date": "2016-03-17T12:10:05Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(t.isProcedural)) { textureManager.getTextureForFile(t.file, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5286/buggy-version/src.org.osm2world.core.target.jogl.AbstractJOGLTarget.java", "BodyUseAPI": ["org.osm2world.core.target.jogl.JOGLTextureManager.getTextureForFile(t.file,boolean)"], "Fixed commit": "d93e475e0d3404b14ff2fc01cf833123a809e676", "Url": "https://api.github.com/repos/Zabot/OSM2World", "Date": "2016-08-18T18:14:01Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((javax.security.auth.message.config.AuthConfigFactory.getFactory()) == null) { javax.security.auth.message.config.AuthConfigFactory.setFactory(new org.apache.catalina.authenticator.jaspic.AuthConfigFactoryImpl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/351/buggy-version/restapi.src.main.java.sjchat.restapi.Application.java", "BodyUseAPI": [], "Fixed commit": "90d0ee7a2e7735a5cc07e55bf0b7c1324f1e8c98", "Url": "https://api.github.com/repos/sjchat/sjchat", "Date": "2017-04-20T16:07:15Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.univocity.parsers.csv.CsvWriter.getStringValue(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (nextElement == null) { append(false, nullValue); }else { append(false, emptyValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1560/buggy-version/src.main.java.com.univocity.parsers.csv.CsvWriter.java", "BodyUseAPI": [], "Fixed commit": "9ea91126c9f7a48fc07cef4219057a28123a754c", "Url": "https://api.github.com/repos/uniVocity/univocity-parsers", "Date": "2016-10-18T08:11:54Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tank) == null) { tank = new net.minecraftforge.fluids.FluidTank(((net.minecraftforge.fluids.FluidContainerRegistry.BUCKET_VOLUME) * (16 * ((tier) + 1)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3507/buggy-version/java.k4unl.minecraft.Hydraulicraft.tileEntities.generator.TileHydraulicLavaPump.java", "BodyUseAPI": [], "Fixed commit": "a79d961a56e3f1afbfd02c9a2563ca03de4a3b91", "Url": "https://api.github.com/repos/K-4U/Hydraulicraft", "Date": "2014-05-09T15:49:07Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextMove == (Movable.MOVE.STOP)) algorithm.FloodFillMove.count = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4211/buggy-version/MDP-Algo.src.algorithm.FloodFillMove.java", "BodyUseAPI": [], "Fixed commit": "b1baf19ce2e744fa94e94da9046c81785d97e9ab", "Url": "https://api.github.com/repos/mohitgambani/MDP-Algo", "Date": "2016-02-29T02:37:36Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextMove == (Movable.MOVE.STOP)) algorithm.FloodFillMove.count = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4211/buggy-version/MDP-Algo.src.algorithm.FloodFillMove.java", "BodyUseAPI": [], "Fixed commit": "b1baf19ce2e744fa94e94da9046c81785d97e9ab", "Url": "https://api.github.com/repos/mohitgambani/MDP-Algo", "Date": "2016-02-29T02:37:36Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["yssy.BoardMaster.getBoardMasterList(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (boardMasterList.isEmpty()) { java.lang.System.out.println(((district + \",\") + boardName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4540/buggy-version/src.yssy.Analysis.java", "BodyUseAPI": [], "Fixed commit": "8700d8a10ac81f87757d1ad4a170a820816dd565", "Url": "https://api.github.com/repos/kinnki/yssy_board_analysis", "Date": "2013-11-03T06:34:22Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (block.isPushable()) return block.getChar();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6309/buggy-version/common.CraftrMap.java", "BodyUseAPI": ["common.CraftrBlock.getChar()"], "Fixed commit": "dff1c8b53d72c592b139857b6d2dee715feaa9ec", "Url": "https://api.github.com/repos/asiekierka/64pixels", "Date": "2011-03-27T09:41:18Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (affectedObjectList.isEmpty()) { this.discard(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5960/buggy-version/Mage.src.main.java.mage.abilities.effects.common.CopyEffect.java", "BodyUseAPI": [], "Fixed commit": "3eae5e9a0014d2368a69f56f147b740fb5608b16", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2016-09-22T18:49:12Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (new xyz.almia.accountsystem.Account(event.getPlayer()).getStatus().equals(AccountStatus.LOGGEDIN)) { if (petrified.contains(new xyz.almia.accountsystem.Account(event.getPlayer()).getLoadedCharacter().getUsername())) { event.setCancelled(true); event.getPlayer().sendMessage(((org.bukkit.ChatColor.YELLOW) + \"You are petrified!\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7442/buggy-version/src.xyz.almia.damagesystem.Damage.java", "BodyUseAPI": ["java.util.List<java.lang.String>.contains(new xyz.almia.accountsystem.Account(event.getPlayer()).getLoadedCharacter().getUsername())", "org.bukkit.event.player.PlayerMoveEvent.getPlayer()", "org.bukkit.event.player.PlayerMoveEvent.getPlayer()", "org.bukkit.event.player.PlayerMoveEvent.setCancelled(boolean)", "event.getPlayer().sendMessage(((org.bukkit.ChatColor.YELLOW) + \"You are petrified!\"))", "new xyz.almia.accountsystem.Account(event.getPlayer()).getLoadedCharacter().getUsername()", "xyz.almia.accountsystem.Account.getLoadedCharacter()"], "Fixed commit": "503ecbe39005eecd95e8c08774e5113b7ddecc08", "Url": "https://api.github.com/repos/Kowagatte/Damocles", "Date": "2017-03-09T22:22:47Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.api.services.sheets.v4.model.ValueRange.getValues()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((values == null) || (values.isEmpty())) { cachedColumns.put(colName, new java.util.ArrayList<>()); }else { cachedColumns.put(colName, values.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/541/buggy-version/src.main.java.org.vietabroader.model.VASpreadsheet.java", "BodyUseAPI": ["java.util.List<java.util.List<java.lang.Object>>.get(int)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.Object>>.put(java.lang.String,java.util.List<java.lang.Object>)"], "Fixed commit": "547a313c3a45f413d76d22022588a3d7e026a3c7", "Url": "https://api.github.com/repos/ctring/VAQR", "Date": "2017-07-04T06:38:03Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (the_reasons != null) { my_discrepancy.addAll(the_reasons); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1128/buggy-version/server.eclipse-project.src.main.java.us.freeandfair.corla.model.CVRAuditInfo.java", "BodyUseAPI": ["java.util.Set<us.freeandfair.corla.model.AuditReason>.addAll(java.util.Set<us.freeandfair.corla.model.AuditReason>)"], "Fixed commit": "0c541d1ffa26df277c1089e84527f648a2cc4ea4", "Url": "https://api.github.com/repos/FreeAndFair/ColoradoRLA", "Date": "2017-10-26T15:49:55Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (the_reasons != null) { my_disagreement.addAll(the_reasons); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1128/buggy-version/server.eclipse-project.src.main.java.us.freeandfair.corla.model.CVRAuditInfo.java", "BodyUseAPI": ["java.util.Set<us.freeandfair.corla.model.AuditReason>.addAll(java.util.Set<us.freeandfair.corla.model.AuditReason>)"], "Fixed commit": "0c541d1ffa26df277c1089e84527f648a2cc4ea4", "Url": "https://api.github.com/repos/FreeAndFair/ColoradoRLA", "Date": "2017-10-26T15:49:55Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((defaultSamplingRate) < 500) || ((defaultSamplingRate) > 3600000)) throw new java.lang.IllegalArgumentException(java.text.MessageFormat.format(messages.getString(\"errors.switch.samplingratesoutofrange\"), 500, 3600000));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7534/buggy-version/src.de.majortom.profisounder.thundersound.ThunderSounder.java", "BodyUseAPI": [], "Fixed commit": "c9e16668fe73e20b3b21e1ee3080ff1ed162081b", "Url": "https://api.github.com/repos/MajorTom4711/ProfiSounder", "Date": "2014-11-16T20:03:13Z"},
{"Line": "=>728", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (resultExpr == null) { resultExpr = ClassCall(baseClass, typeCheckedStatements); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8985/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.term.expr.visitor.CheckTypeVisitor.java", "BodyUseAPI": [], "Fixed commit": "d9b15666400f455653b0b13cb161569ab50b8b66", "Url": "https://api.github.com/repos/kirelagin/vclang", "Date": "2016-03-25T09:35:51Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entry.isDirectory()) { org.cyclades.io.FileUtils.verifyOutputDirectory(targetResource); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8593/buggy-version/engine.src.main.java.org.cyclades.io.Zip.java", "BodyUseAPI": [], "Fixed commit": "b7295f8e903013597c599c2e47d26b28ff495d48", "Url": "https://api.github.com/repos/cycladessoa/cyclades", "Date": "2013-03-09T03:28:32Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(time.equals(\"\"))) { this._time = (time.trim()) + \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/343/buggy-version/src.logic.Task.java", "BodyUseAPI": [], "Fixed commit": "e38e67f274654621272068ffa4084acf2eb4c791", "Url": "https://api.github.com/repos/idawatibustan/PlanIt", "Date": "2015-10-25T08:26:14Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(date.equals(\"\"))) { this._date = (date.trim()) + \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/343/buggy-version/src.logic.Task.java", "BodyUseAPI": [], "Fixed commit": "e38e67f274654621272068ffa4084acf2eb4c791", "Url": "https://api.github.com/repos/idawatibustan/PlanIt", "Date": "2015-10-25T08:26:14Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<org.md2k.datakitapi.source.datasource.DataSourceClient>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(dataSourceClient.getDataSource().getDataDescriptors().get(0).containsKey(METADATA.MIN_VALUE))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7542/buggy-version/plotter.src.main.java.org.md2k.plotter.PrefsFragmentDataSources.java", "BodyUseAPI": [], "Fixed commit": "b41fb06db830da00788cd76a5c896a4c6503c732", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-Plotter", "Date": "2016-08-01T05:14:20Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<org.md2k.datakitapi.source.datasource.DataSourceClient>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((dataSourceClient.getDataSource().getDataDescriptors()) == null) || ((dataSourceClient.getDataSource().getDataDescriptors().size()) == 0)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7542/buggy-version/plotter.src.main.java.org.md2k.plotter.PrefsFragmentDataSources.java", "BodyUseAPI": [], "Fixed commit": "b41fb06db830da00788cd76a5c896a4c6503c732", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-Plotter", "Date": "2016-08-01T05:14:20Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (prefName.equals(Prefs.KEYS.SHOW_NOTIFICATION.toString())) { restartService(); }else if (prefName.equals(Prefs.KEYS.ENABLED.toString())) { restartService(); }else if (prefName.equals(Prefs.KEYS.NOTIFICATION_ALERTS.toString())) { if (isChecked) notificationPermission(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8419/buggy-version/app.src.main.java.com.tomer.alwayson.Activities.MainActivity.java", "BodyUseAPI": ["java.lang.String.equals(Prefs.KEYS.NOTIFICATION_ALERTS.toString())", "java.lang.String.equals(Prefs.KEYS.ENABLED.toString())"], "Fixed commit": "5add69333464722a99f3c9f2033a6989eed7fc16", "Url": "https://api.github.com/repos/rosenpin/AlwaysOnDisplayAmoled", "Date": "2016-06-11T21:04:02Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(factors.contains(current))) { factors.add(new java.lang.Integer(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5863/buggy-version/Pair.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.add(java.lang.Integer)"], "Fixed commit": "ca7eb4cf645c38b5686ca967d648ce1e9afd3a9a", "Url": "https://api.github.com/repos/joekamien/RDP-2015-10-05-Ruth-Arron", "Date": "2015-10-05T21:56:17Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.getCount()) > 0) { do { com.example.android.brianspopularmovies.MainActivity.favorites.add(data.getInt(0)); } while (data.moveToNext() ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/995/buggy-version/app.src.main.java.com.example.android.brianspopularmovies.MainActivity.java", "BodyUseAPI": ["android.database.Cursor.moveToNext()", "android.database.Cursor.getInt(int)", "java.util.ArrayList<java.lang.Integer>.add(data.getInt(0))"], "Fixed commit": "269ba09a13a07e3806b3dd2c27439352614521b2", "Url": "https://api.github.com/repos/bgillHub/moviesAndDates", "Date": "2017-11-14T00:31:43Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((icon) != null) { org.terasology.rendering.assets.texture.TextureRegion texture = icon.get(); if (texture != null) { return texture.size(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4818/buggy-version/modules.Core.src.main.java.org.terasology.rendering.nui.layers.ingame.inventory.ItemIcon.java", "BodyUseAPI": [], "Fixed commit": "455bf5177318fd2a9c8ca4b0563f0d774815c53b", "Url": "https://api.github.com/repos/oniatus/Terasology", "Date": "2016-03-13T03:31:44Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(enableDefaultAcceptor)) { executor.shutdownNow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4563/buggy-version/src.main.java.org.red5.server.net.rtmp.RTMPMinaTransport.java", "BodyUseAPI": [], "Fixed commit": "0f25526c711b21f70069b78309f6a9f40f27e8fe", "Url": "https://api.github.com/repos/solomax/red5-server", "Date": "2015-10-26T20:29:54Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (coefficientMatrix == null) { java.lang.System.currentTimeMillis(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3859/buggy-version/app.svmlib.src.main.java.libsvm.core.Model.java", "BodyUseAPI": [], "Fixed commit": "433ed8338219f3c13a463c872bd45ed72ee3daa5", "Url": "https://api.github.com/repos/sunjun-group/Ziyuan", "Date": "2017-02-23T12:47:12Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id) != null) return id.getValue(); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5955/buggy-version/src.br.uff.midiacom.xml.XMLElementImpl.java", "BodyUseAPI": [], "Fixed commit": "7b9419c0fe94efb484411993233cce2194f9c616", "Url": "https://api.github.com/repos/joeldossantos/XML", "Date": "2011-10-20T02:38:00Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Boolean.parseBoolean(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (spikey) { weapon = new logic.Weapon(java.lang.Float.parseFloat(stringList[1]), java.lang.Float.parseFloat(stringList[2]), java.lang.Float.parseFloat(stringList[lan.Client.THREE]), java.lang.Float.parseFloat(stringList[lan.Client.FOUR])); }else { weapon = new logic.Spiky(java.lang.Float.parseFloat(stringList[1]), java.lang.Float.parseFloat(stringList[2]), java.lang.Float.parseFloat(stringList[lan.Client.THREE]), java.lang.Float.parseFloat(stringList[lan.Client.FOUR])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1905/buggy-version/src.main.java.lan.Client.java", "BodyUseAPI": [], "Fixed commit": "4455eaabf8a68ab0da1a49e9c53892a52b03a2cb", "Url": "https://api.github.com/repos/geenen124/Team1BubbleTrouble", "Date": "2015-09-25T11:59:13Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Boolean.parseBoolean(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (spikey) { weapon = new logic.Weapon(java.lang.Float.parseFloat(stringList[1]), java.lang.Float.parseFloat(stringList[2]), java.lang.Float.parseFloat(stringList[lan.Host.THREE]), java.lang.Float.parseFloat(stringList[lan.Host.FOUR])); }else { weapon = new logic.Spiky(java.lang.Float.parseFloat(stringList[1]), java.lang.Float.parseFloat(stringList[2]), java.lang.Float.parseFloat(stringList[lan.Host.THREE]), java.lang.Float.parseFloat(stringList[lan.Host.FOUR])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1905/buggy-version/src.main.java.lan.Host.java", "BodyUseAPI": [], "Fixed commit": "4455eaabf8a68ab0da1a49e9c53892a52b03a2cb", "Url": "https://api.github.com/repos/geenen124/Team1BubbleTrouble", "Date": "2015-09-25T11:59:13Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (resource instanceof org.codehaus.plexus.components.io.resources.PlexusIoFileResource) { ret.addEntry(((org.codehaus.plexus.components.io.resources.PlexusIoFileResource) (resource)).getFile(), new java.io.File(addition.destination)); }else if (resource instanceof org.codehaus.plexus.archiver.FileSet) { org.codehaus.plexus.archiver.FileSet fs = ((org.codehaus.plexus.archiver.FileSet) (resource)); org.apache.maven.shared.utils.io.DirectoryScanner ds = new org.apache.maven.shared.utils.io.DirectoryScanner(); java.io.File base = addition.directory; ds.setBasedir(base); ds.setIncludes(fs.getIncludes()); ds.setExcludes(fs.getExcludes()); ds.setCaseSensitive(fs.isCaseSensitive()); ds.scan(); for (java.lang.String f : ds.getIncludedFiles()) { ret.addEntry(new java.io.File(base, f), new java.io.File(addition.destination, f)); } }else { throw new java.lang.IllegalStateException((((\"Unknown resource type \" + (resource.getClass())) + \": \") + resource)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5323/buggy-version/src.main.java.org.jolokia.docker.maven.assembly.MappingTrackArchiver.java", "BodyUseAPI": ["java.lang.Object.getClass()"], "Fixed commit": "f8036a8cc4e18818557e14d16276d459a8b2d54b", "Url": "https://api.github.com/repos/nkrendel/docker-maven-plugin", "Date": "2015-09-16T18:18:06Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mDbHelper.updateTask(task)) > 0) { android.content.Intent returnIntent = new android.content.Intent(); returnIntent.putExtra(\"EDITED_TASK\", task); setResult(2, returnIntent); android.widget.Toast.makeText(this, \"Edited!\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8695/buggy-version/java.com.caio_nathan.where.todo.TaskActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,com.caio_nathan.where.todo.model.Task)"], "Fixed commit": "7db4eb173d1be224ee3e67b1575c991a8082b665", "Url": "https://api.github.com/repos/caiolopes/where-to-do", "Date": "2015-04-27T08:05:06Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (getPage())) getPage().onFinish();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1619/buggy-version/src.main.java.au.com.tyo.app.CommonAppCompatActivity.java", "BodyUseAPI": [], "Fixed commit": "3159f5ea5ec2536c9cac562952e7d59f4160cca1", "Url": "https://api.github.com/repos/tyolab/CommonAppLib", "Date": "2017-09-13T04:27:24Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (settings)) settings.loadPreferences();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1619/buggy-version/src.main.java.au.com.tyo.app.CommonApp.java", "BodyUseAPI": [], "Fixed commit": "3159f5ea5ec2536c9cac562952e7d59f4160cca1", "Url": "https://api.github.com/repos/tyolab/CommonAppLib", "Date": "2017-09-13T04:27:24Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list.size()) <= 1) { return new java.util.ArrayList<java.lang.Integer>(list); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2147/buggy-version/Practice.src.my.practice.y2016.Practice.java", "BodyUseAPI": [], "Fixed commit": "5ea9e0cea29bf14edbd6b83475ae803e8eb2615c", "Url": "https://api.github.com/repos/tdongsi/java", "Date": "2016-05-28T07:09:32Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.tx.OTransaction.getClusterName(op.getRecord())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (clusterName != null) rid.clusterId = ODatabaseRecordThreadLocal.INSTANCE.get().getClusterIdByName(clusterName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/9181/buggy-version/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.ODistributedTransactionManager.java", "BodyUseAPI": ["ODatabaseRecordThreadLocal.INSTANCE.get().getClusterIdByName(java.lang.String)"], "Fixed commit": "96859b0eb4c83c3e5f73a3f32cc39959c602ecbd", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-07-28T23:08:51Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrBitmap) != null) { mOrigBitmap = android.graphics.Bitmap.createBitmap(mCurrBitmap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5660/buggy-version/app.src.main.java.com.example.menozzi.imageeditor.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "684b0f9339a232e4c3851327658296ca7ea9c8e1", "Url": "https://api.github.com/repos/unc-comp790-136/image-editor", "Date": "2017-04-26T23:05:12Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!directChildsOnly) && (element.hasChilderen())) { try { return getConfigElementRecursiveByContent(element, filter, filterType, directChildsOnly); } catch (org.jboss.forge.maven.plugins.ConfigurationElementNotFoundException ex) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/266/buggy-version/maven-api.src.main.java.org.jboss.forge.maven.plugins.ConfigurationElementImpl.java", "BodyUseAPI": ["org.jboss.forge.maven.plugins.ConfigurationElementImpl.getConfigElementRecursiveByContent(org.jboss.forge.maven.plugins.ConfigurationElement,java.lang.String,org.jboss.forge.maven.plugins.ConfigurationElementImpl.FilterType,boolean)"], "Fixed commit": "e43577efb5e7d9b3f70bcdd423961a088fa2e6e2", "Url": "https://api.github.com/repos/paulbakker/core", "Date": "2011-05-23T13:56:09Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (channel == (music.parser.MidiParserImproved.PERCUSSION_CHANNEL)) { int programNumber = 0; while (programNumberToChannels.containsKey(programNumber)) { programNumber++; } java.util.Set<java.lang.Integer> channels = new java.util.HashSet<java.lang.Integer>(); channels.add(channel); programNumberToChannels.put(programNumber, channels); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7949/buggy-version/src.music.parser.MidiParserImproved.java", "BodyUseAPI": ["java.util.Set<java.lang.Integer>.add(int)"], "Fixed commit": "47eb1246a2b19e13979af572f3cc24b5e4eaaae9", "Url": "https://api.github.com/repos/denisli/interlude", "Date": "2015-05-02T20:49:43Z"},
{"Line": "=>725", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ag == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1869/buggy-version/engine.src.org.pentaho.di.trans.steps.groupby.GroupBy.java", "BodyUseAPI": [], "Fixed commit": "0569fb9bf1be721fa4fc687d2d2d0983b7b1a02a", "Url": "https://api.github.com/repos/VasilinaTerehova/pentaho-kettle", "Date": "2016-04-20T16:29:31Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.ifgi.igiapp.igi_app.MongoDB.DatabaseHandler.getStoryByStoryElementId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (story != null) { allIds = story.getStoryElementId(); for (int i = 0; i < (allIds.length); i++) { if (allIds[i].equals(storyElementId)) { positionInStory = i; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/102/buggy-version/app.src.main.java.de.ifgi.igiapp.igi_app.StoryElementActivity.java", "BodyUseAPI": ["de.ifgi.igiapp.igi_app.MongoDB.Story.getStoryElementId()"], "Fixed commit": "960bc0a067a7342278750cd09c400b17fa561b31", "Url": "https://api.github.com/repos/froehr/IGI-app", "Date": "2015-02-01T14:43:12Z"},
{"Line": "=>675", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (emptyAttributes && ((result.get(0)) != null)) { if (result.containsKey(vocabularyConceptIds[0])) { result.get(vocabularyConceptIds[0]).addAll(result.get(0)); }else { result.put(vocabularyConceptIds[0], result.get(0)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8560/buggy-version/src.main.java.eionet.meta.dao.mysql.DataElementDAOImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.util.List<java.util.List<eionet.meta.dao.domain.DataElement>>>.get(int)", "java.util.Map<java.lang.Integer, java.util.List<java.util.List<eionet.meta.dao.domain.DataElement>>>.get(int)", "result.get(vocabularyConceptIds[0]).addAll(result.get(0))", "java.util.Map<java.lang.Integer, java.util.List<java.util.List<eionet.meta.dao.domain.DataElement>>>.get(int)", "java.util.Map<java.lang.Integer, java.util.List<java.util.List<eionet.meta.dao.domain.DataElement>>>.containsKey(int)", "java.util.Map<java.lang.Integer, java.util.List<java.util.List<eionet.meta.dao.domain.DataElement>>>.put(int,result.get(0))"], "Fixed commit": "e92d866cb7be75564a5a7ebf5355d3a336174230", "Url": "https://api.github.com/repos/eea/eionet.datadict", "Date": "2014-09-03T10:50:15Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((upper != null) && (unions.isEmpty())) { assert (upper.child(filter, false)) == null; upper.children[filter] = child; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3502/buggy-version/modules.indexing.src.main.java.org.apache.ignite.internal.processors.query.h2.opt.GridH2CollocationModel.java", "BodyUseAPI": ["org.apache.ignite.internal.processors.query.h2.opt.GridH2CollocationModel.child(int,boolean)"], "Fixed commit": "6491e89bd419bc8393323efd793ff9a4c902c128", "Url": "https://api.github.com/repos/apache/ignite", "Date": "2016-07-01T10:28:25Z"},
{"Line": "=>1023", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((states.get(c)) != null) && (!((states.get(c)) instanceof org.integratedmodelling.corescience.implementations.datasources.MemObjectContextualizedDatasource))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2181/buggy-version/plugins.org.integratedmodelling.thinklab.corescience.src.org.integratedmodelling.corescience.context.ObservationContext.java", "BodyUseAPI": [], "Fixed commit": "380c618fc34a37ea1296b37f64a463c53df15fcd", "Url": "https://api.github.com/repos/ariesteam/thinklab", "Date": "2012-11-28T13:19:27Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.wisdom.lottery.dao.DaoHelper.queryForObject(java.lang.String,cn.wisdom.lottery.dao.mapper.DaoRowMapper<cn.wisdom.lottery.dao.vo.Lottery>,java.lang.String,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (lottery != null) { java.util.List<cn.wisdom.lottery.dao.vo.Lottery> lotteries = new java.util.ArrayList<cn.wisdom.lottery.dao.vo.Lottery>(); lotteries.add(lottery); getLotteryPeriods(lotteries); getLotteryNumbers(lotteries); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6926/buggy-version/LotteryService.src.main.java.cn.wisdom.lottery.dao.LotteryDaoImpl.java", "BodyUseAPI": ["java.util.List<cn.wisdom.lottery.dao.vo.Lottery>.add(cn.wisdom.lottery.dao.vo.Lottery)"], "Fixed commit": "6634569eb794d7eb939743ea355146532d0a3389", "Url": "https://api.github.com/repos/ooclrickliu/lottery", "Date": "2016-08-05T08:11:02Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["chr.soph.Hochschulmodell.Hochschule.findModulById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (modul == null) { modul = new chr.soph.Hochschulmodell.Modul(); modul.setId(java.lang.Integer.toString(veranstaltung.getVeranstaltungsid())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8760/buggy-version/HIS-Schnittstelle.src.main.java.chr.soph.HIS.Schnittstelle.HIS_ServicesImpl.java", "BodyUseAPI": [], "Fixed commit": "e9adbac274485457bb2cf2cb01bc95f90307d9a0", "Url": "https://api.github.com/repos/CrispyGee/SoftwareArchitektur", "Date": "2015-04-14T11:33:36Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parameters.length) == 0) { return cmd; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8514/buggy-version/src.main.java.net.canarymod.commandsys.commands.vanilla.VanillaCommandWrapper.java", "BodyUseAPI": [], "Fixed commit": "b6fc934d91165614a216975a63589d780497d4a4", "Url": "https://api.github.com/repos/CanaryModTeam/CanaryLib", "Date": "2014-09-19T19:15:54Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lordstephen77.dreamblocks.Constants.TileID.of(current.getItem().item_id)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (itemID != (com.lordstephen77.dreamblocks.Constants.TileID.NONE)) { boolean isPassable = tileStore.tileTypes.get(itemID).passable; if (isPassable || (!(player.inBoundingBox(player.handBuildPos, tileSize)))) { if (world.addTile(player.handBuildPos, itemID, lightingEngineSun, lightingEngineSourceBlocks, tileStore)) { hotbar.decreaseSelected(1); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8809/buggy-version/src.main.java.com.lordstephen77.dreamblocks.MainGame.java", "BodyUseAPI": ["tileStore.tileTypes.get(com.lordstephen77.dreamblocks.Constants.TileID)", "com.lordstephen77.dreamblocks.World.addTile(player.handBuildPos,com.lordstephen77.dreamblocks.Constants.TileID,com.lordstephen77.dreamblocks.LightingEngine,com.lordstephen77.dreamblocks.LightingEngine,com.lordstephen77.dreamblocks.TileStore)"], "Fixed commit": "74ff757a8a9475a6771e60de177eeadc4c1474e5", "Url": "https://api.github.com/repos/DreamBlocks/DreamBlocks", "Date": "2017-06-30T18:54:45Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seniorproject.badger.Database.makeGetRequest(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(response.isNull(\"error\"))) { throw new seniorproject.badger.UserNotFoundException(\"No user found with that id.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5385/buggy-version/app.src.main.java.seniorproject.badger.Database.java", "BodyUseAPI": [], "Fixed commit": "00443fef776e7f610628b74ba92f1d2537ebf67a", "Url": "https://api.github.com/repos/BadgerGroup/Badger", "Date": "2016-11-17T03:44:03Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.python.pydev.core.docutils.PySelection.getLine(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((pySelection.matchesFunctionLine(line)) || (pySelection.matchesClassLine(line))) { if (iLineStartingScope > 0) { int i = iLineStartingScope - 1; while (pySelection.getLine(i).trim().startsWith(\"@\")) { iLineStartingScope = i; i--; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1504/buggy-version/plugins.com.python.pydev.refactoring.src.com.python.pydev.refactoring.tdd.PyCreateClassOrMethod.java", "BodyUseAPI": ["org.python.pydev.core.docutils.PySelection.getLine(int)", "pySelection.getLine(i).trim().startsWith(java.lang.String)", "pySelection.getLine(i).trim()"], "Fixed commit": "495975c36758ac76cd8788e6115475b6fd21e9e2", "Url": "https://api.github.com/repos/aptana/Pydev", "Date": "2011-03-17T00:38:30Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((fluid.getBlock()) == null) || ((fluid.getBlock().getUnlocalizedName()) == null)) { if (id.endsWith(\".molten\")) { moltenStuff.put(id, fluid); } log.error(((\"FLUID: '\" + (fluid.getLocalizedName(new net.minecraftforge.fluids.FluidStack(fluid, 1)))) + \"' HAS NO BLOCK OR THE BLOCK HAS NO NAME! SKIPPING DUMP!\")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/611/buggy-version/src.main.java.me.samboycoding.thermaltinkering.ThermalTinkering.java", "BodyUseAPI": ["net.minecraftforge.fluids.Fluid.getLocalizedName(net.minecraftforge.fluids.FluidStack)", "org.apache.logging.log4j.Logger.error(((\"FLUID: '\" + (fluid.getLocalizedName(new net.minecraftforge.fluids.FluidStack(fluid, 1)))) + \"' HAS NO BLOCK OR THE BLOCK HAS NO NAME! SKIPPING DUMP!\"))", "java.util.Map<java.lang.String, net.minecraftforge.fluids.Fluid>.put(java.lang.String,net.minecraftforge.fluids.Fluid)"], "Fixed commit": "47c04d19819394ae767c0a99dc6a8a1511aab8e1", "Url": "https://api.github.com/repos/SamboyCoding/Thermal-Tinkering", "Date": "2016-10-06T15:51:44Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasError) { return java.lang.Double.NaN; }else { return this.doubleValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8923/buggy-version/src.textExcel.RealCell.java", "BodyUseAPI": [], "Fixed commit": "91c5173bd891149ab3586f1230c58bdc8a5fc185", "Url": "https://api.github.com/repos/IQubic/Text-Excel", "Date": "2017-03-15T06:08:09Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index != 1) { tv1.setText(((keywords[index]) + \":\")); }else { tv1.setText((\"Here you go\" + \":\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1987/buggy-version/app.src.main.java.com.shoppy.shoppy.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "e1332e2315fede5288f6e878d249cd55fd07bae6", "Url": "https://api.github.com/repos/jlyons6100/Shoppy", "Date": "2017-12-02T20:08:09Z"},
{"Line": "=>778", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((className.startsWith(\"L\")) && (className.endsWith(\";\"))) { className = className.substring(1, ((className.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3837/buggy-version/src.main.java.com.alibaba.fastjson.util.TypeUtils.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "a9f054c920550f7a861c99455fa9e1b9e5ba5521", "Url": "https://api.github.com/repos/AlibabaTech/fastjson", "Date": "2012-08-10T09:13:55Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (it == null) { pop.addSeparator(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5341/buggy-version/src.main.java.de.caluga.morphium.gui.recordtable.RecordTable.java", "BodyUseAPI": [], "Fixed commit": "5ea396fefbf5717b72312315aaa6ff0b1579dbde", "Url": "https://api.github.com/repos/sboesebeck/morphium-gui", "Date": "2012-08-23T13:42:59Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(stackTrace.contains(\"Exception in\"))) exceptionLine = stackTrace.split(\"\\n\")[0]; else { java.util.regex.Pattern p = java.util.regex.Pattern.compile(this.exceptionRegex); java.util.regex.Matcher m = p.matcher(stackTrace); if (!(m.find())) throw new java.lang.RuntimeException((\"Can't get exception from stack trace: \" + stackTrace)); exceptionLine = m.group(0).trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2397/buggy-version/BugQueryServerSide.src.main.java.com.bugquery.serverside.entities.StackTrace.java", "BodyUseAPI": ["java.util.regex.Pattern.matcher(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "46aa618f67f799f7282a83af621f33b4b23fa89c", "Url": "https://api.github.com/repos/TechnionYP5777/Bugquery", "Date": "2016-12-20T17:28:48Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (doc != null) { doc.setSource(source); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/436/buggy-version/plugins.net.refractions.udig.tool.info.src.net.refractions.udig.catalog.shp.ShpDocFactory.java", "BodyUseAPI": ["net.refractions.udig.catalog.internal.document.AbstractDocument.setSource(net.refractions.udig.catalog.document.IAbstractDocumentSource)"], "Fixed commit": "b7513c865c64655bd17c0c7de6b66cf02b974cb8", "Url": "https://api.github.com/repos/markles/udig-platform", "Date": "2012-08-15T23:48:23Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (doc != null) { doc.setSource(source); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/436/buggy-version/plugins.net.refractions.udig.tool.info.src.net.refractions.udig.catalog.shp.ShpDocFactory.java", "BodyUseAPI": ["net.refractions.udig.catalog.internal.document.AbstractDocument.setSource(net.refractions.udig.catalog.document.IAbstractDocumentSource)"], "Fixed commit": "b7513c865c64655bd17c0c7de6b66cf02b974cb8", "Url": "https://api.github.com/repos/markles/udig-platform", "Date": "2012-08-15T23:48:23Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((account) instanceof com.csci5448.accounts.JournalistAccount) { java.lang.System.out.println((\"A system admin will verify your profession shortly. Once this happens,\" + \" you will be able to write and submit news articles for approval.\")); try { com.csci5448.control.EmailControl.getEmailControl().sendEmail(\"espngen@gmail.com\", \"ESPNGen Journalist Profession Verification\", (((\"A new Journalist Account has been created for \" + (account.getUsername())) + \"!\\n\") + \"If you would like to approve this person's profession, please update the journalist database.\")); } catch (javax.mail.MessagingException e) { e.printStackTrace(); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7697/buggy-version/src.com.csci5448.pages.common_pages.EmailVerificationPage.java", "BodyUseAPI": [], "Fixed commit": "8b92405b99dcc8ff232d39ca5d3391c0346642d7", "Url": "https://api.github.com/repos/cpillion/CSCI5448_Project", "Date": "2016-11-30T18:48:20Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.swt.custom.CCombo.getData(text.getText())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (element.getArtefactElementId().contains(\"RQ\")) com.project.traceability.manager.RequirementSourceClassManager.compareSubElements(selection[0], ((com.project.traceability.model.ArtefactElement) (text.getData(text.getText()))), ((com.project.traceability.model.ArtefactElement) (selection[0].getData(((\"\" + (com.project.traceability.GUI.CompareWindow.column)) + \"\"))))); else com.project.traceability.manager.RequirementSourceClassManager.compareSubElements(selection[0], ((com.project.traceability.model.ArtefactElement) (selection[0].getData(((\"\" + (com.project.traceability.GUI.CompareWindow.column)) + \"\")))), element);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8936/buggy-version/sat.src.main.java.com.project.traceability.GUI.CompareWindow.java", "BodyUseAPI": ["com.project.traceability.manager.RequirementSourceClassManager.compareSubElements(selection[0],((com.project.traceability.model.ArtefactElement) (selection[0].getData(((\"\" + (com.project.traceability.GUI.CompareWindow.column)) + \"\")))),com.project.traceability.model.ArtefactElement)"], "Fixed commit": "832a6af7c8484d1a693b3ece21b902eab2b0f068", "Url": "https://api.github.com/repos/Thanu/SAT", "Date": "2015-02-22T08:31:23Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.entity.player.EntityPlayer.getHeldItem(net.minecraft.util.EnumHand)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (com.legacy.aether.common.player.PlayerAether.get(player).accessories.setInventoryAccessory(heldItem.copy())) { heldItem.shrink(1); return new net.minecraft.util.ActionResult<net.minecraft.item.ItemStack>(net.minecraft.util.EnumActionResult.SUCCESS, heldItem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2670/buggy-version/src.main.java.com.legacy.aether.common.items.accessories.ItemAccessory.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.shrink(int)"], "Fixed commit": "de3eadba0e2a8a78f10469c48ef4ea373413f9a3", "Url": "https://api.github.com/repos/KingPhygieBoo/Aether-Legacy", "Date": "2017-07-14T03:57:37Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (undoTexts.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6011/buggy-version/WikipediaCleaner.src.org.wikipediacleaner.gui.swing.component.MWPaneUndoManager.java", "BodyUseAPI": [], "Fixed commit": "9e5f6b15f0a0b39e924c989feebffd9350f5ab14", "Url": "https://api.github.com/repos/WPCleaner/wpcleaner", "Date": "2016-08-26T14:26:01Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gateway.getSensors()) != null) { mGatewayNames.add(((((gateway.getName()) + \" (\") + (gateway.getSensors().size())) + \")\")); }else { mGatewayNames.add(gateway.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6855/buggy-version/Project.ThingplusSampleApp.app.src.main.java.net.thingplus.sample.SensorListActivity.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(gateway.getName())", "net.thingplus.sample.rest.gateways.Gateway.getName()", "java.util.List<java.lang.String>.add(((((gateway.getName()) + \" (\") + (gateway.getSensors().size())) + \")\"))", "net.thingplus.sample.rest.gateways.Gateway.getName()", "net.thingplus.sample.rest.gateways.Gateway.getSensors()", "gateway.getSensors().size()"], "Fixed commit": "8b7cedcf863ee1fbd5bd016e43543e13155f540a", "Url": "https://api.github.com/repos/daliworks/android-sample-app", "Date": "2015-11-23T11:56:08Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.app.Fragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((args != null) && (args.containsKey(org.ccci.gto.android.common.adapter.CursorFragmentStatePagerAdapter.ARG_ID))) { this.generateIdIndex(); final java.lang.Integer position = this.idIndex.get(args.getLong(org.ccci.gto.android.common.adapter.CursorFragmentStatePagerAdapter.ARG_ID, (-1))); if (position != null) { return position; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4925/buggy-version/gto-support-core.src.main.java.org.ccci.gto.android.common.adapter.CursorFragmentStatePagerAdapter.java", "BodyUseAPI": ["android.support.v4.util.LongSparseArray<java.lang.Integer>.get(args.getLong(org.ccci.gto.android.common.adapter.CursorFragmentStatePagerAdapter.ARG_ID, (-1)))", "android.os.Bundle.getLong(java.lang.String,int)"], "Fixed commit": "9999b02e5c44921d375f10a1ce4faafbb017067b", "Url": "https://api.github.com/repos/CruGlobal/android-gto-support", "Date": "2016-04-26T22:04:42Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isAdded()) && (isResumed())) { displayVideo(file); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4301/buggy-version/src.main.java.com.kenny.openimgur.fragments.PopupImageDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "4c38fc21b14b78af0b49a94b8c1a32506996637e", "Url": "https://api.github.com/repos/Kennyc1012/Opengur", "Date": "2015-03-14T13:41:56Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(de.greenrobot.event.EventBus.getDefault().isRegistered(this))) { de.greenrobot.event.EventBus.getDefault().register(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4301/buggy-version/src.main.java.com.kenny.openimgur.activities.UploadActivity.java", "BodyUseAPI": [], "Fixed commit": "4c38fc21b14b78af0b49a94b8c1a32506996637e", "Url": "https://api.github.com/repos/Kennyc1012/Opengur", "Date": "2015-03-14T13:41:56Z"},
{"Line": "=>910", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kenny.openimgur.activities.ViewActivity.BrowsingAdapter.getImgurItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(imgurObj.getRedditLink())) { com.kenny.openimgur.util.LogUtil.w(com.kenny.openimgur.activities.TAG, \"Item does not have a reddit link\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4301/buggy-version/src.main.java.com.kenny.openimgur.activities.ViewActivity.java", "BodyUseAPI": [], "Fixed commit": "4c38fc21b14b78af0b49a94b8c1a32506996637e", "Url": "https://api.github.com/repos/Kennyc1012/Opengur", "Date": "2015-03-14T13:41:56Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((biome.biomeID) == 160) && ((this) instanceof rtg.world.biome.realistic.vanilla.RealisticBiomeVanillaRedwoodTaigaHills)) { rtg.world.biome.realistic.RealisticBiomeBase.arrRealisticBiomeIds[161] = this; }else { rtg.world.biome.realistic.RealisticBiomeBase.arrRealisticBiomeIds[biome.biomeID] = this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7702/buggy-version/src.main.java.rtg.world.biome.realistic.RealisticBiomeBase.java", "BodyUseAPI": [], "Fixed commit": "68135e3c6b4c65a6c6abde17dce8bb9e72eb0fb6", "Url": "https://api.github.com/repos/KeepOnDigging/Realistic-Terrain-Generation", "Date": "2016-01-13T01:35:40Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((first) != null) { first.setPrevious(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8014/buggy-version/DoublyLinkedLists.PatientList.java", "BodyUseAPI": [], "Fixed commit": "34713e27388d29d4597166764b2f17f403e9def1", "Url": "https://api.github.com/repos/BBK-PiJ-2014-23/D7-2", "Date": "2015-01-12T20:03:20Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((!(entity instanceof net.minecraft.entity.EntityLivingBase)) && (!(entity instanceof net.minecraft.entity.projectile.EntityArrow))) && (!(entity instanceof micdoodle8.mods.galacticraft.core.entities.EntityArrowGC))) { return entity.isBurning(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6719/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.util.WorldUtil.java", "BodyUseAPI": ["net.minecraft.entity.Entity.isBurning()"], "Fixed commit": "01dd95aeaff949d36e2d9878ed0afbbe34dd103b", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2015-02-08T02:25:07Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((worldGC.hasBreathableAtmosphere()) || (worldGC.isGasPresent(IAtmosphericGas.OXYGEN))) return entity.isBurning();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6719/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.util.WorldUtil.java", "BodyUseAPI": [], "Fixed commit": "01dd95aeaff949d36e2d9878ed0afbbe34dd103b", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2015-02-08T02:25:07Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.egit.github.core.event.Event.getPayload()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((payload.getDownload()) != null) { return payload.getDownload().getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/9175/buggy-version/src.com.gh4a.adapter.FeedAdapter.java", "BodyUseAPI": ["payload.getDownload().getName()", "org.eclipse.egit.github.core.event.DownloadPayload.getDownload()"], "Fixed commit": "ea85523901d0e96379bb9e070a522c48a84a69ef", "Url": "https://api.github.com/repos/maniac103/gh4a", "Date": "2014-01-23T14:45:47Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"Dalvik\".equals(java.lang.System.getProperty(\"java.vm.name\"))) { try { java.lang.Class.forName(\"android.os.Build\"); if ((Build.VERSION.SDK_INT) != 0) { return new retrofit2.Platform.Android(); } } catch (java.lang.ClassNotFoundException ignored) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/443/buggy-version/retrofit.src.main.java.retrofit2.Platform.java", "BodyUseAPI": [], "Fixed commit": "07fb21db0921c99d17193f5df61dbd0d0068e810", "Url": "https://api.github.com/repos/baron1405/retrofit", "Date": "2016-12-01T22:20:23Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mContext) != null) { android.net.ConnectivityManager connectivityManager = ((android.net.ConnectivityManager) (mContext.getSystemService(Context.CONNECTIVITY_SERVICE))); return connectivityManager.getActiveNetworkInfo(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5867/buggy-version/evercamPlay.src.main.java.io.evercam.androidapp.utils.DataCollector.java", "BodyUseAPI": [], "Fixed commit": "113eda8103a01ba4f25eb10d316f747f188f5763", "Url": "https://api.github.com/repos/evercam/evercam-android", "Date": "2015-12-01T10:18:09Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((SharingActivity.evercamCamera) != null) { io.evercam.androidapp.sharing.SharingStatus status = new io.evercam.androidapp.sharing.SharingStatus(SharingActivity.evercamCamera.isDiscoverable(), SharingActivity.evercamCamera.isPublic()); updateSharingStatusUi(status); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5867/buggy-version/evercamPlay.src.main.java.io.evercam.androidapp.sharing.SharingListFragment.java", "BodyUseAPI": [], "Fixed commit": "113eda8103a01ba4f25eb10d316f747f188f5763", "Url": "https://api.github.com/repos/evercam/evercam-android", "Date": "2015-12-01T10:18:09Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iterator.hasNext()) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4386/buggy-version/src.main.java.com.twilio.sdk.resource.NextGenListResource.java", "BodyUseAPI": [], "Fixed commit": "6701ce53a9c7389b316d9602953922ca52505f08", "Url": "https://api.github.com/repos/twilio/twilio-java", "Date": "2015-12-08T19:42:40Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasNextPage())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4386/buggy-version/src.main.java.com.twilio.sdk.resource.NextGenListResource.java", "BodyUseAPI": [], "Fixed commit": "6701ce53a9c7389b316d9602953922ca52505f08", "Url": "https://api.github.com/repos/twilio/twilio-java", "Date": "2015-12-08T19:42:40Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { webView.getSettings().setMixedContentMode(WebSettings.MIXED_CONTENT_COMPATIBILITY_MODE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4381/buggy-version/ReactAndroid.src.main.java.com.facebook.react.views.webview.ReactWebViewManager.java", "BodyUseAPI": [], "Fixed commit": "29ebd0bcdb87ba908508b33ad4362d933f9ce91a", "Url": "https://api.github.com/repos/the-mx-group/react-native", "Date": "2016-07-11T15:32:17Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.micro.maintainance.task.service.CandidateMaintenanceLocalServiceUtil.getCandidateMaintenaceTask(candidateEntry.getCandidateEntryId(),long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (existingCandidateMaintenance == null) { com.liferay.micro.maintainance.task.model.CandidateMaintenance candidateMaintenance = com.liferay.micro.maintainance.task.service.CandidateMaintenanceLocalServiceUtil.addCandidateMaintenance(candidateEntry.getCandidateEntryId(), taskId); com.liferay.micro.maintainance.analysis.model.AnalysisEntry analysisEntry = com.liferay.micro.maintainance.analysis.service.AnalysisEntryLocalServiceUtil.addAnalysisEntry(userId, candidateMaintenance.getCandidateMaintenanceId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4352/buggy-version/modules.micro-maintainance-candidate.micro-maintainance-candidate-service.src.main.java.com.liferay.micro.maintainance.candidate.service.impl.CandidateEntryLocalServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "7afe40b8001b7510521c7a2e58b9fa3b3288999a", "Url": "https://api.github.com/repos/hudakl/OWXP", "Date": "2017-03-28T09:29:52Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((action) == null) { loadMap(map); }else if (action.equals(\"aggregate_profile\")) { loadProfileMap(map); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3160/buggy-version/app.src.main.java.com.example.mapdemo.MapDemoActivity.java", "BodyUseAPI": [], "Fixed commit": "4599dbafc6960dc349bc7dca6941191646b8741e", "Url": "https://api.github.com/repos/tajj/Contribute", "Date": "2017-08-03T20:26:37Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.containingItems[1].stackSize) < 12) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/9119/buggy-version/src.main.java.com.mjr.extraplanets.tile.machines.TileEntityBasicSolarEvaporationChamber.java", "BodyUseAPI": [], "Fixed commit": "f8f5f2e527b9c71c4fbf3922e4392f72d7197fff", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2017-09-03T00:33:54Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.containingItems[1].stackSize) < 3) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/9119/buggy-version/src.main.java.com.mjr.extraplanets.tile.machines.TileEntityBasicChemicalInjector.java", "BodyUseAPI": [], "Fixed commit": "f8f5f2e527b9c71c4fbf3922e4392f72d7197fff", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2017-09-03T00:33:54Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.containingItems[2].stackSize) < 6) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/9119/buggy-version/src.main.java.com.mjr.extraplanets.tile.machines.TileEntityBasicChemicalInjector.java", "BodyUseAPI": [], "Fixed commit": "f8f5f2e527b9c71c4fbf3922e4392f72d7197fff", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2017-09-03T00:33:54Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (it.italiangrid.portal.registration.dirac.server.DiracRegistration.conn.isClosed()) it.italiangrid.portal.registration.dirac.server.DiracRegistration.conn = openConnetion();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6149/buggy-version/src.main.java.it.italiangrid.portal.registration.dirac.server.DiracRegistration.java", "BodyUseAPI": [], "Fixed commit": "e6d9b18a4193f9bc4f0f2c8e2cfab1b787c147a7", "Url": "https://api.github.com/repos/italiangrid/IGIPortalRegistration", "Date": "2013-08-07T12:29:25Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.exists()) file.delete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8250/buggy-version/src.main.java.com.github.andyshao.reflect.ClassOperation.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "830173cce6aa231aa2015fac4faef81d14921a22", "Url": "https://api.github.com/repos/Andy-Shao/Gear", "Date": "2016-02-12T10:39:01Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (imax == (-1)) { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8675/buggy-version/src.main.java.org.la4j.matrix.AbstractMatrix.java", "BodyUseAPI": [], "Fixed commit": "e4962fbdac776bd329fb0f45116d6bce8664fe60", "Url": "https://api.github.com/repos/ewaldgrusk/la4j", "Date": "2013-08-21T05:51:39Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.diamond.scisoft.analysis.dataset.AbstractDataset.toImag(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bi != 0) { return r; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1001/buggy-version/uk.ac.diamond.scisoft.analysis.src.uk.ac.diamond.scisoft.analysis.dataset.Comparisons.java", "BodyUseAPI": [], "Fixed commit": "8ed96afac12890ef9ba8a38c5a6e75ac857abdc1", "Url": "https://api.github.com/repos/DawnScience/scisoft-core", "Date": "2013-12-17T15:19:41Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mongodb.client.MongoCollection<org.bson.Document>.count()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (numDocs != 0) { java.lang.String json = collection.find().first().toJson(); approxDiskCost = (json.getBytes().length) * numDocs; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/149/buggy-version/contrib.storage-mongo.src.main.java.org.apache.drill.exec.store.mongo.MongoGroupScan.java", "BodyUseAPI": [], "Fixed commit": "fd7a42a3ff2abfb06a81bc64ba35fd8dab0854bf", "Url": "https://api.github.com/repos/jaltekruse/incubator-drill", "Date": "2016-01-01T09:09:29Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (positionOf10thSlash != (-1)) { java.lang.String path = newPageUrl.substring(positionOf10thSlash); if (pathMatcher.match(linkPatter, path)) { urlsToCrawl.add(new org.xcolab.utils.sitemonitor.UrlToCrawl(newPageUrl, (level + 1), crawlConfig)); break; }else { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5006/buggy-version/other.site-monitor.src.main.java.org.xcolab.utils.sitemonitor.SiteMonitor.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "7e491061497025ecc1130188faababefd9231e37", "Url": "https://api.github.com/repos/CCI-MIT/XCoLab", "Date": "2014-11-16T00:25:09Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<javax.swing.JComboBox<java.lang.String>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((printer.getItemCount()) > 1) { printer.setSelectedIndex(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6009/buggy-version/src.org.montsuqi.client.PrinterConfigPanel.java", "BodyUseAPI": ["javax.swing.JComboBox.setSelectedIndex(int)"], "Fixed commit": "70be999637bed6428f5b26cd587ad0caa74d7fbc", "Url": "https://api.github.com/repos/montsuqi/monsiaj", "Date": "2017-04-12T05:45:55Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (error != null) { modelAndView.addObject(\"error\", \"Incorect sign in data!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6589/buggy-version/web.src.main.java.com.softserveinc.ita.jresume.web.controller.LoginController.java", "BodyUseAPI": [], "Fixed commit": "779fcfee6faa5f5779d5a557e15a6da2a8b286a1", "Url": "https://api.github.com/repos/Lira999/JResume", "Date": "2015-09-22T07:25:06Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.address.model.person.NameContainsKeywordsPredicate.getSelectedTags()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tags.size()) != 0) { java.lang.String selectedTags = \" Selected tags:\"; for (java.lang.String eachTag : tags) { selectedTags += \" \" + eachTag; } return new seedu.address.logic.commands.CommandResult(((getMessageForPersonListShownSummary(model.getFilteredPersonList().size())) + selectedTags)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8997/buggy-version/src.main.java.seedu.address.logic.commands.FindCommand.java", "BodyUseAPI": [], "Fixed commit": "a3cf0a4ea2978fcb8ed233830af192081715294b", "Url": "https://api.github.com/repos/CeliaHuuuu/main", "Date": "2017-10-10T12:18:19Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tracking)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1623/buggy-version/src.net.codechunk.speedofsound.service.SoundService.java", "BodyUseAPI": [], "Fixed commit": "fed296588e017f92fdb754e8795fa690da78470e", "Url": "https://api.github.com/repos/tlringer/speedofsound", "Date": "2016-03-17T20:32:10Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (colorON) { if ((whichColor) <= 5) { whichColor = (whichColor) + 1; }else { whichColor = 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8272/buggy-version/Painter.java", "BodyUseAPI": [], "Fixed commit": "0ce157af57da3d0a316ffcf92a5fafb8d630088c", "Url": "https://api.github.com/repos/SciVis2016-LP-JvL/StableFluids", "Date": "2016-04-05T16:26:55Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bytes[offset]) == (types.VARCHAR.TERM)) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/9060/buggy-version/src.main.java.types.VARCHAR.java", "BodyUseAPI": [], "Fixed commit": "756abb6dcd3d241d775f167d4c992d997102bc6e", "Url": "https://api.github.com/repos/ndimiduk/serialization-play", "Date": "2013-04-04T23:38:27Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(strValidAnswersCommaSeparated.startsWith(\",\"))) { strValidAnswersCommaSeparated = \",\" + strValidAnswersCommaSeparated; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2558/buggy-version/src.PresentationUtilityCommon.PresentationUtility.java", "BodyUseAPI": [], "Fixed commit": "9238e23dfdc87d5565d1eb1647ba1a60cfc2e5a9", "Url": "https://api.github.com/repos/NAVY11/Demo_Ankh", "Date": "2015-03-30T06:41:51Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(strValidAnswersCommaSeparated.endsWith(\",\"))) { strValidAnswersCommaSeparated = strValidAnswersCommaSeparated + \",\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2558/buggy-version/src.PresentationUtilityCommon.PresentationUtility.java", "BodyUseAPI": [], "Fixed commit": "9238e23dfdc87d5565d1eb1647ba1a60cfc2e5a9", "Url": "https://api.github.com/repos/NAVY11/Demo_Ankh", "Date": "2015-03-30T06:41:51Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((batEngine) != null) { java.util.HashMap tmp = new java.util.HashMap(); tmp.put(batEngine.getDomeName(), batchDome); data.put(\"batDomes\", tmp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3667/buggy-version/src.main.java.org.agmip.ui.quadui.QuadCmdLine.java", "BodyUseAPI": [], "Fixed commit": "3c1773095daa3dbaf9ae6342a3f258a32e840bcd", "Url": "https://api.github.com/repos/agmip/quadui", "Date": "2015-08-28T17:09:31Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dpfmanager.shell.core.DPFManagerProperties.getPropertiesValue(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(new java.io.File(dir).exists())) { return dpfmanager.shell.core.DPFManagerProperties.getConfigDir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3154/buggy-version/src.main.java.dpfmanager.shell.core.DPFManagerProperties.java", "BodyUseAPI": [], "Fixed commit": "a13c8ee0ad65a38a61bb7055c8bc1f707cab3443", "Url": "https://api.github.com/repos/EasyinnovaSL/DPFManager", "Date": "2016-04-28T07:46:50Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bestThoughtResult == 0) && (searchLevelOfResult > 1)) { java.lang.System.out.flush(); java.lang.System.out.println(\"D\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5610/buggy-version/Pzyber.Loki.Minesweeper.Loki.java", "BodyUseAPI": [], "Fixed commit": "ae29cae690a1cb10ca9b42c040052889ce5b95ec", "Url": "https://api.github.com/repos/Ulmstedt/Minesweeper", "Date": "2016-03-12T21:38:14Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity().getClass()) == (com.firebase.petti.petti.BarkActivity.class)) { getFragmentManager().popBackStack(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3833/buggy-version/app.src.main.java.com.firebase.petti.petti.NeighborDogsFragment.java", "BodyUseAPI": [], "Fixed commit": "be2f9262a6d2a8aeb998461ccaef1d3a3d54eee4", "Url": "https://api.github.com/repos/GoogleWorkShop/Petti", "Date": "2016-12-17T11:30:32Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.maven.project.ProjectBuilder.build(org.apache.maven.model.building.ModelSource,org.apache.maven.project.ProjectBuildingRequest)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (((result != null) && ((result.getDependencyResolutionResult()) != null)) && (!(result.getDependencyResolutionResult().getCollectionErrors().isEmpty()))) { java.lang.Exception depedencyResolutionException = result.getDependencyResolutionResult().getCollectionErrors().get(0); if (depedencyResolutionException != null) throw new org.kie.scanner.embedder.MavenEmbedderException(depedencyResolutionException.getMessage(), depedencyResolutionException); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4355/buggy-version/kie-ci.src.main.java.org.kie.scanner.embedder.MavenEmbedder.java", "BodyUseAPI": ["org.apache.maven.project.ProjectBuildingResult.getDependencyResolutionResult()", "result.getDependencyResolutionResult().getCollectionErrors().get(int)", "result.getDependencyResolutionResult().getCollectionErrors()"], "Fixed commit": "4749ccec30e6245b69cff3b1090235b52ef2b01c", "Url": "https://api.github.com/repos/droolsjbpm/drools", "Date": "2013-10-15T18:47:05Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isStop()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1688/buggy-version/GdcServerManager.src.daemon.EncryptDaemon.java", "BodyUseAPI": [], "Fixed commit": "e50f2e312d31303e5d9548c2e76e44789aec7c14", "Url": "https://api.github.com/repos/jdeverdun/GdcServerManager", "Date": "2013-05-13T12:48:49Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context instanceof android.app.Application) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1621/buggy-version/DebugHelper.src.main.java.chao.app.uidebug.UIDebugHelperImp.java", "BodyUseAPI": [], "Fixed commit": "d27349db6b9674d3f0101cae98d19b3f215775ba", "Url": "https://api.github.com/repos/chaooooooo/DebugHelper", "Date": "2017-06-09T10:11:45Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cz.cesnet.shongo.controller.api.AllocationStateReport.ResourceNotFound.hasHigherPriorityThan(userError)) { java.lang.String parentId = ((java.lang.String) (parentReports.lastElement().get(cz.cesnet.shongo.controller.api.ID))); if (parentId.equals(AllocationStateReportMessages.ALLOCATING_RECORDING_SERVICE)) { userError = new cz.cesnet.shongo.controller.api.AllocationStateReport.ResourceNotFound(cz.cesnet.shongo.controller.api.AllocationStateReport.ResourceNotFound.Type.RECORDING); }else { userError = new cz.cesnet.shongo.controller.api.AllocationStateReport.ResourceNotFound(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4248/buggy-version/shongo-controller-api.src.main.java.cz.cesnet.shongo.controller.api.AllocationStateReport.java", "BodyUseAPI": [], "Fixed commit": "12a2c55322a1ab0d2770912ab9fcdd95da91f04d", "Url": "https://api.github.com/repos/shongo/shongo", "Date": "2014-09-02T13:08:16Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.ListPreference.getSummary()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(baseSummary)) return baseSummary; else return java.lang.String.format(baseSummary.toString(), getEntry());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6850/buggy-version/src.net.evendanan.pushingpixels.ListPreference.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,getEntry())", "java.lang.CharSequence.toString()"], "Fixed commit": "9b27ffbef728af8e7b18f63ee64ff499675a2f43", "Url": "https://api.github.com/repos/AnySoftKeyboard/AnySoftKeyboard", "Date": "2013-06-22T02:32:23Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<de.schildbach.pte.dto.Trip.Leg>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((pub.getDepartureDelay()) != null) { response += (\", +\" + ((pub.getDepartureDelay()) / 60000.0)) + \" mins delay\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5697/buggy-version/src.api.external.transit.JSONConverter.java", "BodyUseAPI": ["Trip.Public.getDepartureDelay()"], "Fixed commit": "0f432a31824f93586781d5d465c258c2fbf9842c", "Url": "https://api.github.com/repos/madhavrathi/susi_server", "Date": "2017-05-31T19:14:13Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pub.getArrivalDelay()) != null) { legObj.putOpt(\"departureDelay\", ((pub.getDepartureDelay()) / 60000.0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5697/buggy-version/src.api.external.transit.JSONConverter.java", "BodyUseAPI": ["Trip.Public.getDepartureDelay()", "org.json.JSONObject.putOpt(java.lang.String,((pub.getDepartureDelay()) / 60000.0))"], "Fixed commit": "0f432a31824f93586781d5d465c258c2fbf9842c", "Url": "https://api.github.com/repos/madhavrathi/susi_server", "Date": "2017-05-31T19:14:13Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<de.schildbach.pte.dto.Trip.Leg>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((pub.getArrivalDelay()) != null) { response += (\", +\" + ((pub.getArrivalDelay()) / 60000.0)) + \" mins delay\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5697/buggy-version/src.api.external.transit.JSONConverter.java", "BodyUseAPI": ["Trip.Public.getArrivalDelay()"], "Fixed commit": "0f432a31824f93586781d5d465c258c2fbf9842c", "Url": "https://api.github.com/repos/madhavrathi/susi_server", "Date": "2017-05-31T19:14:13Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pub.getArrivalDelay()) != null) { legObj.putOpt(\"arrivalDelay\", ((pub.getArrivalDelay()) / 60000.0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5697/buggy-version/src.api.external.transit.JSONConverter.java", "BodyUseAPI": ["Trip.Public.getArrivalDelay()", "org.json.JSONObject.putOpt(java.lang.String,((pub.getArrivalDelay()) / 60000.0))"], "Fixed commit": "0f432a31824f93586781d5d465c258c2fbf9842c", "Url": "https://api.github.com/repos/madhavrathi/susi_server", "Date": "2017-05-31T19:14:13Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (from.getDirection().equals(\"RIGHT\")) { super.setDirection(\"UP\"); if ((from.getDrawID()) == 0) { startX = ((from.getStartX()) + (from.getLength())) - ((super.getLength()) / 2); startY = ((from.getStartY()) - (super.getLength())) + (TRACK_WIDTH); }else if ((from.getDrawID()) == 1) { startX = ((from.getStartX()) + ((from.getLength()) / 2)) - ((super.getLength()) / 2); startY = ((from.getStartY()) - (super.getLength())) + (TRACK_WIDTH); }else if ((from.getDrawID()) == 4) { startX = ((from.getStartX()) + ((from.getLength()) / 2)) - ((super.getLength()) / 2); startY = from.getStartY(); }else if ((from.getDrawID()) == 6) { startX = ((from.getStartX()) + ((from.getLength()) / 2)) - ((super.getLength()) / 2); startY = from.getStartY(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7406/buggy-version/src.view.Drawable.section_types.Quart3.java", "BodyUseAPI": ["view.Drawable.section_types.DefaultTrack.getLength()", "view.Drawable.section_types.DefaultTrack.getStartY()", "view.Drawable.section_types.DefaultTrack.getDrawID()", "view.Drawable.section_types.DefaultTrack.getStartX()", "view.Drawable.section_types.DefaultTrack.getDrawID()", "view.Drawable.section_types.DefaultTrack.getStartX()", "view.Drawable.section_types.DefaultTrack.getLength()", "view.Drawable.section_types.DefaultTrack.getStartY()", "view.Drawable.section_types.DefaultTrack.getLength()", "view.Drawable.section_types.DefaultTrack.getDrawID()", "view.Drawable.section_types.DefaultTrack.getLength()", "view.Drawable.section_types.DefaultTrack.getStartX()", "view.Drawable.section_types.DefaultTrack.getDrawID()", "view.Drawable.section_types.DefaultTrack.getStartY()", "view.Drawable.section_types.DefaultTrack.getStartY()", "view.Drawable.section_types.DefaultTrack.getStartX()"], "Fixed commit": "b89518f784837b50993e1babdc125eba93d81621", "Url": "https://api.github.com/repos/vanhunick/Train-Simulator", "Date": "2016-07-21T00:43:21Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((optimization) != null) optimization.optimize(cfg);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/62/buggy-version/src.submit.MySolver.java", "BodyUseAPI": [], "Fixed commit": "747dad6333c02c491a13c547a1214a680afe628f", "Url": "https://api.github.com/repos/aegisxlii/cs243-lab2", "Date": "2013-02-22T21:35:17Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.ws.rs.ext.ReaderInterceptorContext.getGenericType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tools.UniformementRepresentable.getWrapperTypes().contains(expectedType)) { java.lang.System.out.println(\"It's a general type, don't need lifting.\"); }else { adapters.InterfaceToClass adpt = new adapters.InterfaceToClass(((java.lang.Class<?>) (expectedType)).getPackage()); lifting.ClientLifterCaller lifterCaller = new lifting.ClientLifterCaller(context.getInputStream(), expectedType, adpt); context.setInputStream(lifterCaller.callStream()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8656/buggy-version/Projectv1.LiftingAlgorithmClient.src.interceptor.LiftingInterceptor.java", "BodyUseAPI": [], "Fixed commit": "1276f667f139794142ceb970e0b2bef136dd73b9", "Url": "https://api.github.com/repos/zerbino/cxfemn", "Date": "2014-02-22T16:33:59Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (play.modules.betterlogs.BetterLogsPlugin.argsPrefix)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8509/buggy-version/src.play.modules.betterlogs.BetterLogsPlugin.java", "BodyUseAPI": [], "Fixed commit": "2bed6cef8764c13a2dcc758e249158ba23f5d311", "Url": "https://api.github.com/repos/greenlaw110/BetterLogs", "Date": "2013-10-10T04:52:52Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (downloadQueue.isEmpty()) { displayNews(); }else { downloadItemDetail(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6584/buggy-version/HackerNews.app.src.main.java.com.jpac.hackernews.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "2a2e7ff6659213e2beee304950b5f0c6aacbc3bd", "Url": "https://api.github.com/repos/kishido05/hackernewsreader-jpac", "Date": "2015-07-22T06:18:57Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dir < 0) { dir += 6; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4873/buggy-version/common.buildcraft.core.statements.StatementParameterDirection.java", "BodyUseAPI": [], "Fixed commit": "e853ceb5d61a183e54bf421dbabac47842e9f452", "Url": "https://api.github.com/repos/BuildCraft/BuildCraft", "Date": "2017-11-11T12:08:03Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((configuration.getClassLoader()) != null) { classLoader = configuration.getClassLoader(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5636/buggy-version/src.main.java.org.walkmod.maven.providers.ClassLoaderConfigurationProvider.java", "BodyUseAPI": ["org.walkmod.conf.entities.Configuration.getClassLoader()"], "Fixed commit": "979ffcc957841c5c8a12c458f4dc3b1ffcbf7096", "Url": "https://api.github.com/repos/rpau/walkmod-maven-plugin", "Date": "2014-06-20T16:52:42Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ListIterator<org.masukomi.aspirin.core.store.queue.QueueInfo>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((qi.getResultInfo()) == null) || (qi.getResultInfo().isEmpty())) qi.setResultInfo(\"Delivery is out of time or attempt.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8621/buggy-version/src.main.java.org.masukomi.aspirin.core.store.queue.SimpleQueueStore.java", "BodyUseAPI": ["org.masukomi.aspirin.core.store.queue.QueueInfo.setResultInfo(java.lang.String)"], "Fixed commit": "face01840f61cc6a7c056af4e81a7d8ae64dc632", "Url": "https://api.github.com/repos/lsolova/aspirin", "Date": "2011-05-27T06:44:22Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bundle.containsKey(\"dk.nodes.nstack.appId\")) && (bundle.containsKey(\"dk.nodes.nstack.apiKey\"))) { java.lang.String appId = bundle.getString(\"dk.nodes.nstack.appId\"); java.lang.String apiKey = bundle.getString(\"dk.nodes.nstack.apiKey\"); dk.nodes.nstack.NStack.init(getContext(), appId, apiKey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2351/buggy-version/app.src.main.java.dk.nodes.nstack.NStackInitProvider.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String)", "android.os.Bundle.getString(java.lang.String)"], "Fixed commit": "dcd2057196d156c782031583443afdc23ec9f3c3", "Url": "https://api.github.com/repos/nodes-android/nstack", "Date": "2017-05-15T15:35:45Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (out != null) { this.flushAndCloseOutStream(out); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6828/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.PropertyCacheFile.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.PropertyCacheFile.flushAndCloseOutStream(java.io.FileOutputStream)"], "Fixed commit": "6da29f57ee41b5e60674280c1c6dbd8dbe4c5101", "Url": "https://api.github.com/repos/precoder/checkstyle", "Date": "2015-04-07T23:15:15Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (name != null) { for (alias.Alias alias : mAliases) { if (alias.getList().equalsIgnoreCase(name)) { aliasList.addAlias(alias); } } mAliasListMap.put(name, aliasList); addListener(aliasList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6691/buggy-version/src.alias.AliasModel.java", "BodyUseAPI": ["java.util.Map<java.lang.String, alias.AliasList>.put(java.lang.String,alias.AliasList)", "alias.getList().equalsIgnoreCase(java.lang.String)"], "Fixed commit": "234e313b7a76ee13a70ffaa7cff239dbf7cfca4c", "Url": "https://api.github.com/repos/grumble1965/sdrtrunk", "Date": "2017-02-21T01:19:47Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((a instanceof java.util.RandomAccess) && (b instanceof java.util.RandomAccess)) { if (((a == b) || (a == null)) || (b == null)) { return a == b ? 0 : a == null ? -1 : 1; } int res = 0; for (int i = 0; i < (java.lang.Math.min(a.size(), b.size())); i++) { res += comparator.compare(a.get(i), b.get(i)); } res += (a.size()) - (b.size()); return res; }else { return com.gmail.socraticphoenix.collect.Items.compare(((java.util.Collection<T>) (a)), b, comparator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3645/buggy-version/src.main.java.com.gmail.socraticphoenix.collect.Items.java", "BodyUseAPI": ["java.util.List<T>.size()", "java.util.Comparator<T>.compare(T,T)", "java.util.List<T>.size()", "java.util.List<T>.get(int)", "java.util.List<T>.size()", "java.lang.Math.min(int,int)", "java.util.List<T>.get(int)", "java.util.List<T>.size()", "com.gmail.socraticphoenix.collect.Items.compare(java.util.List<T>,java.util.List<T>,java.util.Comparator<T>)"], "Fixed commit": "64f5f5eb70d99a4ca8845ef2050ef2ec1a32993a", "Url": "https://api.github.com/repos/PlutoPowered/Collect", "Date": "2017-03-14T05:24:29Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.util.List<com.github.setial.intellijjavadocs.model.JavaDocTag>>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"return\".equals(name)) { oldTag = oldTagsEntry.get(0); }else { oldTag = com.github.setial.intellijjavadocs.utils.JavaDocUtils.findOldTag(oldTagsEntry, tag.getValue(), tag.getRefParam()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/9071/buggy-version/src.com.github.setial.intellijjavadocs.utils.JavaDocUtils.java", "BodyUseAPI": [], "Fixed commit": "4e5f012a32fc300ae8462a68ac8d0291f04b4072", "Url": "https://api.github.com/repos/setial/intellij-javadocs", "Date": "2013-01-08T10:14:09Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<me.libraryaddict.disguise.DisguiseTypes.DisguiseSound.SoundType, org.bukkit.Sound>.get(me.libraryaddict.disguise.DisguiseTypes.DisguiseSound.SoundType)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (s == (org.bukkit.Sound.BLAZE_BREATH)) soundName = \"mob.blaze.breathe\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4999/buggy-version/src.me.libraryaddict.disguise.DisguiseTypes.DisguiseSound.java", "BodyUseAPI": [], "Fixed commit": "f1b76f622bb1041a7d6f0615b356f42912a62f64", "Url": "https://api.github.com/repos/libraryaddict/LibsDisguises", "Date": "2013-05-29T18:20:50Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b == 0) return a;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7487/buggy-version/src.kr.hs.sshs.JavaPTS.Blob_Labeling.java", "BodyUseAPI": [], "Fixed commit": "4de083c6feb510575c957ee36273484d28eac55a", "Url": "https://api.github.com/repos/stephen422/javaPTS", "Date": "2013-10-03T01:05:58Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.habittracker2017.viewTodayFragment.allHabits.get(position).getLastEvent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (todayEvent != null) { if (android.text.format.DateUtils.isToday(todayEvent.getDate().getTime())) { android.widget.Toast.makeText(getContext(), \"You have already done this habit today!\", Toast.LENGTH_LONG).show(); }else { android.content.Intent intent = new android.content.Intent(getContext(), com.example.habittracker2017.CreateEventActivity.class); intent.putExtra(\"Habit\", position); getContext().startActivity(intent); } }else { android.content.Intent intent = new android.content.Intent(getContext(), com.example.habittracker2017.CreateEventActivity.class); intent.putExtra(\"Habit\", position); getContext().startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5499/buggy-version/app.src.main.java.com.example.habittracker2017.viewTodayFragment.java", "BodyUseAPI": ["android.text.format.DateUtils.isToday(todayEvent.getDate().getTime())", "todayEvent.getDate().getTime()", "com.example.habittracker2017.HabitEvent.getDate()"], "Fixed commit": "8dc00a1f4ced89d2d3b768ff925cc44e4070cc41", "Url": "https://api.github.com/repos/CMPUT301F17T16/HabitTracker2017", "Date": "2017-12-03T11:26:23Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (color != null) { team.setPrefix(color); team.setSuffix(ChatColor.RESET.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1021/buggy-version/src.main.java.org.bitbucket.ucchy.fnafim.game.ScoreboardDisplay.java", "BodyUseAPI": ["org.bukkit.scoreboard.Team.setPrefix(java.lang.String)"], "Fixed commit": "419e31585818b17fcba3527e5bd277123a9ab839", "Url": "https://api.github.com/repos/ucchyocean/Five-Nights-at-Freddy-s-in-Minecraft", "Date": "2015-05-10T14:48:47Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.thymeleaf.standard.expression.StandardExpressionProcessor.processExpression(org.thymeleaf.Arguments,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (result == null) return defaultValue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/899/buggy-version/datatables-thymeleaf.src.main.java.com.github.dandelion.datatables.thymeleaf.util.Utils.java", "BodyUseAPI": [], "Fixed commit": "84f3f133f3295280890b2f5fe8a501ad70ea93e8", "Url": "https://api.github.com/repos/dandelion/dandelion-datatables", "Date": "2013-04-05T16:58:35Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (attachmentPath != null) i.putExtra(Intent.EXTRA_STREAM, android.net.Uri.parse(attachmentPath));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5225/buggy-version/app.src.main.java.com.wfcrc.utils.FormUtils.java", "BodyUseAPI": ["android.content.Intent.putExtra(Intent.EXTRA_STREAM,android.net.Uri.parse(attachmentPath))", "android.net.Uri.parse(java.lang.String)"], "Fixed commit": "091d73dedf26de5abe45a6a0b3f4fca5ccca328c", "Url": "https://api.github.com/repos/malonsolopez/wfcrc-android", "Date": "2017-08-22T02:06:44Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sharedPreferences.contains(key))) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1901/buggy-version/app.src.main.java.ru.inno.earthquakes.model.settings.SettingsRepository.java", "BodyUseAPI": [], "Fixed commit": "d44d5c85fec5b5dabd4bad37067960a6949b028c", "Url": "https://api.github.com/repos/Gaket/Earthquakes", "Date": "2017-08-10T16:50:52Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mongodb.client.MongoCursor<T>.tryNext()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (proxiedNext == null) { return null; }else { return mapper.apply(proxiedNext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5934/buggy-version/driver.src.main.com.mongodb.MongoMappingCursor.java", "BodyUseAPI": ["com.mongodb.Function<T, U>.apply(T)"], "Fixed commit": "ca66247d3c201dd30ee44052758ce05765c964dc", "Url": "https://api.github.com/repos/jyemin/mongo-java-driver", "Date": "2014-11-13T03:50:17Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.masterthought.cucumber.util.Util.itemExists(elements)) { results = net.masterthought.cucumber.util.Util.collectScenarios(elements, scenarioStatus); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/860/buggy-version/src.main.java.net.masterthought.cucumber.json.Feature.java", "BodyUseAPI": ["net.masterthought.cucumber.util.Util.collectScenarios(net.masterthought.cucumber.json.Element[],net.masterthought.cucumber.json.Closure<java.lang.String, net.masterthought.cucumber.json.Element>)"], "Fixed commit": "044afb49cd12130f3ca5aa5c8aefa357a4664973", "Url": "https://api.github.com/repos/masterthought/cucumber-reporting", "Date": "2012-07-06T23:49:02Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.masterthought.cucumber.util.Util.itemExists(elements)) { result = elements.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/860/buggy-version/src.main.java.net.masterthought.cucumber.json.Feature.java", "BodyUseAPI": [], "Fixed commit": "044afb49cd12130f3ca5aa5c8aefa357a4664973", "Url": "https://api.github.com/repos/masterthought/cucumber-reporting", "Date": "2012-07-06T23:49:02Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((marginalNode) == null) { java.lang.System.err.println(\"Marginal reconstruction has not been performed. Cannot save distribution.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8755/buggy-version/bnkit.src.reconstruction.ASRPOG.java", "BodyUseAPI": [], "Fixed commit": "c929231f85c022164d2b1195f62c10c45f3f21c5", "Url": "https://api.github.com/repos/bodenlab/bnkit", "Date": "2017-05-15T04:54:41Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.windup.web.services.service.WindupExecutionService.getNoThrow(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (execution == null) { throw new javax.ws.rs.NotFoundException(\"Migration report not found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7809/buggy-version/services.src.main.java.org.jboss.windup.web.services.servlet.FileDefaultServlet.java", "BodyUseAPI": [], "Fixed commit": "c7762e8b9034b2bfe37830acddfa7cdf2f8a7f28", "Url": "https://api.github.com/repos/windup/windup-web", "Date": "2017-07-25T16:40:57Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (userHome.endsWith(\"/\")) { fullUserHome = userHome + (userSubdirectory); }else { fullUserHome = (userHome + \"/\") + (userSubdirectory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5565/buggy-version/src.main.java.com.github.ansell.propertyutil.PropertyUtil.java", "BodyUseAPI": [], "Fixed commit": "662da81dfaff081b5675a625325be237a11e8d55", "Url": "https://api.github.com/repos/ansell/property-util", "Date": "2014-05-28T06:53:05Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (userDir.endsWith(\"/\")) { fullUserDir = userDir + (userSubdirectory); }else { fullUserDir = (userDir + \"/\") + (userSubdirectory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5565/buggy-version/src.main.java.com.github.ansell.propertyutil.PropertyUtil.java", "BodyUseAPI": [], "Fixed commit": "662da81dfaff081b5675a625325be237a11e8d55", "Url": "https://api.github.com/repos/ansell/property-util", "Date": "2014-05-28T06:53:05Z"},
{"Line": "=>703", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (combo == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4992/buggy-version/src.fr.ujf.soctrace.tools.analyser.ted.src.fr.ujf.soctrace.tools.analyzer.ted.ui.TedMainView.java", "BodyUseAPI": [], "Fixed commit": "57b0adf22676cb47a962aaa6f496e176c6b80c1d", "Url": "https://api.github.com/repos/semteu/TED", "Date": "2015-11-24T08:49:39Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isFinishing())) { alert.setTitle(\"\u8b66\u544a\").setMessage(\"\u6642\u9593\u5207\u308c\u3067\u3059\").show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3129/buggy-version/BootCamp.app.src.main.java.com.example.android.toiletbooking.activity.MyCounter.java", "BodyUseAPI": [], "Fixed commit": "e30fefa7e37f162754885e39aa055df1149a8471", "Url": "https://api.github.com/repos/NguyenLinh208/BootCamp_ToiletBooking", "Date": "2015-07-02T01:47:53Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((interestedPeers.size()) <= (prefferedNeighbours.size())) optUnchokedNeighbour = null; else optUnchokedNeighbour = interestedPeers.get(prefferedNeighbours.size());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3634/buggy-version/src.main.java.edu.ufl.cise.p2p.PeerHandler.java", "BodyUseAPI": ["java.util.ArrayList<edu.ufl.cise.p2p.RemotePeer>.get(prefferedNeighbours.size())", "java.util.ArrayList<edu.ufl.cise.p2p.RemotePeer>.size()"], "Fixed commit": "2facf34ebb3155d272af9bc24125e924e39e5e01", "Url": "https://api.github.com/repos/ajinkya2709/Peer2Peer", "Date": "2017-04-10T07:58:02Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((map.getFirstHitMarker(mouseX, mouseY)) == null) { de.dominikmuench.twintowns.MapState.getInstance().setClickedMarker(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2104/buggy-version/src.de.dominikmuench.twintowns.TwinTownsApp.java", "BodyUseAPI": [], "Fixed commit": "bed1886cd1943a5500c3f8e8643e87a0aea86d8c", "Url": "https://api.github.com/repos/muenchdo/TwinTowns", "Date": "2015-07-29T05:41:00Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fredboat.orchestrator.Allocator.getLowestAvailableChunk()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (chunk == (-1)) { throw new java.lang.IllegalStateException(\"Can't allocate new shards! All shards are already taken.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4942/buggy-version/Orchestrator.src.main.java.fredboat.orchestrator.Allocator.java", "BodyUseAPI": [], "Fixed commit": "7f08969f91d7cf6922794fd110b9fc348aa9c133", "Url": "https://api.github.com/repos/Frederikam/FredBoat", "Date": "2017-04-28T19:49:26Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.developfreedom.logmein.DatabaseEngine.getUsernamePassword(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (user != null) { password = user.getPassword(); if ((password == null) || (password.isEmpty())) { android.widget.Toast.makeText(this, (\"Password not saved for \" + username), Toast.LENGTH_SHORT).show(); return; } try { status = networkEngine.login(username, password); } catch (java.lang.Exception e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/303/buggy-version/app.src.main.java.org.developfreedom.logmein.LoginService.java", "BodyUseAPI": ["org.developfreedom.logmein.UserStructure.getPassword()"], "Fixed commit": "ea5acd98bcf51aa02806ff1b004e470e45c946fd", "Url": "https://api.github.com/repos/DevelopFreedom/logmein-android", "Date": "2014-11-11T10:34:11Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((playerSprite.getAnimation()) != (Player.Animation.FALLING)) { playerSprite.setAnimation(Player.Animation.FALLING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/237/buggy-version/src.main.Game.java", "BodyUseAPI": ["main.Player.setAnimation(Player.Animation.FALLING)"], "Fixed commit": "a406953fd88b450eb0317fdaf554eebf3f000ace", "Url": "https://api.github.com/repos/dylanswiggett/grOw", "Date": "2014-01-19T11:08:44Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gwt.event.logical.shared.SelectionEvent<org.jboss.as.console.client.server.TreeItem>.getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (selectedItem.getElement().hasAttribute(\"token\")) { java.lang.String token = selectedItem.getElement().getAttribute(\"token\"); Console.MODULES.getPlaceManager().revealPlaceHierarchy(org.jboss.as.console.client.core.Places.fromString(token)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1147/buggy-version/standalone.src.main.java.org.jboss.as.console.client.server.LHSServerNavigation.java", "BodyUseAPI": ["org.jboss.as.console.client.server.TreeItem.getElement()", "selectedItem.getElement().getAttribute(java.lang.String)"], "Fixed commit": "bdbd8db00860b8bdbb995828f3352f5631c31d6b", "Url": "https://api.github.com/repos/heiko-braun/as7-console", "Date": "2011-03-22T11:51:08Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gwt.event.logical.shared.SelectionEvent<org.jboss.as.console.client.domain.profiles.TreeItem>.getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (selectedItem.getElement().hasAttribute(\"token\")) { java.lang.String token = selectedItem.getElement().getAttribute(\"token\"); if (token != null) { Console.MODULES.getPlaceManager().revealPlaceHierarchy(org.jboss.as.console.client.core.Places.fromString(token)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1147/buggy-version/standalone.src.main.java.org.jboss.as.console.client.domain.profiles.ProfileSection.java", "BodyUseAPI": ["selectedItem.getElement().getAttribute(java.lang.String)", "org.jboss.as.console.client.domain.profiles.TreeItem.getElement()"], "Fixed commit": "bdbd8db00860b8bdbb995828f3352f5631c31d6b", "Url": "https://api.github.com/repos/heiko-braun/as7-console", "Date": "2011-03-22T11:51:08Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((number.get(i)) == 1) { java.lang.System.out.printf(\"%d: %s\\n\", (i + 1), items.get(i).getName()); }else { java.lang.System.out.printf(\"%d: %s x%d\\n\", (i + 1), items.get(i).getName(), number.get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2621/buggy-version/src.Inventory.java", "BodyUseAPI": ["java.io.PrintStream.printf(java.lang.String,int,items.get(i).getName(),java.lang.Integer)", "items.get(i).getName()", "java.util.ArrayList<Item>.get(int)", "java.io.PrintStream.printf(java.lang.String,int,items.get(i).getName())", "java.util.ArrayList<Item>.get(int)", "items.get(i).getName()", "java.util.ArrayList<java.lang.Integer>.get(int)"], "Fixed commit": "71b16313d28a9c328938ff6480e7c001cc97da5d", "Url": "https://api.github.com/repos/kadensotek/JavaTextAdventure1", "Date": "2013-10-31T21:48:27Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (duplicate == false) { this.items.add(item); this.number.add(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2621/buggy-version/src.Inventory.java", "BodyUseAPI": [], "Fixed commit": "71b16313d28a9c328938ff6480e7c001cc97da5d", "Url": "https://api.github.com/repos/kadensotek/JavaTextAdventure1", "Date": "2013-10-31T21:48:27Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<se.sics.sim.core.Node>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((node.stateListener) != null) { node.stateListener.finish(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3832/buggy-version/sim.src.se.sics.sim.core.Simulator.java", "BodyUseAPI": ["node.stateListener.finish(se.sics.sim.core.Simulator)"], "Fixed commit": "107130d432407f4b7e3eb7f46c75294dfd475722", "Url": "https://api.github.com/repos/joakimeriksson/radio-sim", "Date": "2015-02-12T16:46:19Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<se.sics.sim.core.Node>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (node instanceof se.sics.sim.net.CC2420Node) { totalUtility = ((se.sics.sim.net.CC2420Node) (node)).getUtility(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3832/buggy-version/sim.src.se.sics.sim.core.Simulator.java", "BodyUseAPI": [], "Fixed commit": "107130d432407f4b7e3eb7f46c75294dfd475722", "Url": "https://api.github.com/repos/joakimeriksson/radio-sim", "Date": "2015-02-12T16:46:19Z"},
{"Line": "=>1140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.realTimeData.getIsCharging()) { this.realTimeData.setIsCharging(false); this.turnOffAllBypass(); this.setChargingRelay(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6862/buggy-version/src.my.chargingcontroller.DataCollector.java", "BodyUseAPI": ["my.chargingcontroller.RealTimeData.setIsCharging(boolean)"], "Fixed commit": "bc0bc36b86181b48d92c0c2d92b360ab7a3682bb", "Url": "https://api.github.com/repos/MrAlwaysRight/SeniorDesignProject", "Date": "2013-05-09T23:28:20Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((fragTitle.equals(\"Designations\")) || (fragTitle.equals(\"Gifts By Year\"))) || (fragTitle.equals(\"General Donations\"))) { menu.findItem(R.id.action_search).setVisible((!drawerOpen)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/9214/buggy-version/kardia-android.DonorApp.donorApp.src.main.java.org.lightsys.donorapp.views.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7d0a4e8bd642c105463df3d7074feb51744ea6af", "Url": "https://api.github.com/repos/LightSys/kardia", "Date": "2017-06-29T18:02:41Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.realm.Realm.getDefaultInstance()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((realm.where(com.louiscarrese.clopecounter.model.Jour.class).count()) > 0) { id = (realm.where(com.louiscarrese.clopecounter.model.Jour.class).maximumInt(\"id\")) + 1; }else { id = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6200/buggy-version/app.src.main.java.com.louiscarrese.clopecounter.business.JourBusiness.java", "BodyUseAPI": ["realm.where(com.louiscarrese.clopecounter.model.Jour.class).maximumInt(java.lang.String)", "io.realm.Realm.where(java.lang.Class)"], "Fixed commit": "d7c05f5aa8e099d78449b89a5f84ace88b077a10", "Url": "https://api.github.com/repos/louiscarrese/ClopeCounter", "Date": "2015-08-08T09:20:44Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((columnNames) == null) { org.jdbdt.MetaData md = getMetaData(); int nCols = md.getColumnCount(); columnNames = new java.lang.String[nCols]; for (int i = 0; i < nCols; i++) { columnNames[i] = md.getLabel(i); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6968/buggy-version/src.main.java.org.jdbdt.Table.java", "BodyUseAPI": [], "Fixed commit": "048a2ab3cdfb5bd653addb64ed19125d9d583f12", "Url": "https://api.github.com/repos/JDBDT/jdbdt", "Date": "2016-03-11T12:21:19Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.phon.orthography.OrthoElement.getExtension(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ipaExt == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3406/buggy-version/app.src.main.java.ca.phon.app.session.editor.view.ipa_lookup.AutoTranscriber.java", "BodyUseAPI": [], "Fixed commit": "b1fe566e276713cb8149c617ae1657fb497f46ef", "Url": "https://api.github.com/repos/phon-ca/phon", "Date": "2015-06-03T11:55:16Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.fs.Path.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pathName.split(\"=\").length) != 2) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7462/buggy-version/indexing-hadoop.src.main.java.io.druid.indexer.path.PartitionPathSpec.java", "BodyUseAPI": [], "Fixed commit": "6bb1bdfa0ca504051b54f7bdc3138c03f0480df9", "Url": "https://api.github.com/repos/sirpkt/druid", "Date": "2016-05-10T07:10:58Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((eventAttendee.getOptional()) != null) { person.setOptional(eventAttendee.getOptional()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/667/buggy-version/src.main.java.com.zerodes.exchangesync.calendarsource.google.GoogleCalendarSourceImpl.java", "BodyUseAPI": ["com.google.api.services.calendar.model.EventAttendee.getOptional()", "com.zerodes.exchangesync.dto.PersonDto.setOptional(eventAttendee.getOptional())"], "Fixed commit": "86b8fbe7a04395c5c8e5caf84168b82b3bd310c7", "Url": "https://api.github.com/repos/gdenning/exchange-sync", "Date": "2012-11-26T00:48:46Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mDateWidget.isCalendarShown()) || (!(mDateWidget.isDayHidden()))) { linearLayout.addView(mTimeWidget); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4074/buggy-version/collect_app.src.main.java.org.odk.collect.android.widgets.DateTimeWidget.java", "BodyUseAPI": [], "Fixed commit": "48805d8cd3df9a2a15f30bf099ecbf89b342ba01", "Url": "https://api.github.com/repos/grzesiek2010/collect", "Date": "2017-04-12T16:12:13Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (start == end) { newString.delete(start, (start + 1)); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8339/buggy-version/src.com.iskrembilen.quasseldroid.service.CoreConnService.java", "BodyUseAPI": ["android.text.SpannableStringBuilder.delete(int,int)"], "Fixed commit": "781ce4b78b756835d185d0e6fed5bc0d24065e06", "Url": "https://api.github.com/repos/sandsmark/QuasselDroid", "Date": "2011-07-20T21:50:21Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nanopub.extra.server.ServerInfo.getNextNanopubNo()", "org.nanopub.extra.server.ServerInfo.getPageSize()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((peerNanopubNo - currentNanopub) < peerPageSize) { java.lang.System.out.println(\"last bits\"); java.util.List<java.lang.String> nanopubsOnPage = org.nanopub.extra.server.NanopubServerUtils.loadNanopubUriList(si, page); for (java.lang.String artifactCode : nanopubsOnPage) { org.nanopub.Nanopub np = org.nanopub.extra.server.GetNanopub.get(artifactCode); int insertStatus = db.npInserted(artifactCode); if (insertStatus == (-1)) { insertNpInDatabase(np, artifactCode, false); }else if (insertStatus == 0) { insertNpInDatabase(np, artifactCode, true); } addedNanopubs++; } }else { addedNanopubs = insertNanopubsFromPage(page, serverName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/309/buggy-version/src.main.java.org.petapico.nanopub.indexer.Indexer.java", "BodyUseAPI": [], "Fixed commit": "e1f9e83bebe20021c7c0b4fa62f66785659356d4", "Url": "https://api.github.com/repos/peta-pico/nanopub-indexer", "Date": "2016-04-26T20:04:25Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (cause != null) { this.initCause(cause); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8172/buggy-version/src.main.java.com.edugility.throwables.ThrowableChain.java", "BodyUseAPI": [], "Fixed commit": "dcbdcc70228ec3f3ede332aa30d577787524366a", "Url": "https://api.github.com/repos/ljnelson/edugility-throwables", "Date": "2011-10-13T16:59:38Z"},
{"Line": "=>553", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (question.isSolved()) { linearLayout.setBackgroundResource(R.drawable.question_solved_shape); btn.setBackgroundResource(R.drawable.button_like_nonclickable); btn.setClickable(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4717/buggy-version/src.com.example.justask.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "de42bcc6eaf12cd1aa33aa26722818073ce63837", "Url": "https://api.github.com/repos/gtoshiba011/justAsk", "Date": "2015-01-02T07:06:20Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (plant) { player.teleport(com.lactem.pvz.selection.Selection.locationFromString(row.getPlantSpawn())); row.getPlants().add(player.getUniqueId()); }else { player.teleport(com.lactem.pvz.selection.Selection.locationFromString(row.getZombieSpawn())); row.getZombies().add(player.getUniqueId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7023/buggy-version/src.com.lactem.pvz.inventory.InventoryManager.java", "BodyUseAPI": [], "Fixed commit": "60b9f3867a0edf72dc9ad9ed3b0a97562a608a8c", "Url": "https://api.github.com/repos/Lactem/PvZ", "Date": "2014-04-27T19:08:12Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((frameCount) % 1000) == 0) println((((x) + \",\") + (y)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2235/buggy-version/src.applets.ScanImage.java", "BodyUseAPI": [], "Fixed commit": "e73b4cd1b7f76c38d658027419874459f46dfcff", "Url": "https://api.github.com/repos/dietoff/philipsCluster", "Date": "2014-10-28T11:51:58Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["harenet.Host.isClientAlreadyConnected(java.net.InetSocketAddress)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (peer == null) { byte id = findOpenId(); if (id == (harenet.Host.INVALID_PEER_ID)) { throw new java.io.IOException(\"Unable to allocate a valid id.\"); } (this.numberOfConnections)++; peer = new harenet.Peer(this, address, id); peer.setState(State.CONNECTED); peers[id] = peer; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8638/buggy-version/src.harenet.Host.java", "BodyUseAPI": [], "Fixed commit": "3bd5e67e69b4c93eba437b396e1ad7b2a3c20767", "Url": "https://api.github.com/repos/tonysparks/seventh", "Date": "2015-11-21T19:22:17Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getX()) != ((charWidth) - 1)) { player.setDx(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2146/buggy-version/src.com.lumos.MainWindow.java", "BodyUseAPI": ["com.lumos.Player.setDx(int)"], "Fixed commit": "d922d3b8779225e2d2aa8c29ed7a849edaa1c721", "Url": "https://api.github.com/repos/zzzanderw/Lumos", "Date": "2017-03-07T18:21:06Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getY()) != 0) { player.setDy((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2146/buggy-version/src.com.lumos.MainWindow.java", "BodyUseAPI": ["com.lumos.Player.setDy(int)"], "Fixed commit": "d922d3b8779225e2d2aa8c29ed7a849edaa1c721", "Url": "https://api.github.com/repos/zzzanderw/Lumos", "Date": "2017-03-07T18:21:06Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getY()) != ((charHeight) - 1)) { player.setDy(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2146/buggy-version/src.com.lumos.MainWindow.java", "BodyUseAPI": ["com.lumos.Player.setDy(int)"], "Fixed commit": "d922d3b8779225e2d2aa8c29ed7a849edaa1c721", "Url": "https://api.github.com/repos/zzzanderw/Lumos", "Date": "2017-03-07T18:21:06Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getX()) != 0) { player.setDx((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2146/buggy-version/src.com.lumos.MainWindow.java", "BodyUseAPI": ["com.lumos.Player.setDx(int)"], "Fixed commit": "d922d3b8779225e2d2aa8c29ed7a849edaa1c721", "Url": "https://api.github.com/repos/zzzanderw/Lumos", "Date": "2017-03-07T18:21:06Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lab4.SARSA.getQVals(double,int,double)", "lab4.SARSA.getQVals(double,int,double)", "lab4.SARSA.getQVals(double,int,double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((action1Q >= action0Q) && (action1Q >= action2Q)) action = 1; else action = 2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/9001/buggy-version/src.main.java.lab4.MountainCarWindow.java", "BodyUseAPI": [], "Fixed commit": "f00038d1c7239a8554997de3ae7ba34d77d1d34c", "Url": "https://api.github.com/repos/JHHScheidt/ACML", "Date": "2017-11-23T13:47:09Z"},
{"Line": "=>553", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (yOffset < 0) { yOffset = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7669/buggy-version/materialviewpager.src.main.java.com.github.florent37.materialviewpager.MaterialViewPagerAnimator.java", "BodyUseAPI": [], "Fixed commit": "017a6a5f613e4cf15e493c0a3cedddc3e88e7869", "Url": "https://api.github.com/repos/lliepmah/MaterialViewPager", "Date": "2016-01-15T23:38:46Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((game.p1Name) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2640/buggy-version/src.edu.ucsb.cs56.projects.games.beetle.GuiBased.java", "BodyUseAPI": [], "Fixed commit": "7c28eb474cc7301b15576556f4ac53717e2d3e49", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-games-beetle", "Date": "2017-11-29T01:54:02Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((game.p2Name) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2640/buggy-version/src.edu.ucsb.cs56.projects.games.beetle.GuiBased.java", "BodyUseAPI": [], "Fixed commit": "7c28eb474cc7301b15576556f4ac53717e2d3e49", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-games-beetle", "Date": "2017-11-29T01:54:02Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.plugin.PluginPackageImpl.getRepository()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (remotePluginPackageRepository != null) { java.util.Properties settings = remotePluginPackageRepository.getSettings(); java.lang.String useDownloadURL = settings.getProperty(RemotePluginPackageRepository.SETTING_USE_DOWNLOAD_URL); if (!(com.liferay.portal.kernel.util.GetterUtil.getBoolean(useDownloadURL, true))) { return getArtifactURL(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7911/buggy-version/portal-impl.src.com.liferay.portal.plugin.PluginPackageImpl.java", "BodyUseAPI": ["com.liferay.portal.kernel.plugin.RemotePluginPackageRepository.getSettings()"], "Fixed commit": "b1d96203185487f8b24b5554f1a0cf3ad1a8b0d8", "Url": "https://api.github.com/repos/brianchiu/liferay-portal", "Date": "2016-08-24T16:53:23Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((java.lang.Boolean) (ns.get(\"showCOMports\")))) { org.gogpsproject.parser.nvs.NVSSerialConnection.getPortList(true); return; }else if (ns.<java.lang.String>getList(\"port\").isEmpty()) { parser.printHelp(); return; }else if (((!(ns.<java.lang.String>getList(\"marker\").isEmpty())) && ((ns.<java.lang.String>getList(\"marker\").get(0)) != \"\")) && ((ns.<java.lang.String>getList(\"marker\").size()) != (ns.<java.lang.String>getList(\"port\").size()))) { java.lang.System.out.println(\"Error: if marker names are specified, their number must match that of the specified COM ports.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/204/buggy-version/src.main.java.org.gogpsproject.apps.LogNVS.java", "BodyUseAPI": ["net.sourceforge.argparse4j.inf.Namespace.getList(java.lang.String)", "ns.<java.lang.String>getList(\"marker\").size()", "ns.<java.lang.String>getList(\"port\").isEmpty()", "ns.<java.lang.String>getList(\"marker\").get(int)", "net.sourceforge.argparse4j.inf.Namespace.getList(java.lang.String)", "net.sourceforge.argparse4j.inf.Namespace.getList(java.lang.String)", "net.sourceforge.argparse4j.inf.Namespace.getList(java.lang.String)", "ns.<java.lang.String>getList(\"port\").size()", "ns.<java.lang.String>getList(\"marker\").isEmpty()", "net.sourceforge.argparse4j.inf.Namespace.getList(java.lang.String)"], "Fixed commit": "8f9283777ad355a37c7c3e4cc3ff6662522721f0", "Url": "https://api.github.com/repos/goGPS-Project/goGPS_Java", "Date": "2015-08-06T12:03:05Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useRegression) extractor.addTrainingData(dbName, schema, q, j, queryTime);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6590/buggy-version/src.main.java.edu.umich.gpd.algorithm.ILPSolver.java", "BodyUseAPI": [], "Fixed commit": "b922af84f19ddacc52076a4a589113e7eb588b84", "Url": "https://api.github.com/repos/dongyoungy/gpd", "Date": "2017-03-01T21:35:06Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!isControl) || (!(((primBeingDragged) instanceof net.sourceforge.fidocadj.circuit.controllers.PrimitiveOval) || ((primBeingDragged) instanceof net.sourceforge.fidocadj.circuit.controllers.PrimitiveRectangle)))) { ymm = py; }else { int hn = 0; if ((handleBeingDragged) == 0) hn = 1; ymm = ((cs.mapYi(primBeingDragged.virtualPoint[hn].x, primBeingDragged.virtualPoint[hn].y, false)) + px) - (cs.mapXi(primBeingDragged.virtualPoint[hn].x, primBeingDragged.virtualPoint[hn].y, false)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7564/buggy-version/src.net.sourceforge.fidocadj.circuit.controllers.HandleActions.java", "BodyUseAPI": [], "Fixed commit": "09480eaf4428dc06af1210fe14f09f9a1cf33deb", "Url": "https://api.github.com/repos/DarwinNE/FidoCadJ", "Date": "2016-04-04T21:06:51Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sortedEventMap.containsKey(parameterValue))) { sortedEventMap.put(parameterValue, clonedStreamEvent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6439/buggy-version/component.src.main.java.org.wso2.extension.siddhi.execution.extrema.util.MaxByMinByExecutor.java", "BodyUseAPI": ["java.util.TreeMap<java.lang.Object, org.wso2.siddhi.core.event.stream.StreamEvent>.put(java.lang.Object,org.wso2.siddhi.core.event.stream.StreamEvent)"], "Fixed commit": "65c1508f554c2051b0d73568d1de8b069d30ee7c", "Url": "https://api.github.com/repos/pamodaaw/siddhi-execution-extrema", "Date": "2016-12-23T10:20:15Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((Components.CTabbedPane.getInstance().getPanel().getCurrentFilePath()) != null) || (!(Components.CTabbedPane.getInstance().getPanel().getTextArea().getText().equals(\"\")))) { RibbonMenu.newtab.doClick(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3721/buggy-version/src.IOFactory.Reader.java", "BodyUseAPI": [], "Fixed commit": "11618c191a72cfcc2b9438f9341143d58d514ffd", "Url": "https://api.github.com/repos/musaeed/JEditor", "Date": "2014-09-17T18:35:53Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(foodData[3].equals(\"*/&%\"))) { mood = foodData[3]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2868/buggy-version/src.Mobile.crudfoodmodel.FoodModel.java", "BodyUseAPI": [], "Fixed commit": "7f2579ed8a77b8f7919169b59a3aad0e55a333bf", "Url": "https://api.github.com/repos/vincentvella/FoodMood", "Date": "2017-11-17T08:19:28Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index < (data.length)) { return data[index]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6655/buggy-version/src.com.artemis.utils.Bag.java", "BodyUseAPI": [], "Fixed commit": "6a8c4f7c3d877b33c683921881b8bbd6bd902279", "Url": "https://api.github.com/repos/DevHopps/LudumDare27", "Date": "2013-08-27T11:56:17Z"},
{"Line": "=>683", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mStopingRefresh) { startScroll((-currentY), SCROLL_DURATION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2605/buggy-version/library.src.main.java.com.andview.refreshview.XRefreshView.java", "BodyUseAPI": [], "Fixed commit": "036e1629a2833c402232ce5001052ab2ddd11f02", "Url": "https://api.github.com/repos/huxq17/XRefreshView", "Date": "2016-04-14T05:13:13Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((env) == null) { env = \"prod\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6536/buggy-version/src.main.java.org.grails.maven.plugin.GrailsWarMojo.java", "BodyUseAPI": [], "Fixed commit": "4ad157efd362fe6706ac86f50bd7d89dc4157122", "Url": "https://api.github.com/repos/grails/grails-maven", "Date": "2012-04-27T11:04:08Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((env) == null) { env = \"prod\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6536/buggy-version/src.main.java.org.grails.maven.plugin.MvnWarMojo.java", "BodyUseAPI": [], "Fixed commit": "4ad157efd362fe6706ac86f50bd7d89dc4157122", "Url": "https://api.github.com/repos/grails/grails-maven", "Date": "2012-04-27T11:04:08Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.lastUpdate) == null) { if ((qName.equals(\"lastBuildDate\")) || (qName.equals(\"updated\"))) { this.lastUpdate = hiways.util.Factory.parseTimestamp(this.string); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8354/buggy-version/src.hiways.util.EntryHandler.java", "BodyUseAPI": [], "Fixed commit": "3c3ce93cd738755d35b7e9a2b031a66aa1cc48fb", "Url": "https://api.github.com/repos/cavoirom/Hiways", "Date": "2011-05-25T02:04:03Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((studentFileRepository.getMaxFileNo()) != null) { maxFileNo = studentFileRepository.getMaxFileNo().intValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/913/buggy-version/src.main.java.com.tripleS.service.StudentFileServiceImpl.java", "BodyUseAPI": ["studentFileRepository.getMaxFileNo().intValue()", "com.tripleS.repository.StudentFileRepository.getMaxFileNo()"], "Fixed commit": "39b291d2144ccd33e61653e662120226c4d25984", "Url": "https://api.github.com/repos/dishant90/ScholarshipApp", "Date": "2017-10-08T18:24:28Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sale.isQuote()) { return sale; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2577/buggy-version/src.main.java.org.iabako.client.ui.layout.widget.sale.SaleForm.java", "BodyUseAPI": [], "Fixed commit": "b95ed3ac60145d3dab1908a7fb4a21998b413d32", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2017-11-09T23:32:19Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["node.getExpression().accept(org.uva.sea.ql.visitor.typechecker.TypeChecker,org.uva.sea.ql.eval.Context)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (value == null) { return null; }else if ((ident.getClass()) != (value.getClass())) { context.addError(java.lang.String.format(\"Type mismatch: cannot convert from %s to %s.\", ident.getClass().getSimpleName(), value.getClass().getSimpleName())); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2495/buggy-version/martyn82.src.org.uva.sea.ql.visitor.typechecker.TypeChecker.java", "BodyUseAPI": ["org.uva.sea.ql.eval.Context.addError(java.lang.String)", "java.lang.String.format(java.lang.String,ident.getClass().getSimpleName(),value.getClass().getSimpleName())", "org.uva.sea.ql.eval.value.Value.getClass()", "value.getClass().getSimpleName()", "org.uva.sea.ql.eval.value.Value.getClass()"], "Fixed commit": "55fdd5a65794632434855c25d650274b1f14b5e7", "Url": "https://api.github.com/repos/software-engineering-amsterdam/sea-of-ql", "Date": "2013-01-20T13:36:40Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(music.isPlaying())) music.play();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8265/buggy-version/RazorbackAttack.src.com.team14.GameScreen.java", "BodyUseAPI": ["com.badlogic.gdx.audio.Music.play()"], "Fixed commit": "53772c13ff6d5d21ddc9384f61f0a9ae0d00e00e", "Url": "https://api.github.com/repos/csce3513/Team14", "Date": "2012-04-10T15:48:56Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fromUservisblity == true) { calenderListener.onSelectDate(new org.joda.time.LocalDateTime()); }else { calenderListener.onSelectDate(mSelectedDate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7365/buggy-version/RamzCalSample.ramzcalender.src.main.java.com.ramzcalender.RWeekCalendar.java", "BodyUseAPI": [], "Fixed commit": "e706db3b7f328b1d0cbe696af8e744a7dc286c1d", "Url": "https://api.github.com/repos/rameshvoltella/RWeekCalendar", "Date": "2016-12-27T07:05:03Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(folder.exists())) { folder.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6060/buggy-version/src.io.dango.controller.FaceDetectController.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "e7b5bccade6800ef8e11ab29b649f9aad349cfeb", "Url": "https://api.github.com/repos/WABL/DANGO", "Date": "2017-09-04T09:59:10Z"},
{"Line": "=>586", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTimer()[TIMER_SONGBAR_CHANGE]) == (java.lang.Long.MIN_VALUE)) { getTimer()[TIMER_SONGBAR_CHANGE] = nowtime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6910/buggy-version/src.bms.player.beatoraja.select.MusicSelector.java", "BodyUseAPI": [], "Fixed commit": "226411481cc394d45e7033b80a44799fc30fd2ea", "Url": "https://api.github.com/repos/LNTakeshi/beatoraja", "Date": "2017-05-02T17:19:23Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (onWhat.isEdge()) { @java.lang.SuppressWarnings(\"unchecked\") final java.util.List<eu.modelwriter.model.Tuple> value = ((java.util.List<eu.modelwriter.model.Tuple>) (onWhat.getValue())); for (final eu.modelwriter.model.Tuple tuple : value) { StaticEditorManager.builder.getManager().boundAboutToChange(tuple, this.type.name()); } }else { StaticEditorManager.builder.getManager().boundAboutToChange(((eu.modelwriter.model.ModelElement) (onWhat.getValue())), this.type.name()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8270/buggy-version/plugins.eu.modelwriter.visualization.jgrapx.src.eu.modelwriter.visualization.editor.handler.MoveToHandler.java", "BodyUseAPI": ["com.mxgraph.model.mxCell.getValue()", "com.mxgraph.model.mxCell.getValue()", "StaticEditorManager.builder.getManager().boundAboutToChange(((eu.modelwriter.model.ModelElement) (onWhat.getValue())),this.type.name())"], "Fixed commit": "496e9f42af1184fde5b83c8740fb2165d5eaf1cc", "Url": "https://api.github.com/repos/ModelWriter/Source", "Date": "2016-05-20T13:04:23Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((f.getStatusCode()) == 400) { if ((mEditText) != null) mEditText.setError(getResources().getString(R.string.add_thread_post_fields_cannot_be_blank)); }else if ((f != null) && ((f.getErrorMessage()) != null)) { if ((mEditText) != null) mEditText.setError(f.getErrorMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3843/buggy-version/src.main.java.org.denevell.droidnatch.posts.list.uievents.AddPostViewActivator.java", "BodyUseAPI": ["org.denevell.droidnatch.app.baseclasses.FailureResult.getErrorMessage()", "org.denevell.droidnatch.app.baseclasses.FailureResult.getErrorMessage()", "android.widget.EditText.setError(f.getErrorMessage())"], "Fixed commit": "877159f89b7f7dbdde976854dba5e46c920c87f8", "Url": "https://api.github.com/repos/denevell/Natch-Android", "Date": "2014-04-12T00:59:12Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((f.getStatusCode()) == 400) { mSubject.setError(getContext().getString(R.string.add_thread_post_fields_cannot_be_blank)); }else if ((f != null) && ((f.getErrorMessage()) != null)) { mSubject.setError(f.getErrorMessage()); }else { mSubject.setError(\"Unknown error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3843/buggy-version/src.main.java.org.denevell.droidnatch.threads.list.uievents.AddThreadViewActivator.java", "BodyUseAPI": ["org.denevell.droidnatch.app.baseclasses.FailureResult.getErrorMessage()", "android.widget.TextView.setError(f.getErrorMessage())", "org.denevell.droidnatch.app.baseclasses.FailureResult.getErrorMessage()"], "Fixed commit": "877159f89b7f7dbdde976854dba5e46c920c87f8", "Url": "https://api.github.com/repos/denevell/Natch-Android", "Date": "2014-04-12T00:59:12Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((f != null) && ((f.getStatusCode()) == 400)) { mContent.setError(getResources().getString(R.string.add_thread_post_fields_cannot_be_blank)); }else if ((f != null) && ((f.getErrorMessage()) != null)) { mContent.setError(f.getErrorMessage()); }else { mContent.setError(\"Unknown error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3843/buggy-version/src.main.java.org.denevell.droidnatch.posts.list.uievents.EditPostViewActivator.java", "BodyUseAPI": ["org.denevell.droidnatch.app.baseclasses.FailureResult.getErrorMessage()", "org.denevell.droidnatch.app.baseclasses.FailureResult.getErrorMessage()", "android.widget.TextView.setError(f.getErrorMessage())"], "Fixed commit": "877159f89b7f7dbdde976854dba5e46c920c87f8", "Url": "https://api.github.com/repos/denevell/Natch-Android", "Date": "2014-04-12T00:59:12Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.command.Message.getOriginalDestination()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (origDest != null) { org.apache.activemq.util.ByteSequence origDestBytes = marshaller.marshal(origDest); origDestBytes.compact(); coreMessage.putBytesProperty(org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.AMQ_MSG_ORIG_DESTINATION, origDestBytes.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4336/buggy-version/artemis-protocols.artemis-openwire-protocol.src.main.java.org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.java", "BodyUseAPI": ["org.apache.activemq.wireformat.WireFormat.marshal(org.apache.activemq.command.ActiveMQDestination)"], "Fixed commit": "db56664b9fb1c91d708cbfc0d0d99cc1bee612f4", "Url": "https://api.github.com/repos/apache/activemq-artemis", "Date": "2016-02-18T12:52:32Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((items) != null) return items.size(); else return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3582/buggy-version/app.src.main.java.com.androidgeeeek.androidtrial.controller.MainController.java", "BodyUseAPI": [], "Fixed commit": "851c6a38b9be041febc580b18c424910d4778a18", "Url": "https://api.github.com/repos/feorin94/AndroidTrial", "Date": "2017-10-19T20:40:03Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/109/buggy-version/plugins.eu.geclipse.traceview.src.eu.geclipse.traceview.utils.AbstractTraceFileCache.java", "BodyUseAPI": [], "Fixed commit": "c39244accd8c3ca99375f04ab1bad8ecd7f7d3e3", "Url": "https://api.github.com/repos/tkoecker/eu.geclipse.core", "Date": "2016-09-23T20:41:20Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ichi2.libanki.sync.HttpSyncer.stream2String(ret.getEntity().getContent())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(s.equalsIgnoreCase(\"null\"))) && ((s.length()) != 0)) { return new org.json.JSONObject(s); }else { return new org.json.JSONObject(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/320/buggy-version/src.com.ichi2.libanki.sync.RemoteServer.java", "BodyUseAPI": [], "Fixed commit": "6a71bccfc3ecd5e5ac14e7cba094860f70fa0b80", "Url": "https://api.github.com/repos/ankidroid/Anki-Android", "Date": "2014-10-21T17:17:16Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.talend.camel.designer.util.CamelFeatureUtil.FEATURE_CAMEL_QUARTZ2_BNDL_NAME.equalsIgnoreCase(org.talend.camel.designer.util.CamelFeatureUtil.getNameWithoutVersion(lib))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3500/buggy-version/main.plugins.org.talend.camel.designer.src.main.java.org.talend.camel.designer.util.CamelFeatureUtil.java", "BodyUseAPI": [], "Fixed commit": "504a33ccae99322be079e336d6bc990cd67f98e5", "Url": "https://api.github.com/repos/dsergent/tesb-studio-se", "Date": "2017-12-18T14:18:29Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (amt == (maxHealth)) { unDamage(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2824/buggy-version/src.main.java.org.jtrfp.trcl.beh.DamageableBehavior.java", "BodyUseAPI": [], "Fixed commit": "5f692a3a42ae74a3d7068a120726e15b3b9f292d", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2014-01-07T00:56:57Z"},
{"Line": "=>2123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nodes[i]) != null) { sb.append(\"[\").append(nodes[i].describe(session)).append(\"]\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2073/buggy-version/src.hsqldb19b3.org.hsqldb_voltpatches.FunctionSQL.java", "BodyUseAPI": ["java.lang.StringBuffer.append(java.lang.String)", "nodes[i].describe(org.hsqldb_voltpatches.Session)", "java.lang.StringBuffer.append(nodes[i].describe(session))"], "Fixed commit": "1570ea07e154fd42a34797442baa8f54fe41b846", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2016-06-10T15:13:24Z"},
{"Line": "=>1690", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sortAndSlice.limitCondition.getRightNode()) != null) { sb.append(\"limit=[\").append(sortAndSlice.limitCondition.getRightNode().describe(session)).append(\"]\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2073/buggy-version/src.hsqldb19b3.org.hsqldb_voltpatches.QuerySpecification.java", "BodyUseAPI": [], "Fixed commit": "1570ea07e154fd42a34797442baa8f54fe41b846", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2016-06-10T15:13:24Z"},
{"Line": "=>1685", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sortAndSlice.limitCondition.getLeftNode()) != null) { sb.append(\"offset=[\").append(sortAndSlice.limitCondition.getLeftNode().describe(session)).append(\"]\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2073/buggy-version/src.hsqldb19b3.org.hsqldb_voltpatches.QuerySpecification.java", "BodyUseAPI": [], "Fixed commit": "1570ea07e154fd42a34797442baa8f54fe41b846", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2016-06-10T15:13:24Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((goal.getPrimaryCategory()) != null) { gradientDrawable.setColor(android.graphics.Color.parseColor(goal.getPrimaryCategory().getColor())); }else { gradientDrawable.setColor(mContext.getResources().getColor(R.color.grow_primary)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8099/buggy-version/src.main.java.org.tndata.android.compass.adapter.MainFeedAdapter.java", "BodyUseAPI": ["goal.getPrimaryCategory().getColor()", "android.graphics.Color.parseColor(goal.getPrimaryCategory().getColor())", "org.tndata.android.compass.model.Goal.getPrimaryCategory()", "android.graphics.drawable.GradientDrawable.setColor(android.graphics.Color.parseColor(goal.getPrimaryCategory().getColor()))"], "Fixed commit": "b871eed824e924591f310108437dc94a5be33932", "Url": "https://api.github.com/repos/izzyalonso/android-app", "Date": "2015-10-15T15:16:11Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3639/buggy-version/src.main.java.de.lutana.geodataextractor.entity.LocationCollection.java", "BodyUseAPI": [], "Fixed commit": "df713656bebbe7f40bc5a4b8ecb99a04a4235544", "Url": "https://api.github.com/repos/m-mohr/geodata-extractor", "Date": "2017-07-08T03:52:37Z"},
{"Line": "=>590", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((container.count()) == 0) { return new org.eclipse.jface.action.Action[]{ org.entirej.ide.ui.editors.form.DisplayItemGroupNode.createNewItemGroupAction(treeSection, patentNode, container, false) }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/994/buggy-version/org.entirej.ide.ui.src.org.entirej.ide.ui.editors.form.DisplayItemGroupNode.java", "BodyUseAPI": ["org.entirej.ide.ui.editors.form.DisplayItemGroupNode.createNewItemGroupAction(org.entirej.ide.ui.editors.form.FormDesignTreeSection,org.entirej.ide.ui.nodes.AbstractNode<?>,org.entirej.framework.plugin.framework.properties.containers.EJPluginItemGroupContainer,boolean)"], "Fixed commit": "136cb3ff37557e9a232512ce32c8c98268381719", "Url": "https://api.github.com/repos/entirej/plugin", "Date": "2015-12-11T11:07:34Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (waitQueue.transferPriority) { updateEffectivePriority(waitQueue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5489/buggy-version/threads.PriorityScheduler.java", "BodyUseAPI": ["nachos.threads.PriorityScheduler.ThreadState.updateEffectivePriority(nachos.threads.PriorityScheduler.PriorityQueue)"], "Fixed commit": "95c940a0902c96322f9bf4ed5ca3c9f49d6d6231", "Url": "https://api.github.com/repos/Crispher/Nachos", "Date": "2016-03-29T08:29:18Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.Keyle.MyPet.entity.types.MyPetType.getNewEntityInstance(net.minecraft.server.World,de.Keyle.MyPet.entity.types.MyPet)", "((org.bukkit.craftbukkit.CraftWorld) (loc.getWorld())).getHandle()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(mcWorld.addEntity(MPentityMyPet, CreatureSpawnEvent.SpawnReason.CUSTOM))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6201/buggy-version/src.de.Keyle.MyPet.entity.types.MyPet.java", "BodyUseAPI": [], "Fixed commit": "2dcf0fece8906f3981157327277dcd5228aa64f1", "Url": "https://api.github.com/repos/xXKeyleXx/MyPet", "Date": "2012-05-15T10:55:09Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cardId == (-1)) || (cardId > (cards.length))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/143/buggy-version/app.src.main.java.com.tbaehr.sharewifi.features.shareDialog.ShareOptionsActivity.java", "BodyUseAPI": [], "Fixed commit": "4d8ef0f605e33664ed288d5b347da307d2a87b15", "Url": "https://api.github.com/repos/ShareWiFi/Android", "Date": "2016-03-19T19:29:54Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (error == null) { error = getPlaceholderDrawable(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4803/buggy-version/glide.src.main.java.com.bumptech.glide.request.SingleRequest.java", "BodyUseAPI": [], "Fixed commit": "238e41dfc15341a78b633f4e9018a610e0539585", "Url": "https://api.github.com/repos/KZax1l/Glide", "Date": "2017-06-20T02:29:08Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (view == (btnGetInfo)) { if (android.text.TextUtils.isEmpty(etCashMemo.getText().toString())) { com.app.uniqesofttech.util.Utils.displayDialog(getActivity(), \"Please enter cashmemo no.\"); }else { com.app.uniqesofttech.model.CustomerModel customerModel = com.app.uniqesofttech.DelTrackApp.getInstance().getDatabaseHelper().getCustomer(etCashMemo.getText().toString()); if (customerModel != null) { etCusId.setText((((customerModel.getCusid()) + \",\") + (customerModel.getName()))); }else { com.app.uniqesofttech.util.Utils.displayDialog(getActivity(), \"No data found for this cashmemo\"); } } }else if (view == (etPaymentMode)) { spnrPaymentMode.performClick(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1359/buggy-version/app.src.main.java.com.app.uniqesofttech.fragment.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "02e3a4ffbf0e02626809994f78e718933d79c757", "Url": "https://api.github.com/repos/Ankit77/uniqeSofttech", "Date": "2017-08-07T07:11:57Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) android.util.Log.d(LOG_TAG, \"Received reboot alarm\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8533/buggy-version/app.src.main.java.tk.giesecke.phoenix.ReBoot.java", "BodyUseAPI": [], "Fixed commit": "396b55a31ed92bb0aaa2d8bdd9cc9d6d53f16cb7", "Url": "https://api.github.com/repos/beegee-tokyo/phoenix", "Date": "2015-03-24T03:08:10Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (ropRequestContext != null) { java.lang.String method = ropRequestContext.getMethod(); java.util.Locale locale = ropRequestContext.getLocale(); com.rop.response.ServiceUnavailableErrorResponse ropResponse = new com.rop.response.ServiceUnavailableErrorResponse(method, locale, e); invokeBeforceResponseOfInterceptors(ropRequestContext); writeResponse(ropResponse, servletResponse, ropRequestContext.getMessageFormat(), jsonpCallback); }else { throw new com.rop.impl.RopException(\"RopRequestContext is null.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1991/buggy-version/rop.src.main.java.com.rop.impl.AnnotationServletServiceRouter.java", "BodyUseAPI": ["com.rop.impl.RopRequestContext.getMessageFormat()", "com.rop.impl.AnnotationServletServiceRouter.ServiceRunnable.writeResponse(com.rop.response.ServiceUnavailableErrorResponse,javax.servlet.http.HttpServletResponse,ropRequestContext.getMessageFormat(),java.lang.String)", "com.rop.impl.AnnotationServletServiceRouter.ServiceRunnable.invokeBeforceResponseOfInterceptors(com.rop.impl.RopRequestContext)", "com.rop.impl.RopRequestContext.getLocale()", "com.rop.impl.RopRequestContext.getMethod()"], "Fixed commit": "8eab2d4ba9de8a5080549dc7d0641cf376f6fa07", "Url": "https://api.github.com/repos/echan85/rop", "Date": "2014-03-21T09:52:14Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sQ) == null) { java.lang.System.out.println(\"SingleQueue.process method ERROR: No SingleQueue exists\"); return null; }else { Submission hold = sQ.head.getHas(); if ((sQ.head.getNext()) == null) { sQ = null; }else { sQ.head = sQ.head.getNext(); } return hold; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5122/buggy-version/Problem1.SingleQueue.java", "BodyUseAPI": [], "Fixed commit": "7fdd09b2af3e636c69c8af2af572704c5fd5746d", "Url": "https://api.github.com/repos/shatterspike1/OoDAHW3", "Date": "2015-02-25T23:44:51Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!checked) radios[0].setChecked(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4815/buggy-version/android.ptsdcoach.src.gov.va.ptsd.ptsdcoach.controllers.PCLSchedulerController.java", "BodyUseAPI": [], "Fixed commit": "5f0decf88480c0d816d3af7b48b769e1e5363493", "Url": "https://api.github.com/repos/cens/PTSDExplorerAndroid", "Date": "2012-09-24T18:43:23Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getModelRegistry().getObject(net.minecraft.client.renderer.block.model.ModelResourceLocation)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (defaultBakedModel == null) { crazypants.enderio.Log.warn(((\"ModelBakeEvent: cannot register smart model over null model for \" + (holder.block)) + \". See model errors below.\")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/855/buggy-version/src.main.java.crazypants.enderio.render.registry.SmartModelAttacher.java", "BodyUseAPI": [], "Fixed commit": "bdfa431671d33d9011c82b55f917a9bae92b97b3", "Url": "https://api.github.com/repos/SleepyTrousers/EnderIO", "Date": "2017-11-28T22:08:08Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.stjs.generator.writer.JavascriptWriterVisitor.resolvedType(japa.parser.ast.body.VariableDeclarator)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((type instanceof org.stjs.generator.type.ClassWrapper) && (((org.stjs.generator.type.ClassWrapper) (type)).getClazz().isPrimitive())) { java.lang.Object defaultValue = com.google.common.base.Defaults.defaultValue(((org.stjs.generator.type.ClassWrapper) (type)).getClazz()); printer.printNumberLiteral(defaultValue.toString()); }else { printer.print(JavascriptKeywords.NULL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1922/buggy-version/generator.src.main.java.org.stjs.generator.writer.JavascriptWriterVisitor.java", "BodyUseAPI": ["org.stjs.generator.type.TypeWrapper.getClazz()", "com.google.common.base.Defaults.defaultValue(((org.stjs.generator.type.ClassWrapper) (type)).getClazz())"], "Fixed commit": "6213480ac7da3a9a99c1db46f66651d62fcc615c", "Url": "https://api.github.com/repos/st-js/st-js", "Date": "2013-12-26T10:45:50Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (annotations.isEmpty()) { this.annotations = java.util.Collections.singleton((implicit ? org.jetbrains.annotations.Nullable.class.getName() : org.jetbrains.annotations.NotNull.class.getName())); }else { this.annotations = java.util.Collections.unmodifiableSet(new java.util.HashSet<>(annotations)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3221/buggy-version/src.main.java.se.eris.notnull.NotNullConfiguration.java", "BodyUseAPI": [], "Fixed commit": "3a17717c770a084d968b7eef59cc6369d83bca35", "Url": "https://api.github.com/repos/osundblad/intellij-annotations-instrumenter-maven-plugin", "Date": "2016-09-22T14:01:49Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((texture.id) == (-1)) texture.filter(SmartTexture.LINEAR, SmartTexture.LINEAR);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/9231/buggy-version/core.src.main.java.com.shatteredpixel.shatteredpixeldungeon.effects.ShadowBox.java", "BodyUseAPI": [], "Fixed commit": "794648fa217ac412e0ea888b8ef8c14d4fd36edb", "Url": "https://api.github.com/repos/00-Evan/shattered-pixel-dungeon", "Date": "2016-10-01T05:28:33Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((args.length) > 0) && (args[0].equals(\"help\"))) { com.neverwinterdp.registry.Registry registry = new com.neverwinterdp.registry.zk.RegistryImpl(); com.neverwinterdp.vm.client.VMClient vmClient = new com.neverwinterdp.vm.client.VMClient(registry); com.neverwinterdp.scribengin.client.shell.ScribenginShell shell = new com.neverwinterdp.scribengin.client.shell.ScribenginShell(vmClient); shell.execute(args); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7152/buggy-version/V2.core.src.main.java.com.neverwinterdp.scribengin.ShellMain.java", "BodyUseAPI": ["com.neverwinterdp.scribengin.client.shell.ScribenginShell.execute(java.lang.String[])"], "Fixed commit": "6782d6d948b9b2792d045b3b0254b1a90c04f918", "Url": "https://api.github.com/repos/DemandCube/Scribengin", "Date": "2015-03-24T18:57:08Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((authentication.getDetails()) instanceof org.springframework.security.core.userdetails.UserDetails) { org.apache.kylin.rest.controller.UserController.logger.info((\"authentication.getDetails() is \" + (authentication.getDetails()))); return ((org.springframework.security.core.userdetails.UserDetails) (authentication.getDetails())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1895/buggy-version/server.src.main.java.org.apache.kylin.rest.controller.UserController.java", "BodyUseAPI": ["org.springframework.security.core.Authentication.getDetails()", "org.springframework.security.core.Authentication.getDetails()", "org.slf4j.Logger.info((\"authentication.getDetails() is \" + (authentication.getDetails())))"], "Fixed commit": "49269d2b3bf72288262db6434c8aa090405a65c2", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2015-12-15T03:00:13Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (authentication == null) { org.apache.kylin.rest.controller.UserController.logger.info(\"authentication is null.\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1895/buggy-version/server.src.main.java.org.apache.kylin.rest.controller.UserController.java", "BodyUseAPI": [], "Fixed commit": "49269d2b3bf72288262db6434c8aa090405a65c2", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2015-12-15T03:00:13Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { rssItem = ((org.esn.mobilit.models.RSS.RSSItem) (savedInstanceState.getSerializable(\"rssItem\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2884/buggy-version/app.src.main.java.org.esn.mobilit.fragments.Satellite.DetailsFragment.java", "BodyUseAPI": ["android.os.Bundle.getSerializable(java.lang.String)"], "Fixed commit": "4dd679ba16f74ad556f09d0115b03b548aa232a4", "Url": "https://api.github.com/repos/donatienthorez/ESN_Mobil-IT", "Date": "2016-07-31T10:32:39Z"},
{"Line": "=>933", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"IGE_USER\".equals(aNode.getFkAddrUuid())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8719/buggy-version/ingrid-mdek-services.src.main.java.de.ingrid.mdek.services.catalog.MdekObjectService.java", "BodyUseAPI": [], "Fixed commit": "af2a3ea9b880b899ba2d4301bc83f98ca53ade1e", "Url": "https://api.github.com/repos/informationgrid/ingrid-mdek", "Date": "2017-02-03T11:17:39Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((collapse_depth) == 0) { unindent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8396/buggy-version/lcm-java.lcm.spy.ObjectPanel.java", "BodyUseAPI": [], "Fixed commit": "179071e504e30717094b9ac6d107870a2bb14609", "Url": "https://api.github.com/repos/simbaforrest/lcm", "Date": "2015-06-11T21:43:55Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tabellaPrenotazioni.getSelection().length) > 0) { rimuoviPrenotazione.setEnabled(true); }else { rimuoviPrenotazione.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1600/buggy-version/ArabicaExpress.src.interfaccia.PrenotazioniTab.java", "BodyUseAPI": [], "Fixed commit": "fecca697c8b26d44714c501f10b609240601704c", "Url": "https://api.github.com/repos/GiulioGx/ArabicaExpress", "Date": "2013-01-26T12:48:09Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(typeCheckingContext.isSingleTypeComputation())) { { org.jetbrains.mps.openapi.model.SNode _nodeToCheck_1029348928467 = jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getTarget(ts, jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(-8037690291156860282L, -7505894832713754871L, 5636302460526173897L, 5636302460526173944L, \"postprocess\")); jetbrains.mps.typesystem.inference.EquationInfo _info_12389875345 = new jetbrains.mps.typesystem.inference.EquationInfo(_nodeToCheck_1029348928467, null, \"r:47a77104-3b09-4998-a2bd-ada4655c0c77(jetbrains.mps.lang.migration.typesystem)\", \"5636302460526309604\", 0, null); typeCheckingContext.createEquation(((org.jetbrains.mps.openapi.model.SNode) (typeCheckingContext.typeOf(_nodeToCheck_1029348928467, \"r:47a77104-3b09-4998-a2bd-ada4655c0c77(jetbrains.mps.lang.migration.typesystem)\", \"5636302460526309615\", true))), ((org.jetbrains.mps.openapi.model.SNode) (jetbrains.mps.lang.migration.typesystem.typeof_TransformStatement_InferenceRule._quotation_createNode_h6azqb_a0b0b(jetbrains.mps.lang.migration.behavior.TransformStatement_Behavior.call_getPatternConcept_5636302460526286899(ts), jetbrains.mps.lang.migration.behavior.TransformStatement_Behavior.call_getQuotationConcept_5636302460526311664(ts)))), true, _info_12389875345); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5667/buggy-version/languages.languageDesign.migration.source_gen.jetbrains.mps.lang.migration.typesystem.typeof_TransformStatement_InferenceRule.java", "BodyUseAPI": ["jetbrains.mps.typesystem.inference.TypeCheckingContext.createEquation(((org.jetbrains.mps.openapi.model.SNode) (typeCheckingContext.typeOf(_nodeToCheck_1029348928467, \"r:47a77104-3b09-4998-a2bd-ada4655c0c77(jetbrains.mps.lang.migration.typesystem)\", \"5636302460526309615\", true))),org.jetbrains.mps.openapi.model.SNode,boolean,jetbrains.mps.typesystem.inference.EquationInfo)", "jetbrains.mps.typesystem.inference.TypeCheckingContext.typeOf(org.jetbrains.mps.openapi.model.SNode,java.lang.String,java.lang.String,boolean)"], "Fixed commit": "16d078baf2bc76db5893f26c7f36f0666b0ad1f3", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2015-06-22T16:00:57Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(typeCheckingContext.isSingleTypeComputation())) { { org.jetbrains.mps.openapi.model.SNode _nodeToCheck_1029348928467 = jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getTarget(ts, jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(-8037690291156860282L, -7505894832713754871L, 5636302460526173897L, 5636302460526173940L, \"precondition\")); jetbrains.mps.typesystem.inference.EquationInfo _info_12389875345 = new jetbrains.mps.typesystem.inference.EquationInfo(_nodeToCheck_1029348928467, null, \"r:47a77104-3b09-4998-a2bd-ada4655c0c77(jetbrains.mps.lang.migration.typesystem)\", \"5636302460526302954\", 0, null); typeCheckingContext.createEquation(((org.jetbrains.mps.openapi.model.SNode) (typeCheckingContext.typeOf(_nodeToCheck_1029348928467, \"r:47a77104-3b09-4998-a2bd-ada4655c0c77(jetbrains.mps.lang.migration.typesystem)\", \"5636302460526300361\", true))), ((org.jetbrains.mps.openapi.model.SNode) (jetbrains.mps.lang.migration.typesystem.typeof_TransformStatement_InferenceRule._quotation_createNode_h6azqb_a0a0b(jetbrains.mps.lang.migration.behavior.TransformStatement_Behavior.call_getPatternConcept_5636302460526286899(ts)))), true, _info_12389875345); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5667/buggy-version/languages.languageDesign.migration.source_gen.jetbrains.mps.lang.migration.typesystem.typeof_TransformStatement_InferenceRule.java", "BodyUseAPI": ["jetbrains.mps.typesystem.inference.TypeCheckingContext.typeOf(org.jetbrains.mps.openapi.model.SNode,java.lang.String,java.lang.String,boolean)", "jetbrains.mps.typesystem.inference.TypeCheckingContext.createEquation(((org.jetbrains.mps.openapi.model.SNode) (typeCheckingContext.typeOf(_nodeToCheck_1029348928467, \"r:47a77104-3b09-4998-a2bd-ada4655c0c77(jetbrains.mps.lang.migration.typesystem)\", \"5636302460526300361\", true))),org.jetbrains.mps.openapi.model.SNode,boolean,jetbrains.mps.typesystem.inference.EquationInfo)"], "Fixed commit": "16d078baf2bc76db5893f26c7f36f0666b0ad1f3", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2015-06-22T16:00:57Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (player[((player.length) - 2)].contains(\"%\")) { incr = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4895/buggy-version/FFR.src.com.example.fantasyfootballrankings.ClassFiles.ParseFiles.ParseStats.java", "BodyUseAPI": [], "Fixed commit": "c40c6dd4f3d2dcc1bfd41d8a08b3ca2d5741e461", "Url": "https://api.github.com/repos/jbailey2010/FFR", "Date": "2013-10-02T06:36:05Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (httpRequest != null) httpRequest.releaseConnection();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2843/buggy-version/src.org.ironrhino.core.util.HttpClientUtils.java", "BodyUseAPI": ["org.apache.http.client.methods.HttpRequestBase.releaseConnection()"], "Fixed commit": "e4796afde7e9c30e5ab93f1b30114fd171469b24", "Url": "https://api.github.com/repos/ironrhino/ironrhino", "Date": "2015-01-07T09:26:09Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.comp4903.project.graphics.TouchGesture.AIPlaying)) com.comp4903.project.sound.SFX.play(SFX.NOTYET);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7344/buggy-version/Project.src.com.comp4903.project.graphics.TouchGesture.java", "BodyUseAPI": [], "Fixed commit": "36b2dfeba9fd02b494488061197dd2de2f3caa70", "Url": "https://api.github.com/repos/jasonq/comp4903", "Date": "2013-05-23T22:42:28Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startedRecording) { recorder.stop(); recorder.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1272/buggy-version/src.org.rhok.bribealert.services.AudioRecorder.java", "BodyUseAPI": [], "Fixed commit": "4a049c7d29d5020bd0faf16c035787a761af7c83", "Url": "https://api.github.com/repos/transparency-international-rhok-5/bribealert-mobile-new", "Date": "2012-06-03T00:53:04Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (lg == null) { javax.servlet.RequestDispatcher rd = request.getRequestDispatcher(\"/error-404.jsp\"); rd.forward(request, response); }else { uk.ac.dundee.computing.aec.instagrim.stores.Pic pic = tm.getPic(Convertors.DISPLAY_PROCESSED, java.util.UUID.fromString(args[2]), false); java.util.LinkedList<uk.ac.dundee.computing.aec.instagrim.stores.CommentBean> lsComments = tm.getComments(args[2]); javax.servlet.RequestDispatcher rd = request.getRequestDispatcher(\"/userPic.jsp\"); request.setAttribute(\"Pic\", pic); request.setAttribute(\"Comments\", lsComments); rd.forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/31/buggy-version/src.main.java.uk.ac.dundee.computing.aec.instagrim.servlets.Comment.java", "BodyUseAPI": [], "Fixed commit": "2f32be75f87a17e43182fbc78931a26db02f7cf3", "Url": "https://api.github.com/repos/harrya/instagrim", "Date": "2015-10-26T16:56:30Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((zonesNames.length) > 0) { return new com.tech.freak.wizardpager.model.PageList(new com.tech.freak.wizardpager.model.TextPage(this, mContext.getString(R.string.page_username)).setRequired(true), new com.tech.freak.wizardpager.model.TextPage(this, mContext.getString(R.string.page_firstname)).setRequired(true), new com.tech.freak.wizardpager.model.TextPage(this, mContext.getString(R.string.page_lastname)).setRequired(true), new com.tech.freak.wizardpager.model.TextPage(this, mContext.getString(R.string.page_password)).setRequired(true), new com.tech.freak.wizardpager.model.TextPage(this, mContext.getString(R.string.page_email)).setRequired(true), new com.tech.freak.wizardpager.model.TextPage(this, mContext.getString(R.string.page_phonenumber)).setRequired(true), new com.tech.freak.wizardpager.model.TextPage(this, mContext.getString(R.string.page_address1)).setRequired(true), new com.tech.freak.wizardpager.model.TextPage(this, mContext.getString(R.string.page_address2)).setRequired(true), new com.tech.freak.wizardpager.model.TextPage(this, mContext.getString(R.string.page_Postcode)).setRequired(true), new com.tech.freak.wizardpager.model.SingleFixedChoicePage(this, mContext.getString(R.string.page_Zone)).setChoices(zonesNames), new com.tech.freak.wizardpager.model.SingleFixedChoicePage(this, mContext.getString(R.string.page_Agree)).setChoices(agreeNames)); }else { return new com.tech.freak.wizardpager.model.PageList(new com.tech.freak.wizardpager.model.TextPage(this, mContext.getString(R.string.page_username)).setRequired(true), new com.tech.freak.wizardpager.model.TextPage(this, mContext.getString(R.string.page_firstname)).setRequired(true), new com.tech.freak.wizardpager.model.TextPage(this, mContext.getString(R.string.page_lastname)).setRequired(true), new com.tech.freak.wizardpager.model.TextPage(this, mContext.getString(R.string.page_password)).setRequired(true), new com.tech.freak.wizardpager.model.TextPage(this, mContext.getString(R.string.page_email)).setRequired(true), new com.tech.freak.wizardpager.model.TextPage(this, mContext.getString(R.string.page_phonenumber)).setRequired(true), new com.tech.freak.wizardpager.model.TextPage(this, mContext.getString(R.string.page_address1)).setRequired(true), new com.tech.freak.wizardpager.model.TextPage(this, mContext.getString(R.string.page_address2)).setRequired(true), new com.tech.freak.wizardpager.model.TextPage(this, mContext.getString(R.string.page_Postcode)).setRequired(true), new com.tech.freak.wizardpager.model.SingleFixedChoicePage(this, mContext.getString(R.string.page_Agree)).setChoices(agreeNames)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2912/buggy-version/app.src.main.java.com.mtesitoo.model.RegistrationWizard.java", "BodyUseAPI": ["com.tech.freak.wizardpager.model.SingleFixedChoicePage.setChoices(java.lang.String[])"], "Fixed commit": "efea8b0c9271ada18b9dc7717e348b1b9f398e85", "Url": "https://api.github.com/repos/projectwife/mtesitoo-android", "Date": "2016-10-15T17:50:29Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mWizardModel.findByKey(this.getString(R.string.page_Zone)).getData().getString(Page.SIMPLE_DATA_KEY)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (zone == null) { zone = \"0\"; }else { for (com.mtesitoo.backend.model.Zone c : zones) { if (c.getName().equals(zone)) { zone = java.lang.Integer.toString(c.getId()); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2912/buggy-version/app.src.main.java.com.mtesitoo.RegistrationActivity.java", "BodyUseAPI": ["c.getName().equals(java.lang.String)"], "Fixed commit": "efea8b0c9271ada18b9dc7717e348b1b9f398e85", "Url": "https://api.github.com/repos/projectwife/mtesitoo-android", "Date": "2016-10-15T17:50:29Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["semgen.annotation.workbench.drawers.CodewordToolDrawer.getIndexofModelComponent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (proc == (-1)) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4032/buggy-version/src.semgen.annotation.annotatorpane.subpanels.CompositeAnnotationPanel.java", "BodyUseAPI": [], "Fixed commit": "02673c4853a8617803cb997b76a3ed1645413839", "Url": "https://api.github.com/repos/SemBioProcess/SemGen", "Date": "2015-06-12T21:57:18Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (domain.equals(OntologyDomain.PhysicalProperty)) { termindex = library.addPhysicalProperty(new semsim.model.physical.object.PhysicalProperty(sel, uri)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4032/buggy-version/src.semgen.annotation.dialog.termlibrary.ReferenceClassFinderPanel.java", "BodyUseAPI": [], "Fixed commit": "02673c4853a8617803cb997b76a3ed1645413839", "Url": "https://api.github.com/repos/SemBioProcess/SemGen", "Date": "2015-06-12T21:57:18Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.umd.cs.psl.model.argument.Term.getID()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id instanceof edu.umd.cs.psl.database.RDBMS.RDBMSUniqueIntID) ps.setInt(paramIndex, ((edu.umd.cs.psl.database.RDBMS.RDBMSUniqueIntID) (argument)).getID()); else if (id instanceof edu.umd.cs.psl.database.RDBMS.RDBMSUniqueStringID) ps.setString(paramIndex, ((edu.umd.cs.psl.database.RDBMS.RDBMSUniqueStringID) (argument)).getID());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2718/buggy-version/psl-core.src.main.java.edu.umd.cs.psl.database.RDBMS.RDBMSDatabase.java", "BodyUseAPI": [], "Fixed commit": "6aa5093e799541930ca0638a05065a18ee160b60", "Url": "https://api.github.com/repos/linqs/psl", "Date": "2013-01-07T21:59:27Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Unit.UnitView.getXPosition()", "Unit.UnitView.getYPosition()", "Unit.UnitView.getXPosition()", "Unit.UnitView.getYPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((java.lang.Math.abs((footmanX - enemyFootmanX))) + (java.lang.Math.abs((footmanY - enemyFootmanY)))) > 2) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4522/buggy-version/src.edu.cwru.sepia.agent.AstarAgent.java", "BodyUseAPI": [], "Fixed commit": "bdeaa0114438a0ed653b65082cc930ae12339a19", "Url": "https://api.github.com/repos/ZJaffee/P1", "Date": "2015-02-10T17:11:47Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((addedCareProviderIdStr == null) || (addedCareProviderIdStr.equals(\"\"))) { com.servlet.ErrorMsg.NullCareProviderError(response, \"patient_info_page.jsp\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1370/buggy-version/CWSproject.src.com.servlet.AddCareProviderServlet.java", "BodyUseAPI": [], "Fixed commit": "36837611d50ea0e7cfdb47057b5571e936b970f9", "Url": "https://api.github.com/repos/JM1582/CWSproject", "Date": "2016-12-21T05:44:43Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (samRecord.getReadNegativeStrandFlag()) str = fastadao.getSequence(samRecord.getReferenceName(), samRecord.getAlignmentEnd(), true); else if (!(samRecord.getReadNegativeStrandFlag())) { str = fastadao.getSequence(samRecord.getReferenceName(), samRecord.getAlignmentStart(), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7208/buggy-version/IAFilter.src.edu.marquette.bio.andersonlab.iafilter.InternalAFilter.java", "BodyUseAPI": ["htsjdk.samtools.SAMRecord.getReadNegativeStrandFlag()", "edu.marquette.bio.andersonlab.iafilter.FastaDAO.getSequence(samRecord.getReferenceName(),samRecord.getAlignmentStart(),boolean)", "htsjdk.samtools.SAMRecord.getAlignmentStart()", "htsjdk.samtools.SAMRecord.getReferenceName()", "edu.marquette.bio.andersonlab.iafilter.FastaDAO.getSequence(samRecord.getReferenceName(),samRecord.getAlignmentEnd(),boolean)", "htsjdk.samtools.SAMRecord.getReferenceName()", "htsjdk.samtools.SAMRecord.getAlignmentEnd()"], "Fixed commit": "26b19474935c959db09f6e6816921155feabf062", "Url": "https://api.github.com/repos/fantasy8/IAFilter", "Date": "2014-12-02T03:56:14Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (output.equals(\"Cornsnake\")) { android.widget.Toast.makeText(getApplicationContext(), ((\"SUCCESS! \" + output) + \" is in the database!\"), Toast.LENGTH_SHORT).show(); android.content.Intent ti = new android.content.Intent(getApplicationContext(), com.example.childfieldtrip.CornSnake.class); startActivity(ti); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5178/buggy-version/ChildFieldTrip.src.com.example.childfieldtrip.AnimalTitle.java", "BodyUseAPI": ["android.widget.Toast.makeText(getApplicationContext(), ((\"SUCCESS! \" + output) + \" is in the database!\"), Toast.LENGTH_SHORT).show()", "android.widget.Toast.makeText(getApplicationContext(),java.lang.String,Toast.LENGTH_SHORT)"], "Fixed commit": "724292f3c706eb6b0f697f7350b25f035304bba4", "Url": "https://api.github.com/repos/rollinblkout/MobileComputingFinal", "Date": "2014-03-31T19:17:02Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(output.equals(\"Cornsnake\"))) { android.widget.Toast.makeText(getApplicationContext(), ((\"SUCCESS! \" + output) + \" is in the database!\"), Toast.LENGTH_SHORT).show(); java.lang.Class<?> clazz = java.lang.Class.forName((\"com.example.childfieldtrip.\" + output)); android.content.Intent i = new android.content.Intent(getApplicationContext(), clazz); startActivity(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5178/buggy-version/ChildFieldTrip.src.com.example.childfieldtrip.AnimalTitle.java", "BodyUseAPI": ["android.widget.Toast.makeText(getApplicationContext(),java.lang.String,Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(getApplicationContext(), ((\"SUCCESS! \" + output) + \" is in the database!\"), Toast.LENGTH_SHORT).show()", "java.lang.Class.forName(java.lang.String)"], "Fixed commit": "724292f3c706eb6b0f697f7350b25f035304bba4", "Url": "https://api.github.com/repos/rollinblkout/MobileComputingFinal", "Date": "2014-03-31T19:17:02Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(config.isForceSelect())) { config.setFinalSelect(java.lang.Boolean.FALSE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6973/buggy-version/src.main.java.ml.shifu.shifu.core.processor.VarSelectModelProcessor.java", "BodyUseAPI": ["ml.shifu.shifu.container.obj.ColumnConfig.setFinalSelect(java.lang.Boolean)"], "Fixed commit": "b22589f22256bd99532aa6dc2437b1cb0d58d1b0", "Url": "https://api.github.com/repos/ShifuML/shifu", "Date": "2014-11-28T06:29:28Z"},
{"Line": "=>1842", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((releaseDate) != null) { json.put(\"releaseDate\", releaseDate.getTime()); }else { json.put(\"releaseDate\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/467/buggy-version/bc-catalog-objects.src.com.brightcove.commons.catalog.objects.Video.java", "BodyUseAPI": [], "Fixed commit": "1b289c9a4f1cefe73f470ff994e37395ff4f91ac", "Url": "https://api.github.com/repos/BrightcoveOS/Java-Commons", "Date": "2011-03-07T02:39:48Z"},
{"Line": "=>1824", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((publishedDate) != null) { json.put(\"publishedDate\", publishedDate.getTime()); }else { json.put(\"publishedDate\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/467/buggy-version/bc-catalog-objects.src.com.brightcove.commons.catalog.objects.Video.java", "BodyUseAPI": [], "Fixed commit": "1b289c9a4f1cefe73f470ff994e37395ff4f91ac", "Url": "https://api.github.com/repos/BrightcoveOS/Java-Commons", "Date": "2011-03-07T02:39:48Z"},
{"Line": "=>1833", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastModifiedDate) != null) { json.put(\"lastModifiedDate\", lastModifiedDate.getTime()); }else { json.put(\"lastModifiedDate\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/467/buggy-version/bc-catalog-objects.src.com.brightcove.commons.catalog.objects.Video.java", "BodyUseAPI": [], "Fixed commit": "1b289c9a4f1cefe73f470ff994e37395ff4f91ac", "Url": "https://api.github.com/repos/BrightcoveOS/Java-Commons", "Date": "2011-03-07T02:39:48Z"},
{"Line": "=>1815", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((creationDate) != null) { json.put(\"creationDate\", creationDate.getTime()); }else { json.put(\"creationDate\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/467/buggy-version/bc-catalog-objects.src.com.brightcove.commons.catalog.objects.Video.java", "BodyUseAPI": [], "Fixed commit": "1b289c9a4f1cefe73f470ff994e37395ff4f91ac", "Url": "https://api.github.com/repos/BrightcoveOS/Java-Commons", "Date": "2011-03-07T02:39:48Z"},
{"Line": "=>1860", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((endDate) != null) { json.put(\"endDate\", endDate.getTime()); }else { json.put(\"endDate\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/467/buggy-version/bc-catalog-objects.src.com.brightcove.commons.catalog.objects.Video.java", "BodyUseAPI": [], "Fixed commit": "1b289c9a4f1cefe73f470ff994e37395ff4f91ac", "Url": "https://api.github.com/repos/BrightcoveOS/Java-Commons", "Date": "2011-03-07T02:39:48Z"},
{"Line": "=>1851", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startDate) != null) { json.put(\"startDate\", startDate.getTime()); }else { json.put(\"startDate\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/467/buggy-version/bc-catalog-objects.src.com.brightcove.commons.catalog.objects.Video.java", "BodyUseAPI": [], "Fixed commit": "1b289c9a4f1cefe73f470ff994e37395ff4f91ac", "Url": "https://api.github.com/repos/BrightcoveOS/Java-Commons", "Date": "2011-03-07T02:39:48Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.getTribeManager().getTribe(member.getTribe()).get()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((plugin.getMemberManager().getMembersWithTribe(tribe.getUniqueId()).size()) == 0) { for (com.tealcube.minecraft.bukkit.tribes.data.Cell cell : plugin.getCellManager().getCellsWithOwner(tribe.getUniqueId())) { cell.setOwner(null); plugin.getCellManager().placeCell(cell.getLocation(), cell); } }else { plugin.getTribeManager().addTribe(tribe); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5432/buggy-version/src.main.java.com.tealcube.minecraft.bukkit.tribes.commands.TribeCommand.java", "BodyUseAPI": ["plugin.getCellManager().getCellsWithOwner(tribe.getUniqueId())", "com.tealcube.minecraft.bukkit.tribes.data.Tribe.getUniqueId()", "plugin.getTribeManager().addTribe(com.tealcube.minecraft.bukkit.tribes.data.Tribe)", "com.tealcube.minecraft.bukkit.tribes.TribesPlugin.getTribeManager()", "plugin.getCellManager().placeCell(cell.getLocation(),com.tealcube.minecraft.bukkit.tribes.data.Cell)", "com.tealcube.minecraft.bukkit.tribes.TribesPlugin.getCellManager()", "com.tealcube.minecraft.bukkit.tribes.TribesPlugin.getCellManager()"], "Fixed commit": "a20c8fea161d0ff1e3eca38276e6c52a66c2f0df", "Url": "https://api.github.com/repos/TealCube/tribes", "Date": "2015-04-17T02:28:38Z"},
{"Line": "=>3579", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(AuditEventReader.HOOK)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (AuditEventReader.HOOK_INPUT.equals(hook)) { localAddress = eventData.get(AuditEventReader.DADDR); localPort = eventData.get(AuditEventReader.DPORT); remoteAddress = eventData.get(AuditEventReader.SADDR); remotePort = eventData.get(AuditEventReader.SPORT); }else if (AuditEventReader.HOOK_OUTPUT.equals(hook)) { localAddress = eventData.get(AuditEventReader.SADDR); localPort = eventData.get(AuditEventReader.SPORT); remoteAddress = eventData.get(AuditEventReader.DADDR); remotePort = eventData.get(AuditEventReader.DPORT); }else { spade.reporter.Audit.logger.log(java.util.logging.Level.INFO, (\"Unexpected hook value: \" + hook)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6103/buggy-version/src.spade.reporter.Audit.java", "BodyUseAPI": ["java.util.logging.Logger.log(java.util.logging.Level,java.lang.String)", "AuditEventReader.HOOK_OUTPUT.equals(java.lang.String)"], "Fixed commit": "dfad44b2d662fe3998e35ca37e7921cadfaebdaf", "Url": "https://api.github.com/repos/ashish-gehani/SPADE", "Date": "2017-07-25T02:27:04Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(token.isEmpty())) { attrValues.addAll(split(token, literals.subList(1, literals.size()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7730/buggy-version/core.persistence-jpa.src.main.java.org.apache.syncope.core.persistence.jpa.dao.AbstractAnyDAO.java", "BodyUseAPI": ["java.util.List<java.lang.String>.addAll(java.util.List<java.lang.String>)", "org.apache.syncope.core.persistence.jpa.dao.AbstractAnyDAO<A>.split(java.lang.String,java.util.List<java.lang.String>)"], "Fixed commit": "5c4181fcbe77ca2e57654b415ef5777f66f32fcd", "Url": "https://api.github.com/repos/apache/syncope", "Date": "2016-03-29T09:45:44Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((issue.getClosedTime()) != null) { long timeOpened = (issue.getClosedTime().getTime()) - (issue.getCreatedTime().getTime()); distribution.put(issue, timeOpened); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4723/buggy-version/backend.src.main.java.it.unimol.anpr_github_metrics.analytics.Analytics.java", "BodyUseAPI": ["issue.getCreatedTime().getTime()", "issue.getClosedTime().getTime()", "it.unimol.anpr_github_metrics.beans.Issue.getClosedTime()", "it.unimol.anpr_github_metrics.beans.Issue.getCreatedTime()", "java.util.HashMap<it.unimol.anpr_github_metrics.beans.Issue, java.lang.Long>.put(it.unimol.anpr_github_metrics.beans.Issue,long)"], "Fixed commit": "166bd5bfffce18a69c44b0ee2ea0059c0633f221", "Url": "https://api.github.com/repos/intersimone999/anpr-github-metrics", "Date": "2017-10-08T13:38:54Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((issue.getClosedTime()) != null) { meanClosingTime += (issue.getClosedTime().getTime()) - (issue.getCreatedTime().getTime()); total++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4723/buggy-version/backend.src.main.java.it.unimol.anpr_github_metrics.analytics.Analytics.java", "BodyUseAPI": ["issue.getCreatedTime().getTime()", "it.unimol.anpr_github_metrics.beans.Issue.getClosedTime()", "issue.getClosedTime().getTime()", "it.unimol.anpr_github_metrics.beans.Issue.getCreatedTime()"], "Fixed commit": "166bd5bfffce18a69c44b0ee2ea0059c0633f221", "Url": "https://api.github.com/repos/intersimone999/anpr-github-metrics", "Date": "2017-10-08T13:38:54Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mekanism.common.tile.TileEntityDigitalMiner.copy(mekanism.common.tile.TileEntityDigitalMiner)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((testInv[i]) != null) && ((testInv[i].getItem()) == null)) { testInv[i] = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5073/buggy-version/src.main.java.mekanism.common.tile.TileEntityDigitalMiner.java", "BodyUseAPI": [], "Fixed commit": "e12dd2597c9691a462bfbbc5c5d70b83beaa31ae", "Url": "https://api.github.com/repos/halvors/Mekanism", "Date": "2015-06-07T00:47:12Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cheese.squeeze.helpers.TimerFactory.getRunningTimer(cheese.squeeze.game.ReportStatus)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (t != null) { t.getState().setState(CSGame.currentState); t.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5921/buggy-version/core.src.cheese.squeeze.screens.GameScreen.java", "BodyUseAPI": ["cheese.squeeze.helpers.Timer.stop()", "t.getState().setState(CSGame.currentState)", "cheese.squeeze.helpers.Timer.getState()"], "Fixed commit": "7458a1132da900baa26b4337e93fefd9ee82a3aa", "Url": "https://api.github.com/repos/Camambar/CheeseSqueeze", "Date": "2014-11-11T19:10:42Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["morfologik.fsa.FSATraversal.match(morfologik.fsa.MatchResult,byte[],int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((match.kind) == (EXACT_MATCH)) && (!(containsSeparators))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8036/buggy-version/morfologik-speller.src.main.java.morfologik.speller.Speller.java", "BodyUseAPI": [], "Fixed commit": "8de7439fe8bf247be908f44cb9c386768c8e7c76", "Url": "https://api.github.com/repos/jaumeortola/morfologik-stemming", "Date": "2017-04-23T11:10:01Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((input.getFeatureList()) != null) { if (input.getFeatureList().isNeedWoeId()) { java.lang.String woeid = yqlUtil.getWoeid(input); input.setUrl((((input.getUrl()) + \"&w=\") + woeid)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4025/buggy-version/src.main.java.com.digdeep.infog.service.RssProvider.java", "BodyUseAPI": ["input.getFeatureList().isNeedWoeId()", "com.digdeep.infog.model.input.ContentRequestInput.getUrl()", "com.digdeep.infog.model.input.ContentRequestInput.setUrl((((input.getUrl()) + \"&w=\") + woeid))", "com.digdeep.infog.service.YQLProvider.getWoeid(com.digdeep.infog.model.input.ContentRequestInput)", "com.digdeep.infog.model.input.ContentRequestInput.getFeatureList()"], "Fixed commit": "2d10d5dfc3baf61aaf47c67803f25d6584186d27", "Url": "https://api.github.com/repos/infogdigdeep/infog", "Date": "2012-05-17T01:51:18Z"},
{"Line": "=>663", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.storagedriver.model.StoragePool.getCapabilities()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (capabilities == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3255/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.plugins.ExternalDeviceCommunicationInterface.java", "BodyUseAPI": [], "Fixed commit": "1fba49d6566e4e14132d462296fb2804593285c4", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-09-15T23:29:21Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentPlayers == 1) { for (int i = currentGame.getRiver().size(); i < 5; i++) { currentGame.addToRiver(deck.getFirst()); deck.remove(deck.getFirst()); } round = 4; playersDoneBetting = currentPlayers; }else { for (int i = 0; i < (players.size()); i++) { if (players.get(i).printState().equals(\"active|b\")) { playersDoneBetting++; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4562/buggy-version/app.src.main.java.com.ryan.poker.Game.java", "BodyUseAPI": [], "Fixed commit": "d71c08454180d703b72c17c2e6d20c9469b9ec2a", "Url": "https://api.github.com/repos/ryancanavan/Android-Poker", "Date": "2017-06-25T23:33:14Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (afterAdd) afterAdd = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7806/buggy-version/Whiteboard.java", "BodyUseAPI": [], "Fixed commit": "287d82b8d856576970e1c4c90a580da02f6f0a03", "Url": "https://api.github.com/repos/rhong612/whiteboard", "Date": "2016-05-20T22:24:19Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.scigap.iucig.controller.FileManagerController.commandExecutor) == null) { org.scigap.iucig.controller.FileManagerController.commandExecutor = new org.scigap.iucig.filemanager.CommandExecutor(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6681/buggy-version/portal.src.main.java.org.scigap.iucig.controller.FileManagerController.java", "BodyUseAPI": [], "Fixed commit": "81bac42e1ba3f6de608de1a4c8480087f962352e", "Url": "https://api.github.com/repos/SciGaP/IUGateway", "Date": "2014-03-24T15:50:36Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (header != null) { java.lang.String hql = \"from InvoiceItem where invoiceNum = :invoiceNum\"; itmList = ((java.util.List<com.peachy.web.dao.InvoiceItem>) (session().createQuery(hql).setInteger(\"invoiceNum\", header.getInvoiceNum()).list())); session().disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1204/buggy-version/Gemma.src.com.peachy.web.dao.InvoiceItemDao.java", "BodyUseAPI": ["session().createQuery(hql).setInteger(\"invoiceNum\", header.getInvoiceNum()).list()", "com.peachy.web.dao.InvoiceHeader.getInvoiceNum()", "session().createQuery(hql).setInteger(java.lang.String,header.getInvoiceNum())"], "Fixed commit": "2bac3394324f7edcf07415339de74fefd60bff11", "Url": "https://api.github.com/repos/tmarcoe/Peachy", "Date": "2017-01-09T03:27:19Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (getArguments().containsKey(com.fred.inventory.presentation.productlist.ProductListScreen.PRODUCT_LIST_ID_BUNDLE_KEY)) { productListId = getArguments().getLong(com.fred.inventory.presentation.productlist.ProductListScreen.PRODUCT_LIST_ID_BUNDLE_KEY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5412/buggy-version/app.src.main.java.com.fred.inventory.presentation.productlist.ProductListScreen.java", "BodyUseAPI": ["getArguments().getLong(java.lang.String)"], "Fixed commit": "034ca901ce238d53fd78bf7b669a5e67fb339537", "Url": "https://api.github.com/repos/fgoncalves/inventory", "Date": "2016-12-19T21:03:48Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (getArguments().containsKey(com.fred.inventory.presentation.items.ItemScreen.PRODUCT_ID)) { viewModel.forProduct(getArguments().getLong(com.fred.inventory.presentation.items.ItemScreen.PRODUCT_ID)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5412/buggy-version/app.src.main.java.com.fred.inventory.presentation.items.ItemScreen.java", "BodyUseAPI": ["com.fred.inventory.presentation.items.viewmodels.ItemViewModel.forProduct(getArguments().getLong(com.fred.inventory.presentation.items.ItemScreen.PRODUCT_ID))", "getArguments().getLong(java.lang.String)"], "Fixed commit": "034ca901ce238d53fd78bf7b669a5e67fb339537", "Url": "https://api.github.com/repos/fgoncalves/inventory", "Date": "2016-12-19T21:03:48Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (getArguments().containsKey(com.fred.inventory.presentation.items.ItemScreen.PRODUCT_LIST_ID)) { viewModel.forProductList(getArguments().getLong(com.fred.inventory.presentation.items.ItemScreen.PRODUCT_LIST_ID)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5412/buggy-version/app.src.main.java.com.fred.inventory.presentation.items.ItemScreen.java", "BodyUseAPI": ["getArguments().getLong(java.lang.String)", "com.fred.inventory.presentation.items.viewmodels.ItemViewModel.forProductList(getArguments().getLong(com.fred.inventory.presentation.items.ItemScreen.PRODUCT_LIST_ID))"], "Fixed commit": "034ca901ce238d53fd78bf7b669a5e67fb339537", "Url": "https://api.github.com/repos/fgoncalves/inventory", "Date": "2016-12-19T21:03:48Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((deliverTime.getHours()) < 11) { deliverTime.setHours(11); deliverTime.setMinutes(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7280/buggy-version/src.com.giot.fusion.controller.OrderAction.java", "BodyUseAPI": ["java.util.Date.setHours(int)", "java.util.Date.setMinutes(int)"], "Fixed commit": "286aad6d6c21d6f50cafb7ad9cd26a26986e1730", "Url": "https://api.github.com/repos/jiangmalone/fusion", "Date": "2016-04-25T02:29:24Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(xmlFile.exists())) || (!(xmlFile.canRead()))) { throw new de.dmarcini.submatix.android4.full.exceptions.NoXMLDataFileFoundException(((\"Cant found data-XML-File: <\" + (xmlFile.getFreeSpace())) + \">\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4230/buggy-version/src.de.dmarcini.submatix.android4.full.utils.UDDFFileCreateClass.java", "BodyUseAPI": ["java.io.File.getFreeSpace()"], "Fixed commit": "216b8e175b7b9413651c8168c467c0d47fccd8f9", "Url": "https://api.github.com/repos/dmarc0001/submatixBTAndroid4", "Date": "2014-01-26T14:10:53Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isNumeric(recebido1)) { float recebido = java.lang.Float.parseFloat(recebido1); java.lang.System.out.println((\"Troco: \" + (arredondar((recebido - total))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6698/buggy-version/ProgTexto.java", "BodyUseAPI": [], "Fixed commit": "853d4028fdc981248b9d5ec0973ad08ce2ed715b", "Url": "https://api.github.com/repos/alexandre1985/lista-precos", "Date": "2015-03-17T17:13:42Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cdata) != null) { if (offset > (cdata.length())) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); } if ((offset + count) > (cdata.length())) { cdata.delete(offset, ((cdata.length()) - offset)); }else { cdata.delete(offset, count); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5654/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "b1a3c1beeaaa7e0c7beb3b7579aaf8f7a228a4a2", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset > length) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5654/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "b1a3c1beeaaa7e0c7beb3b7579aaf8f7a228a4a2", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset > length) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5654/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "b1a3c1beeaaa7e0c7beb3b7579aaf8f7a228a4a2", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset + count) > length) { document.alpha[nodeNumber] = inDocOffset + offset; document.alphaLen[nodeNumber] = length - offset; }else { document.alpha[nodeNumber] = inDocOffset + offset; document.alphaLen[nodeNumber] = count; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5654/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "b1a3c1beeaaa7e0c7beb3b7579aaf8f7a228a4a2", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5654/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "b1a3c1beeaaa7e0c7beb3b7579aaf8f7a228a4a2", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(scannedDevices.contains(eachscannedDevices))) { scannedDevices.add(eachscannedDevices); com.apps.bluetooth_scanning.MainActivity.DeviceListAdapter deviceListAdapter = new com.apps.bluetooth_scanning.MainActivity.DeviceListAdapter(getApplicationContext(), scannedDevices); listView.setAdapter(deviceListAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1149/buggy-version/app.src.main.java.com.apps.bluetooth_scanning.MainActivity.java", "BodyUseAPI": ["java.util.List<com.apps.bluetooth_scanning.ScannedDevices>.add(com.apps.bluetooth_scanning.ScannedDevices)"], "Fixed commit": "9425cfe1e8a4a689fc94b8d39abe7e4f0cbf2d3a", "Url": "https://api.github.com/repos/kavidriod/Bluetooth_Scanning", "Date": "2017-06-22T14:11:10Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (autoWrite) workbook.write(outputStream);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6873/buggy-version/hsweb-expands-office.src.main.java.org.hswebframework.expands.office.excel.api.poi.callback.POIExcelWriterProcessor.java", "BodyUseAPI": [], "Fixed commit": "3b372eabb62808e66b1f3181544970e8dd2283b2", "Url": "https://api.github.com/repos/zhangzx8/hsweb-expands", "Date": "2017-01-03T09:53:33Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stride) != null) { return clone().flatten(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2254/buggy-version/org.eclipse.dawnsci.analysis.dataset.src.org.eclipse.dawnsci.analysis.dataset.impl.AbstractDataset.java", "BodyUseAPI": [], "Fixed commit": "369fd92511d65e5fa52be5efbdc633a3cd4cdd1e", "Url": "https://api.github.com/repos/xen-0/dawnsci", "Date": "2016-02-23T17:08:48Z"},
{"Line": "=>621", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.jikesrvm.VM.VerifyAssertions) org.jikesrvm.VM._assert((Rd != Rt), (((\"emitSTREX: \" + Rd) + \" == \") + Rt));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1558/buggy-version/rvm.src.org.jikesrvm.compilers.common.assembler.arm.Assembler.java", "BodyUseAPI": [], "Fixed commit": "51db6eebffb0a677b305fa0afaec922ffee24aa9", "Url": "https://api.github.com/repos/dmitry-brizhinev/JikesRVM", "Date": "2016-03-15T06:22:45Z"},
{"Line": "=>622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.jikesrvm.VM.VerifyAssertions) org.jikesrvm.VM._assert((Rd != Rn), (((\"emitSTREX: \" + Rd) + \" == \") + Rn));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1558/buggy-version/rvm.src.org.jikesrvm.compilers.common.assembler.arm.Assembler.java", "BodyUseAPI": [], "Fixed commit": "51db6eebffb0a677b305fa0afaec922ffee24aa9", "Url": "https://api.github.com/repos/dmitry-brizhinev/JikesRVM", "Date": "2016-03-15T06:22:45Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileByRelativePath == null) { com.intellij.psi.PsiFile[] files = com.intellij.psi.search.FilenameIndex.getFilesByName(project, fileName, projectScope(project)); if ((files.length) == 1) { fileByRelativePath = files[0].getVirtualFile(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3952/buggy-version/src.org.jboss.errai.idea.plugin.ui.TemplateUtil.java", "BodyUseAPI": [], "Fixed commit": "afb15a4b641acd74b17e6f736cfa50e996f699e8", "Url": "https://api.github.com/repos/errai/errai-intellij-idea-plugin", "Date": "2014-04-20T21:07:31Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(target.stance.receivesMediumAttacks)) { getTechniques(Techniques.REVERSAL_ATTACK, Techniques.GUARD, Techniques.SECOND_WIND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5539/buggy-version/core.src.com.majalis.character.EnemyCharacter.java", "BodyUseAPI": [], "Fixed commit": "20fd05a3ce17c2b82256928f8fbefd4049aebaa6", "Url": "https://api.github.com/repos/majalistic/tales-of-androgyny", "Date": "2016-10-16T20:43:18Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(target.stance.receivesMediumAttacks)) { return getTechniques(Techniques.POWER_ATTACK, Techniques.TEMPO_ATTACK, Techniques.RESERVED_ATTACK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5539/buggy-version/core.src.com.majalis.character.EnemyCharacter.java", "BodyUseAPI": [], "Fixed commit": "20fd05a3ce17c2b82256928f8fbefd4049aebaa6", "Url": "https://api.github.com/repos/majalistic/tales-of-androgyny", "Date": "2016-10-16T20:43:18Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(target.stance.receivesMediumAttacks)) { return getTechniques(Techniques.SPRING_ATTACK, Techniques.NEUTRAL_ATTACK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5539/buggy-version/core.src.com.majalis.character.EnemyCharacter.java", "BodyUseAPI": [], "Fixed commit": "20fd05a3ce17c2b82256928f8fbefd4049aebaa6", "Url": "https://api.github.com/repos/majalistic/tales-of-androgyny", "Date": "2016-10-16T20:43:18Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.exists())) { file.getParentFile().mkdirs(); file.createNewFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2077/buggy-version/src.main.java.com.boundlessgeo.wps.grass.GrassProcesses.java", "BodyUseAPI": ["java.io.File.createNewFile()", "java.io.File.mkdirs()", "java.io.File.getParentFile()"], "Fixed commit": "f9f857c221846e459843a7dc0cec6c2e0cce27ef", "Url": "https://api.github.com/repos/tbarsballe/grass", "Date": "2015-07-16T19:20:00Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBoard) == (com.sharesmile.share.rfac.fragments.LeaderBoardFragment.BOARD_TYPE.LEADERBOARD)) { org.greenrobot.eventbus.EventBus.getDefault().register(this); fetchLeaderBoardDataFromDb(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3896/buggy-version/app.src.main.java.com.sharesmile.share.rfac.fragments.LeaderBoardFragment.java", "BodyUseAPI": [], "Fixed commit": "b5a50ff4a9e4fc807c5d04dff8e34eef7b015b77", "Url": "https://api.github.com/repos/anshulagarwal06/Share", "Date": "2017-01-12T14:33:18Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.solmix.exchange.interceptor.support.ClientFaultConverter.parseStackTrackLine(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (stack != null) stackTraceList.add(stack);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8224/buggy-version/exchange.src.main.java.org.solmix.exchange.interceptor.support.ClientFaultConverter.java", "BodyUseAPI": ["java.util.List<java.lang.StackTraceElement>.add(java.lang.StackTraceElement)"], "Fixed commit": "46cae517aaafb1dea6f3cbfc80b4cd726b7897f8", "Url": "https://api.github.com/repos/solmix/commons", "Date": "2016-09-27T09:37:16Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getBoolean(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (track) { com.google.android.gms.location.GeofencingEvent event = com.google.android.gms.location.GeofencingEvent.fromIntent(intent); if (event.hasError()) { android.util.Log.e(com.forestoden.locationservices.services.GeofenceTransitionsIntentService.TAG, (\"GeofencingEvent Error: \" + (event.getErrorCode()))); return; } java.lang.String description = getGeofenceTransitionDetails(event); android.util.Log.i(com.forestoden.locationservices.services.GeofenceTransitionsIntentService.TAG, description); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1467/buggy-version/app.src.main.java.com.forestoden.locationservices.services.GeofenceTransitionsIntentService.java", "BodyUseAPI": [], "Fixed commit": "8124655db21e44cc7905c45dde33d423cf6ea512", "Url": "https://api.github.com/repos/forestoden6/LocationAndroidApp", "Date": "2017-04-10T00:03:34Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["taskie.parser.CommandParser.getCommandParameters(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(query.isEmpty())) { cmd.setTaskTitleToUpdate(query); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5853/buggy-version/src.taskie.parser.CommandParser.java", "BodyUseAPI": ["taskie.commands.UpdateCommand.setTaskTitleToUpdate(java.lang.String)"], "Fixed commit": "f409ab97b118206b2d9c800a93916fef1e7be3af", "Url": "https://api.github.com/repos/cs2103jan2015-t15-2j/main", "Date": "2015-04-01T08:10:15Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tv.acfun.a63.AcApp.getUser()) != null) { pageIndex = 1; requestData(pageIndex, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7425/buggy-version/src.tv.acfun.a63.MentionActivity.java", "BodyUseAPI": [], "Fixed commit": "2d44198c7773971281464391d6bff39df537bd9a", "Url": "https://api.github.com/repos/yrom/AcFun-Area63", "Date": "2013-10-16T05:16:07Z"},
{"Line": "=>958", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tgPoints == null) || ((tgPoints.size()) == 0)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2627/buggy-version/renderer.mil-sym-renderer.src.main.java.sec.web.renderer.MultiPointHandler.java", "BodyUseAPI": [], "Fixed commit": "8618a402d349c7bceb94bb33ad81bec0c74af060", "Url": "https://api.github.com/repos/missioncommand/mil-sym-java", "Date": "2015-08-03T22:14:29Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((key instanceof com.jetbrains.python.inspections.PyNumericLiteralExpression) && (defaultValue instanceof com.jetbrains.python.inspections.PyNumericLiteralExpression)) { if (key.getText().equals(defaultValue.getText())) return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6360/buggy-version/python.src.com.jetbrains.python.inspections.PyArgumentEqualDefaultInspection.java", "BodyUseAPI": ["key.getText().equals(defaultValue.getText())", "com.jetbrains.python.inspections.PyExpression.getText()", "com.jetbrains.python.inspections.PyExpression.getText()"], "Fixed commit": "36d507f809af4afdf49d814e0d9329ddf2cf50c5", "Url": "https://api.github.com/repos/gencer/intellij-community", "Date": "2014-01-23T14:56:05Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.getHost()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (platformString.contains(\"urionlinejudge\")) { contestPlatform.setImageResource(R.mipmap.urioj_logo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1679/buggy-version/app.src.main.java.com.iitp.njack.iitp_connect.CodingCalendar.Adapters.CodingCalendarAdapter.java", "BodyUseAPI": [], "Fixed commit": "616f78e704626c165a459231dfaa655dc90b26fc", "Url": "https://api.github.com/repos/anandwana001/IITP-Connect", "Date": "2017-12-10T20:03:57Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (y == (mLastY)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3800/buggy-version/smooth-app-bar-layout.src.main.java.me.henrytao.smoothappbarlayout.SmoothAppBarLayout.java", "BodyUseAPI": [], "Fixed commit": "2fabe4876df40c6e03880ea20ea1097bbf0e8446", "Url": "https://api.github.com/repos/henrytao-me/smooth-app-bar-layout", "Date": "2016-09-10T09:47:56Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOwner(userId)) { mage.server.TableController.logger.debug((\"New table removed because owner submitted invalid deck tableId \" + (table.getId()))); mage.server.TableManager.getInstance().removeTable(table.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3265/buggy-version/Mage.Server.src.main.java.mage.server.TableController.java", "BodyUseAPI": [], "Fixed commit": "a57ebc5314e7efa6ed711934433e026863611578", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2014-09-19T11:37:59Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(getState().equals(TableState.WAITING))) && (!(getState().equals(TableState.READY_TO_START)))) { setState(TableState.FINISHED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3265/buggy-version/Mage.src.mage.game.Table.java", "BodyUseAPI": [], "Fixed commit": "a57ebc5314e7efa6ed711934433e026863611578", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2014-09-19T11:37:59Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(curClass.name.equals(curClass.finalName))) { for (com.flamefire.smali.types.SmaliClass c : classes.values()) { if (c.finalName.startsWith(((curClass.name) + \"->\"))) { c.finalName = (curClass.finalName) + (c.finalName.substring(curClass.name.length())); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3249/buggy-version/src.com.flamefire.smali.parser.SmaliParser.java", "BodyUseAPI": ["curClass.name.length()", "c.finalName.startsWith(((curClass.name) + \"->\"))", "c.finalName.substring(curClass.name.length())"], "Fixed commit": "a6ca8e25f15b98bc6fbe47298d1814ad63d32ef1", "Url": "https://api.github.com/repos/Flamefire/ImportSmaliVarNames", "Date": "2014-02-17T18:23:01Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(getPadding(rr))) { setPadding(new monakhv.android.samlib.awesome.Rect()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5753/buggy-version/samlib-android.src.main.java.monakhv.android.samlib.awesome.TextLabel.java", "BodyUseAPI": [], "Fixed commit": "0f14cc0c8a2f2b35918c7aee28e2ac63b0e56cb8", "Url": "https://api.github.com/repos/monakhv/samlib-Info", "Date": "2016-06-01T11:07:26Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isClosed()) this.getStreamProvider().cancel(this.uqi);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2283/buggy-version/privacystreams-core.src.main.java.com.github.privacystreams.core.Stream.java", "BodyUseAPI": [], "Fixed commit": "bf38722e2916de938dd1e54a62f4a2b5166c1ae0", "Url": "https://api.github.com/repos/PrivacyStreams/PrivacyStreams", "Date": "2017-03-21T00:28:27Z"},
{"Line": "=>600", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.lobby.getCurrentArena()) != null) this.lobby.teleportToArena(this, this.lobby.getCurrentArena());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1501/buggy-version/src.com.bimmr.mcinfected.IPlayers.IPlayer.java", "BodyUseAPI": ["com.bimmr.mcinfected.Lobbys.Lobby.teleportToArena(com.bimmr.mcinfected.IPlayers.IPlayer,this.lobby.getCurrentArena())", "com.bimmr.mcinfected.Lobbys.Lobby.getCurrentArena()"], "Fixed commit": "c5b16da1e88d26bfccee93941b388983139a9fa7", "Url": "https://api.github.com/repos/Bimmr/McInfected", "Date": "2014-10-28T03:15:42Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lobby.getGameState()) != (com.bimmr.mcinfected.Lobbys.Lobby.GameState.GameOver)) iPlayer.respawn();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1501/buggy-version/src.com.bimmr.mcinfected.Command.SubCommands.JoinCommand.java", "BodyUseAPI": [], "Fixed commit": "c5b16da1e88d26bfccee93941b388983139a9fa7", "Url": "https://api.github.com/repos/Bimmr/McInfected", "Date": "2014-10-28T03:15:42Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((level) <= 0) detach();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6669/buggy-version/src.com.shatteredpixel.shatteredpixeldungeon.plants.Sungrass.java", "BodyUseAPI": [], "Fixed commit": "605ec622236839820b73ca9701e7a2db8f8cc9ec", "Url": "https://api.github.com/repos/00-Evan/shattered-pixel-dungeon", "Date": "2014-08-28T13:54:27Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (result.getString(1).equals(\"true\")) { response.setData(\"true\"); response.setID(result.getInt(2)); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/424/buggy-version/RenameMe.backend.src.main.java.com.TeamSpoiler.game.Remindme.backend.MyEndpoint.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(int)", "com.TeamSpoiler.game.Remindme.backend.MyBean.setID(int)"], "Fixed commit": "2d56e3dc1a35ce3937f6182a9fee01f7287cce32", "Url": "https://api.github.com/repos/leeh14/RemindMe", "Date": "2016-05-05T02:16:56Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.random()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((goals.size()) < amountGoals) && (rand <= 0.5)) { goals.add(new cheese.squeeze.gameObjects.Goal(vl.getPoint2())); set = true; }else if ((traps.size()) < amountTraps) { traps.add(new cheese.squeeze.gameObjects.Trap(vl.getPoint2())); set = true; }else if ((!set) && ((goals.size()) < amountGoals)) { goals.add(new cheese.squeeze.gameObjects.Goal(vl.getPoint2())); set = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6577/buggy-version/core.src.cheese.squeeze.gameLogic.GameBoard.java", "BodyUseAPI": ["java.util.List<cheese.squeeze.gameObjects.Goal>.size()", "java.util.List<cheese.squeeze.gameObjects.Goal>.add(cheese.squeeze.gameObjects.Goal)", "java.util.List<cheese.squeeze.gameObjects.Goal>.add(cheese.squeeze.gameObjects.Goal)"], "Fixed commit": "18b656352cab841533884f19cb5db787a42a7fe9", "Url": "https://api.github.com/repos/BartOutOfTheBox/CheeseSqueeze", "Date": "2014-10-27T10:20:39Z"},
{"Line": "=>762", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.twobytes.repair.service.ServiceOrderService.selectByID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((so.getAppointmentDate()) != null) { form.setAppointmentDate(sdfDateTime.format(so.getAppointmentDate())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3938/buggy-version/src.main.java.com.twobytes.repair.controller.ServiceOrderController.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(so.getAppointmentDate())", "com.twobytes.repair.form.ServiceOrderForm.setAppointmentDate(java.lang.String)", "com.twobytes.model.ServiceOrder.getAppointmentDate()"], "Fixed commit": "bd551d182af7c2fd6cc67f2d90990266d7346c09", "Url": "https://api.github.com/repos/zeazon/Computer-service-center", "Date": "2011-10-26T03:04:04Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<org.tekkotsu.api.TransitionInstance>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (j != ((current.getNumOfSources()) - 1)) { transitions += \", \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2788/buggy-version/src.org.tekkotsu.api.BehaviorWriter.java", "BodyUseAPI": [], "Fixed commit": "b34297ebe40c64de36817f4e507b1f4897789b1a", "Url": "https://api.github.com/repos/toledoalbert/ComposerUIAPI", "Date": "2013-07-30T22:34:46Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tokens.length) > 2) { label.setTitle(tokens[2]); }else { label.setTitle(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/479/buggy-version/src.main.java.com.vagm.vagmdroid.service.LabelService.java", "BodyUseAPI": ["com.vagm.vagmdroid.dto.LabelDTO.setTitle(java.lang.String)"], "Fixed commit": "3dcff04578743b027cec29f5cf8867c4c65512ce", "Url": "https://api.github.com/repos/romif/VAGm", "Date": "2014-05-12T21:04:05Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getContentResolver().query(ScannedApplicationContract.CONTENT_URI,<nulltype>,((org.satorysoft.cotton.db.contract.ScannedApplicationContract.APPLICATION_NAME) + \"=?\"),java.lang.String[],<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (cursor != null) { cursor.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7593/buggy-version/app.src.main.java.org.satorysoft.cotton.adapter.ApplicationListAdapter.java", "BodyUseAPI": ["android.database.Cursor.close()"], "Fixed commit": "98247c16a35c18f91448f1ba0c38d46654308b6d", "Url": "https://api.github.com/repos/viacheslavokolitiy/cotton", "Date": "2015-05-12T12:23:33Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gameItems.Token.getSpaceID()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((hashMap.get(temp).getSafeNextID()) != null) && ((hashMap.get(hashMap.get(temp).getSafeNextID()).getDefaultColor()) == (utilities.Color.values()[turn]))) { temp = hashMap.get(temp).getSafeNextID(); }else { temp = hashMap.get(temp).getNextID(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6013/buggy-version/Sorry!.src.mvc.model.GameSystem.java", "BodyUseAPI": ["hashMap.get(temp).getSafeNextID()", "java.util.HashMap<java.util.UUID, spaces.Space>.get(java.util.UUID)", "hashMap.get(temp).getNextID()", "java.util.HashMap<java.util.UUID, spaces.Space>.get(java.util.UUID)"], "Fixed commit": "1cc8c43d6f0bf8c5b63eea42d6e294ad55412779", "Url": "https://api.github.com/repos/dgoree/HCI_Sorry", "Date": "2017-05-01T21:11:27Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(undoStack.isEmpty())) savedAtAction = undoStack.peek(); else savedAtAction = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/856/buggy-version/src.readySETgo.managers.UndoManager.java", "BodyUseAPI": ["java.util.Stack<readySETgo.models.stageactions.StageAction>.peek()"], "Fixed commit": "0e148ed15ba4a7165986f710e371d5860fa4510b", "Url": "https://api.github.com/repos/BenjaminMarshall/ReadySETgo", "Date": "2016-12-01T05:05:30Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4292/buggy-version/jdbctemplate.mapper.TemplateRowMapper.java", "BodyUseAPI": [], "Fixed commit": "d357c349789b2a16a275b9a9c93e94888334cd6a", "Url": "https://api.github.com/repos/kongzhidea/spring-mvc", "Date": "2016-10-19T08:47:04Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((performanceSubject) == null) return edu.vserver.misconception.MisconceptionPerformanceSubject.NONE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8970/buggy-version/vexer-model.src.main.java.fi.utu.ville.exercises.model.AbstractMisconceptionExecutor.java", "BodyUseAPI": [], "Fixed commit": "f103e2f5a1279938343e8dc1ba0f0ba02a56dfd8", "Url": "https://api.github.com/repos/villeteam/vexer", "Date": "2015-07-02T09:41:14Z"},
{"Line": "=>634", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["TypeChecker.Env.lookupVar(p.ident_)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((t == (TypeChecker.TypeCode.CArrInt)) || (t == (TypeChecker.TypeCode.CArrDouble))) || (t == (TypeChecker.TypeCode.CArrBool))) return new TypeChecker.AnnoExpr(TypeChecker.TypeCode.CInt, new AnnoType(transferTypeCode(TypeChecker.TypeCode.CInt), p)); else throw new TypeException(\"unmatched type\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1429/buggy-version/TypeChecker.java", "BodyUseAPI": [], "Fixed commit": "844c1975ab0c74bd56e2f0ba375e1e625cdc0255", "Url": "https://api.github.com/repos/Charles-Lau-/CompilerConstruction", "Date": "2015-06-08T11:31:54Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (emcConfigFiles != null) { for (int index = (emcConfigFiles.length) - 1; index >= 0; --index) { PacketHandler.INSTANCE.sendTo(new net.multiplemonomials.eer.network.message.MessageEMCConfigUpdateToClient(emcConfigFiles[index], (index == 0)), ctx.getServerHandler().playerEntity); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5609/buggy-version/src.main.java.net.multiplemonomials.eer.network.message.MessageRequestConfiguration.java", "BodyUseAPI": ["PacketHandler.INSTANCE.sendTo(net.multiplemonomials.eer.network.message.MessageEMCConfigUpdateToClient,ctx.getServerHandler().playerEntity)"], "Fixed commit": "c0872d1756704874f989d3d3f334da27eb06574d", "Url": "https://api.github.com/repos/multiplemonomials/Equivalent-Exchange-Reborn", "Date": "2015-01-25T16:08:36Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((inputStack.getWrappedStack()) instanceof net.minecraft.item.ItemStack) && ((((net.minecraft.item.ItemStack) (inputStack.getWrappedStack())).getItemDamage()) == (net.minecraftforge.oredict.OreDictionary.WILDCARD_VALUE))) { net.multiplemonomials.eer.util.LogHelper.debug((\"Didn't add wildcard recipe with product \" + (((net.minecraft.item.ItemStack) (outputStack.getWrappedStack())).getDisplayName()))); foundWildcard = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5609/buggy-version/src.main.java.net.multiplemonomials.eer.recipe.RecipeRegistry.java", "BodyUseAPI": [], "Fixed commit": "c0872d1756704874f989d3d3f334da27eb06574d", "Url": "https://api.github.com/repos/multiplemonomials/Equivalent-Exchange-Reborn", "Date": "2015-01-25T16:08:36Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (emcConfigFiles != null) { for (int index = (emcConfigFiles.length) - 1; index >= 0; --index) { PacketHandler.INSTANCE.sendToAll(new net.multiplemonomials.eer.network.message.MessageEMCConfigUpdateToClient(emcConfigFiles[index], (index == 0))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5609/buggy-version/src.main.java.net.multiplemonomials.eer.network.message.MessageEMCConfigUpdateToServer.java", "BodyUseAPI": ["PacketHandler.INSTANCE.sendToAll(net.multiplemonomials.eer.network.message.MessageEMCConfigUpdateToClient)"], "Fixed commit": "c0872d1756704874f989d3d3f334da27eb06574d", "Url": "https://api.github.com/repos/multiplemonomials/Equivalent-Exchange-Reborn", "Date": "2015-01-25T16:08:36Z"},
{"Line": "=>764", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isClusteringEnable) { hardThrottleContext.setConfigurationContext(cc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7531/buggy-version/components.apimgt.org.wso2.carbon.apimgt.gateway.src.main.java.org.wso2.carbon.apimgt.gateway.handlers.throttling.APIThrottleHandler.java", "BodyUseAPI": [], "Fixed commit": "5e161a4fbcda5c632f6048582bbf789d80f4f42a", "Url": "https://api.github.com/repos/lakmali/carbon-apimgt", "Date": "2015-12-14T10:49:46Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mShowAR) { for (int i = 0; i < (mARObject.size()); i++) mARObject.get(i).draw(mPreviousRotMatrix, mProjectionMatrix); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7596/buggy-version/app.src.main.java.com.kunato.imagestitching.GLRenderer.java", "BodyUseAPI": [], "Fixed commit": "ab32aeddde59f2b41e1799c75a91a951583695db", "Url": "https://api.github.com/repos/kunato/ImageStitching", "Date": "2017-04-03T07:51:17Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((mDates) == null) || ((mPrices) == null)) || ((mDates.size()) != (mPrices.size()))) { com.crashlytics.android.Crashlytics.log(\"graph dates and prices are of different sizes\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8119/buggy-version/app.src.main.java.zmuzik.czechstocks.fragments.StockGraphFragment.java", "BodyUseAPI": [], "Fixed commit": "d871d7e2a098871535705d8031f29ce2bbe23752", "Url": "https://api.github.com/repos/zmuzik/czech-stocks", "Date": "2015-03-23T08:22:12Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataSnapshot_FriendList_FG) == null) { android.util.Log.d(\"FriendList\", \"fail get FG\"); }else { Friend_temp = uw.studybuddy.UserProfile.FirebaseUserInfo.get_friend_list_fromDatabase(dataSnapshot_FriendList_FG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1613/buggy-version/StudyBuddy.app.src.main.java.uw.studybuddy.UserProfile.FriendListFragment.java", "BodyUseAPI": [], "Fixed commit": "9cbdf12eae2173ef2eb796c68a37af143cd36d2f", "Url": "https://api.github.com/repos/Leksha/StudyBuddy", "Date": "2017-07-12T21:37:10Z"},
{"Line": "=>553", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (postedDrmsDocument == null) { throw new gov.ca.cwds.rest.services.ServiceException(\"Unable to Create DRMS Document\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8897/buggy-version/src.main.java.gov.ca.cwds.rest.services.ScreeningToReferralService.java", "BodyUseAPI": [], "Fixed commit": "f64d7af4e7298a38496fae68ce763ee547b375d0", "Url": "https://api.github.com/repos/ca-cwds/API", "Date": "2017-07-06T21:04:46Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nasa.worldwind.cache.MemoryCache.getObject(gov.nasa.worldwind.util.TileKey)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (geometry != null) { verts = geometry.getVertices(); texCoords = geometry.getTexCoords(); }else if (dc.getGLRuntimeCapabilities().isUseVertexBufferObject()) { verts = java.nio.FloatBuffer.allocate((numVertices * 3)); texCoords = java.nio.FloatBuffer.allocate((numVertices * 2)); }else { verts = com.sun.opengl.util.BufferUtil.newFloatBuffer((numVertices * 3)); texCoords = com.sun.opengl.util.BufferUtil.newFloatBuffer((numVertices * 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5296/buggy-version/Common.src.main.java.au.gov.ga.worldwind.common.layers.curtain.Path.java", "BodyUseAPI": ["au.gov.ga.worldwind.common.layers.curtain.SegmentGeometry.getTexCoords()", "au.gov.ga.worldwind.common.layers.curtain.SegmentGeometry.getVertices()"], "Fixed commit": "65d81773c66d37879a6e7030a3970b2ba40df3ae", "Url": "https://api.github.com/repos/ga-m3dv/ga-worldwind-suite", "Date": "2012-06-06T04:26:34Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nasa.worldwind.cache.MemoryCache.getObject(gov.nasa.worldwind.util.TileKey)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (geometry == null) { geometry = new au.gov.ga.worldwind.common.layers.curtain.SegmentGeometry(dc, verts, texCoords, refCenter); cache.add(tileKey, geometry, geometry.getSizeInBytes()); }else { geometry.update(dc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5296/buggy-version/Common.src.main.java.au.gov.ga.worldwind.common.layers.curtain.Path.java", "BodyUseAPI": ["au.gov.ga.worldwind.common.layers.curtain.SegmentGeometry.update(gov.nasa.worldwind.render.DrawContext)"], "Fixed commit": "65d81773c66d37879a6e7030a3970b2ba40df3ae", "Url": "https://api.github.com/repos/ga-m3dv/ga-worldwind-suite", "Date": "2012-06-06T04:26:34Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.google.gwt.user.client.Window.getClientHeight()) - 150) <= 564) { org.ednovo.gooru.client.util.ScrollPopupUtil.widgetContainer.getElement().getStyle().setHeight(((com.google.gwt.user.client.Window.getClientHeight()) - 150), Unit.PX); org.ednovo.gooru.client.util.ScrollPopupUtil.widgetContainer.getElement().getStyle().setOverflowY(Overflow.AUTO); org.ednovo.gooru.client.util.ScrollPopupUtil.widgetContainer.getElement().getStyle().setOverflowX(Overflow.AUTO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6731/buggy-version/src.main.java.org.ednovo.gooru.client.util.ScrollPopupUtil.java", "BodyUseAPI": [], "Fixed commit": "64bba741892a8814374e3c80635567cb59661f73", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-01-30T11:20:55Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSharedPreferences(\"com.danielblakes.progressbook\", com.danielblakes.progressbook.MODE_PRIVATE).getBoolean(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (firstrun) { new android.app.AlertDialog.Builder(this).setTitle(\"First Run\").show(); pickDistrict(this); getSharedPreferences(\"com.danielblakes.progressbook\", com.danielblakes.progressbook.MODE_PRIVATE).edit().putBoolean(\"firstrun\", false).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/666/buggy-version/progressbook.src.com.danielblakes.progressbook.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "567555ebb9af04fe3a65fd6721de53d22028baf3", "Url": "https://api.github.com/repos/danielblakes/progressbook", "Date": "2013-03-15T01:47:58Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (use == null) { java.lang.System.err.println((\"Debuging use is null: data is:\" + data)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/251/buggy-version/programprocessor.src.main.java.cn.yyx.research.language.JDTManager.ScopeDataManager.java", "BodyUseAPI": [], "Fixed commit": "21d7920949efd4d575f8008f9794ea9fa70e6d9b", "Url": "https://api.github.com/repos/yangyiPATHof/gitcrawler", "Date": "2015-12-20T02:45:46Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t.getName().equals(\"Patient ID Card Generation\")) { flag = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8744/buggy-version/src.main.java.org.cancure.cpa.service.MyTasksServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "f3b73a338dd1f17479c5e408d51a4420d426e9a6", "Url": "https://api.github.com/repos/cancure-foundation/cancure-process-automation", "Date": "2016-09-29T08:44:45Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.provideApplicationVersion) == null) { useAgvtool = (!(cfBundleVersionValue.isEmpty())) && (!(cfBundleShortVersionStringValue.isEmpty())); }else { useAgvtool = this.provideApplicationVersion.booleanValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7851/buggy-version/src.main.java.au.com.rayh.XCodeBuilder.java", "BodyUseAPI": [], "Fixed commit": "0d86e4273419bc0b82a3647a3f5036e49f473c8e", "Url": "https://api.github.com/repos/iosphere/xcode-plugin", "Date": "2013-11-14T09:32:24Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((query) instanceof com.alibaba.druid.sql.ast.statement.SQLSelectQueryBlock) { java.lang.String dbType = ((com.alibaba.druid.sql.ast.statement.SQLSelectQueryBlock) (query)).dbType; if (dbType != null) { return com.alibaba.druid.sql.SQLUtils.toSQLString(this, dbType); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1153/buggy-version/src.main.java.com.alibaba.druid.sql.ast.statement.SQLSelect.java", "BodyUseAPI": [], "Fixed commit": "ee5ec033bae774798f73dd1db4e68566799977f4", "Url": "https://api.github.com/repos/FlakyTestDetection/druid", "Date": "2017-11-03T03:17:00Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.druid.sql.ast.statement.SQLSelect.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parent instanceof com.alibaba.druid.sql.dialect.oracle.ast.OracleSQLObject) { return com.alibaba.druid.sql.SQLUtils.toSQLString(this, JdbcConstants.ORACLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1153/buggy-version/src.main.java.com.alibaba.druid.sql.ast.statement.SQLSelect.java", "BodyUseAPI": [], "Fixed commit": "ee5ec033bae774798f73dd1db4e68566799977f4", "Url": "https://api.github.com/repos/FlakyTestDetection/druid", "Date": "2017-11-03T03:17:00Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mondrian.rolap.RolapAggregationManager.makeRequest(mondrian.rolap.Member[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (request.isUnsatisfiable()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4542/buggy-version/src.main.mondrian.rolap.SqlConstraintUtils.java", "BodyUseAPI": [], "Fixed commit": "20542e260ddc6d769daee5c4def358909ffc2ebf", "Url": "https://api.github.com/repos/hbfernandes/mondrian", "Date": "2015-01-09T15:09:40Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentMethod.equals(\"main\")) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4979/buggy-version/src.peifedorentos.visitors.ClassInstanceCreationVisitor.java", "BodyUseAPI": [], "Fixed commit": "b9c225ae56a76e1baa394724a7a2bcd91cc85e45", "Url": "https://api.github.com/repos/MiguelMatos/PEIFedorentos", "Date": "2013-08-19T13:38:12Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.md_5.bungee.api.ProxyServer.getInstance().getPlayer(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (target.getName().equals(sender.getName())) { sender.sendMessage(new net.md_5.bungee.api.chat.TextComponent(((net.md_5.bungee.api.ChatColor.RED) + \"You cannot message yourself.\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5979/buggy-version/src.main.java.net.warvale.bungeecore.MSGCommand.java", "BodyUseAPI": ["net.md_5.bungee.api.CommandSender.sendMessage(net.md_5.bungee.api.chat.TextComponent)"], "Fixed commit": "1b44f49dc10b58b8c7b68ee9fe69a81f8a627e33", "Url": "https://api.github.com/repos/Warvale/BungeeCore", "Date": "2017-10-02T11:30:46Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.habarta.typescript.generator.Settings.loadInstance(java.lang.ClassLoader,java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (emitterExtension instanceof cz.habarta.typescript.generator.Extension) { final cz.habarta.typescript.generator.Extension extension = ((cz.habarta.typescript.generator.Extension) (emitterExtension)); extension.setConfiguration(cz.habarta.typescript.generator.util.Utils.mapFromNullable(configuredExtension.configuration)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/590/buggy-version/typescript-generator-core.src.main.java.cz.habarta.typescript.generator.Settings.java", "BodyUseAPI": [], "Fixed commit": "3ec92641c6539e7d84860ee60d885ddfcfa9865e", "Url": "https://api.github.com/repos/vojtechhabarta/typescript-generator", "Date": "2017-12-02T22:05:39Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((operation) != null) && (\"create-drop\".equalsIgnoreCase(operation))) { com.impetus.client.rethink.schemamanager.RethinkDBSchemaManager.r.dbDrop(databaseName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/9074/buggy-version/src.kundera-rethinkdb.src.main.java.com.impetus.client.rethink.schemamanager.RethinkDBSchemaManager.java", "BodyUseAPI": [], "Fixed commit": "b611280292fba5b2d875315a085a7379ddf36cfc", "Url": "https://api.github.com/repos/Impetus/Kundera", "Date": "2017-11-16T13:53:14Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.impetus.client.rethink.schemamanager.RethinkDBSchemaManager.r.dbList().run(com.rethinkdb.net.Connection)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(dbList.contains(databaseName))) { com.impetus.client.rethink.schemamanager.RethinkDBSchemaManager.r.dbCreate(databaseName).run(connection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/9074/buggy-version/src.kundera-rethinkdb.src.main.java.com.impetus.client.rethink.schemamanager.RethinkDBSchemaManager.java", "BodyUseAPI": ["com.impetus.client.rethink.schemamanager.RethinkDBSchemaManager.r.dbCreate(databaseName).run(com.rethinkdb.net.Connection)", "com.rethinkdb.RethinkDB.dbCreate(com.impetus.client.rethink.schemamanager.RethinkDBSchemaManager)"], "Fixed commit": "b611280292fba5b2d875315a085a7379ddf36cfc", "Url": "https://api.github.com/repos/Impetus/Kundera", "Date": "2017-11-16T13:53:14Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((event.getRawX()) + selectorWidth) > (getRight())) { mClipAmount = 1; invalidate(); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/7278/buggy-version/library.src.main.java.co.ceryle.segmentedbutton.SegmentedButtonGroup.java", "BodyUseAPI": [], "Fixed commit": "c30166e838c3eaa1a76a9dcdc6c49c7fd0e97088", "Url": "https://api.github.com/repos/ceryle/SegmentedButton", "Date": "2017-04-11T10:05:05Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((openbis.getSamplesofExperiment(e.getIdentifier()).size()) > 0) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4406/buggy-version/ProjectWizard.src.control.WizardController.java", "BodyUseAPI": [], "Fixed commit": "8c9efa170ebdc567f171d8b093bd72199166e526", "Url": "https://api.github.com/repos/qbicsoftware/projectwizard", "Date": "2016-04-20T09:49:41Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((chipOptions.filterableListBackgroundColor) != null) { this.filterableRecyclerView.getBackground().setColorFilter(chipOptions.filterableListBackgroundColor.getDefaultColor(), PorterDuff.Mode.SRC_ATOP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1498/buggy-version/library.src.main.java.com.tylersuehr.library.ChipsInput.java", "BodyUseAPI": ["chipOptions.filterableListBackgroundColor.getDefaultColor()", "this.filterableRecyclerView.getBackground().setColorFilter(chipOptions.filterableListBackgroundColor.getDefaultColor(),PorterDuff.Mode.SRC_ATOP)"], "Fixed commit": "c1461dac5633e788094da96f748fe9eed6842873", "Url": "https://api.github.com/repos/tylersuehr7/chips-input-layout", "Date": "2017-10-08T06:03:13Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.sangupta.jerry.util.AssertUtils.isEmpty(filesToDownload)) { java.lang.System.out.println(\"Nothing in the specified folder on github. Make sure the path is correct!\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5784/buggy-version/src.main.java.com.sangupta.neo.helper.GithubRipper.java", "BodyUseAPI": [], "Fixed commit": "679c32b0a8eb109acf92dc82d08dd146b7d99b5a", "Url": "https://api.github.com/repos/sangupta/neo", "Date": "2016-05-16T12:01:31Z"},
{"Line": "=>826", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((layout) != null) { layout.removeViewAt(0); layout.addView(getInventoryListViewFromDatabase(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4692/buggy-version/src.com.indrimuska.kulinaria.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "64fff20d59c6ed56b9888117340ffad037e24632", "Url": "https://api.github.com/repos/indrimuska/Kulinaria", "Date": "2012-06-02T14:04:05Z"},
{"Line": "=>845", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((layout) != null) { layout.removeViewAt(0); layout.addView(getInventoryListViewFromDatabase(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4692/buggy-version/src.com.indrimuska.kulinaria.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "64fff20d59c6ed56b9888117340ffad037e24632", "Url": "https://api.github.com/repos/indrimuska/Kulinaria", "Date": "2012-06-02T14:04:05Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedList<com.github.johnpersano.supertoasts.SuperActivityToast>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((superActivityToast.getType()) == (SuperToast.Type.PROGRESS_HORIZONTAL)) { if ((superActivityToast.getProgress()) == (superActivityToast.getMaxProgress())) { mList.remove(superActivityToast); this.showNextSuperToast(); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4816/buggy-version/supertoasts.src.com.github.johnpersano.supertoasts.ManagerSuperActivityToast.java", "BodyUseAPI": ["com.github.johnpersano.supertoasts.SuperActivityToast.getProgress()", "com.github.johnpersano.supertoasts.SuperActivityToast.getMaxProgress()", "java.util.LinkedList<com.github.johnpersano.supertoasts.SuperActivityToast>.remove(com.github.johnpersano.supertoasts.SuperActivityToast)"], "Fixed commit": "7eb73ef0e74a7683374b2c9c58f8ac7b67963d74", "Url": "https://api.github.com/repos/JohnPersano/SuperToasts", "Date": "2014-02-09T19:41:34Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(superActivityToast.isShowing())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4816/buggy-version/supertoasts.src.com.github.johnpersano.supertoasts.ManagerSuperActivityToast.java", "BodyUseAPI": [], "Fixed commit": "7eb73ef0e74a7683374b2c9c58f8ac7b67963d74", "Url": "https://api.github.com/repos/JohnPersano/SuperToasts", "Date": "2014-02-09T19:41:34Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (h.getCapabilities().contains(SDNCapability.L2)) { if ((!(h.isEntryHop())) && (!(h.isExitHop()))) response = teardownL2Bypass(h, circuitID); else response = teardownL2Hop(h, circuitID); if (response != (ISDNConnectorResponse.SUCCESS)) return response; }else { response = teardownL1Hop(h, circuitID); if (response != (ISDNConnectorResponse.SUCCESS)) return response; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8836/buggy-version/src.main.java.net.es.oscars.pss.sdn.connector.FloodlightSDNConnector.java", "BodyUseAPI": ["net.es.oscars.topoBridge.sdn.SDNHop.isEntryHop()", "net.es.oscars.pss.sdn.connector.FloodlightSDNConnector.teardownL2Hop(net.es.oscars.topoBridge.sdn.SDNHop,java.lang.String)", "net.es.oscars.pss.sdn.connector.FloodlightSDNConnector.teardownL1Hop(net.es.oscars.topoBridge.sdn.SDNHop,java.lang.String)", "net.es.oscars.topoBridge.sdn.SDNHop.isExitHop()", "net.es.oscars.pss.sdn.connector.FloodlightSDNConnector.teardownL2Bypass(net.es.oscars.topoBridge.sdn.SDNHop,java.lang.String)"], "Fixed commit": "1e40dcc4a58b7db371ccebfc97608706091067e1", "Url": "https://api.github.com/repos/hsr/oscars-sdnpss", "Date": "2013-09-16T03:38:30Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.length()) > 0) tvTackleValue.setText(sb.substring(0, ((sb.length()) - 2)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/18/buggy-version/app.src.main.java.net.validcat.fishing.fragments.AddNewFishingFragment.java", "BodyUseAPI": ["java.lang.StringBuilder.substring(int,int)", "java.lang.StringBuilder.length()", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "091517d72df5c966ed3bad58af388f4d665a0796", "Url": "https://api.github.com/repos/lamrak/My_Fishing_Diary", "Date": "2016-02-08T10:41:54Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ua.in.ngo.ednist.self.SelfInfoDao.getSelfInfo()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (info != null) { info.setLogoPath(\"/resources/self/logo/logo.png\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5221/buggy-version/src.main.java.ua.in.ngo.ednist.self.SelfService.java", "BodyUseAPI": ["ua.in.ngo.ednist.self.SelfInfo.setLogoPath(java.lang.String)"], "Fixed commit": "00ac872d7c266381b262e4d810375903ee931183", "Url": "https://api.github.com/repos/Kudryashka/NgoEdnistPortal", "Date": "2016-04-13T05:18:29Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.media.ThumbnailUtils.extractThumbnail(android.graphics.Bitmap,view.getMeasuredWidth(),view.getMeasuredHeight())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (resizedBitmap != bitmap) { bitmap.recycle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5821/buggy-version/box-browse-sdk.src.main.java.com.box.androidsdk.browse.uidata.ThumbnailManager.java", "BodyUseAPI": ["android.graphics.Bitmap.recycle()"], "Fixed commit": "ec575946e1b2cd5ecc52e5a65c8bbcd7c96769fd", "Url": "https://api.github.com/repos/box/box-android-browse-sdk", "Date": "2017-01-25T23:00:18Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((target instanceof android.support.v4.widget.NestedScrollView) && ((target.getTag()) != null)) { if ((target.getTag().toString().equalsIgnoreCase(target.getContext().getString(R.string.ranking_tag))) || (target.getTag().toString().equalsIgnoreCase(target.getContext().getString(R.string.ranking_tag)))) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5716/buggy-version/app.src.main.java.com.belatrixsf.allstars.ui.common.ScrollAwareFABBehavior.java", "BodyUseAPI": ["target.getTag().toString().equalsIgnoreCase(target.getContext().getString(R.string.ranking_tag))", "android.view.View.getTag()", "target.getTag().toString()", "target.getTag().toString().equalsIgnoreCase(target.getContext().getString(R.string.ranking_tag))", "android.view.View.getTag()", "android.view.View.getContext()", "android.view.View.getContext()", "target.getContext().getString(R.string.ranking_tag)", "target.getTag().toString()", "target.getContext().getString(R.string.ranking_tag)"], "Fixed commit": "beeafb8bf20a5787917ba4d4075acf713403c5bb", "Url": "https://api.github.com/repos/belatrix/AndroidAllStars", "Date": "2016-04-29T15:05:32Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getNumDistinctOperands()) != 0) && ((numOperands) != 0)) { return ((2 * (getNumDistinctOperands())) / ((getNumDistinctOperators()) * (numOperands))) * (getVolume()); }else { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6487/buggy-version/stockmetrics.src.com.sixrr.stockmetrics.halstead.HalsteadVisitor.java", "BodyUseAPI": [], "Fixed commit": "c13a3fad4126e22504e02e2fba08edc4858c1169", "Url": "https://api.github.com/repos/Mizzlr/MetricsReloaded", "Date": "2017-03-30T03:55:41Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id >= (engine.gameData.ObjectData.objects.size())) id = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2631/buggy-version/src.engine.gameData.ObjectData.java", "BodyUseAPI": [], "Fixed commit": "b905773463eab2acaf9b8690a28e0a72a96fa260", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2017-07-18T17:19:51Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getSerializableExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (pl.getOpR().equals(\"\")) { your_array_list.add(\"Opening hours: Undefine\"); }else { your_array_list.add((\"Opening hours: \" + (pl.getOpR()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6905/buggy-version/app.src.main.java.edu.fcu.tw.finalproject.ParkingLotDetails.java", "BodyUseAPI": ["edu.fcu.tw.finalproject.ParkingLot.getOpR()", "java.util.List<java.lang.String>.add((\"Opening hours: \" + (pl.getOpR())))"], "Fixed commit": "8b543dfa81aabafa2e1e5b64e90fae652badf597", "Url": "https://api.github.com/repos/fcu-d0325088/FinalProject_ParkingLotFinderClient", "Date": "2017-06-20T10:34:20Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileOffset.length) == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/41/buggy-version/src.com.turn.ttorrent.client.TorrentByteStorage.java", "BodyUseAPI": [], "Fixed commit": "73aa5ef875127059d4cdbff3340d4ef7969cccee", "Url": "https://api.github.com/repos/etsy/ttorrent", "Date": "2012-04-11T14:05:03Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileOffset.length) == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/41/buggy-version/src.com.turn.ttorrent.client.TorrentByteStorage.java", "BodyUseAPI": [], "Fixed commit": "73aa5ef875127059d4cdbff3340d4ef7969cccee", "Url": "https://api.github.com/repos/etsy/ttorrent", "Date": "2012-04-11T14:05:03Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((controller.getRotation()) != 0) { controller.setRotation(0); directionMarker.setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/5170/buggy-version/app.src.main.java.de.westnordost.streetcomplete.tangram.MapFragment.java", "BodyUseAPI": ["com.mapzen.tangram.MapController.setRotation(int)"], "Fixed commit": "81da817eaf922702edf93aed72599eb2710d3380", "Url": "https://api.github.com/repos/Binnette/StreetComplete", "Date": "2017-08-02T09:33:17Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.M)) canvas.restore();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6167/buggy-version/RippleView.src.com.indris.material.RippleView.java", "BodyUseAPI": [], "Fixed commit": "a996c02cc3151442602baf271f51845060aa72a0", "Url": "https://api.github.com/repos/ashik94vc/RippleView", "Date": "2016-08-16T11:16:16Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(actionChoice)) { actionChoice = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1288/buggy-version/Agent.java", "BodyUseAPI": [], "Fixed commit": "2da1d57967b55dc39bbfbc274961c9b5d9f800eb", "Url": "https://api.github.com/repos/mhepaixao/Travelling-Salesman-Problem-with-Ant_Q-in-Java", "Date": "2012-05-21T22:20:58Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((vehicleWithRangeListArray.size()) % (rowSize)) == 0) && ((vehicleWithRangeListArray.size()) > (rowSize))) { size = size + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3894/buggy-version/app.src.main.java.com.mss.group3.smartshare.model.FindVehicleList.java", "BodyUseAPI": [], "Fixed commit": "edd6d445a3431901b96b9cb64bef42e2863ddcdc", "Url": "https://api.github.com/repos/user-de-git/smartshare", "Date": "2016-03-21T07:54:33Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((vehicleWithRangeListArray.size()) % (rowSize)) == 0) && ((vehicleWithRangeListArray.size()) > (rowSize))) { size = size + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3894/buggy-version/app.src.main.java.com.mss.group3.smartshare.model.FindVehicleList.java", "BodyUseAPI": [], "Fixed commit": "edd6d445a3431901b96b9cb64bef42e2863ddcdc", "Url": "https://api.github.com/repos/user-de-git/smartshare", "Date": "2016-03-21T07:54:33Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((automaticRefresh) && (samples.isHistoryRefreshNeeded(model.getStartTime(), model.getEndTime()))) { model.fireItemRefreshRequested(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1369/buggy-version/applications.plugins.org.csstudio.trends.databrowser2.src.org.csstudio.trends.databrowser2.model.PVItem.java", "BodyUseAPI": ["org.csstudio.trends.databrowser2.model.PVItem.fireItemRefreshRequested(org.csstudio.trends.databrowser2.model.PVItem)"], "Fixed commit": "1ec5f7ab50c23b020320df676150208ee0dd2e0d", "Url": "https://api.github.com/repos/css-iter/cs-studio", "Date": "2014-03-08T08:17:10Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (myPreference.isAutoUpdateSet()) startUpload(context);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/6815/buggy-version/android.src.com.uprootlabs.trackme.OnBoot.java", "BodyUseAPI": [], "Fixed commit": "f55425f86eef732d72b3c367e7f148acd939a3c8", "Url": "https://api.github.com/repos/hrj/trackMe", "Date": "2013-07-15T05:35:45Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jaeger.library.SelectUtil.getPreciseOffset(android.widget.TextView,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((mSpannable) == null) || (startOffset >= (mTextView.getText().length()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2253/buggy-version/library.src.main.java.com.jaeger.library.SelectableTextHelper.java", "BodyUseAPI": [], "Fixed commit": "6275b05a62fb7df458f99f053a8c9f38a75ae722", "Url": "https://api.github.com/repos/laobie/SelectableTextHelper", "Date": "2016-09-14T03:12:46Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (lastSlashIndex != (-1)) { assetName = pathInAssets.substring((lastSlashIndex + 1), pathInAssets.length()); pathInAssets = pathInAssets.substring(0, lastSlashIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/130/buggy-version/SightLocator.src.com.iolab.sightlocator.GetTextOnMarkerClickAction.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)"], "Fixed commit": "51f9e585d7e9f4530a80711042632a458f503ffe", "Url": "https://api.github.com/repos/oles2008/Training", "Date": "2016-03-09T22:24:32Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pathInAssets.endsWith(\"/\")) { pathInAssets = pathInAssets.substring(0, ((pathInAssets.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/130/buggy-version/SightLocator.src.com.iolab.sightlocator.GetTextOnMarkerClickAction.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "51f9e585d7e9f4530a80711042632a458f503ffe", "Url": "https://api.github.com/repos/oles2008/Training", "Date": "2016-03-09T22:24:32Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mInitTextView) != null) { mInitTextView.init(innerTextView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/1354/buggy-version/library.src.main.java.sumimakito.android.advtextswitcher.AdvTextSwitcher.java", "BodyUseAPI": [], "Fixed commit": "c8652e48ac4c02b3a639493e18f32657f05d0244", "Url": "https://api.github.com/repos/yueban/AdvancedTextSwitcher", "Date": "2017-08-29T12:44:31Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((conn) == null) { throw new java.lang.RuntimeException(\"Connection not initialized.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8953/buggy-version/phoenix-core.src.main.java.org.apache.phoenix.mapreduce.FormatToKeyValueMapper.java", "BodyUseAPI": [], "Fixed commit": "f995761e685eee2882362461339c4f7040894b11", "Url": "https://api.github.com/repos/apache/phoenix", "Date": "2015-12-10T00:51:18Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((conn) != null) { conn.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8953/buggy-version/phoenix-core.src.main.java.org.apache.phoenix.mapreduce.FormatToKeyValueMapper.java", "BodyUseAPI": [], "Fixed commit": "f995761e685eee2882362461339c4f7040894b11", "Url": "https://api.github.com/repos/apache/phoenix", "Date": "2015-12-10T00:51:18Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (font != null) { border.setTitleFont(new java.awt.Font(font.getName(), java.awt.Font.BOLD, font.getSize())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/2682/buggy-version/src.main.java.emcshop.gui.lib.GroupPanel.java", "BodyUseAPI": [], "Fixed commit": "73ce86c456c96a9e049839f857f435164503cb38", "Url": "https://api.github.com/repos/mangstadt/emc-shopkeeper", "Date": "2014-06-08T22:23:48Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.mihosoft.vrl.visual.Connector.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (c == null) { return eu.mihosoft.vrl.visual.Connector.ZERO; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/533/buggy-version/VRL.src.eu.mihosoft.vrl.visual.Connector.java", "BodyUseAPI": [], "Fixed commit": "b6c80a0d37f5f7829a1613a7ea1882e8f41cd3cc", "Url": "https://api.github.com/repos/VRL-Studio/VRL", "Date": "2015-07-10T10:26:11Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((next.getLast().compareTo(last)) < 0) { base = next.getLast().add(1); }else { base = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/3393/buggy-version/src.main.java.com.googlecode.ipv6.IPv6AddressRange.java", "BodyUseAPI": ["next.getLast().add(int)", "com.googlecode.ipv6.IPv6Network.getLast()"], "Fixed commit": "8d461fb492464803e8ad17d70b1f8c8bb51f8f0e", "Url": "https://api.github.com/repos/janvanbesien/java-ipv6", "Date": "2015-04-13T07:09:53Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"\".equals(project))) { mArrayList.add(project); mDialog.dismiss(); mAdapter.notifyDataSetChanged(); mDataBinding.tvContactsAmount.setText((((getString(R.string.left_bracket)) + (mArrayList.size())) + (getString(R.string.right_bracket)))); }else { hdenergy.mdground.com.hdenergy.utils.ViewUtils.toast(getString(R.string.project_no_empt)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/4361/buggy-version/app.src.main.java.hdenergy.mdground.com.hdenergy.activity.personalcenter.CommonProjectActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "17ec9026c3114b48064a767f9126c9d231198131", "Url": "https://api.github.com/repos/Bread-Yang/HDEnergy", "Date": "2016-06-30T12:32:20Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["keepcalm.mods.bukkit.bukkitAPI.BukkitServer.instance().getScheduler()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (b4v == null) { java.lang.System.out.println(\"WARNING: BukkitForge is ready, but scheduler is not set!\"); (keepcalm.mods.bukkit.forgeHandler.SchedulerTickHandler.tickOffset)++; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8266/buggy-version/src.keepcalm.mods.bukkit.forgeHandler.SchedulerTickHandler.java", "BodyUseAPI": [], "Fixed commit": "9950e7769650e3cee66f236316bf22f4eb726bc9", "Url": "https://api.github.com/repos/keepcalm/BukkitForge", "Date": "2013-01-10T00:29:49Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bev.isCancelled()) { ev.setCanceled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8266/buggy-version/src.keepcalm.mods.bukkit.forgeHandler.ForgeEventHandler.java", "BodyUseAPI": [], "Fixed commit": "9950e7769650e3cee66f236316bf22f4eb726bc9", "Url": "https://api.github.com/repos/keepcalm/BukkitForge", "Date": "2013-01-10T00:29:49Z"},
{"Line": "=>575", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(supportEndless())) { return super.getSpanSizeLookup(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/591/buggy-version/library.src.main.java.nammari.network.ui.EndlessMultiStateAbsListFragment.java", "BodyUseAPI": [], "Fixed commit": "36fdb2a2b194c0bad99efbfff15fbf201f86d7e9", "Url": "https://api.github.com/repos/Nammari/Network", "Date": "2016-04-02T02:01:13Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends java.lang.Object>.getMethods()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (methods == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8234/buggy-version/core.src.main.java.org.wso2.msf4j.internal.websocket.EndpointDispatcher.java", "BodyUseAPI": [], "Fixed commit": "e98a7d54f4e6c8758188afdae044175f57b4d245", "Url": "https://api.github.com/repos/irunika/msf4j", "Date": "2017-03-08T17:57:38Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends java.lang.Object>.getMethods()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (methods == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8234/buggy-version/core.src.main.java.org.wso2.msf4j.internal.websocket.EndpointDispatcher.java", "BodyUseAPI": [], "Fixed commit": "e98a7d54f4e6c8758188afdae044175f57b4d245", "Url": "https://api.github.com/repos/irunika/msf4j", "Date": "2017-03-08T17:57:38Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends java.lang.Object>.getMethods()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (methods == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8234/buggy-version/core.src.main.java.org.wso2.msf4j.internal.websocket.EndpointDispatcher.java", "BodyUseAPI": [], "Fixed commit": "e98a7d54f4e6c8758188afdae044175f57b4d245", "Url": "https://api.github.com/repos/irunika/msf4j", "Date": "2017-03-08T17:57:38Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends java.lang.Object>.getMethods()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (methods == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8234/buggy-version/core.src.main.java.org.wso2.msf4j.internal.websocket.EndpointDispatcher.java", "BodyUseAPI": [], "Fixed commit": "e98a7d54f4e6c8758188afdae044175f57b4d245", "Url": "https://api.github.com/repos/irunika/msf4j", "Date": "2017-03-08T17:57:38Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends java.lang.Object>.getMethods()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (methods == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V125/8234/buggy-version/core.src.main.java.org.wso2.msf4j.internal.websocket.EndpointDispatcher.java", "BodyUseAPI": [], "Fixed commit": "e98a7d54f4e6c8758188afdae044175f57b4d245", "Url": "https://api.github.com/repos/irunika/msf4j", "Date": "2017-03-08T17:57:38Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (definition.endsWith(\",\\\\\")) { return com.liferay.portal.kernel.util.StringUtil.replace(content, definition, definition.substring(0, ((definition.length()) - 2))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3793/buggy-version/modules.util.source-formatter.src.main.java.com.liferay.source.formatter.checks.BNDDefinitionKeysCheck.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)", "com.liferay.portal.kernel.util.StringUtil.replace(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "49be1f7f393a7526006ff8a3aecede50e5c015ae", "Url": "https://api.github.com/repos/linolaoj/liferay-portal", "Date": "2017-07-20T17:14:14Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) <= (Build.VERSION_CODES.KITKAT)) { intent = new android.content.Intent(android.content.Intent.ACTION_GET_CONTENT); }else { intent = new android.content.Intent(android.content.Intent.ACTION_OPEN_DOCUMENT); intent.addCategory(Intent.CATEGORY_OPENABLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1713/buggy-version/app.src.main.java.com.github.sumimakito.awesomeqrsample.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7bbeef464a0d01877fa2794e2c0596dee68bc6e2", "Url": "https://api.github.com/repos/SumiMakito/AwesomeQRCode", "Date": "2017-05-09T04:58:06Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) <= (Build.VERSION_CODES.KITKAT)) { intent = new android.content.Intent(android.content.Intent.ACTION_GET_CONTENT); }else { intent = new android.content.Intent(android.content.Intent.ACTION_OPEN_DOCUMENT); intent.addCategory(Intent.CATEGORY_OPENABLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1713/buggy-version/app.src.main.java.com.github.sumimakito.awesomeqrsample.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7bbeef464a0d01877fa2794e2c0596dee68bc6e2", "Url": "https://api.github.com/repos/SumiMakito/AwesomeQRCode", "Date": "2017-05-09T04:58:06Z"},
{"Line": "=>685", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isWholeCollection())) { mDeckId = col.getDecks().selected(); }else { mDeckId = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/992/buggy-version/AnkiDroid.src.main.java.com.ichi2.anki.Statistics.java", "BodyUseAPI": [], "Fixed commit": "ca7e1dbf6809d9c73c5a962a828c50ec97067508", "Url": "https://api.github.com/repos/bexsadirov/Anki-Android", "Date": "2017-03-20T10:45:03Z"},
{"Line": "=>543", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isWholeCollection())) mDeckId = col.getDecks().selected(); else mDeckId = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/992/buggy-version/AnkiDroid.src.main.java.com.ichi2.anki.Statistics.java", "BodyUseAPI": [], "Fixed commit": "ca7e1dbf6809d9c73c5a962a828c50ec97067508", "Url": "https://api.github.com/repos/bexsadirov/Anki-Android", "Date": "2017-03-20T10:45:03Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["us.nineworlds.plex.rest.model.impl.MediaContainer.getVideos()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (videos != null) { for (us.nineworlds.plex.rest.model.impl.Video episode : videos) { videoList.add(us.nineworlds.serenity.core.model.impl.EpisodeMediaContainer.createEpisodeContentInfo(context, factory, mc, baseUrl, parentPosterURL, episode)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5311/buggy-version/serenity-app.src.main.java.us.nineworlds.serenity.core.model.impl.EpisodeMediaContainer.java", "BodyUseAPI": [], "Fixed commit": "8f962d33a4b3088984dcb43337f85c05ea55e868", "Url": "https://api.github.com/repos/NineWorlds/serenity-android", "Date": "2014-06-13T00:09:14Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentConversations.contains(convoName)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2186/buggy-version/src.conversation.User.java", "BodyUseAPI": [], "Fixed commit": "127eb803a16b668bd05a1db303b9d3e2f2c0c247", "Url": "https://api.github.com/repos/Kelseyfargas/CSCI201FinalProject", "Date": "2014-07-08T10:12:22Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.futurice.festapp.DebugActivity.F_IGNORE_ETAG) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7517/buggy-version/src.com.futurice.festapp.util.HTTPUtil.java", "BodyUseAPI": [], "Fixed commit": "6b6ae738caa30a73cc8eb066be8d2c404452dfbb", "Url": "https://api.github.com/repos/jmiguelrc/festapp-android", "Date": "2014-04-11T20:17:23Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles(java.io.FilenameFilter)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (files == null) { return com.google.common.collect.ImmutableList.of(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8411/buggy-version/core.src.main.java.com.freiheit.fuava.simplebatch.fetch.DirectoryFileFetcher.java", "BodyUseAPI": [], "Fixed commit": "fc68978947143e241bc30918a40944b7cbd8090f", "Url": "https://api.github.com/repos/lachupe/fuava_simplebatch", "Date": "2015-08-11T09:01:14Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((propertiesNames) == null) || ((propertiesNames.size()) == 0)) throw new java.lang.RuntimeException(\"you must use 'setItems' method for first time to initialize data\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/329/buggy-version/mhrecycleradapter.src.main.java.mh.sanwix.com.GenericAdapter.MHRecyclerAdapter.java", "BodyUseAPI": [], "Fixed commit": "e112b5ca10cb1b1fc9d693a304ae743bdcbaddcb", "Url": "https://api.github.com/repos/MH480/MHGenericAdapter", "Date": "2017-10-07T13:09:52Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isRowRemove)) { tableRowSelectionActionPerformed(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/207/buggy-version/src.main.java.com.ghlh.ui.autotrade.stocksetting.StockSettingContentPanel.java", "BodyUseAPI": [], "Fixed commit": "26b42495e9b30bf9377a68eff5ed180af1eefdae", "Url": "https://api.github.com/repos/lqjliu/ghlh", "Date": "2014-02-25T13:43:15Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (returnTypes.isEmpty()) { returnTypes.add(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5439/buggy-version/src.husacct.analyse.task.analyser.csharp.generators.CSharpMethodGeneratorController.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "16dc4160a8c2ddccfc991921d33bb492911d7ebc", "Url": "https://api.github.com/repos/bbsss/HUSACCT", "Date": "2013-09-05T17:23:05Z"},
{"Line": "=>689", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ticket.getDiscount()) > 0.0) { fixedPrice = fixedPrice - (fixedPrice * (ticket.getDiscount())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3153/buggy-version/src-pos.uk.chromis.pos.promotion.PromotionSupport.java", "BodyUseAPI": ["uk.chromis.pos.ticket.TicketInfo.getDiscount()"], "Fixed commit": "af6d839f549dab5054a9c000eaa35e47941671c2", "Url": "https://api.github.com/repos/ChromisPos/ChromisPOS", "Date": "2017-04-09T10:44:54Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((zipcode.length()) >= (com.cs442.group10.compost_crossing.constants.Constants.ZIP_CODE_MIN_LENGTH)) { composterZip = zipcode.substring(0, 3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6650/buggy-version/Compost-Crossing.app.src.main.java.com.cs442.group10.compost_crossing.resident.nearByComposter.NearByComposter.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "9820164eb5ea6cad73dced3a65125d97b57ee587", "Url": "https://api.github.com/repos/JKob0233/Compost-Crossing", "Date": "2016-12-08T06:45:44Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((composterZip.length()) >= (com.cs442.group10.compost_crossing.constants.Constants.ZIP_CODE_MIN_LENGTH)) { currentUserPin = currentUserZipCode.substring(0, 3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6650/buggy-version/Compost-Crossing.app.src.main.java.com.cs442.group10.compost_crossing.Composter.nearbyResident.NearByResident.java", "BodyUseAPI": [], "Fixed commit": "9820164eb5ea6cad73dced3a65125d97b57ee587", "Url": "https://api.github.com/repos/JKob0233/Compost-Crossing", "Date": "2016-12-08T06:45:44Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1045/buggy-version/app.src.main.java.de.appphil.webcamviewerwidget.activities.SwitchWidgetConfigActivity.java", "BodyUseAPI": [], "Fixed commit": "5e42b54f4a74d58ffc24f354f9dcb6988e6d6aee", "Url": "https://api.github.com/repos/PhilippDE/WebcamViewerWidget", "Date": "2017-02-25T17:32:57Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1045/buggy-version/app.src.main.java.de.appphil.webcamviewerwidget.activities.SAUWidgetConfigActivity.java", "BodyUseAPI": [], "Fixed commit": "5e42b54f4a74d58ffc24f354f9dcb6988e6d6aee", "Url": "https://api.github.com/repos/PhilippDE/WebcamViewerWidget", "Date": "2017-02-25T17:32:57Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentWorkingText) != null) { mWorkingTextView.setText(mCurrentWorkingText.toUpperCase(java.util.Locale.getDefault())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5556/buggy-version/src.com.ACM.binarycalculator.CalculatorHexFragment.java", "BodyUseAPI": [], "Fixed commit": "9cea4a438b2d914c372832102920ad4a5617045b", "Url": "https://api.github.com/repos/SigMobile/BinaryCalculator", "Date": "2013-11-26T09:18:48Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((org.eztarget.vidcheroo.Engine.getOs()) == (SupportedOperatingSystems.OSX)) { enableOSXFullscreen(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2541/buggy-version/org.eztarget.vidcheroo.VidcherooMediaFrame.java", "BodyUseAPI": [], "Fixed commit": "43d2077caf144202f1a068c351b975e697d50c06", "Url": "https://api.github.com/repos/easytargetmixel/vidcheroo", "Date": "2014-09-06T18:08:44Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scrolls) < (max)) { scrolls = max; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4722/buggy-version/app.src.main.java.coms.kxjsj.myapplication.MyCoordinatorLayout.java", "BodyUseAPI": [], "Fixed commit": "64f8987c185052cfb5db7d3f3b3bb5d8b3575a69", "Url": "https://api.github.com/repos/While1true/CoordinatorLayout", "Date": "2017-12-11T07:32:13Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNullOrNotNullExpr()) { java.lang.String queryStr = ((items.get(0)) + \" \") + (op.equals(com.zoowii.jpa_utils.query.Expr.EQ) ? \"is null\" : \"is not null\"); return com.zoowii.jpa_utils.util.ListUtil.hashmap(\"query\", queryStr, \"bindings\", new com.zoowii.jpa_utils.query.ParameterBindings()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/425/buggy-version/src.main.java.com.zoowii.jpa_utils.query.Expr.java", "BodyUseAPI": [], "Fixed commit": "b8645a9a2c69779204754c060995a1e2e0f6514a", "Url": "https://api.github.com/repos/zoowii/JPAUtils", "Date": "2014-10-27T06:59:41Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jetbrains.mps.generator.impl.dependencies.GenerationRootDependencies.getRootId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rootId == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2917/buggy-version/core.generator.source.jetbrains.mps.generator.generationTypes.TextGenerator.java", "BodyUseAPI": [], "Fixed commit": "48a3a879fedbf0e2ee30101da31c681811f5d37d", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2012-09-20T21:53:02Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.exists()) && (p.isOpen())) { org.eclipse.imp.pdb.facts.ISet contents = getProjectContents(p); projects.insert(VF.constructor(org.rascalmpl.eclipse.library.util.Resources.project, makeProject(p), contents)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5555/buggy-version/src.org.rascalmpl.eclipse.library.util.Resources.java", "BodyUseAPI": ["org.rascalmpl.eclipse.library.util.Resources.getProjectContents(org.eclipse.core.resources.IProject)", "org.eclipse.imp.pdb.facts.ISetWriter.insert(VF.constructor(org.rascalmpl.eclipse.library.util.Resources.project, makeProject(p), contents))", "org.eclipse.imp.pdb.facts.IValueFactory.constructor(org.eclipse.imp.pdb.facts.type.Type,org.eclipse.imp.pdb.facts.ISourceLocation,org.eclipse.imp.pdb.facts.ISet)", "org.rascalmpl.eclipse.library.util.Resources.makeProject(org.eclipse.core.resources.IProject)"], "Fixed commit": "3604337be8110c06a8a57b363f8975f64e110841", "Url": "https://api.github.com/repos/cwi-swat/rascal-eclipse", "Date": "2014-10-28T09:33:26Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["i.getExtras().get((((com.malcom.library.android.module.notifications.MCMNotificationModule.ANDROID_MESSAGE_KEY) + \".\") + (com.malcom.library.android.module.notifications.MCMNotificationModule.ANDROID_NOTIFICATION_SOUND_KEY)))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (soundName != null) { notificationSoundId = context.getResources().getIdentifier(soundName, \"raw\", context.getPackageName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/393/buggy-version/src.main.java.com.malcom.library.android.module.notifications.gcm.GCMIntentService.java", "BodyUseAPI": ["context.getResources().getIdentifier(java.lang.String,java.lang.String,context.getPackageName())"], "Fixed commit": "96d5bfa61852c748375c9a6ebe9f8d615aeed6cd", "Url": "https://api.github.com/repos/MyMalcom/malcom-lib-android", "Date": "2013-07-29T15:19:23Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Objects.equals(this.hovered, hovered)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6083/buggy-version/src.main.java.org.reactome.web.diagram.client.DiagramViewerImpl.java", "BodyUseAPI": [], "Fixed commit": "9237a0054419298228b2662d436b079ae8fadd9e", "Url": "https://api.github.com/repos/reactome-pwp/diagram", "Date": "2015-07-20T17:33:00Z"},
{"Line": "=>770", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.stratosphere.compiler.plan.Channel.getSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((node == (wspn.getRootOfTerminationCriterion())) && ((wspn.getRootOfStepFunction()) == pred)) { chaining = false; }else if (((node.getOutgoingChannels().size()) > 0) && (((wspn.getRootOfStepFunction()) == pred) || ((wspn.getRootOfTerminationCriterion()) == pred))) { chaining = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5406/buggy-version/stratosphere-compiler.src.main.java.eu.stratosphere.compiler.plantranslate.NepheleJobGraphGenerator.java", "BodyUseAPI": ["node.getOutgoingChannels().size()", "eu.stratosphere.compiler.plan.SingleInputPlanNode.getOutgoingChannels()", "eu.stratosphere.compiler.plan.BulkIterationPlanNode.getRootOfTerminationCriterion()", "eu.stratosphere.compiler.plan.BulkIterationPlanNode.getRootOfStepFunction()"], "Fixed commit": "e50a1aadc4e7362366fde3b466320a62a6f22670", "Url": "https://api.github.com/repos/alexff91/stratosphere", "Date": "2014-03-13T21:57:19Z"},
{"Line": "=>1000", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (terminationCriterion != null) { terminationCriterion.accept(identifier); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5406/buggy-version/stratosphere-compiler.src.main.java.eu.stratosphere.compiler.PactCompiler.java", "BodyUseAPI": ["eu.stratosphere.compiler.dag.OptimizerNode.accept(eu.stratosphere.compiler.PactCompiler.StaticDynamicPathIdentifier)"], "Fixed commit": "e50a1aadc4e7362366fde3b466320a62a6f22670", "Url": "https://api.github.com/repos/alexff91/stratosphere", "Date": "2014-03-13T21:57:19Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.stratosphere.compiler.dag.OptimizerNode.getAlternativePlans(eu.stratosphere.compiler.costs.CostEstimator)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((candidates.size()) > 0) { java.util.List<eu.stratosphere.compiler.plan.PlanNode> terminationCriterionCandidates = this.terminationCriterion.getAlternativePlans(estimator); for (eu.stratosphere.compiler.plan.PlanNode candidate : candidates) { for (eu.stratosphere.compiler.plan.PlanNode terminationCandidate : terminationCriterionCandidates) { if (this.singleRoot.areBranchCompatible(candidate, terminationCandidate)) { eu.stratosphere.compiler.plan.BulkIterationPlanNode node = new eu.stratosphere.compiler.plan.BulkIterationPlanNode(this, ((\"BulkIteration (\" + (this.getPactContract().getName())) + \")\"), in, pspn, candidate, terminationCandidate); eu.stratosphere.compiler.dataproperties.GlobalProperties gProps = candidate.getGlobalProperties().clone(); eu.stratosphere.compiler.dataproperties.LocalProperties lProps = candidate.getLocalProperties().clone(); node.initProperties(gProps, lProps); target.add(node); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5406/buggy-version/stratosphere-compiler.src.main.java.eu.stratosphere.compiler.dag.BulkIterationNode.java", "BodyUseAPI": [], "Fixed commit": "e50a1aadc4e7362366fde3b466320a62a6f22670", "Url": "https://api.github.com/repos/alexff91/stratosphere", "Date": "2014-03-13T21:57:19Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((file.length()) > 0) && (!(file.endsWith(IWebMediaServer.FileSeparator)))) file += de.neo.remote.api.IWebMediaServer.FileSeparator;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2964/buggy-version/de.neo.remote.mobile.src.de.neo.remote.mobile.persistence.MediaServerState.java", "BodyUseAPI": [], "Fixed commit": "304603efcdc7c62cec06854fd65d03b8e3e42419", "Url": "https://api.github.com/repos/dabastynator/SmartHome", "Date": "2016-12-29T12:31:00Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (parameters.getRelationTypeIds().isEmpty()) { parameters.setRelationTypeIds(relationTypeIds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3746/buggy-version/timbuctoo-vre.src.main.java.nl.knaw.huygens.timbuctoo.search.RelationSearcher.java", "BodyUseAPI": ["nl.knaw.huygens.timbuctoo.vre.RelationSearchParameters.setRelationTypeIds(java.util.List<java.lang.String>)"], "Fixed commit": "4eb83ce03f01798d70b2d4af4f57e528e2dac909", "Url": "https://api.github.com/repos/HuygensING/timbuctoo", "Date": "2015-10-26T13:17:55Z"},
{"Line": "=>2373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dRadius != 0) && (length != 0)) { C.x = ((int) (((double) (e.x)) - ((dRadius / length) * (((double) (a.x)) - ((double) (e.x)))))); C.y = ((int) (((double) (e.y)) - ((dRadius / length) * (((double) (a.y)) - ((double) (e.y)))))); }else { C.x = e.x; C.y = e.y; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2623/buggy-version/Renderer.src.armyc2.c2sd.JavaLineArray.lineutility.java", "BodyUseAPI": [], "Fixed commit": "801798f70aed16310cb6361ef9d047e427395f6b", "Url": "https://api.github.com/repos/missioncommand/mil-sym-android", "Date": "2015-05-22T22:04:12Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jackchan.qquidemo.ui.ScrollItemListView.pointToPosition(int,(y - (this.getTop())))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((mScrollView) != null) && ((mLastInterceptX) > (mScrollView.getRight()))) && (pos == (mHasScrollItemPos))) { setNeedScrollToNormal(false, (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5569/buggy-version/app.src.main.java.com.jackchan.qquidemo.ui.ScrollItemListView.java", "BodyUseAPI": [], "Fixed commit": "78321ff792726980dfd1cddd1095139d4cd27305", "Url": "https://api.github.com/repos/TChengZ/ChatListDemo", "Date": "2015-11-29T07:41:58Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useAsSecondPlayer) { setAsPlayer2(handler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3477/buggy-version/Program.2DPlatformFighter.src.main.java.edu.chalmers.brawlbuddies.controller.input.InputHandlerChooser.java", "BodyUseAPI": [], "Fixed commit": "d855421d146ce57550d645123ed28268c9eb2bbe", "Url": "https://api.github.com/repos/ITNano/2DPlatformFighter", "Date": "2014-05-25T11:21:56Z"},
{"Line": "=>607", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.multibit.MultiBit.getController().getModel()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (model.getActivePerWalletModelData().isBusy()) { enableSend = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3547/buggy-version/src.main.java.org.multibit.viewsystem.swing.view.panels.SendBitcoinConfirmPanel.java", "BodyUseAPI": [], "Fixed commit": "86305ab37bf79c15f5973331122d9f60ecc1ef7b", "Url": "https://api.github.com/repos/jim618/multibit", "Date": "2013-04-05T11:42:43Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, biz.jovido.seed.content.PayloadGroup>.put(java.lang.String,biz.jovido.seed.content.PayloadGroup)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (replaced != null) { replaced.setAttributeName(null); replaced.setItem(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1736/buggy-version/src.main.java.biz.jovido.seed.content.Item.java", "BodyUseAPI": ["biz.jovido.seed.content.PayloadGroup.setItem(<nulltype>)", "biz.jovido.seed.content.PayloadGroup.setAttributeName(<nulltype>)"], "Fixed commit": "fb98d52e273477358565dace834041cc1bd825b3", "Url": "https://api.github.com/repos/jovido/jovido-webseed", "Date": "2017-11-21T20:43:02Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (payloadGroup != null) { payloadGroup.setAttributeName(attributeName); payloadGroup.setItem(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1736/buggy-version/src.main.java.biz.jovido.seed.content.Item.java", "BodyUseAPI": ["biz.jovido.seed.content.PayloadGroup.setAttributeName(java.lang.String)", "biz.jovido.seed.content.PayloadGroup.setItem(biz.jovido.seed.content.Item)"], "Fixed commit": "fb98d52e273477358565dace834041cc1bd825b3", "Url": "https://api.github.com/repos/jovido/jovido-webseed", "Date": "2017-11-21T20:43:02Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { ll.setElevation(5.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4516/buggy-version/app.src.main.java.com.hjsmallfly.syllabus.activities.SyllabusActivity.java", "BodyUseAPI": [], "Fixed commit": "ab0e7134fcde90b087e3c53f198ccc85061c3de0", "Url": "https://api.github.com/repos/PATHofud/stu_syllabus", "Date": "2016-03-22T06:02:02Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentFrame) != 0) && (((currentFrame) % (switchRoleTime)) == 0)) { timeToSwitch = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5633/buggy-version/src.com.example.ButtonGames.model.Board.java", "BodyUseAPI": [], "Fixed commit": "971b12d2f858e071bf8ce3d1cde211618a598a99", "Url": "https://api.github.com/repos/Shikib/ButtonGames", "Date": "2014-12-24T21:35:03Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkIfDone()) { showWinScreen(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4228/buggy-version/src.WordSearch.Game.java", "BodyUseAPI": [], "Fixed commit": "787a6504427c2b315c61018917db6fab1e6f3939", "Url": "https://api.github.com/repos/nplaster/WordSearch", "Date": "2013-04-25T17:19:18Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (mojarraMajorVersion > 2) { namespacedViewStateSupported = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5786/buggy-version/bridge-impl.src.main.java.com.liferay.faces.bridge.renderkit.bridge.internal.ResponseWriterBridgeCompat_2_0_Impl.java", "BodyUseAPI": [], "Fixed commit": "536f1d8b6ae7aedb387e8f056cd27c49bc6d11c9", "Url": "https://api.github.com/repos/vsingleton/liferay-faces-bridge-impl", "Date": "2016-07-11T23:26:01Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (mojarraMinorVersion > 2) { namespacedViewStateSupported = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5786/buggy-version/bridge-impl.src.main.java.com.liferay.faces.bridge.renderkit.bridge.internal.ResponseWriterBridgeCompat_2_0_Impl.java", "BodyUseAPI": [], "Fixed commit": "536f1d8b6ae7aedb387e8f056cd27c49bc6d11c9", "Url": "https://api.github.com/repos/vsingleton/liferay-faces-bridge-impl", "Date": "2016-07-11T23:26:01Z"},
{"Line": "=>793", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((relationship instanceof org.jboss.pressgang.ccms.contentspec.entities.TopicRelationship) && (relatedId.startsWith(\"X\"))) { log.error(java.lang.String.format(ProcessorConstants.ERROR_INVALID_DUPLICATE_RELATIONSHIP_MSG, node.getLineNumber(), node.getText())); return false; }else if ((relationship instanceof org.jboss.pressgang.ccms.contentspec.entities.TopicRelationship) && ((relatedSpecTopics.size()) > 1)) { final java.util.List<org.jboss.pressgang.ccms.contentspec.SpecTopic> relatedTopics = specTopicMap.get(relatedTopic.getId()); final java.lang.StringBuilder lineNumbers = new java.lang.StringBuilder(); for (int i = 0; i < (relatedTopics.size()); i++) { if (i == ((relatedTopics.size()) - 1)) { lineNumbers.append(\" and \"); }else if ((lineNumbers.length()) != 0) { lineNumbers.append(\", \"); } lineNumbers.append(relatedTopics.get(i).getLineNumber()); } log.error(java.lang.String.format(ProcessorConstants.ERROR_INVALID_RELATIONSHIP_MSG, node.getLineNumber(), relatedId, lineNumbers.toString(), node.getText())); return false; }else if (relatedTopic == node) { log.error(java.lang.String.format(ProcessorConstants.ERROR_TOPIC_RELATED_TO_ITSELF_MSG, node.getLineNumber(), node.getText())); return false; }else if ((node instanceof org.jboss.pressgang.ccms.contentspec.InitialContent) && (((org.jboss.pressgang.ccms.contentspec.Level) (node)).getSpecTopics().contains(relatedTopic))) { log.error(java.lang.String.format(ProcessorConstants.ERROR_TOPIC_RELATED_TO_ITSELF_MSG, node.getLineNumber(), node.getText())); return false; }else if ((node instanceof org.jboss.pressgang.ccms.contentspec.SpecTopic) && ((((org.jboss.pressgang.ccms.contentspec.SpecTopic) (node)).getTopicType()) == (org.jboss.pressgang.ccms.contentspec.enums.TopicType.INITIAL_CONTENT))) { log.error(java.lang.String.format(ProcessorConstants.ERROR_INITIAL_CONTENT_TOPIC_RELATIONSHIP_MSG, node.getLineNumber(), node.getText())); return false; }else { final java.lang.String relatedTitle; if ((TopicType.INITIAL_CONTENT.equals(relatedTopic.getTopicType())) && ((relatedTopic.getParent()) instanceof org.jboss.pressgang.ccms.contentspec.InitialContent)) { relatedTitle = ((org.jboss.pressgang.ccms.contentspec.InitialContent) (relatedTopic.getParent())).getParent().getTitle(); }else { relatedTitle = relatedTopic.getTitle(); } if (((relationship.getRelationshipTitle()) != null) && (!(relationship.getRelationshipTitle().equals(relatedTitle)))) { if (processingOptions.isStrictTitles()) { log.error(java.lang.String.format(ProcessorConstants.ERROR_RELATED_TITLE_NO_MATCH_MSG, node.getLineNumber(), relationship.getRelationshipTitle(), relatedTitle)); return false; }else { log.warn(java.lang.String.format(ProcessorConstants.WARN_RELATED_TITLE_NO_MATCH_MSG, node.getLineNumber(), relationship.getRelationshipTitle(), relatedTitle)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5399/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.processor.ContentSpecValidator.java", "BodyUseAPI": ["org.jboss.pressgang.ccms.contentspec.entities.Relationship.getRelationshipTitle()", "org.jboss.pressgang.ccms.contentspec.entities.Relationship.getRelationshipTitle()", "relationship.getRelationshipTitle().equals(java.lang.String)", "org.jboss.pressgang.ccms.contentspec.entities.Relationship.getRelationshipTitle()", "java.lang.String.format(ProcessorConstants.WARN_RELATED_TITLE_NO_MATCH_MSG,node.getLineNumber(),relationship.getRelationshipTitle(),java.lang.String)", "org.jboss.pressgang.ccms.contentspec.utils.logging.ErrorLogger.error(java.lang.String)", "java.lang.String.format(ProcessorConstants.ERROR_RELATED_TITLE_NO_MATCH_MSG,node.getLineNumber(),relationship.getRelationshipTitle(),java.lang.String)", "org.jboss.pressgang.ccms.contentspec.utils.logging.ErrorLogger.warn(java.lang.String)", "java.lang.String.format(ProcessorConstants.ERROR_INVALID_RELATIONSHIP_MSG,node.getLineNumber(),java.lang.String,java.lang.String,node.getText())", "org.jboss.pressgang.ccms.contentspec.entities.Relationship.getRelationshipTitle()", "org.jboss.pressgang.ccms.contentspec.utils.logging.ErrorLogger.error(java.lang.String)"], "Fixed commit": "a47ca11d228cd9a79c83702ccb3620e5d6d79393", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpecProcessor", "Date": "2014-02-13T23:43:30Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isOuterVariablesActive) { return fOuter.getExpr(); }else { java.lang.String rlt = fOuter.getExpr(); for (java.util.Map.Entry<java.lang.String, edu.uta.futureye.function.intf.MathFunc> map : fInners.entrySet()) { if ((map.getValue().getOpOrder()) == (OP_ORDER0)) rlt = rlt.replace(map.getKey(), map.getValue().getExpr()); else rlt = rlt.replace(map.getKey(), ((\"(\" + (map.getValue().getExpr())) + \")\")); } return rlt; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3920/buggy-version/src.edu.uta.futureye.function.basic.FComposite.java", "BodyUseAPI": [], "Fixed commit": "d84a990dd8401a1fe02a09fbc4efd82ef8530940", "Url": "https://api.github.com/repos/yuemingl/Futureye_JIT", "Date": "2015-05-20T18:20:54Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["req.session().attribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (userOrder != null) params.put(\"cart\", userOrder.sumProductsQuantity());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7903/buggy-version/src.main.java.com.codecool.shop.controller.ProductController.java", "BodyUseAPI": ["com.codecool.shop.order.implementation.Order.sumProductsQuantity()", "java.util.Map.put(java.lang.String,userOrder.sumProductsQuantity())"], "Fixed commit": "27039577c8f089a70c2b6f85a9bbe7cf450699a9", "Url": "https://api.github.com/repos/CodecoolBP20161/from-python-to-java-codecool-shop-lama", "Date": "2016-11-09T16:58:14Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((gameElements.SpecialWall) (this.gameField.getCell(j, i))).getPortal()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tempPortal.getColor()) == (enums.Color.YELLOW)) { g.drawImage(yellowPortal, (j * 40), (i * 40), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3543/buggy-version/src.main.GamePanel.java", "BodyUseAPI": [], "Fixed commit": "81ed4c92ff09796ad7f7c20c8c42ccc3ad9292d7", "Url": "https://api.github.com/repos/mikitovicsmark/szoftlab4", "Date": "2016-05-15T13:56:57Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((gameElements.SpecialWall) (this.gameField.getCell(j, i))).getPortal()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tempPortal.getColor()) == (enums.Color.BLUE)) { g.drawImage(bluePortal, (j * 40), (i * 40), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3543/buggy-version/src.main.GamePanel.java", "BodyUseAPI": [], "Fixed commit": "81ed4c92ff09796ad7f7c20c8c42ccc3ad9292d7", "Url": "https://api.github.com/repos/mikitovicsmark/szoftlab4", "Date": "2016-05-15T13:56:57Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controller.IROController.getTeacherLecturesById(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (lectures != null) cbLectures = new javax.swing.JComboBox<java.lang.Object>(lectures.toArray()); else cbLectures = new javax.swing.JComboBox<java.lang.Object>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8666/buggy-version/src.view.TeacherView.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.toArray()"], "Fixed commit": "6a21b2b94fbfb4ce000fea90841cdee9a1a11701", "Url": "https://api.github.com/repos/asoos/FacultyProject", "Date": "2015-05-14T13:16:45Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controller.IROController.getFacultiesById(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (faculties != null) cbFaculties = new javax.swing.JComboBox<java.lang.Object>(faculties.toArray()); else cbFaculties = new javax.swing.JComboBox<java.lang.Object>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8666/buggy-version/src.view.TeacherView.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.toArray()"], "Fixed commit": "6a21b2b94fbfb4ce000fea90841cdee9a1a11701", "Url": "https://api.github.com/repos/asoos/FacultyProject", "Date": "2015-05-14T13:16:45Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPlayer) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4042/buggy-version/src.fa.darts.ResultsActivity.java", "BodyUseAPI": [], "Fixed commit": "65b5e003a1dab53462ea9fc58111f7f8c40dd11c", "Url": "https://api.github.com/repos/fauge/darts501counter", "Date": "2012-09-07T20:07:54Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((measurement.getState()) == (com.deeps.sensormax.model.measurement.Measurement.STATE_RUNNING)) { dataHandlerActivity.runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { resetView(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4178/buggy-version/SensorMax.src.com.deeps.sensormax.controller.fragments.measurement.LocalMeasurementFragment.java", "BodyUseAPI": [], "Fixed commit": "9e2eb394a9e0a82a48f38e1e4828195cba9745c4", "Url": "https://api.github.com/repos/deeps96/SensorMax", "Date": "2015-01-12T21:34:13Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (element.hasAttribute(\"connection-factory\")) { listenerContainerDefinition.getPropertyValues().add(org.axonframework.contextsupport.spring.amqp.TerminalBeanDefinitionParser.BEAN_REFERENCE_PROPERTIES.get(\"connection-factory\"), new org.springframework.beans.factory.config.RuntimeBeanReference(element.getAttribute(\"connection-factory\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8722/buggy-version/amqp.src.main.java.org.axonframework.contextsupport.spring.amqp.TerminalBeanDefinitionParser.java", "BodyUseAPI": ["listenerContainerDefinition.getPropertyValues().add(java.lang.String,org.springframework.beans.factory.config.RuntimeBeanReference)", "org.w3c.dom.Element.getAttribute(java.lang.String)"], "Fixed commit": "9a308464d2a70608f843139502702125b3020f1a", "Url": "https://api.github.com/repos/AxonFramework/AxonFramework", "Date": "2013-01-20T18:33:40Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.featureOrderList.isEmpty())) { this.featureOrderList.set(i, newName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4802/buggy-version/plugins.de.ovgu.featureide.fm.core.src.de.ovgu.featureide.fm.core.base.impl.FeatureModel.java", "BodyUseAPI": ["java.util.List<java.lang.String>.set(int,java.lang.String)"], "Fixed commit": "b35cdba2de277d17fc59dac4cdff9f085e050602", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2016-04-20T09:22:54Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(SharedData.username.equals(\"admin\"))) { userManagementMenuItem.hide(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/127/buggy-version/LibrarySystem.src.GUI.ApplicationGUI.java", "BodyUseAPI": [], "Fixed commit": "4d0369628727213dad806a2dd67cde902ed23540", "Url": "https://api.github.com/repos/romheredia/COMP741-ApplicationDevelopment", "Date": "2017-09-02T20:55:56Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.ubi) != null) res.put(\"model\", this.ubi.toJson());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8001/buggy-version/hsom.src.main.java.micro.entity.HSOMNode.java", "BodyUseAPI": [], "Fixed commit": "a21a35fa38d3718a577fe6f9b0a64c295ee51e77", "Url": "https://api.github.com/repos/carlosbate/thesis-ubihsom", "Date": "2017-05-09T10:41:36Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (r instanceof de.mhus.lib.core.MTimerTask) { if (((de.mhus.lib.core.MTimerTask) (r)).isCanceled()) { this.cancel(); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7247/buggy-version/mhu-lib-core.src.main.java.de.mhus.lib.core.system.DefaultHousekeeper.java", "BodyUseAPI": [], "Fixed commit": "b685fe5d6860423d146148ce993d3277d00e1188", "Url": "https://api.github.com/repos/mhus/mhus-lib", "Date": "2017-11-10T09:18:04Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fieldType == (float.class)) || (fieldType == (java.lang.Float.class))) clazz.getMethod((\"set\" + (cn.flyzy2005.daoutils.util.ReflectUtils.upperFirstLetter(fieldName))), field.getType()).invoke(t, cursor.getFloat(columnIndex)); else { double d = new java.math.BigDecimal(java.lang.String.valueOf(cursor.getFloat(columnIndex))).doubleValue(); clazz.getMethod((\"set\" + (cn.flyzy2005.daoutils.util.ReflectUtils.upperFirstLetter(fieldName))), field.getType()).invoke(t, d); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4307/buggy-version/daoutils.src.main.java.cn.flyzy2005.daoutils.util.ReflectUtils.java", "BodyUseAPI": [], "Fixed commit": "1be0c67f7d08b97e47e13289c3bcadc97703acff", "Url": "https://api.github.com/repos/flyzy2005/daoutils", "Date": "2017-09-27T08:43:34Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.gbFeature.getGBFeatureQuals()) != null) && ((this.gbFeature.getGBFeatureQuals().getGBQualifier()) != null)) { for (gov.nih.nlm.ncbi.gb.GBQualifier q : this.gbFeature.getGBFeatureQuals().getGBQualifier()) { java.lang.String key = q.getGBQualifierName(); for (com.github.lindenb.jvarkit.tools.blastmapannots.BlastMapAnnotations.QualKey qk : com.github.lindenb.jvarkit.tools.blastmapannots.BlastMapAnnotations.QualKey.values()) { if (qk.name().equals(key)) { t.put(qk, q.getGBQualifierValue()); break; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4298/buggy-version/src.main.java.com.github.lindenb.jvarkit.tools.blastmapannots.BlastMapAnnotations.java", "BodyUseAPI": ["this.gbFeature.getGBFeatureQuals().getGBQualifier()", "gov.nih.nlm.ncbi.gb.GBFeature.getGBFeatureQuals()"], "Fixed commit": "d12459b96f62d53b35263a40334938bf8000f04d", "Url": "https://api.github.com/repos/lindenb/jvarkit", "Date": "2013-07-10T12:11:22Z"},
{"Line": "=>1439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (allSatisfyPreCondition) { for (int pos = 0; pos < (parents.size()); pos++) { if (!((jop.getParentOperators().get(pos)) instanceof org.apache.hadoop.hive.ql.exec.ReduceSinkOperator)) { allSatisfyPreCondition = false; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1617/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.optimizer.stats.annotation.StatsRulesProcFactory.java", "BodyUseAPI": [], "Fixed commit": "e43aee3bed3d5c227a7ab2c2dcf8dd1149500063", "Url": "https://api.github.com/repos/vineetgarg02/hive", "Date": "2017-08-08T00:34:00Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exoplatform.webui.application.WebuiRequestContext.getRequestParameter(UIComponent.OBJECTID)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.gatein.common.util.ParameterValidation.isNullOrEmpty(nodeID)) { node = uiNodeSelector.getRootNode(); }else { node = uiNodeSelector.searchNode(nodeID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/9108/buggy-version/webui.portal.src.main.java.org.exoplatform.portal.webui.navigation.UINavigationNodeSelector.java", "BodyUseAPI": ["org.exoplatform.portal.webui.navigation.UINavigationNodeSelector.searchNode(java.lang.String)"], "Fixed commit": "3fc3330c280846388dbe3784818a22a441dbc043", "Url": "https://api.github.com/repos/trongtt/exogtn", "Date": "2011-05-19T07:08:16Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(analysis.containsKey(field))) { analysis.put(field, new java.util.HashSet<java.lang.String>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2713/buggy-version/harnesses.ReImInfer-0.1.3.ReImInferGrader.src.ReImInferGrader.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.util.Set<java.lang.String>>.put(java.lang.String,java.util.HashSet<java.lang.String>)"], "Fixed commit": "d0c8aec3e101b2c3bbfd246a802829eb238fab5b", "Url": "https://api.github.com/repos/kcsl/immutability-benchmark", "Date": "2016-11-11T22:49:45Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.toBinaryString(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((binaryString.length()) < (powerPoints.size())) { for (int i = 0; i < ((this.powerPoints.size()) - (binaryString.length())); i++) { fillZero.append(\"0\"); } fillZero.append(binaryString); binaryString = fillZero.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6662/buggy-version/src.sta.andswtch.extensionLead.ResponseProcessor.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.StringBuffer.append(java.lang.String)"], "Fixed commit": "c3e95ef7b1b8e45829ef9b8fe35fe415c116713d", "Url": "https://api.github.com/repos/scurrility/andswtch", "Date": "2011-04-11T14:35:24Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentEditText) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6519/buggy-version/app.src.main.java.com.yohoho.pxman.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b09ab6fcf1f468e9a4dd001e98c34e40850f6e42", "Url": "https://api.github.com/repos/zaaach/PxMan", "Date": "2015-12-06T15:19:34Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["simplex.Tableau.getIndexOfFirstNegReducedCosts()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (enteringVariable == (Util.NOTHING)) { status = simplex.Tableau.PivotResult.OPTIMAL_ACHIEVED; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6843/buggy-version/Simplex.src.simplex.Tableau.java", "BodyUseAPI": [], "Fixed commit": "2bf1afe6f2f602c771fe8e0a1c783c9be27da751", "Url": "https://api.github.com/repos/kleiner-fisch/simplex-impl", "Date": "2013-05-23T17:43:42Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["simplex.Tableau.getIndexOfFirstNegReducedCosts()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (simplex.Util.isNonPositive(tableau[enteringVariable])) { status = simplex.Tableau.PivotResult.INFINITE_OPTIMUM; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6843/buggy-version/Simplex.src.simplex.Tableau.java", "BodyUseAPI": [], "Fixed commit": "2bf1afe6f2f602c771fe8e0a1c783c9be27da751", "Url": "https://api.github.com/repos/kleiner-fisch/simplex-impl", "Date": "2013-05-23T17:43:42Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (ca.skule.froshapplication.Location.CodeMap.containsKey(this.locationName)) { sLocationName = ca.skule.froshapplication.Location.CodeMap.get(this.locationName); this.coordX = coordX; this.coordY = coordY; this.locationName = locationName; }else { this.coordX = -10000; this.coordY = -10000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2032/buggy-version/src.ca.skule.froshapplication.Location.java", "BodyUseAPI": [], "Fixed commit": "ee75d9c7de13e537ba3b31d2123456068f011202", "Url": "https://api.github.com/repos/kinglbf/FroshAndroidApp", "Date": "2013-07-20T01:48:25Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tr.getSubtitleDTOToTranslate().getExpression().contains(word)) translations.add(tr);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5205/buggy-version/TBS-Translation.src.main.java.fr.gemeroi.translation.Translate.java", "BodyUseAPI": ["java.util.Set<fr.gemeroi.translation.Translation>.add(fr.gemeroi.translation.Translation)"], "Fixed commit": "c2a76da8790d2fa013813d09f9b7c082015407a6", "Url": "https://api.github.com/repos/jon972/TBS", "Date": "2017-06-24T00:20:18Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.gemeroi.user.creation.UserFactory.createUser(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (user != null) { java.lang.String token = user.getToken(); fr.gemeroi.user.creation.UsersCache.addUser(token, user); return fr.gemeroi.services.reponses.Responses.responseOk(user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5205/buggy-version/TBS-WS.src.fr.gemeroi.services.AccountServices.java", "BodyUseAPI": ["fr.gemeroi.user.creation.UsersCache.addUser(java.lang.String,fr.gemeroi.persistence.bean.User)", "fr.gemeroi.persistence.bean.User.getToken()", "fr.gemeroi.services.reponses.Responses.responseOk(fr.gemeroi.persistence.bean.User)"], "Fixed commit": "c2a76da8790d2fa013813d09f9b7c082015407a6", "Url": "https://api.github.com/repos/jon972/TBS", "Date": "2017-06-24T00:20:18Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (test.has(\"token\")) { java.lang.String Tokenvalue = test.getString(\"token\"); if (Tokenvalue != null) { onLoginSuccess(); processor.setUserData(respnseString); android.content.Intent MainTrans = new android.content.Intent(getApplicationContext(), com.vinmein.dvadivel.foodie.activity.DashboardActivity.class); startActivity(MainTrans); }else { android.widget.Toast.makeText(getApplicationContext(), \"Invalid Login\", Toast.LENGTH_SHORT); android.content.Intent MainTrans = new android.content.Intent(getApplicationContext(), com.vinmein.dvadivel.foodie.activity.HomeActivity.class); startActivity(MainTrans); } }else { android.widget.Toast.makeText(getApplicationContext(), \"User not found\", Toast.LENGTH_SHORT); android.content.Intent MainTrans = new android.content.Intent(getApplicationContext(), com.vinmein.dvadivel.foodie.activity.HomeActivity.class); startActivity(MainTrans); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3958/buggy-version/app.src.main.java.com.vinmein.dvadivel.foodie.activity.HomeActivity.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "bdc2558047762679e39e8376d310404e0912f7da", "Url": "https://api.github.com/repos/vinmein/foodieapp", "Date": "2017-03-20T03:32:08Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (files.isEmpty()) { removeDeletedFiles(newDatabaseVersion, fileHistoriesWithLastVersion); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7951/buggy-version/syncany-lib.src.main.java.org.syncany.operations.up.Indexer.java", "BodyUseAPI": [], "Fixed commit": "9ddb9e207354190a719419f396364a91196dee77", "Url": "https://api.github.com/repos/syncany/syncany", "Date": "2015-04-15T20:13:14Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((curNode) == (rootNode)) { throw new org.onosproject.yms.app.ydt.exceptions.YdtExceptions(\"Can't invoke get parent at logical root node.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6402/buggy-version/app.src.main.java.org.onosproject.yms.app.ydt.YangRequestWorkBench.java", "BodyUseAPI": [], "Fixed commit": "6bd015c91a3ac412e5f82a99604b7a79b8e3e3f1", "Url": "https://api.github.com/repos/GauravAgrawal-Huawei/ymsm", "Date": "2016-09-07T17:31:08Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.wahlzeit.model.coordinates.impl.AbstractCoordinate.isNoWhere(otherCoord)) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5368/buggy-version/src.main.java.org.wahlzeit.model.coordinates.impl.AbstractCoordinate.java", "BodyUseAPI": [], "Fixed commit": "2ed6bf6ecf968269b17a2f28d1dc1f293bbef50a", "Url": "https://api.github.com/repos/Tango1266/wahlzeit", "Date": "2017-12-10T19:34:44Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (feature.endPos.endsWith(\"\\r\")) feature.endPos = feature.endPos.substring(0, ((feature.endPos.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4088/buggy-version/src.data_center.SketchCenter.java", "BodyUseAPI": ["feature.endPos.length()", "feature.endPos.substring(int,((feature.endPos.length()) - 1))"], "Fixed commit": "9c2cfa15c6de089eb0700f2fe7a950d0e5b8b336", "Url": "https://api.github.com/repos/igemsoftware/SJTU-Software_2014", "Date": "2014-10-16T17:52:11Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openinfinity.sso.valve.mapper.RequestToIdentityMapper.map(org.apache.catalina.connector.Request)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((identity.getUserPrincipal()) != null) { request.setUserPrincipal(identity.getUserPrincipal()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2799/buggy-version/open-infinity-security-vault.open-infinity-security-vault-valve-integration.src.main.java.org.openinfinity.sso.valve.HeaderBasedSecurityVaultValve.java", "BodyUseAPI": ["org.openinfinity.core.security.principal.Identity.getUserPrincipal()", "org.apache.catalina.connector.Request.setUserPrincipal(identity.getUserPrincipal())"], "Fixed commit": "c861dce522ad15616969be862fefe17c1d2f5ac9", "Url": "https://api.github.com/repos/open-infinity/sso", "Date": "2016-05-04T12:31:16Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openinfinity.sso.valve.mapper.RequestToIdentityMapper.map(org.apache.catalina.connector.Request)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((identity.getUserPrincipal()) != null) { request.setUserPrincipal(identity.getUserPrincipal()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2799/buggy-version/open-infinity-security-vault.open-infinity-security-vault-valve-integration.src.main.java.org.openinfinity.sso.valve.AttributeBasedSecurityVaultValve.java", "BodyUseAPI": ["org.openinfinity.core.security.principal.Identity.getUserPrincipal()", "org.apache.catalina.connector.Request.setUserPrincipal(identity.getUserPrincipal())"], "Fixed commit": "c861dce522ad15616969be862fefe17c1d2f5ac9", "Url": "https://api.github.com/repos/open-infinity/sso", "Date": "2016-05-04T12:31:16Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tiempoUltMov) != null) tiempoUltMov.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6248/buggy-version/src.src.main.java.com.reversi.Partida.java", "BodyUseAPI": [], "Fixed commit": "01a6d3cc5b1b537b7ac370fa87acd118b875f27f", "Url": "https://api.github.com/repos/nachor4/is-hgm2013", "Date": "2013-11-07T00:03:10Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tiempoUltMov) != null) tiempoUltMov.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6248/buggy-version/src.src.main.java.com.reversi.Partida.java", "BodyUseAPI": [], "Fixed commit": "01a6d3cc5b1b537b7ac370fa87acd118b875f27f", "Url": "https://api.github.com/repos/nachor4/is-hgm2013", "Date": "2013-11-07T00:03:10Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tiempoUltMov) != null) tiempoUltMov.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6248/buggy-version/src.src.main.java.com.reversi.Partida.java", "BodyUseAPI": [], "Fixed commit": "01a6d3cc5b1b537b7ac370fa87acd118b875f27f", "Url": "https://api.github.com/repos/nachor4/is-hgm2013", "Date": "2013-11-07T00:03:10Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tiempoUltMov) != null) tiempoUltMov.restart();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6248/buggy-version/src.src.main.java.com.reversi.Partida.java", "BodyUseAPI": [], "Fixed commit": "01a6d3cc5b1b537b7ac370fa87acd118b875f27f", "Url": "https://api.github.com/repos/nachor4/is-hgm2013", "Date": "2013-11-07T00:03:10Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.timestamp) >= (Transaction.POWFIX_RELEASE)) { if ((this.sender.getConfirmedBalance(fork).compareTo(java.math.BigDecimal.ZERO)) == (-1)) { return NO_BALANCE; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/185/buggy-version/Qora.src.qora.transaction.MultiPaymentTransaction.java", "BodyUseAPI": [], "Fixed commit": "a49f500c610fb0be3eca1e8876b42d94fa1c50f7", "Url": "https://api.github.com/repos/Qoracoin/Qora", "Date": "2016-02-09T21:01:42Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jace.core.SoundMixer.MUTE) { detach(); }else if (isConfigDifferent()) { detach(); try { initMixer(); if (lineAvailable) { initAudio(); }else { java.lang.System.out.println(\"Sound not stared: Line not available\"); } } catch (javax.sound.sampled.LineUnavailableException ex) { java.lang.System.out.println(\"Unable to start sound\"); java.util.logging.Logger.getLogger(jace.core.SoundMixer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } attach(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6442/buggy-version/src.main.java.jace.core.SoundMixer.java", "BodyUseAPI": [], "Fixed commit": "609ad08bfd1bcae688d7cfccebdbb668f017b854", "Url": "https://api.github.com/repos/badvision/jace", "Date": "2016-02-15T04:59:40Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((irDeviceService) != null) { irDeviceService.writeCharactCmd(cmd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1918/buggy-version/app.src.main.java.com.ybg.ga.ymga.ga.tw.TWMainActivity.java", "BodyUseAPI": [], "Fixed commit": "5af9791773bf8f3ff3080b45c918b24f00311e7f", "Url": "https://api.github.com/repos/yangbagang/ymga", "Date": "2016-12-03T09:28:07Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((grantResults == null) || ((grantResults.length) == 0)) { super.onRequestPermissionsResult(requestCode, permissions, grantResults); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1918/buggy-version/app.src.main.java.com.ybg.ga.ymga.ga.yd.YDMainActivity.java", "BodyUseAPI": ["android.support.v7.app.AppCompatActivity.onRequestPermissionsResult(int,java.lang.String[],int[])"], "Fixed commit": "5af9791773bf8f3ff3080b45c918b24f00311e7f", "Url": "https://api.github.com/repos/yangbagang/ymga", "Date": "2016-12-03T09:28:07Z"},
{"Line": "=>675", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.v2tech.logic.GlobalHolder.getInstance().getGroup(Group.GroupType.CONFERENCE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((lg == null) || ((lg.size()) >= (msg.arg1))) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3716/buggy-version/source.src.com.v2tech.view.JNIService.java", "BodyUseAPI": [], "Fixed commit": "6aada366da58a85dd1086c2ba79df0198e2227c5", "Url": "https://api.github.com/repos/jiangzhen1984/V2TechConferenceClient", "Date": "2014-03-09T02:37:08Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) == null) { if ((other.type) != null) return false; }else if (!(type.equals(other.type))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/705/buggy-version/src.main.java.org.fit.layout.impl.DefaultTag.java", "BodyUseAPI": [], "Fixed commit": "c62e6d03e142542fb429aaed75c88c9f3a130d08", "Url": "https://api.github.com/repos/FitLayout/api", "Date": "2015-01-25T11:02:23Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) == null) { if ((other.value) != null) return false; }else if (!(value.equals(other.value))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/705/buggy-version/src.main.java.org.fit.layout.impl.DefaultTag.java", "BodyUseAPI": [], "Fixed commit": "c62e6d03e142542fb429aaed75c88c9f3a130d08", "Url": "https://api.github.com/repos/FitLayout/api", "Date": "2015-01-25T11:02:23Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getClass()) != (obj.getClass())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/705/buggy-version/src.main.java.org.fit.layout.impl.DefaultTag.java", "BodyUseAPI": [], "Fixed commit": "c62e6d03e142542fb429aaed75c88c9f3a130d08", "Url": "https://api.github.com/repos/FitLayout/api", "Date": "2015-01-25T11:02:23Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.realm.RealmList<me.calebjones.spacelaunchnow.data.models.Launch>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((launchItem.getStatus()) != 1) { if ((launchItem.getRocket().getAgencies().size()) > 0) { holder.content_TMinus_status.setText(java.lang.String.format(\"Pending confirmed GO from %s\", launchItem.getRocket().getAgencies().get(0).getName())); }else { holder.content_TMinus_status.setText(\"Pending confirmed Go for Launch from launch agency\"); } }else { if ((launchItem.getRocket().getAgencies().size()) > 0) { holder.content_TMinus_status.setText(java.lang.String.format(\"Waiting on exact launch time from %s\", launchItem.getRocket().getAgencies().first().getName())); }else { holder.content_TMinus_status.setText(\"Waiting on exact launch time from launch provider\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1666/buggy-version/mobile.src.main.java.me.calebjones.spacelaunchnow.ui.main.next.CardBigAdapter.java", "BodyUseAPI": ["launchItem.getRocket().getAgencies().first()", "android.widget.TextView.setText(java.lang.String)", "launchItem.getRocket().getAgencies().first().getName()", "me.calebjones.spacelaunchnow.data.models.Launch.getRocket()", "launchItem.getRocket().getAgencies().size()", "android.widget.TextView.setText(java.lang.String)", "me.calebjones.spacelaunchnow.data.models.Launch.getRocket()", "java.lang.String.format(java.lang.String,launchItem.getRocket().getAgencies().first().getName())", "java.lang.String.format(java.lang.String,launchItem.getRocket().getAgencies().get(0).getName())", "launchItem.getRocket().getAgencies()", "launchItem.getRocket().getAgencies()", "launchItem.getRocket().getAgencies().get(0).getName()", "launchItem.getRocket().getAgencies().size()", "launchItem.getRocket().getAgencies()", "launchItem.getRocket().getAgencies().get(int)", "me.calebjones.spacelaunchnow.data.models.Launch.getRocket()", "me.calebjones.spacelaunchnow.data.models.Launch.getRocket()", "launchItem.getRocket().getAgencies()"], "Fixed commit": "649c913301b1ea69938bfbc13fabca0df3e0ba17", "Url": "https://api.github.com/repos/ItsCalebJones/SpaceLaunchNow-Android", "Date": "2017-05-22T16:23:16Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!hasVb) { volumes.add(vb); java.util.Collections.sort(volumes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5091/buggy-version/src.Titration.java", "BodyUseAPI": [], "Fixed commit": "6f9cb91f44ebf1f1d98afa7f314491e599e7f96e", "Url": "https://api.github.com/repos/likevin2010/titrate", "Date": "2014-06-01T18:34:10Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == vb) hasVb = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5091/buggy-version/src.Titration.java", "BodyUseAPI": [], "Fixed commit": "6f9cb91f44ebf1f1d98afa7f314491e599e7f96e", "Url": "https://api.github.com/repos/likevin2010/titrate", "Date": "2014-06-01T18:34:10Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((client.getState()) != (org.apache.curator.framework.imps.CuratorFrameworkState.STARTED)) { client.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3501/buggy-version/src.main.java.com.github.phantomthief.zookeeper.AbstractLazyZkBasedTreeResource.java", "BodyUseAPI": ["org.apache.curator.framework.CuratorFramework.start()"], "Fixed commit": "4140140eddb899bd80bde91140ff76eb6563b762", "Url": "https://api.github.com/repos/PhantomThief/zkconfig-resources", "Date": "2015-01-29T02:46:51Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((client.getState()) != (org.apache.curator.framework.imps.CuratorFrameworkState.STARTED)) { client.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3501/buggy-version/src.main.java.com.github.phantomthief.zookeeper.AbstractLazyZkBasedNodeResource.java", "BodyUseAPI": ["org.apache.curator.framework.CuratorFramework.start()"], "Fixed commit": "4140140eddb899bd80bde91140ff76eb6563b762", "Url": "https://api.github.com/repos/PhantomThief/zkconfig-resources", "Date": "2015-01-29T02:46:51Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((be.ppareit.shutdown.App.debugNotRooted()) == true) { try { java.lang.Thread.sleep(5000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8271/buggy-version/src.be.ppareit.shutdown.SdActivity.java", "BodyUseAPI": [], "Fixed commit": "83e190cf01834995e72edf3b43060b7633f50615", "Url": "https://api.github.com/repos/ppareit/Shutdown", "Date": "2013-12-27T10:04:50Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((peca.getTime()) != (jogadorAtual)) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8403/buggy-version/RegraDeJogo.src.regradejogo.Regras.java", "BodyUseAPI": [], "Fixed commit": "bb4ff0bcb0ac40f47a190f450cefc2b622b29428", "Url": "https://api.github.com/repos/elihofni/ES2_damas", "Date": "2016-12-16T18:53:58Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((peca.getTime()) != (jogadorAtual)) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8403/buggy-version/RegraDeJogo.src.regradejogo.Regras.java", "BodyUseAPI": [], "Fixed commit": "bb4ff0bcb0ac40f47a190f450cefc2b622b29428", "Url": "https://api.github.com/repos/elihofni/ES2_damas", "Date": "2016-12-16T18:53:58Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ps.getTestExecutionResult()) != null) { ps.getTestExecutionResult().cleanCalledNodeInformations(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2780/buggy-version/smf.src.main.java.com.vmusco.smf.run.NewProject.java", "BodyUseAPI": ["ps.getTestExecutionResult().cleanCalledNodeInformations()", "com.vmusco.smf.analysis.ProcessStatistics.getTestExecutionResult()"], "Fixed commit": "1264fa79b848b900bb264d53741f0dfa4c0acf63", "Url": "https://api.github.com/repos/v-m/PropagationAnalysis", "Date": "2016-02-11T16:01:03Z"},
{"Line": "=>945", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myPointers.size()) == 1) startSelectRegion(x, y);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6559/buggy-version/src.com.kh.beatbot.view.MidiView.java", "BodyUseAPI": [], "Fixed commit": "7481728cf2778b91331e1a6c09da6e1595d4f8f1", "Url": "https://api.github.com/repos/khiner/BeatBot", "Date": "2012-09-22T06:09:12Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tryTimer) == null) tryTimer = new java.util.Timer();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3863/buggy-version/src.main.java.com.sharparam.sharpmemory.models.FieldModel.java", "BodyUseAPI": [], "Fixed commit": "3f9622deb709e01e085b8152cfc75bcafd4d1723", "Url": "https://api.github.com/repos/Sharparam/SharpMemory", "Date": "2014-03-28T09:32:43Z"},
{"Line": "=>604", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (enchantment == null) { player.sendMessage(((((org.bukkit.ChatColor.RED) + \"Invalid enchantment: \") + (org.bukkit.ChatColor.WHITE)) + enchantName)); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3781/buggy-version/Magic.src.main.java.com.elmakers.mine.bukkit.magic.command.MagicItemCommandExecutor.java", "BodyUseAPI": [], "Fixed commit": "1b4fdf3d6e649ef2ce12742e5630a6b5899fa55e", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2017-02-02T18:01:38Z"},
{"Line": "=>656", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (enchantment == null) { player.sendMessage(((((org.bukkit.ChatColor.RED) + \"Invalid enchantment: \") + (org.bukkit.ChatColor.WHITE)) + enchantName)); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3781/buggy-version/Magic.src.main.java.com.elmakers.mine.bukkit.magic.command.MagicItemCommandExecutor.java", "BodyUseAPI": [], "Fixed commit": "1b4fdf3d6e649ef2ce12742e5630a6b5899fa55e", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2017-02-02T18:01:38Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mSwiping)) super.onTouchEvent(ev);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3232/buggy-version/Breadit.reddit.src.main.java.me.williamhester.ui.views.SwipeView.java", "BodyUseAPI": [], "Fixed commit": "83128f9ec50d5ea83e6e566512d16cef569b0820", "Url": "https://api.github.com/repos/WilliamHester/breadit", "Date": "2014-10-06T02:50:29Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(corve.nohsedge.MainActivity.EdgeDay5.toLowerCase().contains(\"fri\"))) { (undefinedFriday)++; if ((undefinedFriday) > 2) { consoleMessage = \"FriUndefined\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/24/buggy-version/NOHSEdge.app.src.main.java.corve.nohsedge.EdgeSignupActivity.java", "BodyUseAPI": [], "Fixed commit": "627b9f947a984fb1d65a866f3a3b214de4b29d21", "Url": "https://api.github.com/repos/CorvetteCole/NOHS-Edge-Client", "Date": "2017-10-12T01:35:02Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fadeInfo) != null) { material.setVector2(\"FadeInfo\", fadeInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1386/buggy-version/jme3-core.src.main.java.com.jme3.shadow.DirectionalLightShadowRenderer.java", "BodyUseAPI": [], "Fixed commit": "24a971a186874a7ef56a74a2357706f3925514d1", "Url": "https://api.github.com/repos/OpenGrabeso/jmonkeyengine", "Date": "2014-10-20T19:49:01Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cmp == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2299/buggy-version/promviz.src.promviz.Prominence.java", "BodyUseAPI": [], "Fixed commit": "84d8f9c7fa9b47f83a897ed558c83bfae3ce7e98", "Url": "https://api.github.com/repos/mrgriscom/promviz", "Date": "2015-05-31T23:40:39Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((list.size()) == 1) { pl.edu.uj.tcs.matematycy2013.LetterCoordinates now = list.get(0); if (!(findStart(now, putLetters, 0).equals(findEnd(now, putLetters, 0)))) { return 0; } return 1; }else { pl.edu.uj.tcs.matematycy2013.LetterCoordinates a = list.get(0); pl.edu.uj.tcs.matematycy2013.LetterCoordinates b = list.get(1); if ((a.x) == (b.x)) { return 0; } return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7811/buggy-version/scrabble.src.main.java.pl.edu.uj.tcs.matematycy2013.Game.java", "BodyUseAPI": ["java.util.ArrayList<pl.edu.uj.tcs.matematycy2013.LetterCoordinates>.get(int)", "java.util.ArrayList<pl.edu.uj.tcs.matematycy2013.LetterCoordinates>.get(int)", "java.util.ArrayList<pl.edu.uj.tcs.matematycy2013.LetterCoordinates>.get(int)"], "Fixed commit": "be8c7b5d4b972bd000ce5a23eb157a9116c8fdb7", "Url": "https://api.github.com/repos/timorl/projekt-Scrabble", "Date": "2013-05-31T16:45:48Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eclipseProject.getGradleProject().getBuildScript()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((buildScript.get().getSourceFile()) != null) { buildScriptPath = new org.eclipse.core.runtime.Path(buildScript.get().getSourceFile().getAbsolutePath()); }else { buildScriptPath = new org.eclipse.core.runtime.Path(new java.io.File(\"build.gradle\").getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8097/buggy-version/org.eclipse.buildship.core.src.main.java.org.eclipse.buildship.core.workspace.internal.BuildScriptLocationUpdater.java", "BodyUseAPI": ["buildScript.get().getSourceFile().getAbsolutePath()", "buildScript.get().getSourceFile()", "com.gradleware.tooling.toolingmodel.util.Maybe<com.gradleware.tooling.toolingmodel.OmniGradleScript>.get()"], "Fixed commit": "26826df8782b4dbea6727aa83510af45d7522ff2", "Url": "https://api.github.com/repos/wodencafe/buildship", "Date": "2017-11-06T20:22:02Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f.contains(\",\")) { f = ('\"' + f) + '\"'; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/203/buggy-version/src.main.java.de.appdynamics.ace.zendesk.cli.cmd.RetrieveCaseExportCommand.java", "BodyUseAPI": [], "Fixed commit": "f2ac8a3a37e2a4db43bb215d69644919b12cf8f7", "Url": "https://api.github.com/repos/leika/ZendeskCLI", "Date": "2015-03-11T21:39:11Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedClass) != null) { java.lang.reflect.Constructor listCtor = selectedClass.getConstructor(ctorArgs1); drawable = ((main.inteface.IDraw) (listCtor.newInstance(new java.awt.Point(((mouseX) + (main.Frame.Frame.BORDER_WIDTH)), ((mouseY) + (main.Frame.Frame.BORDER_HEIGHT))), new java.awt.Point(((e.getX()) + (main.Frame.Frame.BORDER_WIDTH)), ((e.getY()) + (main.Frame.Frame.BORDER_HEIGHT)))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8176/buggy-version/main.Frame.Frame.java", "BodyUseAPI": [], "Fixed commit": "8b23fee39ff1a39edb8202e45cbc28bc318255e9", "Url": "https://api.github.com/repos/PandaXz/OOP", "Date": "2017-04-09T10:11:01Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (formName.equals(\"new_member_registration_without_qr\")) { formIndex = org.ei.opensrp.util.FormUtils.getIndexForFormName(formName, formNames); }else formIndex = (org.ei.opensrp.util.FormUtils.getIndexForFormName(formName, formNames)) + (((org.ei.opensrp.view.template.BaseRegisterActivityPagerAdapter) (mPagerAdapter)).offset);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7006/buggy-version/opensrp-app.src.main.java.org.ei.opensrp.view.template.SmartRegisterSecuredActivity.java", "BodyUseAPI": ["org.ei.opensrp.util.FormUtils.getIndexForFormName(java.lang.String,java.lang.String[])", "org.ei.opensrp.util.FormUtils.getIndexForFormName(java.lang.String,java.lang.String[])"], "Fixed commit": "8ca961fcc9180f8334120ee681ff2b274a2068e7", "Url": "https://api.github.com/repos/OpenSRP/opensrp-client", "Date": "2016-08-15T12:58:26Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (qrCode) return \"new_member_registration\"; else return \"new_member_registration_without_qr\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7006/buggy-version/opensrp-vaccinator.src.main.java.org.ei.opensrp.vaccinator.fragment.HouseholdSmartRegisterFragment.java", "BodyUseAPI": [], "Fixed commit": "8ca961fcc9180f8334120ee681ff2b274a2068e7", "Url": "https://api.github.com/repos/OpenSRP/opensrp-client", "Date": "2016-08-15T12:58:26Z"},
{"Line": "=>863", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, org.hellojavaer.poi.excel.utils.ExcelUtils.InnerRow>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((cachedRow != null) || (cache.containsKey(rowIndex))) { return cachedRow; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6249/buggy-version/src.main.java.org.hellojavaer.poi.excel.utils.ExcelUtils.java", "BodyUseAPI": [], "Fixed commit": "dec7a6e1c1bf8c3ca6409b6985e02d00425fee74", "Url": "https://api.github.com/repos/hellojavaer/poi-excel-utils", "Date": "2016-04-03T06:19:04Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.mpg.imeji.presentation.util.ProfileHelper.getStatement(smd.getStatement(),de.mpg.imeji.logic.vo.MetadataProfile)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (st == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5328/buggy-version/src.main.java.de.mpg.imeji.presentation.metadata.MetadataSetBean.java", "BodyUseAPI": [], "Fixed commit": "05d1968a4948be6e6d8a8931d37e0bc98e5a790c", "Url": "https://api.github.com/repos/imeji-community/imeji", "Date": "2013-05-27T07:07:16Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((realTimeInstantiated) == false) { switchToFragment(\"REAL_TIME_FRAGMENT\"); realTimeInstantiated = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1967/buggy-version/mindMapperApp.src.main.java.edu.engagement.application.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8cf363cf44a43aad71cdaed9011500e5866f5b52", "Url": "https://api.github.com/repos/jayprat95/MindMapper", "Date": "2015-04-30T14:22:35Z"},
{"Line": "=>883", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<net.minecraft.world.World, com.google.common.cache.Cache<java.lang.Long, net.minecraft.world.chunk.Chunk>>.get(net.minecraft.world.World)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cache == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3801/buggy-version/common.net.minecraftforge.common.ForgeChunkManager.java", "BodyUseAPI": [], "Fixed commit": "695b080197bd577cc34fe6dbc72b74f4a74b2d5c", "Url": "https://api.github.com/repos/gishicrafter/MinecraftForge", "Date": "2013-01-26T15:24:48Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(relativePath)) { sb.append(\"/\"); }else { sb.append(relativePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/570/buggy-version/sonar-plugin-api.src.main.java.org.sonar.api.batch.fs.internal.DefaultInputDir.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "59e1f8eca37d7a37e0837e437ab3e6eb38a7dfea", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2015-10-05T16:02:31Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.com.devmastersouza.powerfulcookie.Cookie.getCookieByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (cookie != null) { for (br.com.devmastersouza.powerfulcookie.Effect effect : cookie.getEffects()) { event.getPlayer().addPotionEffect(new org.bukkit.potion.PotionEffect(effect.getType(), effect.getDuration(), effect.getTier()), true); } if ((cookie.getEatMessage()) != null) { event.getPlayer().sendMessage(cookie.getEatMessage()); } if ((cookie.getEatBroadcastMessage()) != null) { for (org.bukkit.entity.Player online : br.com.devmastersouza.powerfulcookie.Util.getOnlinePlayers()) { online.sendMessage(cookie.getEatBroadcastMessage().replaceAll(\"<player>\", event.getPlayer().getName())); } } if ((cookie.getEatSound()) != null) { event.getPlayer().playSound(event.getPlayer().getLocation(), cookie.getEatSound(), 1.0F, 1.0F); if (cookie.isBroadcastSound()) { for (org.bukkit.entity.Player online : br.com.devmastersouza.powerfulcookie.Util.getOnlinePlayers()) { online.playSound(online.getLocation(), cookie.getEatSound(), 1.0F, 1.0F); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6892/buggy-version/src.main.java.br.com.devmastersouza.powerfulcookie.CookieListener.java", "BodyUseAPI": ["org.bukkit.entity.Player.playSound(online.getLocation(),cookie.getEatSound(),float,float)", "br.com.devmastersouza.powerfulcookie.Cookie.getEatSound()", "event.getPlayer().sendMessage(cookie.getEatMessage())", "br.com.devmastersouza.powerfulcookie.Cookie.getEatSound()", "cookie.getEatBroadcastMessage().replaceAll(java.lang.String,event.getPlayer().getName())", "br.com.devmastersouza.powerfulcookie.Cookie.getEatBroadcastMessage()", "br.com.devmastersouza.powerfulcookie.Cookie.getEatSound()", "br.com.devmastersouza.powerfulcookie.Cookie.getEatMessage()", "org.bukkit.entity.Player.sendMessage(cookie.getEatBroadcastMessage().replaceAll(\"<player>\", event.getPlayer().getName()))", "br.com.devmastersouza.powerfulcookie.Cookie.getEatMessage()", "br.com.devmastersouza.powerfulcookie.Cookie.getEatBroadcastMessage()", "br.com.devmastersouza.powerfulcookie.Cookie.getEffects()", "br.com.devmastersouza.powerfulcookie.Cookie.isBroadcastSound()", "event.getPlayer().playSound(event.getPlayer().getLocation(),cookie.getEatSound(),float,float)"], "Fixed commit": "705da043458cbce8d3ebfaf77b425eb62b45f93e", "Url": "https://api.github.com/repos/DevMasterSouza/PowerfulCookie", "Date": "2017-04-15T20:29:37Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (msg.equals(\"EXIT\")) { writeToServer(\"EXIT\"); socket.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8674/buggy-version/src.ru.denko.MySocket.java", "BodyUseAPI": [], "Fixed commit": "cf09627b8c3a8989e7d5b11dae6024084be74d91", "Url": "https://api.github.com/repos/Naraks/JavaChatClient", "Date": "2017-07-12T07:00:32Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.lushlife.guicexml.internal.property.PropertyManagement.toType(element.attributeValue(\"type\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (type == null) { type = creator.getComponentType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7504/buggy-version/src.main.java.org.lushlife.guicexml.internal.xml.CreatorXmlReader.java", "BodyUseAPI": [], "Fixed commit": "3f18c928d3e10ef39c5affbbbe5f048e57163b0b", "Url": "https://api.github.com/repos/takeshi/guice-xml-config", "Date": "2012-06-24T13:59:43Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((spt.length) == 1) { parameterTypes = new java.lang.reflect.Type[0]; }else { java.lang.String parameterStrings = spt[1].substring(0, ((spt[1].length()) - 1)); if ((parameterStrings.length()) == 0) { parameterTypes = new java.lang.reflect.Type[0]; }else { parameterTypes = toTypes(parameterStrings); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7504/buggy-version/src.main.java.org.lushlife.guicexml.internal.property.PropertyManagement.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "3f18c928d3e10ef39c5affbbbe5f048e57163b0b", "Url": "https://api.github.com/repos/takeshi/guice-xml-config", "Date": "2012-06-24T13:59:43Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.leanpoker.player.Player.getCards(request.getAsJsonObject().get(\"community_cards\").getAsJsonArray())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(cards.isEmpty())) { org.leanpoker.player.Card highest = cards.get(0); for (org.leanpoker.player.Card card : cards) { if ((card.getRank()) > (highest.getRank())) { highest = card; } } if (hand.containsHighest(highest)) { buyIn = buyIn + minimumRaise; } if (hand.isPocketPair()) { buyIn = (buyIn + minimumRaise) * 2; } if (((request.getAsJsonObject().get(\"players\").getAsJsonArray().size()) > 2) && (buyIn < minimumRaise)) { return 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5593/buggy-version/src.main.java.org.leanpoker.player.Player.java", "BodyUseAPI": ["java.util.List<org.leanpoker.player.Card>.get(int)"], "Fixed commit": "835b535a6de4d3bd1c9bd5030598c0e993305403", "Url": "https://api.github.com/repos/iotuya/poker-player-all-in", "Date": "2015-04-25T11:17:42Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fromServer.equals(\"ZERO ERROR\")) { java.lang.System.out.println(\"Cannot divide by zero. Please re-enter your equation.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4122/buggy-version/src.MathShared.MathClient.java", "BodyUseAPI": [], "Fixed commit": "135469aef1342ab2bffab4a9589420e9e41935d5", "Url": "https://api.github.com/repos/Ho-Lee-Schitt/ConcurrentAssign2", "Date": "2017-04-28T10:18:27Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (test[2].equals(\"0\")) { return \"ZERO ERROR\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4122/buggy-version/src.MathShared.MathCalc.java", "BodyUseAPI": [], "Fixed commit": "135469aef1342ab2bffab4a9589420e9e41935d5", "Url": "https://api.github.com/repos/Ho-Lee-Schitt/ConcurrentAssign2", "Date": "2017-04-28T10:18:27Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (normal()) { normal = objFile.getNormalData().get(objFile.getNormalIndexData().get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5366/buggy-version/src.code.java.GLModel.java", "BodyUseAPI": [], "Fixed commit": "1ae9d1d4a4b9767392ed33caf141e4bc16a479ec", "Url": "https://api.github.com/repos/woltersd/CompGrafik", "Date": "2016-02-02T16:09:54Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Location.getBlockY()", "mine.getRegion().getMaximum()", "org.bukkit.Location.getBlockZ()", "org.bukkit.Location.getBlockX()", "mine.getRegion().getMinimum()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((((java.lang.Math.abs(((one.getBlockX()) - x))) < 3) || ((java.lang.Math.abs(((two.getBlockX()) - x))) < 3)) || (((java.lang.Math.abs(((one.getBlockY()) - y))) < 3) || ((java.lang.Math.abs(((two.getBlockY()) - y))) < 3))) || (((java.lang.Math.abs(((one.getBlockZ()) - z))) < 3) || ((java.lang.Math.abs(((two.getBlockZ()) - z))) < 3))) { newBlock = mine.getMostCommonBlock().getBlock(); }else { newBlock = pattern.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2940/buggy-version/src.com.wolvencraft.prison.mines.routines.CustomTerrainRoutine.java", "BodyUseAPI": [], "Fixed commit": "2cff49dceb66361fbe15ec955fca5dd13db7f70c", "Url": "https://api.github.com/repos/bitWolfy/PrisonMine", "Date": "2013-01-19T18:47:12Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mine.getRegion().getMinimum()", "org.bukkit.Location.getBlockX()", "mine.getRegion().getMaximum()", "org.bukkit.Location.getBlockZ()", "org.bukkit.Location.getBlockY()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((((java.lang.Math.abs(((one.getBlockX()) - x))) < 3) || ((java.lang.Math.abs(((two.getBlockX()) - x))) < 3)) || (((java.lang.Math.abs(((one.getBlockY()) - y))) < 3) || ((java.lang.Math.abs(((two.getBlockY()) - y))) < 3))) || (((java.lang.Math.abs(((one.getBlockZ()) - z))) < 3) || ((java.lang.Math.abs(((two.getBlockZ()) - z))) < 3))) { newBlock = mine.getMostCommonBlock().getBlock(); }else { newBlock = pattern.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2940/buggy-version/src.com.wolvencraft.prison.mines.routines.CustomTerrainRoutine.java", "BodyUseAPI": [], "Fixed commit": "2cff49dceb66361fbe15ec955fca5dd13db7f70c", "Url": "https://api.github.com/repos/bitWolfy/PrisonMine", "Date": "2013-01-19T18:47:12Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tlds.containsKey(tld.getTaglibUri()))) { tlds.put(tld.getTaglibUri(), value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5044/buggy-version/undertow.src.main.java.org.wildfly.extension.undertow.deployment.TldParsingDeploymentProcessor.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.jboss.metadata.web.spec.TldMetaData>.put(tld.getTaglibUri(),org.jboss.metadata.web.spec.TldMetaData)", "org.jboss.metadata.web.spec.TaglibMetaData.getTaglibUri()"], "Fixed commit": "a73a254fa9e8ab9f8ec1caceedd67a3bc73f63d6", "Url": "https://api.github.com/repos/kabir/wildfly", "Date": "2013-06-21T00:08:22Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (choosingRoleIndex == (-1)) { for (int i = 0; i < (numRoles); i++) { heuristicInfo.hasRoleChanges[i] = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2766/buggy-version/src.org.ggp.base.player.gamer.statemachine.sancho.heuristic.PieceHeuristic.java", "BodyUseAPI": [], "Fixed commit": "f0e3122b2bef191a63c0c4997fb8d037c66eaffe", "Url": "https://api.github.com/repos/SteveDraper/ggp-base", "Date": "2014-08-29T22:36:12Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (opts.isShowVersion()) { java.lang.System.out.println((\"Stew \" + (stew5.App.getVersion()))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1776/buggy-version/src.main.java.stew5.App.java", "BodyUseAPI": [], "Fixed commit": "3a83dc2fe29d7214be377a30cfb3b10f10e3823f", "Url": "https://api.github.com/repos/argius/Stew5", "Date": "2017-05-06T07:45:23Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["play.Play.application().configuration().getConfig(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (config == null) { return java.util.Collections.emptyMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1112/buggy-version/app.components.config.ConfigurationFileCloudPropertyProvider.java", "BodyUseAPI": [], "Fixed commit": "9174453d146637cb42ed70586a346a696357f447", "Url": "https://api.github.com/repos/cloudiator/colosseum", "Date": "2016-05-09T09:17:04Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (doStore) { cursor.setVolatile(nextValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/9238/buggy-version/src.main.java.com.lmax.disruptor.SingleProducerSequencer.java", "BodyUseAPI": [], "Fixed commit": "105d8d85dbd9dbabfebaaafe6a5a52b278a4d558", "Url": "https://api.github.com/repos/ocoanet/disruptor", "Date": "2017-03-22T14:12:59Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (secondBestIndex == ((configuration.getAlgorithmList().size()) - 1)) { os.write(\"\\\\cellcolor{gray25}\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/9245/buggy-version/jmetal-core.src.main.java.org.uma.jmetal.util.experiment.component.GenerateLatexTablesWithStatistics.java", "BodyUseAPI": [], "Fixed commit": "39d1236361c09d9b09de5c4b9d017a9893b0b20c", "Url": "https://api.github.com/repos/jMetal/jMetal", "Date": "2015-12-31T10:22:04Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!allResults) { translations = (draftsOnly) ? translations.pareResults(false) : translations.pareResults(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3566/buggy-version/src.main.java.org.cru.godtools.api.meta.MetaService.java", "BodyUseAPI": [], "Fixed commit": "8a12524e6e6a90a89abae83781ef663ea695aabe", "Url": "https://api.github.com/repos/CruGlobal/godtools-api", "Date": "2016-05-04T21:15:50Z"},
{"Line": "=>731", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hxqh.eam.common.util.GroupListUtil.group(java.util.List<com.hxqh.eam.service.VTotalNodeMonthAsr>,com.hxqh.eam.common.util.GroupListUtil.GroupBy<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((listMap.get(key)) != null) && ((listMap.get(key).size()) > 0)) vTotalNodeMonthAsr = listMap.get(key).get(0); else vTotalNodeMonthAsr = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4375/buggy-version/src.main.java.com.hxqh.eam.service.AnoServiceImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.List<com.hxqh.eam.service.VTotalNodeMonthAsr>>.get(java.lang.String)", "listMap.get(key).get(int)"], "Fixed commit": "c9913425bf82789c59b0b51136d541fda9db458c", "Url": "https://api.github.com/repos/hklhai/hxqh-app", "Date": "2017-12-28T07:22:43Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((loggedInUser.getUserType()) == 1) { loggedInAs.setText(((\"User: \" + (loggedInUser.getUserName())) + \" \\nType: Lecturer\")); }else if ((loggedInUser.getUserType()) == 2) { loggedInAs.setText(((\"User: \" + (loggedInUser.getUserName())) + \" \\nType: Company\")); }else if ((loggedInUser.getUserType()) == 4) { loggedInAs.setText(((\"User: \" + (loggedInUser.getUserName())) + \" \\nType: Admin\")); }else if ((loggedInUser.getUserType()) == 0) { loggedInAs.setText(((\"User: \" + (loggedInUser.getUserName())) + \" \\nType: User\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2714/buggy-version/src.com.team9.bookingsystem.Controllers.BookingController.java", "BodyUseAPI": ["com.team9.bookingsystem.User.getUserName()", "com.team9.bookingsystem.Controllers.Label.setText(((\"User: \" + (loggedInUser.getUserName())) + \" \\nType: User\"))", "com.team9.bookingsystem.User.getUserName()", "com.team9.bookingsystem.User.getUserType()", "com.team9.bookingsystem.Controllers.Label.setText(((\"User: \" + (loggedInUser.getUserName())) + \" \\nType: Lecturer\"))", "com.team9.bookingsystem.User.getUserType()", "com.team9.bookingsystem.Controllers.Label.setText(((\"User: \" + (loggedInUser.getUserName())) + \" \\nType: Company\"))", "com.team9.bookingsystem.Controllers.Label.setText(((\"User: \" + (loggedInUser.getUserName())) + \" \\nType: Admin\"))", "com.team9.bookingsystem.User.getUserName()", "com.team9.bookingsystem.User.getUserType()", "com.team9.bookingsystem.User.getUserName()"], "Fixed commit": "08126daf80590dcc965a0152cbdf4087b51b0104", "Url": "https://api.github.com/repos/Team9sem/booking", "Date": "2015-12-09T14:10:13Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.kore.kolabnotes.android.Utils.getSelectedNotebookName(org.kore.kolabnotes.android.MainActivity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (selectedNotebookName != null) { org.kore.kolabnotes.android.content.ActiveAccount activeAccount = activeAccountRepository.getActiveAccount(); final org.kore.kolab.notes.Notebook bySummary = notebookRepository.getBySummary(activeAccount.getAccount(), activeAccount.getRootFolder(), selectedNotebookName); if (bySummary != null) { i.putExtra(Utils.NOTEBOOK_UID, bySummary.getIdentification().getUid()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1058/buggy-version/app.src.main.java.org.kore.kolabnotes.android.fragment.OverviewFragment.java", "BodyUseAPI": ["org.kore.kolabnotes.android.content.NotebookRepository.getBySummary(activeAccount.getAccount(),activeAccount.getRootFolder(),java.lang.String)"], "Fixed commit": "0521956da1880c502a433fc114fb451a3039789d", "Url": "https://api.github.com/repos/konradrenner/kolabnotes-android", "Date": "2017-12-16T11:47:51Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["IDeviceService.fcStore.get(net.floodlightcontroller.core.FloodlightContext,IDeviceService.CONTEXT_DST_DEVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (dstHost != null) { this.amorphTopologyManagerService.updateLocalHost(dstHost); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5015/buggy-version/src.main.java.pt.ulisboa.tecnico.distributed.forwarding.Forwarding.java", "BodyUseAPI": ["pt.ulisboa.tecnico.amorphous.internal.IAmorphTopologyManagerService.updateLocalHost(net.floodlightcontroller.devicemanager.IDevice)"], "Fixed commit": "ec90d5d8fa3b4ce45cc8efe0839093bc1eecc256", "Url": "https://api.github.com/repos/fazevedo86/floodlight", "Date": "2015-10-14T17:10:21Z"},
{"Line": "=>617", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((friendlyUnits[i].getHealth()) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2255/buggy-version/src.PlayerAI.java", "BodyUseAPI": [], "Fixed commit": "6cd478cd38a4dcb4b716c3f7a60b6a44cedcb6ea", "Url": "https://api.github.com/repos/AndreyBorisKhesin/Admain", "Date": "2016-10-02T13:41:54Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((enemyUnits[0].getHealth()) > 0) { score += (1.0 * (java.lang.Math.min(((damages[0]) * (shooters[0])), enemyUnits[0].getHealth()))) / (enemyUnits[0].getHealth()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2255/buggy-version/src.PlayerAI.java", "BodyUseAPI": ["java.lang.Math.min(int,enemyUnits[0].getHealth())", "enemyUnits[0].getHealth()", "enemyUnits[0].getHealth()"], "Fixed commit": "6cd478cd38a4dcb4b716c3f7a60b6a44cedcb6ea", "Url": "https://api.github.com/repos/AndreyBorisKhesin/Admain", "Date": "2016-10-02T13:41:54Z"},
{"Line": "=>621", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((enemyUnits[j].getHealth()) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2255/buggy-version/src.PlayerAI.java", "BodyUseAPI": [], "Fixed commit": "6cd478cd38a4dcb4b716c3f7a60b6a44cedcb6ea", "Url": "https://api.github.com/repos/AndreyBorisKhesin/Admain", "Date": "2016-10-02T13:41:54Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((enemyUnits[1].getHealth()) > 0) { score += (1.0 * (java.lang.Math.min(((damages[1]) * (shooters[1])), enemyUnits[1].getHealth()))) / (enemyUnits[1].getHealth()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2255/buggy-version/src.PlayerAI.java", "BodyUseAPI": ["java.lang.Math.min(int,enemyUnits[1].getHealth())", "enemyUnits[1].getHealth()", "enemyUnits[1].getHealth()"], "Fixed commit": "6cd478cd38a4dcb4b716c3f7a60b6a44cedcb6ea", "Url": "https://api.github.com/repos/AndreyBorisKhesin/Admain", "Date": "2016-10-02T13:41:54Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((enemyUnits[2].getHealth()) > 0) { score += (1.0 * (java.lang.Math.min(((damages[2]) * (shooters[2])), enemyUnits[2].getHealth()))) / (enemyUnits[2].getHealth()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2255/buggy-version/src.PlayerAI.java", "BodyUseAPI": ["enemyUnits[2].getHealth()", "enemyUnits[2].getHealth()", "java.lang.Math.min(int,enemyUnits[2].getHealth())"], "Fixed commit": "6cd478cd38a4dcb4b716c3f7a60b6a44cedcb6ea", "Url": "https://api.github.com/repos/AndreyBorisKhesin/Admain", "Date": "2016-10-02T13:41:54Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((enemyUnits[3].getHealth()) > 0) { score += (1.0 * (java.lang.Math.min(((damages[3]) * (shooters[3])), enemyUnits[3].getHealth()))) / (enemyUnits[3].getHealth()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2255/buggy-version/src.PlayerAI.java", "BodyUseAPI": ["java.lang.Math.min(int,enemyUnits[3].getHealth())", "enemyUnits[3].getHealth()", "enemyUnits[3].getHealth()"], "Fixed commit": "6cd478cd38a4dcb4b716c3f7a60b6a44cedcb6ea", "Url": "https://api.github.com/repos/AndreyBorisKhesin/Admain", "Date": "2016-10-02T13:41:54Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fr.inria.soctrace.lib.storage.DBObject.isDBExisting(t.getDbName())) newTraces.put(t.getId(), t); else { fr.inria.soctrace.framesoc.core.FramesocManager.getInstance().deleteTrace(t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/747/buggy-version/src.fr.inria.soctrace.framesoc.ui.src.fr.inria.soctrace.framesoc.ui.loaders.TraceLoader.java", "BodyUseAPI": ["fr.inria.soctrace.lib.model.Trace.getId()", "java.util.Map<java.lang.Integer, fr.inria.soctrace.lib.model.Trace>.put(t.getId(),fr.inria.soctrace.lib.model.Trace)", "fr.inria.soctrace.framesoc.core.FramesocManager.getInstance().deleteTrace(fr.inria.soctrace.lib.model.Trace)"], "Fixed commit": "5a8b200211b91422920301fddfdd7cecb16508d1", "Url": "https://api.github.com/repos/soctrace-inria/framesoc", "Date": "2015-07-08T16:05:27Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fr.inria.soctrace.lib.storage.DBObject.isDBExisting(trace.getDbName())) { fr.inria.soctrace.lib.storage.TraceDBObject traceDB = fr.inria.soctrace.lib.storage.TraceDBObject.openNewInstance(trace.getDbName()); traceDB.dropDatabase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/747/buggy-version/src.fr.inria.soctrace.framesoc.core.src.fr.inria.soctrace.framesoc.core.FramesocManager.java", "BodyUseAPI": ["fr.inria.soctrace.lib.storage.TraceDBObject.openNewInstance(trace.getDbName())", "fr.inria.soctrace.lib.model.Trace.getDbName()"], "Fixed commit": "5a8b200211b91422920301fddfdd7cecb16508d1", "Url": "https://api.github.com/repos/soctrace-inria/framesoc", "Date": "2015-07-08T16:05:27Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (no_gm) { w.appendLine(\"#define SPINS_TEST_CODE\").appendLine(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4599/buggy-version/src.spins.promela.compiler.ltsmin.LTSminPrinter.java", "BodyUseAPI": [], "Fixed commit": "a414f8b17d80e234024c87bcdbc0335d47e1878d", "Url": "https://api.github.com/repos/utwente-fmt/spins", "Date": "2017-08-19T19:01:25Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((otheragencies.get(i).select(\"a\").size()) != 0) { for (j = 0; j < (otheragencies.get(i).select(\"a\").size()); j++) { writer.println((\"> \" + (otheragencies.get(i).select(\"a\").get(j).text()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8670/buggy-version/src.principal.Main.java", "BodyUseAPI": ["otheragencies.get(i).select(\"a\").size()", "java.io.PrintWriter.println((\"> \" + (otheragencies.get(i).select(\"a\").get(j).text())))", "otheragencies.get(i).select(java.lang.String)", "otheragencies.get(i).select(\"a\").get(int)", "otheragencies.get(i).select(\"a\").get(j).text()", "org.jsoup.select.Elements.get(int)", "otheragencies.get(i).select(java.lang.String)", "org.jsoup.select.Elements.get(int)"], "Fixed commit": "402675e671c5ecacc8c88197ea3b8598cee0bffa", "Url": "https://api.github.com/repos/ericg1991/skyscraper", "Date": "2015-04-27T19:03:07Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((java.lang.Double.isNaN(value)) || (java.lang.Double.isInfinite(value))) || (trueNeg < 0)) { ca.akennedy.gents.weightmatrix.WeightFeaturesRelationSupervised.LOGGER.severe((((((((((((((\"Error at feature: \" + relation) + \"\\tnumber: \") + featureNumber) + \"\\n\") + truePos) + \" \") + falsePos) + \"\\n\") + falseNeg) + \" \") + trueNeg) + \"\\n\") + value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7548/buggy-version/src.ca.akennedy.gents.weightmatrix.WeightFeaturesRelationSupervised.java", "BodyUseAPI": ["java.util.logging.Logger.severe(java.lang.String)"], "Fixed commit": "7f86c610c426b7dff7a700ae055fffe623e926e2", "Url": "https://api.github.com/repos/alistairk/GeneralizedTermSemantics", "Date": "2012-09-18T22:46:56Z"},
{"Line": "=>1978", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.hadoop.hdfs.server.blockmanagement.BlockManager.LOG.isDebugEnabled()) { org.apache.hadoop.hdfs.server.blockmanagement.BlockManager.LOG.debug(\"august: entering reportDiff\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7407/buggy-version/hadoop-hdfs-project.hadoop-hdfs.src.main.java.org.apache.hadoop.hdfs.server.blockmanagement.BlockManager.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)"], "Fixed commit": "cdc2c3bd50994790adb918323a8d81ccd168ef33", "Url": "https://api.github.com/repos/augustbonds/hops", "Date": "2017-04-19T10:41:26Z"},
{"Line": "=>2012", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.hadoop.hdfs.server.blockmanagement.BlockManager.LOG.isDebugEnabled()) { if (bucketsToUpdate.isEmpty()) { org.apache.hadoop.hdfs.server.blockmanagement.BlockManager.LOG.debug(java.lang.String.format(\"august: All %d reported hashes matching!\", newReportHashes.length)); }else { for (int bucketId : bucketsToUpdate) { org.apache.hadoop.hdfs.server.blockmanagement.BlockManager.LOG.debug(((\"august: bucket \" + bucketId) + \" did not match... \")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7407/buggy-version/hadoop-hdfs-project.hadoop-hdfs.src.main.java.org.apache.hadoop.hdfs.server.blockmanagement.BlockManager.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)", "org.apache.commons.logging.Log.debug(java.lang.String)"], "Fixed commit": "cdc2c3bd50994790adb918323a8d81ccd168ef33", "Url": "https://api.github.com/repos/augustbonds/hops", "Date": "2017-04-19T10:41:26Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextVertexToMove == 0) { throw new java.lang.Error(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/337/buggy-version/src.frontend.org.qcri.affinityplanner.GraphPartitioner.java", "BodyUseAPI": [], "Fixed commit": "5a13c503d75e11a1842e23bfa6c9dca9c8667e22", "Url": "https://api.github.com/repos/ktsiegel/h-store", "Date": "2015-03-15T09:02:49Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextVertexToMove == 0) { throw new java.lang.Error(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/337/buggy-version/src.frontend.org.qcri.affinityplanner.GraphPartitioner.java", "BodyUseAPI": [], "Fixed commit": "5a13c503d75e11a1842e23bfa6c9dca9c8667e22", "Url": "https://api.github.com/repos/ktsiegel/h-store", "Date": "2015-03-15T09:02:49Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JMenu.getMenuComponentCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (menuComponentCount == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6742/buggy-version/freeplane.src.org.freeplane.core.ui.MenuSplitter.java", "BodyUseAPI": [], "Fixed commit": "1cb25e4011bccfc49f59ebddf0e0bd5cf2be7270", "Url": "https://api.github.com/repos/htgoebel/freeplane", "Date": "2013-06-09T19:26:07Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (event == null) { com.cse110.utils.UserUtils.removeEventsFollowing(eventId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4173/buggy-version/app.src.main.java.com.cse110.utils.UserUtils.java", "BodyUseAPI": [], "Fixed commit": "58555d5aa0fde138003b1c4252ed6ee4dc551c7d", "Url": "https://api.github.com/repos/LIT-Chorus/EventLIT", "Date": "2017-03-11T10:05:20Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((front.normal) == (back.normal)) back.normal.negate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2358/buggy-version/BOLT.src.physics.collisionmodels.CollisionBox.java", "BodyUseAPI": ["back.normal.negate()"], "Fixed commit": "1098ec0bef0e7c79c39d9ad955cbcda7b5f0caf7", "Url": "https://api.github.com/repos/Ichmed/BOLT", "Date": "2013-07-21T00:59:02Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((left.normal) == (right.normal)) right.normal.negate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2358/buggy-version/BOLT.src.physics.collisionmodels.CollisionBox.java", "BodyUseAPI": ["right.normal.negate()"], "Fixed commit": "1098ec0bef0e7c79c39d9ad955cbcda7b5f0caf7", "Url": "https://api.github.com/repos/Ichmed/BOLT", "Date": "2013-07-21T00:59:02Z"},
{"Line": "=>517", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((top.normal) == (bottom.normal)) bottom.normal.negate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2358/buggy-version/BOLT.src.physics.collisionmodels.CollisionBox.java", "BodyUseAPI": ["bottom.normal.negate()"], "Fixed commit": "1098ec0bef0e7c79c39d9ad955cbcda7b5f0caf7", "Url": "https://api.github.com/repos/Ichmed/BOLT", "Date": "2013-07-21T00:59:02Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (notifyDefaults) { getListener().onPacketReceived(this, packet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2515/buggy-version/PacketAPI.src.com.germancoding.packetapi.PacketHandler.java", "BodyUseAPI": [], "Fixed commit": "535e1391320e4acbb9a87e60da2b5e91129315fb", "Url": "https://api.github.com/repos/GermanCoding/PacketAPI", "Date": "2015-07-14T22:06:27Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.google.firebase.FirebaseApp.getApps(getBaseContext()).contains(com.medic.medicapp.MainActivity.myApp))) { com.medic.medicapp.MainActivity.myApp = com.google.firebase.FirebaseApp.initializeApp(getApplicationContext(), firebaseOptions, \"AnyAppName\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4249/buggy-version/MedicApp.app.src.main.java.com.medic.medicapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "922eecd74cc7b6c545cf23a06ebb6d6dc0a875c1", "Url": "https://api.github.com/repos/saraen/MedicAppPlus", "Date": "2017-08-29T22:12:37Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (myFileName == null) { fileName = DEFAULT_PRAWNFILE_NAME; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5306/buggy-version/web.src.main.java.org.cirdles.calamari.web.PrawnFileHandlerService.java", "BodyUseAPI": [], "Fixed commit": "cbe9f1aa02e3d0082349259df5930c008f415c81", "Url": "https://api.github.com/repos/bowring/Calamari", "Date": "2016-08-08T19:53:49Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.datamanager.SharedPrefsEditor.isWifiActivated()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!wifiIsActivated) { cbWifiMgr.setVisibility(View.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1366/buggy-version/DataManager.src.com.example.datamanager.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "39ace90059327a060def4f1414955a8545621acd", "Url": "https://api.github.com/repos/gyagapen/DataManager", "Date": "2012-12-01T03:45:49Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.datamanager.SharedPrefsEditor.isDataActivated()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!dataIsActivated) { cbDataMgr.setVisibility(View.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1366/buggy-version/DataManager.src.com.example.datamanager.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "39ace90059327a060def4f1414955a8545621acd", "Url": "https://api.github.com/repos/gyagapen/DataManager", "Date": "2012-12-01T03:45:49Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.jboss.errai.ioc.rebind.ioc.codegen.meta.impl.AbstractMetaClass._hasInterface(iface.getInterfaces(), to)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3668/buggy-version/errai-ioc.src.main.java.org.jboss.errai.ioc.rebind.ioc.codegen.meta.impl.AbstractMetaClass.java", "BodyUseAPI": [], "Fixed commit": "1421a0a9ff22c8b27c12a6acc289bd4b77d480ad", "Url": "https://api.github.com/repos/csadilek/errai", "Date": "2011-05-30T20:26:01Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.vhadoop.util.CompoundStatus.getFirstFailure()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (firstGeneralError != null) { if (tlStatus.screenStatusesForSpecificFailures(new java.lang.String[]{ com.vmware.vhadoop.api.vhm.VCActions.VC_POWER_ON_STATUS_KEY, com.vmware.vhadoop.api.vhm.VCActions.VC_POWER_OFF_STATUS_KEY, com.vmware.vhadoop.api.vhm.ClusterMapReader.POWER_STATE_CHANGE_STATUS_KEY })) { limitEvent.reportError(((firstGeneralError.getMessage()) + \" however, powering on/off VMs succeeded;\")); }else { limitEvent.reportError(firstGeneralError.getMessage()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6322/buggy-version/elastic-runtime2.src.main.java.com.vmware.vhadoop.vhm.strategy.ManualScaleStrategy.java", "BodyUseAPI": ["com.vmware.vhadoop.util.CompoundStatus.TaskStatus.getMessage()", "com.vmware.vhadoop.vhm.events.SerengetiLimitInstruction.reportError(firstGeneralError.getMessage())", "com.vmware.vhadoop.util.CompoundStatus.TaskStatus.getMessage()", "com.vmware.vhadoop.vhm.events.SerengetiLimitInstruction.reportError(((firstGeneralError.getMessage()) + \" however, powering on/off VMs succeeded;\"))"], "Fixed commit": "519ec8bccf9d8903c15cf0ac1d47ccb7e30915c1", "Url": "https://api.github.com/repos/vmware-serengeti/vhm", "Date": "2013-06-14T01:12:36Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (killed) { killed = false; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1976/buggy-version/core.src.com.vratsasoftware.spaceinvaders.components.Components.java", "BodyUseAPI": [], "Fixed commit": "ae03888dfd9cccab00cf900d47df3d9ad7276d91", "Url": "https://api.github.com/repos/Blago24/SpaceInvaders", "Date": "2017-03-30T13:07:15Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((canvasCommandManager) instanceof org.wirez.core.api.command.stack.StackCommandManager) { ((org.wirez.core.api.command.stack.StackCommandManager) (canvasCommandManager)).clearHistory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2676/buggy-version/wirez-core.wirez-commons.wirez-client-common.src.main.java.org.wirez.core.client.session.impl.CanvasFullSessionImpl.java", "BodyUseAPI": [], "Fixed commit": "18ca99b19224e166fb4d33c4f1d6b82ea8137eb8", "Url": "https://api.github.com/repos/romartin/wirez", "Date": "2016-05-20T00:24:25Z"},
{"Line": "=>809", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentColorSet) < (this.colorSets.size())) { return this.colorSets.get(currentColorSet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5862/buggy-version/src.main.java.com.neophob.sematrix.glue.Collector.java", "BodyUseAPI": ["java.util.List<com.neophob.sematrix.color.ColorSet>.get(int)"], "Fixed commit": "bf781f03c20cedf9813e9b9551aa73729811e7a0", "Url": "https://api.github.com/repos/neophob/PixelController", "Date": "2012-12-09T12:58:29Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bingo.lang.Strings.isNotBlank(entitySet)) { context.setEntitySet(services.findEntitySet(entitySet)); context.setEntityType(services.findEntityType(context.getEntitySet().getEntityType())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/444/buggy-version/odata-consumer.src.main.java.bingo.odata.consumer.ODataConsumerImpl.java", "BodyUseAPI": ["bingo.odata.ODataServices.findEntitySet(java.lang.String)", "bingo.odata.consumer.ODataConsumerContext.setEntitySet(services.findEntitySet(entitySet))"], "Fixed commit": "cfb56291a46f0f9703efd0dd94921f0e0fdd323a", "Url": "https://api.github.com/repos/bingo-open-source/bingo-odata", "Date": "2013-07-01T06:57:36Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (canResolveCustomType(arg)) { arg = resolveCustomType(arg); }else if (arg instanceof java.util.concurrent.atomic.AtomicReference) { arg = ((java.util.concurrent.atomic.AtomicReference<?>) (arg)).get(); }else if (arg instanceof java.util.concurrent.atomic.AtomicBoolean) { return ((java.util.concurrent.atomic.AtomicBoolean) (arg)).get() ? 1 : 0; }else if (arg instanceof java.lang.Enum<?>) { return ((java.lang.Enum<?>) (arg)).name(); }else if (arg instanceof java.lang.ThreadLocal) { arg = ((java.lang.ThreadLocal<?>) (arg)).get(); }else { return arg; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6207/buggy-version/squidb.src.com.yahoo.squidb.sql.DefaultArgumentResolver.java", "BodyUseAPI": ["com.yahoo.squidb.sql.DefaultArgumentResolver.resolveCustomType(java.lang.Object)"], "Fixed commit": "a219c7c7fa334f45501d855c36c3826197456945", "Url": "https://api.github.com/repos/sbosley/squidb", "Date": "2016-08-30T15:09:13Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (processName == null) { processName = packageName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6891/buggy-version/VirtualApp.lib.src.main.java.com.lody.virtual.client.VClientImpl.java", "BodyUseAPI": [], "Fixed commit": "e86f6c287cb0a7f4c85707c23a5fff366ffd0e50", "Url": "https://api.github.com/repos/rk700/VirtualHook", "Date": "2017-08-21T12:42:08Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.command.Message.getOriginalDestination()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (origDest != null) { org.apache.activemq.util.ByteSequence origDestBytes = marshaller.marshal(origDest); origDestBytes.compact(); coreMessage.putBytesProperty(org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.AMQ_MSG_ORIG_DESTINATION, origDestBytes.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6658/buggy-version/artemis-protocols.artemis-openwire-protocol.src.main.java.org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.java", "BodyUseAPI": ["org.apache.activemq.wireformat.WireFormat.marshal(org.apache.activemq.command.ActiveMQDestination)"], "Fixed commit": "adaa30ce1a803a01d5c89e5af6130b7dd5584796", "Url": "https://api.github.com/repos/apache/activemq-artemis", "Date": "2016-02-18T12:52:32Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((word.length) == 0) return epsilon;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2402/buggy-version/src.main.java.roll.words.Alphabet.java", "BodyUseAPI": [], "Fixed commit": "168461c5f1b894209366adcc5fa94d7f689e35f4", "Url": "https://api.github.com/repos/ISCAS-PMC/roll-library", "Date": "2017-12-26T12:24:07Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((word.length) == 1) return getLetterWord(word[0]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2402/buggy-version/src.main.java.roll.words.Alphabet.java", "BodyUseAPI": ["roll.words.Alphabet.getLetterWord(int)"], "Fixed commit": "168461c5f1b894209366adcc5fa94d7f689e35f4", "Url": "https://api.github.com/repos/ISCAS-PMC/roll-library", "Date": "2017-12-26T12:24:07Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canIPlay) { sfxGhost.loopPlay((-15.0F)); canIPlay = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8688/buggy-version/src.objects.Fredy.java", "BodyUseAPI": [], "Fixed commit": "00b91d8660f072aab09fb5de2888a09b27485d0a", "Url": "https://api.github.com/repos/boris-ns/Jumpy", "Date": "2016-07-25T22:28:34Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((homeworkTags.size()) > 0) { java.lang.String tags = homeworkTags.stream().map(( tag) -> (\"\\\"\" + tag) + \"\\\"\").collect(java.util.stream.Collectors.joining(\", \")); java.lang.System.out.printf(\" assertNoDependencies(\\\"%s\\\", %s);%n\", path, tags); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8855/buggy-version/src.org.twodee.speccheck.SpecCheckGenerator.java", "BodyUseAPI": ["java.util.stream.Stream<java.lang.String>.collect(java.util.stream.Collector<java.lang.CharSequence, ?, java.lang.String>)", "java.util.stream.Stream<java.lang.String>.map(java.util.function.Function<? super java.lang.String, ? extends java.lang.String>)", "java.util.Set<java.lang.String>.stream()"], "Fixed commit": "62d4ca8e16674e67fa76b9814c38ee993af52f6e", "Url": "https://api.github.com/repos/twodee/speccheck", "Date": "2017-11-26T19:51:29Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.timurstrekalov.saga.core.AstNode.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type == (IF)) { fixIf(((com.github.timurstrekalov.saga.core.IfStatement) (node))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6410/buggy-version/saga-core.src.main.java.com.github.timurstrekalov.saga.core.ScriptInstrumenter.java", "BodyUseAPI": [], "Fixed commit": "73cbe137510640c3e3f6fc68361f007dd2c68754", "Url": "https://api.github.com/repos/timurstrekalov/saga", "Date": "2012-05-23T19:35:46Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (requestTimeout != 0) { delegate.setRequestTimeout(requestTimeout); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/69/buggy-version/src.main.java.argelbargel.jenkins.plugins.gitlab_branch_source.api.GitLabAPI.java", "BodyUseAPI": ["org.gitlab.api.GitlabAPI.setRequestTimeout(int)"], "Fixed commit": "09d037b7080431adeb265d5ab00ecf19a9a24e40", "Url": "https://api.github.com/repos/Argelbargel/gitlab-branch-source-plugin", "Date": "2017-11-21T16:54:07Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (evalNode.getLeftExpr().equals(evalNode.getRightExpr())) { finalQual = evalNode.getLeftExpr(); }else { finalQual = evalNode; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7796/buggy-version/tajo-plan.src.main.java.org.apache.tajo.plan.rewrite.rules.CommonConditionReduceRule.java", "BodyUseAPI": ["org.apache.tajo.plan.rewrite.rules.BinaryEval.getLeftExpr()"], "Fixed commit": "32256d3bb86098b0059714303bede27dace4a463", "Url": "https://api.github.com/repos/jihoonson/tajo", "Date": "2015-08-18T14:40:04Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mode >= (freenet.client.InsertException.UPPER_LIMIT_ERROR_CODE)) throw new java.lang.IllegalArgumentException((\"Bogus error code \" + mode));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/111/buggy-version/src.freenet.client.InsertException.java", "BodyUseAPI": [], "Fixed commit": "20930934d2565b421b84f0474292b9b32134ef85", "Url": "https://api.github.com/repos/toad/fred-staging", "Date": "2014-08-19T13:08:04Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.oneplus.base.Rotation.PORTRAIT) == (getRotation())) || ((com.oneplus.base.Rotation.INVERSE_PORTRAIT) == (getRotation()))) { current = m_ViewPager.getCurrentItem(); }else { current = m_VerticalViewPager.getCurrentItem(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4837/buggy-version/OnePlusCamera.src.com.oneplus.camera.ui.PreviewGallery.java", "BodyUseAPI": [], "Fixed commit": "b05cbdd338af49bbb9d30214bdb9e31018e76125", "Url": "https://api.github.com/repos/hamsteroneplus/OnePlusCamera", "Date": "2015-05-26T08:19:01Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listMenuGroups) != null) { keyGroup = listMenuGroups.get(spinnerGroup.getSelectedItemPosition()).getKey(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8482/buggy-version/app.src.main.java.com.example.gek.pizza.activities.DishEditActivity.java", "BodyUseAPI": [], "Fixed commit": "b103702e06f20bfb10b7eddef5aa119e69f5ac61", "Url": "https://api.github.com/repos/zhdanov-ek/pizza", "Date": "2017-02-11T15:56:21Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numberOfCopiesToAdd > 0) { this.numberOfCopies += numberOfCopiesToAdd; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1936/buggy-version/src.com.andela.model.Book.java", "BodyUseAPI": [], "Fixed commit": "edefbc9c5cc61ee5f5403af6d4862a5c9f1929b8", "Url": "https://api.github.com/repos/spykins/checkpointone", "Date": "2016-01-06T18:00:07Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (serverGui && serverConsole) { java.lang.System.out.println(\"serverGui and serverConsole are both true\"); }else if ((!serverGui) && (!serverConsole)) { java.lang.System.out.println(\"serverGui and serverConsole are both false\"); }else if (serverConsole) { int portNumber = 1500; switch (args.length) { case 1 : try { portNumber = java.lang.Integer.parseInt(args[0]); } catch (java.lang.Exception e) { java.lang.System.out.println(\"Invalid port number.\"); java.lang.System.out.println(\"Usage is: > java Server [portNumber]\"); return; } case 0 : break; default : java.lang.System.out.println(\"Usage is: > java Server [portNumber]\"); return; } Server server = new Server(portNumber); server.start(); }else if (serverGui) { new ServerGUI(1500); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2776/buggy-version/Onke-Wagner-Task2.src.Server.java", "BodyUseAPI": [], "Fixed commit": "3f0eeb00660c23f32f3f0816ccc5deafcf0356d9", "Url": "https://api.github.com/repos/TUBS-ISF/spl2015.onke.wagner", "Date": "2015-05-16T13:29:31Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!clientGui) && (!clientConsole)) { java.lang.System.out.println(\"clientGui and clientConsole are both false\"); }else if (clientConsole) { switch (args.length) { case 3 : serverAddress = args[2]; case 2 : try { portNumber = java.lang.Integer.parseInt(args[1]); } catch (java.lang.Exception e) { java.lang.System.out.println(\"Invalid port number.\"); java.lang.System.out.println(\"Usage is: > java Client [username] [portNumber] [serverAddress]\"); return; } case 1 : userName = args[0]; case 0 : break; default : java.lang.System.out.println(\"Usage is: > java Client [username] [portNumber] {serverAddress]\"); return; } Client client = new Client(serverAddress, portNumber, userName); if (!(client.start())) return; java.util.Scanner scan = new java.util.Scanner(java.lang.System.in); while (true) { java.lang.System.out.print(\"> \"); java.lang.String msg = scan.nextLine(); if (msg.equalsIgnoreCase(\"LOGOUT\")) { client.sendMessage(new ChatMessage(ChatMessage.LOGOUT, \"\")); break; }else if (msg.equalsIgnoreCase(\"WHOISIN\")) { client.sendMessage(new ChatMessage(ChatMessage.WHOISIN, \"\")); }else { client.sendMessage(new ChatMessage(ChatMessage.MESSAGE, msg)); } } client.disconnect(); }else if (clientGui) { new ClientGUI(\"localhost\", 1500); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2776/buggy-version/Onke-Wagner-Task2.src.Client.java", "BodyUseAPI": [], "Fixed commit": "3f0eeb00660c23f32f3f0816ccc5deafcf0356d9", "Url": "https://api.github.com/repos/TUBS-ISF/spl2015.onke.wagner", "Date": "2015-05-16T13:29:31Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clientGui) { new ClientGUI(\"localhost\", 1500); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2776/buggy-version/Onke-Wagner-Task2.src.Client.java", "BodyUseAPI": [], "Fixed commit": "3f0eeb00660c23f32f3f0816ccc5deafcf0356d9", "Url": "https://api.github.com/repos/TUBS-ISF/spl2015.onke.wagner", "Date": "2015-05-16T13:29:31Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trigger == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5309/buggy-version/src.main.java.ch.njol.skript.lang.function.Functions.java", "BodyUseAPI": [], "Fixed commit": "b1240c4a4aad2678104784965e79b3f536cd6a77", "Url": "https://api.github.com/repos/SkriptLang/Skript", "Date": "2017-09-30T17:59:56Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((trigger) == null) throw new java.lang.IllegalStateException(\"trigger for function is not available\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5309/buggy-version/src.main.java.ch.njol.skript.lang.function.ScriptFunction.java", "BodyUseAPI": [], "Fixed commit": "b1240c4a4aad2678104784965e79b3f536cd6a77", "Url": "https://api.github.com/repos/SkriptLang/Skript", "Date": "2017-09-30T17:59:56Z"},
{"Line": "=>699", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (network != null) storage.connectionManager.release(network);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7173/buggy-version/client.src.main.java.com.orientechnologies.orient.client.remote.OServerAdmin.java", "BodyUseAPI": ["storage.connectionManager.release(com.orientechnologies.orient.client.binary.OChannelBinaryAsynchClient)"], "Fixed commit": "e470f20a688b31197ae42f59e300f13d3c632a13", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-06-21T10:15:46Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (listener instanceof com.arialyy.aria.core.scheduler.IDownloadSchedulerListener) { ((com.arialyy.aria.core.scheduler.IDownloadSchedulerListener<TASK>) (listener)).onNoSupportBreakPoint(task); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8431/buggy-version/Aria.src.main.java.com.arialyy.aria.core.scheduler.AbsSchedulers.java", "BodyUseAPI": [], "Fixed commit": "bae48a4126266810e405374ef265b023721e4328", "Url": "https://api.github.com/repos/AriaLyy/Aria", "Date": "2017-06-05T02:25:18Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eventX < (lastTouchX)) { deltaX = -deltaX; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6822/buggy-version/app.src.main.java.com.limelight.binding.input.TouchContext.java", "BodyUseAPI": [], "Fixed commit": "8938f51292ca970c38195e260dd885c7519651eb", "Url": "https://api.github.com/repos/moonlight-stream/moonlight-android", "Date": "2015-10-15T08:48:31Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deltaY != 0) { lastTouchY = eventY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6822/buggy-version/app.src.main.java.com.limelight.binding.input.TouchContext.java", "BodyUseAPI": [], "Fixed commit": "8938f51292ca970c38195e260dd885c7519651eb", "Url": "https://api.github.com/repos/moonlight-stream/moonlight-android", "Date": "2015-10-15T08:48:31Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deltaX != 0) { lastTouchX = eventX; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6822/buggy-version/app.src.main.java.com.limelight.binding.input.TouchContext.java", "BodyUseAPI": [], "Fixed commit": "8938f51292ca970c38195e260dd885c7519651eb", "Url": "https://api.github.com/repos/moonlight-stream/moonlight-android", "Date": "2015-10-15T08:48:31Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eventY < (lastTouchY)) { deltaY = -deltaY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6822/buggy-version/app.src.main.java.com.limelight.binding.input.TouchContext.java", "BodyUseAPI": [], "Fixed commit": "8938f51292ca970c38195e260dd885c7519651eb", "Url": "https://api.github.com/repos/moonlight-stream/moonlight-android", "Date": "2015-10-15T08:48:31Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (writeAsToString) { java.lang.String text = obj.toString(); java.io.OutputStream out = outputMessage.getBody(); out.write(text.getBytes()); if (fastJsonConfig.isWriteContentLength()) { headers.setContentLength(text.length()); } }else { int len = com.alibaba.fastjson.JSON.writeJSONString(outnew, fastJsonConfig.getCharset(), obj, fastJsonConfig.getSerializeConfig(), fastJsonConfig.getSerializeFilters(), fastJsonConfig.getDateFormat(), JSON.DEFAULT_GENERATE_FEATURE, fastJsonConfig.getSerializerFeatures()); if (fastJsonConfig.isWriteContentLength()) { headers.setContentLength(len); } java.io.OutputStream out = outputMessage.getBody(); outnew.writeTo(out); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4589/buggy-version/src.main.java.com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter.java", "BodyUseAPI": [], "Fixed commit": "a0e06023b878388dee1890e1bf846ffff22d6bc6", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-03-12T04:22:39Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (obj != null) { java.lang.String className = obj.getClass().getName(); if (\"com.fasterxml.jackson.databind.node.ObjectNode\".equals(className)) { writeAsToString = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4589/buggy-version/src.main.java.com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.Object.getClass()"], "Fixed commit": "a0e06023b878388dee1890e1bf846ffff22d6bc6", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-03-12T04:22:39Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (forwardButton.isPressed()) transportationHandler.postDelayed(forwardRunnable, net.alliknow.podcatcher.view.fragments.PlayerFragment.TRANSPORT_DELAY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2349/buggy-version/src.net.alliknow.podcatcher.view.fragments.PlayerFragment.java", "BodyUseAPI": [], "Fixed commit": "dfb99da356e6d1073bb41d30a882431d83b89176", "Url": "https://api.github.com/repos/salema/PodCatcher-Deluxe-Android", "Date": "2014-01-03T13:45:42Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rewindButton.isPressed()) transportationHandler.postDelayed(rewindRunnable, net.alliknow.podcatcher.view.fragments.PlayerFragment.TRANSPORT_DELAY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2349/buggy-version/src.net.alliknow.podcatcher.view.fragments.PlayerFragment.java", "BodyUseAPI": [], "Fixed commit": "dfb99da356e6d1073bb41d30a882431d83b89176", "Url": "https://api.github.com/repos/salema/PodCatcher-Deluxe-Android", "Date": "2014-01-03T13:45:42Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hl7.fhir.dstu3.model.Location.getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((id != null) && (id.contains(\"/\"))) { java.lang.String[] parts = id.split(\"/\"); if ((parts.length) > 1) { id = parts[1]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2414/buggy-version/api.src.main.java.org.openmrs.module.fhir.api.util.FHIRLocationUtil.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "8e23e7a77b6ee24ff32d524bc707c5351af83938", "Url": "https://api.github.com/repos/openmrs/openmrs-module-fhir", "Date": "2017-11-09T13:38:50Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sqlSession) != null) { sqlSession.close(); sqlSession = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6530/buggy-version/src.main.java.com.aspectran.support.orm.mybatis.SqlSessionTransactionAdvice.java", "BodyUseAPI": [], "Fixed commit": "df01a8c5b6928be9310b6216dec6d2be950b80af", "Url": "https://api.github.com/repos/aspectran/aspectran", "Date": "2015-10-13T16:36:19Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sqlSession) == null) { sqlSession = sqlSessionFactory.openSession(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6530/buggy-version/src.main.java.com.aspectran.support.orm.mybatis.SqlSessionTransactionAdvice.java", "BodyUseAPI": [], "Fixed commit": "df01a8c5b6928be9310b6216dec6d2be950b80af", "Url": "https://api.github.com/repos/aspectran/aspectran", "Date": "2015-10-13T16:36:19Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getModifiers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(java.lang.reflect.Modifier.isStatic(modifiers))) && (!(java.lang.reflect.Modifier.isTransient(modifiers)))) { io.github.maseev.jyang.Translator.processType(field.getGenericType(), io.github.maseev.jyang.util.XmlUtil.getName(field), grouping); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8720/buggy-version/src.main.java.io.github.maseev.jyang.Translator.java", "BodyUseAPI": [], "Fixed commit": "528161ff7613c7ebead576ddaeffa74571e3c883", "Url": "https://api.github.com/repos/maseev/jyang", "Date": "2017-03-03T18:08:19Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((neighbor_y < 0) || (neighbor_y > 255)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6868/buggy-version/src.main.java.coloredlightscore.src.helper.CLWorldHelper.java", "BodyUseAPI": [], "Fixed commit": "92269e0338620848ca0d52164343b34804d32250", "Url": "https://api.github.com/repos/CptSpaceToaster/CptsModdingLight", "Date": "2015-02-11T04:41:49Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((neighbor_y < 0) || (neighbor_y > 255)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6868/buggy-version/src.main.java.coloredlightscore.src.helper.CLWorldHelper.java", "BodyUseAPI": [], "Fixed commit": "92269e0338620848ca0d52164343b34804d32250", "Url": "https://api.github.com/repos/CptSpaceToaster/CptsModdingLight", "Date": "2015-02-11T04:41:49Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(directory.exists())) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5174/buggy-version/src.main.java.se.cyclic.jcyclic.DirectoryFinder.java", "BodyUseAPI": [], "Fixed commit": "9c2f542707c60ce20f704d0f4a8381f53a588b9d", "Url": "https://api.github.com/repos/dbahlbeck/jcyclic", "Date": "2015-06-03T07:18:45Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (throwable instanceof mondrian.parser.ParseException) { mondrian.parser.ParseException pe = ((mondrian.parser.ParseException) (throwable)); if (pe.getMessage().startsWith(\"Encountered \")) { e = new mondrian.parser.MondrianException(((((((\"Syntax error at line \" + (pe.currentToken.next.beginLine)) + \", column \") + (pe.currentToken.next.beginColumn)) + \", token '\") + (pe.currentToken.next.image)) + \"'\")); } }else { e = new mondrian.parser.MondrianException(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6411/buggy-version/src.main.mondrian.parser.JavaccParserValidatorImpl.java", "BodyUseAPI": [], "Fixed commit": "640a9c4876cd336b7664e6deaea5306af668edc1", "Url": "https://api.github.com/repos/pentaho/mondrian", "Date": "2012-03-29T20:22:54Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (fi != null) { fi.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3414/buggy-version/goodsKill-server.src.main.java.org.seckill.web.SeckillController.java", "BodyUseAPI": ["java.io.FileInputStream.close()"], "Fixed commit": "80a1f0c302b89356314420cad0127ef64c2aa34e", "Url": "https://api.github.com/repos/techa03/goodsKill", "Date": "2017-06-24T09:54:13Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.wb.nextgenlibrary.NextGenExperience.getMovieMetaData().getExtraExperience().style) != null) return com.wb.nextgenlibrary.NextGenExperience.getMovieMetaData().getExtraExperience().style.getBackground().getImage().url; else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1067/buggy-version/src.com.wb.nextgenlibrary.activity.phone.NextGenActorsActivity_Phone.java", "BodyUseAPI": [], "Fixed commit": "e138642da28a725e67c08c7634e3f14a67a4d6a6", "Url": "https://api.github.com/repos/warnerbros/cpe-manifest-android-experience", "Date": "2016-10-03T21:43:38Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (tablePrefixOrNull != null) { builder.append(tablePrefixOrNull).append(' '); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6217/buggy-version/DaoCore.src.de.greenrobot.dao.SqlUtils.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "8b5911b425e504ae12e0ecec7c6090cd5408505e", "Url": "https://api.github.com/repos/path/greenDAO", "Date": "2012-10-10T21:13:49Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stack == null) { return damage; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3844/buggy-version/src.main.java.heero.mc.mod.wakcraft.fight.DamageUtil.java", "BodyUseAPI": [], "Fixed commit": "04864595def56fda3c36c474a790761baa18935a", "Url": "https://api.github.com/repos/alucas/wakcraft", "Date": "2014-07-19T21:36:36Z"},
{"Line": "=>1223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p instanceof org.ggp.base.util.propnet.polymorphic.PolymorphicConstant) { if ((p.getValue()) == (cursor.isPositive)) { java.util.Set<org.ggp.base.util.statemachine.implementation.propnet.forwardDeadReckon.ForwardDeadReckonPropnetStateMachine.AntecedantCursor> result = new java.util.HashSet<>(); result.add(cursor); return result; } return null; }else if (p instanceof org.ggp.base.util.propnet.polymorphic.PolymorphicNot) { cursor.isPositive = !(cursor.isPositive); java.util.Set<org.ggp.base.util.statemachine.implementation.propnet.forwardDeadReckon.ForwardDeadReckonPropnetStateMachine.AntecedantCursor> result = addPropositionAntecedants(pn, p.getSingleInput(), cursor, maxResultSet, maxDepth, (depth + 1)); cursor.isPositive = !(cursor.isPositive); return result; }else if (p instanceof org.ggp.base.util.propnet.polymorphic.PolymorphicAnd) { java.util.Set<org.ggp.base.util.statemachine.implementation.propnet.forwardDeadReckon.ForwardDeadReckonPropnetStateMachine.AntecedantCursor> subResults = new java.util.HashSet<>(); for (org.ggp.base.util.propnet.polymorphic.PolymorphicComponent c : p.getInputs()) { if ((subResults.size()) > maxResultSet) { return null; } org.ggp.base.util.statemachine.implementation.propnet.forwardDeadReckon.ForwardDeadReckonPropnetStateMachine.AntecedantCursor newCursor = new org.ggp.base.util.statemachine.implementation.propnet.forwardDeadReckon.ForwardDeadReckonPropnetStateMachine.AntecedantCursor(cursor); java.util.Set<org.ggp.base.util.statemachine.implementation.propnet.forwardDeadReckon.ForwardDeadReckonPropnetStateMachine.AntecedantCursor> inputResults = addPropositionAntecedants(pn, c, newCursor, maxResultSet, maxDepth, (depth + 1)); if (inputResults == null) { if (cursor.isPositive) { return null; } }else { if (cursor.isPositive) { if (subResults.isEmpty()) { subResults = inputResults; }else { java.util.Set<org.ggp.base.util.statemachine.implementation.propnet.forwardDeadReckon.ForwardDeadReckonPropnetStateMachine.AntecedantCursor> validInputResults = new java.util.HashSet<>(); for (org.ggp.base.util.statemachine.implementation.propnet.forwardDeadReckon.ForwardDeadReckonPropnetStateMachine.AntecedantCursor cur : inputResults) { for (org.ggp.base.util.statemachine.implementation.propnet.forwardDeadReckon.ForwardDeadReckonPropnetStateMachine.AntecedantCursor subResult : subResults) { if (subResult.compatibleWith(cur)) { org.ggp.base.util.statemachine.implementation.propnet.forwardDeadReckon.ForwardDeadReckonPropnetStateMachine.AntecedantCursor combinedResult = new org.ggp.base.util.statemachine.implementation.propnet.forwardDeadReckon.ForwardDeadReckonPropnetStateMachine.AntecedantCursor(subResult); cur.unionInto(combinedResult); validInputResults.add(combinedResult); } } } subResults = validInputResults; } }else { subResults.addAll(inputResults); } } } return subResults; }else if (p instanceof org.ggp.base.util.propnet.polymorphic.PolymorphicOr) { java.util.Set<org.ggp.base.util.statemachine.implementation.propnet.forwardDeadReckon.ForwardDeadReckonPropnetStateMachine.AntecedantCursor> subResults = new java.util.HashSet<>(); for (org.ggp.base.util.propnet.polymorphic.PolymorphicComponent c : p.getInputs()) { if ((subResults.size()) > maxResultSet) { return null; } org.ggp.base.util.statemachine.implementation.propnet.forwardDeadReckon.ForwardDeadReckonPropnetStateMachine.AntecedantCursor newCursor = new org.ggp.base.util.statemachine.implementation.propnet.forwardDeadReckon.ForwardDeadReckonPropnetStateMachine.AntecedantCursor(cursor); java.util.Set<org.ggp.base.util.statemachine.implementation.propnet.forwardDeadReckon.ForwardDeadReckonPropnetStateMachine.AntecedantCursor> inputResults = addPropositionAntecedants(pn, c, newCursor, maxResultSet, maxDepth, (depth + 1)); if (inputResults == null) { if (!(cursor.isPositive)) { return null; } }else { if (!(cursor.isPositive)) { if (subResults.isEmpty()) { subResults = inputResults; }else { java.util.Set<org.ggp.base.util.statemachine.implementation.propnet.forwardDeadReckon.ForwardDeadReckonPropnetStateMachine.AntecedantCursor> validInputResults = new java.util.HashSet<>(); for (org.ggp.base.util.statemachine.implementation.propnet.forwardDeadReckon.ForwardDeadReckonPropnetStateMachine.AntecedantCursor cur : inputResults) { for (org.ggp.base.util.statemachine.implementation.propnet.forwardDeadReckon.ForwardDeadReckonPropnetStateMachine.AntecedantCursor subResult : subResults) { if (subResult.compatibleWith(cur)) { org.ggp.base.util.statemachine.implementation.propnet.forwardDeadReckon.ForwardDeadReckonPropnetStateMachine.AntecedantCursor combinedResult = new org.ggp.base.util.statemachine.implementation.propnet.forwardDeadReckon.ForwardDeadReckonPropnetStateMachine.AntecedantCursor(subResult); cur.unionInto(combinedResult); validInputResults.add(combinedResult); } } } subResults = validInputResults; } }else { subResults.addAll(inputResults); } } } return subResults; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/413/buggy-version/src.org.ggp.base.util.statemachine.implementation.propnet.forwardDeadReckon.ForwardDeadReckonPropnetStateMachine.java", "BodyUseAPI": ["org.ggp.base.util.propnet.polymorphic.PolymorphicComponent.getValue()", "org.ggp.base.util.propnet.polymorphic.PolymorphicComponent.getSingleInput()", "org.ggp.base.util.propnet.polymorphic.PolymorphicComponent.getInputs()", "org.ggp.base.util.statemachine.implementation.propnet.forwardDeadReckon.ForwardDeadReckonPropnetStateMachine.addPropositionAntecedants(org.ggp.base.util.propnet.polymorphic.PolymorphicPropNet,p.getSingleInput(),org.ggp.base.util.statemachine.implementation.propnet.forwardDeadReckon.ForwardDeadReckonPropnetStateMachine.AntecedantCursor,int,int,int)", "org.ggp.base.util.propnet.polymorphic.PolymorphicComponent.getInputs()"], "Fixed commit": "a7208c3e2ab6bb22982d7b92443b27d7e954304f", "Url": "https://api.github.com/repos/SanchoGGP/ggp-base", "Date": "2015-05-24T01:27:32Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enableRepost) dao.enableComment_ori(true); else dao.enableComment_ori(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3102/buggy-version/src.org.qii.weiciyuan.ui.send.CommentNewActivity.java", "BodyUseAPI": [], "Fixed commit": "e576b015af94de2d0af00399dc7843485ed2ed08", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-10T02:41:58Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)", "java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (checkWithinSameWeek(contents[i][0], currentWeek, currentYear)) { ConvertedDay = gui.owner.OwnerViewWorkingTimesController.getDayFromUnix(contents[i][0], Weekdays); DayPeriodCounts[java.util.Arrays.asList(Weekdays).indexOf(ConvertedDay)] += 1; if ((DayPeriodCounts[java.util.Arrays.asList(Weekdays).indexOf(ConvertedDay)]) > dayWithMostWorkingHours) dayWithMostWorkingHours = DayPeriodCounts[java.util.Arrays.asList(Weekdays).indexOf(ConvertedDay)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3827/buggy-version/src.gui.owner.OwnerViewWorkingTimesController.java", "BodyUseAPI": ["gui.owner.OwnerViewWorkingTimesController.getDayFromUnix(java.lang.String,java.lang.String[])"], "Fixed commit": "146330f827c052de0d0bad73e05c4b479f2a33de", "Url": "https://api.github.com/repos/Jarodwr/SE-Process-and-Tools", "Date": "2017-05-09T05:54:50Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((resideMenu) != null) && (resideMenu.isOpened())) { resideMenu.closeMenu(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5738/buggy-version/app.src.main.java.com.yahoo.hakunamatata.activities.MainActivity.java", "BodyUseAPI": ["com.dk.view.folder.ResideMenu.closeMenu()"], "Fixed commit": "3090e5311cdac0ee111b3cb8d09cca7413564526", "Url": "https://api.github.com/repos/YHakunaMatata/HakunaMatata", "Date": "2015-09-03T04:00:05Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == 1) { queryLocation = \"INSERT INTO public.\\\"Location\\\" VALUES(DEFAULT, ?, ?, null)\"; }else { queryLocation = \"INSERT INTO public.\\\"Location\\\" VALUES(DEFAULT, ?, null, ?)\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4090/buggy-version/Knjiznica.src.knjiznica.model.InsertNewLocation.java", "BodyUseAPI": [], "Fixed commit": "ddd8d55c060220b4a69f545ecd82700e1d98bd34", "Url": "https://api.github.com/repos/LVH-27/ellspace", "Date": "2017-09-12T20:27:38Z"},
{"Line": "=>709", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getRecordCounts(batchUploadId, finalStatusIds, false, false)) > 0) { batchStausId = 7; updateTransactionTargetStatus(batchUploadId, transactionId, 14, 13); updateTransactionStatus(batchUploadId, transactionId, 14, 13); }else { batchStausId = 6; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6460/buggy-version/src.main.java.com.ut.dph.service.impl.transactionInManagerImpl.java", "BodyUseAPI": ["com.ut.dph.service.impl.transactionInManagerImpl.updateTransactionTargetStatus(int,java.lang.Integer,int,int)", "com.ut.dph.service.impl.transactionInManagerImpl.updateTransactionStatus(int,java.lang.Integer,int,int)"], "Fixed commit": "8b37a160e0cbab295fc6934ace89231094a0893b", "Url": "https://api.github.com/repos/thenhkid/universalTranslator", "Date": "2014-09-12T14:44:21Z"},
{"Line": "=>1758", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (c == null) { return new java.util.ArrayList<net.sacredlabyrinth.Phaed.PreciousStones.vectors.Field>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5916/buggy-version/src.main.java.net.sacredlabyrinth.Phaed.PreciousStones.managers.ForceFieldManager.java", "BodyUseAPI": [], "Fixed commit": "31e2fef8e4456f392ce6ed6438aa0aa9c6daafe8", "Url": "https://api.github.com/repos/Nekocraft/PreciousStones", "Date": "2013-04-16T06:10:19Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == id) { fr.insee.pogues.webservice.rest.OwnerRestrictedFilter.logger.warn(\"Tried to call OwnerRestricted filter on body without an id\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/822/buggy-version/src.main.java.fr.insee.pogues.webservice.rest.OwnerRestrictedFilter.java", "BodyUseAPI": [], "Fixed commit": "cba77bf3a9ac0c5b70590efcf1893d384232aed8", "Url": "https://api.github.com/repos/Zenika/Pogues-Back-Office", "Date": "2017-07-21T14:56:00Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.insee.pogues.persistence.service.QuestionnairesService.getQuestionnaireByID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (questionnaire.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/822/buggy-version/src.main.java.fr.insee.pogues.webservice.rest.OwnerRestrictedFilter.java", "BodyUseAPI": [], "Fixed commit": "cba77bf3a9ac0c5b70590efcf1893d384232aed8", "Url": "https://api.github.com/repos/Zenika/Pogues-Back-Office", "Date": "2017-07-21T14:56:00Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(schemaWidgetsMap.containsKey(model.getTypeID()))) { schemaWidgetsMap.put(model.getTypeID(), model); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5773/buggy-version/applications.plugins.org.csstudio.opibuilder.src.org.csstudio.opibuilder.util.SchemaService.java", "BodyUseAPI": ["org.csstudio.opibuilder.model.AbstractWidgetModel.getTypeID()", "java.util.Map<java.lang.String, org.csstudio.opibuilder.model.AbstractWidgetModel>.put(model.getTypeID(),org.csstudio.opibuilder.model.AbstractWidgetModel)"], "Fixed commit": "1146322410ca1b5cdddf5a4a087483f85f277a91", "Url": "https://api.github.com/repos/css-iter/cs-studio", "Date": "2014-11-27T18:10:43Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"$jacocoData\".equals(fieldName)) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/799/buggy-version/src.main.java.net.moltak.soap.utility.ParameterBaker.java", "BodyUseAPI": [], "Fixed commit": "bd6d4c48ba46c4200a047404a3edbdc3c5bb2c96", "Url": "https://api.github.com/repos/moltak/Rx-Soap", "Date": "2015-06-18T10:54:23Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((targetVertex) != null) && (!(targetVertex.equals(iObject.getVertex(connection.getKey().opposite()))))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7898/buggy-version/blueprints-orient-graph.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientEdgeIterator.java", "BodyUseAPI": [], "Fixed commit": "0ef54c2f73053c8b81331afd7ab3f6c6e3dffbb4", "Url": "https://api.github.com/repos/jankotek/blueprints", "Date": "2013-08-16T11:33:37Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sshKeys.size()) < 2) { return peerDto; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2562/buggy-version/management.server.core.hub-manager.hub-manager-impl.src.main.java.io.subutai.core.hubmanager.impl.HubEnvironmentManager.java", "BodyUseAPI": [], "Fixed commit": "275efe2e720430099d3173388aa50f850be9d84b", "Url": "https://api.github.com/repos/subutai-io/peer-os", "Date": "2016-04-20T22:02:06Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) { isTest = true; }else { isTest = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6604/buggy-version/app.src.main.java.demo.venpath.com.venpathsample.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "918af83ab72de8aeacbc73fa5436ccc973346996", "Url": "https://api.github.com/repos/Venpath/Android-SDK", "Date": "2017-07-17T06:22:55Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.text.DecimalFormat.format(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (t.contains(\".\")) g.drawString((((t.substring(0, t.indexOf('.'))) + \":\") + (t.substring(((t.indexOf('.')) + 1), t.length()))), ((bounds.x) + (GamePanel.cam.offx)), (((bounds.y) + (GamePanel.cam.offy)) - 30));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5184/buggy-version/src.ld27.map.CaptureZone.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(char)", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(char)", "java.awt.Graphics.drawString(java.lang.String,((bounds.x) + (GamePanel.cam.offx)),(((bounds.y) + (GamePanel.cam.offy)) - 30))", "java.lang.String.length()"], "Fixed commit": "7e5eaf254fb7ea7e1f8f1241cbfb037285f164fe", "Url": "https://api.github.com/repos/kareemroks101/ld27", "Date": "2013-08-31T16:00:11Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.jangaroo.jooc.backend.ApiModelGenerator.generateModel(net.jangaroo.jooc.ast.CompilationUnit)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (compilationUnitModel.getClassModel().isInterface()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3595/buggy-version/exml.exml-compiler.src.main.java.net.jangaroo.exml.compiler.ExmlToMxml.java", "BodyUseAPI": [], "Fixed commit": "24c5c4b04092b4b593826c250236eb96a8a7828f", "Url": "https://api.github.com/repos/CoreMedia/jangaroo-tools", "Date": "2016-01-06T16:52:06Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.team1540.quasarhelios.QuasarHelios.faultClears.get((i - 2))) == null) { entries[i] = ccre.rconf.RConf.string(str); }else { entries[i] = ccre.rconf.RConf.button(str); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4857/buggy-version/QuasarHelios2015.src.org.team1540.quasarhelios.QuasarHelios.java", "BodyUseAPI": [], "Fixed commit": "04e6a4591f9ba5212a0236d792df448a47b504d3", "Url": "https://api.github.com/repos/flamingchickens1540/quasar-helios-2015", "Date": "2015-02-15T00:37:43Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((param == null) || ((param.getOrderStatus()) == null)) { param = new com.order.www.domain.param.OrderParam(); param.setOrderStatus((-2L)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/398/buggy-version/src.main.java.com.order.www.controller.DownLoadImageControl.java", "BodyUseAPI": [], "Fixed commit": "1f44493bfffd2c1f6fe80e497be7f9732b81315f", "Url": "https://api.github.com/repos/kongtrio/seller_order", "Date": "2017-09-16T15:22:14Z"},
{"Line": "=>1665", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.project.valdoc.DynamicTableActivity.getAvgUpStrm(mApplicableTestRoom.getTestProp())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((avgUpStrm == null) || (avgUpStrm.equals(\"\"))) avgUpStrm = \"100\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1285/buggy-version/VALDOC.app.src.main.java.com.project.valdoc.DynamicTableActivity.java", "BodyUseAPI": [], "Fixed commit": "1e14928c2e29b6004993e99211e58cb5ecd63a5f", "Url": "https://api.github.com/repos/avinashtiwari87/HelloAcTest", "Date": "2016-12-17T09:11:31Z"},
{"Line": "=>1651", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.project.valdoc.DynamicTableActivity.getAvgUpStrm(mApplicableTestEquipment.getTestProp())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((avgUpStrm == null) || (avgUpStrm.equals(\"\"))) avgUpStrm = \"100\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1285/buggy-version/VALDOC.app.src.main.java.com.project.valdoc.DynamicTableActivity.java", "BodyUseAPI": [], "Fixed commit": "1e14928c2e29b6004993e99211e58cb5ecd63a5f", "Url": "https://api.github.com/repos/avinashtiwari87/HelloAcTest", "Date": "2016-12-17T09:11:31Z"},
{"Line": "=>1658", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.project.valdoc.DynamicTableActivity.getAvgUpStrm(mApplicableTestAhu.getTestProp())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((avgUpStrm == null) || (avgUpStrm.equals(\"\"))) avgUpStrm = \"100\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1285/buggy-version/VALDOC.app.src.main.java.com.project.valdoc.DynamicTableActivity.java", "BodyUseAPI": [], "Fixed commit": "1e14928c2e29b6004993e99211e58cb5ecd63a5f", "Url": "https://api.github.com/repos/avinashtiwari87/HelloAcTest", "Date": "2016-12-17T09:11:31Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(worldObj.isRemote)) { setBlockState(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8602/buggy-version/Crystallogy.src.main.java.de.comeight.crystallogy.tileEntitys.machines.BaseTileEntityMachine.java", "BodyUseAPI": [], "Fixed commit": "63b6a1c988a10f93e3f4fff6255325bea9293f8b", "Url": "https://api.github.com/repos/COM8/Crystallogy", "Date": "2016-05-24T08:34:17Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (q != null) { q = (\"%\" + q) + \"%\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1557/buggy-version/src.main.java.com.github.ququzone.basicweb.messages.MessageController.java", "BodyUseAPI": [], "Fixed commit": "4c492ac98c21fe4486ac84400d5b03fa12ad32e4", "Url": "https://api.github.com/repos/basic-web/basic-web-service", "Date": "2017-05-15T14:40:24Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((q != null) && (q.equals(\"\"))) { q = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1557/buggy-version/src.main.java.com.github.ququzone.basicweb.messages.MessageController.java", "BodyUseAPI": [], "Fixed commit": "4c492ac98c21fe4486ac84400d5b03fa12ad32e4", "Url": "https://api.github.com/repos/basic-web/basic-web-service", "Date": "2017-05-15T14:40:24Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (animatorListenerAdapter != null) { animatorListenerAdapter.onAnimationEnd(animation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4109/buggy-version/app.src.main.java.de.devland.masterpassword.ui.InsertionAnimationCardListView.java", "BodyUseAPI": ["android.animation.AnimatorListenerAdapter.onAnimationEnd(android.animation.Animator)"], "Fixed commit": "e55a9c3b342212761866e340874e92ecafb9361f", "Url": "https://api.github.com/repos/dkunzler/masterpassword", "Date": "2015-02-28T21:09:56Z"},
{"Line": "=>1111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.m.util.Tools.isDayChange(getActivity())) { carDetailLayout.setBackgroundColor(android.graphics.Color.parseColor(\"#333333\")); carDescription.setBackgroundResource(R.drawable.car_night_name_bg); }else { carDetailLayout.setBackgroundColor(android.graphics.Color.parseColor(\"#F4F5F7\")); carDescription.setBackgroundResource(R.drawable.car_name_bg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7339/buggy-version/src.com.m.fragment.CarDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "e477547416ab61157e2f4515b504981db7602536", "Url": "https://api.github.com/repos/majunm/CAR2", "Date": "2015-01-05T10:12:54Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((resume.getInterviewTime()) != null) { java.text.SimpleDateFormat fmt = new java.text.SimpleDateFormat(\"MM\u6708dd\u65e5 HH\u65f6mm\u5206\"); notiService.addNoti(stu.getAccountId(), Notification.NType.RESUME, resumeId, Notification.TPL_RESUME_TIME, compName, fmt.format(resume.getInterviewTime())); }else if ((oldRes.getState()) == (thu.declan.xi.server.model.Resume.RState.WAIT_COMP_CONFIRM)) { java.text.SimpleDateFormat fmt = new java.text.SimpleDateFormat(\"MM\u6708dd\u65e5 HH\u65f6mm\u5206\"); notiService.addNoti(stu.getAccountId(), Notification.NType.RESUME, resumeId, Notification.TPL_RESUME_TIME, compName, fmt.format(oldRes.getInterviewTime())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7751/buggy-version/xi-server.src.main.java.thu.declan.xi.server.resource.ResumeResource.java", "BodyUseAPI": ["thu.declan.xi.server.model.Resume.getInterviewTime()", "thu.declan.xi.server.resource.ResumeResource.addNoti(stu.getAccountId(),Notification.NType.RESUME,int,Notification.TPL_RESUME_TIME,java.lang.String,java.lang.String)", "java.text.SimpleDateFormat.format(resume.getInterviewTime())"], "Fixed commit": "8587b31d7da62901b016a82a7e7f0151d8378964", "Url": "https://api.github.com/repos/declan94/xintern", "Date": "2017-11-14T10:57:13Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((eventId2touchPointDescriptor.get(eventId)) instanceof net.sourceforge.cobertura.instrument.tp.JumpTouchPointDescriptor) { net.sourceforge.cobertura.instrument.tp.JumpTouchPointDescriptor jumpTouchPointDescriptor = ((net.sourceforge.cobertura.instrument.tp.JumpTouchPointDescriptor) (eventId2touchPointDescriptor.get(eventId))); if (jumpTouchPointDescriptor != null) { return jumpTouchPointDescriptor.getCounterIdForTrue(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/72/buggy-version/cobertura.src.main.java.net.sourceforge.cobertura.instrument.tp.ClassMap.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, net.sourceforge.cobertura.instrument.tp.TouchPointDescriptor>.get(int)"], "Fixed commit": "b76032729dbef7e6d51666e809de82cfa555cb3e", "Url": "https://api.github.com/repos/christ66/cobertura", "Date": "2013-07-16T06:53:49Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((eventId2touchPointDescriptor.get(eventId)) instanceof net.sourceforge.cobertura.instrument.tp.JumpTouchPointDescriptor) { net.sourceforge.cobertura.instrument.tp.JumpTouchPointDescriptor jumpTouchPointDescriptor = ((net.sourceforge.cobertura.instrument.tp.JumpTouchPointDescriptor) (eventId2touchPointDescriptor.get(eventId))); if (jumpTouchPointDescriptor != null) { return jumpTouchPointDescriptor.getCounterIdForFalse(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/72/buggy-version/cobertura.src.main.java.net.sourceforge.cobertura.instrument.tp.ClassMap.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, net.sourceforge.cobertura.instrument.tp.TouchPointDescriptor>.get(int)"], "Fixed commit": "b76032729dbef7e6d51666e809de82cfa555cb3e", "Url": "https://api.github.com/repos/christ66/cobertura", "Date": "2013-07-16T06:53:49Z"},
{"Line": "=>1051", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSelectedItem) == (com.seafile.seadroid2.BrowserActivity.UPLOAD_TASKS_TAB)) { navContext.setRepoID(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4015/buggy-version/src.com.seafile.seadroid2.BrowserActivity.java", "BodyUseAPI": [], "Fixed commit": "1601006cfa92178046f54efac4e2784fe864ce39", "Url": "https://api.github.com/repos/haiwen/seadroid", "Date": "2013-12-19T02:48:29Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (openTag.contains(\"phpreturn\")) { openTag = openTag.replace(\"php\", \"php\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2784/buggy-version/src.main.java.ru.andyskvo.main.Main.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "9a09aaa90b14c645e71b3cbe0d527ce389ef55ca", "Url": "https://api.github.com/repos/AndySkvo/yii2-messages-sorter", "Date": "2016-03-30T13:29:43Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shootTime) != 0) { shootTime = 0; attackTime = 0; isAttacking = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2058/buggy-version/src.entity.mobs.hostile.Pirate1Mob.java", "BodyUseAPI": [], "Fixed commit": "5cf29149414b91fbc1eeace829af98fddf9ece7a", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-05-19T13:17:11Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.izforge.izpack.panels.userinput.Field.getVariable()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (var != null) { variables.add(var); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3522/buggy-version/izpack-panel.src.main.java.com.izforge.izpack.panels.userinput.UserInputPanel.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)"], "Fixed commit": "a7561937e791c888cd21796ab16fd4972778fea0", "Url": "https://api.github.com/repos/Helpstone/izpack", "Date": "2015-01-30T09:08:52Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nbcolumn < 1) nbcolumn = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/447/buggy-version/src.org.gots.allotment.adapter.ListAllotmentAdapter.java", "BodyUseAPI": [], "Fixed commit": "0cd9a33c1dbdf326b1f51b6705131ffbf0658e9c", "Url": "https://api.github.com/repos/artmoni/gardening-manager-android", "Date": "2014-03-19T00:12:52Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sdk < (android.os.Build.VERSION_CODES.ICE_CREAM_SANDWICH)) { width = display.getWidth(); height = display.getHeight(); }else { display.getSize(size); width = size.x; height = size.y; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/447/buggy-version/src.org.gots.allotment.adapter.ListAllotmentAdapter.java", "BodyUseAPI": [], "Fixed commit": "0cd9a33c1dbdf326b1f51b6705131ffbf0658e9c", "Url": "https://api.github.com/repos/artmoni/gardening-manager-android", "Date": "2014-03-19T00:12:52Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (totalHeight < (mCustomToolbarHeight)) totalHeight = mCustomToolbarHeight;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7558/buggy-version/persistentsearchview.src.main.java.org.cryse.widget.persistentsearch.PersistentSearchView.java", "BodyUseAPI": [], "Fixed commit": "bc864e828cdf09a03fd649b80179ed327a6ac226", "Url": "https://api.github.com/repos/crysehillmes/PersistentSearchView", "Date": "2015-08-21T15:30:27Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((str.length()) > 0) { str = str.substring(0, ((str.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6467/buggy-version/javaplay.app.src.main.java.com.levigilad.javaplay.infra.entities.DeckOfCards.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "01f6c81bae8f562c39614f6d0d0b08857e6122fb", "Url": "https://api.github.com/repos/idanlv/JavaPlay_Android", "Date": "2016-10-15T21:01:44Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((g.getPloidy()) != 2) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5723/buggy-version/public.java.src.org.broadinstitute.sting.gatk.walkers.annotator.InbreedingCoeff.java", "BodyUseAPI": [], "Fixed commit": "6b9ae16f7e3468a0703c3bd23e532b9ca4ab28ee", "Url": "https://api.github.com/repos/broadgsa/gatk", "Date": "2012-07-25T00:33:34Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fixup.isEmpty())) { throw new java.lang.Exception(\"Unresolved branch location\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8018/buggy-version/src.compiler.DLXGenerator.java", "BodyUseAPI": [], "Fixed commit": "e1825b6551219d11c8b4757feabce5d79e8f7343", "Url": "https://api.github.com/repos/BrianBelleville/optimizing-compiler", "Date": "2014-03-19T05:23:48Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((spotifyPlayer) == null) && (!(intent.getAction().matches(pasta.streamer.PlayerService.ACTION_INIT)))) { pasta.onError(this, \"null spotify player\"); return START_STICKY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5670/buggy-version/app.src.main.java.pasta.streamer.PlayerService.java", "BodyUseAPI": [], "Fixed commit": "e5f0cfb539702db975cd43641bf2fca1628f236d", "Url": "https://api.github.com/repos/TheAndroidMaster/Pasta-for-Spotify", "Date": "2016-08-09T17:22:23Z"},
{"Line": "=>851", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (msDelay <= 0) { org.matrix.androidsdk.util.Log.e(org.matrix.androidsdk.call.MXCallsManager.LOG_TAG, (\"## refreshTurnServer() : invalid delay \" + msDelay)); }else { if (null != (mTurnServerTimer)) { mTurnServerTimer.cancel(); } mTurnServerTimer = new java.util.Timer(); mTurnServerTimer.schedule(new java.util.TimerTask() { @java.lang.Override public void run() { if ((mTurnServerTimer) != null) { mTurnServerTimer.cancel(); mTurnServerTimer = null; } refreshTurnServer(); } }, msDelay); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3248/buggy-version/matrix-sdk.src.main.java.org.matrix.androidsdk.call.MXCallsManager.java", "BodyUseAPI": ["org.matrix.androidsdk.util.Log.e(java.lang.String,java.lang.String)", "java.util.Timer.schedule(java.util.TimerTask,int)"], "Fixed commit": "4c03da468a2d6803ffab0f3b7259fb6142f5f0e4", "Url": "https://api.github.com/repos/matrix-org/matrix-android-sdk", "Date": "2017-07-10T12:21:49Z"},
{"Line": "=>604", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((raw.indexOf(\"`\")) >= 0) { raw = raw.substring(0, raw.indexOf(\"`\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/513/buggy-version/ResultsWizard2.src.mathsquared.resultswizard2.DefaultEventResultsSlideList.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "7cf96f553e4ef3f093f3cffb0d47fbe68a32e69e", "Url": "https://api.github.com/repos/MathSquared/ResultsWizard2", "Date": "2014-07-26T18:20:24Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.juniper.contrail.vcenter.VCenterMonitor.getVncDB().getVRouterApiMap()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (apiMap == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2348/buggy-version/src.net.juniper.contrail.sandesh.VCenterPluginResp.java", "BodyUseAPI": [], "Fixed commit": "599c7ec02c87092d969a7fba2b042dbb267f500d", "Url": "https://api.github.com/repos/Juniper/contrail-vcenter-plugin", "Date": "2015-10-13T22:48:34Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.juniper.contrail.vcenter.VCenterMonitor.getVncDB()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2348/buggy-version/src.net.juniper.contrail.sandesh.VCenterPluginResp.java", "BodyUseAPI": [], "Fixed commit": "599c7ec02c87092d969a7fba2b042dbb267f500d", "Url": "https://api.github.com/repos/Juniper/contrail-vcenter-plugin", "Date": "2015-10-13T22:48:34Z"},
{"Line": "=>597", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (type != null) { if ((typedParameter) == null) { typedParameter = new com.impetus.kundera.query.KunderaQuery.TypedParameter(type); } if (typedParameter.getType().equals(type)) { typedParameter.addParameters(parameter, clause); }else { com.impetus.kundera.query.KunderaQuery.logger.warn(\"Invalid type provided, it can either be name or indexes!\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7902/buggy-version/kundera-core.src.main.java.com.impetus.kundera.query.KunderaQuery.java", "BodyUseAPI": ["com.impetus.kundera.query.KunderaQuery.Type.equals(com.impetus.kundera.query.KunderaQuery.Type)"], "Fixed commit": "d9087557079c990fdc89a9f63337c49eae3e96fe", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2013-06-29T06:58:45Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((metaData.getHttpMethod()) == (org.faziz.assignment.service.meta.HttpMetod.POST)) || ((metaData.getHttpMethod()) == (org.faziz.assignment.service.meta.HttpMetod.PUT))) validate(inputParameter);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1810/buggy-version/src.main.java.org.faziz.assignment.web.RestifiedServlet.java", "BodyUseAPI": [], "Fixed commit": "2ca4f6eaf591bbe44ac9db8e3c9143605e8eaede", "Url": "https://api.github.com/repos/faziz/assignment", "Date": "2012-04-12T13:26:46Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(path.exists())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8964/buggy-version/src.main.java.org.animotron.bridge.FSBridge.java", "BodyUseAPI": [], "Fixed commit": "23a77a30a651c76d3f060d3723cd4ba6c18fcf9f", "Url": "https://api.github.com/repos/animotron/core", "Date": "2011-11-25T12:16:48Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((url != null) && (!(url.isEmpty()))) && (capedata == null)) { capedata = new net.pl3x.forge.cape.CapeManager.CapeData(username, url); net.pl3x.forge.cape.CapeManager.capeList.put(username, new java.lang.Object[]{ url, capedata }); capedata.setDaemon(true); capedata.setName((\"Cape Download: \" + url)); capedata.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/433/buggy-version/src.main.java.net.pl3x.forge.cape.CapeManager.java", "BodyUseAPI": ["net.pl3x.forge.cape.CapeManager.CapeData.setName(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Object[]>.put(java.lang.String,java.lang.Object[])"], "Fixed commit": "e78475647f1829a64e2f565c056daf3b485040f1", "Url": "https://api.github.com/repos/BillyGalbreath/Pl3xForge", "Date": "2017-11-23T23:52:54Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.InputStream.read()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (a == 0) { ia.mark(0); ib.mark(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2325/buggy-version/h2o-core.src.main.java.water.parser.PackedDomains.java", "BodyUseAPI": [], "Fixed commit": "f95b15e8d28a4faebf6fdbdb115de339030b8655", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2017-04-13T12:03:51Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<uk.co.qubitssolutions.bharatradios.model.Language>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (selectedLanguage == null) { android.util.Log.i(\"Bharatradios\", (\"not sure why but selectedLanguage is null for position\" + position)); selectedLanguage = favLanguages.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1624/buggy-version/app.src.main.java.uk.co.qubitssolutions.bharatradios.app.adapters.RadioListViewPagerAdapter.java", "BodyUseAPI": [], "Fixed commit": "3d7a55715dea919e71d58d766aff5e1937a8fe10", "Url": "https://api.github.com/repos/vmanikandan001/bharatradios.droid", "Date": "2017-07-04T19:41:43Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (flag.equalsIgnoreCase(\"LOG\")) { callback.receiveWarning(new org.gumtree.sics.io.SicsData(response)); }else if (flag.equalsIgnoreCase(Flag.FINISH.toString())) { callback.receiveFinish(new org.gumtree.sics.io.SicsData(response)); }else { callback.receiveReply(new org.gumtree.sics.io.SicsData(response)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5396/buggy-version/framework.sics.org.gumtree.sics.core.src.org.gumtree.sics.io.support.SicsNonBlockingChannel.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(Flag.FINISH.toString())"], "Fixed commit": "fa522f5e97d991da4449c34f43118f7b69852b53", "Url": "https://api.github.com/repos/Gumtree/gumtree", "Date": "2013-09-17T06:07:17Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (flag.equalsIgnoreCase(\"LOG\")) { callback.receiveWarning(new org.gumtree.sics.io.SicsData(response)); }else if (flag.equalsIgnoreCase(Flag.FINISH.toString())) { callback.receiveFinish(new org.gumtree.sics.io.SicsData(response)); }else { callback.receiveReply(new org.gumtree.sics.io.SicsData(response)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5396/buggy-version/framework.sics.org.gumtree.sics.core.src.org.gumtree.sics.io.support.SicsChannel.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(Flag.FINISH.toString())"], "Fixed commit": "fa522f5e97d991da4449c34f43118f7b69852b53", "Url": "https://api.github.com/repos/Gumtree/gumtree", "Date": "2013-09-17T06:07:17Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (message.startsWith(\"pause\")) { return org.gumtree.sics.control.ServerStatus.PAUSE; }else if (message.startsWith(\"user requested wait\")) { return org.gumtree.sics.control.ServerStatus.WAIT; }else { return org.gumtree.sics.control.ServerStatus.UNKNOWN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5396/buggy-version/framework.sics.org.gumtree.sics.core.src.org.gumtree.sics.control.ServerStatus.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "fa522f5e97d991da4449c34f43118f7b69852b53", "Url": "https://api.github.com/repos/Gumtree/gumtree", "Date": "2013-09-17T06:07:17Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((delegate.getBillAdjusted()) != null) delegate.setCashPoint(delegate.getBillAdjusted().getCashPoint()); else throw new org.springframework.web.client.RestClientException(\"Cash point cannot be null!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/102/buggy-version/omod.src.main.java.org.openmrs.module.webservices.rest.resource.BillResource.java", "BodyUseAPI": ["org.openmrs.module.openhmis.cashier.api.model.Bill.getBillAdjusted()", "org.openmrs.module.openhmis.cashier.api.model.Bill.setCashPoint(delegate.getBillAdjusted().getCashPoint())", "delegate.getBillAdjusted().getCashPoint()"], "Fixed commit": "44ba9e7a50bdfd3dcaab7cbf14c7bb1f1740d3fe", "Url": "https://api.github.com/repos/OpenHMIS/openmrs-module-openhmis.cashier", "Date": "2013-01-21T20:09:31Z"},
{"Line": "=>2381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JList<view.cells.CellListClass>.getSelectedIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index == (-1)) pan_caracs_class.setVisible(false); else { list_classes.setSelectedIndex(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/385/buggy-version/MobArena_Helper.src.view.MenuPrincipal.java", "BodyUseAPI": ["javax.swing.JList<view.cells.CellListClass>.setSelectedIndex(int)"], "Fixed commit": "788768b2aa7a783c49d443aa1ba72ebbf11f43ff", "Url": "https://api.github.com/repos/Pyeroh/mobarenahelper", "Date": "2013-11-04T10:39:44Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (warmupTime > 0) { try { java.lang.Thread.sleep(warmupTime); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5579/buggy-version/src.services.command.CommandService.java", "BodyUseAPI": ["java.lang.Thread.sleep(long)"], "Fixed commit": "4ae9f292be9d3d474fa1af06c064285563fb35f1", "Url": "https://api.github.com/repos/Chadenn/NGECore2", "Date": "2014-04-12T19:20:05Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((command.getCooldown()) > 0) actor.addCooldown(command.getCooldownGroup(), command.getCooldown());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5579/buggy-version/src.services.command.CommandService.java", "BodyUseAPI": ["services.command.BaseSWGCommand.getCooldownGroup()", "resources.objects.creature.CreatureObject.addCooldown(command.getCooldownGroup(),command.getCooldown())", "services.command.BaseSWGCommand.getCooldown()"], "Fixed commit": "4ae9f292be9d3d474fa1af06c064285563fb35f1", "Url": "https://api.github.com/repos/Chadenn/NGECore2", "Date": "2014-04-12T19:20:05Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((leaf.nextLeaf) != null) { leaf.nextLeaf.previousLeaf = nLeaf; nLeaf.nextLeaf = leaf.nextLeaf; leaf.nextLeaf = nLeaf; nLeaf.previousLeaf = leaf; }else { leaf.nextLeaf = nLeaf; nLeaf.previousLeaf = leaf; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7376/buggy-version/BPlusTree.java", "BodyUseAPI": [], "Fixed commit": "557a12695f5ed79f918d89a25b98ad157617bd30", "Url": "https://api.github.com/repos/bgy36ww/BplusTree", "Date": "2016-03-10T05:05:52Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.String.class.isAssignableFrom(elementType)) { childPlan = propertyPath; }else { childPlan = proxyFactory.createProxy(elementType, com.koch.ambeth.query.interceptor.QueryBuilderProxyInterceptor.INTERFACES, new com.koch.ambeth.query.interceptor.QueryBuilderProxyInterceptor(targetMetaData, baseEntityType, propertyPath, lastPropertyPathTL, propertyInfoProvider, entityMetaDataProvider, proxyFactory)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/9058/buggy-version/jambeth.jambeth-query.src.main.java.com.koch.ambeth.query.interceptor.QueryBuilderProxyInterceptor.java", "BodyUseAPI": ["com.koch.ambeth.util.proxy.IProxyFactory.createProxy(java.lang.Class<?>,java.lang.Class<?>[],com.koch.ambeth.query.interceptor.QueryBuilderProxyInterceptor)"], "Fixed commit": "fbaf4486f31a0927281affa74a219b6c2cc8c3a5", "Url": "https://api.github.com/repos/Dennis-Koch/ambeth", "Date": "2017-09-07T07:34:42Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((nextPin.length) < 5) && (!isWebData)) { nextPin = scotty.nextLine().split(\"\\t\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3656/buggy-version/src.com.p2pbr.netviz.TorNetViz.java", "BodyUseAPI": [], "Fixed commit": "9da89c20fd8d036c790a9b28ba6a2c950ec13abe", "Url": "https://api.github.com/repos/UWNetworksLab/calmnetviz", "Date": "2012-08-14T23:00:13Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isScroll) clearCache();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3928/buggy-version/app.src.main.java.com.walmartlabs.classwork.tweets.activities.TimelineActivity.java", "BodyUseAPI": [], "Fixed commit": "5595d5431f952b97ca681b5f08991650bf4a707b", "Url": "https://api.github.com/repos/arvindh5686/FakeTwitter", "Date": "2015-10-27T05:28:46Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["railo.runtime.listener.ModernApplicationContext.get(railo.runtime.type.cfc.ComponentAccess,KeyImpl.DATA_SOURCE,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (railo.runtime.op.Decision.isStruct(o)) { railo.runtime.type.Struct sct = railo.runtime.op.Caster.toStruct(o); ds = railo.runtime.op.Caster.toString(sct.get(KeyConstants._name)); }else ds = railo.runtime.op.Caster.toString(o);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2198/buggy-version/railo-java.railo-core.src.railo.runtime.listener.ModernApplicationContext.java", "BodyUseAPI": ["railo.runtime.op.Caster.toStruct(java.lang.Object)", "railo.runtime.op.Caster.toString(java.lang.Object)"], "Fixed commit": "d13eb70017693d869412f57ca52bba2d3fc61d74", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2012-06-05T19:58:16Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isRangeDone(currentRange))) { doneCount += (currentEntry) - (currentRange.getStart()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2386/buggy-version/src.main.java.com.object0r.TorRange.ProxyRangeWorkerManager.java", "BodyUseAPI": ["com.object0r.TorRange.datatypes.EntriesRange.getStart()"], "Fixed commit": "85d957544ff8629a3a5c8ae7e6d098896c85e161", "Url": "https://api.github.com/repos/nikos-glikis/TorRange", "Date": "2016-12-23T15:41:36Z"}]}
