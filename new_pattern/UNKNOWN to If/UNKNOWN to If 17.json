{"UNKNOWN to If":[{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.application.list.PanelAppRegistry.getFirstPanelApp(java.lang.String,com.liferay.portal.security.permission.PermissionChecker,com.liferay.portal.model.Group)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (panelApp != null) { return panelApp.getPortletId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7951/buggy-version/modules.apps.application-list.application-list-api.src.main.java.com.liferay.application.list.display.context.logic.PanelCategoryHelper.java", "BodyUseAPI": ["com.liferay.application.list.PanelApp.getPortletId()"], "Fixed commit": "f47f22c70bda9195932e3179049fa89f28079909", "Url": "https://api.github.com/repos/juliocamarero/liferay-portal", "Date": "2016-01-17T12:35:50Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (w instanceof org.apache.hadoop.io.NullWritable) { return null; }else { return w.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5739/buggy-version/src.main.java.org.yong3.hive.mongo.MongoWriter.java", "BodyUseAPI": ["org.apache.hadoop.io.Writable.toString()"], "Fixed commit": "cb6bfe4f4b50ee19f0abb99a8f6194b348bd677a", "Url": "https://api.github.com/repos/yc-huang/Hive-mongo", "Date": "2011-11-21T06:41:46Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["login.getChildren().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((shell.getChildren().size()) == 1) && ((shell.getChildren().get(0).getPid()) == callerPid)) { cz.zcu.kiv.os.core.Core.getInstance().getServices().dispatchSystemSignal(shell.getPid(), Signals.SIGTERM); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4734/buggy-version/src.cz.zcu.kiv.os.core.Core.java", "BodyUseAPI": ["java.lang.Process.getPid()", "cz.zcu.kiv.os.core.ICoreServices.dispatchSystemSignal(shell.getPid(),Signals.SIGTERM)"], "Fixed commit": "521e41f528ab6cb0e9ee6c2c81352b435ce6622e", "Url": "https://api.github.com/repos/bydga/kiv.os", "Date": "2012-11-19T16:11:05Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((queryTypeStack.size()) > 0) { queryTypeStack.pop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5710/buggy-version/corelib-solr.src.main.java.eu.europeana.corelib.solr.utils.queryextractor.QueryExtractor.java", "BodyUseAPI": ["java.util.Stack<eu.europeana.corelib.solr.utils.queryextractor.QueryType>.pop()"], "Fixed commit": "57a8ad2e986da3c86b85414f6a2dc9702f647047", "Url": "https://api.github.com/repos/europeana/corelib", "Date": "2014-09-02T10:56:27Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((javassist.Modifier.isStatic(field.getModifiers())) == false) && ((javassist.Modifier.isFinal(field.getModifiers())) == false)) { fields.add(field); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4501/buggy-version/src.main.java.de.terrestris.shogun.dao.DatabaseDao.java", "BodyUseAPI": ["java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)"], "Fixed commit": "e2b74e4cec8e9ec84e568c80a1e6e3284e2d0442", "Url": "https://api.github.com/repos/marcjansen/shogun", "Date": "2013-08-05T06:56:39Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (actionQueue.isEmpty()) { lastAction = new words.environment.WaitAction(environment.getCurrentScope()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2879/buggy-version/src.words.environment.WordsObject.java", "BodyUseAPI": [], "Fixed commit": "f57a17174ed1a1f6951200f7b4aabc6efa30fec6", "Url": "https://api.github.com/repos/akallem/Words", "Date": "2015-04-25T14:45:29Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (this.talkService)) { try { this.talkService = new net.cellcloud.talk.TalkService(this.context); } catch (net.cellcloud.exception.SingletonException e) { net.cellcloud.common.Logger.logException(e, LogLevel.ERROR); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1121/buggy-version/nucleus.src.net.cellcloud.core.Nucleus.java", "BodyUseAPI": [], "Fixed commit": "51829b13599a32fec3baac61803bb97d9cb4075c", "Url": "https://api.github.com/repos/xujiangwei/cellcloud-java", "Date": "2012-12-12T03:58:13Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Messagebox.ON_YES.equals(e.getName())) { org.zkoss.zul.Messagebox.show(org.zkoss.util.resource.Labels.getLabel(\"staff.quantity.comfirm.approve.message.ok\"), org.zkoss.util.resource.Labels.getLabel(\"comfirm\"), Messagebox.OK, Messagebox.INFORMATION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6442/buggy-version/CKPManagement.src.main.java.com.dvd.ckp.controller.BillsViewController.java", "BodyUseAPI": [], "Fixed commit": "a9fdf757476ad467fa3e8819547ae0cb2c5fd89e", "Url": "https://api.github.com/repos/stfc3/CKP", "Date": "2017-11-20T16:44:39Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.media.MediaMetadataRetriever.extractMetadata(MediaMetadataRetriever.METADATA_KEY_DURATION)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (duration == null) { item.setTrackLength(\"0\"); }else { item.setTrackLength(duration); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3504/buggy-version/app.src.main.java.model.com.palshyn.xander.mediaplayer.CustomList.java", "BodyUseAPI": ["model.com.palshyn.xander.mediaplayer.ListItem.setTrackLength(java.lang.String)"], "Fixed commit": "f1b653e22492dc97830f8bc0a0dedecd61669c40", "Url": "https://api.github.com/repos/Palshyn/MediaPlayer", "Date": "2015-05-31T17:36:27Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.media.MediaMetadataRetriever.extractMetadata(MediaMetadataRetriever.METADATA_KEY_TITLE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (title == null) { item.setTrackTitle(\"Unknown\"); }else { item.setTrackTitle(title); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3504/buggy-version/app.src.main.java.model.com.palshyn.xander.mediaplayer.CustomList.java", "BodyUseAPI": ["model.com.palshyn.xander.mediaplayer.ListItem.setTrackTitle(java.lang.String)"], "Fixed commit": "f1b653e22492dc97830f8bc0a0dedecd61669c40", "Url": "https://api.github.com/repos/Palshyn/MediaPlayer", "Date": "2015-05-31T17:36:27Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.media.MediaMetadataRetriever.extractMetadata(MediaMetadataRetriever.METADATA_KEY_ARTIST)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (artist == null) { item.setTrackAuthor(\"Unknown\"); }else { item.setTrackAuthor(artist); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3504/buggy-version/app.src.main.java.model.com.palshyn.xander.mediaplayer.CustomList.java", "BodyUseAPI": ["model.com.palshyn.xander.mediaplayer.ListItem.setTrackAuthor(java.lang.String)"], "Fixed commit": "f1b653e22492dc97830f8bc0a0dedecd61669c40", "Url": "https://api.github.com/repos/Palshyn/MediaPlayer", "Date": "2015-05-31T17:36:27Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (path == null) { item.setData(\"Unknown\"); }else { item.setData(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3504/buggy-version/app.src.main.java.model.com.palshyn.xander.mediaplayer.CustomList.java", "BodyUseAPI": ["model.com.palshyn.xander.mediaplayer.ListItem.setData(java.lang.String)"], "Fixed commit": "f1b653e22492dc97830f8bc0a0dedecd61669c40", "Url": "https://api.github.com/repos/Palshyn/MediaPlayer", "Date": "2015-05-31T17:36:27Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.media.MediaMetadataRetriever.extractMetadata(MediaMetadataRetriever.METADATA_KEY_ALBUM)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (album == null) { item.setAlbumName(\"Unknown\"); }else { item.setAlbumName(album); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3504/buggy-version/app.src.main.java.model.com.palshyn.xander.mediaplayer.CustomList.java", "BodyUseAPI": ["model.com.palshyn.xander.mediaplayer.ListItem.setAlbumName(java.lang.String)"], "Fixed commit": "f1b653e22492dc97830f8bc0a0dedecd61669c40", "Url": "https://api.github.com/repos/Palshyn/MediaPlayer", "Date": "2015-05-31T17:36:27Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (projectType != (com.badlogic.gdx.setup.DependencyBank.ProjectType.IOSMOE)) { modules.add(projectType); checkBox.setSelected(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7/buggy-version/extensions.gdx-setup.src.com.badlogic.gdx.setup.GdxSetupUI.java", "BodyUseAPI": ["java.util.List<com.badlogic.gdx.setup.DependencyBank.ProjectType>.add(com.badlogic.gdx.setup.DependencyBank.ProjectType)"], "Fixed commit": "8a5729b09260e9b28c0a0113f0b851407b8a0e79", "Url": "https://api.github.com/repos/TomGrill/libgdx", "Date": "2016-05-16T09:23:54Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (iteratorObject != oldIteratorObject) { this.iteratorObject = iteratorObject; getPropertyChangeSupport().firePropertyChange(browserElementDefinition.getName(), oldIteratorObject, iteratorObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3947/buggy-version/gina-core.src.main.java.org.openflexo.fib.view.widget.browser.FIBBrowserElementType.java", "BodyUseAPI": ["java.beans.PropertyChangeSupport.firePropertyChange(browserElementDefinition.getName(),java.lang.Object,java.lang.Object)"], "Fixed commit": "57f342ab3ceffce0315c386564745b993a70e36e", "Url": "https://api.github.com/repos/openflexo-team/gina", "Date": "2014-10-15T11:25:26Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(aCrudKey.startsWith(((JsonCrudConfig._PROP_KEY_CRUD) + \".\")))) { sConfigKey = ((JsonCrudConfig._PROP_KEY_CRUD) + \".\") + aCrudKey; }else { sConfigKey = aCrudKey; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1666/buggy-version/src.hl.jsoncrud.JsonCrudRestUtil.java", "BodyUseAPI": [], "Fixed commit": "0ed77e2ef4e9b1acfc1a4e5d8e98104a9a328322", "Url": "https://api.github.com/repos/huilam/jsoncrud", "Date": "2017-10-03T13:35:00Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replace(char,char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(isSensitiveClass(className))) { detectStatusUpdate(modifiedSize, allClassesSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3012/buggy-version/org.intrace.src.org.intrace.agent.ClassTransformer.java", "BodyUseAPI": [], "Fixed commit": "6e0924b2584d37bc709e03462cbeb0b742c79ac7", "Url": "https://api.github.com/repos/mchr3k/org.intrace", "Date": "2011-05-21T09:01:10Z"},
{"Line": "=>697", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((lastImage.position) + (lastImage.length)) >= (in.length())) { in.seek(((lastImage.position) + 16)); }else { in.seek(((lastImage.position) + (lastImage.length))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3171/buggy-version/components.formats-gpl.src.loci.formats.in.NativeND2Reader.java", "BodyUseAPI": ["loci.formats.in.NativeND2Reader.seek(long)", "loci.formats.in.NativeND2Reader.seek(long)"], "Fixed commit": "a8d2e098a34af498c805f063089278d74d905d3d", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2017-08-26T00:01:20Z"},
{"Line": "=>1137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((imageOffsets.get(i)) - length) != (offsetDiff + 8)) { if (i == 0) { fixByteCounts = true; } imageOffsets.remove(i); imageLengths.remove(i); i--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3171/buggy-version/components.formats-gpl.src.loci.formats.in.NativeND2Reader.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Long>.remove(int)", "java.util.ArrayList<int[]>.remove(int)"], "Fixed commit": "a8d2e098a34af498c805f063089278d74d905d3d", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2017-08-26T00:01:20Z"},
{"Line": "=>765", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (quoted) { com.ugos.jiprolog.engine.Atom atom1 = com.ugos.jiprolog.engine.Atom.createAtom(curOp.getName()); termStack.push(atom1); lastObj = null; }else throw new com.ugos.jiprolog.engine.JIPSyntaxErrorException(m_strFileName, ((m_lnReader.getLineNumber()) + 1), ((\"unexpected_term(\" + (curOp.getName())) + \")\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8330/buggy-version/src.com.ugos.jiprolog.engine.PrologParser.java", "BodyUseAPI": [], "Fixed commit": "2c07b66ddaa4531a337f40e070c5b400ebae770a", "Url": "https://api.github.com/repos/jiprolog/jiprolog", "Date": "2015-04-28T10:13:55Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (body != null) { wr.write(body); wr.flush(); }else { wr.flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8273/buggy-version/src.org.rapla.rest.client.HTTPConnector.java", "BodyUseAPI": ["java.io.Writer.write(java.lang.String)"], "Fixed commit": "ad15bf4b0f23337e4214bfb74490477897d3ce93", "Url": "https://api.github.com/repos/rapla/rapla", "Date": "2014-05-12T12:38:37Z"},
{"Line": "=>2136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tradingdays.getTradingdays().isEmpty())) { for (org.trade.persistent.dao.Tradingday tradingday : tradingdays.getTradingdays()) { tradingdayPanel.doRefresh(tradingday); } tradingdayPanel.doRefreshTradingdayTable(tradingdays.getTradingdays().get(((tradingdays.getTradingdays().size()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3337/buggy-version/trade.src.org.trade.ui.TradeMainControllerPanel.java", "BodyUseAPI": ["org.trade.persistent.dao.Tradingdays.getTradingdays()", "org.trade.ui.tradingday.TradingdayPanel.doRefreshTradingdayTable(tradingdays.getTradingdays().get(((tradingdays.getTradingdays().size()) - 1)))", "org.trade.persistent.dao.Tradingdays.getTradingdays()", "org.trade.persistent.dao.Tradingdays.getTradingdays()", "tradingdays.getTradingdays().get(((tradingdays.getTradingdays().size()) - 1))", "tradingdays.getTradingdays().size()"], "Fixed commit": "0f2a37e7e34f83a1ff22aa116bc196c06c822d7e", "Url": "https://api.github.com/repos/trade-manager/trade-manager", "Date": "2015-04-13T16:47:26Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.firebase.client.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (spot == false) { ucsd.cse110fa16.group14.ipark.CountDownCheckOut.parkingspots.push(uname); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1469/buggy-version/app.src.main.java.ucsd.cse110fa16.group14.ipark.CountDownCheckOut.java", "BodyUseAPI": [], "Fixed commit": "5c9f127f6b370917665c962418bff5a8cdc1b2b4", "Url": "https://api.github.com/repos/peternmai/iPark", "Date": "2016-11-04T02:33:54Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (note.equals(\"-\")) gsingh.learnkirtan.Parser.stop = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/954/buggy-version/src.gsingh.learnkirtan.Parser.java", "BodyUseAPI": [], "Fixed commit": "7064f2d6d09b57cb64534c3e029ff4e6cb19fb6b", "Url": "https://api.github.com/repos/gsingh93/Learn-Kirtan", "Date": "2012-03-29T20:11:36Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clip) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1452/buggy-version/VirtualCommando.src.main.java.me.martin.radev.game.virtualcommando.sound.SoundEffect.java", "BodyUseAPI": [], "Fixed commit": "0f8b630d85a68e79ae9d7f29ad10b3ddb46d7683", "Url": "https://api.github.com/repos/martinradev/2dShooter", "Date": "2014-05-02T13:07:34Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hour > 12) newTime = 5 - (hour - 24); else newTime = 5 - hour;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2366/buggy-version/app.src.main.java.me.jaxbot.wear.leafstatus.UpdateCarwingsService.java", "BodyUseAPI": [], "Fixed commit": "7009707ff3c8d1a29652befdc54a8b3de92af738", "Url": "https://api.github.com/repos/jaxbot/wear-LeafStatus", "Date": "2014-11-15T21:04:02Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (declObj == null) { parser.SemErr(\"parameter not declared\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8403/buggy-version/src.at.jku.ssw.cmm.compiler.Tab.java", "BodyUseAPI": [], "Fixed commit": "500885e6825b14b723510db5c6370201e730f34e", "Url": "https://api.github.com/repos/fabian1995/CMM", "Date": "2014-07-21T09:15:21Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.todoroo.astrid.activity.TaskListActivity.getTagUpdatesFragment()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (tuf != null) tuf.getView().setVisibility(View.INVISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5451/buggy-version/astrid.src.com.todoroo.astrid.activity.TaskListActivity.java", "BodyUseAPI": ["com.todoroo.astrid.actfm.TagUpdatesFragment.getView()", "tuf.getView().setVisibility(View.INVISIBLE)"], "Fixed commit": "84d55eeb322e7a9886fb42d385b1437a3c5f8f3e", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2012-08-22T01:37:00Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.todoroo.astrid.activity.TaskListActivity.getTagUpdatesFragment()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (tuf != null) tuf.getView().setVisibility(View.VISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5451/buggy-version/astrid.src.com.todoroo.astrid.activity.TaskListActivity.java", "BodyUseAPI": ["com.todoroo.astrid.actfm.TagUpdatesFragment.getView()", "tuf.getView().setVisibility(View.VISIBLE)"], "Fixed commit": "84d55eeb322e7a9886fb42d385b1437a3c5f8f3e", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2012-08-22T01:37:00Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vertxRequest.headers().get(HttpHeaders.HOST)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((hostAndPort != null) && (!(hostAndPort.isEmpty()))) { java.lang.String[] parts = hostAndPort.split(\":\"); java.lang.String host = parts[0]; int port = ((parts.length) > 1) ? java.lang.Integer.valueOf(parts[1]) : -1; if ((!(host.equalsIgnoreCase(absoluteUri.getHost()))) || (port != (absoluteUri.getPort()))) { absoluteUri = javax.ws.rs.core.UriBuilder.fromUri(absoluteUri).host(host).port(port).build(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7527/buggy-version/vertx-mod-jersey.src.main.java.com.englishtown.vertx.jersey.impl.DefaultJerseyHandler.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "9106e221909fba19ffa612e6acdd9e3fb0a661ac", "Url": "https://api.github.com/repos/englishtown/vertx-mod-jersey", "Date": "2014-05-15T05:51:57Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ttaylorr.uhc.pvp.PVPManagerPlugin.getPermission()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (permission.playerInGroup(player, gameMode.getPermissionGroup())) permission.playerRemoveGroup(player, gameMode.getPermissionGroup());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3652/buggy-version/src.main.java.com.ttaylorr.uhc.pvp.core.UserManager.java", "BodyUseAPI": ["net.milkbowl.vault.permission.Permission.playerRemoveGroup(org.bukkit.entity.Player,gameMode.getPermissionGroup())", "com.ttaylorr.uhc.pvp.core.gamemodes.GameMode.getPermissionGroup()"], "Fixed commit": "8be6a8b835f6afe2df0de562ad3bcd0395d83ef3", "Url": "https://api.github.com/repos/UltrahardcoreStats/PVPManager", "Date": "2014-01-21T18:26:39Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (model)) { model.setNsPrefix(\"OBO\", org.eol.globi.export.LittleTurtleExporter.OBO_PREFIX); model.setNsPrefix(\"EOL\", \"http://eol.org/pages/\"); model.write(w, \"TURTLE\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1881/buggy-version/eol-globi-data-tool.src.main.java.org.eol.globi.export.LittleTurtleExporter.java", "BodyUseAPI": [], "Fixed commit": "2f74635a842996c4a4ae2fbfb8f21b183c5e90e0", "Url": "https://api.github.com/repos/jhpoelen/eol-globi-data", "Date": "2014-07-26T16:40:11Z"},
{"Line": "=>518", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_columnIndex) == (_columnCount)) { next = next.trim(); if ((next.length()) == 0) { return _handleNextEntry(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6653/buggy-version/src.main.java.com.fasterxml.jackson.dataformat.csv.CsvParser.java", "BodyUseAPI": [], "Fixed commit": "3821efd076cadec55814c759100ba3179f826298", "Url": "https://api.github.com/repos/FasterXML/jackson-dataformat-csv", "Date": "2012-03-15T03:40:34Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(tag.equals(com.ncatz.chronosport.Home_Activity.CHRONO_LIST_TAG))) && stack) ft.addToBackStack(tag);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3888/buggy-version/app.src.main.java.com.ncatz.chronosport.Home_Activity.java", "BodyUseAPI": ["android.support.v4.app.FragmentTransaction.addToBackStack(java.lang.String)"], "Fixed commit": "eeceeb1a7bb8bdaac31635b18a4ddbb4ad741dd9", "Url": "https://api.github.com/repos/nCatz/ChronoSport", "Date": "2017-02-05T16:32:04Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (set.next()) { count = set.getInt(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3796/buggy-version/JavaAir.src.java_air.database.DataClient.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(int)"], "Fixed commit": "6b7726a592133211109cd1487ea2a9a76a192f38", "Url": "https://api.github.com/repos/aerxleben/JavaAir", "Date": "2016-12-02T22:40:44Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (osemIndex == 1) osemspeedup = getMinOverlappingViews(); else if (osemIndex == 2) osemspeedup = getAvgOverlappingViews();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1246/buggy-version/src.main.java.spim.process.fusion.deconvolution.ProcessForDeconvolution.java", "BodyUseAPI": [], "Fixed commit": "1f926607660fddc67c28e428748a4f7b09d6e9a0", "Url": "https://api.github.com/repos/fiji/spimreconstruction", "Date": "2014-04-25T12:48:54Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.runtime.Platform.getPlugin(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (plugin != null) { org.eclipse.jface.dialogs.IDialogSettings settings = ((org.eclipse.ui.plugin.AbstractUIPlugin) (plugin)).getDialogSettings(); java.lang.String className = \"org.eclipse.ui.internal.views.log.LogView\"; if ((settings.getSection(className)) == null) { settings = settings.addNewSection(className); }else { settings = settings.getSection(className); } settings.put(\"info\", false); settings.put(\"ok\", false); settings.put(\"warning\", true); settings.put(\"error\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8544/buggy-version/UI.org.eclipse.birt.report.designer.ui.ide.src.org.eclipse.birt.report.designer.ui.ReportPerspective.java", "BodyUseAPI": [], "Fixed commit": "c0ba24364ea969a3b078ab037ba535516d064f6c", "Url": "https://api.github.com/repos/FreemanZhang/birt", "Date": "2016-05-23T21:18:01Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.netty.buffer.ByteBuf.readInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (commandId == (com.cloudhopper.smpp.SmppConstants.CMD_ID_UNBIND)) { pdu = new com.cloudhopper.smpp.transcoder.Unbind(); }else if (commandId == (com.cloudhopper.smpp.SmppConstants.CMD_ID_SUBMIT_MULTI)) { pdu = new com.cloudhopper.smpp.transcoder.SubmitMulti(); }else { pdu = new com.cloudhopper.smpp.transcoder.PartialPdu(commandId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2025/buggy-version/src.main.java.com.cloudhopper.smpp.transcoder.DefaultPduTranscoder.java", "BodyUseAPI": [], "Fixed commit": "ac22633f3d61e73cf048cdc7c57fff328eff1176", "Url": "https://api.github.com/repos/vetss/cloudhopper-smpp", "Date": "2013-06-09T08:31:22Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.netty.buffer.ByteBuf.readInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (commandId == (com.cloudhopper.smpp.SmppConstants.CMD_ID_GENERIC_NACK)) { pdu = new com.cloudhopper.smpp.transcoder.GenericNack(); }else if (commandId == (com.cloudhopper.smpp.SmppConstants.CMD_ID_SUBMIT_MULTI_RESP)) { pdu = new com.cloudhopper.smpp.transcoder.SubmitMultiResp(); }else { pdu = new com.cloudhopper.smpp.transcoder.PartialPduResp(commandId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2025/buggy-version/src.main.java.com.cloudhopper.smpp.transcoder.DefaultPduTranscoder.java", "BodyUseAPI": [], "Fixed commit": "ac22633f3d61e73cf048cdc7c57fff328eff1176", "Url": "https://api.github.com/repos/vetss/cloudhopper-smpp", "Date": "2013-06-09T08:31:22Z"},
{"Line": "=>906", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fos) != null) fos.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5722/buggy-version/hornetq-core.src.main.java.org.hornetq.core.replication.ReplicationEndpoint.java", "BodyUseAPI": [], "Fixed commit": "f4f0e4c0ad4ac5c1d2979856ea12ce00bf4d1d6e", "Url": "https://api.github.com/repos/clebertsuconic/hornetq", "Date": "2012-09-12T10:48:13Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((searchInputDTO.getStartIndex()) == 0) { sendNotification(searchInputDTO, searchResultDTO, TagDishDomainConstant.SEARCH_NOTIFY_TYPE); }else { sendNotification(searchInputDTO, searchResultDTO, TagDishDomainConstant.MORE_RESULTS_NOTIFY_TYPE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8206/buggy-version/src.main.java.com.tagdish.service.impl.DishService.java", "BodyUseAPI": ["com.tagdish.service.impl.DishService.sendNotification(com.tagdish.domain.dto.search.SearchInputDTO,com.tagdish.domain.dto.search.SearchResultDTO,TagDishDomainConstant.MORE_RESULTS_NOTIFY_TYPE)", "com.tagdish.service.impl.DishService.sendNotification(com.tagdish.domain.dto.search.SearchInputDTO,com.tagdish.domain.dto.search.SearchResultDTO,TagDishDomainConstant.SEARCH_NOTIFY_TYPE)"], "Fixed commit": "e55bfcf9e29662fa4ecc530f423b149acec5fdfa", "Url": "https://api.github.com/repos/TagDish/TagDishServing", "Date": "2015-10-17T00:53:18Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bodyBranch) { cond.evaluate(lattice, bodyBranch); return signsLattice; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/9145/buggy-version/analysis_tool.src.syntaxtree.statement.While.java", "BodyUseAPI": ["syntaxtree.condition.Condition.evaluate(analysis.lattices.SignsLattice,java.lang.Boolean)"], "Fixed commit": "12f8638fe4234e7b70323a9be9b15bdf9c5f027a", "Url": "https://api.github.com/repos/rostgaard/02242", "Date": "2013-11-30T20:27:54Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context) instanceof fr.gouv.etalab.mastodon.activities.BaseMainActivity) { ((fr.gouv.etalab.mastodon.activities.BaseMainActivity) (context)).setBookmark(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7998/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.fragments.DisplayStatusFragment.java", "BodyUseAPI": [], "Fixed commit": "5f498a51fad56877e2cd42dcb2759d53008e8b57", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-12-07T06:29:54Z"},
{"Line": "=>853", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (search.equals(\"\")) { search = \"a\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4021/buggy-version/src.sample.Controller.java", "BodyUseAPI": [], "Fixed commit": "9a0689156e8472e2ad997bba01f9d033b1616d24", "Url": "https://api.github.com/repos/pookee/JAVAFX-IMDB-API-XML", "Date": "2015-12-11T13:02:54Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((childrenFolder.exists()) && (childrenFolder.isDirectory())) { if (com.freak.videosenfants.activities.BrowseSDActivity.DEBUG) { android.util.Log.i(com.freak.videosenfants.activities.BrowseSDActivity.TAG, (\"New root added: \" + (childrenFolder.getAbsolutePath()))); } result.add(childrenFolder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3401/buggy-version/app.src.main.java.com.freak.videosenfants.activities.BrowseSDActivity.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,java.lang.String)", "java.io.File.getAbsolutePath()", "java.util.Vector<java.io.File>.add(java.io.File)"], "Fixed commit": "c99dcc1615a44dd136fe5de2d15efc4f290bdde3", "Url": "https://api.github.com/repos/Pilou44/VideosEnfants", "Date": "2016-10-18T08:51:45Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.command.Message.getOriginalDestination()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (origDest != null) { org.apache.activemq.util.ByteSequence origDestBytes = marshaller.marshal(origDest); origDestBytes.compact(); coreMessage.putBytesProperty(org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.AMQ_MSG_ORIG_DESTINATION, origDestBytes.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8087/buggy-version/artemis-protocols.artemis-openwire-protocol.src.main.java.org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.java", "BodyUseAPI": ["org.apache.activemq.wireformat.WireFormat.marshal(org.apache.activemq.command.ActiveMQDestination)"], "Fixed commit": "3c2e7d8d288a1e324709ffc2bedc53a9d7bb4e11", "Url": "https://api.github.com/repos/apache/activemq-artemis", "Date": "2016-02-18T12:52:32Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (metricValue instanceof java.lang.Double) { metricWriter.printMetric(java.lang.String.valueOf(java.lang.Math.round(((java.lang.Double) (metricValue))))); }else if (metricValue instanceof java.lang.Float) { metricWriter.printMetric(java.lang.String.valueOf(java.lang.Math.round(((java.lang.Float) (metricValue))))); }else { metricWriter.printMetric(java.lang.String.valueOf(metricValue)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1367/buggy-version/src.main.java.com.appdynamics.monitors.hbase.HBaseMonitor.java", "BodyUseAPI": ["com.singularity.ee.agent.systemagent.api.MetricWriter.printMetric(java.lang.String)", "java.lang.String.valueOf(java.lang.Object)"], "Fixed commit": "cd23a00650778ca9b9fcb4f83bcd3094a2ea0e98", "Url": "https://api.github.com/repos/Appdynamics/hbase-monitoring-extension", "Date": "2013-11-06T02:28:51Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<javax.management.MBeanAttributeInfo, java.lang.Object>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (val instanceof java.lang.Number) { java.lang.String metricName = getTileCase(attributeName, true); if ((metricName != null) && (!(metricName.equals(\"\")))) { printMetric((\"Activity|\" + (getTileCase(metricName, true))), metric.getValue(), MetricWriter.METRIC_AGGREGATION_TYPE_OBSERVATION, MetricWriter.METRIC_TIME_ROLLUP_TYPE_CURRENT, MetricWriter.METRIC_CLUSTER_ROLLUP_TYPE_COLLECTIVE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1367/buggy-version/src.main.java.com.appdynamics.monitors.hbase.HBaseMonitor.java", "BodyUseAPI": [], "Fixed commit": "cd23a00650778ca9b9fcb4f83bcd3094a2ea0e98", "Url": "https://api.github.com/repos/Appdynamics/hbase-monitoring-extension", "Date": "2013-11-06T02:28:51Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tileWord.length()) >= 1) { tileCase += ((java.lang.Character.toUpperCase(tileWord.charAt(0))) + (tileWord.substring(1))) + \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1367/buggy-version/src.main.java.com.appdynamics.monitors.hbase.HBaseMonitor.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.Character.toUpperCase(char)", "java.lang.String.charAt(int)"], "Fixed commit": "cd23a00650778ca9b9fcb4f83bcd3094a2ea0e98", "Url": "https://api.github.com/repos/Appdynamics/hbase-monitoring-extension", "Date": "2013-11-06T02:28:51Z"},
{"Line": "=>784", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["free.yhc.netmbuddy.model.YTPlayer.getActiveVideo()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == video) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4080/buggy-version/src.free.yhc.netmbuddy.model.YTPlayerUI.java", "BodyUseAPI": [], "Fixed commit": "d72612db8c3d0d942279dc494d09897e6e815075", "Url": "https://api.github.com/repos/yhcting/netmbuddy", "Date": "2013-05-19T12:40:59Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.waveprotocol.wave.model.adt.ObservableBasicMap<java.lang.String, org.swellrt.beta.model.wave.mutable.SWaveNode>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((nr.getSubstrateId()) != null) { getNodeManager().deleteFromStore(nr); getNodeManager().emptySubstrate(nr.getSubstrateId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2763/buggy-version/wave.src.main.java.org.swellrt.beta.model.wave.mutable.SWaveMap.java", "BodyUseAPI": ["getNodeManager().deleteFromStore(org.swellrt.beta.model.wave.mutable.SWaveNode)", "org.swellrt.beta.model.wave.mutable.SWaveNode.getSubstrateId()", "getNodeManager().emptySubstrate(nr.getSubstrateId())"], "Fixed commit": "e2cea640adf55cf05c7d4310b87d500c931d68b6", "Url": "https://api.github.com/repos/Grasia/swellrt", "Date": "2017-09-21T19:12:44Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uip != (mars.riscv.hardware.ControlAndStatusRegisterFile.getValueNoNotify(\"uip\"))) { mars.riscv.hardware.ControlAndStatusRegisterFile.updateRegister(\"uip\", uip); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6249/buggy-version/mars.simulator.Simulator.java", "BodyUseAPI": ["mars.riscv.hardware.ControlAndStatusRegisterFile.updateRegister(java.lang.String,int)"], "Fixed commit": "a17124dca5fc5d073342e1c28b2d158a2fffa845", "Url": "https://api.github.com/repos/TheThirdOne/rars", "Date": "2017-07-25T03:20:25Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentState) == (org.cryse.widget.persistentsearch.PersistentSearchView.SearchViewState.TOOLBAR_BACKARROW)) { stateFromToolbarToEditing(); }else if ((mCurrentState) == (org.cryse.widget.persistentsearch.PersistentSearchView.SearchViewState.SEARCH)) { stateFromSearchToEditing(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3969/buggy-version/persistentsearchview.src.main.java.org.cryse.widget.persistentsearch.PersistentSearchView.java", "BodyUseAPI": [], "Fixed commit": "4e8727a3c3dd356bb6f6706765c611c4e15cf748", "Url": "https://api.github.com/repos/crysehillmes/PersistentSearchView", "Date": "2015-08-20T12:50:55Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tag.hasKey(\"playerName\")) { playerName = tag.getString(\"playerName\"); tag.removeTag(\"playerName\"); }else { java.lang.String uuid = tag.getString(\"playerUUID\"); playerName = (uuid.equals(\"\")) ? \"\" : net.minecraftforge.common.UsernameCache.getLastKnownUsername(java.util.UUID.fromString(uuid)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6750/buggy-version/src.main.java.me.ichun.mods.sync.common.tileentity.TileEntityDualVertical.java", "BodyUseAPI": ["net.minecraft.nbt.NBTTagCompound.removeTag(java.lang.String)", "net.minecraft.nbt.NBTTagCompound.getString(java.lang.String)", "net.minecraft.nbt.NBTTagCompound.getString(java.lang.String)"], "Fixed commit": "54003894bb8c643c4674e1753a13186d27246eae", "Url": "https://api.github.com/repos/ichttt/Sync", "Date": "2017-07-24T16:14:57Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cabanas.garcia.ismael.opportunity.repository.InMemoryUserRepository.read(updateUser.getUsername())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (user.isPresent()) { cabanas.garcia.ismael.opportunity.model.User userFounded = user.get(); cabanas.garcia.ismael.opportunity.model.User userUpdated = cabanas.garcia.ismael.opportunity.model.User.builder().username(userFounded.getUsername()).password(userFounded.getPassword()).roles(updateUser.getRoles()).build(); repository.put(userFounded.getUsername(), userUpdated); return userUpdated; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/9019/buggy-version/src.main.java.cabanas.garcia.ismael.opportunity.repository.InMemoryUserRepository.java", "BodyUseAPI": ["java.util.Optional<cabanas.garcia.ismael.opportunity.model.User>.get()"], "Fixed commit": "9c298bab896565dccf9a71d4981ef83eaaecf151", "Url": "https://api.github.com/repos/ismaelcabanas/test-web-application", "Date": "2017-03-13T13:05:50Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MotionEvent.findPointerIndex(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (pointIndex != (-1)) { onMotionMove(event.getX(pointIndex), event.getY(pointIndex)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/40/buggy-version/app.src.main.java.com.derek.android.MotionHandler.java", "BodyUseAPI": ["com.derek.android.MotionHandler.onMotionMove(event.getX(pointIndex),event.getY(pointIndex))", "android.view.MotionEvent.getX(int)", "android.view.MotionEvent.getY(int)"], "Fixed commit": "a9b5a2f7e23bdb871a99c459063562a671202e97", "Url": "https://api.github.com/repos/x6uderek/rubik", "Date": "2015-04-21T05:26:04Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<T>.size()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (n > (outputsCount)) { final int nPerOutput = n / (outputsCount); int nextFrom = 0; for (int i = 0; i < (outputsCount); i++) { nextOutput = getNextOutput(); nextFrom += nextOutput.put(buffer, nextFrom, (nextFrom + nPerOutput)); } if (nextFrom < n) { nextOutput = getNextOutput(); nextFrom += nextOutput.put(buffer, nextFrom, n); } return nextFrom; }else { for (int i = 0; i < n; i++) { nextOutput = getNextOutput(); if (!(nextOutput.put(buffer.get(i)))) { return i; } } return n; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6514/buggy-version/common.src.main.java.com.emc.mongoose.common.io.collection.RoundRobinOutput.java", "BodyUseAPI": ["com.emc.mongoose.common.io.Output<T>.put(java.util.List<T>,int,int)"], "Fixed commit": "b1ee13809e8c09f1ffb57f5d5343b8d59b54575e", "Url": "https://api.github.com/repos/emc-mongoose/mongoose", "Date": "2017-01-17T19:48:52Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataAccessor.isTxActive()) return dataAccessor.getAppProperty(id);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7801/buggy-version/src.main.java.com.pratilipi.data.DataAccessorWithMemcache.java", "BodyUseAPI": ["com.pratilipi.data.DataAccessor.getAppProperty(java.lang.String)"], "Fixed commit": "58745ac5ccb45b6df72f9254c75c1560e147dc03", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2015-07-25T15:32:58Z"},
{"Line": "=>803", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCallback) != null) mCallback.onPlaybackStatusChanged(mState);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1657/buggy-version/nuclei-android.src.main.java.nuclei.media.playback.ExoPlayerPlayback.java", "BodyUseAPI": [], "Fixed commit": "bde0b1bd16378f286907c0fa729058a1d3773336", "Url": "https://api.github.com/repos/lifechurch/nuclei-android", "Date": "2017-02-09T22:17:53Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (idcService == null) { at.o2xfs.xfs.service.util.ExceptionUtil.nullArgument(\"idcService\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5533/buggy-version/at.o2xfs.xfs.service.src.at.o2xfs.xfs.service.cmd.idc.IDCResetCommand.java", "BodyUseAPI": [], "Fixed commit": "45ba0418ac1134bd0f3deec31eb625bc87713fe6", "Url": "https://api.github.com/repos/AndreasFagschlunger/O2Xfs", "Date": "2012-07-21T17:10:55Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mSplitBuchung) != null) { mSplitBuchung.setCashUmsatz(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1244/buggy-version/app.src.main.java.de.aw.gv.CashUmsatz.java", "BodyUseAPI": [], "Fixed commit": "c7cc0265b0c112d2058f2099c38d4faa3354b232", "Url": "https://api.github.com/repos/gitwalex/MonMa", "Date": "2015-12-13T15:18:23Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tryAdvanceChunkIndex()) { createDataInputReader(); }else if (!(readNextRegionChunks())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2714/buggy-version/src.main.java.com.pingcap.tikv.operation.DAGIterator.java", "BodyUseAPI": [], "Fixed commit": "f0a2d61d8b5ae7efad1ccc9f2e040c0814a41951", "Url": "https://api.github.com/repos/Novemser/tikv-client-lib-java", "Date": "2017-11-01T06:28:24Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(mPackageInfo.applicationInfo.processName)) { mPackageInfo.applicationInfo.processName = mPackageInfo.applicationInfo.packageName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7636/buggy-version/replugin-host-library.replugin-host-lib.src.main.java.com.qihoo360.loader2.Loader.java", "BodyUseAPI": [], "Fixed commit": "529a446f02731dd8a96a37ab40a7dcd95698bf83", "Url": "https://api.github.com/repos/kevinfen9/RePlugin", "Date": "2017-09-20T02:58:21Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.bukkit.Bukkit.isPrimaryThread()) { futureTask.run(); }else { org.bukkit.Bukkit.getScheduler().runTask(net.aufdemrand.denizen.utilities.DenizenAPI.getCurrentInstance(), futureTask); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3732/buggy-version/src.main.java.net.aufdemrand.denizen.utilities.packets.intercept.PacketOutHandler.java", "BodyUseAPI": [], "Fixed commit": "0ff373ff48c1fc85f34c92ab996d74943dc4aabb", "Url": "https://api.github.com/repos/DenizenScript/Denizen-For-Bukkit", "Date": "2016-04-05T23:41:45Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getView()) != null) { android.support.design.widget.Snackbar.make(getView(), R.string.magic_link_unavailable_error_message, Snackbar.LENGTH_SHORT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1395/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.accounts.login.MagicLinkRequestFragment.java", "BodyUseAPI": [], "Fixed commit": "41668c91ca6a9b6f82370eda779c065fc547757e", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2017-03-27T11:58:32Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((inStream) == null) throw new com.orientechnologies.common.exception.OException(\"Cannot access to the input stream. Check permissions of running process\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7092/buggy-version/core.src.main.java.com.orientechnologies.common.console.TTYConsoleReader.java", "BodyUseAPI": [], "Fixed commit": "bec57b29f178e42162df65d541d0f3b8dea12530", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-02-04T23:16:18Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(initialized)) { initialized = true; addDefaultProcessors(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1865/buggy-version/MyJojoXUtils.src.de.johmat.myjojox.utils.log.Logger.java", "BodyUseAPI": [], "Fixed commit": "6bca2a8ea2730774b6073ba26fbb2a5c874a3d53", "Url": "https://api.github.com/repos/MyJojoX/MyJojoXUtils", "Date": "2017-06-24T08:14:01Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(configFile.exists())) { throw new java.lang.RuntimeException(java.lang.String.format(\"Thrift client config file does not exist: %s\", filePath)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4841/buggy-version/components.org.apache.stratos.common.src.main.java.org.apache.stratos.common.statistics.publisher.ThriftClientConfigParser.java", "BodyUseAPI": [], "Fixed commit": "d106da8a4cbd4650d90807736fdc9318c0ea977c", "Url": "https://api.github.com/repos/apache/stratos", "Date": "2015-01-31T18:55:11Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<org.mcstats.model.Column, org.mcstats.generator.GeneratedData>.getValue()", "java.util.Map.Entry<org.mcstats.model.Column, org.mcstats.generator.GeneratedData>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((column == null) || (columnData == null)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5540/buggy-version/src.main.java.org.mcstats.cron.CronGraphGenerator.java", "BodyUseAPI": [], "Fixed commit": "6be7188e6bd56e4fb9fda3dde7e204f76e7ed294", "Url": "https://api.github.com/repos/MCStats/telemetry-server", "Date": "2014-12-22T17:44:36Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((queryBond.getFlag(CDKConstants.ISAROMATIC)) && (targetBond.getFlag(CDKConstants.ISAROMATIC))) { return true; }else if ((!(queryBond.getFlag(CDKConstants.ISAROMATIC))) && (!(targetBond.getFlag(CDKConstants.ISAROMATIC)))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5144/buggy-version/src.org.openscience.smsd.algorithm.matchers.DefaultBondMatcher.java", "BodyUseAPI": ["org.openscience.cdk.interfaces.IBond.getFlag(CDKConstants.ISAROMATIC)", "org.openscience.cdk.interfaces.IBond.getFlag(CDKConstants.ISAROMATIC)"], "Fixed commit": "bd5afb4b6824eda614ce754d5258da826fa2d151", "Url": "https://api.github.com/repos/asad/SMSD", "Date": "2014-07-25T17:09:07Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((queryBond) != null) && (targetBond != null)) && (!(isBondMatchFlag()))) && (!(isShouldMatchRings()))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5144/buggy-version/src.org.openscience.smsd.algorithm.matchers.DefaultBondMatcher.java", "BodyUseAPI": [], "Fixed commit": "bd5afb4b6824eda614ce754d5258da826fa2d151", "Url": "https://api.github.com/repos/asad/SMSD", "Date": "2014-07-25T17:09:07Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["webpageAddressInput.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(webpageAddress.startsWith(\"http://\"))) { webpageView.loadUrl((\"http://\" + webpageAddress)); }else { webpageView.loadUrl(webpageAddress); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/764/buggy-version/AndroidWebpagesCrawler.src.edu.uz.crawler.view.main.fragments.navigator.WebpagesNavigatorHandler.java", "BodyUseAPI": ["android.webkit.WebView.loadUrl(java.lang.String)", "android.webkit.WebView.loadUrl(java.lang.String)"], "Fixed commit": "33c0e63b2d9baacea95cf932bafa54612a3af3c2", "Url": "https://api.github.com/repos/dawidsamolyk/Android-Crawler", "Date": "2015-06-19T19:37:11Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tivoInfo.isSuggestion)) { series.isSuggestion.changeValue(tivoInfo.isSuggestion); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4793/buggy-version/src.com.mayhew3.gamesutil.tv.TiVoCommunicator.java", "BodyUseAPI": ["series.isSuggestion.changeValue(tivoInfo.isSuggestion)"], "Fixed commit": "13a12e29e652604dfdba6e80eaa9f4505697222f", "Url": "https://api.github.com/repos/mayhew3/MediaMogulData", "Date": "2016-09-21T03:13:18Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.geowe.client.local.layermanager.tool.export.ExportDataTool.getSelectedLayer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((layer.getSource()) != null) { org.geowe.client.local.layermanager.tool.create.vector.source.GitHubLayerVectorSource source = ((org.geowe.client.local.layermanager.tool.create.vector.source.GitHubLayerVectorSource) (layer.getSource())); if (((source.getSha()) != null) && (!(source.getSha().isEmpty()))) { gitHubParameter.setSha(source.getSha()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6834/buggy-version/src.main.java.org.geowe.client.local.layermanager.tool.export.ExportDataTool.java", "BodyUseAPI": ["org.geowe.client.local.model.vector.VectorLayer.getSource()"], "Fixed commit": "d40fe57a79545167389e4ac9d166d4ba947f4cd6", "Url": "https://api.github.com/repos/jmmluna/geowe-core", "Date": "2016-12-15T08:56:34Z"},
{"Line": "=>650", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (remaining > 0) { java.util.Map<co.cask.cdap.proto.id.ProgramRunId, co.cask.cdap.internal.app.store.RunRecordMeta> newRecords = getHistoricalRuns(key, status, startTime, endTime, remaining, new co.cask.cdap.internal.app.store.AppMetadataStore.AppVersionPredicate(co.cask.cdap.proto.id.ApplicationId.DEFAULT_VERSION), filter); oldRecords.putAll(newRecords); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2855/buggy-version/cdap-app-fabric.src.main.java.co.cask.cdap.internal.app.store.AppMetadataStore.java", "BodyUseAPI": ["co.cask.cdap.internal.app.store.AppMetadataStore.getHistoricalRuns(co.cask.cdap.data2.dataset2.lib.table.MDSKey,co.cask.cdap.proto.ProgramRunStatus,long,long,int,co.cask.cdap.internal.app.store.AppMetadataStore.AppVersionPredicate,com.google.common.base.Predicate<co.cask.cdap.internal.app.store.RunRecordMeta>)"], "Fixed commit": "36b77e05962b653edf93d3d4b10a477b45b61ff9", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2017-04-14T00:25:50Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(mWidth.getText().toString())", "java.lang.Integer.parseInt(mHeight.getText().toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((rWidth > 25) || (rHeight > 25)) { android.widget.Toast.makeText(this, \"Out of bounds. Width and Height can't be more than 25.\", Toast.LENGTH_LONG).show(); }else { deleteBoard(); boardWidth = rWidth; boardHeight = rHeight; numOfMines = rNumOfMines; createBoard(boardWidth, boardHeight); mBuilder.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7974/buggy-version/app.src.main.java.com.jrstudios.gamesuite.Mines.java", "BodyUseAPI": [], "Fixed commit": "e4c34536c00f186099211111a587d76e67e98ca8", "Url": "https://api.github.com/repos/Gl4dius/GameSuite", "Date": "2017-11-11T19:26:31Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (depth == 16) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7974/buggy-version/app.src.main.java.com.jrstudios.gamesuite.Mines.java", "BodyUseAPI": [], "Fixed commit": "e4c34536c00f186099211111a587d76e67e98ca8", "Url": "https://api.github.com/repos/Gl4dius/GameSuite", "Date": "2017-11-11T19:26:31Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (fileType == null) { fileType = \"audio/mpeg\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/941/buggy-version/src.ShareServer.java", "BodyUseAPI": [], "Fixed commit": "6613db9877b8fa0185c534c0f3c0a1895faf56e8", "Url": "https://api.github.com/repos/mineikis/ShareServer", "Date": "2016-03-24T06:39:25Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((det == 0) && parallelBad) { return true; }else if (det == 0) { return false; }else { double xIntersect = (((lhs.bEq) * (this.cEq)) - ((this.bEq) * (lhs.cEq))) / det; double yIntersect = (((this.aEq) * (lhs.cEq)) - ((lhs.aEq) * (this.cEq))) / det; return (this.pointOnLine(xIntersect, yIntersect)) && (lhs.pointOnLine(xIntersect, yIntersect)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4286/buggy-version/src.Edge.java", "BodyUseAPI": [], "Fixed commit": "d2158c79a1f22063c7757b9da1c1530983273fa0", "Url": "https://api.github.com/repos/pretzilz/mpvga-gen", "Date": "2017-04-07T03:49:52Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!activity) { mSwipeRefreshLayout.postDelayed(new java.lang.Runnable() { @java.lang.Override public void run() { mSwipeRefreshLayout.setRefreshing(false); } }, 1000); }else { mSwipeRefreshLayout.post(new java.lang.Runnable() { @java.lang.Override public void run() { mSwipeRefreshLayout.setRefreshing(true); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2660/buggy-version/app.src.main.java.com.jay.gankformvp.ui.MeiziFragment.java", "BodyUseAPI": [], "Fixed commit": "5fd769a9cc253daf7e9caa2dc68d3b8d12949b1e", "Url": "https://api.github.com/repos/zpjayyy/GankForMVP", "Date": "2016-05-23T07:57:17Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSwipeRefreshLayout) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2660/buggy-version/app.src.main.java.com.jay.gankformvp.ui.MeiziFragment.java", "BodyUseAPI": [], "Fixed commit": "5fd769a9cc253daf7e9caa2dc68d3b8d12949b1e", "Url": "https://api.github.com/repos/zpjayyy/GankForMVP", "Date": "2016-05-23T07:57:17Z"},
{"Line": "=>1374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratio.meta.core.statements.SelectStatement.matchWhereColsWithPartitionKeys(com.datastax.driver.core.TableMetadata,java.util.Map<java.lang.String, java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!partialMatched) { matchWhereColsWithClusteringKeys(tableMetadata, whereCols); java.util.Set<java.lang.String> indexedCols = new java.util.HashSet<>(); java.util.Set<java.lang.String> luceneCols = new java.util.HashSet<>(); for (com.stratio.meta.core.metadata.CustomIndexMetadata cim : metadataManager.getTableIndex(tableMetadata)) { if ((cim.getIndexType()) == (IndexType.DEFAULT)) { indexedCols.addAll(cim.getIndexedColumns()); }else { luceneCols.addAll(cim.getIndexedColumns()); } } if ((indexedCols.containsAll(whereCols.keySet())) && (!(containsRelationalOperators(whereCols.values())))) { cassandraPath = true; } cassandraPath = checkWhereColsWithLucene(luceneCols, whereCols, metadataManager, cassandraPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3904/buggy-version/meta-core.src.main.java.com.stratio.meta.core.statements.SelectStatement.java", "BodyUseAPI": [], "Fixed commit": "5885eab02c49754f655697d36438566052758cc6", "Url": "https://api.github.com/repos/Stratio/stratio-meta", "Date": "2014-05-12T12:34:37Z"},
{"Line": "=>1301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((whereCols.size()) == 0) { partialMatched = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3904/buggy-version/meta-core.src.main.java.com.stratio.meta.core.statements.SelectStatement.java", "BodyUseAPI": [], "Fixed commit": "5885eab02c49754f655697d36438566052758cc6", "Url": "https://api.github.com/repos/Stratio/stratio-meta", "Date": "2014-05-12T12:34:37Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((\"ok\".equals(mForm.getClickedType())) && (((mForm.getCollectionInterval()) < 1L) || ((mForm.getCollectionInterval()) > 9999L))) { addCustomActionErrorMessages(getText(\"errors.range\", new java.lang.String[]{ \"Colelction Interval\", \"1\", \"9999\" })); return \"failure\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/491/buggy-version/hq-web.src.main.java.org.hyperic.hq.ui.action.resource.common.monitor.config.ConfigMetricsActionNG.java", "BodyUseAPI": [], "Fixed commit": "07eca6b9c526379b845795edb642899d2ab40ab5", "Url": "https://api.github.com/repos/hyperic/hq", "Date": "2015-11-12T12:38:21Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.DataInputStream.readInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size == (-1)) { return stream.readUTF(); }else { byte[] bytes = new byte[size]; stream.readFully(bytes); return new java.lang.String(bytes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/444/buggy-version/src.jvm.backtype.storm.serialization.SerializationFactory.java", "BodyUseAPI": [], "Fixed commit": "b8bb84c5e4c01f73ca7a013f26d7e6ab5ce8f86b", "Url": "https://api.github.com/repos/derzzle/storm", "Date": "2011-11-09T02:16:38Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((object.length()) <= (SERIALIZATION_LIMIT_SIZE)) { stream.writeInt((-1)); stream.writeUTF(object); }else { byte[] bytes = object.getBytes(); stream.writeInt(bytes.length); stream.write(bytes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/444/buggy-version/src.jvm.backtype.storm.serialization.SerializationFactory.java", "BodyUseAPI": ["java.io.DataOutputStream.writeUTF(java.lang.String)", "java.lang.String.getBytes()"], "Fixed commit": "b8bb84c5e4c01f73ca7a013f26d7e6ab5ce8f86b", "Url": "https://api.github.com/repos/derzzle/storm", "Date": "2011-11-09T02:16:38Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.toFile()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(dir.exists())) { dir.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2984/buggy-version/src.application.GraphVizGenerator.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "a6c96f5d93dca619c2ca539079fcd9e73d1d9f3f", "Url": "https://api.github.com/repos/gilderjw/SwagLagsUMLGenerator", "Date": "2017-02-09T19:43:34Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (j == (args.length)) { this.removeIndex(args, i); }else if (i > j) { args = this.removeIndex(this.removeIndex(args, i), j); }else { args = this.removeIndex(this.removeIndex(args, j), i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2984/buggy-version/src.ArgumentProcessors.RecursionArgumentProcessor.java", "BodyUseAPI": ["ArgumentProcessors.RecursionArgumentProcessor.removeIndex(java.lang.String[],int)", "ArgumentProcessors.RecursionArgumentProcessor.removeIndex(this.removeIndex(args, i),int)", "ArgumentProcessors.RecursionArgumentProcessor.removeIndex(java.lang.String[],int)", "ArgumentProcessors.RecursionArgumentProcessor.removeIndex(java.lang.String[],int)", "ArgumentProcessors.RecursionArgumentProcessor.removeIndex(this.removeIndex(args, j),int)"], "Fixed commit": "a6c96f5d93dca619c2ca539079fcd9e73d1d9f3f", "Url": "https://api.github.com/repos/gilderjw/SwagLagsUMLGenerator", "Date": "2017-02-09T19:43:34Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ro.fortsoft.gogo.ExtendedProperties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (mainJar != null) { try { if (!(launcherClassLoader.contains(mainJar))) { launcherClassLoader.loadJar(mainJar); } mainClassName = ro.fortsoft.gogo.util.JarUtils.getMainClassName(mainJar); } catch (java.io.IOException e) { ro.fortsoft.gogo.Launcher.fatal(e); } if (mainClassName == null) { ro.fortsoft.gogo.Launcher.fatal((mainJar + \" file does not contains a 'Main-Class' manifest attribute\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4452/buggy-version/src.main.java.ro.fortsoft.gogo.Launcher.java", "BodyUseAPI": ["ro.fortsoft.gogo.LauncherClassLoader.loadJar(java.lang.String)", "ro.fortsoft.gogo.Launcher.fatal(java.lang.String)", "ro.fortsoft.gogo.LauncherClassLoader.contains(java.lang.String)", "ro.fortsoft.gogo.util.JarUtils.getMainClassName(java.lang.String)"], "Fixed commit": "f4cd454baa0ba6a60e88c88856506baf303e9320", "Url": "https://api.github.com/repos/decebals/gogo", "Date": "2013-09-13T13:12:33Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((byteBuf.readableBytes()) < 4) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8488/buggy-version/JazminServer.src.jazmin.server.protobuf.ProtobufMessageDecode.java", "BodyUseAPI": [], "Fixed commit": "b2add7d473955e37065a88930a54cc71a968e4da", "Url": "https://api.github.com/repos/coloseo/JazminServer", "Date": "2017-08-26T16:44:14Z"},
{"Line": "=>842", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.datatorrent.stram.plan.logical.LogicalPlan.OperatorMeta.getValue(OperatorContext.METRICS_AGGREGATOR)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((aggregator == null) && ((operator) instanceof com.datatorrent.stram.plan.logical.AutoMetric.Aggregator)) { aggregator = ((com.datatorrent.stram.plan.logical.AutoMetric.Aggregator) (operator)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1681/buggy-version/engine.src.main.java.com.datatorrent.stram.plan.logical.LogicalPlan.java", "BodyUseAPI": [], "Fixed commit": "d6e16e34a1d2864df6c4908ac216533beec4182c", "Url": "https://api.github.com/repos/otterc/apex-core", "Date": "2015-12-22T08:45:22Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tweets.isEmpty())) { tweetMaxID = tweets.get(((tweets.size()) - 1)).getID(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/430/buggy-version/knowsie.src.main.java.cs499.knowsie.GroupFragment.java", "BodyUseAPI": ["java.util.List<cs499.knowsie.data.Tweet>.size()", "tweets.get(((tweets.size()) - 1)).getID()", "java.util.List<cs499.knowsie.data.Tweet>.get(((tweets.size()) - 1))"], "Fixed commit": "fd389934b2f0da6ae1964fc1b288f2867f40b909", "Url": "https://api.github.com/repos/Knowsie/Knowsie", "Date": "2015-06-01T07:10:06Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) { isPremium = isPremiumPurchased(); }else { isPremium = inventory.hasPurchase(com.corridor9design.mfdpaycalculator.AboutActivity.SKU_PREMIUM); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6390/buggy-version/src.com.corridor9design.mfdpaycalculator.AboutActivity.java", "BodyUseAPI": [], "Fixed commit": "fee231d0eff11295eaae45343aab6197d970af6d", "Url": "https://api.github.com/repos/Rescue9/MFDPayCalculator", "Date": "2013-10-12T04:58:37Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) { com.corridor9design.mfdpaycalculator.preferences.PreferencesHandler ph = new com.corridor9design.mfdpaycalculator.preferences.PreferencesHandler(); ph.setBoolPreference(\"premium_purchased\", true, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6390/buggy-version/src.com.corridor9design.mfdpaycalculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "fee231d0eff11295eaae45343aab6197d970af6d", "Url": "https://api.github.com/repos/Rescue9/MFDPayCalculator", "Date": "2013-10-12T04:58:37Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b < 33) { return (((b == (com.jrodeo.json.ByteBufferJsonReader.SPACE)) || (b == (com.jrodeo.json.ByteBufferJsonReader.CR))) || (b == (com.jrodeo.json.ByteBufferJsonReader.TAB))) || (b == (com.jrodeo.json.ByteBufferJsonReader.LF)); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2803/buggy-version/src.main.java.com.jrodeo.json.ByteBufferJsonReader.java", "BodyUseAPI": [], "Fixed commit": "a5ac85ce7cf163531a3829ec68ba6a4995946f26", "Url": "https://api.github.com/repos/bjhlista/jrodeo-bson", "Date": "2016-09-15T16:41:36Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (freq > 0) { (total)++; queue.offer(new org.voyanttools.trombone.model.CorpusTerm(queryString, freq, (withDistributions ? rawFreqs : null), (withDistributions ? relativeFreqs : null))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1392/buggy-version/src.main.java.org.voyanttools.trombone.tool.corpus.CorpusTerms.java", "BodyUseAPI": ["org.voyanttools.trombone.tool.analysis.CorpusTermsQueue.offer(org.voyanttools.trombone.model.CorpusTerm)"], "Fixed commit": "4e4cfd3c445c88470e8f3625ebcb13f146669b67", "Url": "https://api.github.com/repos/sgsinclair/trombone", "Date": "2014-08-29T15:01:14Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((result == null) && ((refType) != (ReferenceType.UserRefType))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7796/buggy-version/jtrim-core.src.main.java.org.jtrim.cache.MemorySensitiveCache.java", "BodyUseAPI": [], "Fixed commit": "742433bd26be17cd43e9ceafb6f6cfa250e04c52", "Url": "https://api.github.com/repos/kelemen/JTrim", "Date": "2012-11-23T23:59:21Z"},
{"Line": "=>503", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (result != null) { long size = org.jtrim.cache.MemorySensitiveCache.getObjectSize(result); mainLock.lock(); try { elementRef = referenceObject(result, size); } finally { mainLock.unlock(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7796/buggy-version/jtrim-core.src.main.java.org.jtrim.cache.MemorySensitiveCache.java", "BodyUseAPI": ["org.jtrim.cache.MemorySensitiveCache.ObjectRef<T>.referenceObject(T,long)", "org.jtrim.cache.MemorySensitiveCache.getObjectSize(T)"], "Fixed commit": "742433bd26be17cd43e9ceafb6f6cfa250e04c52", "Url": "https://api.github.com/repos/kelemen/JTrim", "Date": "2012-11-23T23:59:21Z"},
{"Line": "=>788", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (minimized) { new mainpackage.OpaqueInfoPanel(song, artist, alb); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8529/buggy-version/src.java.mainpackage.MainSwing.java", "BodyUseAPI": [], "Fixed commit": "efe61dc278484f5326d39bc3978b35e5b38429c0", "Url": "https://api.github.com/repos/BrendanOswego/csc420-assignment-1", "Date": "2016-12-08T15:12:26Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nstr < 0) || (nstr >= (e.length))) { throw new java.lang.IndexOutOfBoundsException(((\"String index \" + nstr) + \" is out of bound\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6922/buggy-version/java.nova-algo.src.main.java.es.elixir.bsc.ngs.nova.algo.ssa.GSSA.java", "BodyUseAPI": [], "Fixed commit": "aa154ff29590f06496eba32ebda6273cca905baa", "Url": "https://api.github.com/repos/redmitry/gecoz", "Date": "2017-08-03T16:14:42Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MenuRowCount) > (ViewRowCount)) { CurrentViewPosition = (MenuRowCount) - (ViewRowCount); SelectorPosition = (ViewRowCount) - 1; }else { SelectorPosition = (MenuRowCount) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7090/buggy-version/src.main.java.kkdev.kksystem.base.classes.display.tools.menumaker.MKMenuView.java", "BodyUseAPI": [], "Fixed commit": "2f9984d20e88050ef1f4a56e9cee48c038935d6d", "Url": "https://api.github.com/repos/Garikk/kkiot-base", "Date": "2016-05-25T15:55:21Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((options.getVlanId()) != null) && (!(((org.dasein.cloud.openstack.nova.os.NovaOpenStack) (getProvider())).isRackspace()))) { org.dasein.cloud.openstack.nova.os.network.NovaNetworkServices services = ((org.dasein.cloud.openstack.nova.os.NovaOpenStack) (getProvider())).getNetworkServices(); if (services != null) { org.dasein.cloud.openstack.nova.os.network.Quantum support = services.getVlanSupport(); if (support != null) { java.util.ArrayList<java.util.Map<java.lang.String, java.lang.Object>> vlans = new java.util.ArrayList<java.util.Map<java.lang.String, java.lang.Object>>(); java.util.HashMap<java.lang.String, java.lang.Object> vlan = new java.util.HashMap<java.lang.String, java.lang.Object>(); try { vlan.put(\"port\", support.createPort(options.getVlanId(), options.getHostName())); vlans.add(vlan); json.put(\"networks\", vlans); } catch (org.dasein.cloud.CloudException e) { if ((e.getHttpCode()) != 403) { throw new org.dasein.cloud.CloudException(e.getMessage()); } org.dasein.cloud.openstack.nova.os.compute.NovaServer.logger.warn(\"Unable to create port - trying to launch into general network\"); org.dasein.cloud.network.Subnet subnet = support.getSubnet(options.getVlanId()); vlan.put(\"uuid\", subnet.getProviderVlanId()); vlans.add(vlan); json.put(\"networks\", vlans); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/835/buggy-version/src.main.java.org.dasein.cloud.openstack.nova.os.compute.NovaServer.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Object>.put(java.lang.String,support.createPort(options.getVlanId(), options.getHostName()))", "org.dasein.cloud.openstack.nova.os.network.Quantum.createPort(options.getVlanId(),options.getHostName())", "org.dasein.cloud.compute.VMLaunchOptions.getVlanId()", "org.dasein.cloud.compute.VMLaunchOptions.getHostName()", "org.dasein.cloud.compute.VMLaunchOptions.getVlanId()", "org.dasein.cloud.openstack.nova.os.network.Quantum.getSubnet(options.getVlanId())"], "Fixed commit": "4f0fc811bfec5843698d769c1edb84209b476910", "Url": "https://api.github.com/repos/daniellemayne/dasein-cloud-openstack", "Date": "2013-11-08T14:57:10Z"},
{"Line": "=>883", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.catrobat.catroid.content.LookDataHistory.getInstance(item).isUndoable()) || (org.catrobat.catroid.content.LookDataHistory.getInstance(item).isRedoable())) { org.catrobat.catroid.content.LookDataHistory.updateInstance(item, clone); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/206/buggy-version/catroid.src.org.catrobat.catroid.ui.fragment.SpritesListFragment.java", "BodyUseAPI": ["org.catrobat.catroid.content.LookDataHistory.updateInstance(org.catrobat.catroid.content.Sprite,org.catrobat.catroid.content.Sprite)"], "Fixed commit": "fc8f719c4abe9fcf637cc97b7f09bb2f5384d0a7", "Url": "https://api.github.com/repos/loibi93/Catroid", "Date": "2015-08-21T07:51:40Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (args != null) { for (java.lang.Object arg : args) { if (arg instanceof org.mariotaku.restfu.callback.ErrorCallback) { ((org.mariotaku.restfu.callback.ErrorCallback) (arg)).error(exception); return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8824/buggy-version/library.src.main.java.org.mariotaku.restfu.RestAPIFactory.java", "BodyUseAPI": [], "Fixed commit": "7437739c0232ba2cf996a6c4a7b560a48b8f1cae", "Url": "https://api.github.com/repos/mariotaku/RestFu", "Date": "2016-01-26T06:31:21Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filename == null) || (filename.isEmpty())) { alarmpi.SoundControl.log.severe(\"playFile called with null or empty filename\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1626/buggy-version/daemon.src.alarmpi.SoundControl.java", "BodyUseAPI": [], "Fixed commit": "e179dea44340b8d83c89b438cb7d5fb856819a56", "Url": "https://api.github.com/repos/hagego/AlarmPi", "Date": "2017-01-21T17:21:24Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (name.isEmpty()) { Main.showPlayers(user); }else if (!(Main.nameAlreadyInputted(name, user))) { user.getPlayer((input - 1)).setName(name); user.getPlayer((input - 1)).setGoals(0); }else { int numberOfGoals = user.getPlayer((input - 1)).getGoals(); java.lang.System.out.println(((((\"Name already entered. Has \" + (+numberOfGoals)) + \" \") + (Main.goalOrGoals(numberOfGoals))) + \".\")); Main.askToContinue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/9066/buggy-version/Main.java", "BodyUseAPI": ["user.getPlayer((input - 1)).setName(java.lang.String)", "Main.nameAlreadyInputted(java.lang.String,User)"], "Fixed commit": "8b56f9097e76b7892fdb3288aecd30a7f934873f", "Url": "https://api.github.com/repos/ELK75/Soccer-Tracker", "Date": "2017-10-25T19:06:32Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((countDownTimer) == null)) countDownTimer.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4853/buggy-version/app.src.main.java.nl.rubenvanerk.speurtocht.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "406b0cf080f211d3718139a52ccea94c2face6e9", "Url": "https://api.github.com/repos/Ruvero/project78-speurtocht", "Date": "2017-06-28T12:10:52Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (debug) { java.lang.System.out.println((\"Raw Input: \" + input)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1405/buggy-version/TISCaP_Server_Project.src.ClientCommand.java", "BodyUseAPI": [], "Fixed commit": "5495924d62d15a5ec5555d4d805d54d28ffb4f8c", "Url": "https://api.github.com/repos/skierkyles/TISCap_Server", "Date": "2013-11-25T01:30:02Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((secret.getTitle()) != null) { secretUpdate.setTitle(secret.getTitle()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1470/buggy-version/src.main.java.com.user.secrets.controller.SecretController.java", "BodyUseAPI": ["com.user.secrets.domain.Secret.setTitle(secret.getTitle())", "com.user.secrets.domain.Secret.getTitle()"], "Fixed commit": "17ec6581beb2a2d718cb5f0449cd2757fd68081a", "Url": "https://api.github.com/repos/ayushchoukse1/secretService", "Date": "2016-11-05T16:41:00Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((secret.getBody()) != null) { secretUpdate.setBody(secret.getBody()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1470/buggy-version/src.main.java.com.user.secrets.controller.SecretController.java", "BodyUseAPI": ["com.user.secrets.domain.Secret.setBody(secret.getBody())", "com.user.secrets.domain.Secret.getBody()"], "Fixed commit": "17ec6581beb2a2d718cb5f0449cd2757fd68081a", "Url": "https://api.github.com/repos/ayushchoukse1/secretService", "Date": "2016-11-05T16:41:00Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, edu.ithaca.dragonlab.ckc.learningobject.LearningObject>.get(learningObjectRecord.getID())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (learningObject == null) { learningObjectMap.put(learningObjectRecord.getID(), new edu.ithaca.dragonlab.ckc.learningobject.LearningObject(learningObjectRecord.getID())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4944/buggy-version/src.edu.ithaca.dragonlab.ckc.conceptgraph.ConceptGraph.java", "BodyUseAPI": [], "Fixed commit": "2f176200220cf743270ffe962fa7ba8ec3051a88", "Url": "https://api.github.com/repos/tobydragon/tecmap", "Date": "2017-05-02T13:59:36Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastAppendLocation) == null) { lastAppendLocation = new journal.io.api.Location(1, journal.io.api.Journal.PRE_START_POINTER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6529/buggy-version/src.main.java.journal.io.api.Journal.java", "BodyUseAPI": [], "Fixed commit": "a2fa1940a5fb7f2a34d23045fdab1b379c6bc9a4", "Url": "https://api.github.com/repos/sbtourist/Journal.IO", "Date": "2013-09-04T13:41:44Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.faces.context.FacesContext.getCurrentInstance().getExternalContext().getRequestMap().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (rerun != null) { rerun = jobFacade.findWithConfig(rerun.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7698/buggy-version/vocloud.src.main.java.cz.rk.vocloud.view.CreateJobBean.java", "BodyUseAPI": ["cz.mrq.vocloud.entity.Job.getId()", "cz.mrq.vocloud.ejb.JobFacade.findWithConfig(rerun.getId())"], "Fixed commit": "00e9f7f17f9734d53ee7d71d8217fc1e7b58b835", "Url": "https://api.github.com/repos/mrq-cz/vocloud", "Date": "2015-04-29T21:17:08Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toUpperCase()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(dcatFieldName.equalsIgnoreCase(\"keyword\"))) || (!(repKeyword.containsKey(partTrimUpper)))) { repKeyword.put(partTrimUpper, partTrimUpper); if (hasValue) { sb.append(delimiter); } sb.append(\"\\\"\").append(com.esri.gpt.framework.util.Val.escapeStrForJson(part.trim())).append(\"\\\"\"); hasValue = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1278/buggy-version/geoportal.src.com.esri.gpt.control.georss.DcatJsonFeedWriter.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "2fb0c58dffd756f41475e9e3aa91103b69abe204", "Url": "https://api.github.com/repos/Esri/geoportal-server", "Date": "2014-03-31T21:16:51Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (os == null) { out.print(de.axone.tools.F.ormat(os)); }else if ((os.length) == 0) { out.print(\"- [] -\"); }else { boolean first = true; for (java.lang.Object o : os) { if (first) first = false; else out.print(\", \"); out.print(de.axone.tools.F.ormat(o)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/830/buggy-version/src.code.de.axone.tools.E.java", "BodyUseAPI": ["java.io.PrintStream.print(de.axone.tools.F.ormat(os))", "de.axone.tools.F.ormat(java.lang.Object[])"], "Fixed commit": "e218affa8dc37cefa6f38a3c7e9423b7648b48f1", "Url": "https://api.github.com/repos/ScheintodX/AXON-E-Tools", "Date": "2014-03-27T08:16:00Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4960/buggy-version/rxjava-core.src.main.java.rx.schedulers.Timestamped.java", "BodyUseAPI": [], "Fixed commit": "77e27713eae8decb8369c4f2e27df4144f205257", "Url": "https://api.github.com/repos/benjchristensen/RxJava", "Date": "2014-04-22T09:48:03Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user = userService.getCurrentUser()) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1495/buggy-version/server.src.main.java.org.lacitysan.landfill.server.service.user.UserActivityService.java", "BodyUseAPI": [], "Fixed commit": "b16665fb3f102c4059b2d7d64ea7c342c843cc99", "Url": "https://api.github.com/repos/landfill-eforms/landfill-web-app", "Date": "2017-05-19T19:53:01Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > 1) { timedMute = net.cubespace.CloudChat.Util.StringUtils.getTime(args[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7516/buggy-version/src.main.java.net.cubespace.CloudChat.Module.IRC.Commands.Mute.java", "BodyUseAPI": ["net.cubespace.CloudChat.Util.StringUtils.getTime(java.lang.String)"], "Fixed commit": "e56d87572d20f6fcf0bb34eb4732f6758e0fd66b", "Url": "https://api.github.com/repos/geNAZt/CloudChat", "Date": "2014-02-28T14:06:59Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tweet.message.length()) > 20) { ((android.widget.TextView) (view.findViewById(R.id.tweetSubstring))).setText(tweet.message.substring(0, 20)); }else { ((android.widget.TextView) (view.findViewById(R.id.tweetSubstring))).setText(tweet.message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1978/buggy-version/app.src.main.java.org.wit.mytweet.adapters.TimelineItem.java", "BodyUseAPI": ["tweet.message.substring(int,int)", "((android.widget.TextView) (view.findViewById(R.id.tweetSubstring))).setText(tweet.message)", "((android.widget.TextView) (view.findViewById(R.id.tweetSubstring))).setText(tweet.message.substring(0, 20))"], "Fixed commit": "d603bffd3bcbdbfdb21947b89856c910cc141435", "Url": "https://api.github.com/repos/Brianos-17/MyTweet", "Date": "2017-10-19T17:11:28Z"},
{"Line": "=>1553", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.sysml.runtime.controlprogram.parfor.opt.OptTreeConverter.getAbstractPlanMapping().getMappedHop(c.getID())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (h instanceof org.apache.sysml.hops.Hop.MultiThreadedHop) { org.apache.sysml.hops.Hop.MultiThreadedHop mhop = ((org.apache.sysml.hops.Hop.MultiThreadedHop) (h)); mhop.setMaxNumThreads(1); c.setK(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8027/buggy-version/src.main.java.org.apache.sysml.runtime.controlprogram.parfor.opt.OptimizerRuleBased.java", "BodyUseAPI": [], "Fixed commit": "084afea4c14718d2738edcc0c42f15cae681ecd6", "Url": "https://api.github.com/repos/nakul02/systemml", "Date": "2016-07-23T05:53:09Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (descr == null) { throw new java.lang.IllegalArgumentException(\"ClassDescr may not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/525/buggy-version/src.com.github.rfqu.javon.builder.JavonBuilder.java", "BodyUseAPI": [], "Fixed commit": "6eff25ec0cccb5b0ee22c2c7b907c0dd3d07c085", "Url": "https://api.github.com/repos/rfqu/Javon", "Date": "2013-08-02T11:34:52Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, cz.vutbr.web.domassign.SingleMapNodeData.Quadruple>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((q.curProp) != null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/413/buggy-version/src.main.java.cz.vutbr.web.domassign.SingleMapNodeData.java", "BodyUseAPI": [], "Fixed commit": "0ea23f9525360134dd67a69c5dccb230423485bf", "Url": "https://api.github.com/repos/daisy/jStyleParser", "Date": "2016-10-25T17:47:34Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["exchange.getIn().getHeader(Jt400DataQueueEndpoint.KEY,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (key == null) { key = exchange.getIn().getHeader(Jt400DataQueueEndpoint.KEY.toLowerCase(), byte[].class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3857/buggy-version/src.main.java.org.apache.camel.component.jt400ex.Jt400DataQueueProducer.java", "BodyUseAPI": [], "Fixed commit": "f32b7b8eb1687e7ea35b005c4275c1ebe3625a6a", "Url": "https://api.github.com/repos/AutoGeneral/camel-jt400ex", "Date": "2014-12-16T03:24:53Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["exchange.getIn().getHeader(Jt400DataQueueEndpoint.KEY,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (key == null) { key = exchange.getIn().getHeader(Jt400DataQueueEndpoint.KEY.toLowerCase(), java.lang.String.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3857/buggy-version/src.main.java.org.apache.camel.component.jt400ex.Jt400DataQueueProducer.java", "BodyUseAPI": [], "Fixed commit": "f32b7b8eb1687e7ea35b005c4275c1ebe3625a6a", "Url": "https://api.github.com/repos/AutoGeneral/camel-jt400ex", "Date": "2014-12-16T03:24:53Z"},
{"Line": "=>679", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(id.isEmpty())) cachedDeviceList.addDevice(java.lang.Integer.parseInt(id));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7148/buggy-version/smack-omemo.src.main.java.org.jivesoftware.smackx.omemo.FileBasedOmemoStore.java", "BodyUseAPI": ["org.jivesoftware.smackx.omemo.internal.CachedDeviceList.addDevice(int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "7fa83ddfff264e48180c20ad660da64babfe2fa1", "Url": "https://api.github.com/repos/vanitasvitae/Smack", "Date": "2017-04-22T18:26:06Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.mit.mitmobile2.dining.DiningModel.DiningHall.getTodaysHoursSummary(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((subtitle != null) && ((subtitle.length()) > 0)) { subtitleView.setText(diningHall.getTodaysHoursSummary(currentTime)); }else { subtitleView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1266/buggy-version/src.edu.mit.mitmobile2.dining.DiningHomeActivity.java", "BodyUseAPI": [], "Fixed commit": "6bb1c159502632e9912a0d444c252f34129afe47", "Url": "https://api.github.com/repos/MIT-Mobile/MIT-Mobile-for-Android", "Date": "2013-07-05T20:33:48Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.osmand.plus.ContextMenuAdapter.getElementId(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (standardId == (R.string.context_menu_item_last_intermediate_point)) { getMyApplication().getTargetPointsHelper().navigateToPoint(new net.osmand.data.LatLon(latitude, longitude), true, getMyApplication().getTargetPointsHelper().getIntermediatePoints().size(), mapActivity.getContextMenu().getPointDescription()); }else if (standardId == (R.string.context_menu_item_search)) { android.content.Intent intent = new android.content.Intent(mapActivity, mapActivity.getMyApplication().getAppCustomization().getSearchActivity()); intent.putExtra(SearchActivity.SEARCH_LAT, latitude); intent.putExtra(SearchActivity.SEARCH_LON, longitude); intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP); mapActivity.startActivity(intent); }else if (standardId == (R.string.context_menu_item_directions_from)) { mapActivity.getContextMenu().hide(); enterRoutePlanningMode(new net.osmand.data.LatLon(latitude, longitude), mapActivity.getContextMenu().getPointDescription()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6474/buggy-version/OsmAnd.src.net.osmand.plus.activities.MapActivityActions.java", "BodyUseAPI": [], "Fixed commit": "d78d80743cb7f4273cd81dc6f200a19497aabb38", "Url": "https://api.github.com/repos/Zahnstocher/Osmand", "Date": "2015-11-25T11:11:25Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getMyApplication().getTargetPointsHelper().getPointToNavigate()) != null) && ((mapActivity.getRoutingHelper().isFollowingMode()) || (mapActivity.getRoutingHelper().isRoutePlanningMode()))) { adapter.item(R.string.context_menu_item_last_intermediate_point).iconColor(R.drawable.ic_action_flage_dark).reg(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6474/buggy-version/OsmAnd.src.net.osmand.plus.activities.MapActivityActions.java", "BodyUseAPI": [], "Fixed commit": "d78d80743cb7f4273cd81dc6f200a19497aabb38", "Url": "https://api.github.com/repos/Zahnstocher/Osmand", "Date": "2015-11-25T11:11:25Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (online) transferOwnership(); else getOwnership();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8165/buggy-version/src.MultiPoint.java", "BodyUseAPI": [], "Fixed commit": "1dae352ac0dec10c28e76dc5af81b95e233be09b", "Url": "https://api.github.com/repos/malorch/MultiPoint", "Date": "2012-05-04T19:39:31Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (c.isActive()) { c.informPlayer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/854/buggy-version/workspace.Avalon.src.market.Market.java", "BodyUseAPI": ["company.Company.informPlayer()"], "Fixed commit": "9a9f94f3305ba001e0cbfd3954bb75718bfe8ca5", "Url": "https://api.github.com/repos/Jobs92/Avalon", "Date": "2014-01-20T16:51:21Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["quoteElement.select(\".abysstop\").first()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (quoteAbyssTopId != null) { quote.setId(quoteAbyssTopId.text()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7075/buggy-version/app.src.main.java.by.vshkl.bashq.network.NetworkRepository.java", "BodyUseAPI": ["org.jsoup.nodes.Element.text()", "by.vshkl.mvp.model.Quote.setId(quoteAbyssTopId.text())"], "Fixed commit": "3c920ee5511d58f1a0b23e7b9da579b38e30c1d4", "Url": "https://api.github.com/repos/vshkl/BashQ", "Date": "2016-11-01T18:48:28Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type instanceof kalang.core.ClassType) { return type; }else if (type instanceof kalang.core.PrimitiveType) { return type; }else { java.lang.System.err.println((\"unknown type:\" + type)); return type; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5773/buggy-version/src.main.java.kalang.util.TypeUtil.java", "BodyUseAPI": ["java.io.PrintStream.println((\"unknown type:\" + type))"], "Fixed commit": "bcaff13785aac78980e85b3237ef6fcd4c88dd46", "Url": "https://api.github.com/repos/kasonyang/kalang", "Date": "2016-06-14T15:15:26Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(angle)) > 45) { if (angle < 0) { angle += 90; }else { angle -= 90; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/920/buggy-version/src.main.java.org.firepick.vision.FireSightVisionProvider.java", "BodyUseAPI": [], "Fixed commit": "2c9f31b6358c1057bd2343dd4587107855083d05", "Url": "https://api.github.com/repos/TinWhiskers/openpnptw", "Date": "2015-09-15T02:26:00Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (\"1.3.0\".equals(wmsVersion)) { i = params.getMandatoryPositiveInt(\"i\"); j = ((getPlottingDomainParameters().getHeight()) - 1) - (params.getMandatoryPositiveInt(\"j\")); }else { i = params.getMandatoryPositiveInt(\"x\"); j = ((getPlottingDomainParameters().getHeight()) - 1) - (params.getMandatoryPositiveInt(\"y\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7713/buggy-version/wms.src.main.java.uk.ac.rdg.resc.edal.wms.GetFeatureInfoParameters.java", "BodyUseAPI": [], "Fixed commit": "c0158968fec390234aae9fd56aa324008a156934", "Url": "https://api.github.com/repos/N-Lin/edal-java", "Date": "2014-11-03T12:45:59Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.door43.translationstudio.newui.home.RestoreFromCloudDialog.getFragmentManager()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == fm) { fm = activity.getFragmentManager(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8344/buggy-version/app.src.main.java.com.door43.translationstudio.newui.home.RestoreFromCloudDialog.java", "BodyUseAPI": [], "Fixed commit": "71d67fffeb8d426071c3a4684cb809025aa4dfa8", "Url": "https://api.github.com/repos/unfoldingWord-dev/ts-android", "Date": "2016-02-22T21:19:41Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.insertContact) { new com.maohi.software.maohifx.contact.dao.ContactDAO().insert(iElement.getContact()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3595/buggy-version/maohifx.contact.src.main.java.com.maohi.software.maohifx.server.webapi.CustomerService.java", "BodyUseAPI": [], "Fixed commit": "18b95829a3714219bd756117d47c17e9dcf0c6df", "Url": "https://api.github.com/repos/Heifara/maohifx", "Date": "2015-12-23T19:44:05Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (itemsOnPage == 0) { itemsOnPage = uhmanoa.droid_sch.Available_Schedules.ITEMS_PER_PAGE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/398/buggy-version/app.src.main.java.uhmanoa.droid_sch.Available_Schedules.java", "BodyUseAPI": [], "Fixed commit": "1dca729626964a79098eef052d69f077b3a894d4", "Url": "https://api.github.com/repos/1andyn/droid_sch", "Date": "2015-04-21T02:11:35Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uuid == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8605/buggy-version/app.src.main.java.org.tec_hub.tecuniversalcomm.data.device.Device.java", "BodyUseAPI": [], "Fixed commit": "6b55755f0793605d3f62eca0dd733cfc148be1f4", "Url": "https://api.github.com/repos/nicholastmosher/easycom", "Date": "2015-09-28T03:23:44Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arrayXY == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6678/buggy-version/src.fast_chart.FastChart.java", "BodyUseAPI": [], "Fixed commit": "da1d2e6e6a2d9f5ef01aa2d36bb320d79759724d", "Url": "https://api.github.com/repos/dimagerasimov/FastChart", "Date": "2017-09-11T18:56:21Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.elle.analyster.entities.Assignment.getDateAssigned()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((dateAssigned == null) || (dateAssigned.equals(\"\"))) { pstmt.setDate(1, null); }else { pstmt.setString(1, dateAssigned); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5208/buggy-version/src.com.elle.analyster.dao.AssignmentDAO.java", "BodyUseAPI": ["java.sql.PreparedStatement.setString(int,java.lang.String)"], "Fixed commit": "e35a72b31b6acd6b5c14affb8eb4cd21bea710cc", "Url": "https://api.github.com/repos/Smundrigi/Analyster", "Date": "2017-11-03T03:34:31Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.elle.analyster.entities.Assignment.getDateDone()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((dateDone == null) || (dateDone.equals(\"\"))) { pstmt.setDate(2, null); }else { pstmt.setString(2, dateDone); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5208/buggy-version/src.com.elle.analyster.dao.AssignmentDAO.java", "BodyUseAPI": ["java.sql.PreparedStatement.setString(int,java.lang.String)"], "Fixed commit": "e35a72b31b6acd6b5c14affb8eb4cd21bea710cc", "Url": "https://api.github.com/repos/Smundrigi/Analyster", "Date": "2017-11-03T03:34:31Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.contains(\".ser\")) { projects.add(model.Projet.load(s)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2684/buggy-version/src.utils.Utils.java", "BodyUseAPI": ["model.Projet.load(java.lang.String)", "java.util.LinkedList<model.Projet>.add(model.Projet.load(s))"], "Fixed commit": "52e1463027a6d335f29ff7bea923529a924ff695", "Url": "https://api.github.com/repos/coco35700/uPMT", "Date": "2017-10-24T12:32:38Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPressedView) != null) { com.chad.library.adapter.base.BaseViewHolder vh = ((com.chad.library.adapter.base.BaseViewHolder) (recyclerView.getChildViewHolder(mPressedView))); if ((vh == null) || ((vh.getItemViewType()) != (com.chad.library.adapter.base.BaseQuickAdapter.LOADING_VIEW))) { mPressedView.setPressed(false); } mPressedView = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7727/buggy-version/library.src.main.java.com.chad.library.adapter.base.listener.SimpleClickListener.java", "BodyUseAPI": [], "Fixed commit": "633b234080d39c7ffe1b667e398e0af1557d5350", "Url": "https://api.github.com/repos/1109993488/BaseRecyclerViewAdapterHelper", "Date": "2016-11-11T09:31:41Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getStringExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (action.equals(PlayerActivity.ACTION_BACK)) { result.put(PlayerActivity.BUTTON_BACK, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/9179/buggy-version/smartyoutubetv.src.main.java.com.liskovsoft.smartyoutubetv.flavors.exoplayer.interceptors.ActionBinder.java", "BodyUseAPI": [], "Fixed commit": "fc161867226b9f703003e70b21155aada5a2b610", "Url": "https://api.github.com/repos/yuliskov/SmartYouTubeTV", "Date": "2017-11-26T01:34:34Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.mhus.lib.cao.aspect.StructureControl.createChildNode(java.lang.String,de.mhus.lib.core.IProperties)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (res == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8692/buggy-version/mhu-lib-persistence.src.main.java.de.mhus.lib.cao.auth.AuthStructureControl.java", "BodyUseAPI": [], "Fixed commit": "385d5f631a81b351d0099699b0fcf6d69e207d12", "Url": "https://api.github.com/repos/mhus/mhus-lib", "Date": "2016-12-14T22:28:12Z"},
{"Line": "=>1796", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Build.DEVICE.equals(\"zoom2\"))) { com.ichi2.anki.AnkiDroidApp.getCompat().setScrollbarFadingEnabled(webView, mPrefFadeScrollbars); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6709/buggy-version/src.com.ichi2.anki.Reviewer.java", "BodyUseAPI": [], "Fixed commit": "0278511ea57354ba333fc5ce2abf7092f25c8f27", "Url": "https://api.github.com/repos/gliomarto/Anki-Android", "Date": "2013-03-17T15:53:49Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.psddev.dari.db.Database.Static.getDefaultOverride()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (old == null) { java.lang.String name = com.psddev.dari.util.Settings.get(java.lang.String.class, com.psddev.dari.db.Database.DEFAULT_DATABASE_SETTING); if (name != null) { old = com.psddev.dari.db.Database.Static.getInstance(name); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3362/buggy-version/db.src.main.java.com.psddev.dari.db.Database.java", "BodyUseAPI": [], "Fixed commit": "0004a0cd5676ddda8ae3a24dd45c0b9d203d9ee5", "Url": "https://api.github.com/repos/danslaughter2/dari", "Date": "2014-08-20T20:52:08Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((i == 3) || (i == 4)) || (i == 5)) { forms[i] = forms[i].replace(\"um\", \"a\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/971/buggy-version/app.src.main.java.com.benscholer.latinverbconjugator.Results.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "deb5edc9eaf6567e05afdb79eb38fd81bbad5cd0", "Url": "https://api.github.com/repos/bscholer/Latin-Verb-Conjugator", "Date": "2015-03-09T18:09:35Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((amiaBioSampleSubmission.getOrganism().getValueLabel()) != null) organism.setOrganismName(amiaBioSampleSubmission.getOrganism().getValueLabel()); else organism.setOrganismName(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6266/buggy-version/src.main.java.org.metadatacenter.submission.biosample.core.BioSampleValidator.java", "BodyUseAPI": ["amiaBioSampleSubmission.getOrganism().getValueLabel()", "org.metadatacenter.submission.biosample.AMIA2016DemoBioSampleTemplate.getOrganism()", "common.sp.TypeOrganism.setOrganismName(amiaBioSampleSubmission.getOrganism().getValueLabel())"], "Fixed commit": "4770a2a4838bf9952a6f8d2acf166d80ac631ffe", "Url": "https://api.github.com/repos/metadatacenter/cedar-submission-server", "Date": "2016-11-11T18:50:37Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sarp.beans.GafuBean.obtenerSectorRolesUsuario(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((respde != null) && (!(respde.isEmpty()))) { return javax.ws.rs.core.Response.ok(com.sarp.service.AdminService.adminBean.listarSectores(respde)).build(); }else { com.sarp.service.AdminService.logger.info((((\"LISTA VACIA DE SECOTORES. GET listarSectores - params: user-rol:\" + userRol) + \" user: \") + user)); java.util.List<com.sarp.classes.BusinessSectorRol> list = new java.util.ArrayList<com.sarp.classes.BusinessSectorRol>(); return javax.ws.rs.core.Response.ok(list).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6293/buggy-version/SARPService.src.com.sarp.service.AdminService.java", "BodyUseAPI": ["com.sarp.beans.AdminBean.listarSectores(java.util.List<com.sarp.classes.BusinessSectorRol>)", "javax.ws.rs.core.Response.ok(com.sarp.service.AdminService.adminBean.listarSectores(respde))", "javax.ws.rs.core.Response.ok(com.sarp.service.AdminService.adminBean.listarSectores(respde)).build()"], "Fixed commit": "7823fac02d70ed4a89ef6a8c19bf1dc7ded8ecaa", "Url": "https://api.github.com/repos/PIS-FING02/bps_back_end", "Date": "2016-11-26T20:54:22Z"},
{"Line": "=>829", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Models.Layers.Canvas.getShape(java.awt.Point)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (shape == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3522/buggy-version/src.Views.GUI.java", "BodyUseAPI": [], "Fixed commit": "ec8dbc21f7df5e7ef204f976782fbca10cda88b0", "Url": "https://api.github.com/repos/Magdz/ThePainter", "Date": "2015-12-11T20:33:36Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isChecked) { getWindow().setNavigationBarColor(Color.TRANSPARENT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3770/buggy-version/app.src.main.java.me.ccrama.redditslide.Activities.SettingsTheme.java", "BodyUseAPI": [], "Fixed commit": "3e2ba8c86cc644f2c646dd0a9f1fb4af5012f22e", "Url": "https://api.github.com/repos/Nxt3/Slide", "Date": "2016-04-16T03:28:52Z"},
{"Line": "=>640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activityStruct) != null) { activityStruct.bufferFlushed(minutes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/600/buggy-version/platforms.android.src.de.max.miband.bluetooth.BTCommandManager.java", "BodyUseAPI": [], "Fixed commit": "5bf3dd6f5c4991aebd41363cbb3d1822ce0738a6", "Url": "https://api.github.com/repos/m-altmeyer/BandSynchronization", "Date": "2016-10-05T08:52:39Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (files != null) { for (java.lang.Integer file : files) { fileResults.add(fileNames.get(file)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/750/buggy-version/SearchEngineProject.src.searchengineproject.ParseQueries.java", "BodyUseAPI": [], "Fixed commit": "1a8732a34023c35e74af5ee0815792c24e03604e", "Url": "https://api.github.com/repos/timphan212/CECS529", "Date": "2016-10-22T05:34:03Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (config.hasCaptchaKeys()) { net.tanesha.recaptcha.ReCaptchaResponse reCaptchaResponse = reCaptcha.checkAnswer(remoteAddr, recaptchaChallenge, recaptchaResponse); return reCaptchaResponse.isValid(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2189/buggy-version/src.main.java.net.nitram509.recaptcha.ReCaptchaService.java", "BodyUseAPI": [], "Fixed commit": "6f161416b8140e6522f48cdc0bbb227db68de7f2", "Url": "https://api.github.com/repos/nitram509/tweet-gateway-server", "Date": "2014-03-09T20:47:40Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((props.get(\"max-limit\")) != null) { maxLimit = java.lang.Integer.parseInt(((java.lang.String) (props.get(\"max-limit\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8445/buggy-version/intermine.objectstore.main.src.org.intermine.objectstore.ObjectStoreAbstractImpl.java", "BodyUseAPI": [], "Fixed commit": "a98c9c8fd7ba673b8b6e76dd871cbf61ed0e0ce3", "Url": "https://api.github.com/repos/intermine/intermine", "Date": "2013-03-15T12:15:31Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((props.get(\"max-offset\")) != null) { maxOffset = java.lang.Integer.parseInt(((java.lang.String) (props.get(\"max-offset\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8445/buggy-version/intermine.objectstore.main.src.org.intermine.objectstore.ObjectStoreAbstractImpl.java", "BodyUseAPI": [], "Fixed commit": "a98c9c8fd7ba673b8b6e76dd871cbf61ed0e0ce3", "Url": "https://api.github.com/repos/intermine/intermine", "Date": "2013-03-15T12:15:31Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((props.get(\"max-time\")) != null) { maxTime = java.lang.Long.parseLong(((java.lang.String) (props.get(\"max-time\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8445/buggy-version/intermine.objectstore.main.src.org.intermine.objectstore.ObjectStoreAbstractImpl.java", "BodyUseAPI": [], "Fixed commit": "a98c9c8fd7ba673b8b6e76dd871cbf61ed0e0ce3", "Url": "https://api.github.com/repos/intermine/intermine", "Date": "2013-03-15T12:15:31Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userTask.contains(\"<\")) && (userTask.contains(\">\"))) { int firstIndex = userTask.indexOf(\"<\"); int lastIndex = userTask.indexOf(\">\"); if (firstIndex < lastIndex) { setTaskTag(userTask.substring(firstIndex, lastIndex)); userTask = userTask.replace(userTask.substring(firstIndex, (lastIndex + 1)), \"\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2089/buggy-version/DODO.src.Parser.Parser.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)", "Parser.Parser.setTaskTag(java.lang.String)"], "Fixed commit": "a5c583e1901e51bd2bab683ca3a8a983ac6bf9ab", "Url": "https://api.github.com/repos/cs2103jan2016-W14-2J/main", "Date": "2016-03-26T16:07:36Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["commitToReqToFiles.get(history.root()).get(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (opt.isSome()) return opt.some();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/9100/buggy-version/src.main.java.de.fau.osr.bl.VcsInterpreter.java", "BodyUseAPI": ["fj.data.Option<fj.data.Set<java.io.File>>.some()"], "Fixed commit": "b2df004bd79688552ac08b3c2892eb7f7d4bc713", "Url": "https://api.github.com/repos/AMOSTeam3/amos-ss15-proj3", "Date": "2015-04-27T21:00:07Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (array == null) return com.google.common.collect.Lists.newArrayList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8713/buggy-version/src.main.java.cn.wuPATH.common.util.ListUtil.java", "BodyUseAPI": [], "Fixed commit": "ecce164c6a78c26fce619654d536ce77404bd00b", "Url": "https://api.github.com/repos/wuPATHtech/wuPATH-common", "Date": "2017-08-31T07:44:41Z"},
{"Line": "=>1873", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (tag != null) { tag = this.tagSentWithMTPreProcessing(tag); tag = semanticMarkup.ling.learn.utility.StringUtility.removeAll(tag, \"(^\\\\s*|\\\\s*$)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1729/buggy-version/src.semanticMarkup.ling.learn.dataholder.DataHolder.java", "BodyUseAPI": ["semanticMarkup.ling.learn.dataholder.DataHolder.tagSentWithMTPreProcessing(java.lang.String)"], "Fixed commit": "5681c7ee1812af431016cbe8199ed67d1364a4d3", "Url": "https://api.github.com/repos/dongyemeng/charaparser-unsupervised", "Date": "2014-01-18T10:42:00Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mshPart[11].equals(\"2.2\")) { for (int i = 0; i < (splitted.length); i++) { if (splitted[i].startsWith(\"OBX\")) { java.lang.String[] obxPart = splitted[i].split(\"\\\\|\", (-1)); if (obxPart[2].equals(\"SN\")) { obxPart[2] = \"NM\"; splitted[i] = joinStrings(obxPart, \"|\"); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5329/buggy-version/ch.elexis.core.hl7.v2x.src.ch.elexis.hl7.HL7ReaderFactory.java", "BodyUseAPI": [], "Fixed commit": "5ed152280e3999da5a939d8d3d3e4412bb96fda0", "Url": "https://api.github.com/repos/ngiger/elexis-3-core", "Date": "2014-10-06T14:08:21Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((health) > (maxHealth)) health = maxHealth;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7584/buggy-version/src.main.java.org.jtrfp.trcl.beh.DamageableBehavior.java", "BodyUseAPI": [], "Fixed commit": "a0dc73398f02c241223ef54939a03b2912d9a687", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2014-01-06T01:02:38Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((closeExpp) == null) { javax.faces.context.FacesContext fc = javax.faces.context.FacesContext.getCurrentInstance(); javax.el.ExpressionFactory ef = fc.getApplication().getExpressionFactory(); closeExpp = ef.createMethodExpression(fc.getELContext(), gov.hhs.fha.nhinc.admingui.managed.DashboardBean.CLOSE_EXPRESSION_VALUE, null, new java.lang.Class<?>[]{ org.primefaces.event.CloseEvent.class }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4124/buggy-version/Product.Production.Adapters.General.CONNECTAdminGUI.src.main.java.gov.hhs.fha.nhinc.admingui.managed.DashboardBean.java", "BodyUseAPI": [], "Fixed commit": "86552bb5033932e546cf6aac0bc9dba990b10869", "Url": "https://api.github.com/repos/jsmith2/CONNECT", "Date": "2014-05-10T03:24:24Z"},
{"Line": "=>765", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["session.createQuery(queryinv).setParameter(\"invDetailId\", invDetailId).list()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((listinv.get(0).getAmount()) != null) && (!(\"\".equalsIgnoreCase(java.lang.String.valueOf(listinv.get(0).getAmount()))))) { invDetailAmount = listinv.get(0).getAmount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6109/buggy-version/src.java.com.smi.travel.datalayer.dao.impl.ReceiptDaoImpl.java", "BodyUseAPI": ["listinv.get(0).getAmount()", "java.util.List<com.smi.travel.datalayer.entity.InvoiceDetail>.get(int)"], "Fixed commit": "9f9f48b99b21ea8483ccc99d0ffe83c29496c74f", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2016-02-04T10:25:22Z"},
{"Line": "=>781", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["session.createQuery(query).setParameter(\"invDetailId\", invDetailId).list()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((list.get(0).getInvoiceDetail().getAmount()) != null) && (!(\"\".equalsIgnoreCase(java.lang.String.valueOf(list.get(0).getInvoiceDetail().getAmount()))))) { invDetailAmount = list.get(0).getInvoiceDetail().getAmount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6109/buggy-version/src.java.com.smi.travel.datalayer.dao.impl.ReceiptDaoImpl.java", "BodyUseAPI": ["list.get(0).getInvoiceDetail()", "list.get(0).getInvoiceDetail().getAmount()", "java.util.List<com.smi.travel.datalayer.entity.ReceiptDetail>.get(int)"], "Fixed commit": "9f9f48b99b21ea8483ccc99d0ffe83c29496c74f", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2016-02-04T10:25:22Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) != null) { return player.isPlaying(); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/433/buggy-version/app.src.main.java.nl.project.groep4.hhs.bestofdubsmash.view.VideoDetailView.java", "BodyUseAPI": [], "Fixed commit": "8a1e1687e3649fa2ee58282c5b12af155014e9b8", "Url": "https://api.github.com/repos/jprobert/Project-HHS", "Date": "2015-01-20T14:01:50Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) != null) { return player.getCurrentPosition(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/433/buggy-version/app.src.main.java.nl.project.groep4.hhs.bestofdubsmash.view.VideoDetailView.java", "BodyUseAPI": [], "Fixed commit": "8a1e1687e3649fa2ee58282c5b12af155014e9b8", "Url": "https://api.github.com/repos/jprobert/Project-HHS", "Date": "2015-01-20T14:01:50Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) != null) { return player.getDuration(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/433/buggy-version/app.src.main.java.nl.project.groep4.hhs.bestofdubsmash.view.VideoDetailView.java", "BodyUseAPI": [], "Fixed commit": "8a1e1687e3649fa2ee58282c5b12af155014e9b8", "Url": "https://api.github.com/repos/jprobert/Project-HHS", "Date": "2015-01-20T14:01:50Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) != null) { if (player.isPlaying()) { outState.putInt(\"video-position\", player.getCurrentPosition()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/433/buggy-version/app.src.main.java.nl.project.groep4.hhs.bestofdubsmash.view.VideoDetailView.java", "BodyUseAPI": [], "Fixed commit": "8a1e1687e3649fa2ee58282c5b12af155014e9b8", "Url": "https://api.github.com/repos/jprobert/Project-HHS", "Date": "2015-01-20T14:01:50Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openide.filesystems.FileObject.getFileObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fileObj == null) { try { fileObj = projectDir.createFolder(path.replaceFirst(\"/\", \"\")); } catch (java.io.IOException ex) { org.openide.util.Exceptions.printStackTrace(ex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7355/buggy-version/src.main.java.org.pangratz.netbeans.couchapp.nodes.CouchAppFolderNodes.java", "BodyUseAPI": [], "Fixed commit": "2f81d827d9c62df11b74e0c9bd827251c16b65c3", "Url": "https://api.github.com/repos/pangratz/netbeans-couchapp", "Date": "2011-02-20T14:46:07Z"},
{"Line": "=>4262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (move.startsWith(\"hiddenpower\")) { move = move.toLowerCase().replaceAll(\"[^a-z]\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7949/buggy-version/app.src.main.java.com.pokemonshowdown.data.BattleMessage.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.toLowerCase()"], "Fixed commit": "c4f3c80fe6819875648ef3021b57d001f21967c5", "Url": "https://api.github.com/repos/NamTThai/PokemonShowdownAndroidClient", "Date": "2014-12-06T10:58:03Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.jeli.model.UserRepository.findByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (findByName.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7447/buggy-version/src.main.java.se.jeli.model.UserService.java", "BodyUseAPI": [], "Fixed commit": "13f4bdf0c29b7a37f6cb70c2030ba603d037a391", "Url": "https://api.github.com/repos/SakerMjukvara/Product", "Date": "2015-10-21T11:53:52Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((surveyEntity) == null) { surveyEntity = service.findSurveyById(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6077/buggy-version/survey-web.src.main.java.com.prodyna.ted.survey.perform.LoadSurveyModel.java", "BodyUseAPI": [], "Fixed commit": "2667756f13197db583bc02e10a482cab2e473723", "Url": "https://api.github.com/repos/Dr4K4n/survey", "Date": "2014-04-07T14:39:54Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (property.getColumn().isUnique()) { if (net.royqh.easypersist.entity.utils.TypeUtils.isStringType(property)) { clauses.add(((\"`\" + (property.getColumnName())) + \"` like ? \")); }else { clauses.add(((\"`\" + (property.getColumnName())) + \"` = ?\")); } }else { clauses.add(((\"`\" + (property.getColumnName())) + \"` = ?\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2882/buggy-version/src.net.royqh.easypersist.entity.generator.persistor.MySQLGenerator.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(((\"`\" + (property.getColumnName())) + \"` = ?\"))", "net.royqh.easypersist.entity.generator.persistor.SingleProperty.getColumnName()", "net.royqh.easypersist.entity.utils.TypeUtils.isStringType(net.royqh.easypersist.entity.generator.persistor.SingleProperty)", "java.util.List<java.lang.String>.add(((\"`\" + (property.getColumnName())) + \"` like ? \"))", "net.royqh.easypersist.entity.generator.persistor.SingleProperty.getColumnName()", "net.royqh.easypersist.entity.generator.persistor.SingleProperty.getColumnName()", "java.util.List<java.lang.String>.add(((\"`\" + (property.getColumnName())) + \"` = ?\"))"], "Fixed commit": "37e557a8ee06a95131eecf4f626184ea3e027177", "Url": "https://api.github.com/repos/royqh1979/EasyPersist", "Date": "2017-12-04T16:06:48Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (property.getColumn().isUnique()) { if (net.royqh.easypersist.entity.utils.TypeUtils.isStringType(property)) { clauses.add(((\"`\" + (property.getColumnName())) + \"` like ? \")); }else { clauses.add(((\"`\" + (property.getColumnName())) + \"` = ?\")); } }else { clauses.add(((\"`\" + (property.getColumnName())) + \"` = ?\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2882/buggy-version/src.net.royqh.easypersist.entity.generator.persistor.MySQLGenerator.java", "BodyUseAPI": ["net.royqh.easypersist.entity.generator.persistor.SingleProperty.getColumnName()", "net.royqh.easypersist.entity.generator.persistor.SingleProperty.getColumnName()", "net.royqh.easypersist.entity.utils.TypeUtils.isStringType(net.royqh.easypersist.entity.generator.persistor.SingleProperty)", "java.util.List<java.lang.String>.add(((\"`\" + (property.getColumnName())) + \"` like ? \"))", "java.util.List<java.lang.String>.add(((\"`\" + (property.getColumnName())) + \"` = ?\"))", "java.util.List<java.lang.String>.add(((\"`\" + (property.getColumnName())) + \"` = ?\"))", "net.royqh.easypersist.entity.generator.persistor.SingleProperty.getColumnName()"], "Fixed commit": "37e557a8ee06a95131eecf4f626184ea3e027177", "Url": "https://api.github.com/repos/royqh1979/EasyPersist", "Date": "2017-12-04T16:06:48Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getView().getSupportFragmentManager().isDestroyed()) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4706/buggy-version/common-ui.src.main.java.org.opensilk.common.ui.mortarfragment.FragmentManagerOwner.java", "BodyUseAPI": [], "Fixed commit": "ff673e05c8012c2e3835b3d457700c7887be3438", "Url": "https://api.github.com/repos/Zillode/syncthing-silk", "Date": "2015-07-24T07:22:07Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((org.wordpress.android.WordPress.getCurrentBlog()) == null) || (!(org.wordpress.android.WordPress.getCurrentBlog().isDotcomFlag()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4827/buggy-version/src.org.wordpress.android.ui.media.MediaBrowserActivity.java", "BodyUseAPI": [], "Fixed commit": "3a8d148386903530cebdce44ec7fe3f1afe79d3c", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2013-08-13T14:41:44Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isFirstLineHeader)) && (fieldNames.isEmpty())) { throw new org.apache.jorphan.util.JMeterError(\"Field names not provided.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7413/buggy-version/jmeter-data-provider.src.main.java.org.qamation.jmeter.data.provider.config.ExcelDataConfig.java", "BodyUseAPI": [], "Fixed commit": "4be2428ad7018eb756b5f1daae57636a7baa3838", "Url": "https://api.github.com/repos/gpawel/qamation", "Date": "2017-11-23T02:16:04Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fypa2c.cocome.tradingsystem.cashdeskline.components.cashDeskApplication.ShoppingCard.getActualShoppingCard()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(actualList.isEmpty())) { ((fypa2c.cocome.tradingsystem.cashdeskline.components.scannerController.IScannerControllerService) (requiredServicesFeature.getRequiredService(\"scannerController\").get())).sendProductBarCodeScannedEvent(actualList.get(((actualList.size()) - 1)).getBarcode()); }else { printInfoLog(\"The shopping card is empty, I have no product to add again, sorry!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2055/buggy-version/cocome-jadex-services.src.main.java.fypa2c.cocome.tradingsystem.cashdeskline.components.cashDeskApplication.CashDeskApplicationAgent.java", "BodyUseAPI": ["actualList.get(((actualList.size()) - 1)).getBarcode()", "java.util.LinkedList<fypa2c.cocome.tradingsystem.cashdeskline.transferObjects.ProductTO>.size()", "((fypa2c.cocome.tradingsystem.cashdeskline.components.scannerController.IScannerControllerService) (requiredServicesFeature.getRequiredService(\"scannerController\").get())).sendProductBarCodeScannedEvent(actualList.get(((actualList.size()) - 1)).getBarcode())", "java.util.LinkedList<fypa2c.cocome.tradingsystem.cashdeskline.transferObjects.ProductTO>.get(((actualList.size()) - 1))"], "Fixed commit": "c49f17edb45f93dcaa33639d575ab0897ea5314c", "Url": "https://api.github.com/repos/cocome-community-case-study/cocome-jadex-services", "Date": "2017-07-11T21:30:33Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInitialized)) { max = _max; isInitialized = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7821/buggy-version/Lib_maybitesMXJ.src.ch.maybites.mxj.utils.mirror.JitterConnector.java", "BodyUseAPI": [], "Fixed commit": "98fd09d12e3527db09ea1c3b413ecb7c81c5afff", "Url": "https://api.github.com/repos/maybites/Lib_maybitesMXJ", "Date": "2013-08-15T20:18:23Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getAttribute(org.xcolab.portlets.proposals.utils.context.ProposalsContextImpl.PERMISSIONS_ATTRIBUTE)) == null) { final org.xcolab.portlets.proposals.permissions.ProposalsPermissions proposalsPermissions = new org.xcolab.portlets.proposals.permissions.ProposalsPermissions(request, proposal, contestPhase); request.setAttribute(org.xcolab.portlets.proposals.utils.context.ProposalsContextImpl.PERMISSIONS_ATTRIBUTE, proposalsPermissions); request.setAttribute(org.xcolab.portlets.proposals.utils.context.ProposalsContextImpl.DISPLAY_PERMISSIONS_ATTRIBUTE, new org.xcolab.portlets.proposals.permissions.ProposalsDisplayPermissions(proposalsPermissions, proposal, contestPhase, request)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8166/buggy-version/portlets.proposals-portlet.src.main.java.org.xcolab.portlets.proposals.utils.context.ProposalsContextImpl.java", "BodyUseAPI": ["javax.portlet.PortletRequest.setAttribute(java.lang.String,org.xcolab.portlets.proposals.permissions.ProposalsDisplayPermissions)", "javax.portlet.PortletRequest.setAttribute(java.lang.String,org.xcolab.portlets.proposals.permissions.ProposalsPermissions)"], "Fixed commit": "e17013ae9a74adf8179741af2309e4addfadb990", "Url": "https://api.github.com/repos/CCI-MIT/XCoLab", "Date": "2016-10-21T17:09:50Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(holder.getOuputId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (holderOutputValue == null) { holderOutputValue = context.getInputData().get(holder.getInputId()); if (holderOutputValue == null) holderOutputValue = holder.createInstance(context); result.put(holder.getOuputId(), holderOutputValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7609/buggy-version/jbpm-form-modeler-core.jbpm-form-modeler-service.jbpm-form-modeler-ui.src.main.java.org.jbpm.formModeler.core.processing.impl.FormProcessorImpl.java", "BodyUseAPI": [], "Fixed commit": "b547824e2832badec6dd60377fa304f2e9d6b296", "Url": "https://api.github.com/repos/droolsjbpm/jbpm-form-modeler", "Date": "2013-09-10T10:36:39Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAccount) == null) mAccount = com.fsck.k9.activity.setup.Preferences.getPreferences(this).newAccount();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1744/buggy-version/src.com.fsck.k9.activity.setup.AccountSetupBasics.java", "BodyUseAPI": [], "Fixed commit": "323159ef970fee2a10cb9ec7cefa21ab34fc6095", "Url": "https://api.github.com/repos/k9mail/k-9", "Date": "2013-03-05T17:01:54Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAccount) == null) mAccount = com.fsck.k9.activity.setup.Preferences.getPreferences(this).newAccount();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1744/buggy-version/src.com.fsck.k9.activity.setup.AccountSetupBasics.java", "BodyUseAPI": [], "Fixed commit": "323159ef970fee2a10cb9ec7cefa21ab34fc6095", "Url": "https://api.github.com/repos/k9mail/k-9", "Date": "2013-03-05T17:01:54Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["madgik.exareme.master.client.AdpDBClient.readTable(java.lang.String,madgik.exareme.master.connector.DataSerialization)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (readTable == null) { madgik.exareme.master.gateway.async.handler.HttpAsyncMiningHandler.log.error(\"Registry not updated yet.\"); response.setEntity(new org.apache.http.nio.entity.NStringEntity(madgik.exareme.master.gateway.async.handler.HttpAsyncMiningHandler.msg)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8631/buggy-version/exareme-master.src.main.java.madgik.exareme.master.gateway.async.handler.HttpAsyncMiningHandler.java", "BodyUseAPI": [], "Fixed commit": "a94f48f85b5b7cdbea429c6e3844e66dacb9a5b0", "Url": "https://api.github.com/repos/alexpap/exareme", "Date": "2016-04-19T12:21:02Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotEmpty(telegramId)) { net.gmsworld.devicelocator.MainActivity.sendTelegramRegistrationRequest(this, telegramId, 1); android.widget.Toast.makeText(getApplicationContext(), \"You'll receive verification instruction to your chat\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2915/buggy-version/app.src.main.java.net.gmsworld.devicelocator.MainActivity.java", "BodyUseAPI": ["net.gmsworld.devicelocator.MainActivity.sendTelegramRegistrationRequest(net.gmsworld.devicelocator.MainActivity,java.lang.String,int)"], "Fixed commit": "aab23788332e74522637e23bb3d542e2e81a1763", "Url": "https://api.github.com/repos/jstakun/device-locator", "Date": "2017-07-30T12:55:11Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.equals(email, newEmailAddress))) { android.widget.Toast.makeText(getApplicationContext(), \"Make sure to specify valid email address!\", Toast.LENGTH_SHORT).show(); emailInput.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2915/buggy-version/app.src.main.java.net.gmsworld.devicelocator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "aab23788332e74522637e23bb3d542e2e81a1763", "Url": "https://api.github.com/repos/jstakun/device-locator", "Date": "2017-07-30T12:55:11Z"},
{"Line": "=>549", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.equals(phoneNumber, newPhoneNumber))) { android.widget.Toast.makeText(getApplicationContext(), \"Make sure to specify valid phone number!\", Toast.LENGTH_SHORT).show(); phoneNumberInput.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2915/buggy-version/app.src.main.java.net.gmsworld.devicelocator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "aab23788332e74522637e23bb3d542e2e81a1763", "Url": "https://api.github.com/repos/jstakun/device-locator", "Date": "2017-07-30T12:55:11Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotEmpty(email)) { android.widget.Toast.makeText(getApplicationContext(), \"You'll receive verification instruction to your email address\", Toast.LENGTH_LONG).show(); net.gmsworld.devicelocator.MainActivity.sendEmailRegistrationRequest(this, email, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2915/buggy-version/app.src.main.java.net.gmsworld.devicelocator.MainActivity.java", "BodyUseAPI": ["net.gmsworld.devicelocator.MainActivity.sendEmailRegistrationRequest(net.gmsworld.devicelocator.MainActivity,java.lang.String,int)"], "Fixed commit": "aab23788332e74522637e23bb3d542e2e81a1763", "Url": "https://api.github.com/repos/jstakun/device-locator", "Date": "2017-07-30T12:55:11Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fromBackStack)) { com.midtrans.sdk.uikit.models.SavedCardList savedCardList = ((com.midtrans.sdk.uikit.models.SavedCardList) (getArguments().getSerializable(com.midtrans.sdk.uikit.fragments.SavedCardListFragment.PARAM_CARD_LIST))); if (savedCardList != null) { savedCards = ((java.util.ArrayList<com.midtrans.sdk.corekit.models.SaveCardRequest>) (savedCardList.saveCardRequests)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/9064/buggy-version/uikit.src.main.java.com.midtrans.sdk.uikit.fragments.SavedCardListFragment.java", "BodyUseAPI": [], "Fixed commit": "8c34609b699b4e6f2e17c5dfc4c260a554c06c33", "Url": "https://api.github.com/repos/veritrans/veritrans-android", "Date": "2017-05-30T02:05:49Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((interval) > 0) { try { java.lang.Thread.sleep(interval); } catch (java.lang.InterruptedException ex) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5240/buggy-version/src.bftsmart.demo.microbenchmarks.ThroughputLatencyClient.java", "BodyUseAPI": [], "Fixed commit": "c272c430106587c08e154fb389ed0eb452ab21ab", "Url": "https://api.github.com/repos/bft-smart/library", "Date": "2017-04-22T02:34:30Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.lang.model.element.TypeElement.getEnclosingElement()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parent.getKind()) != (javax.lang.model.element.ElementKind.CLASS)) { throw new java.lang.RuntimeException(\"Cannot create parent chain. Non-class parent found.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7928/buggy-version/processor.src.main.java.com.matthewtamlin.spyglass.processor.core.CompanionNamer.java", "BodyUseAPI": [], "Fixed commit": "7b0dcb475a477f8fb737da85b29a0e0aedb6a7f3", "Url": "https://api.github.com/repos/MatthewTamlin/Spyglass", "Date": "2017-09-09T07:09:26Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.resources.ResourcesPlugin.getWorkspace().getRoot().getProject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((exampleProject == null) || (!(exampleProject.exists()))) || (!(exampleProject.isOpen()))) { browser.setText(\"<html><body>The Rascal tutor is now loading: <progress max=\\\"100\\\">, but you have not imported the example-project into your workspace! So please do so, it is contained in the rascal project.</progress></body></html>\"); }else { browser.setText(\"<html><body>The Rascal tutor is now loading: <progress max=\\\"100\\\"></progress></body></html>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/451/buggy-version/src.org.rascalmpl.eclipse.perspective.views.Tutor.java", "BodyUseAPI": [], "Fixed commit": "37e944a8e1c3a271dc8bd0f2ddcaadd08415dcde", "Url": "https://api.github.com/repos/cwi-swat/rascal-eclipse", "Date": "2014-10-27T19:07:26Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (staticMethod) { method = callType.getBestMatchingStaticMethod(methodName, parameterTypes); }else { method = callType.getBestMatchingMethod(methodName, parameterTypes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6178/buggy-version/errai-codegen.src.main.java.org.jboss.errai.codegen.builder.callstack.MethodCall.java", "BodyUseAPI": [], "Fixed commit": "594175fde9aaf4aec7fe2a822d98b57782f3abfe", "Url": "https://api.github.com/repos/tiagobento/errai", "Date": "2017-09-19T19:10:20Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isFileAlreadySaved) == true) { android.content.Intent iStartingActivity = new android.content.Intent(); iStartingActivity.setClassName(\"somitsolutions.training.android.androidpaint\", \"somitsolutions.training.android.androidpaint.StartingActivity\"); startActivity(iStartingActivity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1749/buggy-version/src.somitsolutions.training.android.androidpaint.AndroidPaint.java", "BodyUseAPI": [], "Fixed commit": "43cf385549f4823bc8a1d67c2c153b340b4272ef", "Url": "https://api.github.com/repos/sommukhopadhyay/AndroidPaint", "Date": "2013-05-08T17:53:19Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.command.Message.getOriginalDestination()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (origDest != null) { org.apache.activemq.util.ByteSequence origDestBytes = marshaller.marshal(origDest); origDestBytes.compact(); coreMessage.putBytesProperty(org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.AMQ_MSG_ORIG_DESTINATION, origDestBytes.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2225/buggy-version/artemis-protocols.artemis-openwire-protocol.src.main.java.org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.java", "BodyUseAPI": ["org.apache.activemq.wireformat.WireFormat.marshal(org.apache.activemq.command.ActiveMQDestination)"], "Fixed commit": "e79fd798bcfd76bc1384d7bee5040ee3a1ffb085", "Url": "https://api.github.com/repos/clebertsuconic/activemq-artemis", "Date": "2016-02-18T12:52:32Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (writeMorph) { if ((pos.length) > 1) { de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.morph.MorphologicalFeatures analysis = featuresParser.parse(aJCas, token, pos[1]); token.setMorph(analysis); }else { de.tudarmstadt.ukp.dkpro.core.api.lexmorph.type.morph.MorphologicalFeatures analysis = featuresParser.parse(aJCas, token, \"_\"); token.setMorph(analysis); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3165/buggy-version/dkpro-core-stagger.src.main.java.org.dkpro.core.stagger.StockholmPosTagger.java", "BodyUseAPI": [], "Fixed commit": "9202ef1c6951b410677dc80195aa908fb117be6d", "Url": "https://api.github.com/repos/TrafikverketBTH/dkpro-core", "Date": "2017-05-29T19:52:01Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((result.length) > 1) && ((result[1]) instanceof java.lang.Integer)) { int type = ((java.lang.Integer) (result[1])); switch (type) { case 503 : mDialogMessage = res.getString(R.string.sync_too_busy); break; default : mDialogMessage = res.getString(R.string.sync_log_error_specific, java.lang.Integer.toString(type), ((java.lang.String) (result[2]))); break; } }else if ((result[0]) instanceof java.lang.String) { mDialogMessage = res.getString(R.string.sync_log_error_specific, (-1), ((java.lang.String) (result[0]))); }else { mDialogMessage = res.getString(R.string.sync_generic_error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4083/buggy-version/src.com.ichi2.anki.DeckPicker.java", "BodyUseAPI": ["android.content.res.Resources.getString(R.string.sync_log_error_specific,java.lang.String,java.lang.Object)", "android.content.res.Resources.getString(R.string.sync_log_error_specific,int,java.lang.Object)"], "Fixed commit": "e5685df026ec812be8d8e23f36b315243215e5cb", "Url": "https://api.github.com/repos/iniju/Anki-Android", "Date": "2012-07-14T10:08:29Z"},
{"Line": "=>1316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((currentStepConfig != null) && (!(si.getSubmissionConfig().isWorkflow()))) { if (currentStepConfig.isVisible()) { nextStep = currentStepConfig; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6675/buggy-version/dspace-jspui.src.main.java.org.dspace.app.webui.servlet.SubmissionController.java", "BodyUseAPI": ["org.dspace.app.util.SubmissionStepConfig.isVisible()"], "Fixed commit": "88b4e595415687bb4ae89b1afe52fed634c8138c", "Url": "https://api.github.com/repos/Cineca/DSpace", "Date": "2016-06-14T08:34:41Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(getGroups(group).isEmpty())) { if (groupCondition == null) { groupCondition = parseGroup(group, query); }else { groupCondition = clarifyCondition(groupCondition, group.getCondition(), parseGroup(group, query)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1965/buggy-version/src.main.java.com.springapp.mvc.service.QueryBuildService.java", "BodyUseAPI": ["com.springapp.mvc.service.QueryBuildService.parseGroup(com.springapp.mvc.dto.Group,org.jooq.SelectQuery)", "com.springapp.mvc.service.QueryBuildService.parseGroup(com.springapp.mvc.dto.Group,org.jooq.SelectQuery)", "com.springapp.mvc.dto.Group.getCondition()", "com.springapp.mvc.service.QueryBuildService.clarifyCondition(org.jooq.Condition,group.getCondition(),org.jooq.Condition)"], "Fixed commit": "c9e9e97f914cfac55ab816fdb9106c31346ac0f7", "Url": "https://api.github.com/repos/KhrystynaMakar/jOOQTest", "Date": "2014-09-23T09:21:00Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.isBlank(md.getLocationId()))) { configurer.addZone(((org.cloudifysource.esc.driver.provisioning.ElasticMachineProvisioningCloudifyAdapter.CLOUD_ZONE_PREFIX) + (md.getLocationId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6349/buggy-version/esc.src.main.java.org.cloudifysource.esc.driver.provisioning.ElasticMachineProvisioningCloudifyAdapter.java", "BodyUseAPI": ["org.cloudifysource.esc.driver.provisioning.MachineDetails.getLocationId()", "org.openspaces.admin.zone.config.ExactZonesConfigurer.addZone(((org.cloudifysource.esc.driver.provisioning.ElasticMachineProvisioningCloudifyAdapter.CLOUD_ZONE_PREFIX) + (md.getLocationId())))"], "Fixed commit": "a7dba2d8ba522206472eab7b2c0b6c9ceb2739b1", "Url": "https://api.github.com/repos/CloudifySource/cloudify", "Date": "2012-09-05T11:39:16Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6865/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "217d958164bf2287813be868a4c02f2350c7fb57", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((lastClickedCategoryButton) != (button11)) || (but != (button11))) { lastClickedCategoryButton.setBackground(lastClickedNormalBackground); lastClickedCategoryButton.setClickable(true); lastClickedNormalBackground = tempBackground; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6752/buggy-version/Timeline-Alfa.app.src.main.java.bodega.timeline_alfa.Category.java", "BodyUseAPI": [], "Fixed commit": "1ef87686e68b6602b330519b9745c0e4cdc2ccd8", "Url": "https://api.github.com/repos/davidhallen/Victorious-Secret", "Date": "2015-05-24T12:11:07Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (but != (button11)) { but.setClickable(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6752/buggy-version/Timeline-Alfa.app.src.main.java.bodega.timeline_alfa.Category.java", "BodyUseAPI": ["android.widget.Button.setClickable(boolean)"], "Fixed commit": "1ef87686e68b6602b330519b9745c0e4cdc2ccd8", "Url": "https://api.github.com/repos/davidhallen/Victorious-Secret", "Date": "2015-05-24T12:11:07Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (exception instanceof org.springframework.core.NestedRuntimeException) { org.springframework.core.NestedRuntimeException nestedRuntimeException = ((org.springframework.core.NestedRuntimeException) (exception)); return nestedRuntimeException.getRootCause().getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2671/buggy-version/src.main.java.tnmk.common.exception.util.ExceptionUtil.java", "BodyUseAPI": [], "Fixed commit": "5a772008eb80a4bc29d1e25df5e88ae76f92a692", "Url": "https://api.github.com/repos/khoitnm/english-learning", "Date": "2017-02-17T04:54:25Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(seenGroups.contains(nextGroup.getGroupID()))) { seenGroups.add(nextGroup.getGroupID()); updates.add(new enterprises.orbital.evekit.model.eve.SkillGroup(nextGroup.getGroupID(), nextGroup.getGroupName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3964/buggy-version/src.main.java.enterprises.orbital.evekit.model.eve.sync.SkillTreeSync.java", "BodyUseAPI": ["enterprises.orbital.evexmlapi.eve.ISkillGroup.getGroupName()", "java.util.Set<java.lang.Integer>.add(nextGroup.getGroupID())", "java.util.List<enterprises.orbital.evekit.model.RefCachedData>.add(enterprises.orbital.evekit.model.eve.SkillGroup)", "enterprises.orbital.evexmlapi.eve.ISkillGroup.getGroupID()", "enterprises.orbital.evexmlapi.eve.ISkillGroup.getGroupID()"], "Fixed commit": "f71b2bd6e3a038c974c19561a26782761cd7b2cd", "Url": "https://api.github.com/repos/OrbitalEnterprises/evekit-sync", "Date": "2016-12-06T02:29:40Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((query.getType()) != (io.druid.query.Query.TIME_BOUNDARY)) { currentHNLoad = response.headers().get(\"CurrentHNLoad\"); currentHNLoadRuntime = response.headers().get(\"CurrentHNLoadRuntime\"); currentHNLoadTime = sdf.parse(response.headers().get(\"CurrentHNLoadTime\")); hnQueryTimeMillis = 0; hnQuerySegmentTimeStr = response.headers().get(\"HNQuerySegmentTime\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8250/buggy-version/server.src.main.java.io.druid.client.DirectDruidClient.java", "BodyUseAPI": [], "Fixed commit": "4317ce0de736702bdede3eb9e8755c2e076f3407", "Url": "https://api.github.com/repos/mghosh4/druid", "Date": "2017-07-15T09:49:08Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isMobile) { query = (((((\"SELECT * FROM Document WHERE (ecm:primaryType <> \\'Folder\\') AND (ecm:fulltext = \\\"\" + key) + \"\\\") AND (ecm:isCheckedInVersion = 0) AND (ecm:path STARTSWITH \\\"\") + (nuxeoResource.getIntranetPath())) + \"\\\") \") + (defaultCondition)) + \" ORDER BY dc:modified DESC\"; }else { query = (((((\"SELECT * FROM Document WHERE (ecm:fulltext = \\\"\" + key) + \"\\\") AND (ecm:isCheckedInVersion = 0) AND (ecm:path STARTSWITH \\\"\") + (nuxeoResource.getIntranetPath())) + \"\\\") \") + (defaultCondition)) + \" ORDER BY dc:modified DESC\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6682/buggy-version/esup-portlet-intranet-web-springmvc-portlet.src.main.java.org.esup.portlet.intranet.nuxeo.NuxeoServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "7d85b8c9fdb300ef55c2d6058eede2454e420595", "Url": "https://api.github.com/repos/EsupPortail/esup-portlet-intranet", "Date": "2013-04-26T11:40:04Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapter) != null) { mAdapter.cleanup(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/9183/buggy-version/client.src.LLAMA.app.src.main.java.org.llama.llama.chat.ChatActivity.java", "BodyUseAPI": [], "Fixed commit": "82aa65df3f615e478c0985dbacce027aa52efd42", "Url": "https://api.github.com/repos/feberhard/LLAMA", "Date": "2017-01-16T17:30:21Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (vertex != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7383/buggy-version/src.main.java.com.vertixtech.antiquity.graph.ActiveVersionedGraph.java", "BodyUseAPI": [], "Fixed commit": "7e175c69f2bb031f6946ad0ea3bba212fd177763", "Url": "https://api.github.com/repos/asaf/antiquity", "Date": "2014-06-08T12:45:04Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(timeNotification.getComponentCache().isClientAttached(timeNotification))) { timeNotification.attachPresenter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4246/buggy-version/demo.src.main.java.io.reist.sandbox.time.presenter.TimePresenter.java", "BodyUseAPI": ["io.reist.sandbox.time.view.TimeNotification.attachPresenter()"], "Fixed commit": "ad84c9be4df2a1ffc56b134a3623a901853492a8", "Url": "https://api.github.com/repos/ragnor-rs/visum", "Date": "2016-07-21T15:10:44Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(excecute(\"SELECT EXISTS(SELECT * FROM `teknogeek_settings`.`Global_Settings` WHERE Value =\".concat(value).concat(\";\")))) { return excecute(((((\"INSERT INTO `teknogeek_settings`.`Global_Settings` (`Setting`, `Value`) VALUES ('\" + setting) + \"', '\") + value) + \"');\")); }else { return excecute(\"UPDATE `teknogeek_settings`.`Global_Settings` SET Value='\".concat(value).concat(\"' WHERE 'Setting' = \".concat(setting))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/149/buggy-version/src.com.unacceptableuse.unacceptablebot.handler.MySQLConnection.java", "BodyUseAPI": ["com.unacceptableuse.unacceptablebot.handler.MySQLConnection.excecute(java.lang.String)", "java.lang.String.concat(java.lang.String)", "com.unacceptableuse.unacceptablebot.handler.MySQLConnection.excecute(java.lang.String)", "java.lang.String.concat(java.lang.String)"], "Fixed commit": "c24284b48f7644a7f551c8a4169e96c8899f5a45", "Url": "https://api.github.com/repos/UnacceptableUse/UnacceptableBOT2", "Date": "2014-08-31T11:49:26Z"},
{"Line": "=>789", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((swap && swapRight) && ((swipeMode) == (SwipeListView.SWIPE_MODE_LEFT))) { swap = false; }else if ((swap && (!swapRight)) && ((swipeMode) == (SwipeListView.SWIPE_MODE_RIGHT))) { swap = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7395/buggy-version/swipelistview.src.main.java.com.fortysevendeg.swipelistview.SwipeListViewTouchListener.java", "BodyUseAPI": [], "Fixed commit": "40bd2cb2e568f36d726f48fe04027867163b87f8", "Url": "https://api.github.com/repos/zebulon988/android-swipelistview", "Date": "2014-05-15T02:05:34Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["applicationContext.getEnvironment().getProperty(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(excludeTables)) { jhipsterTables.addAll(java.util.Arrays.asList(excludeTables.toUpperCase().split(\",\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2470/buggy-version/core.src.main.java.io.github.jhipster.loaded.reloader.LiquibaseReloader.java", "BodyUseAPI": ["java.util.Arrays.asList(java.lang.String[])", "java.util.List<java.lang.String>.addAll(java.util.List<java.lang.String>)", "java.lang.String.split(java.lang.String)", "java.lang.String.toUpperCase()"], "Fixed commit": "623433d7636ddd7b29b66e64ffe5cc91ee1b4fc9", "Url": "https://api.github.com/repos/jhipster/jhipster-loaded", "Date": "2014-06-02T13:39:51Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getRemainingCapacity()) > 0) { super.directlyInsertJob(time, job); this.experiment.cancelEvent(job.getJobFinishEvent()); double timeout = time + (this.maxDelay); core.DreamWeaverJobTimeoutEvent timeoutEvent = new core.DreamWeaverJobTimeoutEvent(timeout, this.experiment, job, this); this.experiment.addEvent(timeoutEvent); this.timeouteventMap.put(job, timeoutEvent); }else { this.queue.add(job); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4752/buggy-version/src.datacenter.DreamWeaverServer.java", "BodyUseAPI": [], "Fixed commit": "4b84d716aa227a7abd2214b80a9d5f58ff5d5fa2", "Url": "https://api.github.com/repos/meisner/BigHouse", "Date": "2012-07-10T05:54:43Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.nav_about)) { com.foi.air1603.sport_manager.MainActivity.replaceFragment(new com.foi.air1603.sport_manager.view.fragments.AboutFragment()); }else if (id == (R.id.nav_logout)) { logout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7461/buggy-version/app.src.main.java.com.foi.air1603.sport_manager.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "dcba569d1da1e0436a8c44e8f9ea51b1584e9e89", "Url": "https://api.github.com/repos/maxxis95/Sport-Manager", "Date": "2017-01-27T12:36:20Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (number == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2975/buggy-version/src.ch.zahw.students.sudokuhelper.solve.algorithm.HiddenSingleAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "d8076204f4f9162e01b77826b26b9bb99f0fae23", "Url": "https://api.github.com/repos/sbaechler/sudokuhelper", "Date": "2014-06-07T18:32:15Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((translateText) != null) || (!(translateText.equals(\"\")))) { translateText.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5831/buggy-version/app.src.main.java.com.codepath.myapplication.LanguageFragments.LanguageMainActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.clear()"], "Fixed commit": "5e2400f4fd526f7d8ccffc94b9511b1fe9932705", "Url": "https://api.github.com/repos/AbinayaRajesh/Project", "Date": "2017-07-31T18:15:24Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((req.getNoOfAliquots()) == null) || ((req.getNoOfAliquots()) < 1L)) { oce.addError(SpecimenErrorCode.INVALID_ATTR_VALUE, \"noOfAliquots\"); throw oce; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2827/buggy-version/WEB-INF.src.com.krishagni.catissueplus.core.biospecimen.domain.factory.impl.SpecimenRequirementFactoryImpl.java", "BodyUseAPI": [], "Fixed commit": "23ea23182a5f47a13a55d89d70f9d603d2ce95bf", "Url": "https://api.github.com/repos/krishagni/openspecimen", "Date": "2015-01-08T10:17:15Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((req.getQtyPerAliquot()) == null) || ((req.getQtyPerAliquot()) <= 0L)) { oce.addError(SpecimenErrorCode.INVALID_ATTR_VALUE, \"qtyPerAliquot\"); throw oce; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2827/buggy-version/WEB-INF.src.com.krishagni.catissueplus.core.biospecimen.domain.factory.impl.SpecimenRequirementFactoryImpl.java", "BodyUseAPI": [], "Fixed commit": "23ea23182a5f47a13a55d89d70f9d603d2ce95bf", "Url": "https://api.github.com/repos/krishagni/openspecimen", "Date": "2015-01-08T10:17:15Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.krishagni.catissueplus.core.biospecimen.domain.AliquotSpecimensRequirement.getParentSrId()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (parentSrId != null) { parent = daoFactory.getSpecimenRequirementDao().getById(parentSrId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2827/buggy-version/WEB-INF.src.com.krishagni.catissueplus.core.biospecimen.domain.factory.impl.SpecimenRequirementFactoryImpl.java", "BodyUseAPI": ["daoFactory.getSpecimenRequirementDao().getById(java.lang.Long)"], "Fixed commit": "23ea23182a5f47a13a55d89d70f9d603d2ce95bf", "Url": "https://api.github.com/repos/krishagni/openspecimen", "Date": "2015-01-08T10:17:15Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.ConnectivityManager.getActiveNetworkInfo()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (info != null) { int netType = info.getType(); int netSubtype = info.getSubtype(); if ((netType == (android.net.ConnectivityManager.TYPE_WIFI)) || (((netType == (android.net.ConnectivityManager.TYPE_MOBILE)) && (netSubtype == (android.telephony.TelephonyManager.NETWORK_TYPE_UMTS))) && (!(mTelephony.isNetworkRoaming())))) { return info.isConnected(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3865/buggy-version/src.com.voc4u.activity.BaseWordActivity.java", "BodyUseAPI": ["android.net.NetworkInfo.isConnected()", "android.net.NetworkInfo.getType()", "android.net.NetworkInfo.getSubtype()"], "Fixed commit": "b3d9c75e4b1f572907f55b4b36fc177ff7852f1c", "Url": "https://api.github.com/repos/m1uan/voc4u", "Date": "2012-04-25T16:22:23Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(url.startsWith(HttpChannel.HTTP_SCHEME))) { currentURI = new java.net.URI((((reactor.io.net.http.HttpChannel.HTTP_SCHEME) + \"://\") + url)); }else { currentURI = new java.net.URI(url); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2558/buggy-version/reactor-net.src.main.java.reactor.io.net.impl.netty.http.NettyHttpClient.java", "BodyUseAPI": [], "Fixed commit": "dba2c0435026ebb94540fc856cb1e7d7e859cd8a", "Url": "https://api.github.com/repos/kadyana/reactor", "Date": "2015-05-14T10:17:33Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.toomasr.sgf4j.parser.GameNode.getMoveNo()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (moveNo == (-1)) { moveNo = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4962/buggy-version/src.main.java.com.toomasr.sgf4j.gui.MainUI.java", "BodyUseAPI": [], "Fixed commit": "7dfd085a973f73221c56961d795e2a96c35d6f07", "Url": "https://api.github.com/repos/toomasr/sgf4j-gui", "Date": "2015-12-25T20:00:46Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((requestCode == (com.github.zan_kusterle.view.HostPlaylistActivity.REQUEST_ENABLE_DEVICE_DISCOVERABILITY)) && (resultCode == 1)) { ((com.github.zan_kusterle.presenter.HostPlaylistPresenter) (presenter)).acceptConnections(); }else { super.onActivityResult(requestCode, resultCode, data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/176/buggy-version/app.src.main.java.com.github.zan_kusterle.view.HostPlaylistActivity.java", "BodyUseAPI": ["com.github.zan_kusterle.view.PlaylistActivity.onActivityResult(int,int,android.content.Intent)"], "Fixed commit": "270346eb41f3f01160bdc4342b8937b1227f75d9", "Url": "https://api.github.com/repos/zan-kusterle/Guppy", "Date": "2017-01-07T15:00:02Z"},
{"Line": "=>664", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((country.getMarketSellPrice(1)) < 1) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4714/buggy-version/kyoto.src.main.java.uk.ac.ic.kyoto.annex1reduce.CountrySimulator.java", "BodyUseAPI": [], "Fixed commit": "88ad9343090d043869888773f00b20fdb7e828da", "Url": "https://api.github.com/repos/farhanrahman/kyoto", "Date": "2012-06-23T18:37:35Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!outOfData) { dataTime.setDate(data[dayPoolIndex].getTime()); if (sameDate(dataTime, date)) { pulledData.add(new com.github.mikephil.charting.data.BarEntry(((int) (data[dayPoolIndex].getTotalAmount())), i)); dayPoolIndex--; }else { pulledData.add(new com.github.mikephil.charting.data.BarEntry(0, i)); } }else { pulledData.add(new com.github.mikephil.charting.data.BarEntry(0, i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2257/buggy-version/app.src.main.java.com.bizfit.bizfit.views.CustomBarChart.java", "BodyUseAPI": [], "Fixed commit": "86c73d114ee7d5300d446ee1c9c311d6bf449a73", "Url": "https://api.github.com/repos/nyyppa/BizFit", "Date": "2016-01-28T21:10:19Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (resultSet.next()) result = resultSet.getInt(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/964/buggy-version/src.main.java.servlets.LoginServlet.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(int)"], "Fixed commit": "a4245b580f1d951acb1d82883a51dbdbb470a634", "Url": "https://api.github.com/repos/Endriu93/pdfarchive", "Date": "2016-01-10T23:17:04Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (sandboxCallback != null) sandboxCallback.sandboxedAuthenticationDone(new pl.edu.icm.unity.server.authn.LocalSandboxAuthnContext(ret));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2842/buggy-version/std-extensions.src.main.java.pl.edu.icm.unity.stdext.credential.CertificateVerificator.java", "BodyUseAPI": ["pl.edu.icm.unity.server.authn.remote.SandboxAuthnResultCallback.sandboxedAuthenticationDone(pl.edu.icm.unity.server.authn.LocalSandboxAuthnContext)"], "Fixed commit": "1a1a52cdbcc8b25363d0e69d47f9a3db40fece6a", "Url": "https://api.github.com/repos/unity-idm/unity", "Date": "2015-06-01T09:49:26Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["powercraft.api.gres.PC_GresListBox.getSelection()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (select == (-1)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7095/buggy-version/powercraft.api.gres.PC_GresAutoCompleteWindow.java", "BodyUseAPI": [], "Fixed commit": "f8117cf1971087b92b233cf3cb2c40f83b1305b2", "Url": "https://api.github.com/repos/PowerCraft/API", "Date": "2014-05-04T21:13:52Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["powercraft.api.gres.PC_GresListBox.getSelection()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (select == (-1)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7095/buggy-version/powercraft.api.gres.PC_GresAutoCompleteWindow.java", "BodyUseAPI": [], "Fixed commit": "f8117cf1971087b92b233cf3cb2c40f83b1305b2", "Url": "https://api.github.com/repos/PowerCraft/API", "Date": "2014-05-04T21:13:52Z"},
{"Line": "=>601", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((undoEntityTypes) != null) && (undoEntityTypes.contains(entity.getType()))) { data.removed(entity); if (entity instanceof org.bukkit.entity.Hanging) { entity.remove(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3127/buggy-version/Magic.src.main.java.com.elmakers.mine.bukkit.block.UndoList.java", "BodyUseAPI": ["com.elmakers.mine.bukkit.entity.EntityData.removed(org.bukkit.entity.Entity)", "org.bukkit.entity.Entity.remove()"], "Fixed commit": "d9573ac30de0385c2c12b243aeed8bcc1cce3429", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2017-04-30T18:40:42Z"},
{"Line": "=>869", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mouseCatchingStage.isIconified())) { pictureStage.setX(mouseCatchingStage.getX()); if (lockedControllerBox) { controllerBox.fitScreen(); } saveState(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2440/buggy-version/annotationtool.annotation.AnnotationToolApplication.java", "BodyUseAPI": ["javafx.stage.Stage.getX()", "javafx.stage.Stage.setX(mouseCatchingStage.getX())"], "Fixed commit": "13637456100389c8e854a5cf8cf57065abc963fa", "Url": "https://api.github.com/repos/seedor87/scratchpad_project", "Date": "2017-08-15T19:24:47Z"},
{"Line": "=>883", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mouseCatchingStage.isIconified())) { pictureStage.setY(mouseCatchingStage.getY()); if (lockedControllerBox) { controllerBox.fitScreen(); } saveState(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2440/buggy-version/annotationtool.annotation.AnnotationToolApplication.java", "BodyUseAPI": ["javafx.stage.Stage.getY()", "javafx.stage.Stage.setY(mouseCatchingStage.getY())"], "Fixed commit": "13637456100389c8e854a5cf8cf57065abc963fa", "Url": "https://api.github.com/repos/seedor87/scratchpad_project", "Date": "2017-08-15T19:24:47Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (objectEntities.contains(point)) objectEntities.remove(point);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1678/buggy-version/src.engine.network.client.ClientLoading.java", "BodyUseAPI": ["java.util.ArrayList<java.awt.Point>.remove(java.awt.Point)"], "Fixed commit": "4564c32f9ea61ef984fea9c9106f1d45c7454e21", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2015-11-22T19:46:27Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hp > 20) hp = 20;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/9022/buggy-version/src.me.libraryaddict.librarys.Abilities.Worm.java", "BodyUseAPI": [], "Fixed commit": "e989f09753aac7a836ca4b5bb1cb285047d8ea5d", "Url": "https://api.github.com/repos/libraryaddict/LibsMcpvp", "Date": "2013-07-13T23:25:30Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4978/buggy-version/src.main.java.org.jenkinsci.plugins.dirdigger.FileTreeBuilder.java", "BodyUseAPI": [], "Fixed commit": "b834943d259b2baba27a5f3f17d64d4254794c4a", "Url": "https://api.github.com/repos/klimas7/dir-digger-plugin", "Date": "2017-10-01T16:46:28Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4428/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "689340f35d9e811560dffcfe1f87539eeb9b3d0a", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-06T13:22:23Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((board.getPosition(mColumn, mRow)) != (Counter.EMPTY)) { throw new tp.pr5.logic.InvalidMove(\"Invalid move: cell already has a counter\"); }else { boolean up = upMoveTransformations(board); boolean down = downMoveTransformations(board); boolean right = rightMoveTransformations(board); boolean left = leftMoveTransformations(board); boolean upRD = upRightDiagonalMoveTransformations(board); boolean upLD = upLeftDiagonalMoveTransformations(board); boolean downRD = downRightDiagonalMoveTransformations(board); boolean downLD = downLeftDiagonalMoveTransformations(board); if (((((((up || down) || right) || left) || upRD) || upLD) || downRD) || downLD) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1228/buggy-version/src.tp.pr5.logic.ReversiMove.java", "BodyUseAPI": ["tp.pr5.logic.ReversiMove.upMoveTransformations(tp.pr5.logic.Board)", "tp.pr5.logic.ReversiMove.downRightDiagonalMoveTransformations(tp.pr5.logic.Board)", "tp.pr5.logic.ReversiMove.rightMoveTransformations(tp.pr5.logic.Board)", "tp.pr5.logic.ReversiMove.downLeftDiagonalMoveTransformations(tp.pr5.logic.Board)", "tp.pr5.logic.ReversiMove.upRightDiagonalMoveTransformations(tp.pr5.logic.Board)", "tp.pr5.logic.ReversiMove.leftMoveTransformations(tp.pr5.logic.Board)", "tp.pr5.logic.ReversiMove.downMoveTransformations(tp.pr5.logic.Board)", "tp.pr5.logic.ReversiMove.upLeftDiagonalMoveTransformations(tp.pr5.logic.Board)"], "Fixed commit": "14d0057fd00bbc2d12323a4c551ffca40e2d5798", "Url": "https://api.github.com/repos/Jorjatorz/Project5-TP", "Date": "2015-05-26T08:10:50Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (classLoader == null) { classLoader = createClassLoader(getClassPathArchives()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3681/buggy-version/spring-boot-tools.spring-boot-loader.src.main.java.org.springframework.boot.loader.Launcher.java", "BodyUseAPI": [], "Fixed commit": "7eeec24fc0539410e394359c033b6e56c1d1582c", "Url": "https://api.github.com/repos/aantono/spring-boot", "Date": "2014-10-07T00:38:31Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getSystemClassLoader()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((systemClassLoader != null) && (org.springframework.boot.loader.SpringBootSystemClassLoader.class.isAssignableFrom(systemClassLoader.getClass()))) { classLoader = ((org.springframework.boot.loader.SpringBootSystemClassLoader) (systemClassLoader)).getSpringClassLoader(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3681/buggy-version/spring-boot-tools.spring-boot-loader.src.main.java.org.springframework.boot.loader.Launcher.java", "BodyUseAPI": [], "Fixed commit": "7eeec24fc0539410e394359c033b6e56c1d1582c", "Url": "https://api.github.com/repos/aantono/spring-boot", "Date": "2014-10-07T00:38:31Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ODatabaseRecordThreadLocal.INSTANCE.isDefined())) { db = openDatabase(); org.springframework.orm.orient.AbstractOrientDatabaseFactory.log.debug(\"acquire db from pool {}\", db.hashCode()); }else { db = ODatabaseRecordThreadLocal.INSTANCE.get().getDatabaseOwner(); org.springframework.orm.orient.AbstractOrientDatabaseFactory.log.debug(\"use existing db {}\", db.hashCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6225/buggy-version/src.main.java.org.springframework.orm.orient.AbstractOrientDatabaseFactory.java", "BodyUseAPI": [], "Fixed commit": "93ac3236eb1c186b4633d3d396242e36b3415849", "Url": "https://api.github.com/repos/vidakovic/spring-data-orient", "Date": "2014-12-15T00:06:37Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (volumeInfo.has(\"subtitle\")) { subtitle = volumeInfo.getString(\"subtitle\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8996/buggy-version/app.src.main.java.co.davo.booklisting.QueryUtils.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "fd6026a06c33098b917438717f49391420b48405", "Url": "https://api.github.com/repos/davo-faulkner/BookListing", "Date": "2017-05-26T03:17:06Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (volumeInfo.has(\"description\")) { if ((volumeInfo.getString(\"description\").length()) > 255) { description = (volumeInfo.getString(\"description\").substring(0, 255)) + \"...(Tap for more)\"; }else { description = (volumeInfo.getString(\"description\")) + \" (Tap for more)\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8996/buggy-version/app.src.main.java.co.davo.booklisting.QueryUtils.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "volumeInfo.getString(\"description\").substring(int,int)", "org.json.JSONObject.getString(java.lang.String)", "volumeInfo.getString(\"description\").length()"], "Fixed commit": "fd6026a06c33098b917438717f49391420b48405", "Url": "https://api.github.com/repos/davo-faulkner/BookListing", "Date": "2017-05-26T03:17:06Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((publishedDateString.length()) == 4) { dateParser = new java.text.SimpleDateFormat(\"yyyy\"); }else { dateParser = new java.text.SimpleDateFormat(\"yyyy-MM-dd\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8996/buggy-version/app.src.main.java.co.davo.booklisting.QueryUtils.java", "BodyUseAPI": [], "Fixed commit": "fd6026a06c33098b917438717f49391420b48405", "Url": "https://api.github.com/repos/davo-faulkner/BookListing", "Date": "2017-05-26T03:17:06Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (volumeInfo.has(\"authors\")) { authorsArray = volumeInfo.getJSONArray(\"authors\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8996/buggy-version/app.src.main.java.co.davo.booklisting.QueryUtils.java", "BodyUseAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Fixed commit": "fd6026a06c33098b917438717f49391420b48405", "Url": "https://api.github.com/repos/davo-faulkner/BookListing", "Date": "2017-05-26T03:17:06Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (segments.isEmpty()) { for (final org.deegree.geometry.primitive.Curve curve : members) { segments.addAll(curve.getCurveSegments()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2622/buggy-version/deegree-core.deegree-core-geometry.src.main.java.org.deegree.geometry.standard.primitive.DefaultRing.java", "BodyUseAPI": ["java.util.List<org.deegree.geometry.primitive.segments.CurveSegment>.addAll(curve.getCurveSegments())"], "Fixed commit": "51f7c357a621b1bb274d48ba60f30d74bff0d012", "Url": "https://api.github.com/repos/m-click/deegree3", "Date": "2014-11-12T16:34:51Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((car.getYear()) != null) pStatement.setDate(3, new java.sql.Date(car.getYear().getTime())); else pStatement.setDate(3, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6574/buggy-version/src.main.java.lab1.MysqlCarDAO.java", "BodyUseAPI": ["java.sql.PreparedStatement.setDate(int,java.sql.Date)", "lab1.Car.getYear()", "car.getYear().getTime()"], "Fixed commit": "b6bd0a61a4632ea791e87171cf1dc76331e2dc45", "Url": "https://api.github.com/repos/pechenoha/javaee-lab_1-2", "Date": "2015-04-27T06:15:32Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (kornell.gui.client.presentation.admin.courseclass.courseclass.generic.GenericCourseClassConfigView.MODAL_OVERRIDE_ENROLLMENTS.equals(modalMode)) { ((com.github.gwtbootstrap.client.ui.CheckBox) (overrideEnrollments.getFieldWidget())).setValue(true); }else if (kornell.gui.client.presentation.admin.courseclass.courseclass.generic.GenericCourseClassConfigView.MODAL_INVISIBLE.equals(modalMode)) { ((com.github.gwtbootstrap.client.ui.CheckBox) (invisible.getFieldWidget())).setValue(true); ((com.github.gwtbootstrap.client.ui.CheckBox) (publicClass.getFieldWidget())).setValue(false); ((com.github.gwtbootstrap.client.ui.CheckBox) (approveEnrollmentsAutomatically.getFieldWidget())).setValue(false); ((com.github.gwtbootstrap.client.ui.CheckBox) (approveEnrollmentsAutomatically.getFieldWidget())).setEnabled(false); }else if (kornell.gui.client.presentation.admin.courseclass.courseclass.generic.GenericCourseClassConfigView.MODAL_ALLOW_BATCH_CANCELLATION.equals(modalMode)) { ((com.github.gwtbootstrap.client.ui.CheckBox) (allowBatchCancellation.getFieldWidget())).setValue(true); }else if (kornell.gui.client.presentation.admin.courseclass.courseclass.generic.GenericCourseClassConfigView.MODAL_COURSE_CLASS_CHAT_ENABLED.equals(modalMode)) { ((com.github.gwtbootstrap.client.ui.CheckBox) (courseClassChatEnabled.getFieldWidget())).setValue(true); }else if (kornell.gui.client.presentation.admin.courseclass.courseclass.generic.GenericCourseClassConfigView.MODAL_TUTOR_CHAT_ENABLED.equals(modalMode)) { if ((((courseClassTO) != null) && ((courseClassTO.getCourseClass()) != null)) && ((courseClassTO.getCourseClass().getUUID()) != null)) { kornell.gui.client.presentation.util.LoadingPopup.show(); session.courseClass(courseClassTO.getCourseClass().getUUID()).getTutors(RoleCategory.BIND_WITH_PERSON, new kornell.api.client.Callback<kornell.core.to.RolesTO>() { @java.lang.Override public void ok(kornell.core.to.RolesTO to) { if ((to.getRoleTOs().size()) == 0) { kornell.gui.client.presentation.util.KornellNotification.show(\"Voc\\u00ea precisa configurar os tutores na aba \\\"Administradores\\\" antes de habilitar esta op\\u00e7\\u00e3o.\", AlertType.WARNING, 4000); }else { ((com.github.gwtbootstrap.client.ui.CheckBox) (tutorChatEnabled.getFieldWidget())).setValue(true); } kornell.gui.client.presentation.util.LoadingPopup.hide(); } }); }else { kornell.gui.client.presentation.util.KornellNotification.show(\"Para habilitar esta op\\u00e7\\u00e3o, voc\\u00ea precisa configurar os tutores na aba \\\"Administradores\\\" ap\\u00f3s finalizar a cria\\u00e7\\u00e3o da turma.\", AlertType.WARNING, 4000); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5562/buggy-version/kornell-gwt.src.main.java.kornell.gui.client.presentation.admin.courseclass.courseclass.generic.GenericCourseClassConfigView.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "c055df95e8b55d8d26f93c4689c0dc171b1a6761", "Url": "https://api.github.com/repos/Craftware/Kornell", "Date": "2016-02-01T05:18:52Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(accountEdit.getText().toString().equals(\"\"))) { java.lang.String account = accountEdit.getText().toString(); java.lang.String password = passwordEdit.getText().toString(); comeinsteinford.github.logininterface.Utils.DatabaseUtils.insertUserInfo(account, password, this); }else { android.widget.Toast.makeText(this, \"\u8bf7\u8f93\u5165\u7528\u6237\u540d\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5218/buggy-version/app.src.main.java.comeinsteinford.github.logininterface.Activity.LoginActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "accountEdit.getText().toString()"], "Fixed commit": "2285d55c9a0e2b6b810cdca93abbc72716e131ee", "Url": "https://api.github.com/repos/Einsteinford/LoginInterface", "Date": "2016-08-31T08:01:21Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5650/buggy-version/src.main.java.com.github.ucchyocean.lc.Utility.java", "BodyUseAPI": [], "Fixed commit": "f7d710c35ede4240b558182aa9e70df31c60e3ee", "Url": "https://api.github.com/repos/ucchyocean/LunaChat", "Date": "2014-11-20T14:12:46Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5650/buggy-version/src.main.java.com.github.ucchyocean.lc.Utility.java", "BodyUseAPI": [], "Fixed commit": "f7d710c35ede4240b558182aa9e70df31c60e3ee", "Url": "https://api.github.com/repos/ucchyocean/LunaChat", "Date": "2014-11-20T14:12:46Z"},
{"Line": "=>684", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerGameModeChangeEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (player.hasMetadata(\"antishare-regionleave\")) { player.removeMetadata(\"antishare-regionleave\", plugin); checkRegion = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2544/buggy-version/src.com.turt2live.antishare.ASListener.java", "BodyUseAPI": ["org.bukkit.entity.Player.removeMetadata(java.lang.String,com.turt2live.antishare.AntiShare)"], "Fixed commit": "d3a70ba76aed318c80496babd8d549d2e10e413a", "Url": "https://api.github.com/repos/turt2live/AntiShare", "Date": "2012-04-26T19:02:48Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((isId || isQuantity) || isLevel) || isCurrency) { result = java.util.OptionalInt.empty(); }else if (isPercent) { result = java.util.OptionalDouble.empty(); }else { result = java.util.Optional.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4999/buggy-version/src.api.web.gw2.mapping.core.JsonpContext.java", "BodyUseAPI": [], "Fixed commit": "635d69f534ce9a9624d381703d4d0ae9ee601883", "Url": "https://api.github.com/repos/fabricebouye/gw2-web-api-jsonp", "Date": "2015-12-07T03:15:13Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!faildRecived) if (clientCached.containsKey(toName)) { java.lang.System.out.println(clientCached.get(toName).toString()); sip.forwardMessage(evt, clientCached.get(toName), false); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1356/buggy-version/src.dev2dev.textclient.serverManagement.java", "BodyUseAPI": [], "Fixed commit": "6a691d5ecd35c4aa1f1da8aa3857ee1919d057ea", "Url": "https://api.github.com/repos/erfan111/DistributedMessagingApplication-Server", "Date": "2016-11-22T08:29:37Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((y) != (other.y)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5554/buggy-version/src.main.java.com.fishteam.pacman.models.Point.java", "BodyUseAPI": [], "Fixed commit": "144c5f06dbfd50dc9f925366549d7d776a14043b", "Url": "https://api.github.com/repos/yarphen/PacMan", "Date": "2016-09-26T22:04:28Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.isSuccess) { onSuccess(result.data, result.msg); }else { onError(new com.lu.obj.CustomException(result.code, result.msg)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1694/buggy-version/RxHttp.src.main.java.com.lu.obj.HttpObserver.java", "BodyUseAPI": ["com.lu.obj.HttpObserver.onSuccess(result.data,result.msg)", "com.lu.obj.HttpObserver.onError(com.lu.obj.CustomException)"], "Fixed commit": "3da26c0133500e381246392323c00f7f87d1ccf8", "Url": "https://api.github.com/repos/luqihua/libHttp", "Date": "2017-06-22T03:54:14Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jetbrains.mylyn.yt.core.YouTrackRepositoryConnector.getRealIssueId(getTaskData().getTaskId(),org.eclipse.mylyn.tasks.core.TaskRepository)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (issueId != null) { getCommandBoxText().addFocusListener(new com.jetbrains.mylyn.yt.ui.CommandIntellisenseFocusAdapter(getClient(), false, null, issueId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5499/buggy-version/com.jetbrains.mylyn.yt.ui.src.com.jetbrains.mylyn.yt.ui.YouTrackCommandWindowWizard.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Text.addFocusListener(com.jetbrains.mylyn.yt.ui.CommandIntellisenseFocusAdapter)"], "Fixed commit": "281645a58656da3723f0bd54497d7e299d957885", "Url": "https://api.github.com/repos/JetBrains/youtrack.mylyn.connector", "Date": "2014-01-24T16:04:44Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((e.stateMask) == 327680) && ((e.keyCode) == 106)) { java.lang.String issueId = com.jetbrains.mylyn.yt.core.YouTrackRepositoryConnector.getRealIssueId(((org.eclipse.mylyn.tasks.ui.editors.AbstractTaskEditorPage) (((org.eclipse.mylyn.tasks.ui.editors.TaskEditor) (org.eclipse.ui.PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().getActiveEditor())).getActivePageInstance())).getTask().getTaskId(), getTaskRepository()); if (issueId != null) { com.jetbrains.mylyn.yt.ui.YouTrackSummaryPart.openCommandWizard(getEditorComposite().getShell(), null, true, ((org.eclipse.mylyn.tasks.ui.editors.AbstractTaskEditorPage) (((org.eclipse.mylyn.tasks.ui.editors.TaskEditor) (org.eclipse.ui.PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().getActiveEditor())).getActivePageInstance()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5499/buggy-version/com.jetbrains.mylyn.yt.ui.src.com.jetbrains.mylyn.yt.ui.YouTrackTaskEditorPage.java", "BodyUseAPI": [], "Fixed commit": "281645a58656da3723f0bd54497d7e299d957885", "Url": "https://api.github.com/repos/JetBrains/youtrack.mylyn.connector", "Date": "2014-01-24T16:04:44Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (RESULT_OK)) { layout_header.removeAllViews(); super.handleHeader(R.layout.layout_header_crop_image); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/370/buggy-version/app.src.main.java.com.llp.lunchkaki.activities.MyProfileActivity.java", "BodyUseAPI": [], "Fixed commit": "f31dedb74b3c8a62f21cf51781f06f7fdd0e195a", "Url": "https://api.github.com/repos/brianfwz/lkk", "Date": "2016-03-02T11:17:21Z"},
{"Line": "=>864", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isCustomInboundAuthType(request.getInboundAuthType())) { inboundAuthenticationRequestConfigs.add(request); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7539/buggy-version/components.application-mgt.org.wso2.carbon.identity.application.mgt.ui.src.main.java.org.wso2.carbon.identity.application.mgt.ui.ApplicationBean.java", "BodyUseAPI": ["java.util.List<org.wso2.carbon.identity.application.common.model.xsd.InboundAuthenticationRequestConfig>.add(org.wso2.carbon.identity.application.common.model.xsd.InboundAuthenticationRequestConfig)"], "Fixed commit": "09d561637208d3b8c89a0315d2436807960e8fc4", "Url": "https://api.github.com/repos/wso2-attic/carbon-identity", "Date": "2015-11-12T17:54:10Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uri.getScheme().equals(org.jboss.as.remoting.RemoteOutboundConnectionService.HTTP_REMOTING)) { builder.set(org.jboss.as.remoting.SSL_ENABLED, false); }else if (uri.getScheme().equals(org.jboss.as.remoting.RemoteOutboundConnectionService.HTTPS_REMOTING)) { builder.set(org.jboss.as.remoting.SSL_ENABLED, true); builder.set(org.jboss.as.remoting.SSL_STARTTLS, false); }else { builder.set(Options.SSL_ENABLED, true); builder.set(Options.SSL_STARTTLS, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2620/buggy-version/remoting.src.main.java.org.jboss.as.remoting.RemoteOutboundConnectionService.java", "BodyUseAPI": ["java.net.URI.getScheme()", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "209ed71a50b48dd365ab6a05b0676e3f776a7c65", "Url": "https://api.github.com/repos/stuartwdouglas/jboss-as", "Date": "2013-11-14T14:55:10Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (word == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8651/buggy-version/hw6.BSTDictionary.java", "BodyUseAPI": [], "Fixed commit": "93def0297b40d396b29890d5762ba995db9a0634", "Url": "https://api.github.com/repos/MadcowD/CS61B", "Date": "2015-10-22T18:48:20Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value == obj) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8025/buggy-version/android.src.com.frostwire.android.util.Debug.java", "BodyUseAPI": [], "Fixed commit": "87f4778ff545fce3cc5c252b7ccc3ff0075921ae", "Url": "https://api.github.com/repos/gubatron/frostwire", "Date": "2017-10-26T18:35:03Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["heightEditText.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((text.length()) > 0) kugelmatikManager.setHeight(java.lang.Integer.parseInt(text));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3145/buggy-version/app.src.main.java.de.karlkuebelschule.kugelmatikapp.MainActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "de.karlkuebelschule.kugelmatikapp.KugelmatikManager.setHeight(int)"], "Fixed commit": "f235b4c4a206c18d6cee75eddbbd65b74423e067", "Url": "https://api.github.com/repos/henrik1235/KugelmatikApp", "Date": "2017-10-06T19:26:53Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(url.startsWith(\"http\"))) { url = \"http://\" + url; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8384/buggy-version/app.src.main.java.de.eknoes.inofficialgolem.GolemWebViewClient.java", "BodyUseAPI": [], "Fixed commit": "3561491ac899c0161b6a75d987443c75bcf692b0", "Url": "https://api.github.com/repos/eknoes/golem-android-reader", "Date": "2016-11-22T16:38:34Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zstack.compute.vm.SQL.New(sql, java.lang.String.class).param(\"vmUuid\", msg.getUuid()).param(\"psState\", PrimaryStorageState.Maintenance).list()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((result != null) && (!(result.isEmpty()))) { throw new org.zstack.header.apimediator.ApiMessageInterceptionException(argerr(\"the VM[uuid:%s] volume stored location primary storage is in a state of maintenance\", msg.getVmInstanceUuid())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5565/buggy-version/compute.src.main.java.org.zstack.compute.vm.VmInstanceApiInterceptor.java", "BodyUseAPI": [], "Fixed commit": "b60891abcc3213fda68e7a1673f26178bf0b7fcf", "Url": "https://api.github.com/repos/zstackio/zstack", "Date": "2017-06-29T05:49:13Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ended) { if (!(ip.processTail())) ip.active = false; else ip.time_start = se.tube42.lib.tweeny.TweenManager.time_f; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6091/buggy-version/src.se.tube42.lib.tweeny.TweenManager.java", "BodyUseAPI": [], "Fixed commit": "4ee9a70a087280b7de660568a9f9439b92f4a624", "Url": "https://api.github.com/repos/tube42/tweeny", "Date": "2014-01-14T21:46:40Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rating.totalNumberOfRatings) == 0) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3852/buggy-version/src.org.snapimdb2.Movie.java", "BodyUseAPI": [], "Fixed commit": "96d1f4f1672810b0f6cceb40fea4eccb6bcc663a", "Url": "https://api.github.com/repos/snap-imdb2/imdb2", "Date": "2015-07-17T05:10:47Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.joda.time.DateTimeZone.forID(d.getTz())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(dayLightSavingsCheck.isStandardOffset(java.lang.System.currentTimeMillis()))) { userLocalSetTime = userLocalSetTime.minusHours(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/795/buggy-version/dailyemail.src.main.java.com.natepaulus.dailyemail.web.service.impl.EmailServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "eb7f8c644ec135cd0dfd60b7287cbd913fee98dc", "Url": "https://api.github.com/repos/npaulus/Daily-Email-WebApp", "Date": "2015-04-13T21:13:10Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.joda.time.DateTimeZone.forID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(dayLightSavingsCheck.isStandardOffset(java.lang.System.currentTimeMillis()))) { lt = lt.plusHours(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/795/buggy-version/dailyemail.src.main.java.com.natepaulus.dailyemail.web.service.impl.AccountServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "eb7f8c644ec135cd0dfd60b7287cbd913fee98dc", "Url": "https://api.github.com/repos/npaulus/Daily-Email-WebApp", "Date": "2015-04-13T21:13:10Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.joda.time.DateTimeZone.forID(ds.getTz())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(dayLightSavingsCheck.isStandardOffset(java.lang.System.currentTimeMillis()))) { userTime = userTime.minusHours(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/795/buggy-version/dailyemail.src.main.java.com.natepaulus.dailyemail.web.service.impl.AccountServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "eb7f8c644ec135cd0dfd60b7287cbd913fee98dc", "Url": "https://api.github.com/repos/npaulus/Daily-Email-WebApp", "Date": "2015-04-13T21:13:10Z"},
{"Line": "=>960", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zkoss.zk.ui.AbstractComponent.getIndexCacheMap()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (indexCacheMap == null) initIndexCacheMap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1300/buggy-version/zk.src.org.zkoss.zk.ui.AbstractComponent.java", "BodyUseAPI": [], "Fixed commit": "f8bbe5b81b0ea5873ee3f3e58df1efac9b1275dd", "Url": "https://api.github.com/repos/zkoss/zk", "Date": "2014-12-11T07:21:08Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fragment.getLeafFragment())) { context.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5814/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.work.batch.ControlHandlerImpl.java", "BodyUseAPI": [], "Fixed commit": "6bf4de04f61c9c8b2aadfe22d86a466e9e04c8a2", "Url": "https://api.github.com/repos/jacques-n/incubator-drill", "Date": "2014-10-20T01:34:48Z"},
{"Line": "=>595", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((resolver != null) && ((resolver.getTiles()) != null)) { tf.merge(resolver.getTiles()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/263/buggy-version/src.yuuki.content.ContentPack.java", "BodyUseAPI": ["yuuki.content.Content.getTiles()", "yuuki.world.TileFactory.merge(resolver.getTiles())"], "Fixed commit": "cdda0faec3053fde92fb4857b1b447c734904811", "Url": "https://api.github.com/repos/dekarrin/yuuki-jrpg", "Date": "2013-03-15T17:06:13Z"},
{"Line": "=>589", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((resolver != null) && ((resolver.getEntities()) != null)) { ef.merge(resolver.getEntities()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/263/buggy-version/src.yuuki.content.ContentPack.java", "BodyUseAPI": ["yuuki.content.Content.getEntities()", "yuuki.entity.EntityFactory.merge(resolver.getEntities())"], "Fixed commit": "cdda0faec3053fde92fb4857b1b447c734904811", "Url": "https://api.github.com/repos/dekarrin/yuuki-jrpg", "Date": "2013-03-15T17:06:13Z"},
{"Line": "=>598", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasPortals()) { pf.merge(content.getPortals()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/263/buggy-version/src.yuuki.content.ContentPack.java", "BodyUseAPI": [], "Fixed commit": "cdda0faec3053fde92fb4857b1b447c734904811", "Url": "https://api.github.com/repos/dekarrin/yuuki-jrpg", "Date": "2013-03-15T17:06:13Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastUpdate) != null) { outState.putSerializable(\"disturbances\", disturbances); outState.putLong(\"updated\", lastUpdate.getMillis()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4736/buggy-version/Hyperrail.src.main.java.be.hyperrail.android.DisturbanceListFragment.java", "BodyUseAPI": [], "Fixed commit": "2cf6cad09b38c779d018ac735daa9d652eece98d", "Url": "https://api.github.com/repos/hyperrail/hyperrail-for-android", "Date": "2017-09-25T21:38:44Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.caltech.ipac.firefly.visualize.WebPlotResult.getStringResult(WebPlotResult.REGION_DATA)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((s.length()) > 2) { java.lang.String[] regAry = s.substring(1, ((s.length()) - 1)).split(\"--STR--\"); for (java.lang.String rv : regAry) ary.add(rv); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4729/buggy-version/src.firefly.java.edu.caltech.ipac.firefly.server.visualize.WebPlotResultSerializer.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.split(java.lang.String)"], "Fixed commit": "1344e67520d5da071d9917d932498168e47ceed1", "Url": "https://api.github.com/repos/Caltech-IPAC/firefly", "Date": "2016-04-14T20:33:42Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mysqlHeartBeatTimeTask) == null) { logger.info(\"start heart beat.... \"); startHeartbeat(((com.alibaba.otter.canal.parse.inbound.mysql.MysqlConnection) (connection.fork()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4717/buggy-version/parse.src.main.java.com.alibaba.otter.canal.parse.inbound.mysql.MysqlEventParser.java", "BodyUseAPI": [], "Fixed commit": "c018831bf03959b2fde63b25e4ee25cc81ee5492", "Url": "https://api.github.com/repos/alibaba/canal", "Date": "2013-08-22T08:19:39Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 1) this.updater_script = (((((((this.updater_script) + \"package_extract_dir(\\\"customize/\") + (getListName(list))) + \"/\") + list) + \"\\\", \\\"\") + location) + \"\\\");\\n\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5372/buggy-version/src.aroma.installer.Operations.java", "BodyUseAPI": [], "Fixed commit": "618f5d668c661e200658c30bec5e4b6d222be069", "Url": "https://api.github.com/repos/rajatpatel92/Android-Flashable-Zip-Creator", "Date": "2014-01-26T17:21:42Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"@class\".equals(fieldName)) { com.orientechnologies.orient.core.record.impl.ODocumentInternal.fillClassNameIfNeeded(((com.orientechnologies.orient.core.record.impl.ODocument) (iRecord)), value.toString()); }else { record.field(fieldName, value, type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4234/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerSchemaAware2CSV.java", "BodyUseAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.field(java.lang.String,java.lang.Object,com.orientechnologies.orient.core.metadata.schema.OType)"], "Fixed commit": "e9ca84c0877ed3b2b1ef25af03664134f0963884", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-11-11T13:22:19Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ning.killbill.zuora.api.ZuoraPaymentPluginApi.getPaymentMethodById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (entity == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1564/buggy-version/src.main.java.com.ning.killbill.zuora.api.ZuoraPaymentPluginApi.java", "BodyUseAPI": [], "Fixed commit": "cb51786f833756c78cf9c0e779a69e61fd12a864", "Url": "https://api.github.com/repos/killbill/killbill-zuora-plugin", "Date": "2013-03-06T22:34:15Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isParameterInJson(req, Constants.ROLE_NAME_FIELD)) { queryText += (((\" AND '\" + (it.sinergis.datacatalogue.common.Constants.ROLE_NAME_FIELD)) + \"' LIKE '%\") + (getKeyFromJsonText(req, Constants.ROLE_NAME_FIELD))) + \"%'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8712/buggy-version/server.src.main.java.it.sinergis.datacatalogue.services.RolesService.java", "BodyUseAPI": ["it.sinergis.datacatalogue.services.RolesService.getKeyFromJsonText(java.lang.String,Constants.ROLE_NAME_FIELD)"], "Fixed commit": "0fff0d5595289da7bdd83031e046b352ea2018f6", "Url": "https://api.github.com/repos/GeoSmartCity-CIP/gsc-datacatalogue", "Date": "2016-04-11T07:18:09Z"},
{"Line": "=>705", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((w.getSyn()) == null) ew = dic.get(ILexicon.EN_WORD, w.getValue()); else ew = w;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/301/buggy-version/jcseg-core.src.main.java.org.lionsoul.jcseg.ASegment.java", "BodyUseAPI": ["org.lionsoul.jcseg.core.ADictionary.get(ILexicon.EN_WORD,w.getValue())", "org.lionsoul.jcseg.core.IWord.getValue()"], "Fixed commit": "5ce720811a1b32a2fb12858f6c5273bb147233ff", "Url": "https://api.github.com/repos/lionsoul2014/jcseg", "Date": "2014-07-07T10:14:44Z"},
{"Line": "=>1089", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(PropertyKeys.ALLOWED_CLIENT_OVERRIDE_KEYS)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (allowedOverrideKeysList != null) { allowedClientOverrideKeys = new java.util.HashSet<java.lang.String>(allowedOverrideKeysList); }else { allowedClientOverrideKeys = java.util.Collections.emptySet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6654/buggy-version/d2.src.main.java.com.linkedin.d2.balancer.simple.SimpleLoadBalancerState.java", "BodyUseAPI": [], "Fixed commit": "d97550ba2d151a5e7dcc8b24a29d4365c004df5f", "Url": "https://api.github.com/repos/linkedin/rest.li", "Date": "2013-08-30T20:19:46Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.com.nd.momo.api.http.HttpTool.DoPost(org.json.JSONObject,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (statusCode != 200) { throw new cn.com.nd.momo.api.exception.MoMoException(\"request verify code error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1181/buggy-version/app.src.cn.com.nd.momo.api.oauth.OAuthHelper.java", "BodyUseAPI": [], "Fixed commit": "c6fc728ff52744745c08764d02c793d3be46b9ad", "Url": "https://api.github.com/repos/momoim/momo_android", "Date": "2016-01-02T17:08:56Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spec.getName().equals(LANGUAGE_MODULE_NAME)) && (!(bootstrapCeylon))) { throw new com.redhat.ceylon.ceylondoc.CeylondException(\"error.languageModuleBootstrapOptionMissing\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2173/buggy-version/src.com.redhat.ceylon.ceylondoc.CeylonDocTool.java", "BodyUseAPI": [], "Fixed commit": "42564dddb053cf36430669d3e70718833cbd5b07", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2015-10-28T10:32:47Z"},
{"Line": "=>991", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.syzton.sunread.service.user.UserRepositoryService.findByUserId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (user != null) { schoolSuperAdmin = this.findByAdminId(user.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2593/buggy-version/SunReadSource.src.main.java.com.syzton.sunread.service.user.UserRepositoryService.java", "BodyUseAPI": ["com.syzton.sunread.model.user.User.getId()", "com.syzton.sunread.service.user.UserRepositoryService.findByAdminId(user.getId())"], "Fixed commit": "2628c9f198df1a14fde473efa752ae7f08cdda78", "Url": "https://api.github.com/repos/xxing1982/EDU_SYZT", "Date": "2015-07-20T07:09:58Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.playerData.containsKey(name)) { return this.playerData.get(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7891/buggy-version/src.com.dkhenry.minejmx.MineJMX.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.dkhenry.minejmx.PlayerData>.get(java.lang.String)"], "Fixed commit": "b67fd8a990a9a4eae1a828934b31f9f951824685", "Url": "https://api.github.com/repos/dkhenry/Minecraft-JMX-Plugin", "Date": "2011-07-16T18:51:17Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.blockData.containsKey(mat)) { return this.blockData.get(mat); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7891/buggy-version/src.com.dkhenry.minejmx.MineJMX.java", "BodyUseAPI": ["java.util.Map<org.bukkit.Material, com.dkhenry.minejmx.BlockData>.get(org.bukkit.Material)"], "Fixed commit": "b67fd8a990a9a4eae1a828934b31f9f951824685", "Url": "https://api.github.com/repos/dkhenry/Minecraft-JMX-Plugin", "Date": "2011-07-16T18:51:17Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((logIfNotFound.length()) > 0) { this.log.info(logIfNotFound); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7891/buggy-version/src.com.dkhenry.minejmx.MineJMX.java", "BodyUseAPI": ["java.util.logging.Logger.info(java.lang.String)"], "Fixed commit": "b67fd8a990a9a4eae1a828934b31f9f951824685", "Url": "https://api.github.com/repos/dkhenry/Minecraft-JMX-Plugin", "Date": "2011-07-16T18:51:17Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((logIfNotFound.length()) > 0) { this.log.info(logIfNotFound); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7891/buggy-version/src.com.dkhenry.minejmx.MineJMX.java", "BodyUseAPI": ["java.util.logging.Logger.info(java.lang.String)"], "Fixed commit": "b67fd8a990a9a4eae1a828934b31f9f951824685", "Url": "https://api.github.com/repos/dkhenry/Minecraft-JMX-Plugin", "Date": "2011-07-16T18:51:17Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chunkContext.getStepContext().getJobName().equals(JobConstants.RESUME_CLUSTER_JOB_NAME)) { clusterEntityMgr.syncUp(clusterName, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1751/buggy-version/server.cluster-mgmt.src.main.java.com.vmware.bdd.service.job.ClusterUpdateDataStep.java", "BodyUseAPI": [], "Fixed commit": "e2af4b7060838ace6032d7f132261091c3bc973d", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2013-12-03T06:53:35Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["BashSourceGenerator.PopSourceCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(right.startsWith(\"$\"))) { right = \"$\" + right; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5318/buggy-version/src.BashSourceGenerator.java", "BodyUseAPI": [], "Fixed commit": "c2efc7254dab8c1e0662d3dbe1ebef2a83fbca58", "Url": "https://api.github.com/repos/sekiguchi-nagisa/GreenTeaScript", "Date": "2013-08-07T10:37:18Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["BashSourceGenerator.PopSourceCode()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (left.startsWith(\"$\")) { left = left.substring(1, left.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5318/buggy-version/src.BashSourceGenerator.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "c2efc7254dab8c1e0662d3dbe1ebef2a83fbca58", "Url": "https://api.github.com/repos/sekiguchi-nagisa/GreenTeaScript", "Date": "2013-08-07T10:37:18Z"},
{"Line": "=>1130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.mihosoft.vrl.visual.Connections.alreadyConnected(trep.getConnector())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isConnected) { eu.mihosoft.vrl.visual.Connector subConnector = trepContainer.getConnector(); builder.append(indent).append(eu.mihosoft.vrl.lang.visual.SessionClassUtils.getVariableName(canvas, connections, subConnector)).append(\" = \").append(eu.mihosoft.vrl.lang.visual.SessionClassUtils.getMultiOutputVariableName(method)).append(\"[\").append(i).append(\"];\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6853/buggy-version/VRL.src.eu.mihosoft.vrl.lang.visual.SessionClassUtils.java", "BodyUseAPI": [], "Fixed commit": "3abff595050d71629e297f4464845645dbff906a", "Url": "https://api.github.com/repos/miho/VRL", "Date": "2014-09-17T15:34:58Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (host == null) { }else { java.lang.String url = findUrl(stage, host); if (isFitnesseServerUp(url, console)) { stage.launcher(\"curl\", (url + \"?responder=shutdown\")).exec(console.verbose); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7666/buggy-version/main.src.main.java.net.oneandone.stool.extensions.Fitnesse.java", "BodyUseAPI": ["net.oneandone.stool.extensions.Fitnesse.findUrl(net.oneandone.stool.stage.Stage,net.oneandone.stool.util.Vhost)"], "Fixed commit": "7ebafc6eef2c49577302c3c1e919bdc3839b20c9", "Url": "https://api.github.com/repos/mlhartme/stool", "Date": "2015-11-23T10:18:37Z"},
{"Line": "=>1033", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sonata.kernel.vimadaptor.commons.FunctionDeployPayload.getVnfd()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(vnfName.equals(vnfd.getName()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7389/buggy-version/vim-adaptor.adaptor.src.main.java.sonata.kernel.vimadaptor.wrapper.openstack.OpenStackHeatWrapper.java", "BodyUseAPI": [], "Fixed commit": "5a6fd7f72c591508b9706883674231d7c8b9479e", "Url": "https://api.github.com/repos/sonata-nfv/son-sp-infrabstract", "Date": "2017-05-15T14:13:32Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ('-' == (parser.lookAhead(1, \"pattern.parser.endedunexpectedly.wantedcharacterdashclosesquarebrace\"))) addRangeOfPermittedCharacters(nextChar); else permittedCharacters.add(nextChar);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3881/buggy-version/src.main.java.com.github.richardjwild.randomizer.types.pattern.parserstate.DefineCharacterRangeState.java", "BodyUseAPI": [], "Fixed commit": "201976c83d4ddb58fc4b2c8dddfa5365620e7c35", "Url": "https://api.github.com/repos/richardjwild/randomizer", "Date": "2017-08-04T17:17:11Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.hasHostname())) { try { this.setHostname(java.net.InetAddress.getLocalHost().getHostName()); } catch (java.net.UnknownHostException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8601/buggy-version/src.main.java.ixa.kaflib.KAFDocument.java", "BodyUseAPI": [], "Fixed commit": "42939617c95d1b3e3b50345d2772e7d422563833", "Url": "https://api.github.com/repos/ixa-ehu/kaflib", "Date": "2014-10-16T10:06:17Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((rank.getSuffix()) != null) && (!(rank.getSuffix().equals(\"\")))) format = org.apache.commons.lang3.StringUtils.replaceEach(Settings.chatFormat, new java.lang.String[]{ wurmcraft.serveressentials.common.chat.ChatHelper.USERNAME_KEY, wurmcraft.serveressentials.common.chat.ChatHelper.CHANNEL_KEY, wurmcraft.serveressentials.common.chat.ChatHelper.MESSAGE_KEY, wurmcraft.serveressentials.common.chat.ChatHelper.DIMENSION_KEY, wurmcraft.serveressentials.common.chat.ChatHelper.RANK_PREFIX_KEY, wurmcraft.serveressentials.common.chat.ChatHelper.RANK_SUFFIX_KEY }, new java.lang.String[]{ username, (channel.getPrefix().replaceAll(\"&\", \"\\u00a7\")) + (net.minecraft.util.text.TextFormatting.RESET), message, java.lang.Integer.toString(dimension), (rank.getPrefix().replaceAll(\"&\", \"\\u00a7\")) + (net.minecraft.util.text.TextFormatting.RESET), (rank.getSuffix().replaceAll(\"&\", \"\\u00a7\")) + (net.minecraft.util.text.TextFormatting.RESET) }); else format = org.apache.commons.lang3.StringUtils.replaceEach(Settings.chatFormat.replaceAll((\" \" + (wurmcraft.serveressentials.common.chat.ChatHelper.RANK_SUFFIX_KEY)), \"\"), new java.lang.String[]{ wurmcraft.serveressentials.common.chat.ChatHelper.USERNAME_KEY, wurmcraft.serveressentials.common.chat.ChatHelper.CHANNEL_KEY, wurmcraft.serveressentials.common.chat.ChatHelper.MESSAGE_KEY, wurmcraft.serveressentials.common.chat.ChatHelper.DIMENSION_KEY, wurmcraft.serveressentials.common.chat.ChatHelper.RANK_PREFIX_KEY }, new java.lang.String[]{ username, (channel.getPrefix().replaceAll(\"&\", \"\\u00a7\")) + (net.minecraft.util.text.TextFormatting.RESET), message, java.lang.Integer.toString(dimension), (rank.getPrefix().replaceAll(\"&\", \"\\u00a7\")) + (net.minecraft.util.text.TextFormatting.RESET) });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/469/buggy-version/src.main.java.wurmcraft.serveressentials.common.chat.ChatHelper.java", "BodyUseAPI": ["rank.getPrefix().replaceAll(java.lang.String,java.lang.String)", "rank.getSuffix().replaceAll(java.lang.String,java.lang.String)", "rank.getPrefix().replaceAll(java.lang.String,java.lang.String)", "wurmcraft.serveressentials.common.api.permissions.IRank.getSuffix()", "org.apache.commons.lang3.StringUtils.replaceEach(Settings.chatFormat,java.lang.String[],java.lang.String[])", "wurmcraft.serveressentials.common.api.permissions.IRank.getPrefix()", "org.apache.commons.lang3.StringUtils.replaceEach(Settings.chatFormat.replaceAll((\" \" + (wurmcraft.serveressentials.common.chat.ChatHelper.RANK_SUFFIX_KEY)), \"\"),java.lang.String[],java.lang.String[])", "wurmcraft.serveressentials.common.api.permissions.IRank.getPrefix()"], "Fixed commit": "3708aebfb403fd342501b38363ffa1921fad2af9", "Url": "https://api.github.com/repos/Wurmcraft/Server-Essentials", "Date": "2017-06-25T17:00:23Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ui.commands.ICommandService.getCommand(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(cmd.isEnabled())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1940/buggy-version/bundles.plugins.org.bonitasoft.studio.engine.src.org.bonitasoft.studio.engine.ui.wizard.ExportBarWizardPage.java", "BodyUseAPI": [], "Fixed commit": "b844f32faaba37ff982cead065ab0158c851f62f", "Url": "https://api.github.com/repos/bonitasoft/bonita-studio", "Date": "2014-02-12T09:57:14Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(config.isDebug())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2495/buggy-version/plugins.debugger.src.main.java.org.robovm.debugger.DebuggerLaunchPlugin.java", "BodyUseAPI": [], "Fixed commit": "a1a273961246350aa14f4a4e936f9b14320d13fe", "Url": "https://api.github.com/repos/dkimitsa/robovm", "Date": "2017-04-28T13:32:08Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(config.isDebug())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2495/buggy-version/plugins.debugger.src.main.java.org.robovm.debugger.DebuggerLaunchPlugin.java", "BodyUseAPI": [], "Fixed commit": "a1a273961246350aa14f4a4e936f9b14320d13fe", "Url": "https://api.github.com/repos/dkimitsa/robovm", "Date": "2017-04-28T13:32:08Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (configuration.isClustered()) { configuration.setRegistryStrategy(RegistryStrategy.CACHE); }else { configuration.setRegistryStrategy(RegistryStrategy.LOCAL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4334/buggy-version/platform.backends.marmotta-backend-kiwi.src.main.java.org.apache.marmotta.platform.backend.kiwi.KiWiStoreProvider.java", "BodyUseAPI": ["org.apache.marmotta.kiwi.config.KiWiConfiguration.setRegistryStrategy(RegistryStrategy.LOCAL)", "org.apache.marmotta.kiwi.config.KiWiConfiguration.setRegistryStrategy(RegistryStrategy.CACHE)"], "Fixed commit": "28913e9effbf5de56fe401f661b8216c7b9990b1", "Url": "https://api.github.com/repos/apache/marmotta", "Date": "2014-09-23T15:36:18Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.entity.EntityList.createEntityByName(java.lang.String,p.worldObj)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (e == null) { de.teamlapen.vampirism.util.Logger.w(\"Helper\", \"Failed to create %s\", name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4898/buggy-version/src.main.java.de.teamlapen.vampirism.util.Helper.java", "BodyUseAPI": [], "Fixed commit": "a1ee993fe1d8e387222242de673d8392a8fb5884", "Url": "https://api.github.com/repos/TeamLapen/Vampirism", "Date": "2015-11-01T00:00:17Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4898/buggy-version/src.main.java.de.teamlapen.vampirism.util.Helper.java", "BodyUseAPI": [], "Fixed commit": "a1ee993fe1d8e387222242de673d8392a8fb5884", "Url": "https://api.github.com/repos/TeamLapen/Vampirism", "Date": "2015-11-01T00:00:17Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["co.cask.cdap.app.store.Store.getApplication(co.cask.cdap.proto.Id.Application)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (appSpec == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1941/buggy-version/cdap-app-fabric.src.main.java.co.cask.cdap.gateway.handlers.util.AbstractAppFabricHttpHandler.java", "BodyUseAPI": [], "Fixed commit": "0c646731dff8751ec04bceb68b943e497b2f63c8", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2015-02-21T09:57:54Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p.equals(this)) { throw new org.woodship.luna.LunaException(\"\u4e0a\u7ea7\u4e0d\u80fd\u9009\u62e9\u81ea\u5df2\u7684\u4e0b\u7ea7\uff01\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8796/buggy-version/src.main.java.org.woodship.luna.db.HierarchialEntity.java", "BodyUseAPI": [], "Fixed commit": "d3fe67c9c5bd5019cb7e474ee13f095b70990c22", "Url": "https://api.github.com/repos/woodship/luna", "Date": "2013-06-01T17:21:46Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.visural.common.BeanUtil.findGetter(java.lang.Class<? extends java.lang.Object>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (getter2 == null) { throw new java.lang.IllegalStateException(java.lang.String.format(\"Property '%s' on class '%s' can not be resolved.\", property, o2.getClass().getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6507/buggy-version/visural-common.src.com.visural.common.datastruct.BeanList.java", "BodyUseAPI": [], "Fixed commit": "170874318fff80cca212f199b71e2bfa976e7d8f", "Url": "https://api.github.com/repos/rjnichols/visural-common", "Date": "2011-05-26T04:39:28Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((fromTransition) == (Transition.Submit)) || ((fromTransition) == (Transition.Onboard))) { return FailedPhase.Instance; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3936/buggy-version/src.main.java.com.ace.moab.services.AnalyzingPhase.java", "BodyUseAPI": [], "Fixed commit": "960a8b246415de72b83668c8091785cea401567e", "Url": "https://api.github.com/repos/dhh1128/slp", "Date": "2013-05-03T04:14:55Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context.getCurrentTime()) > (lastRtRequest)) { nextTrigger = com.github.rinde.rinsim.core.model.time.RealtimeModel.Trigger.DO_SIMULATE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3464/buggy-version/core.src.main.java.com.github.rinde.rinsim.core.model.time.RealtimeModel.java", "BodyUseAPI": [], "Fixed commit": "253e97eaca7d0bbe4582718a190baf00faa25798", "Url": "https://api.github.com/repos/rinde/RinSim", "Date": "2015-08-05T16:13:16Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (documentManager.hasPermission(navigationContext.getCurrentDocument().getRef(), SecurityConstants.READ)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4053/buggy-version/nuxeo-platform-document-routing-web.src.main.java.org.nuxeo.ecm.platform.routing.web.RoutingTaskActionsBean.java", "BodyUseAPI": [], "Fixed commit": "062de7a9cc4351b92377b78d245c877140a9ccec", "Url": "https://api.github.com/repos/nuxeo/nuxeo-platform-document-routing", "Date": "2013-01-07T11:33:47Z"},
{"Line": "=>1694", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isPlayer())) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2455/buggy-version/Magic.src.main.java.com.elmakers.mine.bukkit.magic.Mage.java", "BodyUseAPI": [], "Fixed commit": "b35b4d372233393f9da84f232e46784fc8a35249", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2017-03-14T19:54:52Z"},
{"Line": "=>1731", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isPlayer())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2455/buggy-version/Magic.src.main.java.com.elmakers.mine.bukkit.magic.Mage.java", "BodyUseAPI": [], "Fixed commit": "b35b4d372233393f9da84f232e46784fc8a35249", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2017-03-14T19:54:52Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((grid.get(j, i)) != (-1)) { java.lang.System.out.print(java.lang.String.format(\"%1$4s\", grid.get(j, i))); }else { java.lang.System.out.print(java.lang.String.format(\"%1$4s\", \"_\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4348/buggy-version/Board.java", "BodyUseAPI": ["Grid.get(int,int)", "java.lang.String.format(java.lang.String,grid.get(j, i))", "java.io.PrintStream.print(java.lang.String)"], "Fixed commit": "6a12e753a09fcb22285cc094abf6f939c798c030", "Url": "https://api.github.com/repos/2016PuzzleComps/kim", "Date": "2016-11-10T01:48:32Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.lang.model.element.ExecutableElement.getModifiers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((modifiers.contains(javax.lang.model.element.Modifier.PUBLIC)) || (modifiers.contains(javax.lang.model.element.Modifier.PROTECTED))) { warning(methodElement, \"@Inject annotated methods should have protect visibility: %s#%s\", enclosingElement.getQualifiedName(), methodElement.getSimpleName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1264/buggy-version/toothpick-compiler.src.main.java.toothpick.compiler.common.ToothpickProcessor.java", "BodyUseAPI": [], "Fixed commit": "cb6a1c7a331b614b9079b13b71a61321df208021", "Url": "https://api.github.com/repos/stephanenicolas/toothpick", "Date": "2016-10-03T20:33:25Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((changeset.getChanges().size()) == 0) { existingDefect.setLastModifiedDate(originalLastModified); }else { existingDefect.getEvents().add(changeset); if (!(db.save(existingDefect))) { throw new edu.wpi.cs.wpisuitetng.exceptions.WPISuiteException(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3180/buggy-version/DefectTracker.src.edu.wpi.cs.wpisuitetng.modules.defecttracker.entitymanagers.DefectManager.java", "BodyUseAPI": ["existingDefect.getEvents().add(edu.wpi.cs.wpisuitetng.modules.defecttracker.models.DefectChangeset)"], "Fixed commit": "bf1ce989964e33a57993f0795c2d90787354fb5f", "Url": "https://api.github.com/repos/fracture91/wpi-suite-tng", "Date": "2013-01-19T03:53:27Z"},
{"Line": "=>957", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.containsDateSeries())) { s += \"null\"; if (iTimeMark.hasNext()) { s += \", \"; } }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7288/buggy-version/src.no.npolar.data.api.mosj.HighchartsChart.java", "BodyUseAPI": [], "Fixed commit": "c36ce42676e6a062e253466a12e775d6415d7904", "Url": "https://api.github.com/repos/paulflakstad/no.npolar.data.api", "Date": "2016-11-17T13:24:43Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (indexOf == (-1)) { return com.google.common.collect.ImmutableList.of(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/9072/buggy-version/fs-shell.src.main.java.com.walien.simplefs.shell.domain.AbstractShellCommand.java", "BodyUseAPI": [], "Fixed commit": "2e1395ff56139b2d4ab40ebccc5b33f1f4abe23a", "Url": "https://api.github.com/repos/walien/simple-fs", "Date": "2014-11-22T00:53:04Z"},
{"Line": "=>598", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ('_' == (suffix.charAt(0))) { return suffix; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1074/buggy-version/grails-bootstrap.src.main.groovy.grails.util.GrailsNameUtils.java", "BodyUseAPI": [], "Fixed commit": "aeb54afcbe298d81d8445b545dcf752bb7aa6217", "Url": "https://api.github.com/repos/grails/grails-core", "Date": "2017-04-26T15:43:34Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.cue) != null) { java.util.ArrayList<jcue.domain.SoundDevice> outputs = this.cue.getOutputs(); for (jcue.domain.SoundDevice sd : outputs) { panel.add(new jcue.ui.DeviceControlPanel(this.cue, sd), \"span, growx, wrap\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1225/buggy-version/src.jcue.ui.AudioCueUI.java", "BodyUseAPI": [], "Fixed commit": "197d6f82e92d6531c550e34d6748eaf3d69a5671", "Url": "https://api.github.com/repos/SlyJack0/JCue", "Date": "2012-08-29T17:47:33Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (redirect == true) { resp.sendRedirect(\"chatroom\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2020/buggy-version/src.edu.ycp.cs320.groupProject.servlet.ChatroomListServlet.java", "BodyUseAPI": [], "Fixed commit": "9aace308e9693a1bc86d331cd16249a2b2d8fb33", "Url": "https://api.github.com/repos/bruser15/CS320VoiceChat", "Date": "2017-04-28T13:32:33Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rootobj.get(\"bitrate\").toString().contains(\"VBR\")) || ((java.lang.Integer.parseInt(rootobj.get(\"bitrate\").toString().substring(1, 4))) < 256)) { java.lang.System.out.println(rootobj.get(\"bitrate\").toString()); fileList.add(rootobj.get(\"file\").toString().replace(\"\\\"\", \"\")); fullTitleList.add((((rootobj.get(\"artist\").toString().replace(\"\\\"\", \"\")) + \" - \") + (rootobj.get(\"track\").toString().replace(\"\\\"\", \"\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/366/buggy-version/SoundSea.src.intnet.Connection.java", "BodyUseAPI": ["com.google.gson.JsonObject.get(java.lang.String)", "rootobj.get(\"track\").toString().replace(java.lang.String,java.lang.String)", "rootobj.get(\"bitrate\").toString()", "java.io.PrintStream.println(rootobj.get(\"bitrate\").toString())", "java.util.List<java.lang.String>.add((((rootobj.get(\"artist\").toString().replace(\"\\\"\", \"\")) + \" - \") + (rootobj.get(\"track\").toString().replace(\"\\\"\", \"\"))))", "rootobj.get(\"file\").toString()", "rootobj.get(\"artist\").toString().replace(java.lang.String,java.lang.String)", "com.google.gson.JsonObject.get(java.lang.String)", "rootobj.get(\"artist\").toString()", "java.util.List<java.lang.String>.add(rootobj.get(\"file\").toString().replace(\"\\\"\", \"\"))", "rootobj.get(\"track\").toString()", "com.google.gson.JsonObject.get(java.lang.String)", "com.google.gson.JsonObject.get(java.lang.String)", "rootobj.get(\"file\").toString().replace(java.lang.String,java.lang.String)"], "Fixed commit": "b3b1634c4d209b1b0d1be722910e400d99bb5f41", "Url": "https://api.github.com/repos/sacert/SoundSea", "Date": "2016-01-26T06:45:56Z"},
{"Line": "=>1918", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (physicalName == null) { java.lang.String nameImageFromGallery = com.silverpeas.util.web.servlet.FileUploadUtil.getParameter(parameters, \"valueImageGallery\"); if (com.silverpeas.util.StringUtil.isDefined(nameImageFromGallery)) { physicalName = nameImageFromGallery; mimeType = \"image/jpeg\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/768/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.servlets.KmeliaRequestRouter.java", "BodyUseAPI": [], "Fixed commit": "c2134b6a812f174c84d628afd992113c20c7af24", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Components", "Date": "2011-02-09T11:04:01Z"},
{"Line": "=>1845", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ProjectConst.FIRMWARE_2_7V.equals(spxVersion)) { firmware = de.dmarcini.submatix.pclogger.res.ProjectConst.FW_2_7V; }else if (spxVersion.startsWith(ProjectConst.FIRMWARE_2_7H)) { firmware = de.dmarcini.submatix.pclogger.res.ProjectConst.FW_2_7H; }else { if (log) de.dmarcini.submatix.pclogger.comm.BTCommunication.LOGGER.severe(\"Firmware not supportet! CANCEL!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3021/buggy-version/src.de.dmarcini.submatix.pclogger.comm.BTCommunication.java", "BodyUseAPI": ["java.lang.String.startsWith(ProjectConst.FIRMWARE_2_7H)"], "Fixed commit": "8bb5de021722051c99641ac329549a9ce4081cf7", "Url": "https://api.github.com/repos/dmarc0001/submatixBTPC", "Date": "2012-11-16T16:17:08Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((element.getKey()) == null) { if (key == null) { return element; } }else { if (element.getKey().equals(key)) { return element; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8948/buggy-version/src.com.taig.util.KeyValueSet.java", "BodyUseAPI": ["T.getKey()", "element.getKey().equals(java.lang.Object)"], "Fixed commit": "63d640c94577f75800bd5b55a424bd0122b8e06e", "Url": "https://api.github.com/repos/Taig/KeyValue", "Date": "2012-09-17T16:48:40Z"},
{"Line": "=>708", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((n.getType().getKind()) == (swp_compiler_ss13.common.types.Type.Kind.STRUCT)) { java.util.HashSet<java.lang.String> checkedIdentifiers = new java.util.HashSet<>(); for (swp_compiler_ss13.common.types.derived.Member m : ((swp_compiler_ss13.common.types.derived.StructType) (n.getType())).members()) { if (checkedIdentifiers.contains(m.getName())) { errorLog.reportError(ReportType.DOUBLE_DECLARATION, n.coverage(), ((((\"Variable name \\\"\" + (m.getName())) + \"\\\" is already used inside record \\\"\") + (n.getIdentifier())) + \"\\\"\")); } checkedIdentifiers.add(m.getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8440/buggy-version/javabite-semantic.src.main.java.swp_compiler_ss13.javabite.semantic.SemanticAnalyserJb.java", "BodyUseAPI": ["swp_compiler_ss13.common.ast.nodes.unary.DeclarationNode.getIdentifier()", "swp_compiler_ss13.common.report.ReportLog.reportError(ReportType.DOUBLE_DECLARATION,n.coverage(),((((\"Variable name \\\"\" + (m.getName())) + \"\\\" is already used inside record \\\"\") + (n.getIdentifier())) + \"\\\"\"))", "((swp_compiler_ss13.common.types.derived.StructType) (n.getType())).members()", "swp_compiler_ss13.common.ast.nodes.unary.DeclarationNode.getType()", "swp_compiler_ss13.common.ast.nodes.unary.DeclarationNode.coverage()"], "Fixed commit": "f3cdd609add84bd8154e501b12c7f93e9de0be8d", "Url": "https://api.github.com/repos/swp-uebersetzerbau-ss13/javabite", "Date": "2013-07-13T20:47:19Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataSnapshot.exists()) { totalbudget -= java.lang.Double.parseDouble(dataSnapshot.getValue().toString()); }else { myRef.child(\"periods\").child(periodID).child(\"totalExpenses\").setValue(1); totalbudget -= 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8187/buggy-version/app.src.main.java.com.example.ronjc.tiptracker.HomeActivity.java", "BodyUseAPI": ["dataSnapshot.getValue().toString()", "com.google.firebase.database.DataSnapshot.getValue()", "java.lang.Double.parseDouble(dataSnapshot.getValue().toString())"], "Fixed commit": "89ef10c3a795a2f7b94298e05f9479e009f1a548", "Url": "https://api.github.com/repos/tipsytiptracker/tiptracker", "Date": "2017-04-29T02:07:10Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataSnapshot.exists()) { totalbudget += java.lang.Double.parseDouble(dataSnapshot.getValue().toString()); }else { myRef.child(\"periods\").child(periodID).child(\"totalIncome\").setValue(1); totalbudget += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8187/buggy-version/app.src.main.java.com.example.ronjc.tiptracker.HomeActivity.java", "BodyUseAPI": ["dataSnapshot.getValue().toString()", "com.google.firebase.database.DataSnapshot.getValue()", "java.lang.Double.parseDouble(dataSnapshot.getValue().toString())"], "Fixed commit": "89ef10c3a795a2f7b94298e05f9479e009f1a548", "Url": "https://api.github.com/repos/tipsytiptracker/tiptracker", "Date": "2017-04-29T02:07:10Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataSnapshot.exists()) { totalbudget -= java.lang.Double.parseDouble(dataSnapshot.getValue().toString()); }else { myRef.child(\"users\").child(user.getUid()).child(\"current_budget\").setValue(0); totalbudget -= 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8187/buggy-version/app.src.main.java.com.example.ronjc.tiptracker.HomeActivity.java", "BodyUseAPI": ["java.lang.Double.parseDouble(dataSnapshot.getValue().toString())", "dataSnapshot.getValue().toString()", "com.google.firebase.database.DataSnapshot.getValue()"], "Fixed commit": "89ef10c3a795a2f7b94298e05f9479e009f1a548", "Url": "https://api.github.com/repos/tipsytiptracker/tiptracker", "Date": "2017-04-29T02:07:10Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (measure) (this.updateQ)++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4803/buggy-version/self_stabilizing_systems.hypercube.q_hypercube.parallelKHypercube.KQHypercubeNode.java", "BodyUseAPI": [], "Fixed commit": "8b6a4bdb6e85d337cd7b8986ac5bc6db1dd8e175", "Url": "https://api.github.com/repos/Krakomat/Work", "Date": "2016-05-23T14:41:15Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (measure) (this.updateQ)++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4803/buggy-version/self_stabilizing_systems.hypercube.q_hypercube.parallelKHypercube.KQHypercubeNode.java", "BodyUseAPI": [], "Fixed commit": "8b6a4bdb6e85d337cd7b8986ac5bc6db1dd8e175", "Url": "https://api.github.com/repos/Krakomat/Work", "Date": "2016-05-23T14:41:15Z"},
{"Line": "=>734", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((KBase.getVariablesArray().isEmpty()) == false) { for (gui.Variable v : KBase.getVariablesArray()) { variableListLabel = v.toString(); targetvariablecombo.add(variableListLabel); } selectedVariable = KBase.getVariablesArray().get(targetvariablecombo.getSelectionIndex()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8022/buggy-version/ExpertShell.src.gui.MainScreen.java", "BodyUseAPI": ["KBase.getVariablesArray().get(targetvariablecombo.getSelectionIndex())", "gui.KnowledgeBase.getVariablesArray()", "gui.KnowledgeBase.getVariablesArray()"], "Fixed commit": "09cefd42e864f2b21c0500582903d8b56917ea19", "Url": "https://api.github.com/repos/BerndBrinkmann/ExpertShell", "Date": "2014-08-25T00:27:27Z"},
{"Line": "=>487", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optBoolean(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isNewOwnerChosen) { mafiaRoomsModel.setCreatorId(java.lang.String.valueOf(newOwnerId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2970/buggy-version/app.src.main.java.ink.va.activities.MafiaGameView.java", "BodyUseAPI": [], "Fixed commit": "a5f05429f5d0fdec39ceb8b0bc91ef3f49344040", "Url": "https://api.github.com/repos/vladimirarevshatyan/Ink", "Date": "2017-03-21T10:06:13Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.sudalv.subway.activity.LauncherActivity.wake) com.sudalv.subway.activity.LauncherActivity.wakeLock.release();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3709/buggy-version/app.src.main.java.com.sudalv.subway.activity.LauncherActivity.java", "BodyUseAPI": [], "Fixed commit": "7a7e45d63fc4c2f4e8632dea29ed932583b9e3de", "Url": "https://api.github.com/repos/SunWeicheng0001/SubwayMap", "Date": "2015-10-16T13:25:49Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((lastIndex - firstIndex) > 4) { idCardTokens.add(stringToTokenize.substring(0, 6)); idCardTokens.add(stringToTokenize.substring(14, 18)); }else { idCardTokens.add(stringToTokenize.substring(0, 6)); idCardTokens.add(stringToTokenize.substring(0, 10)); idCardTokens.add(stringToTokenize.substring(14, 18)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1748/buggy-version/src.main.java.org.lavenderx.analysis.IdCardTokenizer.java", "BodyUseAPI": [], "Fixed commit": "636c372269f55a6165bb8dad5b5ea2d7f66bdbb0", "Url": "https://api.github.com/repos/lavenderx/elasticsearch-analysis-idcard", "Date": "2016-04-01T07:22:45Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((ptId.equals(order.getPatient().getPatientId())) && (order.getRegimenChangeType().equals(\"Substitute\"))) && (order.getTypeOfRegimen().equals(\"First line Anti-retoviral drugs\"))) { onOrigFirstLines = true; ret.put(ptId, new org.openmrs.module.kenyacore.calculation.BooleanResult(onOrigFirstLines, this, context)); if ((order.getDiscontinuedDate()) != null) { onOrigFirstLines = false; ret.put(ptId, new org.openmrs.module.kenyacore.calculation.BooleanResult(onOrigFirstLines, this, context)); } }else if (((ptId.equals(order.getPatient().getPatientId())) && (order.getRegimenChangeType().equals(\"Substitute\"))) && (order.getTypeOfRegimen().equals(\"Fixed dose combinations (FDCs)\"))) { if (order.getDrugRegimen().equals(drugorder.getDrugRegimen())) { onOrigFirstLines = false; }else { onOrigFirstLines = true; drugorder = order; ret.put(ptId, new org.openmrs.module.kenyacore.calculation.BooleanResult(onOrigFirstLines, this, context)); } if ((order.getDiscontinuedDate()) != null) { onOrigFirstLines = false; ret.put(ptId, new org.openmrs.module.kenyacore.calculation.BooleanResult(onOrigFirstLines, this, context)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4791/buggy-version/api.src.main.java.org.openmrs.module.kenyaemr.calculation.library.hiv.OnSubsituteFirstLineArtCalculation.java", "BodyUseAPI": ["order.getTypeOfRegimen().equals(java.lang.String)", "org.openmrs.calculation.result.CalculationResultMap.put(java.lang.Integer,org.openmrs.module.kenyacore.calculation.BooleanResult)", "order.getPatient().getPatientId()", "org.openmrs.module.kenyaemr.model.DrugOrderProcessed.getDiscontinuedDate()", "java.lang.Integer.equals(order.getPatient().getPatientId())", "order.getDrugRegimen().equals(drugorder.getDrugRegimen())", "org.openmrs.module.kenyaemr.model.DrugOrderProcessed.getTypeOfRegimen()", "org.openmrs.module.kenyaemr.model.DrugOrderProcessed.getDrugRegimen()", "org.openmrs.calculation.result.CalculationResultMap.put(java.lang.Integer,org.openmrs.module.kenyacore.calculation.BooleanResult)", "org.openmrs.calculation.result.CalculationResultMap.put(java.lang.Integer,org.openmrs.module.kenyacore.calculation.BooleanResult)", "order.getRegimenChangeType().equals(java.lang.String)", "org.openmrs.calculation.result.CalculationResultMap.put(java.lang.Integer,org.openmrs.module.kenyacore.calculation.BooleanResult)", "org.openmrs.module.kenyaemr.model.DrugOrderProcessed.getPatient()", "org.openmrs.module.kenyaemr.model.DrugOrderProcessed.getDiscontinuedDate()", "org.openmrs.module.kenyaemr.model.DrugOrderProcessed.getRegimenChangeType()"], "Fixed commit": "4de40fc2c7e405bf9e6267081df47fb41727706a", "Url": "https://api.github.com/repos/hispindia/his-hiv-emr", "Date": "2016-07-08T09:35:28Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((ptId.equals(order.getPatient().getPatientId())) && (order.getRegimenChangeType().equals(\"Start\"))) && (order.getTypeOfRegimen().equals(\"First line Anti-retoviral drugs\"))) { onOrigFirstLine = true; ret.put(ptId, new org.openmrs.module.kenyacore.calculation.BooleanResult(onOrigFirstLine, this, context)); if ((order.getDiscontinuedDate()) != null) { onOrigFirstLine = false; ret.put(ptId, new org.openmrs.module.kenyacore.calculation.BooleanResult(onOrigFirstLine, this, context)); } }else if (((ptId.equals(order.getPatient().getPatientId())) && (order.getRegimenChangeType().equals(\"Start\"))) && (order.getTypeOfRegimen().equals(\"Fixed dose combinations (FDCs)\"))) { if (order.getDrugRegimen().equals(drugorder.getDrugRegimen())) { onOrigFirstLine = false; }else { onOrigFirstLine = true; drugorder = order; ret.put(ptId, new org.openmrs.module.kenyacore.calculation.BooleanResult(onOrigFirstLine, this, context)); } if ((order.getDiscontinuedDate()) != null) { onOrigFirstLine = false; ret.put(ptId, new org.openmrs.module.kenyacore.calculation.BooleanResult(onOrigFirstLine, this, context)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4791/buggy-version/api.src.main.java.org.openmrs.module.kenyaemr.calculation.library.hiv.art.OnOriginalFirstLineArtCalculation.java", "BodyUseAPI": ["order.getRegimenChangeType().equals(java.lang.String)", "org.openmrs.module.kenyaemr.model.DrugOrderProcessed.getPatient()", "org.openmrs.module.kenyaemr.model.DrugOrderProcessed.getTypeOfRegimen()", "org.openmrs.calculation.result.CalculationResultMap.put(java.lang.Integer,org.openmrs.module.kenyacore.calculation.BooleanResult)", "org.openmrs.calculation.result.CalculationResultMap.put(java.lang.Integer,org.openmrs.module.kenyacore.calculation.BooleanResult)", "order.getTypeOfRegimen().equals(java.lang.String)", "order.getPatient().getPatientId()", "org.openmrs.module.kenyaemr.model.DrugOrderProcessed.getRegimenChangeType()", "org.openmrs.calculation.result.CalculationResultMap.put(java.lang.Integer,org.openmrs.module.kenyacore.calculation.BooleanResult)", "org.openmrs.calculation.result.CalculationResultMap.put(java.lang.Integer,org.openmrs.module.kenyacore.calculation.BooleanResult)", "org.openmrs.module.kenyaemr.model.DrugOrderProcessed.getDiscontinuedDate()", "java.lang.Integer.equals(order.getPatient().getPatientId())", "order.getDrugRegimen().equals(drugorder.getDrugRegimen())", "org.openmrs.module.kenyaemr.model.DrugOrderProcessed.getDrugRegimen()", "org.openmrs.module.kenyaemr.model.DrugOrderProcessed.getDiscontinuedDate()"], "Fixed commit": "4de40fc2c7e405bf9e6267081df47fb41727706a", "Url": "https://api.github.com/repos/hispindia/his-hiv-emr", "Date": "2016-07-08T09:35:28Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rudie.severin.textadventure.UtilityClasses.ChoiceData.getTestType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (testType != (-1)) { java.util.HashMap<java.lang.Integer, java.lang.Integer> charStats = com.rudie.severin.textadventure.UtilityClasses.CurrentInventoryAndStats.getCurrentStats(); testedValue = charStats.get(testType); testedValue += com.rudie.severin.textadventure.UtilityClasses.CurrentInventoryAndStats.getBestValueForTest(testType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1764/buggy-version/app.src.main.java.com.rudie.severin.textadventure.PlayActivity.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, java.lang.Integer>.get(int)", "com.rudie.severin.textadventure.UtilityClasses.CurrentInventoryAndStats.getBestValueForTest(int)"], "Fixed commit": "223bd7b79b75086891fb91f284c3e2b9d1c026f5", "Url": "https://api.github.com/repos/Baron-Severin/Text-Adventure", "Date": "2016-08-01T20:31:37Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bank.Account.repay(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isDone) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3858/buggy-version/src.bank.Bank.java", "BodyUseAPI": [], "Fixed commit": "b9a8c13ac2b0eef4a0c6d0c850eddc87d9914f4b", "Url": "https://api.github.com/repos/KMU-bank/KMU-Bank", "Date": "2015-12-11T07:33:09Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((defaultValues) != null) && (defaultValues.containsKey(currentMode))) { o = defaultValues.get(currentMode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8443/buggy-version/OsmAnd.src.net.osmand.plus.OsmandSettings.java", "BodyUseAPI": ["java.util.Map<net.osmand.plus.ApplicationMode, T>.get(net.osmand.plus.ApplicationMode)"], "Fixed commit": "e25638bf74749323c6d441f3641824af640663a8", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2015-07-03T09:30:37Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fragment.Cards.NOCAttachmentPage.activity.getType().equals(\"2\")) { return view; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6673/buggy-version/DubaiSouth.src.fragment.Cards.NOCAttachmentPage.java", "BodyUseAPI": [], "Fixed commit": "69ca00bb87e1a72f8d8ab50e37f9b66f992f6f01", "Url": "https://api.github.com/repos/Cloud-Concept/dwc-DubaiSouth-Android", "Date": "2015-09-28T11:05:47Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["TurnBasedMultiplayer.InitiateMatchResult.getMatch()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((match.getData()) == null) mBoard.reset();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4555/buggy-version/app.src.main.java.com.ddiehl.android.reversi.activities.MultiPlayerMatchActivity.java", "BodyUseAPI": [], "Fixed commit": "bad95122a6cd8359a568dd6aa54075aa38bde91e", "Url": "https://api.github.com/repos/damien5314/Flippit", "Date": "2014-12-05T05:33:19Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dspace.app.xmlui.cocoon.SourceResolver.resolveURI(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (inSource.exists()) { this.inputSources.add(inSource); }else throw new org.apache.cocoon.ResourceNotFoundException(((\"Resource not found (\" + fullPath) + \")\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/170/buggy-version/dspace-xmlui.src.main.java.org.dspace.app.xmlui.cocoon.ConcatenationReader.java", "BodyUseAPI": ["java.util.List<org.apache.excalibur.source.Source>.add(org.apache.excalibur.source.Source)"], "Fixed commit": "a15980b085496214b00c531142247a6dd7a0f0c7", "Url": "https://api.github.com/repos/aucompbiker/DSpace", "Date": "2015-02-20T16:45:43Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (src.contains(\"/\")) { path = src.substring(0, src.lastIndexOf('/')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/170/buggy-version/dspace-xmlui.src.main.java.org.dspace.app.xmlui.cocoon.ConcatenationReader.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(char)", "java.lang.String.substring(int,int)"], "Fixed commit": "a15980b085496214b00c531142247a6dd7a0f0c7", "Url": "https://api.github.com/repos/aucompbiker/DSpace", "Date": "2015-02-20T16:45:43Z"},
{"Line": "=>3486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.base.game.dialogue.utils.UtilText.character.getCovering(com.base.game.dialogue.utils.UtilText.getBodyPartFromType(bodyPart).getType().getBodyCoveringType())) == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5672/buggy-version/src.com.base.game.dialogue.utils.UtilText.java", "BodyUseAPI": [], "Fixed commit": "e438dc5fe8378363db5854bb20204e3e00692d9c", "Url": "https://api.github.com/repos/InnoPATH/liliths-throne-public", "Date": "2017-09-09T16:06:00Z"},
{"Line": "=>3428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.base.game.dialogue.utils.UtilText.character.getCovering(com.base.game.dialogue.utils.UtilText.getBodyPartFromType(bodyPart).getType().getBodyCoveringType())) == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5672/buggy-version/src.com.base.game.dialogue.utils.UtilText.java", "BodyUseAPI": [], "Fixed commit": "e438dc5fe8378363db5854bb20204e3e00692d9c", "Url": "https://api.github.com/repos/InnoPATH/liliths-throne-public", "Date": "2017-09-09T16:06:00Z"},
{"Line": "=>3444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.base.game.dialogue.utils.UtilText.character.getCovering(com.base.game.dialogue.utils.UtilText.getBodyPartFromType(bodyPart).getType().getBodyCoveringType())) == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5672/buggy-version/src.com.base.game.dialogue.utils.UtilText.java", "BodyUseAPI": [], "Fixed commit": "e438dc5fe8378363db5854bb20204e3e00692d9c", "Url": "https://api.github.com/repos/InnoPATH/liliths-throne-public", "Date": "2017-09-09T16:06:00Z"},
{"Line": "=>3507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.base.game.dialogue.utils.UtilText.character.getCovering(com.base.game.dialogue.utils.UtilText.getBodyPartFromType(bodyPart).getType().getBodyCoveringType())) == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5672/buggy-version/src.com.base.game.dialogue.utils.UtilText.java", "BodyUseAPI": [], "Fixed commit": "e438dc5fe8378363db5854bb20204e3e00692d9c", "Url": "https://api.github.com/repos/InnoPATH/liliths-throne-public", "Date": "2017-09-09T16:06:00Z"},
{"Line": "=>3465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.base.game.dialogue.utils.UtilText.character.getCovering(com.base.game.dialogue.utils.UtilText.getBodyPartFromType(bodyPart).getType().getBodyCoveringType())) == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5672/buggy-version/src.com.base.game.dialogue.utils.UtilText.java", "BodyUseAPI": [], "Fixed commit": "e438dc5fe8378363db5854bb20204e3e00692d9c", "Url": "https://api.github.com/repos/InnoPATH/liliths-throne-public", "Date": "2017-09-09T16:06:00Z"},
{"Line": "=>3407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.base.game.dialogue.utils.UtilText.character.getCovering(com.base.game.dialogue.utils.UtilText.getBodyPartFromType(bodyPart).getType().getBodyCoveringType())) == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5672/buggy-version/src.com.base.game.dialogue.utils.UtilText.java", "BodyUseAPI": [], "Fixed commit": "e438dc5fe8378363db5854bb20204e3e00692d9c", "Url": "https://api.github.com/repos/InnoPATH/liliths-throne-public", "Date": "2017-09-09T16:06:00Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.checkUseRemote) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7508/buggy-version/src.jp.riken.kscope.dialog.FileProjectNewDialog.java", "BodyUseAPI": [], "Fixed commit": "f65e8c69c9ad3d57041c80f4966c2de13d1f9e04", "Url": "https://api.github.com/repos/K-scope/K-scope", "Date": "2015-05-28T02:19:33Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node.endsWord()) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3080/buggy-version/src.spelling.AutoCompleteDictionaryTrie.java", "BodyUseAPI": [], "Fixed commit": "7f17adc27aea1a01e4dbcf3c4fc13bf5c05b0f01", "Url": "https://api.github.com/repos/MCheli/DataStructuresCoursera", "Date": "2017-09-05T03:07:24Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Scenario.Messages.Message.getUri()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (uri == null) { org.perfcake.pc4idea.module.PCModuleUtil.LOG.info(\"URI isn't null. Message can't be created.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2207/buggy-version/src.main.java.org.perfcake.pc4idea.module.PCModuleUtil.java", "BodyUseAPI": [], "Fixed commit": "4907e4a1d4f21dadac39c244f861fc4916169bf9", "Url": "https://api.github.com/repos/PerfCake/pc4idea", "Date": "2014-12-10T02:17:00Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.impetus.client.hbase.schemamanager.HBaseSchemaManager.admin.isTableDisabled(databaseName)) { com.impetus.client.hbase.schemamanager.HBaseSchemaManager.admin.enableTable(databaseName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/545/buggy-version/kundera-hbase.src.main.java.com.impetus.client.hbase.schemamanager.HBaseSchemaManager.java", "BodyUseAPI": ["org.apache.hadoop.hbase.client.HBaseAdmin.enableTable(com.impetus.client.hbase.schemamanager.HBaseSchemaManager)"], "Fixed commit": "2814de63eff0c1220c0a63af37bbb4b8762ff039", "Url": "https://api.github.com/repos/sonatype/Kundera", "Date": "2013-08-05T13:49:49Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkForChildren(selectedNode)) { valueMap.put(org.wso2.developerstudio.datamapper.diagram.custom.action.EditArrayAction.JSON_SCHEMA_ARRAY_ITEMS_TYPE, org.wso2.developerstudio.datamapper.diagram.custom.action.EditArrayAction.JSON_SCHEMA_OBJECT); }else if (org.apache.commons.lang.StringUtils.isNotEmpty(editTypeDialog.getValue())) { valueMap.put(org.wso2.developerstudio.datamapper.diagram.custom.action.EditArrayAction.JSON_SCHEMA_ARRAY_ITEMS_TYPE, editTypeDialog.getValue()); }else { valueMap.put(org.wso2.developerstudio.datamapper.diagram.custom.action.EditArrayAction.JSON_SCHEMA_ARRAY_ITEMS_TYPE, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2513/buggy-version/plugins.org.wso2.developerstudio.visualdatamapper.diagram.src.org.wso2.developerstudio.datamapper.diagram.custom.action.EditArrayAction.java", "BodyUseAPI": [], "Fixed commit": "02e30edb5dc76db737fa165eb8ba935e273e54d0", "Url": "https://api.github.com/repos/wso2/devstudio-tooling-esb", "Date": "2016-07-26T13:08:35Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hoverObjects.contains(o)) { hoverObjects.remove(o); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7825/buggy-version/src.edu.mit.kacquah.deckviewer.action.SelectionManager.java", "BodyUseAPI": ["java.util.LinkedList<edu.mit.kacquah.deckviewer.deckobjects.FlyingObject>.remove(edu.mit.kacquah.deckviewer.deckobjects.FlyingObject)"], "Fixed commit": "6b6cb391042e7592c51ebc8e0375bc2fc3b76a88", "Url": "https://api.github.com/repos/MUG-CSAIL/DeckViewer", "Date": "2015-02-24T20:36:43Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, org.pi.litepost.databaseAccess.DatabaseQuery>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (query == null) { throw new org.pi.litepost.databaseAccess.DatabaseCriticalErrorException(java.lang.String.format(\"no query with name %s found!\", queryName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2360/buggy-version/src.org.pi.litepost.databaseAccess.DatabaseQueryManager.java", "BodyUseAPI": [], "Fixed commit": "ff87816e7d331fd85fa702c48d2d2714947ff9f4", "Url": "https://api.github.com/repos/PraktischeInformatik/LitePost", "Date": "2015-02-11T16:30:24Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (alphabet instanceof com.milaboratory.core.sequence.AlphabetCaseSensitive) for (byte i = 0; i < codes; ++i) for (byte j = 0; j < codes; ++j) { if ((java.lang.Character.toLowerCase(alphabet.codeToSymbol(i))) == (java.lang.Character.toLowerCase(alphabet.codeToSymbol(j)))) matrix[(i + (codes * j))] = match; } else for (int i = 0; i < codes; ++i) matrix[(i + (codes * i))] = match;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8054/buggy-version/src.main.java.com.milaboratory.core.alignment.ScoringUtils.java", "BodyUseAPI": ["java.lang.Character.toLowerCase(alphabet.codeToSymbol(i))", "com.milaboratory.core.sequence.Alphabet<?>.codeToSymbol(byte)", "com.milaboratory.core.sequence.Alphabet<?>.codeToSymbol(byte)", "java.lang.Character.toLowerCase(alphabet.codeToSymbol(j))"], "Fixed commit": "d728a2865f908d9c974f478e14eb2f950dd55fbc", "Url": "https://api.github.com/repos/milaboratory/milib", "Date": "2017-10-30T11:30:24Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bestitem == null) { java.lang.System.out.println((\"Could not find barrier: \" + itns)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/70/buggy-version/src.main.java.org.opentree.taxonomy.BarrierNodes.java", "BodyUseAPI": [], "Fixed commit": "a5c64641dfdf27b5e231881ef5133e03ede3feae", "Url": "https://api.github.com/repos/OpenTreeOfLife/taxomachine", "Date": "2014-03-26T20:41:31Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (typeDesc.getType().isComplexType()) { switch (typeDesc.getType()) { case ARRAY_TYPE : case MAP_TYPE : case STRUCT_TYPE : return \"string\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4349/buggy-version/lens-server-api.src.main.java.org.apache.lens.server.api.driver.LensResultSetMetadata.java", "BodyUseAPI": ["org.apache.hive.service.cli.TypeDescriptor.getType()"], "Fixed commit": "a528c2fc900b93e4b6ee06dadf85c6b10e91ac9d", "Url": "https://api.github.com/repos/InMobi/grill", "Date": "2014-12-11T12:35:53Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source_index == \"\") source_index = \"0\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4315/buggy-version/app.src.main.java.com.example.amazingtali.noise_mapper.Rec_Activity.java", "BodyUseAPI": [], "Fixed commit": "5fdf1052693e2d20252312d5a27f63ee5e3a624e", "Url": "https://api.github.com/repos/CtrlAltTali/Noise_Mapper", "Date": "2017-11-17T13:38:13Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((radiusCircle) != null) { radiusCircle.remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3204/buggy-version/app.src.main.java.org.jugendhackt.camera_warner.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "fc83891c3cc4a0cf9326384d48d44654b9e92a55", "Url": "https://api.github.com/repos/Jugendhackt/Camera-warner", "Date": "2017-06-10T18:35:13Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((params.get(\"adminPw\")) == null) params.put(\"adminPw\", \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7027/buggy-version/src.main.java.de.damarus.mcdesktopinfo.RequestHandler.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "c277dbb1950dac62b5e36b28d69b9311d6b1fce9", "Url": "https://api.github.com/repos/Dam4rusxp/McDesktopInfo", "Date": "2012-01-08T14:49:11Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pwHash == null) throw new java.lang.NullPointerException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7027/buggy-version/src.main.java.de.damarus.mcdesktopinfo.PasswordSystem.java", "BodyUseAPI": [], "Fixed commit": "c277dbb1950dac62b5e36b28d69b9311d6b1fce9", "Url": "https://api.github.com/repos/Dam4rusxp/McDesktopInfo", "Date": "2012-01-08T14:49:11Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mServerList.contains(id))) { mServerList.add(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/9010/buggy-version/MediaServer.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "8c26383f134ab4179851e3df9562a9686e1412d2", "Url": "https://api.github.com/repos/zhouyongxyz/MediaServer", "Date": "2017-07-17T12:16:25Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yaroslav.other.calendar.view.year.YearCalendarRendererToFile.getListLink(java.util.List<com.yaroslav.other.calendar.YearCalendar>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (numberLink == ((links.size()) - 1)) { link = links.get(numberLink); linkNext = links.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5535/buggy-version/src.main.java.com.yaroslav.other.calendar.view.year.YearCalendarRendererToFile.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "cffaff9883aec44ec38169324d946055fb52bbf8", "Url": "https://api.github.com/repos/YaroslavO/my-calendar", "Date": "2015-05-26T06:55:06Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.sudoku.p8.Music.getInstance().playe()) == 0) { com.sudoku.p8.Music.getInstance().initalizeMediaPlayer(this, R.raw.one); com.sudoku.p8.Music.getInstance().startPlaying(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7366/buggy-version/app.src.main.java.com.sudoku.p8.MenuActivity.java", "BodyUseAPI": [], "Fixed commit": "69aafdcfa7a27a4527a95098b1c65cbc4c3f8700", "Url": "https://api.github.com/repos/Royalxm/Android_sudoku", "Date": "2015-12-28T14:55:52Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ret < 0) { ret += 24 * 60; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3823/buggy-version/app.src.main.java.kr.koinichi.ms2boss.Boss.java", "BodyUseAPI": [], "Fixed commit": "5c4ab8050734260dc914ea9e5ca9d9f40871d486", "Url": "https://api.github.com/repos/KOINICHI/MS2Boss", "Date": "2015-07-14T14:27:27Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((idOptions.size()) == 0) { return this.idm.getThisNetworkNode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8104/buggy-version/privacy-trust.java.privacy-protection.privacy-negotiation-management.src.main.java.org.societies.privacytrust.privacyprotection.privacynegotiation.negotiation.client.NegotiationClient.java", "BodyUseAPI": [], "Fixed commit": "86453a5e5bc1d3f9cf93e633682964eaaf1bdeb1", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2012-06-28T10:05:02Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.command.Message.getOriginalDestination()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (origDest != null) { org.apache.activemq.util.ByteSequence origDestBytes = marshaller.marshal(origDest); origDestBytes.compact(); coreMessage.putBytesProperty(org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.AMQ_MSG_ORIG_DESTINATION, origDestBytes.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6443/buggy-version/artemis-protocols.artemis-openwire-protocol.src.main.java.org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.java", "BodyUseAPI": ["org.apache.activemq.wireformat.WireFormat.marshal(org.apache.activemq.command.ActiveMQDestination)"], "Fixed commit": "2cba70216176214e601e921b142e6d1903593cd2", "Url": "https://api.github.com/repos/apache/activemq-artemis", "Date": "2016-02-18T12:52:32Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((messageEntity.getSender()) != null) messageDto.setSender(userEntityMapper.convertToDto(userRepository.findOne(messageEntity.getSender().getId())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/927/buggy-version/IKMS-server.src.main.java.pl.politechnika.ikms.rest.mapper.message.MessageEntityMapper.java", "BodyUseAPI": ["pl.politechnika.ikms.repository.user.UserRepository.findOne(messageEntity.getSender().getId())", "pl.politechnika.ikms.rest.mapper.user.UserEntityMapper.convertToDto(userRepository.findOne(messageEntity.getSender().getId()))", "messageEntity.getSender().getId()", "pl.politechnika.ikms.rest.dto.message.MessageDto.setSender(userEntityMapper.convertToDto(userRepository.findOne(messageEntity.getSender().getId())))", "pl.politechnika.ikms.domain.message.MessageEntity.getSender()"], "Fixed commit": "058bd3324b086350ff23b4e2346a26d653104492", "Url": "https://api.github.com/repos/Nomad95/IKMS", "Date": "2017-12-02T17:27:31Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((messageEntity.getRecipient()) != null) messageDto.setRecipient(userEntityMapper.convertToDto(userRepository.findOne(messageEntity.getRecipient().getId())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/927/buggy-version/IKMS-server.src.main.java.pl.politechnika.ikms.rest.mapper.message.MessageEntityMapper.java", "BodyUseAPI": ["pl.politechnika.ikms.domain.message.MessageEntity.getRecipient()", "pl.politechnika.ikms.repository.user.UserRepository.findOne(messageEntity.getRecipient().getId())", "pl.politechnika.ikms.rest.mapper.user.UserEntityMapper.convertToDto(userRepository.findOne(messageEntity.getRecipient().getId()))", "messageEntity.getRecipient().getId()", "pl.politechnika.ikms.rest.dto.message.MessageDto.setRecipient(userEntityMapper.convertToDto(userRepository.findOne(messageEntity.getRecipient().getId())))"], "Fixed commit": "058bd3324b086350ff23b4e2346a26d653104492", "Url": "https://api.github.com/repos/Nomad95/IKMS", "Date": "2017-12-02T17:27:31Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(result.isNull(\"image\"))) { tsr.mImage = com.dozuki.ifixit.util.JSONHelper.parseImage(result, \"image\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5408/buggy-version/App.src.com.dozuki.ifixit.util.JSONHelper.java", "BodyUseAPI": ["com.dozuki.ifixit.util.JSONHelper.parseImage(org.json.JSONObject,java.lang.String)"], "Fixed commit": "5c76429594d67c628b7b6367dd353032a6a12f6c", "Url": "https://api.github.com/repos/iFixit/iFixitAndroid", "Date": "2017-03-15T23:26:54Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e.getWorld().isRemote) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3753/buggy-version/src.main.java.com.bjorniavelli.exbedrock.listener.BedrockListener.java", "BodyUseAPI": [], "Fixed commit": "bcd72457fbf4ef0fe215730a04346cbadfce11c8", "Url": "https://api.github.com/repos/Bjorniavelli/ExBedrock", "Date": "2016-05-11T18:48:05Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(uri.isPlatform())) { org.eclipse.emf.ecore.EPackage epackage = metamodelProvider.loadEPackage(uri.trimFragment().toString(), set); if (epackage != null) { return epackage.eResource().getURI().appendFragment(uri.fragment()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1005/buggy-version/plugins.org.eclipse.viatra2.emf.incquery.tooling.generator.src.org.eclipse.viatra2.emf.incquery.tooling.generator.util.XMIResourceURIHandler.java", "BodyUseAPI": ["uri.trimFragment().toString()", "org.eclipse.emf.common.util.URI.fragment()", "org.eclipse.emf.common.util.URI.trimFragment()", "org.eclipse.viatra2.patternlanguage.scoping.IMetamodelProvider.loadEPackage(uri.trimFragment().toString(),org.eclipse.emf.ecore.resource.ResourceSet)", "epackage.eResource().getURI().appendFragment(uri.fragment())"], "Fixed commit": "9b932002a987f2b81a4d6e4ba4a9b41182142349", "Url": "https://api.github.com/repos/ujhelyiz/EMF-IncQuery", "Date": "2012-06-27T11:01:30Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tag == null) || (msg == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7163/buggy-version/src.de.azapps.mirakel.helper.Log.java", "BodyUseAPI": [], "Fixed commit": "14f638836a95ab4897c4d88525feac430cc361f9", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2013-09-20T18:21:12Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof java.lang.Long) { getBuilder().setClaimsSetExpirationTime(((java.lang.Long) (value))); }else { getBuilder().setClaimsSetExpirationTime(((java.lang.Integer) (value)).longValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8846/buggy-version/oauth-2.0.jwt.src.main.java.org.apache.oltu.oauth2.jwt.io.JWTClaimsSetParser.java", "BodyUseAPI": [], "Fixed commit": "f7da024314832ad5306b4c53f7e612b9825b9cf7", "Url": "https://api.github.com/repos/vikpj/oltu", "Date": "2015-10-20T22:30:45Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof java.lang.Long) { getBuilder().setClaimsSetIssuedAt(((java.lang.Long) (value))); }else { getBuilder().setClaimsSetIssuedAt(((java.lang.Integer) (value)).longValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8846/buggy-version/oauth-2.0.jwt.src.main.java.org.apache.oltu.oauth2.jwt.io.JWTClaimsSetParser.java", "BodyUseAPI": [], "Fixed commit": "f7da024314832ad5306b4c53f7e612b9825b9cf7", "Url": "https://api.github.com/repos/vikpj/oltu", "Date": "2015-10-20T22:30:45Z"},
{"Line": "=>4001", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lb.isArg) lb.idx -= 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3567/buggy-version/src.jvm.clojure.lang.Compiler.java", "BodyUseAPI": [], "Fixed commit": "b715e7b28c170a0b2e52aeecfca7104f4e74ba0f", "Url": "https://api.github.com/repos/MichaelBlume/clojure", "Date": "2015-09-21T15:41:27Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((service.getGroundings().size()) > 0) && ((service.getGroundings().iterator().next().getAtomicGroundings().size()) > 0)) { sd.add(new edu.bath.matchmaker.ServiceDescriptor(((org.mindswap.owls.grounding.WSDLAtomicGrounding) (service.getGroundings().iterator().next().getAtomicGroundings().iterator().next())).getOperationRef().getOperation(), edu.bath.matchmaker.ServiceDescriptor.paramsToTypes(OwlsUtils.Parameters.INPUT.parametersOf(((org.mindswap.owls.process.AtomicProcess) (service.getProcess())))), edu.bath.matchmaker.ServiceDescriptor.paramsToTypes(OwlsUtils.Parameters.OUTPUT.parametersOf(((org.mindswap.owls.process.AtomicProcess) (service.getProcess())))))); }else { java.lang.System.out.println(service.getName()); sd.add(new edu.bath.matchmaker.ServiceDescriptor(service.getURI(), edu.bath.matchmaker.ServiceDescriptor.paramsToTypes(OwlsUtils.Parameters.INPUT.parametersOf(((org.mindswap.owls.process.AtomicProcess) (service.getProcess())))), edu.bath.matchmaker.ServiceDescriptor.paramsToTypes(OwlsUtils.Parameters.OUTPUT.parametersOf(((org.mindswap.owls.process.AtomicProcess) (service.getProcess())))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/73/buggy-version/Matchmaker.src.edu.bath.matchmaker.ServiceDescriptor.java", "BodyUseAPI": ["java.util.Vector<edu.bath.matchmaker.ServiceDescriptor>.add(edu.bath.matchmaker.ServiceDescriptor)", "java.util.Vector<edu.bath.matchmaker.ServiceDescriptor>.add(edu.bath.matchmaker.ServiceDescriptor)", "org.mindswap.owls.service.Service.getProcess()", "service.getGroundings().iterator().next()", "org.mindswap.owls.service.Service.getURI()", "service.getGroundings().iterator()", "((org.mindswap.owls.grounding.WSDLAtomicGrounding) (service.getGroundings().iterator().next().getAtomicGroundings().iterator().next())).getOperationRef()", "service.getGroundings().iterator().next().getAtomicGroundings().iterator().next()", "org.mindswap.owls.service.Service.getProcess()", "OwlsUtils.Parameters.INPUT.parametersOf(((org.mindswap.owls.process.AtomicProcess) (service.getProcess())))", "OwlsUtils.Parameters.OUTPUT.parametersOf(((org.mindswap.owls.process.AtomicProcess) (service.getProcess())))", "OwlsUtils.Parameters.OUTPUT.parametersOf(((org.mindswap.owls.process.AtomicProcess) (service.getProcess())))", "org.mindswap.owls.service.Service.getProcess()", "java.io.PrintStream.println(service.getName())", "((org.mindswap.owls.grounding.WSDLAtomicGrounding) (service.getGroundings().iterator().next().getAtomicGroundings().iterator().next())).getOperationRef().getOperation()", "edu.bath.matchmaker.ServiceDescriptor.paramsToTypes(OwlsUtils.Parameters.INPUT.parametersOf(((org.mindswap.owls.process.AtomicProcess) (service.getProcess()))))", "org.mindswap.owls.service.Service.getName()", "service.getGroundings().iterator().next().getAtomicGroundings()", "edu.bath.matchmaker.ServiceDescriptor.paramsToTypes(OwlsUtils.Parameters.OUTPUT.parametersOf(((org.mindswap.owls.process.AtomicProcess) (service.getProcess()))))", "OwlsUtils.Parameters.INPUT.parametersOf(((org.mindswap.owls.process.AtomicProcess) (service.getProcess())))", "service.getGroundings().iterator().next().getAtomicGroundings().iterator()", "org.mindswap.owls.service.Service.getProcess()", "org.mindswap.owls.service.Service.getGroundings()", "edu.bath.matchmaker.ServiceDescriptor.paramsToTypes(OwlsUtils.Parameters.INPUT.parametersOf(((org.mindswap.owls.process.AtomicProcess) (service.getProcess()))))", "edu.bath.matchmaker.ServiceDescriptor.paramsToTypes(OwlsUtils.Parameters.OUTPUT.parametersOf(((org.mindswap.owls.process.AtomicProcess) (service.getProcess()))))"], "Fixed commit": "d337a524b333ec55d107ce19e1b9e8a7bec62988", "Url": "https://api.github.com/repos/kemlg/aliveclipse", "Date": "2013-05-28T09:44:01Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((foreigns) != null) if ((foreigns.size()) > 0) for (org.executequery.databaseobjects.impl.ColumnConstraint key : foreigns) { java.util.Vector items = itemsForeign(key); table.setComboboxColumn(tableModel.getColumnIndex(key.getColumnName()), items); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1448/buggy-version/src.org.executequery.gui.browser.TableDataTab.java", "BodyUseAPI": [], "Fixed commit": "bcca3f0fe666f1e260c328ca0943eff6a34779ca", "Url": "https://api.github.com/repos/red-soft-ru/redexpert", "Date": "2017-09-27T14:11:40Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pvsagar.smartlockscreen.backend_helpers.SharedPreferencesHelper.getMasterPasswordString(android.content.Context)", "com.pvsagar.smartlockscreen.backend_helpers.SharedPreferencesHelper.getMasterPasswordType(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((masterPasswordType == null) || (masterPasswordString == null)) { masterPasswordType = com.pvsagar.smartlockscreen.baseclasses.Passphrase.TYPE_NONE; masterPasswordString = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4487/buggy-version/app.src.main.java.com.pvsagar.smartlockscreen.baseclasses.Passphrase.java", "BodyUseAPI": [], "Fixed commit": "c7ba0455376658116a890ec5bc693fd05fc16910", "Url": "https://api.github.com/repos/aravindsagar/SmartLockScreen", "Date": "2014-10-01T14:17:17Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((popup) != null) { popup.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1572/buggy-version/app.src.main.java.com.alvarosantisteban.pathos.FirstTimeActivity.java", "BodyUseAPI": [], "Fixed commit": "a5868408cc5fbb7d97653b31b92b632b1bf6e73e", "Url": "https://api.github.com/repos/alvarosantisteban/berlineventcurator", "Date": "2014-11-24T18:45:48Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sm.states.size()) > 10000) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2124/buggy-version/Antz.src.ai.StateMachine.java", "BodyUseAPI": [], "Fixed commit": "c9e2756e44c3e17588cb859c30f74bc4b33a1e45", "Url": "https://api.github.com/repos/jo215/Ants", "Date": "2012-06-10T22:36:31Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Set<uk.ac.ebi.interpro.scan.model.Protein>.add(uk.ac.ebi.interpro.scan.model.Protein)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isMoleculeAdded) { for (uk.ac.ebi.interpro.scan.model.Protein existing : parsedMolecules) { if (existing.getMd5().equals(thisProtein.getMd5())) { thisProtein = existing; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7001/buggy-version/core.business.src.main.java.uk.ac.ebi.interpro.scan.business.sequence.fasta.LoadProteinFastaFile.java", "BodyUseAPI": [], "Fixed commit": "aa235b23f816fa61d31c29272b754ad114f8c824", "Url": "https://api.github.com/repos/ebi-pf-team/interproscan", "Date": "2017-01-10T15:32:04Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((colors.size()) >= 2) buttons.get(((colors.size()) - 2)).updateMoveColorDownButton();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1640/buggy-version/freeplane.src.main.java.org.freeplane.features.edge.mindmapmode.ColorListEditorPanelBuilder.java", "BodyUseAPI": ["java.util.List<org.freeplane.features.edge.mindmapmode.ColorListEditorPanelBuilder.RowButtons>.get(int)", "org.freeplane.features.edge.mindmapmode.ColorListEditorPanelBuilder.RowButtons.updateMoveColorDownButton()", "java.util.List<java.awt.Color>.size()"], "Fixed commit": "221782912d41df1874cd7bf50dd98ef34f7cc238", "Url": "https://api.github.com/repos/freeplane/freeplane", "Date": "2017-08-19T08:10:30Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataType != null) { return new io.crate.metadata.ReferenceInfo(referenceInfo.ident(), referenceInfo.granularity(), dataType, referenceInfo.columnPolicy(), referenceInfo.indexType()); }else { return referenceInfo; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4768/buggy-version/sql.src.main.java.io.crate.analyze.relations.AbstractTableRelation.java", "BodyUseAPI": [], "Fixed commit": "a0b99518d5af50c0f8945d464ba04410d2cb1319", "Url": "https://api.github.com/repos/crate/crate", "Date": "2016-06-16T20:26:46Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((dataBuffer) == null) && ((compressedBuffer) != null)) { if ((params.cipher) != null) { try { compressedBuffer = org.araqne.logstorage.Crypto.decrypt(compressedBuffer, params.cipher, params.cipherKey, iv); } catch (java.lang.Throwable t) { throw new java.io.IOException(\"cannot decrypt block\", t); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/484/buggy-version/araqne-logstorage.src.main.java.org.araqne.logstorage.file.DataBlockV3.java", "BodyUseAPI": [], "Fixed commit": "2fa8249220f92ccff41be25ddd868728856466fb", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2014-11-21T07:57:25Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (direction.isEmpty()) { return this.service.findAll(new org.springframework.data.domain.PageRequest((page - 1), size)); }else { org.springframework.util.Assert.notNull(properties); return this.service.findAll(new org.springframework.data.domain.PageRequest((page - 1), size, new org.springframework.data.domain.Sort(Sort.Direction.fromString(direction.toUpperCase()), properties.split(\",\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8492/buggy-version/resthub-web.resthub-web-server.src.main.java.org.resthub.web.controller.ServiceBasedRestController.java", "BodyUseAPI": ["Sort.Direction.fromString(java.lang.String)", "java.lang.String.toUpperCase()", "S.findAll(org.springframework.data.domain.PageRequest)"], "Fixed commit": "f33080fe70b20474a32e6a1051c57671f72abc9f", "Url": "https://api.github.com/repos/pierre-duchesne/resthub-spring-stack", "Date": "2013-02-06T15:50:58Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (direction.isEmpty()) { return this.repository.findAll(new org.springframework.data.domain.PageRequest((page - 1), size)); }else { org.springframework.util.Assert.notNull(properties); return this.repository.findAll(new org.springframework.data.domain.PageRequest((page - 1), size, new org.springframework.data.domain.Sort(Sort.Direction.fromString(direction.toUpperCase()), properties.split(\",\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8492/buggy-version/resthub-web.resthub-web-server.src.main.java.org.resthub.web.controller.RepositoryBasedRestController.java", "BodyUseAPI": ["R.findAll(org.springframework.data.domain.PageRequest)", "java.lang.String.toUpperCase()", "Sort.Direction.fromString(java.lang.String)"], "Fixed commit": "f33080fe70b20474a32e6a1051c57671f72abc9f", "Url": "https://api.github.com/repos/pierre-duchesne/resthub-spring-stack", "Date": "2013-02-06T15:50:58Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.instruction) != null) { this.decode.setInstruction(this.instruction, mar.getValue()); this.instruction = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8992/buggy-version/src.process.Fetch.java", "BodyUseAPI": [], "Fixed commit": "32b524cb6ecc80d4a031cd7f380ed5267df96832", "Url": "https://api.github.com/repos/Patrivkpan/HASErizal", "Date": "2017-05-16T16:50:53Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.atomic.AtomicMarkableReference<LockFreeSetImpl<T>.Node>.getReference()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (right == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5615/buggy-version/csc.2017.2.LockFreeSet.shenbin_ii.LockFreeSetImpl.java", "BodyUseAPI": [], "Fixed commit": "d1674be57fce372b6d5610bba8bb55f53d0df2a4", "Url": "https://api.github.com/repos/cscenter/hpcourse", "Date": "2017-05-06T02:40:17Z"},
{"Line": "=>713", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mPaymentListMap.get(i).get(\"isPass\").equals(\"true\")) sPaidAmount += java.lang.Long.valueOf(mPaymentListMap.get(i).get(\"amount\").toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2024/buggy-version/app.src.main.java.mjkarbasian.moshtarimadar.Sales.DetailSaleInsert.java", "BodyUseAPI": ["java.lang.String.toString()", "java.util.ArrayList<java.util.Map<java.lang.String, java.lang.String>>.get(int)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.lang.Long.valueOf(java.lang.String)"], "Fixed commit": "f0a14642c6865a9c7cadf757e9acd25bee0c46fa", "Url": "https://api.github.com/repos/Kaseb/Kaseb", "Date": "2016-12-30T10:29:33Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.ucsb.cs56.projects.utilities.credit_card_validator.Menu.getValidLength()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (validLength == (-1)) { cardValidLabel.setText(\"Please select a card type!\"); return; }else if (checkLength > validLength) { java.lang.String overByNum = \"Too many digits delete \"; overByNum += java.lang.Integer.toString((checkLength - validLength)); cardValidLabel.setText(overByNum); return; }else if (checkLength < validLength) { cardValidLabel.setText(\"Not enough digits!\"); return; }else if (isInputInvalid()) { cardValidLabel.setText(\"Invalid character input!\"); return; }else { cardValidLabel.setText(\"This is an invalid card number!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/520/buggy-version/src.edu.ucsb.cs56.projects.utilities.credit_card_validator.Menu.java", "BodyUseAPI": ["java.lang.Integer.toString(int)"], "Fixed commit": "174deccef638b1be7a866c1b05e4d9ac876fbd17", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-utilities-credit-card-validator", "Date": "2016-02-23T14:45:34Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((w) > 0) { wood_timer.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/9210/buggy-version/AQuietNight.src.main.java.com.milesstudios.aquietnight.Forest.java", "BodyUseAPI": [], "Fixed commit": "ff9dae658faa940b6499a8217139a4b6cef7f0ff", "Url": "https://api.github.com/repos/Ryanm14/A_Quiet_Night", "Date": "2014-09-18T23:30:20Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((base) == null) && ((working) == null)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/233/buggy-version/src.main.java.de.danielbechler.diff.Instances.java", "BodyUseAPI": [], "Fixed commit": "50aa9154571d25cb78afff4eddb7e84f3b7d785f", "Url": "https://api.github.com/repos/SQiShER/java-object-diff", "Date": "2013-07-30T09:53:15Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((base) == null) && ((working) != null)) || (((base) != null) && ((working) == null))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/233/buggy-version/src.main.java.de.danielbechler.diff.Instances.java", "BodyUseAPI": [], "Fixed commit": "50aa9154571d25cb78afff4eddb7e84f3b7d785f", "Url": "https://api.github.com/repos/SQiShER/java-object-diff", "Date": "2013-07-30T09:53:15Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((accounting != null) && ((accounting.getJournals()) != null)) { be.dafke.BasicAccounting.MainApplication.Main.setJournal(accounting.getJournals().getCurrentObject()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7618/buggy-version/BasicAccounting.src.main.java.be.dafke.BasicAccounting.MainApplication.Main.java", "BodyUseAPI": ["be.dafke.BasicAccounting.MainApplication.Main.setJournal(accounting.getJournals().getCurrentObject())", "be.dafke.BasicAccounting.MainApplication.Accounting.getJournals()", "accounting.getJournals().getCurrentObject()"], "Fixed commit": "0014437d88e1b624dae04b095cee1434897fe4ea", "Url": "https://api.github.com/repos/DavidCADanneels/Accounting", "Date": "2016-12-24T18:48:14Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_mSipVoiceCallLogId) != null) { java.util.Map<java.lang.String, java.lang.String> _updateValues = new java.util.HashMap<java.lang.String, java.lang.String>(); _updateValues.put(CallLog.Calls.DURATION, sipVoiceCallDuration.toString()); com.richitec.commontoolkit.call.CallLogManager.updateCallLog(_mSipVoiceCallLogId, _updateValues); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4783/buggy-version/src.com.richitec.chinesetelephone.sip.services.BaseSipServices.java", "BodyUseAPI": [], "Fixed commit": "27d5d82f481009625807f3250c49e1a310035f25", "Url": "https://api.github.com/repos/ElegantCloud/ChineseTelephone_android", "Date": "2013-04-16T08:35:29Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jo.sm.ship.logic.ShipLogic.findCore(jo.sm.data.SparseMatrix<jo.sm.ship.data.Block>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (core != null) if ((((core.x) != 8) || ((core.y) != 8)) || ((core.z) != 8)) { jo.sm.ship.data.Block c = modified.get(core); modified.set(core, null); modified.set(8, 8, 8, c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3010/buggy-version/JoTools.JoFileMods.src.jo.sm.plugins.ship.reflect.ReflectPlugin.java", "BodyUseAPI": ["jo.sm.data.SparseMatrix<jo.sm.ship.data.Block>.get(jo.vecmath.Point3i)", "jo.sm.data.SparseMatrix<jo.sm.ship.data.Block>.set(jo.vecmath.Point3i,<nulltype>)"], "Fixed commit": "64aeee21fe207ee8cc57cd2d760c55e3c999d21e", "Url": "https://api.github.com/repos/StarMade/SMTools", "Date": "2013-09-26T02:40:47Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((spinnerBuilder.length()) > (com.jaspersoft.android.sdk.ui.widget.MultiSelectSpinner.TEXT_MAX_LENGTH)) { spinnerBuilder.append(com.jaspersoft.android.sdk.ui.widget.MultiSelectSpinner.TEXT_ELLIPSIS); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1476/buggy-version/ui.src.main.java.com.jaspersoft.android.sdk.ui.widget.MultiSelectSpinner.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "5f49c243dfca5737759bb6f7b8269fdc06e89862", "Url": "https://api.github.com/repos/Jaspersoft/js-android-sdk", "Date": "2014-02-25T13:49:47Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((unzipDir) != null) sk.styk.martin.bakalarka.files.FileUtils.deleteDirectory(unzipDir);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1931/buggy-version/src.main.java.sk.styk.martin.bakalarka.files.TempFileManager.java", "BodyUseAPI": [], "Fixed commit": "fc964b6b0e3cf036686b77ea0296946feca97ac0", "Url": "https://api.github.com/repos/MartinStyk/ApkAnalyzer", "Date": "2016-01-01T19:53:08Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((workingDir) != null) sk.styk.martin.bakalarka.files.FileUtils.deleteDirectory(workingDir);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1931/buggy-version/src.main.java.sk.styk.martin.bakalarka.files.TempFileManager.java", "BodyUseAPI": [], "Fixed commit": "fc964b6b0e3cf036686b77ea0296946feca97ac0", "Url": "https://api.github.com/repos/MartinStyk/ApkAnalyzer", "Date": "2016-01-01T19:53:08Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((decompiledDir) != null) sk.styk.martin.bakalarka.files.FileUtils.deleteDirectory(decompiledDir);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1931/buggy-version/src.main.java.sk.styk.martin.bakalarka.files.TempFileManager.java", "BodyUseAPI": [], "Fixed commit": "fc964b6b0e3cf036686b77ea0296946feca97ac0", "Url": "https://api.github.com/repos/MartinStyk/ApkAnalyzer", "Date": "2016-01-01T19:53:08Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["digital.torpedo.yaci.autobuilder.AutoBuilder.extractMe(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (projectBase != null) cleanUp(projectBase);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6800/buggy-version/YA-CI.src.digital.torpedo.yaci.autobuilder.AutoBuilder.java", "BodyUseAPI": ["digital.torpedo.yaci.autobuilder.AutoBuilder.cleanUp(java.nio.file.Path)"], "Fixed commit": "99f33c25a4c3b8d23dd7353dff590d9969de6107", "Url": "https://api.github.com/repos/Klyyssi/ya-ci", "Date": "2016-01-15T16:43:01Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stack.stackTagCompound.getName()) == \"\") stack.stackTagCompound.setName(\"tag\"); else stack.stackTagCompound.removeTag(\"display\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6490/buggy-version/com.mraof.minestuck.editmode.DeployList.java", "BodyUseAPI": ["stack.stackTagCompound.removeTag(java.lang.String)", "stack.stackTagCompound.setName(java.lang.String)"], "Fixed commit": "5f5bd7f7bf331ac493ef7490b4779ffa45d0bdb1", "Url": "https://api.github.com/repos/mraof/Minestuck", "Date": "2014-03-10T07:19:02Z"},
{"Line": "=>776", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.abs(float)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (absDy > 50) { android.util.Log.d(com.avgtechie.slidinguppanel.SlidingBottomUpLayout.TAG, \"collapsePane();\"); android.util.Log.d(\"TAG\", \"collapsePane();\"); collapsePane(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8497/buggy-version/library.src.com.avgtechie.slidinguppanel.SlidingBottomUpLayout.java", "BodyUseAPI": [], "Fixed commit": "50dce96d4efd851c7c224ea4cb5be99bd140d41a", "Url": "https://api.github.com/repos/wheretoeatorg/WhereToEat", "Date": "2014-06-17T20:54:13Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.exists())) { file.createNewFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4643/buggy-version/src.org.carlgo11.anti.p12a.antip12a.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "0a9792b9802b3ed8c1e837387d3fc6e081891de0", "Url": "https://api.github.com/repos/Carlgo11/AntiP12a", "Date": "2013-10-27T12:15:52Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { getFragmentManager().beginTransaction().add(R.id.fragment_container, new com.xabber.android.ui.RoomSelectFragment()).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7154/buggy-version/app.src.main.java.com.xabber.android.ui.RoomSelectActivity.java", "BodyUseAPI": [], "Fixed commit": "02cb0bf427de662b9f9a7867579fb0f7e64a270a", "Url": "https://api.github.com/repos/redsolution/xabber-android", "Date": "2015-07-22T13:45:59Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(getDataFolder().exists())) && (!(getDataFolder().mkdirs()))) { getLogger().severe(\"Unable to create data folder.\"); org.bukkit.Bukkit.getPluginManager().disablePlugin(this); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2505/buggy-version/src.main.java.com.tealcube.minecraft.bukkit.mythicdrops.MythicDropsPlugin.java", "BodyUseAPI": [], "Fixed commit": "1aee6676881b7db818ba7180ffebb1d18e5fc4ef", "Url": "https://api.github.com/repos/Nunnery/MythicDrops", "Date": "2017-05-26T20:42:35Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (token.startsWith(\"B'\")) { return \"B'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/856/buggy-version/flyway-core.src.main.java.com.googlecode.flyway.core.dbsupport.mysql.MySQLSqlStatementBuilder.java", "BodyUseAPI": [], "Fixed commit": "9b2e2c970c0b010234f66d41b009922810be76ba", "Url": "https://api.github.com/repos/flyway/flyway", "Date": "2013-05-24T17:43:15Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (token.startsWith(\"X'\")) { return \"X'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/856/buggy-version/flyway-core.src.main.java.com.googlecode.flyway.core.dbsupport.mysql.MySQLSqlStatementBuilder.java", "BodyUseAPI": [], "Fixed commit": "9b2e2c970c0b010234f66d41b009922810be76ba", "Url": "https://api.github.com/repos/flyway/flyway", "Date": "2013-05-24T17:43:15Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, com.sanaldiyar.projects.nanohttpd.nanohttpd.NanoHandler>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (handler instanceof com.sanaldiyar.projects.nanohttpd.nanohttpd.NanoSession) { if ((nanoSessionHandler) != null) { nanoSessionHandler.parseResponse(nanoSessionManager, response); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1010/buggy-version/src.main.java.com.sanaldiyar.projects.nanohttpd.nanohttpd.NanoHandlerChain.java", "BodyUseAPI": [], "Fixed commit": "ec359e538b7fef04d931e6be460c6da348b3e32b", "Url": "https://api.github.com/repos/kazimsarikaya/nanohttpd", "Date": "2014-01-31T15:02:13Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(extractDatesAndTaskNameFromCommand(2, inputSplit, commandInput, true))) { commandInput.setName(joinStringArray(inputSplit, 2, inputSplit.length).trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6791/buggy-version/src.main.java.sg.edu.nus.cs2103t.omnitask.parser.ParserMainImpl.java", "BodyUseAPI": ["sg.edu.nus.cs2103t.omnitask.parser.ParserMainImpl.joinStringArray(java.lang.String[],int,int)", "java.lang.String.trim()", "sg.edu.nus.cs2103t.omnitask.model.CommandInput.setName(java.lang.String)"], "Fixed commit": "3d8123cab25e789d8818bb3a66465a06919927d3", "Url": "https://api.github.com/repos/cs2103jan2015-t09-1j/main", "Date": "2015-04-05T15:52:23Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(enabled)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2131/buggy-version/services-hz.src.main.java.ru.taskurotta.service.hz.gc.HzGarbageCollectorService.java", "BodyUseAPI": [], "Fixed commit": "12e9569f14de4e414abf55bf8571290c015dd993", "Url": "https://api.github.com/repos/taskurotta/taskurotta", "Date": "2014-01-17T09:28:46Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.instances.isEmpty()) { this.forceLoadCloudStorageInstances(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2303/buggy-version/src.main.java.org.wilson.world.manager.CloudStorageManager.java", "BodyUseAPI": [], "Fixed commit": "7c6b0beb0a8b383d0d506420993b94dc9b1a3fa9", "Url": "https://api.github.com/repos/liumiaowilson/world", "Date": "2016-12-12T02:23:41Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInEditMode())) { sensorMng = ((android.hardware.SensorManager) (getContext().getSystemService(Context.SENSOR_SERVICE))); if ((sensorMng.getDefaultSensor(Sensor.TYPE_GYROSCOPE)) != null) { gyroscope = sensorMng.getDefaultSensor(Sensor.TYPE_GYROSCOPE); sensorMng.registerListener(this, gyroscope, SensorManager.SENSOR_DELAY_FASTEST); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3164/buggy-version/library.src.main.java.com.oicmap.game.multiparalaxview.ParallaxView.java", "BodyUseAPI": [], "Fixed commit": "43956dff34d2f3f492c8152760a45dc25a0db91d", "Url": "https://api.github.com/repos/khacpv/multiple-parallax-view", "Date": "2016-09-24T14:53:21Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tasks.size()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8541/buggy-version/app.src.main.java.ve.com.abicelis.remindy.util.TaskHeaderUtil.java", "BodyUseAPI": [], "Fixed commit": "982f1d476327da15840cc821616308324377851a", "Url": "https://api.github.com/repos/abicelis/Remindy", "Date": "2017-04-01T03:37:13Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.silverpeas.attachment.web.SimpleDocumentResource.getSimpleDocument(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(com.silverpeas.util.StringUtil.isDefined(document.getEditedBy()))) { document.edit(getUserDetail().getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3910/buggy-version/web-core.src.main.java.org.silverpeas.attachment.web.SimpleDocumentResource.java", "BodyUseAPI": ["org.silverpeas.attachment.model.SimpleDocument.edit(getUserDetail().getId())"], "Fixed commit": "5248569f39f2a2fa138290f0fb937bf1857d0536", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2014-02-28T22:36:14Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraftforge.fml.common.FMLCommonHandler.instance().getEffectiveSide()) == (net.minecraftforge.fml.relauncher.Side.SERVER)) { universalcoins.util.UniversalAccounts.getInstance().creditAccount(accountNumber, (depositAmount * coinValue)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6792/buggy-version/java.universalcoins.tileentity.TileSafe.java", "BodyUseAPI": [], "Fixed commit": "c1f2eba32a045e8e325ae735c412088873fd6852", "Url": "https://api.github.com/repos/Faxn/UniversalCoins", "Date": "2016-05-27T19:01:37Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.terasology.config.InputConfigUtils.getBindByUri(org.terasology.engine.SimpleUri)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (binding != null) { canvas.drawText(binding.getDisplayName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3272/buggy-version/modules.Core.src.main.java.org.terasology.rendering.nui.layers.ingame.inventory.InventoryCell.java", "BodyUseAPI": ["org.terasology.input.Input.getDisplayName()", "org.terasology.rendering.nui.Canvas.drawText(binding.getDisplayName())"], "Fixed commit": "6473dd6c337ac22c2ee47ee392ad1495c1c70b50", "Url": "https://api.github.com/repos/Bil481/Terasology", "Date": "2016-12-13T11:23:32Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.terasology.config.BindsConfig.getBinds(org.terasology.engine.SimpleUri)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (binds.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3272/buggy-version/engine.src.main.java.org.terasology.config.InputConfigUtils.java", "BodyUseAPI": [], "Fixed commit": "6473dd6c337ac22c2ee47ee392ad1495c1c70b50", "Url": "https://api.github.com/repos/Bil481/Terasology", "Date": "2016-12-13T11:23:32Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.pixka.device.r.WatertimingRepo.findBytmp(java.lang.Long,java.math.BigDecimal,org.springframework.data.domain.Pageable)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (list.isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5682/buggy-version/device.src.main.java.me.pixka.device.s.WatertimingService.java", "BodyUseAPI": [], "Fixed commit": "6283e8219f3d08b70bd5aace1f4e9d64b26ec22c", "Url": "https://api.github.com/repos/kykub/device", "Date": "2017-01-15T08:03:00Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ftpClient) != null) { ftpClient.disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4351/buggy-version/src.com.young.ftpsync.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "cdd155c08fd6844331ef58da76da866c4d30b2c8", "Url": "https://api.github.com/repos/young-mu/ftpSync", "Date": "2014-12-09T03:18:26Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"Content-Disposition\".equalsIgnoreCase(headerToMetadata.getKey())) { existingHeaderValue = new java.lang.String(existingHeaderValue.getBytes(java.nio.charset.StandardCharsets.ISO_8859_1), java.nio.charset.StandardCharsets.UTF_8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3907/buggy-version/src.main.java.bithazard.adaptor.augement.HttpHeaderHelper.java", "BodyUseAPI": [], "Fixed commit": "7c0d173c25622bdd6c4d498cfeb624e6cea98cf7", "Url": "https://api.github.com/repos/dweidenfeld/augment-proxy", "Date": "2016-12-12T12:42:40Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.xml.namespace.NamespaceContext.getNamespaceURI(typeElement.getPrefix())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (typeElementNamespace == null) { throw eu.delving.x3ml.X3MLEngine.exception(((\"The namespace with prefix \\\"\" + (typeElement.getPrefix())) + \"\\\" has not been declared\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4163/buggy-version/src.main.java.eu.delving.x3ml.engine.ModelOutput.java", "BodyUseAPI": [], "Fixed commit": "fe7eb29d4939d8b5cad67c4b7e2a17e2a1e3a1d9", "Url": "https://api.github.com/repos/isl/x3ml", "Date": "2015-12-01T12:47:06Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.xml.namespace.NamespaceContext.getNamespaceURI(typeElement.getPrefix())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (typeElementNamespace == null) { throw eu.delving.x3ml.X3MLEngine.exception(((\"The namespace with prefix \\\"\" + (typeElement.getPrefix())) + \"\\\" has not been declared\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4163/buggy-version/src.main.java.eu.delving.x3ml.engine.ModelOutput.java", "BodyUseAPI": [], "Fixed commit": "fe7eb29d4939d8b5cad67c4b7e2a17e2a1e3a1d9", "Url": "https://api.github.com/repos/isl/x3ml", "Date": "2015-12-01T12:47:06Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.xml.namespace.NamespaceContext.getNamespaceURI(relationship.getPrefix())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (propertyNamespace == null) { throw eu.delving.x3ml.X3MLEngine.exception(((\"The namespace with prefix \\\"\" + (relationship.getPrefix())) + \"\\\" has not been declared\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4163/buggy-version/src.main.java.eu.delving.x3ml.engine.ModelOutput.java", "BodyUseAPI": [], "Fixed commit": "fe7eb29d4939d8b5cad67c4b7e2a17e2a1e3a1d9", "Url": "https://api.github.com/repos/isl/x3ml", "Date": "2015-12-01T12:47:06Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getGridSessionCredPanel().validGridSessionCredentialExists()) { javax.swing.SwingUtilities.invokeLater(new java.lang.Thread() { @java.lang.Override public void run() { tabbedPane.setSelectedIndex(0); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6166/buggy-version/src.main.java.grith.gridsession.view.CredCreationPanel.java", "BodyUseAPI": [], "Fixed commit": "9351ab5af7e3c9fb287641708db0de7326c69dc4", "Url": "https://api.github.com/repos/grith/grid-session", "Date": "2012-07-16T01:59:33Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInteger) { if (display.equals(\"0\")) textViewDisplay.setText(\"(-\"); else textViewDisplay.setText((\"(-\" + display)); }else if (java.lang.Character.isDigit(display.charAt(((display.length()) - isDigit)))) { do { isDigit++; } while (java.lang.Character.isDigit(display.charAt(((display.length()) - isDigit))) ); display = new java.lang.StringBuilder(display).insert(((display.length()) - isDigit), \"(\").toString(); display = new java.lang.StringBuilder(display).insert(((display.length()) - isDigit), \"-\").toString(); textViewDisplay.setText(display); }else { textViewDisplay.setText((display + \"(-\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6996/buggy-version/app.src.main.java.com.bluetheta.calculator.BasicCalculator.java", "BodyUseAPI": [], "Fixed commit": "34cb1046dd7b4c94055c29f38e4ee217dc0b9e61", "Url": "https://api.github.com/repos/RougeAssassin/Calculator", "Date": "2015-08-20T18:55:58Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ack.getOffset()) != null) { m_offset.set(ack.getOffset()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6185/buggy-version/hermes-consumer.src.main.java.com.ctrip.hermes.consumer.engine.bootstrap.strategy.StrictlyOrderedConsumingStrategyConsumerTask.java", "BodyUseAPI": ["com.ctrip.hermes.core.transport.command.v2.PullMessageResultCommandV2.getOffset()", "java.util.concurrent.atomic.AtomicReference<com.ctrip.hermes.core.bo.Offset>.set(ack.getOffset())"], "Fixed commit": "b632216dc2e01e3e033e030ef2727f6bd4a055f9", "Url": "https://api.github.com/repos/yiming187/hermes", "Date": "2015-09-07T08:49:52Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (delta > 0) { java.lang.Thread.sleep(delta); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1116/buggy-version/src.towerdefense4x.TowerDefense4X.java", "BodyUseAPI": ["java.lang.Thread.sleep(long)"], "Fixed commit": "a73077e9cf3abcc0e796e0832e862da7e2a765c5", "Url": "https://api.github.com/repos/nhouser9/TowerDefense4X", "Date": "2016-12-20T23:49:31Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["productStore.get().findBySlug(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((product.getPrice()) == null) { return javax.ws.rs.core.Response.status(Response.Status.BAD_REQUEST).entity(\"This product can't be added to cart\").build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3201/buggy-version/shop.cart.src.main.java.org.mayocat.shop.cart.front.CartResource.java", "BodyUseAPI": [], "Fixed commit": "d6bb5ec4b9d8e7c05f75d480459b18a40977b6a7", "Url": "https://api.github.com/repos/mayocat/mayocat-shop", "Date": "2014-02-13T17:40:45Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (score <= 0) { setColor = com.example.android.magicgamecounter.MainActivity.RED; if (shouldVibrate) { v.vibrate(250); } }else { setColor = com.example.android.magicgamecounter.MainActivity.BLACK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5324/buggy-version/app.src.main.java.com.example.android.magicgamecounter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e93b0539b07bb613166f2eed4bb78916d34802e8", "Url": "https://api.github.com/repos/the-hobbes/magic-life-counter", "Date": "2015-09-12T19:28:35Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldVibrate) { v.vibrate(250); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5324/buggy-version/app.src.main.java.com.example.android.magicgamecounter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e93b0539b07bb613166f2eed4bb78916d34802e8", "Url": "https://api.github.com/repos/the-hobbes/magic-life-counter", "Date": "2015-09-12T19:28:35Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(TableColumns.TABLE_NAME,java.lang.String[],((TableColumns._ID) + \"=?\"),java.lang.String[],<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (cursor.moveToNext()) { return cursor.getString(cursor.getColumnIndexOrThrow(TableColumns.NAME)); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8133/buggy-version/smartpen.src.main.java.com.cleverm.smartpen.database.DatabaseHelper.java", "BodyUseAPI": ["android.database.Cursor.getString(cursor.getColumnIndexOrThrow(TableColumns.NAME))", "android.database.Cursor.getColumnIndexOrThrow(TableColumns.NAME)"], "Fixed commit": "3f8d64389464e5935c1cf76b53a757df94c939c2", "Url": "https://api.github.com/repos/chinaandone/slsuperapp", "Date": "2017-07-26T01:43:45Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (iconFiles != null) { return iconFiles.get(0).toString(); }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/560/buggy-version/server.src.main.java.org.uiautomation.ios.server.application.APPIOSApplication.java", "BodyUseAPI": ["java.util.ArrayList.get(int)", "java.lang.Object.toString()"], "Fixed commit": "5bc8f8ee9663a49b7e7bbe919e3befbe9ef0a8d5", "Url": "https://api.github.com/repos/ios-driver/ios-driver", "Date": "2013-12-12T13:56:39Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.intellij.openapi.util.SystemInfo.isLinux) { java.awt.Font font = com.intellij.ide.ui.laf.darcula.DarculaLaf.findFont(\"DejaVu Sans\"); if (font != null) { for (java.lang.Object key : defaults.keySet()) { if ((key instanceof java.lang.String) && (((java.lang.String) (key)).endsWith(\".font\"))) { defaults.put(key, new javax.swing.plaf.FontUIResource(font.deriveFont(13.0F))); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7978/buggy-version/platform.platform-impl.src.com.intellij.ide.ui.laf.darcula.DarculaLaf.java", "BodyUseAPI": [], "Fixed commit": "9a91e0b43319b1b68026ae6f0f95aa4f7d8b2ff0", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2013-06-27T09:48:08Z"},
{"Line": "=>613", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((warpPlace.getKey().length()) < maxLength) maxLength = warpPlace.getKey().length();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2910/buggy-version/Teleport.src.iggy.Transport.Transport.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, org.bukkit.Location>.getKey()", "warpPlace.getKey().length()"], "Fixed commit": "0c6d9e793301cee66bf78ead911ef19220de9633", "Url": "https://api.github.com/repos/AsherGlick/Minecraft-Bukkit-Plugins", "Date": "2012-08-07T19:44:10Z"},
{"Line": "=>1834", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mobicents.slee.container.component.common.ProfileSpecRefDescriptor.getProfileSpecAlias()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (alias == null) { alias = ref.getComponentID().toString(); org.mobicents.slee.container.component.validator.SbbComponentValidator.logger.debug((\"Temporary Alias is: \" + alias)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5795/buggy-version/container.components.components.src.main.java.org.mobicents.slee.container.component.validator.SbbComponentValidator.java", "BodyUseAPI": [], "Fixed commit": "e74e910bbd6a5214b40fed6330a4e3aecaafb9a8", "Url": "https://api.github.com/repos/RestComm/jain-slee", "Date": "2016-04-05T12:12:36Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((countDownTimer) != null) countDownTimer.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/936/buggy-version/src.it.wm.perdue.coupon.VetrinaCoupon.java", "BodyUseAPI": [], "Fixed commit": "3abaab1702393cfc8ac2a30c429344ac559c127e", "Url": "https://api.github.com/repos/eltazar/x2Android", "Date": "2013-03-21T16:30:49Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.wirlie.allbanks.Banks.BankType.getByString(Util.ChatFormatUtil.removeChatFormat(s.getLine(1)))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (btype != null) { me.wirlie.allbanks.Banks.removeSign(s.getLocation()); me.wirlie.allbanks.Translation.getAndSendMessage(e.getPlayer(), StringsID.BANK_REMOVED, true); me.wirlie.allbanks.data.BankSession.closeSession(e.getPlayer()); e.setCancelled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6469/buggy-version/AllBanks.src.main.java.me.wirlie.allbanks.listeners.SignBreakListener.java", "BodyUseAPI": [], "Fixed commit": "55614ab435692eb474b0589217f813719c33e32c", "Url": "https://api.github.com/repos/Wirlie/AllBanks-2", "Date": "2016-03-20T06:22:41Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resourceUrl == null) && ((parent) != null)) { resourceUrl = parent.getResource(resourcePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1549/buggy-version/support.container.src.main.java.org.atomnuke.container.packaging.classloader.IdentityClassLoader.java", "BodyUseAPI": [], "Fixed commit": "ad37f0f6c35ff235ec7f8dcbd511dc675b9527fe", "Url": "https://api.github.com/repos/zinic/atom-nuke", "Date": "2012-12-13T17:38:55Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.lwjgl.input.Mouse.isGrabbed()) org.lwjgl.input.Mouse.setGrabbed(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4651/buggy-version/src.dev.game.project.menus.PauseMenu.java", "BodyUseAPI": [], "Fixed commit": "1ba3f2f20b231f609e6bce44a212dc99e628ac46", "Url": "https://api.github.com/repos/gameDevPrep/PaddleGame", "Date": "2013-11-01T13:50:02Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["backtype.storm.generated.TopologySummary.get_name()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (actual_job_name != null) client.killTopology(actual_job_name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6885/buggy-version/aleph2_data_import_manager.src.com.ikanow.aleph2.data_import_manager.stream_enrichment.services.RemoteStormController.java", "BodyUseAPI": ["backtype.storm.generated.Nimbus.Client.killTopology(java.lang.String)"], "Fixed commit": "1fb9262c6f95f6a72aae3724040c26323c1bd354", "Url": "https://api.github.com/repos/IKANOW/Aleph2", "Date": "2015-07-10T21:03:59Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Node.getAttributes()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(tableMap.containsKey(attrs.item(i).getNodeName()))) { tableMap.put(attrs.item(i).getNodeName(), attrs.item(i).getNodeValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8910/buggy-version/src.main.java.com.romraider.logger.ecu.definition.xml.EcuTableDefinitionHandler.java", "BodyUseAPI": ["org.w3c.dom.NamedNodeMap.item(int)", "org.w3c.dom.Node.getNodeValue()", "org.w3c.dom.NamedNodeMap.item(int)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "org.w3c.dom.Node.getNodeName()"], "Fixed commit": "2d118351f9bd7726437e46e77e20ed5c99acda79", "Url": "https://api.github.com/repos/dschultzca/RomRaider", "Date": "2017-01-20T22:42:05Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (config.getBoolean(\"enableExperienceEnchant\", false)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8715/buggy-version/src.com.nomic.AEnchants.Enchants.Experience.java", "BodyUseAPI": [], "Fixed commit": "176daeb92daec7af9945d42f26626d7149bcf016", "Url": "https://api.github.com/repos/SourcePrivate302966/AEnchants", "Date": "2016-03-15T03:22:06Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["inventories.get(inventoryIndex).getRight()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((slotIndex) < offset) { slotIndex = offset; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6453/buggy-version/src.main.java.mcjty.rftools.craftinggrid.InventoriesItemSource.java", "BodyUseAPI": [], "Fixed commit": "5952b32126a26abeb5146896699697bf1209ae03", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2016-08-25T06:24:41Z"},
{"Line": "=>1836", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isWellSampleDataSelection(selected)) { return; }else if (selected instanceof omero.gateway.model.DataObject) { org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor visitor = new org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor(parent, ((omero.gateway.model.DataObject) (selected))); accept(visitor); foundNode = visitor.getSelectedNode(); if (foundNode != null) { if (multiSelection) model.addFoundNode(foundNode); else model.setSelectedDisplay(foundNode, true); view.setFoundNode(model.getSelectedDisplays()); }else view.setFoundNode(null); }else if (selected instanceof org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay) { foundNode = ((org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay) (selected)); if (multiSelection) model.addFoundNode(foundNode); else model.setSelectedDisplay(foundNode, true); view.setFoundNode(model.getSelectedDisplays()); }else if (selected instanceof java.util.List) { org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor visitor = new org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor(parent, ((java.util.List<omero.gateway.model.DataObject>) (selected))); accept(visitor); java.util.List<org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay> nodes = visitor.getSelectedNodes(); if ((nodes.size()) == 0) { view.setFoundNode(null); }else if ((nodes.size()) == 1) { model.setSelectedDisplay(nodes.get(0), true); view.setFoundNode(model.getSelectedDisplays()); }else { model.setSelectedDisplay(null, true); java.util.Iterator<org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay> i = nodes.iterator(); while (i.hasNext()) model.addFoundNode(i.next()); view.setFoundNode(model.getSelectedDisplays()); } }else if (selected instanceof java.lang.String) { model.setSelectedDisplay(null, true); view.setFoundNode(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7414/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.agents.treeviewer.browser.BrowserComponent.java", "BodyUseAPI": [], "Fixed commit": "20a0cec732e37f46a3fcf690d3686ba0b6435139", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2016-05-19T02:33:10Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.totalBoards()) % 1000000) == 0) { debug((\"-----------------------------------results: \" + (this.totalBoards()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3758/buggy-version/src.main.java.com.blah.app.Solver.java", "BodyUseAPI": [], "Fixed commit": "504c9c48ecd47fbe5bdddd4a6a1f6889d4659588", "Url": "https://api.github.com/repos/m4yers/tc-chess-challenge", "Date": "2016-05-01T18:10:47Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(java.awt.GraphicsEnvironment.isHeadless())) && (settings.Settings.getInstance().isGuiEnabled())) { if (!(controller.Controller.getInstance().isWalletUnlocked())) { java.lang.String password = gui.PasswordPane.showUnlockWalletDialog(); if ((!(password.equals(\"\"))) && (!(controller.Controller.getInstance().unlockWallet(password)))) { javax.swing.JOptionPane.showMessageDialog(null, \"Invalid password\", \"Unlock Wallet\", javax.swing.JOptionPane.ERROR_MESSAGE); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7992/buggy-version/Qora.src.utils.APIUtils.java", "BodyUseAPI": [], "Fixed commit": "3c2e4f78382f55d3f1aa4533e96482a9f2ea17fc", "Url": "https://api.github.com/repos/Qoracoin/Qora", "Date": "2016-02-16T02:09:02Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(metadata.getCode().contains(\"_default_\"))) { elementToAdd.addAll(java.util.Arrays.asList(new org.jdom2.Element(((((((com.constellio.app.modules.rm.services.reports.ReportXMLGeneratorV2.REFERENCE_PREFIX) + (getTypeSingular())) + \"_\") + (metadata.getLocalCode())) + (com.constellio.app.modules.rm.services.reports.ReportXMLGeneratorV2.PARENT_SUFFIX)) + \"_code\")).setText(parentRecord.<java.lang.String>get(Schemas.CODE)), new org.jdom2.Element(((((((com.constellio.app.modules.rm.services.reports.ReportXMLGeneratorV2.REFERENCE_PREFIX) + (getTypeSingular())) + \"_\") + (metadata.getLocalCode())) + (com.constellio.app.modules.rm.services.reports.ReportXMLGeneratorV2.PARENT_SUFFIX)) + \"_title\")).setText(parentRecord.<java.lang.String>get(Schemas.TITLE)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7650/buggy-version/app.src.com.constellio.app.modules.rm.services.reports.ReportXMLGeneratorV2.java", "BodyUseAPI": ["com.constellio.app.modules.rm.services.reports.Metadata.getLocalCode()", "com.constellio.app.modules.rm.services.reports.Metadata.getLocalCode()", "java.util.List<org.jdom2.Element>.addAll(java.util.List)", "java.util.Arrays.asList(new org.jdom2.Element(((((((com.constellio.app.modules.rm.services.reports.ReportXMLGeneratorV2.REFERENCE_PREFIX) + (getTypeSingular())) + \"_\") + (metadata.getLocalCode())) + (com.constellio.app.modules.rm.services.reports.ReportXMLGeneratorV2.PARENT_SUFFIX)) + \"_code\")).setText(parentRecord.<java.lang.String>get(Schemas.CODE)),new org.jdom2.Element(((((((com.constellio.app.modules.rm.services.reports.ReportXMLGeneratorV2.REFERENCE_PREFIX) + (getTypeSingular())) + \"_\") + (metadata.getLocalCode())) + (com.constellio.app.modules.rm.services.reports.ReportXMLGeneratorV2.PARENT_SUFFIX)) + \"_title\")).setText(parentRecord.<java.lang.String>get(Schemas.TITLE)))", "org.jdom2.Element.setText(parentRecord.<java.lang.String>get(Schemas.TITLE))", "org.jdom2.Element.setText(parentRecord.<java.lang.String>get(Schemas.CODE))"], "Fixed commit": "e2d75fda72dad589554f2a9d98b4f0b9c33d291f", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2017-11-10T20:53:53Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(metadata.getCode().contains(\"_default_\"))) { elementToAdd.addAll(java.util.Arrays.asList(new org.jdom2.Element((((((com.constellio.app.modules.rm.services.reports.ReportXMLGeneratorV2.REFERENCE_PREFIX) + (getTypeSingular())) + \"_\") + (metadata.getLocalCode())) + \"_code\")).setText(recordReferenced.<java.lang.String>get(Schemas.CODE)), new org.jdom2.Element((((((com.constellio.app.modules.rm.services.reports.ReportXMLGeneratorV2.REFERENCE_PREFIX) + (getTypeSingular())) + \"_\") + (metadata.getLocalCode())) + \"_title\")).setText(recordReferenced.<java.lang.String>get(Schemas.TITLE)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7650/buggy-version/app.src.com.constellio.app.modules.rm.services.reports.ReportXMLGeneratorV2.java", "BodyUseAPI": ["org.jdom2.Element.setText(recordReferenced.<java.lang.String>get(Schemas.CODE))", "com.constellio.app.modules.rm.services.reports.Metadata.getLocalCode()", "org.jdom2.Element.setText(recordReferenced.<java.lang.String>get(Schemas.TITLE))", "java.util.Arrays.asList(new org.jdom2.Element((((((com.constellio.app.modules.rm.services.reports.ReportXMLGeneratorV2.REFERENCE_PREFIX) + (getTypeSingular())) + \"_\") + (metadata.getLocalCode())) + \"_code\")).setText(recordReferenced.<java.lang.String>get(Schemas.CODE)),new org.jdom2.Element((((((com.constellio.app.modules.rm.services.reports.ReportXMLGeneratorV2.REFERENCE_PREFIX) + (getTypeSingular())) + \"_\") + (metadata.getLocalCode())) + \"_title\")).setText(recordReferenced.<java.lang.String>get(Schemas.TITLE)))", "com.constellio.app.modules.rm.services.reports.Metadata.getLocalCode()", "java.util.List<org.jdom2.Element>.addAll(java.util.List)"], "Fixed commit": "e2d75fda72dad589554f2a9d98b4f0b9c33d291f", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2017-11-10T20:53:53Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((actionIds.size()) > (java.lang.Long.SIZE)) || (((actionIds.size()) == (java.lang.Long.SIZE)) && (!(actionIds.contains(ActionKeys.VIEW))))) { throw new com.liferay.portal.kernel.exception.SystemException((\"There are too many actions for resource \" + name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8096/buggy-version/portal-impl.src.com.liferay.portal.service.impl.ResourceActionLocalServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "0c0798d344bcc279c3d450da63cb21f722dcb822", "Url": "https://api.github.com/repos/jpince/liferay-portal", "Date": "2016-06-21T00:13:21Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(base.endsWith(\"?\"))) { sb.append(\"?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6821/buggy-version/src.main.java.de.bayern.gdi.processor.DownloadStepConverter.java", "BodyUseAPI": [], "Fixed commit": "f86b6797e52ac8beb8058f1dba61e3fb1f9a0b86", "Url": "https://api.github.com/repos/gdi-by/downloadclient", "Date": "2017-06-01T11:24:19Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(execution.isDebugging())) { rdfDataUnitFactory.cleanPipeline(execution.getContext().generatePipelineId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2404/buggy-version/backend.src.main.java.cz.cuni.mff.xrg.odcs.backend.execution.pipeline.impl.CleanUp.java", "BodyUseAPI": ["cz.cuni.mff.xrg.odcs.commons.app.dataunit.rdf.RDFDataUnitFactory.cleanPipeline(execution.getContext().generatePipelineId())", "execution.getContext().generatePipelineId()", "cz.cuni.mff.xrg.odcs.commons.app.pipeline.PipelineExecution.getContext()"], "Fixed commit": "9215bdd28e563f5de7795c8e782058871527b852", "Url": "https://api.github.com/repos/UnifiedViews/Core", "Date": "2014-06-04T10:45:45Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node.contains(\" - \")) { spID = node.split(\" - \")[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3126/buggy-version/NDBugsSource.src.ND.desktop.impl.PrintPaths.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "c9cc589b7d42b23c58e2a533f06d88ba4dbf2c7b", "Url": "https://api.github.com/repos/SandraCastilloPriego/antnd", "Date": "2015-10-21T05:20:15Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasObservers())) { super.setHasStableIds(hasStableIds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1686/buggy-version/vlayout.src.main.java.com.alibaba.android.vlayout.DelegateAdapter.java", "BodyUseAPI": [], "Fixed commit": "484834648867a9b9a95d76ae19543264bccb6d63", "Url": "https://api.github.com/repos/alibaba/vlayout", "Date": "2017-03-15T08:51:20Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFinishing())) { filterDialog = ece493.imagemanipulation.Utilities.DialogHelper.getFilterDialog(this); filterDialog.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2176/buggy-version/app.src.main.java.ece493.imagemanipulation.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "41a58bcf65d4c59f4bab98cb9af7dc058143b9a6", "Url": "https://api.github.com/repos/ryant26/ECE493AndroidImage", "Date": "2016-01-12T03:53:41Z"},
{"Line": "=>859", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["session.createQuery(\"from InvoiceDetail inv WHERE inv.billableDesc.id = :billableDescId and inv.invoice.MFinanceItemstatus = '1' \").setParameter(\"billableDescId\", billableDescId).list()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (list.isEmpty()) { return null; }else { for (int i = 0; i < (list.size()); i++) { java.util.List<com.smi.travel.datalayer.entity.ReceiptDetail> listrec = session.createQuery(\"from ReceiptDetail d WHERE d.invoiceDetail.id = :invDetailId and d.receipt.MFinanceItemstatus = '1'\").setParameter(\"invDetailId\", list.get(i).getId()).list(); if (!(listrec.isEmpty())) { listInvDetail.add(list.get(i)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8902/buggy-version/src.java.com.smi.travel.datalayer.dao.impl.InvoiceImpl.java", "BodyUseAPI": ["session.createQuery(\"from ReceiptDetail d WHERE d.invoiceDetail.id = :invDetailId and d.receipt.MFinanceItemstatus = '1'\").setParameter(\"invDetailId\", list.get(i).getId()).list()", "java.util.List<com.smi.travel.datalayer.entity.InvoiceDetail>.get(int)", "session.createQuery(\"from ReceiptDetail d WHERE d.invoiceDetail.id = :invDetailId and d.receipt.MFinanceItemstatus = '1'\").setParameter(java.lang.String,list.get(i).getId())", "java.util.List<com.smi.travel.datalayer.entity.InvoiceDetail>.get(int)", "java.util.List<com.smi.travel.datalayer.entity.InvoiceDetail>.size()", "list.get(i).getId()", "java.util.List<com.smi.travel.datalayer.entity.InvoiceDetail>.add(list.get(i))"], "Fixed commit": "42f5fb6bf9baa8607b3b2ef0c00373ed4f81d66f", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2016-02-19T04:37:28Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (capacity < 1) { capacity = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4261/buggy-version/src.main.java.universalelectricity.core.asm.template.tile.StaticTileForwarder.java", "BodyUseAPI": [], "Fixed commit": "c92dc9d4fd632afcb1630fcc29da710afd04def3", "Url": "https://api.github.com/repos/Universal-Electricity/Universal-Electricity", "Date": "2014-06-06T14:46:02Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (chairLoc != null) ar.getLocation().setYaw(chairLoc.getYaw());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1760/buggy-version/src.main.java.com.sk89q.craftbook.mechanics.Chair.java", "BodyUseAPI": ["org.bukkit.Location.getYaw()", "ar.getLocation().setYaw(chairLoc.getYaw())"], "Fixed commit": "9e7bd2f03545e36fca3f847c36d6415052b1107b", "Url": "https://api.github.com/repos/EngineHub/CraftBook", "Date": "2016-08-24T03:21:26Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (chairLoc != null) player.teleport(chairLoc);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1760/buggy-version/src.main.java.com.sk89q.craftbook.mechanics.Chair.java", "BodyUseAPI": ["org.bukkit.entity.Player.teleport(org.bukkit.Location)"], "Fixed commit": "9e7bd2f03545e36fca3f847c36d6415052b1107b", "Url": "https://api.github.com/repos/EngineHub/CraftBook", "Date": "2016-08-24T03:21:26Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloud.network.guru.NiciraNvpGuestNetworkGuru.findById(plan.getDataCenterId())", "com.cloud.network.dao.PhysicalNetworkDao.findById(plan.getPhysicalNetworkId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(canHandle(offering, dc.getNetworkType(), physnet))) { com.cloud.network.guru.NiciraNvpGuestNetworkGuru.s_logger.debug(\"Refusing to design this network\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3410/buggy-version/plugins.network-elements.nicira-nvp.src.com.cloud.network.guru.NiciraNvpGuestNetworkGuru.java", "BodyUseAPI": [], "Fixed commit": "00847482cc5cd4c9eda7c3d73b2a30aff4f44a5a", "Url": "https://api.github.com/repos/AsherBond/incubator-cloudstack", "Date": "2013-01-03T10:49:17Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (best == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5701/buggy-version/src.main.java.ca.mcgill.cs.crown.procedure.AdverbExtractor.java", "BodyUseAPI": [], "Fixed commit": "e560802591875e63996f7ea2f37de50a49134abe", "Url": "https://api.github.com/repos/davidjurgens/crown", "Date": "2015-06-01T16:00:12Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((initial > numButtons) || (initial < 1)) { throw new java.lang.RuntimeException(\"The initial button number is invalid\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1995/buggy-version/src.radiobutton.RadioButtonGroup.java", "BodyUseAPI": [], "Fixed commit": "028b2064974308e89b3a3c3277f6b414e0a632fc", "Url": "https://api.github.com/repos/RosmaryFC/final", "Date": "2015-12-11T03:01:27Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resultCode) == (ResultCodeE.CORRECT)) { capacity++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/906/buggy-version/src.main.java.com.sibilantsolutions.grison.driver.foscam.domain.VerifyRespText.java", "BodyUseAPI": [], "Fixed commit": "98672da7747ca8784255cbf80bae7f0b8df641e0", "Url": "https://api.github.com/repos/jtgeiger/grison", "Date": "2016-07-17T03:54:13Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.ByteBuffer.wrap(byte[],int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((bb.position()) < length) { bb.position(((bb.position()) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/906/buggy-version/src.main.java.com.sibilantsolutions.grison.driver.foscam.domain.VerifyRespText.java", "BodyUseAPI": ["java.nio.ByteBuffer.position(int)", "java.nio.ByteBuffer.position()"], "Fixed commit": "98672da7747ca8784255cbf80bae7f0b8df641e0", "Url": "https://api.github.com/repos/jtgeiger/grison", "Date": "2016-07-17T03:54:13Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resultCode) == (ResultCodeE.CORRECT)) { bb.put(((byte) (0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/906/buggy-version/src.main.java.com.sibilantsolutions.grison.driver.foscam.domain.VerifyRespText.java", "BodyUseAPI": [], "Fixed commit": "98672da7747ca8784255cbf80bae7f0b8df641e0", "Url": "https://api.github.com/repos/jtgeiger/grison", "Date": "2016-07-17T03:54:13Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wideRowSupport) { java.lang.String fromClause = buildFromClause(joinTree); java.lang.String whereClause = buildWhereClause(queryExpr.getFilterExpr()); countSql.append(\"select count(distinct \").append(joinTree.getForm().getPrimaryKey()).append(\")\").append(\" from \").append(fromClause).append(\" where \").append(whereClause); }else { java.lang.String dataSql = getDataSql(queryExpr, joinTree); countSql.append(\"select count(*) from (\").append(dataSql).append(\")\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7187/buggy-version/software.DynamicExtentions.src.java.edu.common.dynamicextensions.query.QueryGenerator.java", "BodyUseAPI": [], "Fixed commit": "2c3e32d60f97ad8bc086676ccf9a750faad06cbf", "Url": "https://api.github.com/repos/NCIP/catissue-dynamic-extensions", "Date": "2013-09-24T05:46:42Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((problems.isEmpty()) && addQuickFixes) { for (org.eclipse.jface.text.source.Annotation curr : annotations) { if (curr instanceof org.eclipse.ui.texteditor.SimpleMarkerAnnotation) { com.redhat.ceylon.eclipse.code.quickfix.CeylonQuickFixController.collectMarkerProposals(((org.eclipse.ui.texteditor.SimpleMarkerAnnotation) (curr)), proposals); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5226/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.code.quickfix.CeylonQuickFixController.java", "BodyUseAPI": [], "Fixed commit": "fa8df35b18daf39b29371695cfcb8be95dea6da9", "Url": "https://api.github.com/repos/sjurba/ceylon-ide-eclipse", "Date": "2012-07-25T00:23:13Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (launchSauceConnectOnSlave) { return \"localhost\"; }else { return java.net.InetAddress.getLocalHost().getCanonicalHostName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4229/buggy-version/src.main.java.hudson.plugins.sauce_ondemand.SauceOnDemandBuildWrapper.java", "BodyUseAPI": [], "Fixed commit": "76ec4aa1a5561507c3b7ca9155cbef22a807e0ec", "Url": "https://api.github.com/repos/jenkinsci/sauce-ondemand-plugin", "Date": "2012-11-27T11:43:48Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((context.highlight()) != null) { for (org.elasticsearch.search.highlight.SearchContextHighlight.Field field : context.highlight().fields()) { field.forceSource(true); } doc.setSource(fetchedDoc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6059/buggy-version/src.main.java.org.elasticsearch.percolator.PercolatorService.java", "BodyUseAPI": ["org.elasticsearch.percolator.PercolateContext.highlight()", "context.highlight().fields()"], "Fixed commit": "1ffbfe9ccc26fab48755a41c96fbae5a94267f9d", "Url": "https://api.github.com/repos/elasticsearch/elasticsearch", "Date": "2014-02-13T00:28:56Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((appEventsLogger) != null) { appEventsLogger.logSdkEvent(com.facebook.AuthorizationClient.EVENT_NAME_LOGIN_METHOD_START, null, bundle); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3443/buggy-version/facebook.src.com.facebook.AuthorizationClient.java", "BodyUseAPI": [], "Fixed commit": "cb7554eda75643f332287576c7f3b18a63826876", "Url": "https://api.github.com/repos/mig33/facebookSDK", "Date": "2014-04-10T09:35:35Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (request != null) { if (((appEventsLogger) == null) || ((appEventsLogger.getApplicationId()) != (request.getApplicationId()))) { appEventsLogger = com.facebook.AppEventsLogger.newLogger(context, request.getApplicationId()); } if (getInProgress()) { continueAuth(); }else { authorize(request); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3443/buggy-version/facebook.src.com.facebook.AuthorizationClient.java", "BodyUseAPI": ["com.facebook.AuthorizationClient.authorize(com.facebook.AuthorizationClient.AuthorizationRequest)", "com.facebook.AuthorizationClient.AuthorizationRequest.getApplicationId()", "com.facebook.AppEventsLogger.newLogger(android.content.Context,java.lang.String)", "com.facebook.AuthorizationClient.AuthorizationRequest.getApplicationId()"], "Fixed commit": "cb7554eda75643f332287576c7f3b18a63826876", "Url": "https://api.github.com/repos/mig33/facebookSDK", "Date": "2014-04-10T09:35:35Z"},
{"Line": "=>523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((appEventsLogger) != null) { appEventsLogger.logSdkEvent(com.facebook.AuthorizationClient.EVENT_NAME_LOGIN_METHOD_COMPLETE, null, bundle); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3443/buggy-version/facebook.src.com.facebook.AuthorizationClient.java", "BodyUseAPI": [], "Fixed commit": "cb7554eda75643f332287576c7f3b18a63826876", "Url": "https://api.github.com/repos/mig33/facebookSDK", "Date": "2014-04-10T09:35:35Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((firstKey) != null) && ((ODefaultComparator.INSTANCE.compare(firstKey, toKey)) > 0)) { nextKey = null; }else { nextKey = firstKey; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/58/buggy-version/core.src.main.java.com.orientechnologies.orient.core.index.OIndexTxAwareMultiValue.java", "BodyUseAPI": [], "Fixed commit": "6255c91189dcbd4c5d689563178af879a18678b8", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-04-12T12:11:21Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (values != null) { uniqueValues.addAll(values); sort(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/386/buggy-version/plugins.net.refractions.udig.style.sld.src.net.refractions.udig.style.sld.editor.raster.UniqueValuesDialog.java", "BodyUseAPI": ["java.util.List<java.lang.Number>.addAll(java.util.Set<java.lang.Double>)"], "Fixed commit": "fcc7961efa01787ebaa36bb7ab9780bf5c647261", "Url": "https://api.github.com/repos/uDig/udig-platform", "Date": "2013-06-11T16:20:04Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((msg.length) == 0) { dText += \"\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1676/buggy-version/src.hueimmersive.Debug.java", "BodyUseAPI": [], "Fixed commit": "4f579fb2b981729d80f1bedd991a0f1583e4c05d", "Url": "https://api.github.com/repos/Blodjer/HueImmersive", "Date": "2014-11-19T17:19:15Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((header != null) && (header != \"\")) { lText += header.toUpperCase(); if ((msg.length) == 0) { lText += \"\\n\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1676/buggy-version/src.hueimmersive.Debug.java", "BodyUseAPI": ["java.lang.String.toUpperCase()"], "Fixed commit": "4f579fb2b981729d80f1bedd991a0f1583e4c05d", "Url": "https://api.github.com/repos/Blodjer/HueImmersive", "Date": "2014-11-19T17:19:15Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((exitString != \"\") && (exitString != null)) && (!(exitString.equalsIgnoreCase(\"exit\")))) && (exitString.equalsIgnoreCase(\"quit\"))) { validQuit = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6766/buggy-version/src.chat.model.Chatbot.java", "BodyUseAPI": [], "Fixed commit": "7953fc7a5fb39dea7de854abbe374f8a1b412194", "Url": "https://api.github.com/repos/willwpearson/ChatbotProject", "Date": "2017-11-01T19:31:22Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSwipeRefreshLayout.isRefreshing()) || (pdialog.isShowing())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6398/buggy-version/app.src.main.java.com.zfdang.zsmth_android.BoardTopicActivity.java", "BodyUseAPI": [], "Fixed commit": "ab14267e8739bf58276f8f7e4f2eed1362677465", "Url": "https://api.github.com/repos/zfdang/zSMTH-Android", "Date": "2016-04-22T23:39:04Z"},
{"Line": "=>840", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (magicLocationTool.isConnected()) magicLocationTool.disconnect();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1325/buggy-version/src.com.connorsapps.pathfinder.MainActivity.java", "BodyUseAPI": ["com.google.android.gms.location.LocationClient.disconnect()"], "Fixed commit": "6959fb5b90440642afb64ee4b9c2c60c17027384", "Url": "https://api.github.com/repos/cormierconnorc/TransitBuddy", "Date": "2014-01-20T03:14:03Z"},
{"Line": "=>829", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(magicLocationTool.isConnected())) magicLocationTool.connect();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1325/buggy-version/src.com.connorsapps.pathfinder.MainActivity.java", "BodyUseAPI": ["com.google.android.gms.location.LocationClient.connect()"], "Fixed commit": "6959fb5b90440642afb64ee4b9c2c60c17027384", "Url": "https://api.github.com/repos/cormierconnorc/TransitBuddy", "Date": "2014-01-20T03:14:03Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.magicLocationTool.isConnected())) this.magicLocationTool.connect();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1325/buggy-version/src.com.connorsapps.pathfinder.MainActivity.java", "BodyUseAPI": ["com.google.android.gms.location.LocationClient.connect()"], "Fixed commit": "6959fb5b90440642afb64ee4b9c2c60c17027384", "Url": "https://api.github.com/repos/cormierconnorc/TransitBuddy", "Date": "2014-01-20T03:14:03Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((source.getZone()) == (mage.constants.Zone.BATTLEFIELD)) { mageObject = source.getSourceObjectIfItStillExists(game); }else { mageObject = game.getObject(source.getSourceId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1607/buggy-version/Mage.src.mage.abilities.effects.common.continuous.SetPowerToughnessSourceEffect.java", "BodyUseAPI": ["mage.abilities.Ability.getSourceId()", "mage.game.Game.getObject(source.getSourceId())", "mage.abilities.Ability.getSourceObjectIfItStillExists(mage.game.Game)"], "Fixed commit": "203b65c584eabe6bdb53844ad41ccaf47e3fe594", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2015-04-12T21:31:05Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastStatusCode != 0) && (lastStatusCode != 200)) { return false; }else if ((response == null) || ((response.getContent()) == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7670/buggy-version/src.main.java.com.sixt.service.framework.rpc.HttpClientWrapper.java", "BodyUseAPI": [], "Fixed commit": "7a049922fadbdcf0cfc55f626947068e6934f209", "Url": "https://api.github.com/repos/rhoetsc/ja-micro", "Date": "2017-04-10T15:01:07Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ex.getMessage()) != null) { jsonResponse.setError(new com.sixt.service.framework.jetty.JsonPrimitive(ex.getMessage())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7670/buggy-version/src.main.java.com.sixt.service.framework.jetty.JsonHandler.java", "BodyUseAPI": ["java.lang.Exception.getMessage()", "com.sixt.service.framework.json.JsonRpcResponse.setError(com.sixt.service.framework.jetty.JsonPrimitive)"], "Fixed commit": "7a049922fadbdcf0cfc55f626947068e6934f209", "Url": "https://api.github.com/repos/rhoetsc/ja-micro", "Date": "2017-04-10T15:01:07Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (verifiyStratumNonZeroMass(selectedStratum, workOnTop)) { return placeAmount(type, difference, workOnTop); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/975/buggy-version/src.planet.surface.GeoCell.java", "BodyUseAPI": ["planet.surface.GeoCell.placeAmount(planet.surface.Layer.Layer,float,boolean)"], "Fixed commit": "530aba4218bc004a0a09dab2496956c9929f63a8", "Url": "https://api.github.com/repos/redferret/planet", "Date": "2016-05-02T17:03:47Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hu.mep.datamodells.Session.isAnyUserLoggedIn()) { if ((hu.mep.datamodells.Session.getActualUser().getUsersPlaces()) != null) { hu.mep.datamodells.Session.getActualCommunicationInterface().getNotWorkingPlacesList(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6399/buggy-version/MEP_APP.src.hu.mep.communication.GetNotWorkingPlacesListRunnable.java", "BodyUseAPI": [], "Fixed commit": "db557f26590f00148da27bd1efa3fcc8a924ba87", "Url": "https://api.github.com/repos/toroktibor/MEP_REPO", "Date": "2014-08-01T12:21:58Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getInt(dk.cs.aau.sw705e15.storage.dao.postgres.COLUMN_TYPE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type != (-1)) { ram.setType(dk.cs.aau.sw705e15.model.RandomAccessMemory.RamType.values()[resultSet.getInt(dk.cs.aau.sw705e15.storage.dao.postgres.COLUMN_TYPE)]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3027/buggy-version/src.main.java.dk.cs.aau.sw705e15.storage.dao.postgres.PostgresRandomAccessMemoryDAO.java", "BodyUseAPI": [], "Fixed commit": "a5bb96fc9c538d0a202d272afc129b0a965a3590", "Url": "https://api.github.com/repos/feupeu/SW705E15-code", "Date": "2015-12-02T13:34:25Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mRealm.where(me.calebjones.spacelaunchnow.content.models.realm.LaunchNotification.class).equalTo(\"id\", item.getId()).findFirst()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (notification != null) { notification.resetNotifiers(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3037/buggy-version/mobile.src.main.java.me.calebjones.spacelaunchnow.content.services.LaunchDataService.java", "BodyUseAPI": ["me.calebjones.spacelaunchnow.content.models.realm.LaunchNotification.resetNotifiers()"], "Fixed commit": "76a1b13048c9526679346e0e1093a77cd952e1ba", "Url": "https://api.github.com/repos/ItsCalebJones/SpaceLaunchNow-Android", "Date": "2016-10-10T17:28:17Z"},
{"Line": "=>8527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((builder.getTokenType()) == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5492/buggy-version/src.main.java.net.masterthought.dlanguage.parser.DLangParser.java", "BodyUseAPI": [], "Fixed commit": "64d1e37b170a98b5c848318d0e98aa025f4c64a2", "Url": "https://api.github.com/repos/pirocks/DLanguage", "Date": "2017-09-14T17:42:12Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getMessage().indexOf(\"No cache named\")) != (-1)) { LOG.warn(((\"Error attempting to evaluate inbound \" + \"TextMessage converting payload to BatchJMSEventMessage?: \") + (e.getMessage()))); }else { LOG.error(((\"Error attempting to evaluate inbound \" + \"TextMessage converting payload to BatchJMSEventMessage?: \") + (e.getMessage())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2111/buggy-version/src.main.java.org.bitsofinfo.ehcache.jms.custom.BatchingJMSCachePeer.java", "BodyUseAPI": ["java.lang.Throwable.getMessage()", "java.lang.Throwable.getMessage()", "org.apache.commons.logging.Log.error(java.lang.String,java.lang.Throwable)", "org.apache.commons.logging.Log.warn(java.lang.String)"], "Fixed commit": "feb3d696fe4e252ba4d4150239abdc1438a30acf", "Url": "https://api.github.com/repos/bitsofinfo/ehcache-jms-wan-replicator", "Date": "2014-05-14T16:49:18Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["slib.sml.sm.core.metrics.ic.topo.ICi_depth_max_nonlinear.getLogBase()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (logbase == null) { logbase = 2.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6890/buggy-version/slib-sml.src.main.java.slib.sml.sm.core.metrics.ic.topo.ICi_depth_max_nonlinear.java", "BodyUseAPI": [], "Fixed commit": "9dd64f58b1f93c7ee452e5b72cad4298729462dc", "Url": "https://api.github.com/repos/sharispe/slib", "Date": "2013-03-05T17:24:41Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((child.isFile()) && (!(shouldIgnore(child)))) { java.lang.String[] childName = child.getName().split(rliota.util.JSParser.REGEX_DOT); if ((childName.length) > 1) { if (childName[1].equals(\"js\")) { java.lang.String namespace = (parentNamespace + \".\") + (childName[0]); this.namespaceResourceMap.put(namespace, child); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8360/buggy-version/src.rliota.util.JSParser.java", "BodyUseAPI": ["java.io.File.getName()", "java.util.HashMap<java.lang.String, java.io.File>.put(java.lang.String,java.io.File)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "93d0830a377c62dbc4bd8355a4dacfbf47deb1fb", "Url": "https://api.github.com/repos/rliota/JSCompile", "Date": "2014-04-02T00:50:14Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dir.exists())) { if (dir.mkdir()) { com.mccottage.utils.SongtasteUtils.log.debug((\"\u521b\u5efa\u76ee\u5f55\" + (com.mccottage.utils.SongtasteUtils.OUT_FILE_PATH))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7216/buggy-version/src.main.java.com.mccottage.utils.SongtasteUtils.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "c15bd2f5c2ec9df0bd891406e57d0859da780dc3", "Url": "https://api.github.com/repos/songtaste-rebuild/MC-cottage", "Date": "2016-07-02T14:58:21Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jbpm.formModeler.core.config.Form.getDataHolderById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (holder == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6993/buggy-version/jbpm-form-modeler-core.jbpm-form-modeler-service.jbpm-form-modeler-service-core.src.main.java.org.jbpm.formModeler.core.config.FormManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "6a8c4863d9b4978c304d3f6704099ec84162db7e", "Url": "https://api.github.com/repos/droolsjbpm/jbpm-form-modeler", "Date": "2014-03-05T17:01:27Z"},
{"Line": "=>550", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(form.containsHolder(holder))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6993/buggy-version/jbpm-form-modeler-core.jbpm-form-modeler-service.jbpm-form-modeler-service-core.src.main.java.org.jbpm.formModeler.core.config.FormManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "6a8c4863d9b4978c304d3f6704099ec84162db7e", "Url": "https://api.github.com/repos/droolsjbpm/jbpm-form-modeler", "Date": "2014-03-05T17:01:27Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.mikephil.charting.charts.LineChart.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((humData.getDataSetCount()) > 0) { for (int i = humData.getDataSetCount(); i == 0; i--) { humData.removeDataSet(humData.getDataSetByIndex(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5984/buggy-version/app.src.main.java.com.grp8.weatherapp.Fragments.GraphTempRainHumidityFragment.java", "BodyUseAPI": ["com.github.mikephil.charting.data.LineData.getDataSetCount()", "com.github.mikephil.charting.data.LineData.removeDataSet(humData.getDataSetByIndex(i))", "com.github.mikephil.charting.data.LineData.getDataSetByIndex(int)"], "Fixed commit": "7c1a9f135c545749cf25addfaeaab4301fa3f524", "Url": "https://api.github.com/repos/LasseOnTheHub/WeatherApp", "Date": "2017-01-16T02:22:03Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.mikephil.charting.charts.CombinedChart.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tempRainData.getDataSetCount()) > 0) { for (int i = tempRainData.getDataSetCount(); i == 0; i--) { tempRainData.removeDataSet(tempRainData.getDataSetByIndex(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5984/buggy-version/app.src.main.java.com.grp8.weatherapp.Fragments.GraphTempRainHumidityFragment.java", "BodyUseAPI": ["com.github.mikephil.charting.data.CombinedData.removeDataSet(tempRainData.getDataSetByIndex(i))", "com.github.mikephil.charting.data.CombinedData.getDataSetByIndex(int)", "com.github.mikephil.charting.data.CombinedData.getDataSetCount()"], "Fixed commit": "7c1a9f135c545749cf25addfaeaab4301fa3f524", "Url": "https://api.github.com/repos/LasseOnTheHub/WeatherApp", "Date": "2017-01-16T02:22:03Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.mikephil.charting.charts.LineChart.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((windData.getDataSetCount()) > 0) { for (int i = windData.getDataSetCount(); i == 0; i--) { windData.removeDataSet(windData.getDataSetByIndex(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5984/buggy-version/app.src.main.java.com.grp8.weatherapp.Fragments.GraphWindPressure.java", "BodyUseAPI": ["com.github.mikephil.charting.data.LineData.removeDataSet(windData.getDataSetByIndex(i))", "com.github.mikephil.charting.data.LineData.getDataSetCount()", "com.github.mikephil.charting.data.LineData.getDataSetByIndex(int)"], "Fixed commit": "7c1a9f135c545749cf25addfaeaab4301fa3f524", "Url": "https://api.github.com/repos/LasseOnTheHub/WeatherApp", "Date": "2017-01-16T02:22:03Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.mikephil.charting.charts.LineChart.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pressureData.getDataSetCount()) > 0) { for (int i = pressureData.getDataSetCount(); i == 0; i--) { pressureData.removeDataSet(pressureData.getDataSetByIndex(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5984/buggy-version/app.src.main.java.com.grp8.weatherapp.Fragments.GraphWindPressure.java", "BodyUseAPI": ["com.github.mikephil.charting.data.LineData.removeDataSet(pressureData.getDataSetByIndex(i))", "com.github.mikephil.charting.data.LineData.getDataSetByIndex(int)", "com.github.mikephil.charting.data.LineData.getDataSetCount()"], "Fixed commit": "7c1a9f135c545749cf25addfaeaab4301fa3f524", "Url": "https://api.github.com/repos/LasseOnTheHub/WeatherApp", "Date": "2017-01-16T02:22:03Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(action.isReportingCycle())) { this.validateProjectJustification(action, project); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/120/buggy-version/impactPathways.src.main.java.org.cgiar.ccafs.ap.validation.projects.ProjectCCAFSOutcomesValidator.java", "BodyUseAPI": ["org.cgiar.ccafs.ap.validation.projects.ProjectCCAFSOutcomesValidator.validateProjectJustification(org.cgiar.ccafs.ap.action.BaseAction,org.cgiar.ccafs.ap.data.model.Project)"], "Fixed commit": "044ad9a5d2cac099882383023dd18277f0b133a1", "Url": "https://api.github.com/repos/CCAFS/ccafs-ap", "Date": "2016-02-08T21:41:48Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(n.equals(getSelf()))) { n.tell(new NodeApp.Join(NodeApp.myId), getSelf()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4705/buggy-version/NodeApp.java", "BodyUseAPI": ["ActorRef.tell(NodeApp.Join,getSelf())"], "Fixed commit": "bf96abcf7c6ba0764223abd6e9101cf536d15fc2", "Url": "https://api.github.com/repos/Gianlu94/Distributed-System-Project", "Date": "2017-03-10T15:38:28Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(n.equals(getSelf()))) { n.tell(new NodeApp.LeavingAnnouncement(NodeApp.myId), getSelf()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4705/buggy-version/NodeApp.java", "BodyUseAPI": ["ActorRef.tell(NodeApp.LeavingAnnouncement,getSelf())"], "Fixed commit": "bf96abcf7c6ba0764223abd6e9101cf536d15fc2", "Url": "https://api.github.com/repos/Gianlu94/Distributed-System-Project", "Date": "2017-03-10T15:38:28Z"},
{"Line": "=>562", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((testLifecycle) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5381/buggy-version/com.piece_framework.makegood.ui.src.com.piece_framework.makegood.ui.views.ResultView.java", "BodyUseAPI": [], "Fixed commit": "8bb1e50a40a35124c40ded185605ec2172af1c57", "Url": "https://api.github.com/repos/matsufuji/makegood", "Date": "2011-06-26T07:02:49Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (RESULT_CANCELED)) { if (data == null) { finish(); }else if (data.hasExtra(IdentificationResult.IDENTIFICATION_RESULT)) { startActivityForResult(de.idvos.fastonlineidentification.activity.StartActivity.getIntent(this, true), de.idvos.fastonlineidentification.InitialActivity.START_ACTIVITY_REQUEST_CODE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3153/buggy-version/idvos-app.src.main.java.de.idvos.fastonlineidentification.InitialActivity.java", "BodyUseAPI": [], "Fixed commit": "3caa6720b838a08536c0b852af63e708001ac0f6", "Url": "https://api.github.com/repos/buzzjective/idvos_android", "Date": "2015-11-10T19:52:04Z"},
{"Line": "=>1802", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (min < 1) { throw new org.dasein.cloud.CloudException(org.dasein.cloud.CloudErrorType.CAPACITY, 413, \"Over Limit\", (ob.has(\"message\") ? ob.getString(\"message\") : \"Over Limit\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8782/buggy-version/src.main.java.org.dasein.cloud.openstack.nova.os.AbstractMethod.java", "BodyUseAPI": [], "Fixed commit": "44a28fe3cfbaf726a9d79c223bfde3886d97ca0e", "Url": "https://api.github.com/repos/greese/dasein-cloud-openstack", "Date": "2013-11-12T19:21:16Z"},
{"Line": "=>1587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (min < 1) { throw new org.dasein.cloud.CloudException(org.dasein.cloud.CloudErrorType.CAPACITY, 413, \"Over Limit\", (ob.has(\"message\") ? ob.getString(\"message\") : \"Over Limit\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8782/buggy-version/src.main.java.org.dasein.cloud.openstack.nova.os.AbstractMethod.java", "BodyUseAPI": [], "Fixed commit": "44a28fe3cfbaf726a9d79c223bfde3886d97ca0e", "Url": "https://api.github.com/repos/greese/dasein-cloud-openstack", "Date": "2013-11-12T19:21:16Z"},
{"Line": "=>592", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof wyil.util.Constant.Map) { wyil.util.Constant.Map lv = ((wyil.util.Constant.Map) (value)); java.util.HashMap<wyil.util.Constant, wyil.util.Constant> lv_values = lv.values; for (java.util.Map.Entry<wyil.util.Constant, wyil.util.Constant> e : lv_values.entrySet()) { wyil.util.Constant key = convert(e.getKey(), to.key(), context); wyil.util.Constant val = convert(e.getValue(), to.value(), context); nValues.put(key, val); } }else { wyil.util.Constant.List lv = ((wyil.util.Constant.List) (value)); java.util.ArrayList<wyil.util.Constant> lv_values = lv.values; for (int i = 0; i != (lv_values.size()); ++i) { wyil.util.Constant key = wyil.util.Constant.V_INTEGER(java.math.BigInteger.valueOf(i)); wyil.util.Constant val = convert(lv_values.get(i), to.value(), context); nValues.put(key, val); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7496/buggy-version/modules.wyil.src.wyil.util.Interpreter.java", "BodyUseAPI": [], "Fixed commit": "85be25410904a55282b97cba19e4f2b6058eb699", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2015-05-27T21:24:43Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((requestedSpecification.getUniqueId().isLatest()) && (target.getUniqueId().isVersioned())) { resolvedSpecification = resolvedSpecification.replaceIdentifier(target.getUniqueId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1120/buggy-version/projects.OG-Engine.src.main.java.com.opengamma.engine.target.ComputationTargetResolverUtils.java", "BodyUseAPI": ["com.opengamma.id.UniqueIdentifiable.getUniqueId()", "com.opengamma.engine.ComputationTargetSpecification.replaceIdentifier(target.getUniqueId())"], "Fixed commit": "547f61c26bdfb77d40b8f8953d405929de459a61", "Url": "https://api.github.com/repos/OpenGamma/OG-Platform", "Date": "2013-04-25T16:49:13Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getTypesDir().exists())) return ret;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1185/buggy-version/src.us.kbase.narrativemethodstore.db.github.LocalGitDB.java", "BodyUseAPI": [], "Fixed commit": "c522beb9ed74f5f6646fb183813cd883d2bd2faf", "Url": "https://api.github.com/repos/kbase/narrative_method_store", "Date": "2014-12-15T21:27:39Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getMethodsDir().exists())) return methodList;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1185/buggy-version/src.us.kbase.narrativemethodstore.db.github.LocalGitDB.java", "BodyUseAPI": [], "Fixed commit": "c522beb9ed74f5f6646fb183813cd883d2bd2faf", "Url": "https://api.github.com/repos/kbase/narrative_method_store", "Date": "2014-12-15T21:27:39Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getAppsDir().exists())) return appList;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1185/buggy-version/src.us.kbase.narrativemethodstore.db.github.LocalGitDB.java", "BodyUseAPI": [], "Fixed commit": "c522beb9ed74f5f6646fb183813cd883d2bd2faf", "Url": "https://api.github.com/repos/kbase/narrative_method_store", "Date": "2014-12-15T21:27:39Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.creativemd.igcm.api.segments.advanced.DisableRecipeSegment.getGuiControl(getKey())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (button instanceof com.creativemd.creativecore.gui.controls.gui.GuiButton) value = !(((com.creativemd.creativecore.gui.controls.gui.GuiButton) (button)).caption.equals(\"Enabled\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/9044/buggy-version/src.main.java.com.creativemd.igcm.api.segments.advanced.DisableRecipeSegment.java", "BodyUseAPI": [], "Fixed commit": "fba34d6551151d7223e0c0c01314f185d8e8f403", "Url": "https://api.github.com/repos/CreativeMD/IGCM", "Date": "2017-04-30T11:22:57Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.creativemd.igcm.api.ConfigSegment.getGuiControls()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (controls == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/9044/buggy-version/src.main.java.com.creativemd.igcm.api.ConfigSegment.java", "BodyUseAPI": [], "Fixed commit": "fba34d6551151d7223e0c0c01314f185d8e8f403", "Url": "https://api.github.com/repos/CreativeMD/IGCM", "Date": "2017-04-30T11:22:57Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRunning()) { samples = new java.util.ArrayList<>(samples); samples.add(current.sample()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4359/buggy-version/src.main.java.org.libsmith.anvil.time.Stopwatch.java", "BodyUseAPI": [], "Fixed commit": "d2bde6ccd848cbbe90e156f400af645737402902", "Url": "https://api.github.com/repos/libsmith/libanvil", "Date": "2016-07-12T01:56:15Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numDivisions) > 0) { barW = (((w) - ((buffer) * 2)) - (2 * (numDivisions))) / (numDivisions); }else { barW = (w) - ((buffer) * 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7955/buggy-version/src.edu.gatech.earthquakes.vises.NominalBarGraph.java", "BodyUseAPI": [], "Fixed commit": "23a2c709b7a128f098e40d5e86fac0ca5abfc6bd", "Url": "https://api.github.com/repos/ejohnson44/QuakesInOurMain", "Date": "2012-12-07T07:14:57Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e instanceof com.google.api.client.googleapis.json.GoogleJsonResponseException) { com.google.api.client.googleapis.json.GoogleJsonResponseException ge = ((com.google.api.client.googleapis.json.GoogleJsonResponseException) (e)); if (((ge.getStatusCode()) == 410) || ((ge.getStatusCode()) == 404)) { com.cloudcraftgaming.discal.database.DatabaseManager.getManager().deleteAnnouncement(a.getAnnouncementId().toString()); }else { com.cloudcraftgaming.discal.internal.email.EmailSender.getSender().sendExceptionEmail(e, this.getClass()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3396/buggy-version/src.main.java.com.cloudcraftgaming.discal.module.announcement.Announce.java", "BodyUseAPI": ["com.cloudcraftgaming.discal.internal.email.EmailSender.getSender().sendExceptionEmail(java.lang.Exception,java.lang.Class<? extends com.cloudcraftgaming.discal.module.announcement.Announce>)"], "Fixed commit": "b5180ad41898416dfbd253576e666b872e317efe", "Url": "https://api.github.com/repos/NovaFox161/DisCal-Discord-Bot", "Date": "2017-04-03T18:06:06Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hu.zagor.gamebooks.character.handler.item.FfCharacterItemHandler.getItem(java.lang.Character,item.getId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (toLose != null) { if ((toLose.getItemType()) != (hu.zagor.gamebooks.character.item.ItemType.potion)) { throw new java.lang.IllegalArgumentException(((((\"Trying to lose '\" + (item.getDose())) + \"' doses from non-potion item '\") + (toLose.getName())) + \"'.\")); } if ((toLose.getDose()) > (item.getDose())) { toLose.setDose(((toLose.getDose()) - (item.getDose()))); }else { itemHandler.removeItem(character, item.getId(), 1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2644/buggy-version/rulesets.rs-ff.src.main.java.hu.zagor.gamebooks.ff.section.FfRuleBookParagraphResolver.java", "BodyUseAPI": ["hu.zagor.gamebooks.character.item.FfItem.getDose()", "hu.zagor.gamebooks.character.item.FfItem.getItemType()", "hu.zagor.gamebooks.character.item.FfItem.getName()", "hu.zagor.gamebooks.character.item.FfItem.setDose(((toLose.getDose()) - (item.getDose())))", "hu.zagor.gamebooks.character.item.FfItem.getDose()"], "Fixed commit": "3d83678cf53dc0c1d80dfbabb1c2a3c5d17d683b", "Url": "https://api.github.com/repos/firefoxpdm/gamebooks", "Date": "2015-10-03T20:37:49Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (splitChar == ' ') this.setSplitChar(new char[]{ '\u00a7', splitChar }); else this.setSplitChar(new char[]{ splitChar });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6102/buggy-version/library.src.main.java.com.tokenautocomplete.TokenCompleteTextView.java", "BodyUseAPI": ["com.tokenautocomplete.TokenCompleteTextView.setSplitChar(char[])", "com.tokenautocomplete.TokenCompleteTextView.setSplitChar(char[])"], "Fixed commit": "466179a799126766021c192902220f17a8de2f06", "Url": "https://api.github.com/repos/jiawenzhang/TokenAutoComplete", "Date": "2014-12-21T14:09:27Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((splitChar[0]) == ' ') { splitChar = new char[]{ (splitChar.length) > 1 ? splitChar[1] : '\u00a7', splitChar[0] }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6102/buggy-version/library.src.main.java.com.tokenautocomplete.TokenCompleteTextView.java", "BodyUseAPI": [], "Fixed commit": "466179a799126766021c192902220f17a8de2f06", "Url": "https://api.github.com/repos/jiawenzhang/TokenAutoComplete", "Date": "2014-12-21T14:09:27Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!onEmptyLine) { lines++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/551/buggy-version/stockmetrics.src.com.sixrr.stockmetrics.utils.LineUtil.java", "BodyUseAPI": [], "Fixed commit": "a74cad90bc3ee2916ad66ffa80cc3af35e7395ae", "Url": "https://api.github.com/repos/BasLeijdekkers/MetricsReloaded", "Date": "2016-03-12T13:41:03Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dividerPos < 0) { throw new net.yadaframework.exceptions.YadaInvalidValueException(\"Invalid url: {}\", value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1908/buggy-version/YadaWeb.src.main.java.net.yadaframework.web.dialect.YadaDialectUtil.java", "BodyUseAPI": [], "Fixed commit": "9705282edb80c3c84967fa8535f332d6371af9a2", "Url": "https://api.github.com/repos/xtianus/yadaframework", "Date": "2017-11-22T17:44:32Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.j4velin.pedometer.util.Logger.LOG) de.j4velin.pedometer.util.Logger.log((\"sensorlistener update: \" + (event.values[0])));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3690/buggy-version/src.de.j4velin.pedometer.background.SensorListener.java", "BodyUseAPI": [], "Fixed commit": "b3aff6826c79deead20585cc4852a5ab009f6dd0", "Url": "https://api.github.com/repos/j4velin/Pedometer", "Date": "2014-04-13T21:09:36Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.j4velin.pedometer.util.Logger.LOG) de.j4velin.pedometer.util.Logger.log((\"SensorListener reply with steps: \" + (m.arg1)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3690/buggy-version/src.de.j4velin.pedometer.background.SensorListener.java", "BodyUseAPI": [], "Fixed commit": "b3aff6826c79deead20585cc4852a5ab009f6dd0", "Url": "https://api.github.com/repos/j4velin/Pedometer", "Date": "2014-04-13T21:09:36Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((remaining()) == 0) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8146/buggy-version/core.client.src.main.java.alluxio.client.block.UnderStoreBlockInStream.java", "BodyUseAPI": [], "Fixed commit": "66d959dc8975966cf831f0afbeaa46569bf39a60", "Url": "https://api.github.com/repos/luoli523/alluxio", "Date": "2016-04-06T01:06:05Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.InputStream.read()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (data != (-1)) { (mPos)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8146/buggy-version/core.client.src.main.java.alluxio.client.block.UnderStoreBlockInStream.java", "BodyUseAPI": [], "Fixed commit": "66d959dc8975966cf831f0afbeaa46569bf39a60", "Url": "https://api.github.com/repos/luoli523/alluxio", "Date": "2016-04-06T01:06:05Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["executor.execute(QueryTypes.SELECT, query).getResultSet()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((rs.getInt(10)) != 0) domainSize = rs.getInt(10);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/9136/buggy-version/src.org.executequery.gui.browser.ColumnData.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(int)"], "Fixed commit": "7615ebe8aa387be51753b30aa3cac80dd7b674ea", "Url": "https://api.github.com/repos/red-soft-ru/redexpert", "Date": "2017-11-16T15:01:36Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["storm.trident.tuple.TridentTuple.getValueByField(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((location.get(\"timestamp\")) instanceof java.lang.Integer) { java.lang.Integer aux = ((java.lang.Integer) (location.get(\"timestamp\"))); newTimestamp = aux.longValue(); }else if ((location.get(\"timestamp\")) instanceof java.lang.Long) { newTimestamp = ((java.lang.Long) (location.get(\"timestamp\"))); }else { newTimestamp = (java.lang.System.currentTimeMillis()) / 1000L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4617/buggy-version/topology.src.main.java.net.redborder.storm.function.LocationLogicNmsp.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "31c37993810b18a7f08d3177d222335126815f92", "Url": "https://api.github.com/repos/redBorder/rb-bi", "Date": "2015-03-30T07:47:01Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((loopingStreamCount) < (maxStreams)) { ++(loopingStreamCount); ++(loopingStreamIndex); }else { loopingStreamIndex = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2618/buggy-version/app.src.main.java.com.gw150914.jabberwocky.core.SoundEngine.java", "BodyUseAPI": [], "Fixed commit": "6b899fe586a7954734866d08ad9e7b3e8bb92dec", "Url": "https://api.github.com/repos/jabberwockyproject/root", "Date": "2016-12-15T11:24:25Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (constructorObject != null) { methodCallAnalyzer.processArgumentsOfInternalMethodInvocation(classObject, constructorObject, classInstanceCreation.arguments(), methodBinding, variable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7480/buggy-version/src.gr.uom.java.ast.decomposition.cfg.PDGExpression.java", "BodyUseAPI": ["gr.uom.java.ast.decomposition.cfg.MethodCallAnalyzer.processArgumentsOfInternalMethodInvocation(gr.uom.java.ast.ClassObject,gr.uom.java.ast.ConstructorObject,classInstanceCreation.arguments(),org.eclipse.jdt.core.dom.IMethodBinding,gr.uom.java.ast.decomposition.cfg.AbstractVariable)"], "Fixed commit": "35298ac0e6da7099055e5465dad8d06638051982", "Url": "https://api.github.com/repos/tsantalis/JDeodorant", "Date": "2015-10-26T21:37:00Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (constructorObject != null) { methodCallAnalyzer.processArgumentsOfInternalMethodInvocation(classObject, constructorObject, classInstanceCreation.arguments(), methodBinding, variable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7480/buggy-version/src.gr.uom.java.ast.decomposition.cfg.PDGNode.java", "BodyUseAPI": ["gr.uom.java.ast.decomposition.cfg.MethodCallAnalyzer.processArgumentsOfInternalMethodInvocation(gr.uom.java.ast.ClassObject,gr.uom.java.ast.ConstructorObject,classInstanceCreation.arguments(),org.eclipse.jdt.core.dom.IMethodBinding,gr.uom.java.ast.decomposition.cfg.AbstractVariable)"], "Fixed commit": "35298ac0e6da7099055e5465dad8d06638051982", "Url": "https://api.github.com/repos/tsantalis/JDeodorant", "Date": "2015-10-26T21:37:00Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"SHIPPING COMPANY\".equals(vesselSchedule.getVesselScheduleCriteria())) { column = \"vendorName\"; }else if (\"ESTIMATED DATE OF DEPARTURE\".equals(vesselSchedule.getVesselScheduleCriteria())) { column = \"departureDate\"; }else if (\"PIER ORIGIN\".equals(vesselSchedule.getVesselScheduleCriteria())) { column = \"originPort\"; }else if (\"VOYAGE NUMBER\".equals(vesselSchedule.getVesselScheduleCriteria())) { column = \"voyageNumber\"; }else if (\"ESTIMATED DATE OF ARRIVAL\".equals(vesselSchedule.getVesselScheduleCriteria())) { column = \"arrivalDate\"; }else if (\"PIER DESTINATION\".equals(vesselSchedule.getVesselScheduleCriteria())) { column = \"destinationPort\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8686/buggy-version/freightbit.src.main.java.com.sr.apps.freightbit.operations.action.VesselScheduleAction.java", "BodyUseAPI": ["com.sr.apps.freightbit.operations.formbean.VesselScheduleBean.getVesselScheduleCriteria()", "com.sr.apps.freightbit.operations.formbean.VesselScheduleBean.getVesselScheduleCriteria()", "java.lang.String.equals(vesselSchedule.getVesselScheduleCriteria())", "java.lang.String.equals(vesselSchedule.getVesselScheduleCriteria())", "java.lang.String.equals(vesselSchedule.getVesselScheduleCriteria())", "com.sr.apps.freightbit.operations.formbean.VesselScheduleBean.getVesselScheduleCriteria()", "com.sr.apps.freightbit.operations.formbean.VesselScheduleBean.getVesselScheduleCriteria()", "com.sr.apps.freightbit.operations.formbean.VesselScheduleBean.getVesselScheduleCriteria()", "java.lang.String.equals(vesselSchedule.getVesselScheduleCriteria())", "java.lang.String.equals(vesselSchedule.getVesselScheduleCriteria())"], "Fixed commit": "9ba50888d9f3c714ddb6eee20c5fcd59ecf69c1a", "Url": "https://api.github.com/repos/johnpelquingua/freightbit-logistics", "Date": "2015-03-27T08:56:50Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((\"class\".equals(key2)) || (\"sessionContext\".equals(key2))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6450/buggy-version/components.blitz.src.omero.cmd.admin.CurrentSessionsRequestI.java", "BodyUseAPI": [], "Fixed commit": "a715e654afddef8ab6e0123095e88ce427d7894d", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2016-08-16T08:02:05Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.PATHopan.sketchsample.widget.MappingView.getDrawable()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (drawable == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2623/buggy-version/sample.src.main.java.me.PATHopan.sketchsample.widget.MappingView.java", "BodyUseAPI": [], "Fixed commit": "69a81f36d738067a0af3accaa194dd582c907ba4", "Url": "https://api.github.com/repos/panpf/sketch", "Date": "2016-10-27T04:53:16Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (m_path == null) { org.eweb4j.mvc.config.bean.ActionConfigBean defaultAcb = org.eweb4j.mvc.config.ActionAnnotationConfig.parseDefaultActionConfig(methodName, moduleName); if (defaultAcb != null) { acb.setHttpMethod(defaultAcb.getHttpMethod()); acb.getResult().addAll(defaultAcb.getResult()); uriMapping = defaultAcb.getUriMapping(); }else { java.lang.String info = ((fullName + \" does not starts with '\") + (org.eweb4j.mvc.ActionMethod.PREFIX)) + \"' so that can not be a valid action uri mapping\"; log.debug(info); return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6388/buggy-version/src.main.java.org.eweb4j.mvc.config.ActionAnnotationConfig.java", "BodyUseAPI": [], "Fixed commit": "c5cf2a8fc15fd43c7b3b6703f14d1600ffd66893", "Url": "https://api.github.com/repos/laiweiwei/eweb4j-framework", "Date": "2013-01-24T17:16:43Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOnImageViewListener) == null) { return super.onTouchEvent(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4577/buggy-version/library.src.main.java.cn.finalteam.rxgalleryfinal.ui.widget.FixImageView.java", "BodyUseAPI": [], "Fixed commit": "ff679d8c22af9a133f609fe48342426445c64854", "Url": "https://api.github.com/repos/FinalTeam/RxGalleryFinal", "Date": "2016-08-23T01:41:37Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((item + maxModels) <= numberOfModels) { org.json.simple.JSONArray arrayOfModels = new org.json.simple.JSONArray(); arrayOfModels.addAll(models.subList(item, (item + maxModels))); models_split.add(arrayOfModels); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2123/buggy-version/src.main.java.org.bigml.binding.LocalEnsemble.java", "BodyUseAPI": [], "Fixed commit": "447ba6740a2a42c1b1387eed449edcecab9ec107", "Url": "https://api.github.com/repos/bigmlcom/bigml-java", "Date": "2015-11-03T15:28:58Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getHeader(WebUtil.HEAD_USERAGENT)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (userAgent != null) { if (userAgent.matches(userAgentFilter)) { for (java.util.Map.Entry<java.lang.String, java.lang.String> entry : userAgentFilterUrlRewriteRules) { java.util.regex.Pattern p = java.util.regex.Pattern.compile(entry.getKey()); java.util.regex.Matcher m = p.matcher(burst.web.util.WebUtil.getContextURL(hsRequest)); if (m.matches()) { javax.servlet.RequestDispatcher dispatcher = request.getRequestDispatcher(getRewritedURL(m, entry.getValue(), hsRequest)); dispatcher.forward(request, response); return; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3980/buggy-version/src.main.java.burst.reader.web.route.URLRewriteFilter.java", "BodyUseAPI": ["java.lang.String.matches(java.lang.String)"], "Fixed commit": "08a1204397bd05e629b7f894feef2699fe11d4dd", "Url": "https://api.github.com/repos/burstinair/reader", "Date": "2013-04-24T03:20:50Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bookMark.getUserAgent()) != null) { if (bookMark.getUserAgent().matches(userAgentFilter)) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3980/buggy-version/src.main.java.burst.reader.service.BookMarkMonitorService.java", "BodyUseAPI": ["burst.reader.dto.BookMarkDTO.getUserAgent()", "bookMark.getUserAgent().matches(java.lang.String)"], "Fixed commit": "08a1204397bd05e629b7f894feef2699fe11d4dd", "Url": "https://api.github.com/repos/burstinair/reader", "Date": "2013-04-24T03:20:50Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mNewsView.canScrollVertically((-1)))) mNewsView.smoothScrollToPosition(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2368/buggy-version/app.src.main.java.org.jorge.lolin1.ui.fragment.FeedListFragment.java", "BodyUseAPI": ["android.support.v7.widget.RecyclerView.smoothScrollToPosition(int)"], "Fixed commit": "d67276bca647fc093e37a7168ab30f2c3e82f8a8", "Url": "https://api.github.com/repos/Stoyicker/LoLin1", "Date": "2014-12-02T22:21:10Z"},
{"Line": "=>721", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (m.find()) line = m.group(1); else continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7935/buggy-version/src.benchmarks.edu.mit.benchmark.b2w.B2WLoader.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)"], "Fixed commit": "f39c91dd7b0a752f81f35d96215f4e676bbf6304", "Url": "https://api.github.com/repos/nbajiaoshi/h-store", "Date": "2016-08-17T17:44:41Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(viewer.getTable().isDisposed())) { viewer.refresh(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8182/buggy-version/plugins.au.gov.ga.earthsci.application.src.au.gov.ga.earthsci.progress.part.ProgressPart.java", "BodyUseAPI": ["org.eclipse.jface.viewers.TableViewer.refresh()"], "Fixed commit": "791d8b4360ba03bfefbb845891ed2ce4b842b454", "Url": "https://api.github.com/repos/ga-m3dv/ga-earthsci-rcp", "Date": "2012-11-13T01:45:33Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(viewer.getTable().isDisposed())) { viewer.update(job, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8182/buggy-version/plugins.au.gov.ga.earthsci.application.src.au.gov.ga.earthsci.progress.part.ProgressPart.java", "BodyUseAPI": ["org.eclipse.jface.viewers.TableViewer.update(au.gov.ga.earthsci.progress.part.ProgressPart.JobInfo,<nulltype>)"], "Fixed commit": "791d8b4360ba03bfefbb845891ed2ce4b842b454", "Url": "https://api.github.com/repos/ga-m3dv/ga-earthsci-rcp", "Date": "2012-11-13T01:45:33Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (strings[0].equals(\"SONNABEND\")) strings[0] = \"SAMSTAG\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4667/buggy-version/Liebstoeckel.app.src.main.java.de.tdsoftware.liebstoeckel.web.LoadModelTask.java", "BodyUseAPI": [], "Fixed commit": "2a88b33d829e9abe0129755df8c70b7168619833", "Url": "https://api.github.com/repos/erichflock/menuPlanner", "Date": "2017-10-21T15:54:15Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.tdsoftware.liebstoeckel.model.MainActivity.getCurrentDay()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((menu.getWeek().getDay(weekday)) == null) { for (de.tdsoftware.liebstoeckel.model.Day day : menu.getWeek().getDays()) { if (day != null) { weekday = day.getWeekday(); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4667/buggy-version/Liebstoeckel.app.src.main.java.de.tdsoftware.liebstoeckel.model.MainActivity.java", "BodyUseAPI": ["menu.getWeek().getDays()", "de.tdsoftware.liebstoeckel.model.Menu.getWeek()"], "Fixed commit": "2a88b33d829e9abe0129755df8c70b7168619833", "Url": "https://api.github.com/repos/erichflock/menuPlanner", "Date": "2017-10-21T15:54:15Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((accessibilityEvent.getEventType()) == (android.view.accessibility.AccessibilityEvent.TYPE_WINDOW_CONTENT_CHANGED)) { android.content.ComponentName componentName = new android.content.ComponentName(accessibilityEvent.getPackageName().toString(), accessibilityEvent.getClassName().toString()); android.content.pm.ActivityInfo activityInfo = tryToGetActivity(componentName); java.lang.Boolean isActivity = activityInfo != null; java.lang.String packageOnTop = accessibilityEvent.getPackageName().toString(); if (isActivity) { handlePackageOnTop(packageOnTop); }else { android.util.Log.d(getClass().getSimpleName(), (\"Value: \" + (accessibilityEvent.getEventType()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5583/buggy-version/app.src.main.java.com.arrg.app.uapplock.model.service.UAppLockService.java", "BodyUseAPI": ["accessibilityEvent.getPackageName().toString()", "android.view.accessibility.AccessibilityEvent.getClassName()", "accessibilityEvent.getClassName().toString()", "accessibilityEvent.getPackageName().toString()", "android.view.accessibility.AccessibilityEvent.getPackageName()", "android.view.accessibility.AccessibilityEvent.getPackageName()", "android.util.Log.d(java.lang.String,(\"Value: \" + (accessibilityEvent.getEventType())))", "android.view.accessibility.AccessibilityEvent.getEventType()"], "Fixed commit": "60f5e5259a88d927d4d79b00a040fb5e39264db3", "Url": "https://api.github.com/repos/AlandEr2612/uAppLock", "Date": "2016-09-02T17:08:12Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (profileName.equals(\"edit\")) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1789/buggy-version/src.main.java.uk.ac.dundee.computing.tjn.instagrim.servlets.Profile.java", "BodyUseAPI": [], "Fixed commit": "b75ac42b62ea03da3a67815a0d189227704304f2", "Url": "https://api.github.com/repos/jmsnll/Secure-Internet-Programming", "Date": "2016-10-06T17:51:38Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fs.exists(dictPath)) fs.delete(dictPath);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/340/buggy-version/src.main.java.com.elex.bigdata.llda.mahout.dictionary.Dictionary.java", "BodyUseAPI": ["org.apache.hadoop.fs.FileSystem.delete(org.apache.hadoop.fs.Path)"], "Fixed commit": "445bf8d7d62bd12614abd5728259646a9f7ff748", "Url": "https://api.github.com/repos/elex-bigdata/lldaMahout", "Date": "2014-06-27T06:51:18Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(data.get(j).getName().contains(\" family\"))) data.get(j).setName(((data.get(j).getName()) + \" family\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6934/buggy-version/src.mainWindow.PokeList.java", "BodyUseAPI": ["java.util.ArrayList<mainWindow.Pokemon>.get(int)", "data.get(j).getName()", "data.get(j).setName(((data.get(j).getName()) + \" family\"))", "java.util.ArrayList<mainWindow.Pokemon>.get(int)"], "Fixed commit": "ea65f860955f84c308db142ee3f2bde72efbe6a1", "Url": "https://api.github.com/repos/lukexorz/PokeDox", "Date": "2016-01-06T23:04:30Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((searchKey) != null) pokeCount -= searchPokemon();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6934/buggy-version/src.mainWindow.PokeList.java", "BodyUseAPI": [], "Fixed commit": "ea65f860955f84c308db142ee3f2bde72efbe6a1", "Url": "https://api.github.com/repos/lukexorz/PokeDox", "Date": "2016-01-06T23:04:30Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (delColIndex < (deletedColumns.size())) { if ((deletedColumns.get(delColIndex)) == i) { isDeleted = true; delColIndex++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5757/buggy-version/workspace.MHS.src.model.Hypothesis.java", "BodyUseAPI": ["java.util.Vector<java.lang.Integer>.get(int)"], "Fixed commit": "4071b1c9cf7dce70c5bbea3ab9d2e223dfd05263", "Url": "https://api.github.com/repos/Luke092/MHS_Project", "Date": "2017-03-17T10:53:51Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.view.MenuItemCompat.getActionProvider(android.view.MenuItem)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (mShareActionProvider != null) { mShareActionProvider.setShareIntent(mResultIntent); mShareActionProvider.setOnShareTargetSelectedListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2662/buggy-version/app.src.main.java.org.noise_planet.noisecapture.Results.java", "BodyUseAPI": ["android.support.v7.widget.ShareActionProvider.setOnShareTargetSelectedListener(org.noise_planet.noisecapture.Results)", "android.support.v7.widget.ShareActionProvider.setShareIntent(android.content.Intent)"], "Fixed commit": "15259592718e72299397b6056d07abc528489d1c", "Url": "https://api.github.com/repos/nicolas-f/NoiseCapture", "Date": "2016-06-02T07:27:00Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_useEncryption) { if (_redirectToTls) { _server.createContext(\"/\", new com.softwareverde.httpserver.HttpHandler<T>(_encryptionRedirectEndpoint)); }else { _applyEndpoints(_tlsServer); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3259/buggy-version/src.main.java.com.softwareverde.httpserver.ApiServer.java", "BodyUseAPI": [], "Fixed commit": "1ced74752e9003bed090ad8e074e08b91ed172bb", "Url": "https://api.github.com/repos/SoftwareVerde/http-servlet", "Date": "2016-12-19T18:34:45Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.ccaper.LandscapePortraitImageSort.util.LandscapePortraitOrientationUtils.getImageOrientation(java.io.File)", "net.ccaper.LandscapePortraitImageSort.service.IterateDirectories.getFile()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((file != null) && (orientation != null)) { java.io.File copiedFile = copyImage.copyImageToOrientationDirectory(file, orientation); net.ccaper.LandscapePortraitImageSort.Driver.LOG.info(java.lang.String.format(\"File '%s' was found to have orientation %s, and was copied '%s'\", file.getAbsolutePath(), orientation, copiedFile.getAbsolutePath())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8092/buggy-version/LandscapePortraitImageSort.src.net.ccaper.LandscapePortraitImageSort.Driver.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "java.lang.String.format(java.lang.String,java.lang.String,net.ccaper.LandscapePortraitImageSort.enums.ImageOrientation,java.lang.String)", "net.ccaper.LandscapePortraitImageSort.service.CopyImage.copyImageToOrientationDirectory(java.io.File,net.ccaper.LandscapePortraitImageSort.enums.ImageOrientation)", "org.apache.commons.logging.Log.info(java.lang.String)"], "Fixed commit": "5cdaa9422a336a34361667aad31167d0b7b76985", "Url": "https://api.github.com/repos/ccaper/LandscapePortraitImageSort", "Date": "2013-10-11T23:28:40Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (new java.io.File(dir, name).isFile()) { ++(numberNonImageFiles); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8092/buggy-version/LandscapePortraitImageSort.src.net.ccaper.LandscapePortraitImageSort.serviceImpl.IterateDirectoriesImpl.java", "BodyUseAPI": [], "Fixed commit": "5cdaa9422a336a34361667aad31167d0b7b76985", "Url": "https://api.github.com/repos/ccaper/LandscapePortraitImageSort", "Date": "2013-10-11T23:28:40Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == 5) { gc.setFill(Color.YELLOW); }else if (value == 6) { gc.setFill(Color.BEIGE); }else if (value == 9) { gc.setFill(Color.MAGENTA); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/884/buggy-version/src.main.java.com.ravi.fuzzyToolBox.UserInterface.FuzzyUI.java", "BodyUseAPI": [], "Fixed commit": "1ff93ef8be63200bae16765a5a9e026b23647522", "Url": "https://api.github.com/repos/ravikchi/FuzzyToolBox", "Date": "2017-06-14T15:01:38Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (chat.getAsString(TblChats.IS_GROUP).equals(\"0\")) { if ((db.selectByKey(TblChats.TABLE_NAME, TblChats.CHAT_ID, chat.getAsString(TblChats.CHAT_ID)).length()) > 0) { return db.updateParams(TblChats.TABLE_NAME, chat, TblChats.CHAT_ID); }else { return db.postParams(TblChats.TABLE_NAME, chat); } }else { if ((db.selectByKey(TblChats.TABLE_NAME, TblChats.GROUP_ID, chat.getAsString(TblChats.GROUP_ID)).length()) > 0) { return db.updateParams(TblChats.TABLE_NAME, chat, TblChats.GROUP_ID); }else { return db.postParams(TblChats.TABLE_NAME, chat); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7477/buggy-version/app.src.main.java.com.llp.lunchkaki.models.Chats.java", "BodyUseAPI": ["com.llp.lunchkaki.db.MySQLiteHelper.selectByKey(TblChats.TABLE_NAME,TblChats.CHAT_ID,chat.getAsString(TblChats.CHAT_ID))", "com.llp.lunchkaki.db.MySQLiteHelper.postParams(TblChats.TABLE_NAME,android.content.ContentValues)", "db.selectByKey(TblChats.TABLE_NAME, TblChats.CHAT_ID, chat.getAsString(TblChats.CHAT_ID)).length()", "com.llp.lunchkaki.db.MySQLiteHelper.updateParams(TblChats.TABLE_NAME,android.content.ContentValues,TblChats.CHAT_ID)", "com.llp.lunchkaki.db.MySQLiteHelper.selectByKey(TblChats.TABLE_NAME,TblChats.GROUP_ID,chat.getAsString(TblChats.GROUP_ID))", "com.llp.lunchkaki.db.MySQLiteHelper.updateParams(TblChats.TABLE_NAME,android.content.ContentValues,TblChats.GROUP_ID)", "db.selectByKey(TblChats.TABLE_NAME, TblChats.GROUP_ID, chat.getAsString(TblChats.GROUP_ID)).length()", "android.content.ContentValues.getAsString(TblChats.GROUP_ID)", "android.content.ContentValues.getAsString(TblChats.CHAT_ID)", "com.llp.lunchkaki.db.MySQLiteHelper.postParams(TblChats.TABLE_NAME,android.content.ContentValues)"], "Fixed commit": "ae2e1ba876362e2ed2f982c3fde5db7b59160f1f", "Url": "https://api.github.com/repos/brianfwz/lkk", "Date": "2016-04-25T22:48:12Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentMigration) == (chats)) { chat.deleteAllChats(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7477/buggy-version/app.src.main.java.com.llp.lunchkaki.activities.MigrationActivity.java", "BodyUseAPI": [], "Fixed commit": "ae2e1ba876362e2ed2f982c3fde5db7b59160f1f", "Url": "https://api.github.com/repos/brianfwz/lkk", "Date": "2016-04-25T22:48:12Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((build.getLevelUpgradeFinish()) == null) { frontend.GamePlay.reduceResourceForBuildingUpgrade(build, p); }else if ((build.getLevelUpgradeFinish().getDate().getTime()) < (java.lang.System.currentTimeMillis())) { frontend.GamePlay.reduceResourceForBuildingUpgrade(build, p); }else { throw new frontend.GamePlayException((\"ERROR: An upgrade of this building is already in progress! It will finish on \" + (build.getLevelUpgradeFinish().getDate()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8258/buggy-version/src.frontend.GamePlay.java", "BodyUseAPI": ["frontend.GamePlay.reduceResourceForBuildingUpgrade(entities.Building,entities.Participation)", "build.getLevelUpgradeFinish().getDate()", "build.getLevelUpgradeFinish().getDate()", "frontend.GamePlay.reduceResourceForBuildingUpgrade(entities.Building,entities.Participation)", "build.getLevelUpgradeFinish().getDate().getTime()", "entities.Building.getLevelUpgradeFinish()", "entities.Building.getLevelUpgradeFinish()"], "Fixed commit": "4897ce88709e520f23e7df5a5139165ced84648d", "Url": "https://api.github.com/repos/tobiasg28/Uni-Zeugs-TSD", "Date": "2011-06-12T10:18:25Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!jsonObjectParentFound) { parentTypeParametersInfo = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/261/buggy-version/processor.src.main.java.com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor.java", "BodyUseAPI": [], "Fixed commit": "ea73ea595e1b6798c7f18785b90518167aab36d6", "Url": "https://api.github.com/repos/ZuZuK/LoganSquare", "Date": "2017-02-27T11:59:02Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["baseDao.getYayinDao().queryBuilder().where(YayinDao.Properties.Yayin_id.eq(yayin.getYayin_id())).list()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((yayinList == null) || ((yayinList.size()) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8733/buggy-version/src.com.tepav.reader.services.ReadingListService.java", "BodyUseAPI": [], "Fixed commit": "995498ea6e53c2d337dcb30dcd052027137bbef9", "Url": "https://api.github.com/repos/kanilturgut/reader", "Date": "2014-02-16T22:42:14Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["baseDao.getGunlukDao().queryBuilder().where(GunlukDao.Properties.Gunluk_id.eq(gunluk.getGunluk_id())).list()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((gunlukList == null) || ((gunlukList.size()) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8733/buggy-version/src.com.tepav.reader.services.ReadingListService.java", "BodyUseAPI": [], "Fixed commit": "995498ea6e53c2d337dcb30dcd052027137bbef9", "Url": "https://api.github.com/repos/kanilturgut/reader", "Date": "2014-02-16T22:42:14Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["baseDao.getHaberDao().queryBuilder().where(HaberDao.Properties.Haber_id.eq(haber.getHaber_id())).list()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((haberList == null) || ((haberList.size()) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8733/buggy-version/src.com.tepav.reader.services.ReadingListService.java", "BodyUseAPI": [], "Fixed commit": "995498ea6e53c2d337dcb30dcd052027137bbef9", "Url": "https://api.github.com/repos/kanilturgut/reader", "Date": "2014-02-16T22:42:14Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Window.Location.getPort()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((port != null) && ((port.length()) > 1)) { urlBuilder.setPort(java.lang.Integer.parseInt(port)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3788/buggy-version/web-app.src.main.java.com.preferanser.client.application.mvp.dialog.drawing.DrawingsDialogPresenter.java", "BodyUseAPI": ["com.google.gwt.http.client.UrlBuilder.setPort(int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "af0b7b365daa8c74d57291f6bf2def4b5735be84", "Url": "https://api.github.com/repos/Unisay/preferanser", "Date": "2014-05-31T19:19:28Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((rows.size()) == 0) { temp[0] = \"\u7121\"; temp[1] = \"0%\"; }else { temp = rows.get(0).text().split(\" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5233/buggy-version/app.src.main.java.com.james.cpc.GasPredictionParser.java", "BodyUseAPI": ["rows.get(0).text()", "org.jsoup.select.Elements.get(int)", "rows.get(0).text().split(java.lang.String)"], "Fixed commit": "6daa622e138c6e7082dd0c5f9cd189a5971bb1cf", "Url": "https://api.github.com/repos/empirejames/CPC", "Date": "2017-11-27T01:15:12Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (excludedAttributes.equals(\"\")) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6233/buggy-version/modules.charon-core.src.main.java.org.wso2.charon.core.v2.utils.codeutils.SearchRequest.java", "BodyUseAPI": [], "Fixed commit": "ee8b54b09247c4ded35e9933b146c4222189071f", "Url": "https://api.github.com/repos/wso2/charon", "Date": "2016-12-06T15:33:00Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (attributes.equals(\"\")) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6233/buggy-version/modules.charon-core.src.main.java.org.wso2.charon.core.v2.utils.codeutils.SearchRequest.java", "BodyUseAPI": [], "Fixed commit": "ee8b54b09247c4ded35e9933b146c4222189071f", "Url": "https://api.github.com/repos/wso2/charon", "Date": "2016-12-06T15:33:00Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((issue.categories) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8377/buggy-version/5calls.app.src.main.java.org.a5calls.android.a5calls.controller.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4beebd48cd3d396c29c7e7c576e7e22fa02b2f3a", "Url": "https://api.github.com/repos/bryansills/5calls-android", "Date": "2017-09-26T01:44:40Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (metadata.isNeedToBeUpdated()) { metadata.checkMetadataStream(resultBuilder, config.getValidationResult().getPDFAFlavour()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7423/buggy-version/metadata-fixer.src.main.java.org.verapdf.metadata.fixer.impl.MetadataFixerImpl.java", "BodyUseAPI": ["org.verapdf.metadata.fixer.entity.Metadata.checkMetadataStream(MetadataFixerResultImpl.Builder,config.getValidationResult().getPDFAFlavour())"], "Fixed commit": "e8451df22dee0cb6f0529d9209727ced941e0434", "Url": "https://api.github.com/repos/BezrukovM/veraPDF-library", "Date": "2016-02-22T10:06:04Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.facebook.presto.spi.type.Type>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentFromType.equals(com.facebook.presto.operator.scalar.UNKNOWN)) { body.append(blockBuilder.invoke(\"appendNull\", com.facebook.presto.spi.block.BlockBuilder.class).pop()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8204/buggy-version/presto-main.src.main.java.com.facebook.presto.operator.scalar.RowToRowCast.java", "BodyUseAPI": [], "Fixed commit": "14caee1b40a41e3c64dd665cb57688941d1c20ee", "Url": "https://api.github.com/repos/suketukvakharia/presto", "Date": "2016-06-21T23:00:24Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["arlocros.ComputePose.computePose(org.opencv.core.Mat,org.opencv.core.MatOfDouble,org.opencv.core.Mat)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!hasPose) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4307/buggy-version/src.main.java.arlocros.ArMarkerPoseEstimator.java", "BodyUseAPI": [], "Fixed commit": "80e8bbf81b2043d8992220e959e7b374d8688789", "Url": "https://api.github.com/repos/hoangtungdinh/ARLocROS", "Date": "2017-01-08T21:49:58Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tiedReservations == 0) { for (carrental.Maintenance maintenance : carrental.CarRental.getInstance().requestMaintenances()) { if ((maintenance.getVehicleID()) == (vehicleToView.getID())) { carrental.CarRental.getInstance().deleteMaintenance(maintenance.getID()); carrental.CarRental.getInstance().appendLog(((((\"Maintenance #\" + (maintenance.getID())) + \" (tied to \\\"\") + (vehicleToView.getDescription())) + \"\\\") deleted from the database.\")); } } carrental.CarRental.getInstance().deleteVehicle(vehicleToView.getID()); carrental.CarRental.getInstance().appendLog(((\"Vehicle \\\"\" + (vehicleToView.getDescription())) + \"\\\" deleted from the database.\")); vehicleList = carrental.CarRental.getInstance().requestVehicles(); showListPanel(); }else { carrental.CarRental.getInstance().appendLog(((((\"Vehicle \\\"\" + (vehicleToView.getDescription())) + \"\\\" cannot be deleted as it has \") + tiedReservations) + \" reservation(s). Rearrange them first.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5694/buggy-version/src.carrental.VehiclePanel.java", "BodyUseAPI": ["carrental.CarRental.getInstance().appendLog(((((\"Vehicle \\\"\" + (vehicleToView.getDescription())) + \"\\\" cannot be deleted as it has \") + tiedReservations) + \" reservation(s). Rearrange them first.\"))"], "Fixed commit": "95c158bc20e7ec76cdda56dd22132861636265ce", "Url": "https://api.github.com/repos/CNN/CarRental", "Date": "2011-12-16T15:05:53Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.exists())) { file.createNewFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7245/buggy-version/app.src.main.java.com.threshold.securewebapi.MainActivity.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "45bb3f55033c59fc67424dd053898aefba2cee1b", "Url": "https://api.github.com/repos/wind0ws/SecureWebApi", "Date": "2015-12-31T03:30:04Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.motechproject.nms.masterdata.service.LanguageLocationCodeService.findLLCByCode(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (record != null) { response.setCircle(record.getCircleCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2606/buggy-version/kilkari.src.main.java.org.motechproject.nms.kilkari.service.impl.UserDetailsServiceImpl.java", "BodyUseAPI": ["org.motechproject.nms.masterdata.domain.LanguageLocationCode.getCircleCode()", "org.motechproject.nms.kilkari.dto.response.SubscriberDetailApiResponse.setCircle(record.getCircleCode())"], "Fixed commit": "401594027829e83b6419bc462f3d706f7d2e5201", "Url": "https://api.github.com/repos/motech-implementations/bbc-nms", "Date": "2015-04-02T05:47:24Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((isLeftPressed) || (isVanillaKeyPressed(mc.gameSettings.keyBindRight))) { if (skills.hasSkill(SkillBase.spinAttack)) { ((zeldaswordskills.skills.sword.SpinAttack) (skills.getPlayerSkill(SkillBase.spinAttack))).keyPressed((isLeftPressed ? mc.gameSettings.keyBindLeft : mc.gameSettings.keyBindRight), player); } if ((skills.hasSkill(SkillBase.dodge)) && (player.onGround)) { ((zeldaswordskills.skills.sword.Dodge) (skills.getPlayerSkill(SkillBase.dodge))).keyPressed((isLeftPressed ? mc.gameSettings.keyBindLeft : mc.gameSettings.keyBindRight), player); } }else if ((isVanillaKeyPressed(mc.gameSettings.keyBindBack)) && (skills.hasSkill(SkillBase.parry))) { ((zeldaswordskills.skills.sword.Parry) (skills.getPlayerSkill(SkillBase.parry))).keyPressed(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/463/buggy-version/src.main.java.zeldaswordskills.handler.TargetingTickHandler.java", "BodyUseAPI": ["((zeldaswordskills.skills.sword.Dodge) (skills.getPlayerSkill(SkillBase.dodge))).keyPressed((isLeftPressed ? mc.gameSettings.keyBindLeft : mc.gameSettings.keyBindRight),net.minecraft.entity.player.EntityPlayer)", "((zeldaswordskills.skills.sword.SpinAttack) (skills.getPlayerSkill(SkillBase.spinAttack))).keyPressed((isLeftPressed ? mc.gameSettings.keyBindLeft : mc.gameSettings.keyBindRight),net.minecraft.entity.player.EntityPlayer)", "zeldaswordskills.handler.TargetingTickHandler.isVanillaKeyPressed(mc.gameSettings.keyBindBack)"], "Fixed commit": "27793375573324fdb0b68b2c3a9b2a34c83bae66", "Url": "https://api.github.com/repos/coolAlias/ZeldaSwordSkills-1.6.4", "Date": "2014-03-24T09:31:42Z"},
{"Line": "=>2203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cls != curCls) idxName = ((cls.getSimpleName()) + \"_\") + idxName;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6541/buggy-version/modules.core.src.main.java.org.apache.ignite.configuration.CacheConfiguration.java", "BodyUseAPI": ["java.lang.Class<?>.getSimpleName()"], "Fixed commit": "d465f6c69dcfddc944a2974c364eabe51f8d98aa", "Url": "https://api.github.com/repos/gridgain/apache-ignite", "Date": "2017-04-19T16:44:30Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!match) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4505/buggy-version/src.main.java.imagej.ops.DefaultOpService.java", "BodyUseAPI": [], "Fixed commit": "4794b79c3017de1d1086009bcccb88d91d56e13c", "Url": "https://api.github.com/repos/imagej/imagej-ops", "Date": "2014-03-07T20:18:32Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((datas == null) || ((datas.length) < 4)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5781/buggy-version/app.src.main.java.com.carelife.infogo.utils.Tools.java", "BodyUseAPI": [], "Fixed commit": "349cb58af7daed6a41754a056aad95f997a608bc", "Url": "https://api.github.com/repos/chenzhu33/InfoGo", "Date": "2016-10-22T10:09:43Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.lambdaj.Lambda.filter(ch.lambdaj.Lambda.having(ch.lambdaj.Lambda.on(org.motechproject.mrs.model.Attribute.class).name(), equalTo(searchAttribute)),filteredMRSUser.getPerson().getAttributes())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((org.apache.commons.collections.CollectionUtils.isNotEmpty(attributeSearchResults)) && (attributeSearchResults.get(0).value().trim().equalsIgnoreCase(searchCriteria))) { filteredList.add(filteredMRSUser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/573/buggy-version/ghana-national-core.src.main.java.org.motechproject.ghana.national.service.StaffService.java", "BodyUseAPI": [], "Fixed commit": "bb4ca6533f7bdf6d5da74bf3fec3ee6b034dc89a", "Url": "https://api.github.com/repos/motech/GHANA-National", "Date": "2011-12-23T09:39:56Z"},
{"Line": "=>3362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (id < 0) java.lang.System.out.println(((((((id + \" \") + hash) + \" \") + code) + \" \") + (java.lang.Math.abs(-2147483648))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1926/buggy-version/src.parser.DependencyPipe.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "2b576c9cc52df9c2fade3482f1cc1931161dd8e0", "Url": "https://api.github.com/repos/taolei87/RBGParser", "Date": "2015-01-29T17:42:52Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getSystemService(Context.JOB_SCHEDULER_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (js != null) { for (android.app.job.JobInfo ji : js.getAllPendingJobs()) { android.os.PersistableBundle extras = ji.getExtras(); com.owncloud.android.db.OCUpload upload = new com.owncloud.android.db.OCUpload(extras.getString(\"filePath\"), extras.getString(\"remotePath\"), extras.getString(\"account\")); list.add(upload); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7951/buggy-version/src.com.owncloud.android.datamodel.UploadsStorageManager.java", "BodyUseAPI": ["android.app.job.JobScheduler.getAllPendingJobs()"], "Fixed commit": "e92f94161e1819e55f94e5f83776be1d164fa20e", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-02-06T22:13:47Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (approx == 0.0F) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5401/buggy-version/event-direct-mts.mts-event-clustering.src.main.java.edu.whu.cs.nlp.mts.clustering.CalculateSimilarityThread.java", "BodyUseAPI": [], "Fixed commit": "27abf914091c136df703920c780c01d238acb0ee", "Url": "https://api.github.com/repos/plotor/event-direct-mts", "Date": "2015-11-11T11:43:33Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(playerHasJumpedOffAirplane)) { dat367.falling.platform_abstraction.RenderQueue.getDefault().addTask(new dat367.falling.platform_abstraction.ModelRenderTask(introNoteModel, position, new dat367.falling.math.Rotation(), new dat367.falling.math.Vector(1, 1, 1))); dat367.falling.platform_abstraction.RenderQueue.getDefault().addTask(new dat367.falling.platform_abstraction.ModelRenderTask(scoringNoteModel, position, new dat367.falling.math.Rotation(), new dat367.falling.math.Vector(1, 1, 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1807/buggy-version/core.src.dat367.falling.core.Airplane.java", "BodyUseAPI": [], "Fixed commit": "aac833e8ec4d18f5a1bc6e4033d7c28f4d05ba15", "Url": "https://api.github.com/repos/Lajsyl/Falling", "Date": "2016-05-28T20:17:19Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.hashCode) == null) { this.hashCode = this.getStringRepresentation().hashCode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1417/buggy-version/src.dna.updates.update.Update.java", "BodyUseAPI": [], "Fixed commit": "c594190168deccf6f714cda36d1def08de5f62cd", "Url": "https://api.github.com/repos/NicoHaase/DNA", "Date": "2013-10-08T20:20:54Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pl.kamilrosinski.simulation.impl.Calendar.getCurrentDate().equals(java.time.LocalDate.of(2013, 2, 21))) { buyShares(\"TPSA\", 100L); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2958/buggy-version/src.main.java.pl.kamilrosinski.client.strategy.impl.SimpleStrategyImpl.java", "BodyUseAPI": [], "Fixed commit": "4f81cae87c5452c47f535d48d34a96c6bbab6283", "Url": "https://api.github.com/repos/KamilRosinski/StockMarket", "Date": "2016-05-15T19:06:43Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pl.kamilrosinski.simulation.impl.Calendar.getCurrentDate().equals(java.time.LocalDate.of(2013, 6, 27))) { buyShares(\"JSW\", 100L); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2958/buggy-version/src.main.java.pl.kamilrosinski.client.strategy.impl.SimpleStrategyImpl.java", "BodyUseAPI": [], "Fixed commit": "4f81cae87c5452c47f535d48d34a96c6bbab6283", "Url": "https://api.github.com/repos/KamilRosinski/StockMarket", "Date": "2016-05-15T19:06:43Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pl.kamilrosinski.simulation.impl.Calendar.getCurrentDate().equals(java.time.LocalDate.of(2013, 4, 11))) { buyShares(\"TPSA\", 100L); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2958/buggy-version/src.main.java.pl.kamilrosinski.client.strategy.impl.SimpleStrategyImpl.java", "BodyUseAPI": [], "Fixed commit": "4f81cae87c5452c47f535d48d34a96c6bbab6283", "Url": "https://api.github.com/repos/KamilRosinski/StockMarket", "Date": "2016-05-15T19:06:43Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pl.kamilrosinski.simulation.impl.Calendar.getCurrentDate().equals(java.time.LocalDate.of(2013, 9, 20))) { sellShares(\"JSW\", purchasedShareService.findPurchasedShareByCompany(\"JSW\").getAmount()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2958/buggy-version/src.main.java.pl.kamilrosinski.client.strategy.impl.SimpleStrategyImpl.java", "BodyUseAPI": [], "Fixed commit": "4f81cae87c5452c47f535d48d34a96c6bbab6283", "Url": "https://api.github.com/repos/KamilRosinski/StockMarket", "Date": "2016-05-15T19:06:43Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pl.kamilrosinski.simulation.impl.Calendar.getCurrentDate().equals(java.time.LocalDate.of(2013, 11, 19))) { sellShares(\"TPSA\", purchasedShareService.findPurchasedShareByCompany(\"TPSA\").getAmount()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2958/buggy-version/src.main.java.pl.kamilrosinski.client.strategy.impl.SimpleStrategyImpl.java", "BodyUseAPI": [], "Fixed commit": "4f81cae87c5452c47f535d48d34a96c6bbab6283", "Url": "https://api.github.com/repos/KamilRosinski/StockMarket", "Date": "2016-05-15T19:06:43Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pl.kamilrosinski.simulation.impl.Calendar.getCurrentDate().equals(java.time.LocalDate.of(2013, 9, 19))) { sellShares(\"PGNIG\", purchasedShareService.findPurchasedShareByCompany(\"PGNIG\").getAmount()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2958/buggy-version/src.main.java.pl.kamilrosinski.client.strategy.impl.SimpleStrategyImpl.java", "BodyUseAPI": [], "Fixed commit": "4f81cae87c5452c47f535d48d34a96c6bbab6283", "Url": "https://api.github.com/repos/KamilRosinski/StockMarket", "Date": "2016-05-15T19:06:43Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pl.kamilrosinski.simulation.impl.Calendar.getCurrentDate().equals(java.time.LocalDate.of(2013, 4, 3))) { buyShares(\"PGNIG\", 20L); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2958/buggy-version/src.main.java.pl.kamilrosinski.client.strategy.impl.SimpleStrategyImpl.java", "BodyUseAPI": [], "Fixed commit": "4f81cae87c5452c47f535d48d34a96c6bbab6283", "Url": "https://api.github.com/repos/KamilRosinski/StockMarket", "Date": "2016-05-15T19:06:43Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pl.kamilrosinski.simulation.impl.Calendar.getCurrentDate().equals(java.time.LocalDate.of(2013, 5, 21))) { buyShares(\"PKOBP\", 50L); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2958/buggy-version/src.main.java.pl.kamilrosinski.client.strategy.impl.SimpleStrategyImpl.java", "BodyUseAPI": [], "Fixed commit": "4f81cae87c5452c47f535d48d34a96c6bbab6283", "Url": "https://api.github.com/repos/KamilRosinski/StockMarket", "Date": "2016-05-15T19:06:43Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((messages.size()) > 1) { return messages.get(1); }else { return messages.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/859/buggy-version/voipms-sms.src.main.java.net.kourlas.voipms_sms.model.Conversation.java", "BodyUseAPI": ["java.util.List<net.kourlas.voipms_sms.model.Message>.get(int)", "java.util.List<net.kourlas.voipms_sms.model.Message>.get(int)"], "Fixed commit": "c1443c38787b2abd4d2d795105b57f43cd19ff23", "Url": "https://api.github.com/repos/jeanfmartel/voipms-sms-client", "Date": "2015-10-28T21:58:38Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dspace.xoai.filter.DateUntilFilter.dateProvider.format(date).replace(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (format.substring(11, 19).equals(\"00:00:00\")) { format = ((format.substring(0, 11)) + \"23:59:59\") + (format.substring(19)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3374/buggy-version/dspace-oai.src.main.java.org.dspace.xoai.filter.DateUntilFilter.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.substring(int,int)"], "Fixed commit": "5e03ca359343a06a187f1e802f1e3a416f9126e7", "Url": "https://api.github.com/repos/ufal/clarin-dspace", "Date": "2015-04-10T06:21:55Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedTile) != null) selectedTile.isSelectedPath = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3262/buggy-version/src.com.team7.controller.PathSelectController.java", "BodyUseAPI": [], "Fixed commit": "789116ffcc26615a18657c2a36dd85f706a8761f", "Url": "https://api.github.com/repos/COP4331-Team7/Sprint2", "Date": "2017-03-04T19:26:15Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((file.isDown()) && (com.owncloud.android.ui.preview.PreviewTextFragment.canBePreviewed(file))) { secondFragment = null; }else secondFragment = new com.owncloud.android.ui.fragment.FileDetailFragment(file, getAccount());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1118/buggy-version/src.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "46ff60a9e760a760b478609bac68d45f8728488f", "Url": "https://api.github.com/repos/edsonluis/android", "Date": "2014-10-26T14:38:57Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.activity.FileDisplayActivity.chooseInitialSecondFragment(com.owncloud.android.datamodel.OCFile)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (secondFragment != null) { setSecondFragment(secondFragment); updateFragmentsVisibility(true); updateNavigationElementsInActionBar(file); }else { cleanSecondFragment(); if ((file.isDown()) && (com.owncloud.android.ui.preview.PreviewTextFragment.canBePreviewed(file))) startTextPreview(file); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1118/buggy-version/src.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": ["com.owncloud.android.ui.activity.FileDisplayActivity.setSecondFragment(android.support.v4.app.Fragment)"], "Fixed commit": "46ff60a9e760a760b478609bac68d45f8728488f", "Url": "https://api.github.com/repos/edsonluis/android", "Date": "2014-10-26T14:38:57Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (capabilitiesStringLengthInCharacters <= 0) { throw new de.pitkley.jmccs.win.VCPStringFormatException(\"Capability string is empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/68/buggy-version/src.main.java.de.pitkley.jmccs.win.WindowsMonitor.java", "BodyUseAPI": [], "Fixed commit": "36c7419eea9ce7f1d985e44f7a3ba380566fb52a", "Url": "https://api.github.com/repos/pitkley/jmccs-win", "Date": "2015-07-23T18:35:43Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.getActuatorByName(name)) != null) { return c.getActuatorByName(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7225/buggy-version/src.main.java.com.maschel.lca.device.Component.java", "BodyUseAPI": ["com.maschel.lca.device.Component.getActuatorByName(java.lang.String)"], "Fixed commit": "2dd01cb87a24cdbdc148ec6dc7a4910dfd5a4a44", "Url": "https://api.github.com/repos/maschel/LCADevice", "Date": "2016-11-09T13:19:10Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.getSensorByName(name)) != null) { return c.getSensorByName(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7225/buggy-version/src.main.java.com.maschel.lca.device.Component.java", "BodyUseAPI": ["com.maschel.lca.device.Component.getSensorByName(java.lang.String)"], "Fixed commit": "2dd01cb87a24cdbdc148ec6dc7a4910dfd5a4a44", "Url": "https://api.github.com/repos/maschel/LCADevice", "Date": "2016-11-09T13:19:10Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(CompetitorListActivity.mTwoPane)) startActivity(new android.content.Intent(getActivity(), it.forseti.votesmanager.activities.CompetitorListActivity.class));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/857/buggy-version/android.src.it.forseti.votesmanager.activities.CompetitorDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "3deda6a5da2a89e06fc3a9952adffd0bd3a8ab13", "Url": "https://api.github.com/repos/dturrina/votesmanager", "Date": "2016-01-14T08:31:17Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tetris.GameRunner.gameOver)) { tetris.GameRunner.tetrisDisplay.updateSassyVader(\"Quit\"); tetris.GameRunner.tetrisDisplay.endGame(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6578/buggy-version/Tetris.src.tetris.GameRunner.java", "BodyUseAPI": [], "Fixed commit": "dc477d91072d9730133f73743dc45912f8830f49", "Url": "https://api.github.com/repos/miso8263/COEN275", "Date": "2016-08-27T15:13:47Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (refDoc == null) { java.lang.System.err.println(((\"Problem with link, no refernce found for {\" + content) + \"}\")); return \"-- INVALID -- \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1469/buggy-version/src.main.java.org.cacert.policy.HTMLSynthesizer.java", "BodyUseAPI": [], "Fixed commit": "c8f3dcfc76389fbd561f1b315d39d78de052fcba", "Url": "https://api.github.com/repos/yellowant/cacert-policy-parser", "Date": "2016-02-14T13:00:40Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parts.length) != 2) { java.lang.System.err.println((\"Wrong format for description in line \" + lineN)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1469/buggy-version/src.main.java.org.cacert.policy.PolicyParser.java", "BodyUseAPI": [], "Fixed commit": "c8f3dcfc76389fbd561f1b315d39d78de052fcba", "Url": "https://api.github.com/repos/yellowant/cacert-policy-parser", "Date": "2016-02-14T13:00:40Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"182\".equals(boardID)) { appendTail = tk.djcrazy.MyCC98.EditActivity.XINLING_TAIL; }else if (!useCustomTail) { appendTail = tk.djcrazy.MyCC98.EditActivity.TAIL; }else { appendTail = (\"\\n\\n[right][color=gray]\" + customTailContent) + \"[/color][/right]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7239/buggy-version/app.src.tk.djcrazy.MyCC98.EditActivity.java", "BodyUseAPI": [], "Fixed commit": "4507b955fa2f3157deabeaded0d43d3e5f569208", "Url": "https://api.github.com/repos/djj0809/MyCC98", "Date": "2013-06-12T15:52:19Z"},
{"Line": "=>842", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!firstTime) { out.print((\" || state.kind == K_\" + n)); }else { firstTime = false; out.print((\" state.kind == K_\" + n)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3957/buggy-version/modules.wyil.src.wyone.io.JavaFileWriter.java", "BodyUseAPI": [], "Fixed commit": "b7fd368a515346fe8c00f9204902fe5df21e3d63", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2012-08-19T23:57:55Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (noOfChildren == 0) { noOfChildren = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7855/buggy-version/src.main.java.org.ivis.layout.LNode.java", "BodyUseAPI": [], "Fixed commit": "60de0d2d6a8f977425913f9c9741bdcae7e0a226", "Url": "https://api.github.com/repos/iVis-at-Bilkent/chilay", "Date": "2017-08-02T18:48:43Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((names.length) == 2) { autoFirstname = names[0].trim(); autoLastname = names[1].trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3275/buggy-version/app.src.main.java.org.telegram.android.login.ActivationController.java", "BodyUseAPI": [], "Fixed commit": "05ade5a790d29ef9675ffaa25a4ff96ef915821e", "Url": "https://api.github.com/repos/ex3ndr/telegram", "Date": "2013-12-29T00:02:44Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cornell.eickleapp.DatabaseHandler.getVarValuesForMonth(java.lang.String,java.util.Date)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (month_money != null) { month_money = cornell.eickleapp.DatabaseStore.sortByTime(month_money); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4902/buggy-version/DrinkingApp.src.cornell.eickleapp.DrinkCalendar.java", "BodyUseAPI": ["cornell.eickleapp.DatabaseStore.sortByTime(java.util.ArrayList<cornell.eickleapp.DatabaseStore>)"], "Fixed commit": "13fc795a7d5e8a9ae7a88c6278f892e0e546a01b", "Url": "https://api.github.com/repos/wraziens/INFO6130", "Date": "2014-03-25T01:42:45Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.hardware.Camera.getParameters()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (params.isAutoExposureLockSupported()) { params.setAutoExposureLock(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7724/buggy-version/app.src.main.java.uiuc.bioassay.camera.CameraActivity.java", "BodyUseAPI": ["Camera.Parameters.setAutoExposureLock(boolean)"], "Fixed commit": "b66b47f41ba07f208c1dd13aa17a289185e7ffe6", "Url": "https://api.github.com/repos/hle46/Camera", "Date": "2015-07-01T20:42:37Z"},
{"Line": "=>569", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.hardware.Camera.getParameters()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (params.isAutoWhiteBalanceLockSupported()) { params.setAutoWhiteBalanceLock(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7724/buggy-version/app.src.main.java.uiuc.bioassay.camera.CameraActivity.java", "BodyUseAPI": ["Camera.Parameters.setAutoWhiteBalanceLock(boolean)"], "Fixed commit": "b66b47f41ba07f208c1dd13aa17a289185e7ffe6", "Url": "https://api.github.com/repos/hle46/Camera", "Date": "2015-07-01T20:42:37Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(my_cvrs_to_audit.isEmpty())) { initializeRLAAlgorithm(); result = my_rla_algorithm.estimatedBallotsToAudit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2932/buggy-version/server.eclipse-project.src.main.java.us.freeandfair.corla.model.CountyDashboard.java", "BodyUseAPI": [], "Fixed commit": "dfd7457bde76dbe3713505f585bbb35f696d17a6", "Url": "https://api.github.com/repos/FreeAndFair/ColoradoRLA", "Date": "2017-08-15T01:20:42Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xmlpull.v1.XmlPullParser.getAttributeValue(<nulltype>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(xmlMsg.equals(\"\"))) { ToastMessage(xmlMsg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7929/buggy-version/app.src.main.java.edu.msu.kinggra1.teamswift_project2.RoundWaitActivity.java", "BodyUseAPI": ["edu.msu.kinggra1.teamswift_project2.RoundWaitActivity.2.ToastMessage(java.lang.String)"], "Fixed commit": "9cb57b7cca928cb0361a3e14f2fb4b406e285318", "Url": "https://api.github.com/repos/kinggra1/TeamSwift-Project2", "Date": "2015-04-17T20:01:32Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((documentHandler.getNumberOfPages()) == 0) { documentHandler.addBlankPage(firstPageMediaBox); }else { if (pageNumber > 1) { org.sejda.impl.sambox.EditTask.LOG.debug(\"Adding new page after page {}\", (pageNumber - 1)); documentHandler.addBlankPageAfter((pageNumber - 1)); }else { org.sejda.impl.sambox.EditTask.LOG.debug(\"Adding new page before page {}\", pageNumber); documentHandler.addBlankPageBefore(pageNumber); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8436/buggy-version/sejda-sambox.src.main.java.org.sejda.impl.sambox.EditTask.java", "BodyUseAPI": ["org.sejda.impl.sambox.component.PDDocumentHandler.addBlankPage(org.sejda.sambox.pdmodel.common.PDRectangle)", "org.sejda.impl.sambox.component.PDDocumentHandler.addBlankPageAfter(int)", "org.sejda.impl.sambox.component.PDDocumentHandler.addBlankPageBefore(int)"], "Fixed commit": "d3740dae66aea672be5ef56f5fcae7fb17e23c5b", "Url": "https://api.github.com/repos/torakiki/sejda", "Date": "2016-08-01T13:53:18Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pattern.isEmpty()) { i = j + 1; }else { i = j + (pattern.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8081/buggy-version/core.src.main.java.org.renjin.primitives.text.regex.FixedRE.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "dd2b11884f0d99310adcc9a75adbff80bfcab561", "Url": "https://api.github.com/repos/bedatadriven/renjin", "Date": "2013-11-07T21:41:22Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(<nulltype>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (updateString4 != null) { ld.update(row, 4, updateString4); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4181/buggy-version/src.BankApplication.BankGui.java", "BodyUseAPI": ["BankApplication.BankModel.update(int,int,java.lang.String)"], "Fixed commit": "5989385473b8c564c98a379eaf04acad3799e762", "Url": "https://api.github.com/repos/Johnsoed/Java-project-3", "Date": "2015-10-27T15:42:14Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.honu.tmdb.MoviePosterGridFragment.MovieGridRecyclerAdapter.MovieGridItemViewHolder.getAdapterPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (adapterPosition < (data.size())) { com.honu.tmdb.rest.Movie movie = data.get(adapterPosition); if ((mListener) != null) { mListener.onMovieSelected(movie, true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2273/buggy-version/app.src.main.java.com.honu.tmdb.MoviePosterGridFragment.java", "BodyUseAPI": ["java.util.ArrayList<com.honu.tmdb.rest.Movie>.get(int)"], "Fixed commit": "fb04d24d902d8178121751ca4424bc08e657985c", "Url": "https://api.github.com/repos/bdiegel/android-tmdb", "Date": "2015-08-22T19:32:59Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eol.globi.data.ReferenceUtil.defaultString(dataset.getDOI())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(doiTrimmed)) { citation = citationTrimmed; }else { citation = (citationTrimmed + (org.eol.globi.data.ReferenceUtil.separatorFor(citationTrimmed))) + doiTrimmed; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3642/buggy-version/eol-globi-data-sources.src.main.java.org.eol.globi.data.ReferenceUtil.java", "BodyUseAPI": [], "Fixed commit": "3921759f66d096c8cbcbf66313a40134e25d8230", "Url": "https://api.github.com/repos/jhpoelen/eol-globi-data", "Date": "2017-01-05T03:34:42Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((holder.mView) instanceof android.support.v7.widget.CardView) { android.support.v7.widget.CardView cardView = ((android.support.v7.widget.CardView) (holder.mView)); cardView.setCardBackgroundColor(phamsang.com.wftodo.Color.getCorlor(mContext, item.getColor())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3244/buggy-version/app.src.main.java.phamsang.com.wftodo.ToDoListActivity.TodoListAdapter.java", "BodyUseAPI": [], "Fixed commit": "a175f58f3fedcc7721092832a78d9e8b15e657c0", "Url": "https://api.github.com/repos/phamquangsang/WFTodo2", "Date": "2016-02-29T08:03:56Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((context) instanceof scal.io.liger.MainActivity)) { android.util.Log.d(TAG, \"can't update index item with title outside the context of liger main activity\"); }else { android.util.Log.e(TAG, ((\"can't update index item with title (no index item found for \" + (getSavedFileName())) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2330/buggy-version/lib.src.main.java.scal.io.liger.model.StoryPathLibrary.java", "BodyUseAPI": [], "Fixed commit": "2a6d23db48e12f1fce1da0c2787f93bc69f39f31", "Url": "https://api.github.com/repos/scalio/liger-prototype", "Date": "2014-12-11T01:15:15Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((context) instanceof scal.io.liger.MainActivity)) { android.util.Log.d(TAG, \"can't update index item with thumbnail path outside the context of liger main activity\"); }else { android.util.Log.e(TAG, ((\"can't update index item with thumbnail path (no index item found for \" + (getSavedFileName())) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2330/buggy-version/lib.src.main.java.scal.io.liger.model.StoryPathLibrary.java", "BodyUseAPI": [], "Fixed commit": "2a6d23db48e12f1fce1da0c2787f93bc69f39f31", "Url": "https://api.github.com/repos/scalio/liger-prototype", "Date": "2014-12-11T01:15:15Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,<nulltype>)", "android.content.SharedPreferences.getString(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((username != null) && (password != null)) { pandora.signIn(username, password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3976/buggy-version/src.com.aregner.android.pandoroid.PandoroidPlayer.java", "BodyUseAPI": ["com.aregner.android.pandoroid.PandoraRadioService.signIn(java.lang.String,java.lang.String)"], "Fixed commit": "f3eba7dc33efe350aaaa8edcade9965fa474c035", "Url": "https://api.github.com/repos/dylanPowers/pandoroid", "Date": "2012-06-01T01:11:03Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (qualified) { taskNames = org.netbeans.gradle.project.view.GradleActionProvider.toQualifiedTaskName(project, tasks); }else { taskNames = java.util.Arrays.asList(tasks); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5012/buggy-version/src.org.netbeans.gradle.project.view.GradleActionProvider.java", "BodyUseAPI": [], "Fixed commit": "df8f7b5debff38b8103f4bb5276f72b5e349a70e", "Url": "https://api.github.com/repos/cesarizu/netbeans-gradle-project", "Date": "2012-11-03T11:42:11Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v7.widget.RecyclerView.findChildViewUnder(e.getX(),e.getY())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (child != null) { int position = rv.getChildAdapterPosition(child); android.widget.Toast.makeText(getApplicationContext(), countries.get(position), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5885/buggy-version/RecyclerView.app.src.main.java.com.learn2crack.recyclerview.MainActivity.java", "BodyUseAPI": ["android.support.v7.widget.RecyclerView.getChildAdapterPosition(android.view.View)"], "Fixed commit": "acb6c7ac5c2d435ccc1fa01c081d3119fd1cf17f", "Url": "https://api.github.com/repos/Learn2Crack/recycler-view", "Date": "2016-02-17T16:50:47Z"},
{"Line": "=>548", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ittianyu.bottomnavigationviewex.BottomNavigationViewEx.getBottomNavigationItemViews()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == bottomNavigationItemViews) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/211/buggy-version/widget.src.main.java.com.ittianyu.bottomnavigationviewex.BottomNavigationViewEx.java", "BodyUseAPI": [], "Fixed commit": "27a32d6e23bb99121f592233c06d4965af4e52f5", "Url": "https://api.github.com/repos/ittianyu/BottomNavigationViewEx", "Date": "2017-06-29T10:18:19Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (fromUpgrade) { io.undertow.protocols.http2.Http2Channel.StreamHolder streamHolder = new io.undertow.protocols.http2.Http2Channel.StreamHolder(((io.undertow.protocols.http2.Http2StreamSinkChannel) (null))); streamHolder.sinkClosed = true; currentStreams.put(1, streamHolder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2565/buggy-version/core.src.main.java.io.undertow.protocols.http2.Http2Channel.java", "BodyUseAPI": [], "Fixed commit": "fe20f4df4c4c9a77300a963d164057a2528d2ac8", "Url": "https://api.github.com/repos/undertow-io/undertow", "Date": "2016-09-14T21:12:18Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((str.length()) > 0) { char carac = str.charAt(0); if ((carac == 'z') || (carac == 'Z')) { hero.move(0, (-1)); } if ((carac == 'q') || (carac == 'Q')) { hero.move((-1), 0); } if ((carac == 's') || (carac == 'S')) { hero.move(0, 1); } if ((carac == 'd') || (carac == 'D')) { hero.move(1, 0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2719/buggy-version/src.model.Game.java", "BodyUseAPI": ["java.lang.String.charAt(int)"], "Fixed commit": "1cb4588a4db5b3fa5cfcfa40177d22ad9b936cb3", "Url": "https://api.github.com/repos/heitzman5u/ACL2017_Tartiflotte", "Date": "2017-10-19T10:22:33Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sensor.isSelected()) { mainSensor.setSelected(true); mainSensor.setTimeOut(sensor.getTimeOut()); iRet++; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7449/buggy-version/src.main.java.sensor.producer.controller.HomeController.java", "BodyUseAPI": ["sensor.producer.data.Sensor.setTimeOut(sensor.getTimeOut())", "sensor.producer.data.Sensor.getTimeOut()"], "Fixed commit": "f466a75cbe1c7133e0043c68d61d8559aff25148", "Url": "https://api.github.com/repos/miihkael/MessageProducer", "Date": "2016-07-05T10:16:49Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((clusterIds.length) == 1) && ((clusterIds[0]) == (-1))) setPolymorphicClusterIds(new int[0]); else setPolymorphicClusterIds(clusterIds);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2164/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.schema.OClassImpl.java", "BodyUseAPI": ["com.orientechnologies.orient.core.metadata.schema.OClassImpl.setPolymorphicClusterIds(int[])"], "Fixed commit": "0111e79e4f7f99e506fd1c8a4c4c3aa1fccad548", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-06-17T11:27:36Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mSeriesGameStats.previousGameWonByFirstPlayer()) { if (mFirstPlayerTurn) { return \"P1\"; }else { return \"P2\"; } }else { if (mFirstPlayerTurn) { return \"P2\"; }else { return \"P1\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6252/buggy-version/app.src.main.java.com.batman.darknight.tictactoe.data.Board.java", "BodyUseAPI": [], "Fixed commit": "ee3427931b727e5fc85f36e1276890d1f012e415", "Url": "https://api.github.com/repos/cpclass/TicTacToe", "Date": "2017-04-06T03:53:39Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (reply == null) { android.widget.Toast.makeText(mContext, \"Unable to verify key. Are you connected to the internet?\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8674/buggy-version/app.src.main.java.com.itachi1706.hypixelstatistics.AsyncAPI.GetKeyInfoVerificationName.java", "BodyUseAPI": [], "Fixed commit": "6db7d067fbd48ea2551bf769e156ab96ef68794a", "Url": "https://api.github.com/repos/itachi1706/HypixelStatistics", "Date": "2014-12-22T12:57:14Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Float.parseFloat(tmp.getString(\"numRatings\"))) == 0) { AvgRating = java.lang.String.format(\"%.2f\", (0.0 / 0.0)); }else { AvgRating = java.lang.String.format(\"%.2f\", ((java.lang.Float.parseFloat(tmp.getString(\"totalRating\"))) / (java.lang.Float.parseFloat(tmp.getString(\"numRatings\"))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5366/buggy-version/workspace.TVTracker.src.com.example.tvtracker.Home.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "java.lang.Float.parseFloat(tmp.getString(\"totalRating\"))", "java.lang.Float.parseFloat(tmp.getString(\"numRatings\"))", "java.lang.String.format(java.lang.String,((java.lang.Float.parseFloat(tmp.getString(\"totalRating\"))) / (java.lang.Float.parseFloat(tmp.getString(\"numRatings\")))))", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "88f98769e004e4ab4ad91f6666f795eefb00493d", "Url": "https://api.github.com/repos/j-tigues/AndroidFinalProject", "Date": "2013-05-10T06:27:36Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (portRules != null) { for (io.cattle.platform.core.addon.PortRule portRule : portRules) { if ((portRule.getServiceId()) != null) { java.lang.Long svcId = java.lang.Long.valueOf(portRule.getServiceId()); this.port_rules.add(new io.cattle.platform.core.util.LBMetadataUtil.MetadataPortRule(portRule, services.get(svcId), stacks.get(services.get(svcId).getStackId()))); }else { this.port_rules.add(new io.cattle.platform.core.util.LBMetadataUtil.MetadataPortRule(portRule, null, null)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8020/buggy-version/code.iaas.model.src.main.java.io.cattle.platform.core.util.LBMetadataUtil.java", "BodyUseAPI": [], "Fixed commit": "7c240220fe1af2c1e0e8da0d4906e4a1663a0237", "Url": "https://api.github.com/repos/alena1108/cattle", "Date": "2016-10-29T05:43:54Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Arrays.copyOfRange(byte[],int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((int) (inBytes[0])) != 4) { header.setField(\"command\", new byte[]{ 99 }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6903/buggy-version/src.main.java.com.group7.eece411.A3.Protocol.java", "BodyUseAPI": [], "Fixed commit": "38c997410654d0f371fc75e8462bb2adf1e03dea", "Url": "https://api.github.com/repos/adamjberg/eece411_A3", "Date": "2015-03-07T02:12:39Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getHeader(\"key\")) != null) { target = com.group7.eece411.A3.Datastore.getInstance().getResponsibleNode(p.getHeader(\"key\")[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6903/buggy-version/src.main.java.com.group7.eece411.A3.RouteService.java", "BodyUseAPI": ["com.group7.eece411.A3.Datastore.getInstance().getResponsibleNode(p.getHeader(\"key\")[0])", "com.group7.eece411.A3.Packet.getHeader(java.lang.String)"], "Fixed commit": "38c997410654d0f371fc75e8462bb2adf1e03dea", "Url": "https://api.github.com/repos/adamjberg/eece411_A3", "Date": "2015-03-07T02:12:39Z"},
{"Line": "=>1659", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.gitblit.utils.StringUtils.isEmpty(model.name)) { model.name = repositoryName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1112/buggy-version/src.main.java.com.gitblit.GitBlit.java", "BodyUseAPI": [], "Fixed commit": "ea4769096f9f303964107e2c3d95c63857588fc5", "Url": "https://api.github.com/repos/gitblit/gitblit", "Date": "2013-03-29T15:14:42Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((inv.getWidth()) < 3) || ((inv.getHeight()) < 3)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3566/buggy-version/src.main.java.zornco.bedcraftbeyond.frames.stone.RecipeBedFrameStone.java", "BodyUseAPI": [], "Fixed commit": "581d05d88fdeae33b3c5edfc4d08ebe5e2024cb8", "Url": "https://api.github.com/repos/ZornTaov/BedcraftAndBeyond", "Date": "2016-07-27T01:24:51Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((partition.getPrimary()) != null) && ((partition.getPrimary().getStatistics()) != null)) { replicationStatistics.add(partition.getPrimary().getStatistics().getReplicationStatistics()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1236/buggy-version/src.main.java.com.gigaspaces.sbp.metrics.visitor.AbstractStatsVisitor.java", "BodyUseAPI": [], "Fixed commit": "6b528581554e81a86b6a9d7c3101def148708165", "Url": "https://api.github.com/repos/GigaSpaces-ProfessionalServices/AdminApiMonitor", "Date": "2014-09-16T08:49:11Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(removed)) saveListToSharedPreferences();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7108/buggy-version/EasyShopping.app.src.main.java.com.example.pk.easyshopping.Activities.ListDetails.java", "BodyUseAPI": [], "Fixed commit": "3708939f8d942548705b0170483f4d8a958e8079", "Url": "https://api.github.com/repos/mciezczak312/EasyShopping", "Date": "2017-06-25T16:28:46Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextStartNode < 0) { com.graphhopper.routing.lm.LandmarkStorage.LOGGER.warn((((\"next start node not found in big enough network of size \" + (subnetworkIds.size())) + \", first element is \") + (subnetworkIds.get(0)))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6844/buggy-version/core.src.main.java.com.graphhopper.routing.lm.LandmarkStorage.java", "BodyUseAPI": [], "Fixed commit": "098910beb85071601a8814236185472651f01755", "Url": "https://api.github.com/repos/graphhopper/graphhopper", "Date": "2016-12-12T22:38:42Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.deidentifier.arx.DataType.list(java.lang.Class<T>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (description.hasFormat()) { for (java.lang.String format : description.getExampleFormats()) { org.deidentifier.arx.DataType<T> type = description.newInstance(format, locale); double matching = ((double) (getNumConformingValues(column, type))) / distinct; if (matching >= threshold) { result.put(type, matching); } } }else { org.deidentifier.arx.DataType<T> type = description.newInstance(); double matching = ((double) (getNumConformingValues(column, type))) / distinct; if (matching >= threshold) { result.put(type, matching); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7092/buggy-version/src.main.org.deidentifier.arx.DataHandle.java", "BodyUseAPI": ["org.deidentifier.arx.DataType.DataTypeDescription<T>.newInstance(java.lang.String,java.util.Locale)", "org.deidentifier.arx.DataType.DataTypeDescription<T>.getExampleFormats()", "org.deidentifier.arx.DataType.DataTypeDescription<T>.newInstance()"], "Fixed commit": "c2fd89ac2904c034b35d66ad2df2d0d8a125b21a", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2015-02-08T13:51:26Z"},
{"Line": "=>867", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((auctionItemList) != null) && (auctionItemList.isSelectionEmpty())) { confirmCancelItem(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8179/buggy-version/src.gui.ContactPanel.java", "BodyUseAPI": [], "Fixed commit": "b08bff4f97044f137ab1bc3b0f864d11a6444208", "Url": "https://api.github.com/repos/360jmss/auctioncentral", "Date": "2016-12-06T04:37:54Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.ActivityManager.getRunningAppProcesses()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (runningAppProcesses != null) runningProcesses.addAll(runningAppProcesses);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/683/buggy-version/funf_v4.src.main.java.edu.mit.media.funf.probe.builtin.ProcessStatisticsProbe.java", "BodyUseAPI": ["java.util.ArrayList<android.app.ActivityManager.RunningAppProcessInfo>.addAll(java.util.List<android.app.ActivityManager.RunningAppProcessInfo>)"], "Fixed commit": "2c95bf805ad12271b6fa34e3b2560a2e9ed0e8f4", "Url": "https://api.github.com/repos/arcticahealth/funf-core-android", "Date": "2016-12-01T00:56:40Z"},
{"Line": "=>1407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((count < 0) && ((_model) instanceof org.zkoss.zul.ext.Pageable)) { org.zkoss.zul.ext.Pageable p = ((org.zkoss.zul.ext.Pageable) (_model)); int actpg = p.getActivePage(); int maxPageIndex = (p.getPageCount()) - 1; if (actpg > maxPageIndex) { p.setActivePage(maxPageIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6840/buggy-version/zul.src.org.zkoss.zul.Listbox.java", "BodyUseAPI": [], "Fixed commit": "122e13a5a20b1aef1e7442efe31e8cdd647c5ae4", "Url": "https://api.github.com/repos/christopher-szu/zk", "Date": "2016-05-11T05:22:04Z"},
{"Line": "=>1941", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRemove && ((_model) instanceof org.zkoss.zul.ext.Pageable)) { org.zkoss.zul.ext.Pageable p = ((org.zkoss.zul.ext.Pageable) (_model)); int actpg = p.getActivePage(); int maxPageIndex = (p.getPageCount()) - 1; if (actpg > maxPageIndex) { p.setActivePage(maxPageIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6840/buggy-version/zul.src.org.zkoss.zul.Listbox.java", "BodyUseAPI": [], "Fixed commit": "122e13a5a20b1aef1e7442efe31e8cdd647c5ae4", "Url": "https://api.github.com/repos/christopher-szu/zk", "Date": "2016-05-11T05:22:04Z"},
{"Line": "=>565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zkoss.zul.Grid.getModel()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isRemove && (model instanceof org.zkoss.zul.ext.Pageable)) { org.zkoss.zul.ext.Pageable p = ((org.zkoss.zul.ext.Pageable) (model)); int actpg = p.getActivePage(); int maxPageIndex = (p.getPageCount()) - 1; if (actpg > maxPageIndex) { p.setActivePage(maxPageIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6840/buggy-version/zul.src.org.zkoss.zul.Rows.java", "BodyUseAPI": [], "Fixed commit": "122e13a5a20b1aef1e7442efe31e8cdd647c5ae4", "Url": "https://api.github.com/repos/christopher-szu/zk", "Date": "2016-05-11T05:22:04Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zkoss.zul.Grid.getModel()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((count < 0) && (model instanceof org.zkoss.zul.ext.Pageable)) { org.zkoss.zul.ext.Pageable p = ((org.zkoss.zul.ext.Pageable) (model)); int actpg = p.getActivePage(); int maxPageIndex = (p.getPageCount()) - 1; if (actpg > maxPageIndex) { p.setActivePage(maxPageIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6840/buggy-version/zul.src.org.zkoss.zul.Rows.java", "BodyUseAPI": [], "Fixed commit": "122e13a5a20b1aef1e7442efe31e8cdd647c5ae4", "Url": "https://api.github.com/repos/christopher-szu/zk", "Date": "2016-05-11T05:22:04Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["BrygParser.ArgumentContext.argumentId()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (id != null) { name = id.getText(); }else { name = \"<unnamed>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/399/buggy-version/src.main.java.io.collap.bryg.compiler.parser.DebugVisitor.java", "BodyUseAPI": ["BrygParser.ArgumentIdContext.getText()"], "Fixed commit": "98eb7b14589f07dd0696cca66f92d7e8316f7e94", "Url": "https://api.github.com/repos/Collap/bryg", "Date": "2014-09-01T23:03:34Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.RadioGroup.findViewById(rbgVote.getCheckedRadioButtonId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (rb != null) { android.widget.Toast.makeText(getApplicationContext(), rb.getText().toString(), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3624/buggy-version/app.src.main.java.omrobbie.com.iakbeginner.ActivityRadioButton.java", "BodyUseAPI": ["rb.getText().toString()", "android.widget.Toast.makeText(getApplicationContext(), rb.getText().toString(), Toast.LENGTH_SHORT).show()", "android.widget.RadioButton.getText()", "android.widget.Toast.makeText(getApplicationContext(),rb.getText().toString(),Toast.LENGTH_SHORT)"], "Fixed commit": "29deae9e3b11ce595ae6f2f5e67aac71e1440830", "Url": "https://api.github.com/repos/omrobbie/IAK-Beginner", "Date": "2017-05-13T04:01:07Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRecyclerAdapter.getSelectedItemCount()) == 0) { mActionMode.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8503/buggy-version/app.src.main.java.com.example.sridhar.multipleselect.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5397def3273e0d78e599306354052d11bc39bfcd", "Url": "https://api.github.com/repos/ksridharpatro/MultipleSelect", "Date": "2016-11-04T12:54:13Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value != null) { o = java.lang.Double.parseDouble(((java.lang.String) (value))); }else { o = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/773/buggy-version/docdoku-server.docdoku-server-ejb.src.main.java.com.docdoku.server.dao.QueryDAO.java", "BodyUseAPI": [], "Fixed commit": "f0fc94bd4fc962d6e699ece8d0c7d35e1e0caa7f", "Url": "https://api.github.com/repos/docdoku/docdoku-plm", "Date": "2015-04-24T12:03:03Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/9124/buggy-version/microbat.src.main.microbat.codeanalysis.bytecode.ThisChecker.java", "BodyUseAPI": [], "Fixed commit": "4494e8188ff6a9d2e6eb4ecb0ac6175c42bc02d6", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2017-09-21T06:23:18Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jetbrains.mps.smodel.SReference.getResolveInfo()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (resolveInfo != null) { result = refScope.resolve(sourceNode, resolveInfo); if (result == null) { for (jetbrains.mps.smodel.SNode node : refScope.getAvailableElements(null)) { if (!(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.isInstanceOf(node, jetbrains.mps.util.NameUtil.nodeFQName(referentConcept)))) { continue; } if ((resolveInfo.equals(node.getName())) || (resolveInfo.equals(node.getProperty(\"nestedName\")))) { if (result == null) { result = node; }else { return false; } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/80/buggy-version/core.kernel.source_gen.jetbrains.mps.resolve.ScopeResolver.java", "BodyUseAPI": ["java.lang.String.equals(node.getName())", "java.lang.String.equals(node.getProperty(\"nestedName\"))", "jetbrains.mps.scope.Scope.resolve(jetbrains.mps.smodel.SNode,java.lang.String)"], "Fixed commit": "23123dbd9997b22d404db470646cb52812cf8301", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2012-09-27T15:01:22Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (quantity <= 0) { throw new java.lang.IllegalArgumentException(\"Price Per Piece should be a positive number.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/623/buggy-version/src.mjodatabase.MedicinePriceChangerGUI.java", "BodyUseAPI": [], "Fixed commit": "d4e22c11697f5a6558b3f30c48cbf3d0218483ff", "Url": "https://api.github.com/repos/PioCang/MJODatabase", "Date": "2015-05-12T16:14:25Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deadMeds.isEmpty()) { throw new java.lang.IllegalArgumentException(\"No such Medicine was found.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/623/buggy-version/src.mjodatabase.MedicinePriceChangerGUI.java", "BodyUseAPI": [], "Fixed commit": "d4e22c11697f5a6558b3f30c48cbf3d0218483ff", "Url": "https://api.github.com/repos/PioCang/MJODatabase", "Date": "2015-05-12T16:14:25Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arg.is(Tree.Kind.UNARY_MINUS)) { sign = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5976/buggy-version/java-checks.src.main.java.org.sonar.java.checks.InvalidDateValuesCheck.java", "BodyUseAPI": [], "Fixed commit": "ad44005c55f4574358b1b4309b05c09c2c4e8612", "Url": "https://api.github.com/repos/benzonico/sonar-java", "Date": "2015-02-11T15:26:00Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.bukkit.Bukkit.getWorld(\"uhc\")) != null) initialize();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/763/buggy-version/src.main.java.com.ttaylorr.uhc.pvp.PVPManagerPlugin.java", "BodyUseAPI": [], "Fixed commit": "51e802ac2cf93368f2e86aea42a4ed2f3fe4bfae", "Url": "https://api.github.com/repos/UltrahardcoreStats/PVPManager", "Date": "2014-01-21T11:03:22Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.artvisualstudio.PreferencesSingleton.getBackgroundPic()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(url.equals(\"night\"))) { java.io.File f = new java.io.File(url); d = android.graphics.drawable.Drawable.createFromPath(f.getAbsolutePath()); }else d = getResources().getDrawable(R.drawable.prof_background);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2934/buggy-version/app.src.main.java.com.example.artvisualstudio.MenuActivity.java", "BodyUseAPI": [], "Fixed commit": "1c8c72d786ab8d17a4ac13ca0ac3734a38790027", "Url": "https://api.github.com/repos/nazerke/maketApp", "Date": "2015-05-11T12:26:35Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isDataLeft) pendingSending = new byte[]{ };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6056/buggy-version/sdk.src.main.java.com.integreight.onesheeld.sdk.LeConnection.java", "BodyUseAPI": [], "Fixed commit": "4ccd5e7d798e143b9dcfd78b1792b5bcdc318bd1", "Url": "https://api.github.com/repos/Integreight/1Sheeld-Android-SDK", "Date": "2016-03-15T11:50:54Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((iWailaDataAccessor.getTileEntity()) instanceof com.dynious.refinedrelocation.tileentity.IRelocator)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3409/buggy-version/src.main.java.com.dynious.refinedrelocation.mods.waila.RelocatorHUDHandler.java", "BodyUseAPI": [], "Fixed commit": "8677290a4f092624e53745e9205c69fdce3d2763", "Url": "https://api.github.com/repos/Dynious/RefinedRelocation", "Date": "2015-04-09T14:47:52Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(expressionValue)) { if (org.apache.commons.lang.StringUtils.isEmpty(sInput)) { forward = elseForwardName; }else { forward = thenForwardName; } }else { if (sInput.equals(expressionValue)) { forward = thenForwardName; }else { forward = elseForwardName; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2676/buggy-version/core.src.main.java.nl.nn.adapterframework.pipes.XmlIf.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "d17aa8f175fab01a23e5e42e42c7244c89adac27", "Url": "https://api.github.com/repos/ibissource/iaf", "Date": "2016-09-13T13:42:36Z"},
{"Line": "=>770", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((serverResponse.has(\"error\")) && (serverResponse.getJSONObject(\"error\").has(\"message\"))) { android.util.Log.i(\"BranchSDK\", (\"Branch API Error: \" + (serverResponse.getJSONObject(\"error\").getString(\"message\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6312/buggy-version/Branch-SDK.src.io.branch.referral.Branch.java", "BodyUseAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)", "android.util.Log.i(java.lang.String,(\"Branch API Error: \" + (serverResponse.getJSONObject(\"error\").getString(\"message\"))))", "serverResponse.getJSONObject(\"error\").getString(java.lang.String)"], "Fixed commit": "baea9225a77b03758d9f693e7f48df25b960e1d9", "Url": "https://api.github.com/repos/BranchMetrics/Branch-Android-SDK", "Date": "2014-11-01T17:59:15Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (channel.isOpen()) { channel.write(res); }else { log.trace(\"Channel was closed, for sessionId: {}\", webSocketPacketMessage.getSessionId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2013/buggy-version/src.main.java.com.corundumstudio.socketio.SocketIOEncoder.java", "BodyUseAPI": ["org.jboss.netty.channel.Channel.write(org.jboss.netty.handler.codec.http.websocketx.WebSocketFrame)"], "Fixed commit": "b39adf0c03cf32df2fdef3a8ecf820f992099263", "Url": "https://api.github.com/repos/mrniko/netty-socketio", "Date": "2012-10-12T13:02:15Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pasteTerm) != null) pasteTerm.setEnabled(((canEdit && (!(termClip.getSources().isEmpty()))) && (termClip.canPaste(getFirstSelectedTerm(), selectedHierarchy))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3307/buggy-version/src.ui_main_panel.TermsTreePanel.java", "BodyUseAPI": [], "Fixed commit": "06dfd1c306c4615735a231f7ec34e23ebebe4c1b", "Url": "https://api.github.com/repos/openefsa/catalogue-browser", "Date": "2017-10-25T06:00:49Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pasteRootTerm) != null) pasteRootTerm.setEnabled((((canEdit && canPasteAsRoot) && (!(termClip.getSources().isEmpty()))) && (termClip.canPaste(selectedHierarchy, selectedHierarchy))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3307/buggy-version/src.ui_main_panel.TermsTreePanel.java", "BodyUseAPI": [], "Fixed commit": "06dfd1c306c4615735a231f7ec34e23ebebe4c1b", "Url": "https://api.github.com/repos/openefsa/catalogue-browser", "Date": "2017-10-25T06:00:49Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mode) == (name.abuchen.portfolio.ui.views.ChartConfigurator.Mode.STATEMENT_OF_ASSETS)) && ((series.getType()) == (name.abuchen.portfolio.model.Security.AssetClass.class))) { selectedSeries.add(series); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8191/buggy-version/name.abuchen.portfolio.ui.src.name.abuchen.portfolio.ui.views.ChartConfigurator.java", "BodyUseAPI": ["java.util.List<name.abuchen.portfolio.ui.views.ChartConfigurator.DataSeries>.add(name.abuchen.portfolio.ui.views.ChartConfigurator.DataSeries)"], "Fixed commit": "9c954539689eab8bfeadf4d86f2e07e722a764e2", "Url": "https://api.github.com/repos/buchen/portfolio", "Date": "2013-05-20T16:53:39Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (url.toString().contains(\"jar!\")) url = new java.net.URL(url.toString().substring(0, (((url.toString().length()) - (referPath.length())) - 2))); else url = new java.net.URL(url.toString().substring(0, ((url.toString().length()) - (referPath.length()))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5945/buggy-version/src.org.nutz.resource.Scans.java", "BodyUseAPI": [], "Fixed commit": "77c63ecc3e2ec7510ff24cccec3566c043002502", "Url": "https://api.github.com/repos/007slm/nutz", "Date": "2012-04-26T02:07:56Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((enemy) != null) { enemyInFOV = ((enemy.isAlive()) && (com.dit599.customPD.levels.Level.fieldOfView[enemy.pos])) && ((enemy.invisible) <= 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6942/buggy-version/src.com.dit599.customPD.actors.mobs.Mob.java", "BodyUseAPI": [], "Fixed commit": "bb21d4b003c6c0c8fc778574c45eccdc53146359", "Url": "https://api.github.com/repos/QuattroX/pixel-dungeon", "Date": "2015-01-25T23:14:27Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dbModel) != null) { dbModel.saveFeeds(feeds); dbModel.loadAllFeeds(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4995/buggy-version/Code.RSS-Feeder.app.src.main.java.com.projektarbeit.rss_feeder.control.Folder.java", "BodyUseAPI": [], "Fixed commit": "2a4b440082a93b6806eead4002cd3cd927a65765", "Url": "https://api.github.com/repos/yellowmoneybank/RSS-Feeder", "Date": "2017-07-11T09:24:38Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ('-' == nextChar) { return new ch.bfh.bti7064.parser.state.Q5(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7392/buggy-version/PrologParser.src.main.java.ch.bfh.bti7064.parser.state.Q1.java", "BodyUseAPI": [], "Fixed commit": "731764108739f6a89cc76530fefa0617125bb4ce", "Url": "https://api.github.com/repos/lants1/ch.bfh.bti7064.w2013.p.prologparser", "Date": "2014-01-17T10:11:14Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ch.bfh.bti7064.parser.core.ParserHelper.isSpecialCase(nextChar)) { return new ch.bfh.bti7064.parser.state.Q1(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7392/buggy-version/PrologParser.src.main.java.ch.bfh.bti7064.parser.state.Q5.java", "BodyUseAPI": [], "Fixed commit": "731764108739f6a89cc76530fefa0617125bb4ce", "Url": "https://api.github.com/repos/lants1/ch.bfh.bti7064.w2013.p.prologparser", "Date": "2014-01-17T10:11:14Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mobicents.servlet.restcomm.provisioning.number.api.PhoneNumberSearchFilters.getFilterPattern()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (filterPattern != null) { filterPatternString = filterPattern.toString().replaceAll(\"[^\\\\d]\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4231/buggy-version/restcomm.restcomm.provisioning.number.nexmo.src.main.java.org.mobicents.servlet.restcomm.provisioning.number.nexmo.NexmoPhoneNumberProvisioningManager.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.util.regex.Pattern.toString()"], "Fixed commit": "fc858952319d81c874878d1fe61bd9e7d0e34717", "Url": "https://api.github.com/repos/RestComm/Restcomm-Connect", "Date": "2015-10-29T13:54:18Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.mobicents.servlet.restcomm.provisioning.number.nexmo.NexmoPhoneNumberProvisioningManager.logger.isDebugEnabled()) { org.mobicents.servlet.restcomm.provisioning.number.nexmo.NexmoPhoneNumberProvisioningManager.logger.debug((\"searchPattern simplified for nexmo \" + filterPatternString)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4231/buggy-version/restcomm.restcomm.provisioning.number.nexmo.src.main.java.org.mobicents.servlet.restcomm.provisioning.number.nexmo.NexmoPhoneNumberProvisioningManager.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "fc858952319d81c874878d1fe61bd9e7d0e34717", "Url": "https://api.github.com/repos/RestComm/Restcomm-Connect", "Date": "2015-10-29T13:54:18Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["extractcores.assignmentproblem.AssignmentInformation.getAssignment(int,int)", "extractcores.assignmentproblem.AssignmentInformation.getAssignment(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((assignment == null) && (solutionAssignment != null)) { solutionCoreCount++; java.lang.System.out.print(((\"Missing core: ID = \" + (java.util.Arrays.toString(solutionAssignment.getCore().getIds()))) + \".\")); }else if ((assignment != null) && (solutionAssignment == null)) { solutionGapCount++; java.lang.System.out.print(((\"Assigned core into gap: ID = \" + (java.util.Arrays.toString(assignment.getCore().getIds()))) + \".\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2026/buggy-version/ExtractCores.src.extractcores.CoreExtractor.java", "BodyUseAPI": ["extractcores.assignmentproblem.Assignment.getCore()", "assignment.getCore().getIds()", "java.util.Arrays.toString(solutionAssignment.getCore().getIds())", "solutionAssignment.getCore().getIds()", "extractcores.assignmentproblem.Assignment.getCore()", "java.io.PrintStream.print(((\"Missing core: ID = \" + (java.util.Arrays.toString(solutionAssignment.getCore().getIds()))) + \".\"))", "java.io.PrintStream.print(((\"Assigned core into gap: ID = \" + (java.util.Arrays.toString(assignment.getCore().getIds()))) + \".\"))", "java.util.Arrays.toString(assignment.getCore().getIds())"], "Fixed commit": "bf4ae700429ee6a7150c929f2dc8e8af915e8747", "Url": "https://api.github.com/repos/Runner-Runner/ai-tumor-detection", "Date": "2017-08-11T08:16:38Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cellValues.size()) == (ids.size())) { for (int i = 0; i < (ids.size()); i++) { com.datastax.driver.core.ColumnMetadata column = tableMetadata.getColumn(ids.get(i)); if (column == null) { result = com.stratio.meta.common.result.Result.createValidationErrorResult(((((\"Column [\" + (ids.get(i))) + \"] not found in table [\") + (tableMetadata.getName())) + \"]\")); } } if (!(result.hasError())) { updateTermClass(tableMetadata); for (int index = 0; index < (cellValues.size()); index++) { cm = tableMetadata.getColumn(ids.get(index)); if (cm != null) { com.stratio.meta.core.structures.Term<?> t = com.stratio.meta.core.structures.Term.class.cast(cellValues.get(index)); if (!(cm.getType().asJavaClass().equals(t.getTermClass()))) { result = com.stratio.meta.common.result.Result.createValidationErrorResult(((((((((\"Column \" + (ids.get(index))) + \" of type \") + (cm.getType().asJavaClass())) + \" does not accept \") + (t.getTermClass())) + \" values (\") + (cellValues.get(index))) + \")\")); } }else { result = com.stratio.meta.common.result.Result.createValidationErrorResult((((\"Column \" + (ids.get(index))) + \" not found in \") + (tableMetadata.getName()))); } } } }else { result = com.stratio.meta.common.result.Result.createValidationErrorResult(\"Number of columns and values does not match.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/111/buggy-version/meta-core.src.main.java.com.stratio.meta.core.statements.InsertIntoStatement.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "com.stratio.meta.common.result.Result.createValidationErrorResult((((\"Column \" + (ids.get(index))) + \" not found in \") + (tableMetadata.getName())))", "com.stratio.meta.common.result.Result.createValidationErrorResult(((((((((\"Column \" + (ids.get(index))) + \" of type \") + (cm.getType().asJavaClass())) + \" does not accept \") + (t.getTermClass())) + \" values (\") + (cellValues.get(index))) + \")\"))", "com.datastax.driver.core.TableMetadata.getColumn(java.lang.String)", "com.datastax.driver.core.TableMetadata.getColumn(java.lang.String)", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.size()", "com.stratio.meta.common.result.Result.createValidationErrorResult(((((\"Column [\" + (ids.get(i))) + \"] not found in table [\") + (tableMetadata.getName())) + \"]\"))", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.get(int)", "java.util.List<com.stratio.meta.core.structures.ValueCell<?>>.size()", "java.util.List<com.stratio.meta.core.structures.ValueCell<?>>.get(int)", "java.lang.Class.cast(cellValues.get(index))", "java.util.List<java.lang.String>.get(int)", "java.util.List<com.stratio.meta.core.structures.ValueCell<?>>.get(int)"], "Fixed commit": "a2cf7fd843cde3a8f89c53247550a4d235e9f63c", "Url": "https://api.github.com/repos/Stratio/stratio-meta", "Date": "2014-06-30T17:03:53Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adkControl) != null) { adkControl.disconnectAllPlayers(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3614/buggy-version/AndroidMain.AndroidMainApp.src.net.thiagoalz.hermeto.PadPanelActivity.java", "BodyUseAPI": [], "Fixed commit": "93509c805bc5f408acf2ce9d741d5106653158d1", "Url": "https://api.github.com/repos/thiagoalz/Hermeto", "Date": "2011-09-05T14:30:48Z"},
{"Line": "=>1968", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (propertyClass == (java.lang.String.class)) { writeNullFeatures = (SerializerFeature.WriteMapNullValue.getMask()) | (SerializerFeature.WriteNullStringAsEmpty.getMask()); }else if (java.lang.Number.class.isAssignableFrom(propertyClass)) { writeNullFeatures = (SerializerFeature.WriteMapNullValue.getMask()) | (SerializerFeature.WriteNullNumberAsZero.getMask()); }else if (java.util.Collection.class.isAssignableFrom(propertyClass)) { writeNullFeatures = (SerializerFeature.WriteMapNullValue.getMask()) | (SerializerFeature.WriteNullListAsEmpty.getMask()); }else if ((java.lang.Boolean.class) == propertyClass) { writeNullFeatures = (SerializerFeature.WriteMapNullValue.getMask()) | (SerializerFeature.WriteNullBooleanAsFalse.getMask()); }else { writeNullFeatures = SerializerFeature.WRITE_MAP_NULL_FEATURES; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4092/buggy-version/src.main.java.com.alibaba.fastjson.serializer.ASMSerializerFactory.java", "BodyUseAPI": ["java.lang.Class.isAssignableFrom(java.lang.Class<?>)", "java.lang.Class.isAssignableFrom(java.lang.Class<?>)"], "Fixed commit": "f9f345723d418c178d8dd06974a0558c6f675d98", "Url": "https://api.github.com/repos/FlakyTestDetection/fastjson", "Date": "2017-11-17T05:41:37Z"},
{"Line": "=>489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (experimentalMethods != null) { for (java.lang.String techniqueStr : experimentalMethods) { pdbHeader.setExperimentalTechnique(techniqueStr); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7166/buggy-version/biojava-structure.src.main.java.org.biojava.nbio.structure.io.mmtf.MmtfStructureReader.java", "BodyUseAPI": [], "Fixed commit": "5951780386b1ac80c283f0ecd556f1c11c70191d", "Url": "https://api.github.com/repos/sbliven/biojava-sbliven", "Date": "2017-06-15T01:10:24Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Main.RUN_WITH_TWO_ADDERS) { synchronized(adder2) { addSumToLimit(adder2); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3449/buggy-version/Multi-Threading.Synchronisation.java", "BodyUseAPI": [], "Fixed commit": "4a11b4e630263314b5f7d973328eb82340fef4a5", "Url": "https://api.github.com/repos/ayushr2/Blogs", "Date": "2017-12-28T08:34:45Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Main.RUN_WITH_TWO_ADDERS) addSumToLimit(adder2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3449/buggy-version/Multi-Threading.Synchronisation.java", "BodyUseAPI": [], "Fixed commit": "4a11b4e630263314b5f7d973328eb82340fef4a5", "Url": "https://api.github.com/repos/ayushr2/Blogs", "Date": "2017-12-28T08:34:45Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Main.RUN_WITH_TWO_ADDERS) addSumToLimit(adder2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3449/buggy-version/Multi-Threading.Synchronisation.java", "BodyUseAPI": [], "Fixed commit": "4a11b4e630263314b5f7d973328eb82340fef4a5", "Url": "https://api.github.com/repos/ayushr2/Blogs", "Date": "2017-12-28T08:34:45Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (opcode == (INVOKEVIRTUAL)) { com.github.cojac.instrumenters.ConversionContext cc = new com.github.cojac.instrumenters.ConversionContext(opcode, owner, name, desc); if (!(fpm.needsConversion(cc))) return false; fpm.proxyCall(mv, cc, true); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6816/buggy-version/src.main.java.com.github.cojac.instrumenters.ReplaceFloatsMethods.java", "BodyUseAPI": [], "Fixed commit": "5c83d4e98dd77cb804a846e33b174048e11a2d5b", "Url": "https://api.github.com/repos/Cojac/Cojac", "Date": "2016-03-24T18:03:59Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((raOperator.equals(\"!=\")) && (rbOperator.equals(\"=\"))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/934/buggy-version/RuleConflict.src.com.parser.Container.java", "BodyUseAPI": [], "Fixed commit": "a08d6b1eb078c35e22875ab3433e117b36ffcc08", "Url": "https://api.github.com/repos/Sriee/epi", "Date": "2017-12-14T21:43:05Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((actionRa.getOperator()) == (actionRb.getOperator())) && ((actionRa.getValue()) != (actionRb.getValue()))) { relationMap.put(Relation.NEGATIVE_ACTION, true); relationMap.put(Relation.TRIGGER_EVENT, true); }else { if (this.exclude(actionRa.getOperator().toString(), actionRa.getValue(), actionRb.getOperator().toString(), actionRb.getValue())) { relationMap.put(Relation.NEGATIVE_ACTION, true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/934/buggy-version/RuleConflict.src.com.parser.Container.java", "BodyUseAPI": ["actionRa.getOperator().toString()", "com.entity.Action.getValue()", "com.entity.Action.getValue()", "actionRb.getOperator().toString()", "com.entity.Action.getOperator()", "com.entity.Action.getOperator()", "com.parser.Container.exclude(actionRa.getOperator().toString(),actionRa.getValue(),actionRb.getOperator().toString(),actionRb.getValue())"], "Fixed commit": "a08d6b1eb078c35e22875ab3433e117b36ffcc08", "Url": "https://api.github.com/repos/Sriee/epi", "Date": "2017-12-14T21:43:05Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((raOperator.equals(\"=\")) && (rbOperator.equals(\"!=\"))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/934/buggy-version/RuleConflict.src.com.parser.Container.java", "BodyUseAPI": [], "Fixed commit": "a08d6b1eb078c35e22875ab3433e117b36ffcc08", "Url": "https://api.github.com/repos/Sriee/epi", "Date": "2017-12-14T21:43:05Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.seapip.thomas.huffman.huffman.TreeNode.unflatten(java.util.Queue<java.lang.Character>,java.util.Queue<java.lang.Boolean>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (tree != null) { leftNode = tree.getLeftNode(); rightNode = tree.getRightNode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4168/buggy-version/src.main.java.com.seapip.thomas.huffman.huffman.TreeNode.java", "BodyUseAPI": ["com.seapip.thomas.huffman.huffman.TreeNode.getRightNode()", "com.seapip.thomas.huffman.huffman.TreeNode.getLeftNode()"], "Fixed commit": "d036a4b2bf3f7472c730b8ac01696774afa27156", "Url": "https://api.github.com/repos/seahorsepip/Huffman_text_compression", "Date": "2017-09-25T19:40:39Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (feedId == null) { return this.restApi().getMetric(environmentId, metricId); }else { return this.restApi().getMetric(environmentId, feedId, metricId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7116/buggy-version/src.main.java.org.hawkular.client.inventory.InventoryClientImpl.java", "BodyUseAPI": ["this.restApi().getMetric(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "795e43cc9384ad33932b318da3eb750b97fbdb25", "Url": "https://api.github.com/repos/jkandasa/hawkular-java-client", "Date": "2015-06-18T13:17:49Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((main.getGlassPane().getMousePosition()) != null) at.jku.ssw.cmm.gui.popup.ComponentPopup.createPopUp(main, table, main.getGlassPane().getMousePosition().x, main.getGlassPane().getMousePosition().y, 250, 120, ImagePopup.SOUTH, 0.85);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5008/buggy-version/src.at.jku.ssw.cmm.gui.event.debug.ArrayPopupListener.java", "BodyUseAPI": ["at.jku.ssw.cmm.gui.GUImain.getGlassPane()", "at.jku.ssw.cmm.gui.GUImain.getGlassPane()", "main.getGlassPane().getMousePosition()", "main.getGlassPane().getMousePosition()", "at.jku.ssw.cmm.gui.popup.ComponentPopup.createPopUp(at.jku.ssw.cmm.gui.GUImain,javax.swing.JTable,main.getGlassPane().getMousePosition().x,main.getGlassPane().getMousePosition().y,int,int,ImagePopup.SOUTH,double)"], "Fixed commit": "5d4b5b17c7e472803c69cabdbc515f1f62a0117a", "Url": "https://api.github.com/repos/fabian1995/CMM", "Date": "2015-05-11T13:40:48Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6864/buggy-version/src.main.org.deidentifier.arx.ARXLattice.java", "BodyUseAPI": [], "Fixed commit": "e4cbbf00e92133bc68fb70a091952f6668d53632", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-03-24T21:27:55Z"},
{"Line": "=>579", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getOwner().isRemoved())) { getOwner().add(org.spout.vanilla.component.inventory.window.DefaultWindow.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4154/buggy-version/src.main.java.org.spout.vanilla.component.inventory.window.Window.java", "BodyUseAPI": [], "Fixed commit": "66a7a618fa00a4dcfd1b3be82e355a52aefc9384", "Url": "https://api.github.com/repos/VanillaDev/Vanilla", "Date": "2012-11-09T11:12:14Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((color) != null) { int mask = 0; for (final magic.model.MagicColor element : color) { mask += element.getMask(); } if (additionTo) { return flags | mask; }else { return mask; } }else { return flags; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1978/buggy-version/src.magic.model.action.MagicBecomesAction.java", "BodyUseAPI": [], "Fixed commit": "4dfbde3494055d4ee7f182ae027d99f2ca036e50", "Url": "https://api.github.com/repos/magarena/magarena", "Date": "2015-04-03T23:19:02Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["entityManager.createQuery(\"SELECT p FROM Position p WHERE p.device = :device AND p.speed > 0 ORDER BY time DESC\", org.traccar.web.server.model.Position.class).setParameter(\"device\", device).setMaxResults(1).getResultList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (position.isEmpty()) { position = entityManager.createQuery(\"SELECT p FROM Position p WHERE p.device = :device ORDER BY time ASC\", org.traccar.web.server.model.Position.class).setParameter(\"device\", device).setMaxResults(1).getResultList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5749/buggy-version/src.main.java.org.traccar.web.server.model.DataServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "14c87166c23d7d032c73769d8cc967ec6afefa78", "Url": "https://api.github.com/repos/jon-stumpf/traccar-web", "Date": "2014-11-09T19:36:53Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((main.getMainLayout().getCenter()) == null) || (!(main.getMainLayout().getCenter().getId().equals(\"scrollPane\")))) { try { main.showProductView(); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3849/buggy-version/src.iMat.controller.CategoriesPanelController.java", "BodyUseAPI": ["iMat.Main.showProductView()"], "Fixed commit": "4f8dab6265b3c95651a7419f6f64e4ae3dad6947", "Url": "https://api.github.com/repos/konglobemeralt/Project16", "Date": "2017-03-07T17:45:59Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Thread.currentThread()) != currentThread) { com.liferay.portal.kernel.cache.ThreadLocalCacheManager.clearAll(Lifecycle.REQUEST); com.liferay.portal.kernel.util.CentralizedThreadLocal.clearShortLivedThreadLocals(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7812/buggy-version/portal-service.src.com.liferay.portal.kernel.messaging.SerialDestination.java", "BodyUseAPI": [], "Fixed commit": "b672e0feced5cf136dbf620a329bb3bf1f538542", "Url": "https://api.github.com/repos/juangon/liferay-portal", "Date": "2015-04-16T16:05:31Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isComplete())) { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8843/buggy-version/civcraft.src.com.avrgaming.civcraft.structure.Mine.java", "BodyUseAPI": [], "Fixed commit": "073c1a8c9ca901c49a018b1bd1dc0aa3534ee985", "Url": "https://api.github.com/repos/ataranlen/civcraft", "Date": "2016-10-03T21:11:34Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isComplete())) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8843/buggy-version/civcraft.src.com.avrgaming.civcraft.structure.Mine.java", "BodyUseAPI": [], "Fixed commit": "073c1a8c9ca901c49a018b1bd1dc0aa3534ee985", "Url": "https://api.github.com/repos/ataranlen/civcraft", "Date": "2016-10-03T21:11:34Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultSet.wasNull()) { resultSetInt = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3336/buggy-version/src.com.mayhew3.gamesutil.mediaobject.FieldValueInteger.java", "BodyUseAPI": [], "Fixed commit": "aae53d077bab9a8cab6eb700cd2998a2803a1c95", "Url": "https://api.github.com/repos/mayhew3/MediaMogulData", "Date": "2016-03-03T10:18:22Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fc instanceof java.util.Collection) { ((java.util.Collection) (fc)).addAll(node.getChildValues(org.opengis.feature.simple.SimpleFeature.class)); }else { throw new java.lang.IllegalStateException(\"Please provide DefaultFeatureCollection or ListFeatureCollection\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4128/buggy-version/modules.extension.xsd.xsd-gml2.src.main.java.org.geotools.gml2.bindings.GMLAbstractFeatureCollectionTypeBinding.java", "BodyUseAPI": [], "Fixed commit": "03444941c64b474632c8ac10c51336d64c9b48a1", "Url": "https://api.github.com/repos/geotools/geotools", "Date": "2012-10-30T12:54:57Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (spDeviceSensors.getSelectedStrings().contains(Constants.GPS_SENSOR_NAME)) { if (!(zemris.fer.hr.inthingy.utils.MyUtils.isServiceRunning(zemris.fer.hr.inthingy.gps.GPSLocator.class, this))) { startService(gpsService); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6548/buggy-version/app.src.main.java.zemris.fer.hr.inthingy.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "fbce5438513db2af8a1f08d56744ca380bfa939e", "Url": "https://api.github.com/repos/WastedFront/IoThingy", "Date": "2016-05-23T11:27:34Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, com.cavisson.dto.ProfileKeywordsDTO>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dtoObj.getValue()) != null) { java.lang.String[] arr = dtoObj.getValue().split(\",\"); for (int i = 0; i < (arr.length); i++) { keywordsConfFile.append((((key + \"=\") + (arr[i])) + \";\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8553/buggy-version/src.main.java.com.cavisson.Utils.GenerateConfFile.java", "BodyUseAPI": ["dtoObj.getValue().split(java.lang.String)", "com.cavisson.dto.ProfileKeywordsDTO.getValue()"], "Fixed commit": "fcf99bf27bffd322101d1d023a9975976e6a874c", "Url": "https://api.github.com/repos/PriyankGahtori/ConfigUI", "Date": "2016-10-11T19:29:16Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s == null) || ((s.length()) == 0)) { mAutocompleteViewFrom.setAdapter(fromAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5087/buggy-version/app.src.main.java.com.codepath.enroute.activities.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "a2454ca783b20a4857c20579168f77adca1aefb4", "Url": "https://api.github.com/repos/codepath2017androidgroup10/EnRoute", "Date": "2017-10-31T02:48:51Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mAutocompleteViewTo.getAdapter().equals(mToAdapter))) { mAutocompleteViewTo.setAdapter(mToAdapter); }else if ((s.length()) == 0) { mAutocompleteViewTo.setAdapter(toAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5087/buggy-version/app.src.main.java.com.codepath.enroute.activities.SearchActivity.java", "BodyUseAPI": ["android.widget.AutoCompleteTextView.setAdapter(com.codepath.enroute.adapters.PlaceAutocompleteAdapter)", "android.widget.AutoCompleteTextView.setAdapter(android.widget.ArrayAdapter<java.lang.String>)"], "Fixed commit": "a2454ca783b20a4857c20579168f77adca1aefb4", "Url": "https://api.github.com/repos/codepath2017androidgroup10/EnRoute", "Date": "2017-10-31T02:48:51Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s == null) || ((s.length()) == 0)) { mAutocompleteViewTo.setAdapter(toAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5087/buggy-version/app.src.main.java.com.codepath.enroute.activities.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "a2454ca783b20a4857c20579168f77adca1aefb4", "Url": "https://api.github.com/repos/codepath2017androidgroup10/EnRoute", "Date": "2017-10-31T02:48:51Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s.length()) == 0) { mAutocompleteViewFrom.setAdapter(fromAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5087/buggy-version/app.src.main.java.com.codepath.enroute.activities.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "a2454ca783b20a4857c20579168f77adca1aefb4", "Url": "https://api.github.com/repos/codepath2017androidgroup10/EnRoute", "Date": "2017-10-31T02:48:51Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count > 1) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5087/buggy-version/app.src.main.java.com.codepath.enroute.activities.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "a2454ca783b20a4857c20579168f77adca1aefb4", "Url": "https://api.github.com/repos/codepath2017androidgroup10/EnRoute", "Date": "2017-10-31T02:48:51Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((value.startsWith(\"\\\"\")) && (value.endsWith(\"\\\"\"))) { value = value.substring(1, ((value.length()) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6644/buggy-version/core.core.src.main.java.imagej.script.ScriptInfo.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "24f6d35bc28a3c8e3d2fe3c27ead250ca13b7be0", "Url": "https://api.github.com/repos/imagej/imagej", "Date": "2014-01-28T23:46:17Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (species == null) { species = speciesDefault; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/766/buggy-version/OpenTreeMap.src.org.azavea.lists.NearbyList.java", "BodyUseAPI": [], "Fixed commit": "8dcd6dc68551e302f9f229edee1bc57322725062", "Url": "https://api.github.com/repos/azavea/OpenTreeMap-Android", "Date": "2013-09-03T14:24:12Z"},
{"Line": "=>676", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"stdinSample\".equals(filename)) { java.lang.String line = \"\"; int ch; while ((ch = java.lang.System.in.read()) != (-1)) { if (ch != '\\n') { line += ((char) (ch)); }else { if ((line.charAt(0)) == '@') { line = \"\"; }else { firstLine = line; break; } } } }else { java.io.BufferedReader brTest = new java.io.BufferedReader(new java.io.FileReader(filename)); do { firstLine = brTest.readLine(); } while ((firstLine.charAt(0)) == '@' ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1085/buggy-version/src.isoform-common.src.main.java.edu.uconn.engr.dna.util.Utils.java", "BodyUseAPI": [], "Fixed commit": "2931a1464f785d245f7c27bbc3a4299f61db9571", "Url": "https://api.github.com/repos/mandricigor/isoem2", "Date": "2016-08-14T05:26:05Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(previous.contains(this.student))) { previous.add(this.student); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3760/buggy-version/src.Desk.java", "BodyUseAPI": ["java.util.ArrayList<Student>.add(Student)"], "Fixed commit": "bce9eb259fb0a3de66720aec207e31e3b1db92f3", "Url": "https://api.github.com/repos/Tnek/Seating-Chart", "Date": "2014-05-28T10:14:04Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.usagesList) != null) { java.util.Collections.sort(this.usagesList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6486/buggy-version/app.src.main.java.de.theonlymarv.computermonitor.RuntimeHolder.java", "BodyUseAPI": [], "Fixed commit": "9f974ba6a29bc256e8fbc68e0d0427147a44f32c", "Url": "https://api.github.com/repos/TheOnlyMarv/ComputerMonitor_App", "Date": "2016-09-23T16:46:57Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.deviceList) != null) { java.util.Collections.sort(this.deviceList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6486/buggy-version/app.src.main.java.de.theonlymarv.computermonitor.RuntimeHolder.java", "BodyUseAPI": [], "Fixed commit": "9f974ba6a29bc256e8fbc68e0d0427147a44f32c", "Url": "https://api.github.com/repos/TheOnlyMarv/ComputerMonitor_App", "Date": "2016-09-23T16:46:57Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.spbau.turaev.editor.parser.ParserFacade.parseExpression(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (exp != null) { exp.accept(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3995/buggy-version/src.ru.spbau.turaev.editor.REPLConsole.java", "BodyUseAPI": ["ru.spbau.turaev.editor.expression.operators.Expression.accept(ru.spbau.turaev.editor.repl.visitors.Colorizer)"], "Fixed commit": "257a4177cfec4c2e89a898bd531e6b3ec00de825", "Url": "https://api.github.com/repos/marat-turaev/editor", "Date": "2014-06-03T09:33:53Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 23) { if (isStoragePermissionGranted()) { takePhoto(); } }else { takePhoto(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8605/buggy-version/Note.app.src.main.java.com.example.kienpt.note.activities.ControlActivity.java", "BodyUseAPI": [], "Fixed commit": "c0afafb821d3f3f9821d037410a01a51b4888bf0", "Url": "https://api.github.com/repos/kaphetz/Note", "Date": "2017-08-29T10:34:31Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((in.available()) > 0) d = in.read();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/347/buggy-version/src.com.dlrc.cardreader.DataFrame.java", "BodyUseAPI": ["java.io.InputStream.read()"], "Fixed commit": "2cc991b6dcd724d96897b2ca0406dcac6b6dd2c7", "Url": "https://api.github.com/repos/heavyii/cardreader", "Date": "2016-04-30T15:36:37Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.xbmc.kore.utils.Utils.isLollipopOrLater()) { vh.dataHolder.setPosterTransitionName(vh.artView.getTransitionName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1014/buggy-version/app.src.main.java.org.xbmc.kore.ui.sections.addon.AddonsActivity.java", "BodyUseAPI": [], "Fixed commit": "bb7ddc231db7257049605c411b5bcc5a03b5a7a6", "Url": "https://api.github.com/repos/poisdeux/Kore", "Date": "2017-10-09T11:57:22Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cdiEnabled) { archive.addAsManifestResource(EmptyAsset.INSTANCE, \"beans.xml\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/163/buggy-version/core.src.main.java.cucumber.runtime.arquillian.client.CucumberArchiveProcessor.java", "BodyUseAPI": [], "Fixed commit": "b1d80fefd5ecdffdd10827aa7603d9bad14e98ab", "Url": "https://api.github.com/repos/cukespace/cukespace", "Date": "2017-04-26T21:33:06Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["leapControl.Hand.fingers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (figs.isEmpty()) { graphicsModel.setPitch(0); return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6543/buggy-version/src.leapControl.ThereminListener.java", "BodyUseAPI": [], "Fixed commit": "a1411d96cb6b3f5dfc74c820cfac45ea20046e1d", "Url": "https://api.github.com/repos/davism78/HyperTheremin", "Date": "2014-02-19T00:20:49Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.exists())) { file.createNewFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6267/buggy-version/pljava-examples.src.main.java.org.postgresql.pljava.example.Security.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "05afd7f238cc8f6747fb02fcf2c6659b328113c1", "Url": "https://api.github.com/repos/greenplum-db/pljava", "Date": "2016-07-08T11:08:29Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (scannedBarcode == null) { return; }else if (scannedBarcode.equals(com.github.w_kamil.PointOfSale.EXIT_KEY)) { java.math.BigDecimal sumAmount = new java.math.BigDecimal(0); if ((currentScannedProductsList.size()) > 0) { for (com.github.w_kamil.Product product : currentScannedProductsList) { printer.print(product.toString()); sumAmount = sumAmount.add(product.getProductPrice()); } java.lang.String totalAmonutString = java.lang.String.format(\"________________Total amount: %.2f\", sumAmount); printer.print(totalAmonutString); lcdDisplay.display(totalAmonutString); } currentScannedProductsList = new java.util.ArrayList<com.github.w_kamil.Product>(); }else if (scannedBarcode.equals(\"\")) { lcdDisplay.display(\"'Invalid bar-code'\"); }else { com.github.w_kamil.Product product = dataAccessObject.searchProduct(scannedBarcode); if (product != null) { currentScannedProductsList.add(product); lcdDisplay.display(product.toString()); }else { lcdDisplay.display(\"'Product not found'\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6532/buggy-version/src.main.java.com.github.w_kamil.PointOfSale.java", "BodyUseAPI": ["com.github.w_kamil.DataAccessObject.searchProduct(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "d4ac0bf6d1ee3cfad2ecd6cf5a4d2d1aa56ae4ad", "Url": "https://api.github.com/repos/w-kamil/PointOfSale", "Date": "2017-04-13T06:21:54Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.zanata.rest.service.ResourceUtils.pluralForms) == null) { org.zanata.rest.service.ResourceUtils.pluralForms = new java.util.Properties(); org.zanata.rest.service.ResourceUtils.pluralForms.load(this.getClass().getClassLoader().getResourceAsStream(\"pluralforms.properties\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3107/buggy-version/zanata-war.src.main.java.org.zanata.rest.service.ResourceUtils.java", "BodyUseAPI": [], "Fixed commit": "ead3829f61faf8a6708ece202e85fa0c88cfe880", "Url": "https://api.github.com/repos/zanata/zanata", "Date": "2012-05-01T05:53:44Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((num.length) < 3) return result;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6119/buggy-version/src.leetcode.Sum.java", "BodyUseAPI": [], "Fixed commit": "4164feb4b02034125467e9ec493e949210df02bd", "Url": "https://api.github.com/repos/lorixx/WordNet", "Date": "2013-05-02T18:39:03Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(guildsRateLimiter.get(guild).containsKey(user))) { guildsRateLimiter.get(guild).put(user, currentTime); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4009/buggy-version/src.me.shadorc.discordbot.RateLimiter.java", "BodyUseAPI": ["java.util.HashMap<sx.blah.discord.handle.obj.IGuild, java.util.HashMap<sx.blah.discord.handle.obj.IUser, java.lang.Long>>.get(sx.blah.discord.handle.obj.IGuild)", "guildsRateLimiter.get(guild).put(sx.blah.discord.handle.obj.IUser,long)"], "Fixed commit": "61329346ecbf10f2c148c1371173ddfb4c682bcc", "Url": "https://api.github.com/repos/Shadorc/Shadbot", "Date": "2017-08-11T15:07:12Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (debug) { parser.printVCG(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8033/buggy-version/Parser.java", "BodyUseAPI": [], "Fixed commit": "50576b86160ee476a919e22a22fe33c22fc68fa4", "Url": "https://api.github.com/repos/tatianab/compiler-w16", "Date": "2016-02-04T21:42:42Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exoplatform.portal.mop.navigation.NavigationService.loadNavigation(org.exoplatform.portal.mop.SiteKey)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((portalNav != null) && ((portalNav.getState()) != null)) { navigations.add(new org.exoplatform.portal.mop.user.UserNavigation(this, portalNav, acl.hasEditPermissionOnNavigation(portalNav.getKey()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6704/buggy-version/component.portal.src.main.java.org.exoplatform.portal.mop.user.UserPortalImpl.java", "BodyUseAPI": ["java.util.List<org.exoplatform.portal.mop.user.UserNavigation>.add(org.exoplatform.portal.mop.user.UserNavigation)", "org.exoplatform.portal.config.UserACL.hasEditPermissionOnNavigation(portalNav.getKey())", "org.exoplatform.portal.mop.navigation.NavigationContext.getKey()"], "Fixed commit": "7d0e4f6152904159eeea3a3885c13a3cf2f2966c", "Url": "https://api.github.com/repos/trongtt/exogtn", "Date": "2011-05-24T07:46:05Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.intrbiz.bergamot.agent.statsd.StatsDReceiver.logger.isTraceEnabled()) com.intrbiz.bergamot.agent.statsd.StatsDReceiver.logger.trace(new java.lang.String(buffer.array(), buffer.arrayOffset(), buffer.remaining()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5689/buggy-version/bergamot-agent.src.main.java.com.intrbiz.bergamot.agent.statsd.StatsDReceiver.java", "BodyUseAPI": ["org.apache.log4j.Logger.trace(java.lang.String)"], "Fixed commit": "4a0b193cbffb46e8d45d17148451e7e1dd639c29", "Url": "https://api.github.com/repos/intrbiz/bergamot", "Date": "2017-10-05T16:23:54Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Project.find.byId(long)", "Destination.find.byId(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(destination.projects.contains(project))) { return notFound(\"Project not shared with destination.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1235/buggy-version/app.controllers.SharingPartnerships.java", "BodyUseAPI": [], "Fixed commit": "b6228c3ea9b7e895aee5be7005ea3488b6a0ba96", "Url": "https://api.github.com/repos/surevine/gateway-management", "Date": "2014-11-10T14:52:34Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent) != null) { allRules.addAll(parent.getRules()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7380/buggy-version/src.main.java.net.mindengine.galen.specs.reader.page.PageSpecReader.java", "BodyUseAPI": [], "Fixed commit": "e1b4051a34e2b492799ab9949433afd659426212", "Url": "https://api.github.com/repos/galenframework/galen", "Date": "2015-03-14T09:19:04Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.mindengine.galen.utils.GalenUtils.findFileOrResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (is == null) { throw new java.io.FileNotFoundException(fullPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7380/buggy-version/src.main.java.net.mindengine.galen.javascript.JsFunctionLoad.java", "BodyUseAPI": [], "Fixed commit": "e1b4051a34e2b492799ab9949433afd659426212", "Url": "https://api.github.com/repos/galenframework/galen", "Date": "2015-03-14T09:19:04Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player instanceof net.minecraft.entity.player.EntityPlayerMP) { player.posY -= player.yOffset; }else { player.posY -= player.motionY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5337/buggy-version/src.main.java.com.baublelicious.items.ItemBeltWaterWalking.java", "BodyUseAPI": [], "Fixed commit": "e28af046caf775fe58eb649179087ea3202fb287", "Url": "https://api.github.com/repos/dennisblokland/Baublelicious", "Date": "2015-05-19T14:53:48Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (changed) { changed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/9104/buggy-version/core.src.main.java.net.fhannes.rx.collections.ObservableSet.java", "BodyUseAPI": [], "Fixed commit": "1ea09b30460545328a81a369b10d23ab9052e7e6", "Url": "https://api.github.com/repos/FHannes/RxJavaCollections", "Date": "2017-10-22T13:15:09Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (changed) { changed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/9104/buggy-version/core.src.main.java.net.fhannes.rx.collections.ObservableList.java", "BodyUseAPI": [], "Fixed commit": "1ea09b30460545328a81a369b10d23ab9052e7e6", "Url": "https://api.github.com/repos/FHannes/RxJavaCollections", "Date": "2017-10-22T13:15:09Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sk.stuba.fiit.perconik.core.java.dom.Nodes.upToRoot(org.eclipse.jdt.core.dom.ASTNode)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((sk.stuba.fiit.perconik.eclipse.jdt.core.dom.NodeType.valueOf(branch.getLast())) == (sk.stuba.fiit.perconik.eclipse.jdt.core.dom.NodeType.COMPILATION_UNIT)) { branch.removeLast(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8786/buggy-version/sk.stuba.fiit.perconik.core.java.src.sk.stuba.fiit.perconik.core.java.dom.NodePathExtractor.java", "BodyUseAPI": ["java.util.LinkedList<org.eclipse.jdt.core.dom.ASTNode>.removeLast()"], "Fixed commit": "d67e42349d1d32eccf0d14eb59ba69747f377588", "Url": "https://api.github.com/repos/perconik/perconik", "Date": "2013-11-10T10:40:59Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((transaction.getTransactionType()) != (oldTransactionType)) { if ((transaction.getTransactionType()) == (com.me.squad.bankop.model.TransactionType.EXPENSE)) { transactionAccount.setAccountBalance((((transactionAccount.getAccountBalance()) - (transaction.getTransactionAmount())) - (oldAmount))); }else { transactionAccount.setAccountBalance((((transactionAccount.getAccountBalance()) + (transaction.getTransactionAmount())) + (oldAmount))); } }else { if ((transaction.getTransactionType()) == (com.me.squad.bankop.model.TransactionType.EXPENSE)) { transactionAccount.setAccountBalance((((transactionAccount.getAccountBalance()) - (transaction.getTransactionAmount())) + (oldAmount))); }else { transactionAccount.setAccountBalance((((transactionAccount.getAccountBalance()) + (transaction.getTransactionAmount())) - (oldAmount))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5720/buggy-version/app.src.main.java.com.me.squad.bankop.EditTransactionActivity.java", "BodyUseAPI": ["com.me.squad.bankop.model.Account.setAccountBalance((((transactionAccount.getAccountBalance()) - (transaction.getTransactionAmount())) - (oldAmount)))", "com.me.squad.bankop.model.Transaction.getTransactionAmount()", "com.me.squad.bankop.model.Account.setAccountBalance((((transactionAccount.getAccountBalance()) + (transaction.getTransactionAmount())) - (oldAmount)))", "com.me.squad.bankop.model.Transaction.getTransactionType()", "com.me.squad.bankop.model.Account.setAccountBalance((((transactionAccount.getAccountBalance()) - (transaction.getTransactionAmount())) + (oldAmount)))", "com.me.squad.bankop.model.Account.setAccountBalance((((transactionAccount.getAccountBalance()) + (transaction.getTransactionAmount())) + (oldAmount)))", "com.me.squad.bankop.model.Transaction.getTransactionAmount()", "com.me.squad.bankop.model.Transaction.getTransactionAmount()", "com.me.squad.bankop.model.Transaction.getTransactionType()", "com.me.squad.bankop.model.Transaction.getTransactionAmount()"], "Fixed commit": "cc52ef160b5b6d301df062c696690a9d4c8d4362", "Url": "https://api.github.com/repos/todoscontrajuan/bankop", "Date": "2017-11-28T17:53:47Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((transaction.getTransactionType()) != (oldTransactionType)) { if ((transaction.getTransactionType()) == (com.me.squad.bankop.model.TransactionType.EXPENSE)) { transactionAccount.setAccountBalance(((transactionAccount.getAccountBalance()) - (transaction.getTransactionAmount()))); }else { transactionAccount.setAccountBalance(((transactionAccount.getAccountBalance()) + (transaction.getTransactionAmount()))); } }else { if ((transaction.getTransactionType()) == (com.me.squad.bankop.model.TransactionType.EXPENSE)) { transactionAccount.setAccountBalance(((transactionAccount.getAccountBalance()) + (transaction.getTransactionAmount()))); }else { transactionAccount.setAccountBalance(((transactionAccount.getAccountBalance()) - (transaction.getTransactionAmount()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5720/buggy-version/app.src.main.java.com.me.squad.bankop.EditTransactionActivity.java", "BodyUseAPI": ["com.me.squad.bankop.model.Account.setAccountBalance(((transactionAccount.getAccountBalance()) - (transaction.getTransactionAmount())))", "com.me.squad.bankop.model.Transaction.getTransactionAmount()", "com.me.squad.bankop.model.Account.setAccountBalance(((transactionAccount.getAccountBalance()) + (transaction.getTransactionAmount())))", "com.me.squad.bankop.model.Transaction.getTransactionAmount()", "com.me.squad.bankop.model.Transaction.getTransactionAmount()", "com.me.squad.bankop.model.Account.setAccountBalance(((transactionAccount.getAccountBalance()) + (transaction.getTransactionAmount())))", "com.me.squad.bankop.model.Transaction.getTransactionType()", "com.me.squad.bankop.model.Transaction.getTransactionAmount()", "com.me.squad.bankop.model.Transaction.getTransactionType()", "com.me.squad.bankop.model.Account.setAccountBalance(((transactionAccount.getAccountBalance()) - (transaction.getTransactionAmount())))"], "Fixed commit": "cc52ef160b5b6d301df062c696690a9d4c8d4362", "Url": "https://api.github.com/repos/todoscontrajuan/bankop", "Date": "2017-11-28T17:53:47Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nekretnine.services.CallToCompanyService.findByToadvrt(com.nekretnine.models.Advertiser)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (companies.isEmpty()) return new org.springframework.http.ResponseEntity(org.springframework.http.HttpStatus.NOT_FOUND);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3216/buggy-version/src.main.java.com.nekretnine.controllers.AdvertiserController.java", "BodyUseAPI": [], "Fixed commit": "b5118f76d43f8a58a8831fb8c6519ad89b772810", "Url": "https://api.github.com/repos/stefanplazic/testiranje_softvera", "Date": "2017-01-23T15:25:50Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yavor.popularmovies.utils.MovieDB.getFullPosterUrl(currentItem.getPosterPath())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((posterPath != null) && ((posterPath.length()) > 0)) { com.squareup.picasso.Picasso.with(mContext).load(posterPath).into(rowView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8018/buggy-version/app.src.main.java.com.yavor.popularmovies.MovieAdapter.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(mContext).load(posterPath).into(android.widget.ImageView)", "com.squareup.picasso.Picasso.with(mContext).load(java.lang.String)"], "Fixed commit": "07d5d05cb3ec3d4899adbefcc693d505942f5767", "Url": "https://api.github.com/repos/yavor87/PopularMovies", "Date": "2015-07-11T19:17:53Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yavor.popularmovies.MovieInfo.getOverview()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((overview != null) && ((overview.length()) > 0)) { overviewView.setText(overview); }else { overviewView.setText(getString(R.string.no_overview_found)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8018/buggy-version/app.src.main.java.com.yavor.popularmovies.MovieDetailsFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "07d5d05cb3ec3d4899adbefcc693d505942f5767", "Url": "https://api.github.com/repos/yavor87/PopularMovies", "Date": "2015-07-11T19:17:53Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yavor.popularmovies.utils.MovieDB.getFullPosterUrl(mMovie.getPosterPath())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((posterPath != null) && ((posterPath.length()) > 0)) { com.squareup.picasso.Picasso.with(getActivity()).load(posterPath).into(posterView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8018/buggy-version/app.src.main.java.com.yavor.popularmovies.MovieDetailsFragment.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(getActivity()).load(java.lang.String)", "com.squareup.picasso.Picasso.with(getActivity()).load(posterPath).into(android.widget.ImageView)"], "Fixed commit": "07d5d05cb3ec3d4899adbefcc693d505942f5767", "Url": "https://api.github.com/repos/yavor87/PopularMovies", "Date": "2015-07-11T19:17:53Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((context.liveOkeUDPClient) != null) { context.liveOkeUDPClient.sendMessage(new com.google.gson.Gson().toJson(bcMsg), null, UDPListenerService.BROADCAST_PORT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2089/buggy-version/app.src.main.java.com.vnguyen.liveokeremote.helper.AlertDialogHelper.java", "BodyUseAPI": ["context.liveOkeUDPClient.sendMessage(new com.google.gson.Gson().toJson(bcMsg),<nulltype>,UDPListenerService.BROADCAST_PORT)"], "Fixed commit": "abb99298235c29f72d1c7bedda61152f1ce2ede9", "Url": "https://api.github.com/repos/vnguyen972/LiveOkeRemote", "Date": "2015-01-25T16:05:58Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { android.widget.Toast.makeText(getActivity(), R.string.parsing_error, Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2147/buggy-version/WhoIsWhoPrj.src.main.java.com.tab.whoiswho.ui.TeamMembersListFragment.java", "BodyUseAPI": [], "Fixed commit": "7cd779a574ad08daf74e2c1dfb8105d8053b3575", "Url": "https://api.github.com/repos/juanyanezgc/WhoIsWho", "Date": "2014-04-29T23:28:10Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { android.widget.Toast.makeText(getActivity(), R.string.no_internet, Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2147/buggy-version/WhoIsWhoPrj.src.main.java.com.tab.whoiswho.ui.TeamMembersListFragment.java", "BodyUseAPI": [], "Fixed commit": "7cd779a574ad08daf74e2c1dfb8105d8053b3575", "Url": "https://api.github.com/repos/juanyanezgc/WhoIsWho", "Date": "2014-04-29T23:28:10Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scope instanceof eu.factorx.awac.models.business.Site) { thisSite = ((eu.factorx.awac.models.business.Site) (scope)).getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/193/buggy-version/app.eu.factorx.awac.service.impl.ResultExcelGeneratorServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "671fb374f90f9a34e6065ea22d3fef1ab9f5f3de", "Url": "https://api.github.com/repos/Factor-X/awac", "Date": "2014-10-24T09:48:34Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((newConfig.orientation) == (android.content.res.Configuration.ORIENTATION_LANDSCAPE)) && ((mMap.getMapType()) == (com.google.android.gms.maps.GoogleMap.MAP_TYPE_HYBRID))) { mapTypeSwitch.setChecked(true); }else if (((newConfig.orientation) == (android.content.res.Configuration.ORIENTATION_PORTRAIT)) && ((mMap.getMapType()) == (com.google.android.gms.maps.GoogleMap.MAP_TYPE_HYBRID))) { mapTypeSwitch.setChecked(true); }else { mapTypeSwitch.setChecked(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8896/buggy-version/app.src.main.java.com.example.alexw.departments.MapsActivity.java", "BodyUseAPI": ["com.google.android.gms.maps.GoogleMap.getMapType()"], "Fixed commit": "507c3c5f3341e62d2f0c115e4e0fb8074a77c6da", "Url": "https://api.github.com/repos/AlexWalker28/Departments", "Date": "2016-08-27T13:09:41Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((configuredParameters[i]) instanceof com.orientechnologies.orient.core.sql.functions.OSQLFunctionRuntime) runtimeParameters[i] = ((com.orientechnologies.orient.core.sql.functions.OSQLFunctionRuntime) (configuredParameters[i])).execute(iThis, iCurrentRecord, iCurrentResult, iContext); else if ((configuredParameters[i]) instanceof com.orientechnologies.orient.core.sql.filter.OSQLFilterItemVariable) { runtimeParameters[i] = ((com.orientechnologies.orient.core.sql.filter.OSQLFilterItemVariable) (configuredParameters[i])).getValue(iCurrentRecord, iCurrentResult, iContext); if (((runtimeParameters[i]) == null) && (iCurrentResult instanceof com.orientechnologies.orient.core.db.record.OIdentifiable)) runtimeParameters[i] = ((com.orientechnologies.orient.core.sql.filter.OSQLFilterItemVariable) (configuredParameters[i])).getValue(((com.orientechnologies.orient.core.db.record.OIdentifiable) (iCurrentResult)), iCurrentResult, iContext); }else if ((configuredParameters[i]) instanceof com.orientechnologies.orient.core.sql.OCommandSQL) { try { runtimeParameters[i] = ((com.orientechnologies.orient.core.sql.OCommandSQL) (configuredParameters[i])).setContext(iContext).execute(); } catch (com.orientechnologies.orient.core.command.OCommandExecutorNotFoundException e) { final java.lang.String text = ((com.orientechnologies.orient.core.sql.OCommandSQL) (configuredParameters[i])).getText(); final com.orientechnologies.orient.core.sql.filter.OSQLPredicate pred = new com.orientechnologies.orient.core.sql.filter.OSQLPredicate(text); runtimeParameters[i] = pred.evaluate((iCurrentRecord instanceof com.orientechnologies.orient.core.record.ORecord<?> ? ((com.orientechnologies.orient.core.record.ORecord<?>) (iCurrentRecord)) : null), ((com.orientechnologies.orient.core.record.impl.ODocument) (iCurrentResult)), iContext); configuredParameters[i] = pred; } }else if ((configuredParameters[i]) instanceof com.orientechnologies.orient.core.sql.filter.OSQLPredicate) runtimeParameters[i] = ((com.orientechnologies.orient.core.sql.filter.OSQLPredicate) (configuredParameters[i])).evaluate(iCurrentRecord.getRecord(), (iCurrentRecord instanceof com.orientechnologies.orient.core.record.impl.ODocument ? ((com.orientechnologies.orient.core.record.impl.ODocument) (iCurrentResult)) : null), iContext); else if ((configuredParameters[i]) instanceof java.lang.String) { if ((configuredParameters[i].toString().startsWith(\"\\\"\")) || (configuredParameters[i].toString().startsWith(\"'\"))) runtimeParameters[i] = com.orientechnologies.orient.core.serialization.serializer.OStringSerializerHelper.getStringContent(configuredParameters[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4124/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.methods.OSQLMethodRuntime.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.lang.Object.setContext(com.orientechnologies.orient.core.command.OCommandContext)", "java.lang.Object.getText()", "java.lang.String.startsWith(java.lang.String)", "java.lang.Object.execute(java.lang.Object,com.orientechnologies.orient.core.db.record.OIdentifiable,java.lang.Object,com.orientechnologies.orient.core.command.OCommandContext)", "java.lang.Object.toString()", "java.lang.Object.getValue(java.lang.Object,java.lang.Object,com.orientechnologies.orient.core.command.OCommandContext)", "((com.orientechnologies.orient.core.sql.OCommandSQL) (configuredParameters[i])).setContext(iContext).execute()", "com.orientechnologies.orient.core.serialization.serializer.OStringSerializerHelper.getStringContent(java.lang.Object)", "java.lang.Object.evaluate(iCurrentRecord.getRecord(),(iCurrentRecord instanceof com.orientechnologies.orient.core.record.impl.ODocument ? ((com.orientechnologies.orient.core.record.impl.ODocument) (iCurrentResult)) : null),com.orientechnologies.orient.core.command.OCommandContext)", "java.lang.Object.getValue(com.orientechnologies.orient.core.db.record.OIdentifiable,java.lang.Object,com.orientechnologies.orient.core.command.OCommandContext)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "b8f7ff049857378ef5ab97c4a0856709e0880241", "Url": "https://api.github.com/repos/cstamas/orientdb", "Date": "2014-07-02T10:33:11Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Parser.parseTaskID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (IDs != null) { commandObj.setTaskID(IDs[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2067/buggy-version/src.Parser.java", "BodyUseAPI": ["Command.setTaskID(java.lang.String)"], "Fixed commit": "3122043d10fc27152899f17cdaee5c853a3c78d8", "Url": "https://api.github.com/repos/cs2103aug2014-w14-1j/main", "Date": "2014-11-05T06:23:06Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(currentServiceArrList.contains(incidentString))) { currentServiceArrList.add(incidentString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6241/buggy-version/src.RITOPLS.GUI.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "88797724c666d51b0ce67f77d2e1891b0cb25271", "Url": "https://api.github.com/repos/chrismeyers/rito-pls", "Date": "2015-06-19T02:07:59Z"},
{"Line": "=>1245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.opensourcephysics.cabrillo.tracker.ResourceLoader.isURLAvailable(\"http://www.opensourcephysics.org\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4948/buggy-version/src.org.opensourcephysics.cabrillo.tracker.Tracker.java", "BodyUseAPI": [], "Fixed commit": "3c31f37addeeb2a5dc070e0b52e8da77c84c0ead", "Url": "https://api.github.com/repos/OpenSourcePhysics/tracker", "Date": "2015-09-04T18:59:19Z"},
{"Line": "=>2627", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trackerPanel.hideDescriptionWhenLoaded) { control.setValue(\"hide_description\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4948/buggy-version/src.org.opensourcephysics.cabrillo.tracker.TrackerPanel.java", "BodyUseAPI": [], "Fixed commit": "3c31f37addeeb2a5dc070e0b52e8da77c84c0ead", "Url": "https://api.github.com/repos/OpenSourcePhysics/tracker", "Date": "2015-09-04T18:59:19Z"},
{"Line": "=>576", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Settings.RECENT_FILES.value()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((index = recents.indexOf(path)) != (-1)) { recents.remove(index); org.fenix.llanfair.Llanfair.RecentMenuItem.items.remove(index); }else if ((recents.size()) == (org.fenix.llanfair.Llanfair.RecentMenuItem.MAX_COUNT)) { recents.remove(((org.fenix.llanfair.Llanfair.RecentMenuItem.MAX_COUNT) - 1)); org.fenix.llanfair.Llanfair.RecentMenuItem.items.remove(((org.fenix.llanfair.Llanfair.RecentMenuItem.MAX_COUNT) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2482/buggy-version/org.fenix.llanfair.Llanfair.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.remove(int)", "java.util.List<java.lang.String>.remove(int)"], "Fixed commit": "acab0876caea3762bdd56c3eced6cb2dab17e96f", "Url": "https://api.github.com/repos/jbzdarkid/Llanfair_decompile", "Date": "2015-07-16T17:35:46Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i.getExitDate()) == null) { currentItemsByProduct.get(p).add(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1720/buggy-version/src.model.managers.ProductManager.java", "BodyUseAPI": ["currentItemsByProduct.get(p).add(model.managers.Item)"], "Fixed commit": "a82d01f514542e2bbd885ec840c5e5c5b72eb08d", "Url": "https://api.github.com/repos/caseymonc/hit", "Date": "2012-12-01T21:06:38Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(player.getUniqueId().equals(github.scarsz.discordsrv.util.WebhookUtil.lastPlayer))) { github.scarsz.discordsrv.util.WebhookUtil.lastPlayer = player.getUniqueId(); github.scarsz.discordsrv.util.WebhookUtil.currentWebhook = ((github.scarsz.discordsrv.util.WebhookUtil.currentWebhook) == 1) ? 0 : 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5454/buggy-version/src.main.java.github.scarsz.discordsrv.util.WebhookUtil.java", "BodyUseAPI": ["org.bukkit.entity.Player.getUniqueId()"], "Fixed commit": "e362e7be814507679007d21665a68181304d47ae", "Url": "https://api.github.com/repos/BillyGalbreath/DiscordSRV", "Date": "2017-08-11T19:21:17Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (modClass == null) { try { modClass = java.lang.Class.forName(\"team.chisel.Chisel\"); } catch (java.lang.ClassNotFoundException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7915/buggy-version/src.pneumaticCraft.common.thirdparty.Chisel.java", "BodyUseAPI": [], "Fixed commit": "599dd6531389f0a6852737885d95dcaafd34a021", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2015-10-09T20:57:47Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getType()) == (ContributionType.EXAMPLE)) { writer.println((\"compatibleModesList=\" + compatibleContribsList)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2882/buggy-version/app.src.processing.app.contrib.AvailableContribution.java", "BodyUseAPI": [], "Fixed commit": "737fc0d654317ed4b0150340339ebb1f176d856b", "Url": "https://api.github.com/repos/joelmoniz/processing", "Date": "2014-08-07T17:07:22Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getType()) == (ContributionType.EXAMPLE)) { compatibleContribsList = properties.get(\"compatibleModesList\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2882/buggy-version/app.src.processing.app.contrib.AvailableContribution.java", "BodyUseAPI": [], "Fixed commit": "737fc0d654317ed4b0150340339ebb1f176d856b", "Url": "https://api.github.com/repos/joelmoniz/processing", "Date": "2014-08-07T17:07:22Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (conn == null) { msg = \"\"; }else { msg = conn.getHttpChannel().getResponse().getReason(); if (msg == null) { msg = org.eclipse.jetty.http.HttpStatus.getMessage(conn.getHttpChannel().getResponse().getStatus()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4064/buggy-version/gerrit-pgm.src.main.java.com.google.gerrit.pgm.http.jetty.HiddenErrorHandler.java", "BodyUseAPI": ["org.eclipse.jetty.http.HttpStatus.getMessage(conn.getHttpChannel().getResponse().getStatus())", "conn.getHttpChannel().getResponse().getReason()", "conn.getHttpChannel().getResponse()", "conn.getHttpChannel().getResponse().getStatus()", "conn.getHttpChannel().getResponse()", "org.eclipse.jetty.server.HttpConnection.getHttpChannel()", "org.eclipse.jetty.server.HttpConnection.getHttpChannel()"], "Fixed commit": "a9e0251fa02a2f73ac3d875fc01905624244531d", "Url": "https://api.github.com/repos/gerrit-review/gerrit", "Date": "2016-08-26T00:09:49Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sink) instanceof cz.cvut.felk.ida.simplyobo.parser.EndOfParsingAware) ((cz.cvut.felk.ida.simplyobo.parser.EndOfParsingAware) (sink)).parsingEnded();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3502/buggy-version/src.cz.cvut.felk.ida.simplyobo.parser.LineByLineParser.java", "BodyUseAPI": [], "Fixed commit": "b5680735d705179f6a7a497bb3d75bdbeea4bd31", "Url": "https://api.github.com/repos/cernoch/SimplyOBO", "Date": "2011-07-01T09:03:53Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useDevFolder) { notifier.register(darwin.resourcehandling.handle.ClasspathFileHandler.DEV_FOLDER.resolve(path), fileChangeListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2762/buggy-version/ResourceHandling.src.main.java.darwin.resourcehandling.handle.ClasspathFileHandler.java", "BodyUseAPI": [], "Fixed commit": "d3ec8bdcd49fb6b38c2c9c3e1473a77e0a406226", "Url": "https://api.github.com/repos/Danny02/DarwinsBox", "Date": "2013-01-03T18:00:35Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((game.board.snakes.size()) > 0) game.board.snakes.get(snakeID).number = id;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4634/buggy-version/client.Client.java", "BodyUseAPI": ["game.board.snakes.get(int)"], "Fixed commit": "761ac5e325d7e56fb919a3e8ec5cdf9b930693cf", "Url": "https://api.github.com/repos/ulanzetz/MultiplayerSnake", "Date": "2017-11-27T06:00:51Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((values.size()) == 0) { values.putNull(\"id\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5072/buggy-version/litepal.src.main.java.org.litepal.crud.SaveHandler.java", "BodyUseAPI": ["android.content.ContentValues.putNull(java.lang.String)"], "Fixed commit": "c1eff3c728a1727da4a736f88dfb76f9b4a284ca", "Url": "https://api.github.com/repos/LitePalFramework/LitePal", "Date": "2016-12-01T06:38:46Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((post.getImage()) == null) && (postImage != null)) && (postImage.isEmpty())) { bindingResult.rejectValue(\"image\", \"post.image.notnull\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1987/buggy-version/src.main.java.controllers.admin.PostController.java", "BodyUseAPI": [], "Fixed commit": "aa10131dd24be676fa86ba8e5bd094ea48ab2294", "Url": "https://api.github.com/repos/sergio11/springmvc-thymeleaf-jpa", "Date": "2016-12-19T22:18:36Z"},
{"Line": "=>2914", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (content.getIsDeleted().booleanValue()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4479/buggy-version/src.java.org.infoglue.deliver.controllers.kernel.impl.simple.ContentDeliveryController.java", "BodyUseAPI": [], "Fixed commit": "cd572af0be2e95588a7d5a04a502b9734b18c661", "Url": "https://api.github.com/repos/sylbal/infoglue", "Date": "2011-03-24T07:35:29Z"},
{"Line": "=>3028", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (content.getIsDeleted().booleanValue()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4479/buggy-version/src.java.org.infoglue.deliver.controllers.kernel.impl.simple.ContentDeliveryController.java", "BodyUseAPI": [], "Fixed commit": "cd572af0be2e95588a7d5a04a502b9734b18c661", "Url": "https://api.github.com/repos/sylbal/infoglue", "Date": "2011-03-24T07:35:29Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) < 1) { player.sendMessage(((org.bukkit.ChatColor.RED) + \"You didn't specify arena name\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6701/buggy-version/WinterSlash.src.me.i3ick.com.WinterSlashMain.java", "BodyUseAPI": [], "Fixed commit": "bdb246672f6cccc2bbbaf8eed135f89895f98178", "Url": "https://api.github.com/repos/i3ick/Winter-Slash", "Date": "2014-03-17T16:15:20Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (me.sunyfusion.fuzion.UpdateReceiver.netConnected) { me.sunyfusion.fuzion.UpdateReceiver.netConnected = false; android.util.Log.i(\"NET\", (\"not connected \" + isConnected)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/594/buggy-version/app.src.main.java.me.sunyfusion.fuzion.UpdateReceiver.java", "BodyUseAPI": [], "Fixed commit": "de54c6e8854d739b2c2607e14c43075fb79e35b7", "Url": "https://api.github.com/repos/SUNYNewPaltzCS/BDSP-android", "Date": "2016-04-21T05:57:19Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(me.sunyfusion.fuzion.UpdateReceiver.netConnected)) { me.sunyfusion.fuzion.UpdateReceiver.netConnected = true; android.util.Log.i(\"NET\", (\"connected \" + isConnected)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/594/buggy-version/app.src.main.java.me.sunyfusion.fuzion.UpdateReceiver.java", "BodyUseAPI": [], "Fixed commit": "de54c6e8854d739b2c2607e14c43075fb79e35b7", "Url": "https://api.github.com/repos/SUNYNewPaltzCS/BDSP-android", "Date": "2016-04-21T05:57:19Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, org.opentosca.yamlconverter.yamlmodel.yaml.element.ArtifactType>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((value.getDerived_from()) != null) && (!(value.getDerived_from().equals(\"\")))) { artifactType.setDerivedFrom(parseDerivedFrom(value.getDerived_from())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2915/buggy-version/org.opentosca.yamlconverter.main.src.main.java.org.opentosca.yamlconverter.switchmapper.ArtifactTypesSubSwitch.java", "BodyUseAPI": ["org.opentosca.yamlconverter.switchmapper.ArtifactTypesSubSwitch.parseDerivedFrom(value.getDerived_from())", "org.opentosca.model.tosca.TArtifactType.setDerivedFrom(parseDerivedFrom(value.getDerived_from()))", "org.opentosca.yamlconverter.yamlmodel.yaml.element.ArtifactType.getDerived_from()"], "Fixed commit": "fa9c390eb7a011e0a4d2569b09bbe2b7342c386e", "Url": "https://api.github.com/repos/seeebiii/YAML_Transformer", "Date": "2015-03-10T11:28:44Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gmi.nordborglab.browser.server.repository.StudyJobRepository.findByTaskid(result.getTask_id())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((studyJob.getAppUser()) != null) { com.gmi.nordborglab.browser.server.domain.util.UserNotification notification = com.gmi.nordborglab.browser.server.tasks.SubmitAnalysisTask.getUserNotificationFromStudyJob(studyJob); userNotificationRepository.save(notification); com.gmi.nordborglab.browser.server.errai.ClientComService.pushUserNotification(studyJob.getAppUser().getId().toString(), studyJob.getAppUser().getEmail(), \"gwasjob\", studyJob.getStudy().getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6156/buggy-version/genophenbrowser-server.src.main.java.com.gmi.nordborglab.browser.server.tasks.SubmitAnalysisTask.java", "BodyUseAPI": ["com.gmi.nordborglab.browser.server.tasks.SubmitAnalysisTask.getUserNotificationFromStudyJob(com.gmi.nordborglab.browser.server.domain.util.StudyJob)", "studyJob.getStudy().getId()", "com.gmi.nordborglab.browser.server.errai.ClientComService.pushUserNotification(studyJob.getAppUser().getId().toString(),studyJob.getAppUser().getEmail(),java.lang.String,studyJob.getStudy().getId())", "com.gmi.nordborglab.browser.server.domain.util.StudyJob.getStudy()", "com.gmi.nordborglab.browser.server.domain.util.StudyJob.getAppUser()", "studyJob.getAppUser().getId().toString()", "com.gmi.nordborglab.browser.server.domain.util.StudyJob.getAppUser()", "studyJob.getAppUser().getId()", "studyJob.getAppUser().getEmail()"], "Fixed commit": "357659fd623c19cc83f8c2dfc10e9410ce52029c", "Url": "https://api.github.com/repos/timeu/geno-phen-browser", "Date": "2014-12-23T15:57:52Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hudson.plugins.performance.HttpSample.AllThreadCount) < allThreadCount) { hudson.plugins.performance.HttpSample.AllThreadCount = allThreadCount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6011/buggy-version/src.main.java.hudson.plugins.performance.HttpSample.java", "BodyUseAPI": [], "Fixed commit": "1d3494a2ad0eaae203e064fb8ea02913860a9942", "Url": "https://api.github.com/repos/hushi55/performance-plugin", "Date": "2014-12-29T02:16:23Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yjy.banker.bank.account.Profile.getName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (name == null) { name = getString(R.string.anonymous); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1998/buggy-version/app.src.main.java.com.yjy.banker.component.activity.UserFragment.java", "BodyUseAPI": [], "Fixed commit": "cfbbd0abe52b7db07a8205861f55c854f7cb69c1", "Url": "https://api.github.com/repos/lvsecoto/Banker", "Date": "2017-05-27T05:41:10Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isMarketStartTimeLimitOn())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1690/buggy-version/src.main.java.com.betfair.aping.BackUnderMarketAlgo.java", "BodyUseAPI": [], "Fixed commit": "27fe66306cdea480b16ee3039bf392ba85c7fef4", "Url": "https://api.github.com/repos/markwilliamsr/betfair", "Date": "2014-10-26T22:42:33Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<java.lang.String>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (current_dir.equals(\"\")) { actionBar.setTitle(getString(R.string.default_display_name_for_root_folder)); }else { actionBar.setTitle(current_dir); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2169/buggy-version/src.com.owncloud.android.ui.activity.Uploader.java", "BodyUseAPI": ["android.support.v7.app.ActionBar.setTitle(java.lang.String)"], "Fixed commit": "71897c7e86047833d25c127371f3a2d67b4697e1", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2016-03-23T15:17:14Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOwner) { boolean isProfileVisible = true; try { java.lang.String cookieValue = cookies.getCookie(org.sagebionetworks.web.client.presenter.ProfilePresenter.USER_PROFILE_VISIBLE_STATE_KEY); if ((cookieValue != null) && (!(cookieValue.isEmpty()))) { isProfileVisible = java.lang.Boolean.valueOf(cookieValue); } } catch (java.lang.Exception e) { } setIsProfileVisible(isProfileVisible); }else { setIsProfileVisible(true); view.setHideProfileButtonVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4731/buggy-version/src.main.java.org.sagebionetworks.web.client.presenter.ProfilePresenter.java", "BodyUseAPI": [], "Fixed commit": "703553348f59be320c6e6a2ab8879c553032a7be", "Url": "https://api.github.com/repos/john-hill/SynapseWebClient", "Date": "2015-03-04T21:28:13Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((com.itfsw.mybatis.generator.plugins.TextElement) (xmlElement.getElements().get(0))).getContent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (text.matches(\"#\\\\{.*\\\\},?\")) { java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(\"#\\\\{(.*?),.*\\\\},?\"); java.util.regex.Matcher matcher = pattern.matcher(text); if (matcher.find()) { java.lang.String field = matcher.group(1); for (org.mybatis.generator.api.IntrospectedColumn column : introspectedTable.getAllColumns()) { if (column.getJavaProperty().equals(field)) { columnName = column.getActualColumnName(); } } } }else { if (text.matches(\".*=.*\")) { columnName = text.split(\"=\")[0]; }else { columnName = text.replaceAll(\",\", \"\"); } columnName = columnName.trim().replaceAll(\"`\", \"\").replaceAll(\"\\\"\", \"\").replaceAll(\"'\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3091/buggy-version/src.main.java.com.itfsw.mybatis.generator.plugins.SelectiveEnhancedPlugin.java", "BodyUseAPI": ["java.lang.String.matches(java.lang.String)", "java.util.regex.Pattern.matcher(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "f62d78d1cd45629d9ad9ea661add5303cdc93230", "Url": "https://api.github.com/repos/itfsw/mybatis-generator-plugin", "Date": "2017-06-21T06:44:31Z"},
{"Line": "=>1348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((region.getCropArea(year, crop)) != 0) { double production_per_km = (region.getCropProduction(year, crop)) / (region.getCropArea(year, crop)); double tileSize = (region.getLandTotal()) / (region.getNumTiles()); int index = crop.ordinal(); revenue = ((int) ((((tile.getCropRatings()[index].productionRate()) * (cropData.getPrice(year, starvationevasion.common.EnumFood.values()[index]))) * tileSize) * production_per_km)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6719/buggy-version/src.starvationevasion.sim.Model.java", "BodyUseAPI": ["starvationevasion.sim.Region.getLandTotal()", "starvationevasion.sim.Region.getCropProduction(int,starvationevasion.common.EnumFood)", "starvationevasion.sim.CropData.getPrice(int,starvationevasion.common.EnumFood.values()[index])", "starvationevasion.common.EnumFood.ordinal()", "starvationevasion.sim.Region.getNumTiles()", "starvationevasion.sim.Region.getCropArea(int,starvationevasion.common.EnumFood)"], "Fixed commit": "2b9d7d0e7257a24276089021fdafef6b3ab4067e", "Url": "https://api.github.com/repos/castellanos70/StarvationEvasion", "Date": "2016-05-12T02:52:09Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((answer.length()) > 0) { answer.deleteCharAt(((answer.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7716/buggy-version/enactments.Tracker.enacter.src.main.java.org.ow2.choreos.tracker.TrackerInfo.java", "BodyUseAPI": ["java.lang.StringBuffer.deleteCharAt(int)", "java.lang.StringBuffer.length()"], "Fixed commit": "cc15c703bbe41c933ffc0296d1e69a54e04892ff", "Url": "https://api.github.com/repos/choreos/choreos_middleware", "Date": "2013-05-24T00:44:45Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.StringUtils.splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((userCredentials.userName.equals(secretParts[0])) && (userCredentials.password.equals(secretParts[1]))) { gr.northdigital.gdpr.models.GAccessTicket gAccessTicket = gr.northdigital.gdpr.utils.GTicketGenerator.generate(\"demo\", 30); return gAccessTicket; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/322/buggy-version/src.main.java.gr.northdigital.gdpr.resources.GAuthService.java", "BodyUseAPI": [], "Fixed commit": "c09f29e0e43cf465ba48f0632395754bf0cbf6b9", "Url": "https://api.github.com/repos/northdigital/GDPRAppServer", "Date": "2017-10-20T14:57:36Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node instanceof com.redhat.ceylon.compiler.typechecker.tree.Tree.Term) || (node instanceof com.redhat.ceylon.compiler.typechecker.tree.Tree.Type)) { return com.redhat.ceylon.eclipse.util.Nodes.nameProposals(node, false); }else { return new java.lang.String[]{ \"it\" }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2314/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.util.Nodes.java", "BodyUseAPI": ["com.redhat.ceylon.eclipse.util.Nodes.nameProposals(com.redhat.ceylon.compiler.typechecker.tree.Node,boolean)"], "Fixed commit": "03a67bf86c813ba043ff14d44dbcd9cc51126545", "Url": "https://api.github.com/repos/eclipse/ceylon-ide-eclipse", "Date": "2016-06-24T12:57:55Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gameModel.contains(com.navid.trafalgar.mod.counterclock.ShipModelTwoGhost.class)) { ghost = gameModel.getSingleByType(com.navid.trafalgar.mod.counterclock.ShipModelTwoGhost.class); if ((ghost) != null) { gameNode.attachChild(ghost); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1026/buggy-version/modCounterClock.src.main.java.com.navid.trafalgar.mod.counterclock.CounterClockGameModel.java", "BodyUseAPI": ["com.navid.trafalgar.mod.counterclock.GameModel.getSingleByType(java.lang.Class)"], "Fixed commit": "385a205ba14c708ecfad8229a8da441b426b8470", "Url": "https://api.github.com/repos/albertonavarro/cabotrafalgar", "Date": "2014-09-01T22:50:30Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((jdxComp1) != null) && ((jdxComp2) != null)) { return ((((\"Identification of standard peaks in \" + ((\"selected peak lists\" + \" using \") + \" standards '\")) + (jdxComp1.getName())) + \"' and '\") + (jdxComp2.getName())) + \"'\"; }else { return \"Identification of standard peaks in selected peak lists\" + \" using the 'Two standard compounds finder'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8649/buggy-version/src.main.java.net.sf.mzmine.modules.peaklistmethods.normalization.rtadjuster.JDXCompoundsIdentificationSingleTask.java", "BodyUseAPI": [], "Fixed commit": "b11030664d5853aae741da5ae7ad5b325fb6fd1a", "Url": "https://api.github.com/repos/golgauth/mzmine2", "Date": "2016-02-25T12:59:17Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.mzmine.main.MZmineCore.getDesktop()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(desktop instanceof net.sf.mzmine.desktop.impl.HeadLessDesktop)) desktop.getMainWindow().repaint();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8649/buggy-version/src.main.java.net.sf.mzmine.modules.peaklistmethods.normalization.rtadjuster.JDXCompoundsIdentificationSingleTask.java", "BodyUseAPI": ["desktop.getMainWindow().repaint()", "net.sf.mzmine.desktop.Desktop.getMainWindow()"], "Fixed commit": "b11030664d5853aae741da5ae7ad5b325fb6fd1a", "Url": "https://api.github.com/repos/golgauth/mzmine2", "Date": "2016-02-25T12:59:17Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.mzmine.util.DataFileUtils.getAncestorDataFile(net.sf.mzmine.datamodel.MZmineProject,net.sf.mzmine.datamodel.RawDataFile,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (rdf == null) { rdf = curRefRDF; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8649/buggy-version/src.main.java.net.sf.mzmine.modules.peaklistmethods.normalization.rtadjuster.JDXCompoundsIdentificationSingleTask.java", "BodyUseAPI": [], "Fixed commit": "b11030664d5853aae741da5ae7ad5b325fb6fd1a", "Url": "https://api.github.com/repos/golgauth/mzmine2", "Date": "2016-02-25T12:59:17Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.mzmine.util.DataFileUtils.getAncestorDataFile(net.sf.mzmine.datamodel.MZmineProject,net.sf.mzmine.datamodel.RawDataFile,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (rdf == null) { rdf = curRdf; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8649/buggy-version/src.main.java.net.sf.mzmine.modules.peaklistmethods.normalization.rtadjuster.ScoresResultTableModel.java", "BodyUseAPI": [], "Fixed commit": "b11030664d5853aae741da5ae7ad5b325fb6fd1a", "Url": "https://api.github.com/repos/golgauth/mzmine2", "Date": "2016-02-25T12:59:17Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_len) != (_position)) java.lang.System.err.println(\"String did not completely parse\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2412/buggy-version/src.Parser.java", "BodyUseAPI": [], "Fixed commit": "6b311e30114f9afd456e0b612711f29310b2de9f", "Url": "https://api.github.com/repos/jeffmomo/RegularExpressions", "Date": "2015-05-11T09:50:08Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dumpLevel == (-1)) && ((com.tuyang.beanutils.internal.dump.BeanCopyDump.localDumpStack.get().size()) > 0)) { com.tuyang.beanutils.internal.dump.BeanCopyDump.logger.info(\"=============================================================================================\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5864/buggy-version/src.main.java.com.tuyang.beanutils.internal.dump.BeanCopyDump.java", "BodyUseAPI": [], "Fixed commit": "cb54836837790dfa69106bcc73ce1d507f0eff58", "Url": "https://api.github.com/repos/yangtu222/BeanUtils", "Date": "2017-10-30T06:48:53Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (name.equals(\"_class\")) { return \"Type\"; }else if (name.equals(\"_str\")) { return \"Data\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7757/buggy-version/rapidoid-model.src.main.java.org.rapidoid.model.impl.BuiltInProperty.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "153ca015d7d5816008fd29c1b2d7245379be82b1", "Url": "https://api.github.com/repos/rapidoid/rapidoid", "Date": "2015-02-28T22:38:13Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((db.getMapItems()) != null) { api.setMapItems(objectMapper.readValue(db.getMapItems(), new com.fasterxml.jackson.core.type.TypeReference<java.util.List<lt.tieto.msi2016.order.model.MapItems>>() {})); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8421/buggy-version/src.main.java.lt.tieto.msi2016.order.service.OrderService.java", "BodyUseAPI": ["lt.tieto.msi2016.order.repository.model.OrderDb.getMapItems()", "com.fasterxml.jackson.databind.ObjectMapper.readValue(db.getMapItems(),com.fasterxml.jackson.core.type.TypeReference<java.util.List<lt.tieto.msi2016.order.model.MapItems>>)", "lt.tieto.msi2016.order.model.Order.setMapItems(objectMapper.readValue(db.getMapItems(), new com.fasterxml.jackson.core.type.TypeReference<java.util.List<lt.tieto.msi2016.order.model.MapItems>>() {}))"], "Fixed commit": "64eb85925b9185bd6908dec1a5349f23b31f0316", "Url": "https://api.github.com/repos/tieto-lt/javainiai", "Date": "2016-08-23T10:29:20Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jitsi.jicofo.JitsiMeetConfig.getPreConfiguredVideobridge()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(org.jitsi.jicofo.StringUtils.isNullOrEmpty(preConfiguredBridge))) { services.getBridgeSelector().setPreConfiguredBridge(preConfiguredBridge); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8806/buggy-version/src.main.java.org.jitsi.jicofo.JitsiMeetConference.java", "BodyUseAPI": ["services.getBridgeSelector().setPreConfiguredBridge(java.lang.String)"], "Fixed commit": "3f9b739eaac5d62f005307a46f6383d0b6dfc581", "Url": "https://api.github.com/repos/pstros/jicofo", "Date": "2015-11-16T20:25:42Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (preConfiguredBridge == null) throw new java.lang.NullPointerException(\"preConfiguredBridge\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8806/buggy-version/src.main.java.org.jitsi.jicofo.BridgeSelector.java", "BodyUseAPI": [], "Fixed commit": "3f9b739eaac5d62f005307a46f6383d0b6dfc581", "Url": "https://api.github.com/repos/pstros/jicofo", "Date": "2015-11-16T20:25:42Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.saxon.s9api.XdmNode.getAttributeValue(net.sf.saxon.s9api.QName)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (name.contains(\":\")) { pname = new net.sf.saxon.s9api.QName(name, pnode); }else { pname = new net.sf.saxon.s9api.QName(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/481/buggy-version/src.main.java.com.xmlcalabash.runtime.XAtomicStep.java", "BodyUseAPI": [], "Fixed commit": "c76b38b924916eb9e2d7e407132269a511cd8a3c", "Url": "https://api.github.com/repos/ndw/xmlcalabash1", "Date": "2015-08-29T11:54:55Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (itemId == (android.R.id.home)) { onBackPressed(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7212/buggy-version/src.main.java.fr.cobaltians.cobalt.activities.CobaltActivity.java", "BodyUseAPI": [], "Fixed commit": "fe12d10131bfcbcfe6917b16bac68e4a6affc6cd", "Url": "https://api.github.com/repos/cobaltians/Cobalt-Android", "Date": "2015-12-23T14:51:48Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((val.authority) != null) { valueElem.getField().add(org.dspace.xoai.util.ItemUtils.createValue(factory, \"authority\", val.authority)); valueElem.getField().add(org.dspace.xoai.util.ItemUtils.createValue(factory, \"confidence\", ((val.confidence) + \"\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4830/buggy-version/dspace-oai.dspace-oai-api.src.main.java.org.dspace.xoai.util.ItemUtils.java", "BodyUseAPI": ["valueElem.getField().add(Element.Field)", "org.dspace.xoai.util.ItemUtils.createValue(com.lyncode.xoai.dataprovider.xml.xoai.ObjectFactory,java.lang.String,((val.confidence) + \"\"))", "valueElem.getField().add(Element.Field)", "org.dspace.xoai.util.ItemUtils.createValue(com.lyncode.xoai.dataprovider.xml.xoai.ObjectFactory,java.lang.String,val.authority)"], "Fixed commit": "b1a50afc424fdd0f5113c4c01dbd0f7a2a14a771", "Url": "https://api.github.com/repos/lyncode/DSpace", "Date": "2012-07-27T02:20:01Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dc.authority) != null) { doc.addField((key + \".authority\"), dc.authority); doc.addField((key + \".confidence\"), ((dc.confidence) + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4830/buggy-version/dspace-oai.dspace-oai-api.src.main.java.org.dspace.xoai.app.XOAI.java", "BodyUseAPI": ["org.apache.solr.common.SolrInputDocument.addField(java.lang.String,dc.authority)", "org.apache.solr.common.SolrInputDocument.addField(java.lang.String,((dc.confidence) + \"\"))"], "Fixed commit": "b1a50afc424fdd0f5113c4c01dbd0f7a2a14a771", "Url": "https://api.github.com/repos/lyncode/DSpace", "Date": "2012-07-27T02:20:01Z"},
{"Line": "=>701", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (_rkName)) { updateSql.append(\",?\"); updateParams.add(rk); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1152/buggy-version/persistence-impl.src.main.java.com.distelli.persistence.impl.mysql.MysqlIndex.java", "BodyUseAPI": [], "Fixed commit": "0a402ea0f6f07e07c146846fa7a58cd69c05db19", "Url": "https://api.github.com/repos/Distelli/java-persistence", "Date": "2017-02-22T15:40:33Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xpn.xwiki.web.Utils.getComponentList(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(cssExtList.isEmpty())) { cssList = new java.util.Vector(); for (com.celements.css.ICssExtensionRole cssExt : cssExtList) { com.celements.web.plugin.cmd.CssCommand.LOGGER.debug(\"includeApplicationDefaultCSS: for '{}'\", cssExt.getClass()); cssList.addAll(cssExt.getCssList()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3747/buggy-version/src.main.java.com.celements.web.plugin.cmd.CssCommand.java", "BodyUseAPI": [], "Fixed commit": "2cef17b6706ab410cd6da10a20820bc143334ca9", "Url": "https://api.github.com/repos/celements/celements-core", "Date": "2016-03-13T15:37:55Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.traccar.MQTTDataHandler.numberOfReceived) != (org.traccar.MQTTDataHandler.numberOfSent)) { java.lang.System.out.println(\"[ERROR] Number of received messages != Number of sent messages!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6501/buggy-version/src.org.traccar.MQTTDataHandler.java", "BodyUseAPI": [], "Fixed commit": "44e90c8d07c036f997622c8051dccd85fb2060ae", "Url": "https://api.github.com/repos/fleetr-eu/traccar", "Date": "2016-05-04T12:49:31Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dougkoellmer.server.homecells.I_HomeCellContent.getSafetyLevel(E_CodeType.COMPILED)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (compiledSafety == (swarm.shared.entities.E_CodeSafetyLevel.LOCAL_SANDBOX)) { sourceCodeRaw = sourceCodeForCompiled.replace(\"<body>\", sourceCodeForSplash); }else { sourceCodeRaw = ((\"<splash>\" + sourceCodeForSplash) + \"</splash>\") + sourceCodeForCompiled; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/9147/buggy-version/project.src.com.dougkoellmer.server.homecells.HomeCellCreator.java", "BodyUseAPI": [], "Fixed commit": "54cd7ef96ec156248d2eb62106f598061119c725", "Url": "https://api.github.com/repos/dougkoellmer/dougkoellmer_com", "Date": "2014-02-28T05:35:33Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rowCount == 10) { m_height += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/9147/buggy-version/project.src.com.dougkoellmer.server.homecells.ThumbnailHomeCellContent.java", "BodyUseAPI": [], "Fixed commit": "54cd7ef96ec156248d2eb62106f598061119c725", "Url": "https://api.github.com/repos/dougkoellmer/dougkoellmer_com", "Date": "2014-02-28T05:35:33Z"},
{"Line": "=>518", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.agmip.dome.Engine.isSkippedRule(java.util.HashMap<java.lang.String, java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isSkippedRule) { if (!(cmd.equals(\"FILL\"))) { rule.put(\"cmd\", \"REPLACE\"); } exp.remove(\"soil\"); exp.remove(\"weather\"); applyRule(exp, rule); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/902/buggy-version/src.main.java.org.agmip.dome.Engine.java", "BodyUseAPI": [], "Fixed commit": "2b354988dbc6c97e049cf346e976a869414730c9", "Url": "https://api.github.com/repos/agmip/dome", "Date": "2016-02-18T02:55:45Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["database.getStorage().getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((storageType.equals(OEngineLocal.NAME)) || (storageType.equals(OEngineLocalPaginated.NAME))) database.getStorage().commit(this, callback); else { database.getStorage().callInLock(new java.util.concurrent.Callable<java.lang.Object>() { @java.lang.Override public java.lang.Object call() throws java.lang.Exception { database.getStorage().commit(com.orientechnologies.orient.core.tx.OTransactionOptimistic.this, null); callback.run(); return null; } }, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5312/buggy-version/core.src.main.java.com.orientechnologies.orient.core.tx.OTransactionOptimistic.java", "BodyUseAPI": [], "Fixed commit": "4bb8b27e7fb80466c22eed7c7a67c612b673eb92", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2013-09-03T17:41:24Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.fabric8.jenkins.openshiftsync.OpenShiftUtils.isConfigMapFlagEnabled(io.fabric8.kubernetes.api.model.ConfigMap,io.fabric8.jenkins.openshiftsync.ConfigMapKeys.ROOT_JOB)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!rootJob) { parent = io.fabric8.jenkins.openshiftsync.OpenShiftUtils.getFullNameParent(activeInstance, jobFullName, io.fabric8.jenkins.openshiftsync.OpenShiftUtils.getNamespace(configMap)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4561/buggy-version/src.main.java.io.fabric8.jenkins.openshiftsync.ConfigMapWatcher.java", "BodyUseAPI": [], "Fixed commit": "4b5885ab5b10be7a9e87a6d75ac61b99f406d58f", "Url": "https://api.github.com/repos/rupalibehera/jenkins-sync-plugin", "Date": "2017-07-19T07:21:56Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.get(HttpHeaders.ACCEPT)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(org.apache.commons.lang.StringUtils.isEmpty(acceptType))) && (!(\"*/*\".equals(acceptType)))) { axis2MC.setProperty(Constants.Configuration.MESSAGE_TYPE, acceptType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7038/buggy-version/components.apimgt.org.wso2.carbon.apimgt.gateway.src.main.java.org.wso2.carbon.apimgt.gateway.handlers.Utils.java", "BodyUseAPI": ["org.apache.synapse.MessageContext.setProperty(Constants.Configuration.MESSAGE_TYPE,java.lang.String)"], "Fixed commit": "69355244e759f8c59ffef4f36ad37d2dc7ec8eaa", "Url": "https://api.github.com/repos/ruks/carbon-apimgt", "Date": "2016-04-19T03:54:07Z"},
{"Line": "=>1200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.Jsoup.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (doc.text().contains(\"No html file set\")) { throw new de.geeksfactory.opacclient.apis.OpacErrorException(stringProvider.getString(StringProvider.WRONG_LOGIN_DATA)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1708/buggy-version/src.de.geeksfactory.opacclient.apis.BiBer1992.java", "BodyUseAPI": [], "Fixed commit": "a6b2a80d0cbc95ad80c2a0358f339a55f6cc5e00", "Url": "https://api.github.com/repos/raphaelm/opacclient", "Date": "2014-10-17T09:28:01Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (field_name.equals(\"status_message\")) { field_values = new org.json.JSONArray(((\"[\\\"\" + (e.getSelectedItem().toString().replace(\"None\", \"\"))) + \"\\\"]\")); }else if ((field_name.equals(\"gender\")) || (field_name.equals(\"ffl_gender\"))) { field_values = new org.json.JSONArray(((\"[\\\"\" + (e.getSelectedItem().toString().toLowerCase())) + \"\\\"]\")); }else { field_values = new org.json.JSONArray(((\"[\\\"\" + (e.getSelectedItem().toString())) + \"\\\"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2969/buggy-version/app.src.main.java.com.llp.lunchkaki.services.WebSocketService.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "ccadd5910388d181d529818639953cb81c02d555", "Url": "https://api.github.com/repos/brianfwz/lkk", "Date": "2016-05-02T01:33:50Z"},
{"Line": "=>598", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["views.karel.KarelTable.getInstance().getKarelCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (karelCode.isEmpty()) { java.lang.System.out.println(\"karelCode is empty!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8675/buggy-version/src.controllers.ButtonHandlers.java", "BodyUseAPI": [], "Fixed commit": "9757c42d6fd43246a5f8d3902e6716b6d9c4c397", "Url": "https://api.github.com/repos/kapadiamush/Eve-s-Adventure", "Date": "2014-12-10T20:58:26Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentLocation[0]) == tempCurrentLocation) { blacklistSites.add(on()); java.lang.System.out.println((\"This location was added\" + (java.util.Arrays.toString(currentLocation)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1898/buggy-version/src.MazeLogic.MazeSolver.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.util.Arrays.toString(int[])"], "Fixed commit": "642bdb39a1d37def0156668ae39ff30be3eda88d", "Url": "https://api.github.com/repos/shinn16/MazeSolver", "Date": "2016-09-22T19:02:58Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(networkConnection.isNetworkAvailable())) { showMessage(getString(R.string.error_your_network)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7502/buggy-version/src.no.digipost.android.gui.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "dc7cd934bfa428978a857914d1bff76d31bb7e8e", "Url": "https://api.github.com/repos/digipost/android", "Date": "2013-03-13T16:20:36Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (address.equals(\"correct\")) moe.yukisora.shitake.api.PlayerAPIClient.getInstance().get(thisClient.address).score += GameAPIClient.CORRECT_ANSWER_SCORE; else moe.yukisora.shitake.api.PlayerAPIClient.getInstance().get(address).score += GameAPIClient.CORRECT_ANSWER_SCORE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3869/buggy-version/app.src.main.java.moe.yukisora.shitake.api.BluetoothServer.java", "BodyUseAPI": ["moe.yukisora.shitake.api.PlayerAPIClient.getInstance().get(java.lang.String)"], "Fixed commit": "c1109ab2113b7b8a0960626cce33e514f2dc3194", "Url": "https://api.github.com/repos/YukiSora/shitake", "Date": "2016-11-11T17:44:51Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rotatedLabel) { domainAxis.setCategoryLabelPositions(org.jfree.chart.axis.CategoryLabelPositions.createUpRotationLabelPositions(((java.lang.Math.PI) / 6.0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/235/buggy-version/src.main.java.com.rca.service.GenerateGraph.java", "BodyUseAPI": [], "Fixed commit": "6f57af9ec7008685a1927a4ed0d28f7d82a872f8", "Url": "https://api.github.com/repos/kchhipa/rcautility", "Date": "2015-04-13T11:34:30Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.floor(event.getTarget().getLocation().distance(zombie.getLocation()))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (distance < 0) distance = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4367/buggy-version/src.main.java.com.sk89q.craftbook.mech.ai.ZombieAIMechanic.java", "BodyUseAPI": [], "Fixed commit": "7403a7931902a0a19217d86bde5f19608d3874e1", "Url": "https://api.github.com/repos/MCRUS/craftbook", "Date": "2013-01-26T23:59:16Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldGenerateMapping) { generateMapping(classMap, globalConfiguration, buildTimeGenerators); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7491/buggy-version/core.src.main.java.org.dozer.classmap.ClassMapBuilder.java", "BodyUseAPI": [], "Fixed commit": "32ad357fe15dc29a3318be87f79bb688c994eb2b", "Url": "https://api.github.com/repos/garethahealy/dozer", "Date": "2017-08-16T07:23:58Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (object instanceof org.simbrain.network.core.Neuron) { ret.add(net.getObjectNodeMap().get(object)); }else if (object instanceof org.simbrain.network.core.Synapse) { ret.add(net.getObjectNodeMap().get(object)); }else if (object instanceof org.simbrain.network.core.NetworkTextObject) { ret.add(net.getObjectNodeMap().get(object)); }else if (object instanceof org.simbrain.network.groups.NeuronGroup) { ret.add(net.getObjectNodeMap().get(object)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8724/buggy-version/src.org.simbrain.network.gui.Clipboard.java", "BodyUseAPI": ["net.getObjectNodeMap().get(java.lang.Object)", "java.util.ArrayList<java.lang.Object>.add(net.getObjectNodeMap().get(object))", "net.getObjectNodeMap().get(java.lang.Object)", "java.util.ArrayList<java.lang.Object>.add(net.getObjectNodeMap().get(object))", "java.util.ArrayList<java.lang.Object>.add(net.getObjectNodeMap().get(object))", "net.getObjectNodeMap().get(java.lang.Object)", "net.getObjectNodeMap().get(java.lang.Object)", "java.util.ArrayList<java.lang.Object>.add(net.getObjectNodeMap().get(object))"], "Fixed commit": "7360e8bd572983552309538c6d28429411eaf22b", "Url": "https://api.github.com/repos/simbrain/simbrain", "Date": "2017-08-07T14:39:44Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["build.getWorkspace().getRemote().split(((\"workspace\" + (java.io.File.separator)) + (project.getRootProject().getName())))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parts.length) > 1) { pathOnMaster += parts[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/9060/buggy-version/src.main.java.com.michelin.cio.hudson.plugins.copytoslave.CopyToSlaveUtils.java", "BodyUseAPI": [], "Fixed commit": "6482c22c3a313c0ba8c83c553b1711a3d40c081e", "Url": "https://api.github.com/repos/jenkinsci/copy-to-slave-plugin", "Date": "2015-02-23T05:00:46Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.startsWith(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isWindows || (\"false\".equalsIgnoreCase(java.lang.System.getProperty(\"nohup\")))) { RunFromCMD.in2Out(java.lang.System.in, process.getOutputStream()); RunFromCMD.in2Out(process.getInputStream(), java.lang.System.out); RunFromCMD.in2Out(process.getErrorStream(), java.lang.System.out); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1566/buggy-version/JDiameterDemo.src.RunFromCMD.java", "BodyUseAPI": [], "Fixed commit": "698ed7b9433a4d10902270eef8ace61f906ec5eb", "Url": "https://api.github.com/repos/kouxing2000/temp", "Date": "2015-02-18T06:15:27Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index >= ((args.length) * (subWrappers.size()))) { onUnknownCommand(sender, command, label, args); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8797/buggy-version/src.main.java.team.unstudio.udpl.api.command.anno.AnnoCommandManager.java", "BodyUseAPI": ["team.unstudio.udpl.api.command.anno.AnnoCommandManager.onUnknownCommand(org.bukkit.command.CommandSender,org.bukkit.command.Command,java.lang.String,java.lang.String[])"], "Fixed commit": "6c7222fffb5cca8f7aef27b37fe821bebe773770", "Url": "https://api.github.com/repos/UnknownStudio/UDPLib", "Date": "2017-08-01T11:06:03Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arrayList.size()) > 0) { com.byteshaft.medicosperuanos.patients.CreateAppointmentActivity.DoctorServicesDialog dialog = new com.byteshaft.medicosperuanos.patients.CreateAppointmentActivity.DoctorServicesDialog(this); dialog.setTitle(\"Select Services\"); dialog.show(); }else { com.byteshaft.medicosperuanos.utils.Helpers.showSnackBar(findViewById(android.R.id.content), R.string.no_services_message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6205/buggy-version/app.src.main.java.com.byteshaft.medicosperuanos.patients.CreateAppointmentActivity.java", "BodyUseAPI": [], "Fixed commit": "9cb90a95ddfda59a24e6f7dba757167c13880980", "Url": "https://api.github.com/repos/rb-shahid/Medicosperuanos", "Date": "2017-04-29T17:46:01Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Constructor<? extends net.minecraft.entity.EntityLiving>.newInstance(net.minecraft.world.World)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(w.spawnEntity(living))) { throw new java.lang.Exception(\"Errore durante lo spawn dell'essere vivente!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1645/buggy-version/src.main.java.it.reti.minecraft.plugin.sample.helpers.GenericExtension.java", "BodyUseAPI": [], "Fixed commit": "b54976e9ed42fbb6cbbe67c1d058f1342e222b5b", "Url": "https://api.github.com/repos/biancini/Minecraft-Hackathon", "Date": "2017-06-11T06:27:21Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.event.entity.player.PlayerInteractEvent.RightClickItem.getEntityPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (player instanceof net.minecraft.client.entity.EntityPlayerSP) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1645/buggy-version/src.main.java.it.reti.minecraft.plugin.sample.hooks.LeatherHook.java", "BodyUseAPI": [], "Fixed commit": "b54976e9ed42fbb6cbbe67c1d058f1342e222b5b", "Url": "https://api.github.com/repos/biancini/Minecraft-Hackathon", "Date": "2017-06-11T06:27:21Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.isCanceled()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1645/buggy-version/src.main.java.it.reti.minecraft.plugin.sample.hooks.LeatherHook.java", "BodyUseAPI": [], "Fixed commit": "b54976e9ed42fbb6cbbe67c1d058f1342e222b5b", "Url": "https://api.github.com/repos/biancini/Minecraft-Hackathon", "Date": "2017-06-11T06:27:21Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mListener) != null) { mListener.onSearchStateChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8831/buggy-version/app.src.main.java.de.fau.cs.mad.fablab.android.view.fragments.productsearch.ProductSearchFragmentViewModel.java", "BodyUseAPI": [], "Fixed commit": "c6afcf654f4880114d04c839cedefe8d640bf157", "Url": "https://api.github.com/repos/FAU-Inf2/fablab-android", "Date": "2015-07-06T11:14:30Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cache.getIngredient(position).getPhoto()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (p != null) { java.io.File file = new java.io.File(p.getAbsolutePath()); if (file.exists()) file.delete(); sendBroadcast(new android.content.Intent(android.content.Intent.ACTION_MEDIA_MOUNTED, android.net.Uri.parse((\"file://\" + (android.os.Environment.getExternalStorageDirectory()))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2898/buggy-version/src.com.github.cmput301w13t04.food.view.ActivityViewIngredient.java", "BodyUseAPI": ["com.github.cmput301w13t04.food.model.Photo.getAbsolutePath()"], "Fixed commit": "7a0195f48b447a262f6dd4c80a4012ee7098af19", "Url": "https://api.github.com/repos/CMPUT301W13T04/Food", "Date": "2013-04-02T01:02:06Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["teamcool.tradego.Models.Item.getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (currStatus.equalsIgnoreCase(\"On hold\")) statusIndx = 0; else if (currStatus.equalsIgnoreCase(\"Available\")) statusIndx = 1; else statusIndx = 2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6226/buggy-version/app.src.main.java.teamcool.tradego.Activities.AddItemActivity.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "5dad24b64b242db6f9bedf6b5af549531041e6bf", "Url": "https://api.github.com/repos/lguti97/TradersApp", "Date": "2016-08-01T22:27:20Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.shangtech.framework.dao.impl.QueryInterceptor.getQueryParam(java.lang.annotation.Annotation[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (queryParam != null) { holder.put(queryParam.value(), arg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8624/buggy-version/src.main.java.net.shangtech.framework.dao.impl.QueryInterceptor.java", "BodyUseAPI": ["net.shangtech.framework.util.MapHolder<java.lang.String>.put(queryParam.value(),java.lang.Object)", "net.shangtech.framework.dao.impl.QueryParam.value()"], "Fixed commit": "dab12de27dba2f8d6c5bb4bda945e925a0a60f7b", "Url": "https://api.github.com/repos/tsingheng/shangtech-framework", "Date": "2015-11-23T07:47:23Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.shangtech.framework.dao.impl.QueryInterceptor.getQueryParam(java.lang.annotation.Annotation[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (queryParam != null) { holder.put(queryParam.value(), arg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8624/buggy-version/src.main.java.net.shangtech.framework.dao.impl.QueryInterceptor.java", "BodyUseAPI": ["net.shangtech.framework.dao.impl.QueryParam.value()", "net.shangtech.framework.util.MapHolder<java.lang.String>.put(queryParam.value(),java.lang.Object)"], "Fixed commit": "dab12de27dba2f8d6c5bb4bda945e925a0a60f7b", "Url": "https://api.github.com/repos/tsingheng/shangtech-framework", "Date": "2015-11-23T07:47:23Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.dao.DataIntegrityViolationException.getMostSpecificCause()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (realCause.getMessage().contains(\"account_no_UNIQUE\")) { final java.lang.String accountNo = command.stringValueOfParameterNamed(\"accountNo\"); throw new org.mifosplatform.infrastructure.core.exception.PlatformDataIntegrityException(\"error.msg.client.duplicate.accountNo\", ((\"Client with accountNo `\" + accountNo) + \"` already exists\"), \"accountNo\", accountNo); }else if (realCause.getMessage().contains(\"mobile_no\")) { final java.lang.String mobileNo = command.stringValueOfParameterNamed(\"mobileNo\"); throw new org.mifosplatform.infrastructure.core.exception.PlatformDataIntegrityException(\"error.msg.client.duplicate.mobileNo\", ((\"Client with mobileNo `\" + mobileNo) + \"` already exists\"), \"mobileNo\", mobileNo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1295/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.portfolio.client.service.ClientWritePlatformServiceJpaRepositoryImpl.java", "BodyUseAPI": ["java.lang.Throwable.getMessage()", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "cb42ff118bb3b835787e2aaffa0cdb245a4d2c0b", "Url": "https://api.github.com/repos/sandeepkumaraitha/mifosx", "Date": "2014-01-27T08:06:14Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Queue<org.apache.cassandra.utils.memory.BufferPool.Chunk>.poll()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (chunk == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/267/buggy-version/src.java.org.apache.cassandra.utils.memory.BufferPool.java", "BodyUseAPI": [], "Fixed commit": "86f43b019b924e63e5736ba55744b05c6ee39268", "Url": "https://api.github.com/repos/stef1927/cassandra", "Date": "2015-05-13T04:37:22Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(entry.equalsIgnoreCase(\"\"))) { entry = entry.trim(); if (supernetsummarizer.SuperNetSummarizer.isValidCIDRRange(entry)) { org.apache.commons.net.util.SubnetUtils tempCidr = new org.apache.commons.net.util.SubnetUtils(entry); java.lang.String[] ipsInRange = tempCidr.getInfo().getAllAddresses(); for (java.lang.String ip : ipsInRange) { if ((!(ips.contains(ip))) && (!(ipAddresses.contains(ip)))) ips.add(ip); } }else { if (supernetsummarizer.SuperNetSummarizer.isValidIp(entry)) { if (!(ips.contains(entry))) ips.add(entry); }else { throw new java.lang.IllegalArgumentException(((\"The entry '\" + entry) + \"' is not a valid IP address or CIDR range.\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3978/buggy-version/src.main.java.supernetsummarizer.SuperNetSummarizer.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "bd593a4c151360bbef0f0e16c78bdcf7e4b722ec", "Url": "https://api.github.com/repos/mdebenito/SuperNetSummarizer", "Date": "2017-05-08T14:20:05Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == (this.epfd.p.pid)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8837/buggy-version/Distributed_Algorithms_CW.src.EventuallyPerfectFailureDetector.java", "BodyUseAPI": [], "Fixed commit": "a69c3af6421838c77fb39e3e2a977b50e9cbee97", "Url": "https://api.github.com/repos/laurayuwen/XHHXYWSJ", "Date": "2013-03-11T11:28:05Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (estimatedMeanSize < 1) { estimatedMeanSize = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2849/buggy-version/src.dna.graph.datastructures.GraphDataStructure.java", "BodyUseAPI": [], "Fixed commit": "08e5505772b29dee6efb0c9f6ad22cbe2c0f5077", "Url": "https://api.github.com/repos/Rwilmes/DNA", "Date": "2014-04-13T11:45:45Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (info.contains(\"x86\")) { info += \"x86\"; }else if (info.contains(\"arm64\")) { info += \"arm64\"; }else { info += \"arm\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1678/buggy-version/app.src.main.java.de.robv.android.xposed.installer.installation.StatusInstallerFragment.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)"], "Fixed commit": "ac567f993be940aff0a2aa579034e24209992731", "Url": "https://api.github.com/repos/DVDAndroid/XposedInstaller", "Date": "2016-11-16T05:40:51Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (itVars.hasNext()) printWriter.write(\",\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/9122/buggy-version/tds.src.main.java.thredds.server.ncSubset.view.CSVPointDataWriter.java", "BodyUseAPI": [], "Fixed commit": "09397214830b1755e3357c641aeda09274034481", "Url": "https://api.github.com/repos/Unidata/thredds", "Date": "2013-04-22T21:11:46Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (itVars.hasNext()) printWriter.write(\",\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/9122/buggy-version/tds.src.main.java.thredds.server.ncSubset.view.CSVPointDataWriter.java", "BodyUseAPI": [], "Fixed commit": "09397214830b1755e3357c641aeda09274034481", "Url": "https://api.github.com/repos/Unidata/thredds", "Date": "2013-04-22T21:11:46Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (itVars.hasNext()) printWriter.write(\",\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/9122/buggy-version/tds.src.main.java.thredds.server.ncSubset.view.CSVPointDataWriter.java", "BodyUseAPI": [], "Fixed commit": "09397214830b1755e3357c641aeda09274034481", "Url": "https://api.github.com/repos/Unidata/thredds", "Date": "2013-04-22T21:11:46Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gridgain.inspection.PsiAnnotation.getQualifiedName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.gridgain.inspection.NotNull.class.getName().equals(name)) { }else if (java.lang.Override.class.getName().equals(name)) checkSameLineWithMethodName(ann); else { if ((!(hasLineBreak(ann, true))) || (!(hasLineBreak(ann, false)))) { holder.registerProblem(ann, ((\"Annotation @\" + (ann.getNameReferenceElement().getReferenceName())) + \" must be on the separated line\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6569/buggy-version/src.org.gridgain.inspection.GridAnnotationInspection.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "4b3881c199eb42d583f33a50b9a76768a9d54b3f", "Url": "https://api.github.com/repos/sevdokimov-gg/gg-abbrev-plugin", "Date": "2014-10-25T14:02:00Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.tudelft.contextproject.model.entities.Entity.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((loc.x) - xCoord) > (nl.tudelft.contextproject.util.webinterface.ActionUtil.GATE_RADIUS)) || (((loc.z) - yCoord) > 2.0F)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/257/buggy-version/src.main.java.nl.tudelft.contextproject.util.webinterface.ActionUtil.java", "BodyUseAPI": [], "Fixed commit": "391b928629a4ec2bec2a3e616bbaa69c3e894f9b", "Url": "https://api.github.com/repos/Taeir/ContextProject-MIGI2", "Date": "2016-06-08T22:42:26Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index == (-1)) { return \"\"; }else { return str.substring(index, str.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2944/buggy-version/src.aya.InteractiveAya.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "534f72b5ed603978bfc0e4d57e233d9227774a3e", "Url": "https://api.github.com/repos/nick-paul/aya-lang", "Date": "2017-07-09T02:57:18Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (_method.getName().equalsIgnoreCase(targetMethod.name())) { java.lang.Class<?>[] parameterTypes = _method.getParameterTypes(); boolean isCallableMethod = false; for (java.lang.Class<?> parameterType : parameterTypes) { if (com.dianping.zebra.dao.AsyncDaoCallback.class.isAssignableFrom(parameterType)) { isCallableMethod = true; break; } } if (!isCallableMethod) { return _method; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/537/buggy-version/src.main.java.com.dianping.zebra.dao.AsyncMapperProxy.java", "BodyUseAPI": ["java.lang.reflect.Method.getParameterTypes()"], "Fixed commit": "db0ed06813be3f85914262fe465a01a40a174716", "Url": "https://api.github.com/repos/ainilife/zebra-dao", "Date": "2016-03-16T05:10:45Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (v.hasStringInput(input)) { android.content.Intent intent = new android.content.Intent(getApplicationContext(), co.miniforge.corey.stringanalyzer.AnalyzerActivity.class); intent.putExtra(co.miniforge.corey.stringanalyzer.InputActivity.intentTag, input.getText().toString()); startActivity(intent); }else { input.setText(\"\"); android.widget.Toast.makeText(getApplicationContext(), getString(R.string.input_error_empty_message), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3059/buggy-version/StringAnalyzer.app.src.main.java.co.miniforge.corey.stringanalyzer.InputActivity.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)", "android.widget.EditText.getText()", "android.content.Intent.putExtra(java.lang.String,input.getText().toString())", "input.getText().toString()"], "Fixed commit": "17cf63d7d8eafc8ca93d5610ba5d6b5b480ac3a1", "Url": "https://api.github.com/repos/PertySlick/Assignment03_StringAnalyzer", "Date": "2017-10-19T02:56:54Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isDataValid(prepareData(data)))) throw new java.lang.RuntimeException(\"Validation exception\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7528/buggy-version/business.src.main.java.com.epam.freelancer.business.service.CustomerService.java", "BodyUseAPI": [], "Fixed commit": "a7234fd0432d69dfce9946cd2d6f98210597ae90", "Url": "https://api.github.com/repos/BohdanTfx/freelancer", "Date": "2016-02-03T21:24:32Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isConnected()) send(\"DISCONNECTED\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3415/buggy-version/server.src.guess_my_number_server.Session.java", "BodyUseAPI": [], "Fixed commit": "c654fadf2d1905d024290dd9ce03e742ba0d531d", "Url": "https://api.github.com/repos/pinne/guess_my_number", "Date": "2012-09-12T05:46:09Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["spoon.support.reflect.reference.CtTypeParameterReferenceImpl.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (parent instanceof spoon.reflect.reference.CtTypeReference) { if ((parent.isParentInitialized()) == false) { return null; } parent = parent.getParent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3108/buggy-version/src.main.java.spoon.support.reflect.reference.CtTypeParameterReferenceImpl.java", "BodyUseAPI": ["spoon.reflect.declaration.CtElement.getParent()", "spoon.reflect.declaration.CtElement.isParentInitialized()"], "Fixed commit": "953d7b8cdbc187c580b1096fe009459aade9923a", "Url": "https://api.github.com/repos/INRIA/spoon", "Date": "2017-06-20T13:36:49Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (logs.isEmpty()) return logs;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5636/buggy-version/araqne-logstorage.src.main.java.org.araqne.logstorage.dump.engine.LocalExportWorker.java", "BodyUseAPI": [], "Fixed commit": "9ae189e67c51bcaebcd58c425b65d69af860a58b", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-03-11T11:38:49Z"},
{"Line": "=>675", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5573/buggy-version/src.com.matoyan.conbumusubi.PostDataActivity.java", "BodyUseAPI": [], "Fixed commit": "c089550df683ee9519bc527a98cb9d2f95fc00dc", "Url": "https://api.github.com/repos/matoyan/ConbuMusubi", "Date": "2011-11-01T23:06:55Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pID.equals(\"rebuild-test\")) { return (\"p_\" + pID) + \"+i\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1059/buggy-version/IndexRebuild.src.main.java.com.xingcloud.xa.indextools.IndexRebuilder.java", "BodyUseAPI": [], "Fixed commit": "62b0cbc81458c241cfa0b8c8b777ff124c85761a", "Url": "https://api.github.com/repos/XingCloud/HSecondaryIndex", "Date": "2013-08-22T05:02:53Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (AuthDB.AuthDB_PasswordTries.containsKey(player.getName())) { temp = AuthDB.AuthDB_PasswordTries.get(player.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/9035/buggy-version/src.main.java.com.authdb.util.Messages.java", "BodyUseAPI": ["org.bukkit.entity.Player.getName()", "AuthDB.AuthDB_PasswordTries.get(player.getName())"], "Fixed commit": "19694718d76fc03bb92ef7b4f9d62032eaa3133b", "Url": "https://api.github.com/repos/CraftFire/AuthDB", "Date": "2011-08-29T20:51:08Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entity instanceof net.minecraft.entity.player.EntityPlayer) { MinecraftForge.EVENT_BUS.post(new net.ilexiconn.llibrary.client.event.PlayerModelEvent.SetRotationAngles(model, ((net.minecraft.entity.player.EntityPlayer) (entity)), limbSwing, limbSwingAmount, rotation, rotationYaw, rotationPitch, scale)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8659/buggy-version/src.main.java.net.ilexiconn.llibrary.server.asm.LLibraryHooks.java", "BodyUseAPI": [], "Fixed commit": "fee87430e6853e8819244c97c99c22c7d4430a69", "Url": "https://api.github.com/repos/iLexiconn/LLibrary", "Date": "2016-06-07T12:48:08Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entity instanceof net.minecraft.entity.player.EntityPlayer) { MinecraftForge.EVENT_BUS.post(new net.ilexiconn.llibrary.client.event.PlayerModelEvent.Render(model, ((net.minecraft.entity.player.EntityPlayer) (entity)), limbSwing, limbSwingAmount, rotation, rotationYaw, rotationPitch, scale)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8659/buggy-version/src.main.java.net.ilexiconn.llibrary.server.asm.LLibraryHooks.java", "BodyUseAPI": [], "Fixed commit": "fee87430e6853e8819244c97c99c22c7d4430a69", "Url": "https://api.github.com/repos/iLexiconn/LLibrary", "Date": "2016-06-07T12:48:08Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.google.common.base.Strings.isNullOrEmpty(fullHostHeader))) try { final java.lang.String host = com.google.common.collect.Iterables.getFirst(com.eucalyptus.objectstorage.pipeline.ObjectStorageRESTPipeline.hostSplitter.split(fullHostHeader), fullHostHeader); final org.xbill.DNS.Name hostDnsName = org.xbill.DNS.Name.fromString(host, Name.root); return com.eucalyptus.util.dns.DomainNames.systemDomainFor(com.eucalyptus.objectstorage.ObjectStorage.class, hostDnsName).isPresent(); } catch (java.lang.Exception e) { com.eucalyptus.objectstorage.pipeline.ObjectStorageRESTPipeline.LOG.error((\"Error parsing domain name from hostname: \" + fullHostHeader), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2665/buggy-version/clc.modules.object-storage.src.main.java.com.eucalyptus.objectstorage.pipeline.ObjectStorageRESTPipeline.java", "BodyUseAPI": ["org.apache.log4j.Logger.error(java.lang.String,java.lang.Exception)", "com.google.common.collect.Iterables.getFirst(com.eucalyptus.objectstorage.pipeline.ObjectStorageRESTPipeline.hostSplitter.split(fullHostHeader),java.lang.String)", "com.google.common.base.Splitter.split(java.lang.String)"], "Fixed commit": "74971c7e0e62d7b61e33653104e1fbb46c87d54b", "Url": "https://api.github.com/repos/eucalyptus/eucalyptus", "Date": "2016-12-16T06:49:07Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getTileEntity(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tile instanceof com.builtbroken.woodenbucket.bucket.IFluidHandler) { return itemstack; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5554/buggy-version/woodenBucket.src.main.java.com.builtbroken.woodenbucket.bucket.ItemWoodenBucket.java", "BodyUseAPI": [], "Fixed commit": "0779bd4e00be33bbd81899cb5f926c0504c312aa", "Url": "https://api.github.com/repos/BuiltBrokenModding/SingleBlockMods", "Date": "2015-08-18T02:33:11Z"},
{"Line": "=>610", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (permission.group.equals(Jenkins.PERMISSIONS)) { return base.hasPermission(a, permission); }else { return ((a.getName().equals(id)) && (!(a instanceof org.acegisecurity.providers.anonymous.AnonymousAuthenticationToken))) || (base.hasPermission(a, permission)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1670/buggy-version/core.src.main.java.hudson.model.User.java", "BodyUseAPI": ["hudson.security.ACL.hasPermission(org.acegisecurity.Authentication,hudson.security.Permission)", "hudson.security.ACL.hasPermission(org.acegisecurity.Authentication,hudson.security.Permission)"], "Fixed commit": "32bb95daf80f1ef8b5f6c77257f2eb606a30161b", "Url": "https://api.github.com/repos/rbierman/jenkins", "Date": "2013-07-16T12:33:29Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<ru.mail.park.domain.Id<ru.mail.park.domain.User>, ru.mail.park.mechanics.GameMechanics>.get(ru.mail.park.domain.Id<ru.mail.park.domain.User>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (mechanics != null) { mechanics.userDisconnected(userId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3205/buggy-version/src.main.java.ru.mail.park.mechanics.GameMechanicsService.java", "BodyUseAPI": ["ru.mail.park.mechanics.GameMechanics.userDisconnected(ru.mail.park.domain.Id<ru.mail.park.domain.User>)"], "Fixed commit": "9c4b40e21dac270d09967be5c96aa6a088b8dbe9", "Url": "https://api.github.com/repos/java-park-mail-ru/42-09-2017", "Date": "2017-12-15T17:48:23Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((msg.remaining()) < 8) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5375/buggy-version/src.com.xmms2droid.xmmsMsgHandling.XmmsMsgParser.java", "BodyUseAPI": [], "Fixed commit": "834dfbce2c940861a6f55f3cf326adb2f9b39150", "Url": "https://api.github.com/repos/tapdingo/xmms2Droid", "Date": "2011-05-30T15:59:26Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((contact.getBirthday()) != null) { org.joda.time.DateTime birthDay = new org.joda.time.DateTime(contact.getBirthday().getTime()); org.joda.time.DateTime today = org.joda.time.DateTime.now(); if (((birthDay.getMonthOfYear()) == (today.getMonthOfYear())) && ((birthDay.getDayOfMonth()) == (today.getDayOfMonth()))) { todayBirthdayContacts.add(contact); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/423/buggy-version/src.main.java.com.evgenyshilov.web.contacts.tasks.SendEmailJob.java", "BodyUseAPI": ["contact.getBirthday().getTime()", "java.util.ArrayList<com.evgenyshilov.web.contacts.database.model.Contact>.add(com.evgenyshilov.web.contacts.database.model.Contact)", "com.evgenyshilov.web.contacts.database.model.Contact.getBirthday()"], "Fixed commit": "8717b6d60cff166b22eecef4fedf3e5eb062b906", "Url": "https://api.github.com/repos/speane/contacts-web-app", "Date": "2016-10-09T11:32:05Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((widget != null) && (!(widget instanceof pneumaticCraft.common.progwidgets.ProgWidgetString))) || ((widget2 != null) && (!(widget2 instanceof pneumaticCraft.common.progwidgets.ProgWidgetString)))) { curInfo.add(\"gui.progWidget.condition.error.shouldConnectTextPieces\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2006/buggy-version/src.pneumaticCraft.common.progwidgets.ProgWidgetConditionBase.java", "BodyUseAPI": [], "Fixed commit": "d46a902db413128a9368e261a35a46909bd5abc6", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2015-08-10T08:47:45Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (columnName == null) { cz.cuni.mff.xrg.uv.transformer.tabular.mapper.TableToRdfConfigurator.LOG.warn(\"Column with name='null' is ignored.\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3173/buggy-version/dpu.t-tabular.src.main.java.cz.cuni.mff.xrg.uv.transformer.tabular.mapper.TableToRdfConfigurator.java", "BodyUseAPI": [], "Fixed commit": "d5233f8e36c01e632f829f940d4d08879a16702a", "Url": "https://api.github.com/repos/mff-uk/DPUs", "Date": "2014-10-20T12:18:14Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((compact) != null) { return compact.replace(\"null\u00a3\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5192/buggy-version/app.src.main.java.downloadLectio.GetNames.java", "BodyUseAPI": [], "Fixed commit": "104847a2b24b56b103677c1268bd458d0a735052", "Url": "https://api.github.com/repos/Zentarg/Open-Lectio", "Date": "2017-01-07T00:50:14Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list.equals(\"non\")) { android.widget.Toast.makeText(this, \"Dette gymnasie er ikke i brug\", Toast.LENGTH_LONG).show(); android.content.Intent intent2 = new android.content.Intent(this, one.dichmann.lectioapp.LoginActivity.class); startActivity(intent2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5192/buggy-version/app.src.main.java.one.dichmann.lectioapp.LoginActivityTwo.java", "BodyUseAPI": [], "Fixed commit": "104847a2b24b56b103677c1268bd458d0a735052", "Url": "https://api.github.com/repos/Zentarg/Open-Lectio", "Date": "2017-01-07T00:50:14Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.chuanonly.livewallpaper.util.Util.parseWeatherInfo(com.chuanonly.livewallpaper.MyApplication.getContext(),org.w3c.dom.Document,woeidUtils.getWoeidInfo())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (weatherInfo != null) { weatherInfo.WoeidNumber = yahooCityCode; com.chuanonly.livewallpaper.util.Util.setStringToSharedPref(Util.SCENE_INFO, weatherInfo.getCurrentText()); com.chuanonly.livewallpaper.util.Util.setIntToSharedPref(Util.REAL_TYPE, com.chuanonly.livewallpaper.util.Util.changeYahooType(weatherInfo.getCurrentCode())); com.chuanonly.livewallpaper.util.Util.setIntToSharedPref(Util.TYPE, com.chuanonly.livewallpaper.util.Util.changeYahooType(weatherInfo.getCurrentCode())); com.chuanonly.livewallpaper.util.Util.setStringToSharedPref(Util.YAHOO_DESC, weatherInfo.getCurrentText()); com.chuanonly.livewallpaper.util.Util.setStringToSharedPref(Util.SCENE_TEMPERATUR, java.lang.String.valueOf(weatherInfo.getCurrentTempC())); com.chuanonly.livewallpaper.util.Util.setLongToSharedPref(Util.LAST_UPDATETIME, java.lang.System.currentTimeMillis()); com.chuanonly.livewallpaper.util.Util.setLongToSharedPref(Util.LAST_PICK_TIME, 0); int mode = com.chuanonly.livewallpaper.util.Util.getIntFromSharedPref(Util.MODE, (-1)); if (mode == (-1)) { com.chuanonly.livewallpaper.util.Util.setIntToSharedPref(Util.MODE, 2); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7786/buggy-version/src.com.chuanonly.livewallpaper.task.HTTPTask.java", "BodyUseAPI": [], "Fixed commit": "27749f9a761657a2c6f7d50ec81945d166269558", "Url": "https://api.github.com/repos/fuchuanjian/SlideMenu", "Date": "2014-05-22T10:59:52Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nschmidt.ldparteditor.composites.primitive.CompositePrimitive.getCanvas()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (canvas.isDisposed()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6708/buggy-version/src.org.nschmidt.ldparteditor.opengl.OpenGLRendererPrimitives33.java", "BodyUseAPI": [], "Fixed commit": "1339d826ea3b11549f4c419507cd88a93093c404", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2017-06-24T10:15:02Z"},
{"Line": "=>730", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eppic.ChainEvolContext.getSeqresSerial(org.biojava.bio.structure.Group)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (resSer == (-1)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3114/buggy-version/eppic-cli.src.main.java.eppic.ChainEvolContext.java", "BodyUseAPI": [], "Fixed commit": "8683d57e3c8a8f252afe3b79863b9b4bb8ba3bca", "Url": "https://api.github.com/repos/eppic-team/eppic", "Date": "2015-01-16T11:50:12Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["list.get(i).getResidueNumber()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (resser == (-1)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3114/buggy-version/eppic-cli.src.main.java.eppic.TextOutputWriter.java", "BodyUseAPI": [], "Fixed commit": "8683d57e3c8a8f252afe3b79863b9b4bb8ba3bca", "Url": "https://api.github.com/repos/eppic-team/eppic", "Date": "2015-01-16T11:50:12Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cleanTopLevel) { collection.removeInvalidChangeItemRequests(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/219/buggy-version/rest-provider.src.main.java.org.jboss.pressgang.ccms.provider.RESTDataProvider.java", "BodyUseAPI": [], "Fixed commit": "645a98c4fee1f425ac8adc9b794b4698d431c5ed", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSDatasourceProviders", "Date": "2013-09-06T06:04:33Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userID == 3) controller.updateFiles(this.u3);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8922/buggy-version/src.mediator.MediatorMock.java", "BodyUseAPI": [], "Fixed commit": "eda46312a4a22db669a1a4c67e3d674c7271f40f", "Url": "https://api.github.com/repos/Mondobot/nimicinteresant", "Date": "2014-03-29T17:41:53Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4284/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "f62fc55d0bc5f8625dfe96fc7e43d35cb03ce77b", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-08T16:08:21Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (valueName == null) { return new org.elasticsearch.common.collect.Tuple<java.lang.String, java.lang.String>(name, ((((((((\"def \" + name) + \" = 0; if(!doc['\") + strColumn) + \"'].empty) \") + name) + \"=doc['\") + strColumn) + \"'].value.toDouble()\")); }else { return new org.elasticsearch.common.collect.Tuple<java.lang.String, java.lang.String>(name, (((((((strColumn + \"; def \") + name) + \" = 0; if(\") + valueName) + \"!=null) \") + valueName) + \".toDouble()\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1179/buggy-version/src.main.java.org.nlpcn.es4sql.SQLFunctions.java", "BodyUseAPI": [], "Fixed commit": "4f82615794e25f4860bdfef4a2f598e3433c2d92", "Url": "https://api.github.com/repos/visionsky1986/elasticsearch-sql", "Date": "2016-12-08T08:28:06Z"},
{"Line": "=>657", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(single_pane)) { xz_canvas.requestFocusInWindow(); zy_canvas.requestFocusInWindow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5360/buggy-version/src.main.java.tracing.hyperpanes.MultiDThreePanes.java", "BodyUseAPI": [], "Fixed commit": "8d3f1d7cc888513664f999dde6dadcc7568e3450", "Url": "https://api.github.com/repos/tferr/Simple_Neurite_Tracer", "Date": "2017-12-27T04:47:54Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((((loadedImage == null) || ((loadedImage.getWidth()) <= 0)) || ((loadedImage.getHeight()) <= 0)) && (imageType == (Image_M.ImageType.BUSINESS))) imageView.setImageBitmap(android.graphics.BitmapFactory.decodeResource(context.getResources(), R.drawable.default_user_image)); else imageView.setImageBitmap(loadedImage);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6677/buggy-version/app.src.main.java.ir.rasen.charsoo.controller.image_loader.SimpleLoader.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)"], "Fixed commit": "9a18b75b186c16cc75b14795f087642cf02f9656", "Url": "https://api.github.com/repos/rasenir/charsoo", "Date": "2015-07-30T08:59:58Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((a.lesTaches.size()) == 0) { return a; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/190/buggy-version/PCCJava.src.aeroport.Agent.java", "BodyUseAPI": [], "Fixed commit": "1306f46c01ed4e41fe36556312442588b4ed1164", "Url": "https://api.github.com/repos/slayne/PCCJava", "Date": "2014-03-17T09:47:33Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDirectory()) { OFile[] filesList = listFiles(); for (int i = 0; i < (filesList.length); i++) filesList[i].copy(((destination + \"/\") + (filesList[i].getName())), standardCopyOption); if ((filesList.length) > 0) return new OFile((destination + \"/\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/781/buggy-version/OFile.java", "BodyUseAPI": [], "Fixed commit": "1eaa2ff0d11b976f1ad5dde452aacddbfde2c430", "Url": "https://api.github.com/repos/The-Ofek-Foundation/OFile", "Date": "2016-10-28T16:09:29Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.location.LocationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (location != null) { latitude = location.getLatitude(); longitude = location.getLongitude(); }else { location = locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER); if (location != null) { latitude = location.getLatitude(); longitude = location.getLongitude(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1101/buggy-version/app.src.main.java.edu.njit.fall15.team1.cs673messenger.controllers.Activities.ChattingWindowActivity.java", "BodyUseAPI": ["android.location.Location.getLatitude()", "android.location.Location.getLongitude()"], "Fixed commit": "599a07300d26db366b37a35dec883bc035080e89", "Url": "https://api.github.com/repos/JackQinCh/CS673Messenger", "Date": "2015-12-01T18:58:51Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(\"smb\".equals(uri.getScheme()))) { throw new java.lang.IllegalArgumentException(uri.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8453/buggy-version/smb.src.main.java.no.uis.nio.smb.SMBPath.java", "BodyUseAPI": [], "Fixed commit": "2ccba239d5a80c860fd89bd4ffbfe5210214a8b5", "Url": "https://api.github.com/repos/maddingo/nio-fs-provider", "Date": "2016-08-07T14:37:41Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((databaseProduct) == (DatabaseProduct.SQLSERVER)) && ((databaseMajorVersion) >= 11)) && (sql.toLowerCase().matches(\".+\\\\s+order\\\\s+by\\\\s+.+\"))) { java.lang.StringBuilder sb = new java.lang.StringBuilder(((sql.length()) + 45)); sb.append(sql); sb.append(\" offset \").append(offset).append(\" rows fetch \").append((offset > 0 ? \"next \" : \"first \")); sb.append(limit).append(\" rows only\"); return namedParameterJdbcTemplate.queryForList(sb.toString(), paramMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1525/buggy-version/src.org.ironrhino.core.jdbc.JdbcQueryService.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.length()"], "Fixed commit": "e95cd250b62628b37077e47a6b40ab9e502f3969", "Url": "https://api.github.com/repos/ironrhino/ironrhino", "Date": "2015-02-06T07:06:40Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Appendable.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sql.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7507/buggy-version/project-m2.ujo-orm.src.main.java.org.ujorm.orm.metaModel.MetaDbService.java", "BodyUseAPI": [], "Fixed commit": "042c6261a0952e82949adce6119b0f84dc2446a5", "Url": "https://api.github.com/repos/pponec/ujorm", "Date": "2017-06-30T20:26:52Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (icon == null) { cv.getTable().addBodyCell(text, icon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8446/buggy-version/src.grammar.MarkdownGrammarBaseListener.java", "BodyUseAPI": ["cv.getTable().addBodyCell(java.lang.String,java.lang.String)"], "Fixed commit": "d665b4d7f9a28593cfd99ef5d442438c0ade952a", "Url": "https://api.github.com/repos/dimamo5/Awesome-CV-Markdown", "Date": "2016-06-06T19:00:58Z"},
{"Line": "=>903", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.openl.util.StringUtils.isBlank(pageUrl)) { return moduleUrl; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3147/buggy-version/STUDIO.org.openl.rules.webstudio.src.org.openl.rules.ui.WebStudio.java", "BodyUseAPI": [], "Fixed commit": "dc6734c5ad1ccd6d202fd1ad1335e27aad9fe3c7", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2016-06-01T09:02:40Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.Character.isLetterOrDigit(((char) (event.keyCode)))) { inputToNormal(); input.setText((((char) (event.keyCode)) + \"\")); input.setSelection(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3138/buggy-version/src.ui.Controller.java", "BodyUseAPI": ["org.eclipse.swt.custom.StyledText.setText(java.lang.String)"], "Fixed commit": "e4b60b545ec36cdbb7025fd93ab4632d4bdcf708", "Url": "https://api.github.com/repos/cs2103jan2016-f14-1j/main", "Date": "2016-03-11T11:04:03Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6884/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "7e7ad8ed6301d1f1a3bfd1359a2565fe8a9ad86a", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"\ufffd\ufffd. \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd 1\".equals(directionName)) { directionName = \"\ufffd.\ufffd. \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd -1 - \ufffd.\ufffd. \ufffd\ufffd\ufffd\ufffd\ufffd 1,2\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7566/buggy-version/HoloDesign-ver.3.Database.src.bg.znestorov.sobusf24.db.utils.Utils.java", "BodyUseAPI": [], "Fixed commit": "df99440a58d3703c29da122597668eced1906345", "Url": "https://api.github.com/repos/zdravko-nestorov/Sofbus-24", "Date": "2016-08-08T05:57:38Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\".equals(directionName)) { directionName = \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd - \ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7566/buggy-version/HoloDesign-ver.3.Database.src.bg.znestorov.sobusf24.db.utils.Utils.java", "BodyUseAPI": [], "Fixed commit": "df99440a58d3703c29da122597668eced1906345", "Url": "https://api.github.com/repos/zdravko-nestorov/Sofbus-24", "Date": "2016-08-08T05:57:38Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((openParen <= 1) || (closeParen < 0)) || (closeParen > ((stat.length()) - 2))) { throw new com.jezhumble.javasysmon.ParseException(((\"Stat '\" + (stat)) + \"' does not include expected parens around process name\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1505/buggy-version/src.main.java.com.jezhumble.javasysmon.LinuxProcessInfoParser.java", "BodyUseAPI": [], "Fixed commit": "6ff3f1f6c60a93cd5b6ecce13bc2363b65bba4fe", "Url": "https://api.github.com/repos/jezhumble/javasysmon", "Date": "2011-10-03T07:16:30Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((statElements.length) < 13) { throw new com.jezhumble.javasysmon.ParseException(((\"Stat '\" + (stat)) + \"' contains fewer elements than expected\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1505/buggy-version/src.main.java.com.jezhumble.javasysmon.LinuxProcessInfoParser.java", "BodyUseAPI": [], "Fixed commit": "6ff3f1f6c60a93cd5b6ecce13bc2363b65bba4fe", "Url": "https://api.github.com/repos/jezhumble/javasysmon", "Date": "2011-10-03T07:16:30Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapter.getFilter()) != null) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2809/buggy-version/app.src.main.java.org.nil.gramana.activity.PermutationsActivity.java", "BodyUseAPI": [], "Fixed commit": "d66a6d1e94403347d199ff777389e1b7736662ef", "Url": "https://api.github.com/repos/newnone/Gramana", "Date": "2016-11-20T22:42:53Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nil.gramana.activity.PermutationsActivity.getActionBar()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (aBar != null) { aBar.setDisplayOptions(((android.app.ActionBar.DISPLAY_HOME_AS_UP) | (android.app.ActionBar.DISPLAY_SHOW_TITLE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2809/buggy-version/app.src.main.java.org.nil.gramana.activity.PermutationsActivity.java", "BodyUseAPI": ["android.app.ActionBar.setDisplayOptions(((android.app.ActionBar.DISPLAY_HOME_AS_UP) | (android.app.ActionBar.DISPLAY_SHOW_TITLE)))"], "Fixed commit": "d66a6d1e94403347d199ff777389e1b7736662ef", "Url": "https://api.github.com/repos/newnone/Gramana", "Date": "2016-11-20T22:42:53Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jodd.joy.core.DefaultAppCore.log) != null) { jodd.joy.core.DefaultAppCore.log.info(\"shutting down...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/982/buggy-version/jodd-joy.src.main.java.jodd.joy.core.DefaultAppCore.java", "BodyUseAPI": [], "Fixed commit": "840aae0e982706dc9b3eb2f75aadd9882d8f96cd", "Url": "https://api.github.com/repos/wjw465150/jodd", "Date": "2013-10-04T22:58:13Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jodd.joy.core.DefaultAppCore.log) != null) { jodd.joy.core.DefaultAppCore.log.info(\"app stopped\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/982/buggy-version/jodd-joy.src.main.java.jodd.joy.core.DefaultAppCore.java", "BodyUseAPI": [], "Fixed commit": "840aae0e982706dc9b3eb2f75aadd9882d8f96cd", "Url": "https://api.github.com/repos/wjw465150/jodd", "Date": "2013-10-04T22:58:13Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((appPropsProfiles) != null) { appProps.setActiveProfiles(appPropsProfiles); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/982/buggy-version/jodd-joy.src.main.java.jodd.joy.core.DefaultAppCore.java", "BodyUseAPI": [], "Fixed commit": "840aae0e982706dc9b3eb2f75aadd9882d8f96cd", "Url": "https://api.github.com/repos/wjw465150/jodd", "Date": "2013-10-04T22:58:13Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tw.com.citi.catalog.web.model.FileType.SOURCE) == (file.getFileType())) { path = qaSourcePath; }else { path = qaExecutionPath; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7394/buggy-version/tw.com.citi.catalog.web.src.tw.com.citi.catalog.web.pages.JCS1600.java", "BodyUseAPI": [], "Fixed commit": "9423202eef5211e2abb5135bba936064e7e194b8", "Url": "https://api.github.com/repos/IISI/catalog", "Date": "2011-08-16T09:08:42Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pbccrc.zsls.context.AppContext.getDomainManager()", "org.pbccrc.zsls.tasks.TaskEvent.getDomain()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dmanager.getDomainStatus(domain)) == (org.pbccrc.zsls.JobTracker.DomainStatus.Running)) { tryAssignTask(engine); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2081/buggy-version/zsls-jobtracker.src.main.java.org.pbccrc.zsls.tasks.TaskProcessor.java", "BodyUseAPI": [], "Fixed commit": "8bafe29585de8b06bb13b4e10d57a92cfd72213b", "Url": "https://api.github.com/repos/Mr-Zhangs/zsls", "Date": "2017-05-08T03:35:53Z"},
{"Line": "=>562", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getSharedPreferences(java.lang.String,Context.MODE_PRIVATE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(mockPrefs.contains(\"mock_current_time\"))) { return java.lang.System.currentTimeMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/26/buggy-version/android.src.main.java.com.funkyandroid.droidcon.uk.iosched.util.UIUtils.java", "BodyUseAPI": [], "Fixed commit": "3fce7b51604c309973d2f928fb2c646ceb7a6c1f", "Url": "https://api.github.com/repos/droidcon/iosched", "Date": "2013-10-04T06:37:46Z"},
{"Line": "=>610", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(kmelia.getPublicationAccessController().isUserAuthorized(kmelia.getUserId(), kmeliaPublication.getPk()))) { return \"/admin/jsp/accessForbidden.jsp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7776/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.servlets.KmeliaRequestRouter.java", "BodyUseAPI": [], "Fixed commit": "be3a9d783015013cc96a460340c938f99030c879", "Url": "https://api.github.com/repos/ebonnet/Silverpeas-Components", "Date": "2015-07-07T11:45:50Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(TheFile.isDirectory())) { FileList.add(TheFile.getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4274/buggy-version/src.main.java.share.trader.server.Import_Trade_Data.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.io.File.getAbsolutePath()"], "Fixed commit": "27e50d4bdc476e0f7a359f4b4396e6a64d8591f8", "Url": "https://api.github.com/repos/cmeindl/Share_Trader_Java_Server", "Date": "2015-10-18T20:47:56Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.JsonObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (element.isJsonNull()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1716/buggy-version/lib.src.main.java.nctu.fintech.appmate.Tuple.java", "BodyUseAPI": [], "Fixed commit": "d90a6581cd6140909bc1ee9b9f531ad8d3fb90d6", "Url": "https://api.github.com/repos/APCLab/appmate_droid", "Date": "2017-05-26T05:58:09Z"},
{"Line": "=>2065", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (readOnly) { dataset = datasetService.find(dataset.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6086/buggy-version/src.main.java.edu.harvard.iq.dataverse.DatasetPage.java", "BodyUseAPI": [], "Fixed commit": "3434a592e4588f9e6bbbb2db39dcb9bc9e7d1dc5", "Url": "https://api.github.com/repos/IQSS/dataverse", "Date": "2015-11-06T00:01:07Z"},
{"Line": "=>2243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((items) != null) && ((items) instanceof org.tepi.filtertable.paged.PagedFilterTableContainer)) { val = ((org.tepi.filtertable.paged.PagedFilterTableContainer) (items)).getStartIndex(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2977/buggy-version/src.com.vaadin.ui.CustomTable.java", "BodyUseAPI": [], "Fixed commit": "52a5af32475a101bbb7470a72bef7071a9bf543f", "Url": "https://api.github.com/repos/wbstr/FilteringTable", "Date": "2014-01-28T15:24:54Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.getServer().getWorlds().get(int)", "org.bukkit.event.player.PlayerJoinEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(new java.io.File(((((((defaultWorld.getName()) + (java.io.File.separatorChar)) + \"players\") + (java.io.File.separatorChar)) + (player.getName())) + \".dat\")).exists())) && (plugin.exactSpawn)) player.teleport(defaultWorld.getSpawnLocation());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1719/buggy-version/src.main.java.com.sk89q.commandbook.CommandBookPlayerListener.java", "BodyUseAPI": ["org.bukkit.entity.Player.teleport(defaultWorld.getSpawnLocation())", "org.bukkit.World.getSpawnLocation()"], "Fixed commit": "1f4e3f9cedb12a3ff22db37c73d2d6fced88cdb2", "Url": "https://api.github.com/repos/EngineHub/CommandBook", "Date": "2011-07-23T06:00:41Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.exists())) { if (file.mkdir()) { java.lang.System.out.println(\"Directory is created!\"); }else { java.lang.System.out.println(\"Failed to create directory!\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4234/buggy-version/src.dbManager.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "02357c0c7700441e161a10904916c86e35fa2e6d", "Url": "https://api.github.com/repos/cs319group14/BreakBricks", "Date": "2015-12-08T22:11:05Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((toastWidget) != null) { toastWidget.flash(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6032/buggy-version/app.src.main.java.bei.m3c.fragments.TVFragment.java", "BodyUseAPI": [], "Fixed commit": "b28481bebf1d78fee30ce579e28c54adcd85caf9", "Url": "https://api.github.com/repos/stupidusername/M3C", "Date": "2017-03-22T05:09:20Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((toastWidget) != null) { toastWidget.flash(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6032/buggy-version/app.src.main.java.bei.m3c.fragments.VideoFragment.java", "BodyUseAPI": [], "Fixed commit": "b28481bebf1d78fee30ce579e28c54adcd85caf9", "Url": "https://api.github.com/repos/stupidusername/M3C", "Date": "2017-03-22T05:09:20Z"},
{"Line": "=>597", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((extras.getString(Intent.EXTRA_TEXT)) != null) { second = extras.getString(Intent.EXTRA_TEXT); }else { second = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4770/buggy-version/src.com.ichi2.anki.CardEditor.java", "BodyUseAPI": ["android.os.Bundle.getString(Intent.EXTRA_TEXT)"], "Fixed commit": "6a7920a036c547b3b2f41cba1771fbbe22651026", "Url": "https://api.github.com/repos/nobnago/Anki-Android", "Date": "2012-07-18T21:58:35Z"},
{"Line": "=>592", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((extras.getString(Intent.EXTRA_SUBJECT)) != null) { first = extras.getString(Intent.EXTRA_SUBJECT); }else { first = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4770/buggy-version/src.com.ichi2.anki.CardEditor.java", "BodyUseAPI": ["android.os.Bundle.getString(Intent.EXTRA_SUBJECT)"], "Fixed commit": "6a7920a036c547b3b2f41cba1771fbbe22651026", "Url": "https://api.github.com/repos/nobnago/Anki-Android", "Date": "2012-07-18T21:58:35Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minidev.json.JSONValue.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (json.containsKey(MessageKeys.RESPONSE_CODE)) { result = ((java.lang.Integer) (json.get(MessageKeys.RESPONSE_CODE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8093/buggy-version/SolarPanelApp.src.com.example.solarpanelmanager.api.parsers.ResponseParser.java", "BodyUseAPI": ["net.minidev.json.JSONObject.get(MessageKeys.RESPONSE_CODE)"], "Fixed commit": "c1d514617a430635f9623cd45c131440924a243f", "Url": "https://api.github.com/repos/SeanHurley/AndroidSolarPanelManager", "Date": "2013-03-28T00:23:38Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Player.getInventory()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((inv.getBoots().getType()) == (item.getItem())) inv.setBoots(stack); else inv.addItem(stack);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2727/buggy-version/src.me.dalton.capturethepoints.listeners.CaptureThePointsEntityListener.java", "BodyUseAPI": ["org.bukkit.inventory.PlayerInventory.setBoots(org.bukkit.inventory.ItemStack)", "org.bukkit.inventory.PlayerInventory.addItem(org.bukkit.inventory.ItemStack)"], "Fixed commit": "5e1cab217b10b54e0e935a9d515d8ca7c03f32d8", "Url": "https://api.github.com/repos/graywolf336/CaptureThePoints", "Date": "2012-12-09T04:31:23Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Util.CHESTPLATES_TYPE.contains(item.getItem())) { if ((inv.getChestplate()) == null) inv.setChestplate(stack); else if ((inv.getChestplate().getType()) == (item.getItem())) inv.setChestplate(stack); else inv.addItem(stack); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2727/buggy-version/src.me.dalton.capturethepoints.listeners.CaptureThePointsEntityListener.java", "BodyUseAPI": ["me.dalton.capturethepoints.beans.Items.getItem()"], "Fixed commit": "5e1cab217b10b54e0e935a9d515d8ca7c03f32d8", "Url": "https://api.github.com/repos/graywolf336/CaptureThePoints", "Date": "2012-12-09T04:31:23Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Player.getInventory()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((inv.getLeggings().getType()) == (item.getItem())) inv.setLeggings(stack); else inv.addItem(stack);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2727/buggy-version/src.me.dalton.capturethepoints.listeners.CaptureThePointsEntityListener.java", "BodyUseAPI": ["org.bukkit.inventory.PlayerInventory.addItem(org.bukkit.inventory.ItemStack)", "org.bukkit.inventory.PlayerInventory.setLeggings(org.bukkit.inventory.ItemStack)"], "Fixed commit": "5e1cab217b10b54e0e935a9d515d8ca7c03f32d8", "Url": "https://api.github.com/repos/graywolf336/CaptureThePoints", "Date": "2012-12-09T04:31:23Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args[i]) instanceof byte[]) args[i] = new java.lang.String(((byte[]) (args[i])));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5049/buggy-version/src.main.java.org.wp.spring.php.PHPScriptUtils.java", "BodyUseAPI": [], "Fixed commit": "86361bdd9e4c8f5cd40c9092a20b235bce7a79c9", "Url": "https://api.github.com/repos/PaulWeb/quercusspring", "Date": "2013-08-27T05:19:16Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args[i]) instanceof char[]) args[i] = new java.lang.String(((char[]) (args[i])));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5049/buggy-version/src.main.java.org.wp.spring.php.PHPScriptUtils.java", "BodyUseAPI": [], "Fixed commit": "86361bdd9e4c8f5cd40c9092a20b235bce7a79c9", "Url": "https://api.github.com/repos/PaulWeb/quercusspring", "Date": "2013-08-27T05:19:16Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mage.game.Game.getObject(source.getSourceId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sourceObject instanceof mage.game.stack.Spell) { sourceObject = ((mage.game.stack.Spell) (sourceObject)).getCard(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2614/buggy-version/Mage.src.mage.abilities.effects.common.RevealAndShuffleIntoLibrarySourceEffect.java", "BodyUseAPI": [], "Fixed commit": "d7c23bbfc02dd4786991354701be082e2bf9d708", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2015-05-01T12:04:52Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.core.IField.getElementName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(fieldsNames.contains(fieldName))) fieldsNames.add(fieldName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7891/buggy-version/org.eclipse.iee.translator.antlr.src.org.eclipse.iee.translator.antlr.translator.JavaTranslator.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "e85dfbd3065dee96a951433f922e8c1505ab41c3", "Url": "https://api.github.com/repos/iee/iee", "Date": "2013-03-02T11:22:32Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event == (Event.NODE_STATUS_CHANGE)) && (remarks.equals(\"CLOSING\"))) { if (initializedDone) { while ((messagesCount) < (messages.length)) { messages[messagesCount] = null; (messagesCount)++; } sendMessages(); }else { java.lang.System.out.println(\"Monitoring: Problems with identifying Agents..\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5379/buggy-version/src.main.java.i5.las2peer.logging.monitoring.MonitoringObserver.java", "BodyUseAPI": [], "Fixed commit": "6c11d15ff229f8a117e7dd9939e0b9cb60eb08a1", "Url": "https://api.github.com/repos/rwth-acis/las2peer", "Date": "2013-08-05T15:45:49Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (method.isDefault()) { return dispatch.get(method).invoke(args); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5414/buggy-version/src.engineering.clientside.completable_feign.java.engineering.clientside.feign.completable.CompletableInvocationHandler.java", "BodyUseAPI": ["dispatch.get(method).invoke(java.lang.Object[])", "java.util.Map<java.lang.reflect.Method, feign.InvocationHandlerFactory.MethodHandler>.get(java.lang.reflect.Method)"], "Fixed commit": "2b4078bba4b4c4749682de8f660c6fa7ae192c1b", "Url": "https://api.github.com/repos/client-side/completable-feign", "Date": "2016-11-23T20:17:21Z"},
{"Line": "=>644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.ggp.base.util.gdl.grammar.GdlSentence, org.ggp.base.util.propnet.architecture.components.Proposition>.get(org.ggp.base.util.statemachine.implementation.prover.query.ProverQueryBuilder.toDoes(r, action))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (does == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/160/buggy-version/player.Experiment.java", "BodyUseAPI": [], "Fixed commit": "fb94e31af0c3dd4cc7bdf5639a61779c7913ab5a", "Url": "https://api.github.com/repos/brianhzhang/ggp-base", "Date": "2016-05-28T02:57:00Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getTileEntity(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (windmillEntity != null) { windmillEntity.setRotor((-1), ForgeDirection.NORTH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2245/buggy-version/src.main.java.com.piepenguin.rfwindmill.blocks.RotorBlock.java", "BodyUseAPI": ["com.piepenguin.rfwindmill.tileentities.TileEntityWindmillBlock.setRotor(int,ForgeDirection.NORTH)"], "Fixed commit": "dcbf5746bc9397b07399455ffb399bae162024e1", "Url": "https://api.github.com/repos/dbMansfield/rfwindmill", "Date": "2015-12-01T16:31:12Z"},
{"Line": "=>661", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((t1 instanceof wyjvm.lang.JvmType.Reference) && (t2 instanceof wyjvm.lang.JvmType.Null)) { return true; }else if ((t1 instanceof wyjvm.lang.JvmType.Clazz) && (t2 instanceof wyjvm.lang.JvmType.Clazz)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/9051/buggy-version/src.wyjvm.util.TypeAnalysis.java", "BodyUseAPI": [], "Fixed commit": "14086409cbff9f907f290525ae7b0cc19fcee416", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2012-04-11T16:35:31Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(userDAO.isExist(username))) { sb.append(\"Wrong login and/or password\"); request.setAttribute(\"errMessage\", sb.toString()); redirect(request, response, nc.notus.filters.AuthServlet.LOGIN_ERROR_PAGE); }else { if (userDAO.isBlocked(username)) { sb.append(\"User with specified login blocked!\"); request.setAttribute(\"errMessage\", sb.toString()); redirect(request, response, nc.notus.filters.AuthServlet.LOGIN_ERROR_PAGE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2064/buggy-version/NotusOSS-war.src.java.nc.notus.filters.AuthServlet.java", "BodyUseAPI": ["nc.notus.dao.OSSUserDAO.isBlocked(java.lang.String)"], "Fixed commit": "7c91bc9c1f4676d5c9f32197c252bcf7c2b43e9e", "Url": "https://api.github.com/repos/niralittle/Notus", "Date": "2014-05-09T16:07:36Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((split[1].startsWith(\"\\\"<\")) && (split[1].endsWith(\">\\\"\"))) { java.lang.String tmp = removeQuotes(split[1]); m.setPredicate(tmp.substring(1, ((tmp.length()) - 1))); }else { m.setPredicate(removeQuotes(split[1])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3881/buggy-version/limes-core.src.main.java.org.aksw.limes.core.io.mapping.reader.CSVMappingReader.java", "BodyUseAPI": ["org.aksw.limes.core.io.mapping.reader.CSVMappingReader.removeQuotes(java.lang.String)", "org.aksw.limes.core.io.mapping.AMapping.setPredicate(java.lang.String)", "org.aksw.limes.core.io.mapping.reader.CSVMappingReader.removeQuotes(java.lang.String)"], "Fixed commit": "bfa932a22a3e122e870dabb20484f1a47dbd6491", "Url": "https://api.github.com/repos/dice-group/LIMES", "Date": "2016-08-15T10:25:41Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fragment instanceof com.google.android.apps.dashclock.configuration.BaseSettingsActivity.ExtensionPreferenceFragment) { mFragment = ((com.google.android.apps.dashclock.configuration.BaseSettingsActivity.ExtensionPreferenceFragment) (fragment)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/9025/buggy-version/main.src.main.java.com.google.android.apps.dashclock.configuration.BaseSettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "a539756b61e4c8e490b617a8c4ac51c52e2004c1", "Url": "https://api.github.com/repos/tobiasge/dashclock", "Date": "2016-01-13T04:40:37Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentNode.data) != null) { msg += currentNode.data.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/293/buggy-version/src.ADT.LinkedList.java", "BodyUseAPI": ["T.toString()"], "Fixed commit": "7fc12c524221584d8b3dc8ca0088fa2fa14caa3c", "Url": "https://api.github.com/repos/JuzAPpl/AssgmtFastestDeliveryman", "Date": "2017-12-10T02:43:06Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((readList != null) && ((readList.size()) > 0)) return japsa.bio.np.ErrorCorrection.consensusSequence(readList, readList.size(), prefix, msa); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1842/buggy-version/src.main.java.japsa.bio.np.ErrorCorrection.java", "BodyUseAPI": ["japsa.bio.np.ErrorCorrection.consensusSequence(java.util.ArrayList<japsa.seq.Sequence>,readList.size(),java.lang.String,java.lang.String)", "java.util.ArrayList<japsa.seq.Sequence>.size()"], "Fixed commit": "ce7e7c079485e5ca0f062d5fe2e1e5c5e6560ac2", "Url": "https://api.github.com/repos/mdcao/japsa", "Date": "2017-05-26T04:18:53Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (resource instanceof java.lang.Class) { router.register(((java.lang.Class<?>) (resource))); }else { router.register(resource); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4053/buggy-version/nats-annotated-dropwizard.src.main.java.org.wasila.natsannotated.dropwizard.NatsAnnotatedBundle.java", "BodyUseAPI": ["org.wasila.nats.router.Router.register(java.lang.Object)"], "Fixed commit": "0b44b37b68608141a26b04a10c480012cf70ad6c", "Url": "https://api.github.com/repos/adamwasila/nats-annotated", "Date": "2017-02-28T23:14:00Z"},
{"Line": "=>572", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((f.getGraph()) == null) { tooltips.add(f.toString()); }else { tooltips.add(f.getGraph().getPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6910/buggy-version/unitex.src.fr.umlv.unitex.frames.FindAndReplaceDialog.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(f.getGraph().getPath())", "fr.umlv.unitex.frames.GraphFrame.getGraph()", "java.util.ArrayList<java.lang.String>.add(f.toString())", "f.getGraph().getPath()", "fr.umlv.unitex.frames.GraphFrame.toString()"], "Fixed commit": "4a94d4bb5a72016eae43bc3288d72d29ecbea485", "Url": "https://api.github.com/repos/phmz/gramlab-ide", "Date": "2016-05-30T08:33:43Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (nodes == null) { if ((!(text.visible())) && ((ao.size()) != 0)) GUICommands.C_SHOWTEXT.execute(this); text.setText(ao); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7910/buggy-version/src.main.java.org.basex.gui.GUI.java", "BodyUseAPI": [], "Fixed commit": "ae91a1f9627dd401dcca414b9e6e022e1161de79", "Url": "https://api.github.com/repos/BaseXdb/basex", "Date": "2012-06-25T10:04:57Z"},
{"Line": "=>1491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b >= (bibRefs[r].wordBlocks.length)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6642/buggy-version/src.de.uka.ipd.idaho.plugins.bibRefs.refParse.RefParse.java", "BodyUseAPI": [], "Fixed commit": "08d35737fe243dbf60f627fea94c26d88ac19fbf", "Url": "https://api.github.com/repos/VBRANT/refparse", "Date": "2016-11-29T15:24:51Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gbif.ipt.model.Organisation.isAgencyAccountPrimary()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isAgencyAccountPrimary) { if (!(cfg.isArchivalMode())) { valid = false; action.addFieldError(\"organisation.agencyAccountPrimary\", action.getText(\"admin.organisation.doiAccount.activated.failed\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6303/buggy-version/src.main.java.org.gbif.ipt.validation.OrganisationSupport.java", "BodyUseAPI": [], "Fixed commit": "b2c5695629eb198584faa38d696bde314ebec8a8", "Url": "https://api.github.com/repos/gbif/ipt", "Date": "2016-11-01T14:20:22Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node == null) { return defValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2636/buggy-version/jspoon.src.main.java.pl.droidsonroids.jspoon.HtmlField.java", "BodyUseAPI": [], "Fixed commit": "e95da2b5f211d320af63ae65a23af802fcb46b6b", "Url": "https://api.github.com/repos/DroidsOnRoids/jspoon", "Date": "2017-07-21T12:26:36Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getOwner().getConfig(WeaveInfrastructure.ENABLED)) { brooklyn.entity.container.weave.WeaveContainer weave = getOwner().getAttribute(WeaveContainer.WEAVE_CONTAINER); ((brooklyn.entity.basic.AbstractEntity) (entity)).setConfigEvenIfOwned(SubnetTier.SUBNET_CIDR, weave.getConfig(WeaveContainer.WEAVE_CIDR)); }else { ((brooklyn.entity.basic.AbstractEntity) (entity)).setConfigEvenIfOwned(SubnetTier.SUBNET_CIDR, Cidr.UNIVERSAL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2872/buggy-version/docker.src.main.java.brooklyn.location.docker.DockerHostLocation.java", "BodyUseAPI": [], "Fixed commit": "8a9a29e12df336e5b40247af181d1599637992b7", "Url": "https://api.github.com/repos/brooklyncentral/clocker", "Date": "2014-10-10T19:52:42Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (strict) { throw new org.apache.camel.language.simple.types.SimpleParserException((\"Unknown file language syntax: \" + remainder), token.getIndex()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6326/buggy-version/camel-core.src.main.java.org.apache.camel.language.simple.ast.SimpleFunctionExpression.java", "BodyUseAPI": [], "Fixed commit": "0363a7274d3082bb32d1ac9508b8d38998278d82", "Url": "https://api.github.com/repos/tadayosi/camel", "Date": "2016-02-24T15:56:24Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["myFacilityBindings.get(node).getWrappedDec()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (wrappedDec instanceof edu.clemson.cs.r2jt.translation.OperationDec) { edu.clemson.cs.r2jt.translation.ST argItem = getOperationArgItemTemplate(((edu.clemson.cs.r2jt.translation.OperationDec) (myFacilityBindings.get(node).getWrappedDec())), node.getQualifier(), node.getName()); if (((myCurrentEnhancement) != null) && ((myCurrentFacilityEntry.getEnhancements().size()) >= 2)) { edu.clemson.cs.r2jt.translation.ST enhancedCall = myGroup.getInstanceOf(\"enhanced_call\").add(\"enhancementname\", myCurrentEnhancement.getModuleIdentifier().toString()); enhancedCall.add(\"facilityname\", myCurrentFacilityEntry.getName()).add(\"name\", node.getName().getName()); myEnhancedCalls.put(node.getName().getName(), enhancedCall); } myActiveTemplates.peek().add(\"arguments\", argItem); }else if (wrappedDec instanceof edu.clemson.cs.r2jt.translation.ConstantParamDec) { myActiveTemplates.peek().add(\"arguments\", wrappedDec.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2731/buggy-version/src.main.java.edu.clemson.cs.r2jt.translation.JavaTranslator.java", "BodyUseAPI": ["myActiveTemplates.peek().add(java.lang.String,wrappedDec.getName())", "edu.clemson.cs.r2jt.translation.Dec.getName()"], "Fixed commit": "92ee49d499420c5a50f7bd5523d5ccef6b673cd4", "Url": "https://api.github.com/repos/NighatYasmin/RESOLVE", "Date": "2014-03-12T16:16:39Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((update.isGathering()) == false) { java.lang.System.err.println(\"\\u001b[1;33mGameNetworking: Sending PlayerJoineds\\u001b[0m\"); for (final cnt.network.Player player : ((java.lang.Iterable<cnt.network.Player>) (update.data.get(cnt.network.PlayerRing.class)))) { java.lang.System.err.println((\"\\u001b[1;33mGameNetworking: Player: \" + (player == null ? \"\\u001b[1;31mNull\\u001b[0m\" : \"\\u001b[1;32mOK\\u001b[0m\"))); this.blackboardNetworking.receiveAndBroadcast(new cnt.network.PlayerJoined(player)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8905/buggy-version/src.cnt.network.GameNetworking.java", "BodyUseAPI": ["update.data.get(java.lang.Class)"], "Fixed commit": "d27980e2767cafd251dd08cd846655910939d3a7", "Url": "https://api.github.com/repos/maandree/cnt", "Date": "2012-06-05T09:39:32Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCheckedContacts) == null) { android.widget.Toast.makeText(getApplicationContext(), \"please select at least One contact\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7147/buggy-version/app.src.main.java.com.byteshaft.callnote.NoteActivity.java", "BodyUseAPI": [], "Fixed commit": "46362f41ca757936dc6e69802646073e3c430316", "Url": "https://api.github.com/repos/fi8er1/call-note", "Date": "2015-06-20T06:49:09Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uk.ac.imperial.lsds.seep.GLOBALS.valueFor(\"meanderRouting\").equals(\"weightedRoundRobin\")) && ((!(enableUpstreamRoutingControl)) || (!(java.lang.Boolean.parseBoolean(uk.ac.imperial.lsds.seep.GLOBALS.valueFor(\"ignoreQueueLengths\")))))) { throw new java.lang.RuntimeException(\"Logic error: invalid configuration for WRR.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6058/buggy-version/seep-system.src.main.java.uk.ac.imperial.lsds.seep.runtimeengine.CoreRE.java", "BodyUseAPI": [], "Fixed commit": "cd5edfc5afb736112fb75edf9eacc53a97032357", "Url": "https://api.github.com/repos/lsds/SEEP", "Date": "2017-09-18T16:37:26Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((configLine.length) > 1) { java.lang.String constantName = configLine[0].trim().replaceAll(\"\\ufeff\", \"\"); java.lang.String constantValue = configLine[1].trim().replaceAll(\"\\ufeff\", \"\"); rawConstants.put(constantName, constantValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8505/buggy-version/src.com.tfl.billing.ConfigReader.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "6458f1e40b59c7d76e20fe73bb7417a786a413e8", "Url": "https://api.github.com/repos/savudani8/OysterX", "Date": "2017-12-06T19:07:12Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (strategy.equals(\"ALL-C\")) { action = 1; }else if (strategy.equals(\"JOSS\")) { if ((r.nextInt(10)) == 0) { action = -1; }else if ((memoryEncounters[playerID]) == 1) { action = 1; }else { action = memory[playerID][0]; } }else if (strategy.equals(\"RANDOM\")) { if ((memoryEncounters[playerID]) == 1) { action = -1; }else if ((memory[playerID][0]) == 1) { if ((memoryEncounters[playerID]) < 4) { action = 1; }else if (((memoryOwnActions[playerID][0]) == (-1)) || ((memoryOwnActions[playerID][1]) == (-1))) { action = 1; }else { action = -1; } }else { action = memory[playerID][0]; } }else if (strategy.equals(\"RANDOM\")) { action = (r.nextBoolean()) ? 1 : -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4086/buggy-version/src.Agent.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "79a906da1b1bcdf833a63d40f60d7c04382eb8f5", "Url": "https://api.github.com/repos/CC007/KAT-hwset-4", "Date": "2014-09-29T12:40:28Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((memoryEncounters[playerID]) == 1) { action = 1; }else { action = memory[playerID][0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4086/buggy-version/src.Agent.java", "BodyUseAPI": [], "Fixed commit": "79a906da1b1bcdf833a63d40f60d7c04382eb8f5", "Url": "https://api.github.com/repos/CC007/KAT-hwset-4", "Date": "2014-09-29T12:40:28Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (object instanceof org.h2.api.IGeometry) { return org.h2.value.ValueGeometry.get(((org.h2.api.IGeometry) (object))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3461/buggy-version/h2.src.main.org.h2.value.ValueGeometry.java", "BodyUseAPI": [], "Fixed commit": "044826873d4a316d51add021981391892dbb7203", "Url": "https://api.github.com/repos/nicolas-f/H2-Mirror", "Date": "2015-03-16T12:57:25Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((hint) != null) || ((floatingLabelText) != null)) { return (super.getSelectedItemPosition()) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8528/buggy-version/library.src.main.java.fr.ganfra.materialspinner.MaterialSpinner.java", "BodyUseAPI": [], "Fixed commit": "6d17b9d2e7300fa93f972718696bce75914d0f75", "Url": "https://api.github.com/repos/seasox/MaterialSpinner", "Date": "2017-03-14T21:17:06Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (otherDefinition instanceof analysis.Definition) { return (this.label.getLabel()) == (((analysis.Definition) (otherDefinition)).label.getLabel()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5094/buggy-version/analysis_tool.src.analysis.Definition.java", "BodyUseAPI": [], "Fixed commit": "b1381754c121f26ba70e295c6ce9820b0e5c9cd9", "Url": "https://api.github.com/repos/rostgaard/02242", "Date": "2013-11-26T09:34:39Z"},
{"Line": "=>2642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (relayState != null) state.setLocalVariable(SSOConstants.SSO_RESPONSE_RELAYSTATE_VAR_TMP, relayState);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7153/buggy-version/capabilities.sso.main.src.main.java.org.atricore.idbus.capabilities.sso.main.idp.producers.SingleSignOnProducer.java", "BodyUseAPI": ["org.atricore.idbus.capabilities.sso.main.idp.producers.MediationState.setLocalVariable(SSOConstants.SSO_RESPONSE_RELAYSTATE_VAR_TMP,java.lang.String)"], "Fixed commit": "42de135742c21a5c7d84e6d7b2f8b72d871b1f6c", "Url": "https://api.github.com/repos/atricore/atricore-idbus", "Date": "2015-05-21T23:34:01Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (pars != null) { dp.setParameters(pars); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2099/buggy-version/src.ua.pr.xslt.DataXSLT.java", "BodyUseAPI": ["oracle.xdo.dataengine.v1.DataProcessor.setParameters(java.util.Hashtable<java.lang.String, java.lang.String>)"], "Fixed commit": "2212b95a9e46ceb8970663f0f77b20bba5131237", "Url": "https://api.github.com/repos/naduda/XSLT", "Date": "2013-11-22T15:28:53Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((AccountsFile.AccountMembers.size()) == 0) member = new AccountMember(null, null, null, null, null); else member = AccountsFile.AccountMembers.get(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6572/buggy-version/CS_Account_Manager.src.main.ViewAccountScene.java", "BodyUseAPI": [], "Fixed commit": "e0414365b41b48b0f45d2248b17b13d46286d418", "Url": "https://api.github.com/repos/arogers4495/323CompuCount", "Date": "2017-12-13T19:37:00Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((membersList.size()) == 0) member = new AccountMember(null, null, null, null, null); else member = membersList.get(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6572/buggy-version/CS_Account_Manager.src.main.HomeScene.java", "BodyUseAPI": [], "Fixed commit": "e0414365b41b48b0f45d2248b17b13d46286d418", "Url": "https://api.github.com/repos/arogers4495/323CompuCount", "Date": "2017-12-13T19:37:00Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.orcid.persistence.aop.ProfileLastModifiedAspect.retrieveLastModifiedDate(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (last != null) lastStr = \"\" + (last.getTime());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3893/buggy-version/orcid-persistence.src.main.java.org.orcid.persistence.aop.ProfileLastModifiedAspect.java", "BodyUseAPI": ["java.util.Date.getTime()"], "Fixed commit": "5a9e902d1bd3130b62289bda19cf25e52c205032", "Url": "https://api.github.com/repos/ORCID/ORCID-Source", "Date": "2016-07-25T13:24:46Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraft.client.Minecraft.getMinecraft().getMinecraft().currentScreen) != null) { net.minecraft.client.renderer.entity.RenderItem renderItem2 = ((net.minecraft.client.renderer.entity.RenderItem) (f_GuiScreen_itemRenderer.get(null))); renderBlocks3 = ((net.minecraft.client.renderer.RenderBlocks) (f_RenderItem_renderBlocksRi.get(renderItem2))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3221/buggy-version/java.thebetweenlands.client.render.block.BlockSwampWaterRenderer.java", "BodyUseAPI": [], "Fixed commit": "375874dee746a65c20668ba6602cc767e9785c22", "Url": "https://api.github.com/repos/Angry-Pixel/The-Betweenlands", "Date": "2015-11-21T15:33:11Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["m_scrollContainer.getElement().getOffsetWidth()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value == 0) { value = this.getWindowWidth(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7687/buggy-version/src.swarm.client.navigation.ScrollNavigator.java", "BodyUseAPI": [], "Fixed commit": "b3569f4a9c88cfa6bc263c0a3eb99868ab12386f", "Url": "https://api.github.com/repos/dougkoellmer/swarm", "Date": "2014-03-21T02:56:07Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["m_scrollContainer.getElement().getOffsetHeight()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value == 0) { value = this.getWindowHeight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7687/buggy-version/src.swarm.client.navigation.ScrollNavigator.java", "BodyUseAPI": [], "Fixed commit": "b3569f4a9c88cfa6bc263c0a3eb99868ab12386f", "Url": "https://api.github.com/repos/dougkoellmer/swarm", "Date": "2014-03-21T02:56:07Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stack.empty()) { java.lang.System.out.println(xmlDoc.toString()); }else throw new fpa.xmlparser.RootElementNotClosedException(\"There are opened Elements left...\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3842/buggy-version/src.fpa.xmlparser.XmlParser.java", "BodyUseAPI": [], "Fixed commit": "127d133ee0db96e144ee9c40fd7030277ce2065f", "Url": "https://api.github.com/repos/semiramis/xmlparser", "Date": "2013-04-19T06:48:17Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEnabled())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6727/buggy-version/src.ch.bildspur.ledforest.sketch.controller.AudioFXController.java", "BodyUseAPI": [], "Fixed commit": "9a82951e25165553405aa53d54ca9e28d2a8bec6", "Url": "https://api.github.com/repos/bildspur/led-forest2", "Date": "2017-01-19T14:54:04Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (rec == null) iResponse.send(OHttpUtils.STATUS_NOTFOUND_CODE, \"Not Found\", OHttpUtils.CONTENT_JSON, ((\"Record with id '\" + rid) + \"' was not found.\"), null); else iResponse.writeRecord(rec, fetchPlan, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8804/buggy-version/server.src.main.java.com.orientechnologies.orient.server.network.protocol.http.command.get.OServerCommandGetDocumentByClass.java", "BodyUseAPI": ["com.orientechnologies.orient.server.network.protocol.http.OHttpResponse.writeRecord(com.orientechnologies.orient.core.record.ORecord<?>,java.lang.String,<nulltype>)"], "Fixed commit": "28b34d2488fdf66d59455bebac0f1c6718e8e4fb", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2013-08-16T11:58:27Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numberInRowToWin >= 128) { return this.flashErrorAndRedirect((\"/games/\" + id), \"numberInRowToWin cannot exceed 127\", flash); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4193/buggy-version/connect-four-web.src.java.org.amirk.games.connectfour.web.controllers.GameController.java", "BodyUseAPI": [], "Fixed commit": "2920c4108aed53ae5f36d8eb95a160d930aedc06", "Url": "https://api.github.com/repos/amirkour/connect-four", "Date": "2015-08-10T22:49:35Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numberInRowToWin <= 0) { return this.flashErrorAndRedirect((\"/games/\" + id), \"numberInRowToWin cannot be negative\", flash); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4193/buggy-version/connect-four-web.src.java.org.amirk.games.connectfour.web.controllers.GameController.java", "BodyUseAPI": [], "Fixed commit": "2920c4108aed53ae5f36d8eb95a160d930aedc06", "Url": "https://api.github.com/repos/amirkour/connect-four", "Date": "2015-08-10T22:49:35Z"},
{"Line": "=>595", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((events.get(i).getStartDateTime()) != null) { if ((events.get(i).getStartDateTime().getTime().getDate()) == date) { if ((events.get(i).getStartDateTime().getTime().getMonth()) == month) { results.add(events.get(i)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8402/buggy-version/src.calendrier.gui.ViewController.java", "BodyUseAPI": ["java.util.List<utils.Event>.get(int)", "events.get(i).getStartDateTime()", "events.get(i).getStartDateTime()", "java.util.List<utils.Event>.get(int)", "events.get(i).getStartDateTime().getTime()", "java.util.List<utils.Event>.add(events.get(i))", "java.util.List<utils.Event>.get(int)", "events.get(i).getStartDateTime().getTime().getMonth()", "events.get(i).getStartDateTime().getTime()", "events.get(i).getStartDateTime().getTime().getDate()"], "Fixed commit": "6ee1fbc4d1d7dd0bc734beef82054ed713711ab1", "Url": "https://api.github.com/repos/cs2103aug2015-F11-4j/main", "Date": "2015-11-08T11:56:35Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.equals(player))) { openPlayers.add(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5051/buggy-version/src.playMaker.QuarterBack.java", "BodyUseAPI": ["java.util.ArrayList<playMaker.Player>.add(playMaker.Player)"], "Fixed commit": "ee224332d0bae8d97374a15ee038b1a2ee6dca46", "Url": "https://api.github.com/repos/mpatt3970/PlayMaker", "Date": "2013-11-29T01:10:46Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((envVar[i].startsWith(\"PERL5LIB\")) && (organism.equals(\"Mm\"))) { envVar[i] = envVar[i].replaceAll(\"ensembl_ucsc\", \"ensembl_ucsc_old\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8564/buggy-version/src.edu.ucdenver.ccp.PhenoGen.tools.analysis.ExonDataTools.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "5a151cf9aa56fa390a438a4802f0f64f07926442", "Url": "https://api.github.com/repos/TabakoffLab/PhenoGen", "Date": "2013-09-05T20:47:17Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["variant.originalVCFLine().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(values[com.hartwig.hmftools.common.variant.SomaticVariantFactory.FILTER_COLUMN].trim().equals(variant.filter()))) { values[com.hartwig.hmftools.common.variant.SomaticVariantFactory.FILTER_COLUMN] = variant.filter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2945/buggy-version/hmftools-common.src.main.java.com.hartwig.hmftools.common.variant.SomaticVariantFactory.java", "BodyUseAPI": ["com.hartwig.hmftools.common.variant.SomaticVariant.filter()"], "Fixed commit": "b466e34cf6d0741a12101aef86b81c358e0e5397", "Url": "https://api.github.com/repos/hartwigmedical/hmftools", "Date": "2017-03-24T14:22:58Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.currentTimeMillis()", "java.lang.System.currentTimeMillis()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (endTimeMillis != startTimeMillis) { speedKbSec = (sizeKb * 1000) / (endTimeMillis - startTimeMillis); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4806/buggy-version/src.com.ichi2.anki.Utils.java", "BodyUseAPI": [], "Fixed commit": "34aa5156b39e389528794f3b964599fc4043ead9", "Url": "https://api.github.com/repos/zakvdm/Anki-Android", "Date": "2011-06-30T06:38:05Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Client.ConnectionHandler.getInstance().isHost())) listen = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3254/buggy-version/BattleAIMaven.src.main.java.Interface.MultiplayerMatchPanel.java", "BodyUseAPI": [], "Fixed commit": "0299396b4d89b120ecf4ea8561d9ec4f43d05e54", "Url": "https://api.github.com/repos/AlexandruGhergut/BattleAI", "Date": "2016-04-17T15:57:44Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tapstream.sdk.Platform.getActivityEventSource()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (eventSource != null) { eventSource.setListener(new com.tapstream.sdk.ActivityEventSource.ActivityListener() { @java.lang.Override public void onOpen() { fireEvent(new com.tapstream.sdk.Event(openEventName, false)); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/754/buggy-version/tapstream-core.src.main.java.com.tapstream.sdk.HttpApiClient.java", "BodyUseAPI": ["com.tapstream.sdk.ActivityEventSource.setListener(com.tapstream.sdk.ActivityEventSource.ActivityListener)"], "Fixed commit": "83d47314f31a55d468fa7302f0e604ccacdb3336", "Url": "https://api.github.com/repos/tapstream/tapstream-sdk-android", "Date": "2016-05-09T23:23:54Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.grinnell.glimmer.nguyenti.mistdroid.GraphicsModel.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(instance.getDagEvaluator().getDag().getRGBFunction())) { x *= -1; y *= -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/31/buggy-version/app.src.main.java.edu.grinnell.glimmer.nguyenti.mistdroid.GraphicsView.java", "BodyUseAPI": [], "Fixed commit": "00f871c63abcdcf135c7c887151acd0e19700b1b", "Url": "https://api.github.com/repos/nguyenti/MISTdroid", "Date": "2015-04-21T02:41:28Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lcd) == null) { lcd = ctx.getReference(\"lcd\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5902/buggy-version/src.main.java.com.robo4j.rpi.lcd.example.demos.AbstractDemo.java", "BodyUseAPI": [], "Fixed commit": "fb8ae87f038cff4eee28ba8bab8158048dac0002", "Url": "https://api.github.com/repos/Robo4J/robo4j-rpi-lcd-example", "Date": "2017-01-26T20:01:01Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prevTime) == 0) prevTime = ((int) (com.shc.silenceengine.utils.TimeUtils.currentTime()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/661/buggy-version/silenceengine.src.main.java.com.shc.silenceengine.core.gameloops.VariableTimeSteppedLoop.java", "BodyUseAPI": [], "Fixed commit": "91e69c90a4058b12f7de1748a7ff9cf2d8def610", "Url": "https://api.github.com/repos/sriharshachilakapati/SilenceEngine", "Date": "2016-04-05T07:58:00Z"},
{"Line": "=>717", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (typeClass.getName().equals(\"class\")) { java.util.List<?> descendents = src.languages.xml.XMLUtilities.getClassDescendents(typeClass); java.lang.String descendentsQuery = \"\"; for (java.util.Iterator<?> iter = descendents.iterator(); iter.hasNext();) { org.jdom.Element descendent = ((org.jdom.Element) (iter.next())); java.lang.String each = \"\"; each = (\"class='\" + (descendent.getAttributeValue(\"id\"))) + \"'\"; if (iter.hasNext()) { each = each + \" or \"; } descendentsQuery = descendentsQuery + each; } if (descendentsQuery.equals(\"\")) descendentsQuery = (\"class='\" + (typeClass.getAttributeValue(\"id\"))) + \"'\"; else descendentsQuery = ((descendentsQuery + \" or class='\") + (typeClass.getAttributeValue(\"id\"))) + \"'\"; try { org.jaxen.XPath path = new org.jaxen.jdom.JDOMXPath(((\"elements/objects/object[\" + descendentsQuery) + \"]\")); result = path.selectNodes(domain); } catch (org.jaxen.JaxenException e2) { e2.printStackTrace(); } }else if (typeClass.getName().equals(\"enumeration\")) { try { org.jaxen.XPath path = new org.jaxen.jdom.JDOMXPath(((\"project/elements/classes/enumeration[@id='\" + (typeClass.getAttributeValue(\"id\"))) + \"']/literals/literal\")); result = path.selectNodes(domain.getDocument()); } catch (org.jaxen.JaxenException e2) { e2.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4609/buggy-version/src.gui.EditDialog.java", "BodyUseAPI": ["typeClass.getName().equals(java.lang.String)", "src.languages.xml.XMLUtilities.getClassDescendents(org.jdom.Element)", "org.jdom.Element.getName()", "org.jdom.Element.getAttributeValue(java.lang.String)", "org.jdom.Element.getAttributeValue(java.lang.String)", "org.jdom.Element.getAttributeValue(java.lang.String)"], "Fixed commit": "e54657a54d49666cb4428a28b56919c2365ef368", "Url": "https://api.github.com/repos/tvaquero/itsimple", "Date": "2016-05-25T04:22:41Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (max <= 1) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1260/buggy-version/app.src.main.java.indi.seven.android.utils.math.RandomGenerator.java", "BodyUseAPI": [], "Fixed commit": "e81de9d04515212027d7f52ab6283f24f314f69f", "Url": "https://api.github.com/repos/SevenHoo/AndroidUtils", "Date": "2016-12-20T13:07:54Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (streetName.contains(\" \")) { streetName = streetName.substring(0, streetName.indexOf(\" \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3853/buggy-version/CDIO_Final.src.controller.Menu.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "ed525ee1c40ffc4e22451f7538f9a6a8ae0cd68a", "Url": "https://api.github.com/repos/Felza/Final", "Date": "2015-01-18T14:49:02Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((layout) != null) && ((layout.getChildCount()) != 0)) { layout.removeAllViews(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1581/buggy-version/app.src.main.java.com.example.sarthak_mehta.e_cakery.HomeActivity.java", "BodyUseAPI": ["android.view.ViewGroup.removeAllViews()"], "Fixed commit": "aab0ab1236500be472ee8d1d812ddcac263ab6be", "Url": "https://api.github.com/repos/mehtavinit9896/E-Cakery-App", "Date": "2017-04-12T06:59:53Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((layout) != null) && ((layout.getChildCount()) != 0)) { layout.removeAllViews(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1581/buggy-version/app.src.main.java.com.example.sarthak_mehta.e_cakery.HomeActivity.java", "BodyUseAPI": ["android.view.ViewGroup.removeAllViews()"], "Fixed commit": "aab0ab1236500be472ee8d1d812ddcac263ab6be", "Url": "https://api.github.com/repos/mehtavinit9896/E-Cakery-App", "Date": "2017-04-12T06:59:53Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((i != ((tmp.length) - 1)) && (i > 2)) { uri_res += \"/\"; uri_res += sub_string; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2426/buggy-version/Infrastructure.SVM.SVM_Core.src.main.java.it.svm.iot.core.CoAPMonitorIN.java", "BodyUseAPI": [], "Fixed commit": "d4bcefe4bb7f517e3bfb492ea190b0b2a4f7694b", "Url": "https://api.github.com/repos/paulrox/SmartVendingMachines", "Date": "2017-09-05T10:43:38Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.openapi.application.ApplicationInfo.getInstance().getBuild().getBaselineVersion()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (version >= 135) { return com.gisttemplates.GistTemplatesApplication.IntelliJVersion.V135; }else if (version >= 130) { return com.gisttemplates.GistTemplatesApplication.IntelliJVersion.V13; }else if (version >= 120) { return com.gisttemplates.GistTemplatesApplication.IntelliJVersion.V12; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1380/buggy-version/src.main.java.com.gisttemplates.GistTemplatesApplication.java", "BodyUseAPI": [], "Fixed commit": "6d8dfed0817070e50de00ecc1ab72e2b3a3873da", "Url": "https://api.github.com/repos/geowarin/gist-templates-plugin", "Date": "2014-04-21T15:35:23Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(e instanceof Model.LoadTrigger)) { drawObj(offGraph, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2877/buggy-version/src.View.GameRender.java", "BodyUseAPI": ["View.GameRender.drawObj(java.awt.Graphics2D,Model.GameObject)"], "Fixed commit": "71860984ed52545e9ce2e064fd5bf884527a09fb", "Url": "https://api.github.com/repos/BenPetkovsek/GAMES", "Date": "2017-01-26T00:47:16Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((owner) == null) { }else if ((owner.getAccount().getBalance()) > 0) { int rent = 0; if ((this) instanceof entity.Brewery) { rent = (getRent()) * (player.getLastThrow().getSum()); }else { rent = getRent(); } owner.getAccount().setBalance(((owner.getAccount().getBalance()) + rent)); player.getAccount().setBalance((balance - rent)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4613/buggy-version/src.entity.Ownable.java", "BodyUseAPI": [], "Fixed commit": "8afd75b76cd7502c3a713fc6ab0575d15712d5fc", "Url": "https://api.github.com/repos/freyahelstrup/17_final", "Date": "2017-01-04T15:52:52Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.zxing.integration.android.IntentIntegrator.parseActivityResult(int,int,android.content.Intent)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((result.getContents()) != null) { java.lang.Integer idScan = java.lang.Integer.parseInt(result.getContents()); editor.putInt(\"ID_SCAN_VALUE\", idScan); editor.commit(); this.setResult(com.imie.trybaproject.views.activity.RESULT_OK); }else { this.setResult(com.imie.trybaproject.views.activity.RESULT_CANCELED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4188/buggy-version/src.com.imie.trybaproject.views.activity.ScanActivity.java", "BodyUseAPI": ["com.google.zxing.integration.android.IntentResult.getContents()", "java.lang.Integer.parseInt(result.getContents())"], "Fixed commit": "a285478b512a7d99ec1f0afa7dfb29a4ec244774", "Url": "https://api.github.com/repos/QuentinBontemps/TrybaProject", "Date": "2013-12-21T23:06:41Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(m3.find())) { p3 = java.util.regex.Pattern.compile(\"<w:sdtContent>[\\\\d\\\\D]*?<w:t>([\\\\d\\\\D]*?)</w:t>[\\\\d\\\\D]*?</w:sdtContent>\"); m3 = p3.matcher(sdtContent); if (m3.find()) { java.lang.String wtInFooter = m3.group(1); java.lang.String nodeName = \"dc:\" + propertyName; java.lang.String pattern = (((((\"(<\" + nodeName) + \">)\") + \"([\\\\d\\\\D]*?)\") + \"(</\") + nodeName) + \">)\"; java.util.regex.Pattern p4 = java.util.regex.Pattern.compile(pattern); java.util.regex.Matcher m4 = p4.matcher(coreXmlContent); if (m4.find()) { java.lang.String updated = ((m4.group(1)) + wtInFooter) + (m4.group(3)); coreXmlContent = com.globalsight.util.StringUtil.replace(coreXmlContent, m4.group(), updated); } } }else { java.lang.String wtInFooter = m3.group(1); java.lang.String nodeName = \"dc:\" + propertyName; java.lang.String pattern = (((((\"(<\" + nodeName) + \">)\") + \"([\\\\d\\\\D]*?)\") + \"(</\") + nodeName) + \">)\"; java.util.regex.Pattern p4 = java.util.regex.Pattern.compile(pattern); java.util.regex.Matcher m4 = p4.matcher(coreXmlContent); if (m4.find()) { java.lang.String updated = ((m4.group(1)) + wtInFooter) + (m4.group(3)); coreXmlContent = com.globalsight.util.StringUtil.replace(coreXmlContent, m4.group(), updated); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8748/buggy-version/main6.envoy.src.java.com.globalsight.everest.page.pageexport.style.DocxStyleUtil.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)"], "Fixed commit": "d7203ecc032f911980d5ef98890d8c33b4811e49", "Url": "https://api.github.com/repos/tingley/globalsight", "Date": "2016-05-13T08:31:31Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((items.length) == 0) { items[0] = get(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1682/buggy-version/kubernetes-client.src.main.java.io.fabric8.kubernetes.client.dsl.internal.KubernetesListOperationsImpl.java", "BodyUseAPI": [], "Fixed commit": "1bccb636172d8e56b1121f15056b1e05e559fa23", "Url": "https://api.github.com/repos/jstrachan/kubernetes-client", "Date": "2015-11-14T06:13:09Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isPaused)) { v.vibrate(500); showToastInThread(\"Due to inactivity Score Keeper will shut down in 15 seconds.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1006/buggy-version/ScoreKeeper.src.main.java.codepath.apps.demointroandroid.ScoreKeeperActivity.java", "BodyUseAPI": [], "Fixed commit": "74d37cdb5a4d0c8e3d25bf566b4cce279b14a7cb", "Url": "https://api.github.com/repos/djtbdanner/andriod_score_keeper", "Date": "2017-03-24T09:52:25Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((statement.getType()) == (intermediate.ICodeNodeType.RETURN_STATEMENT)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5818/buggy-version/src.interpreter.executors.StmtExecutor.java", "BodyUseAPI": [], "Fixed commit": "7445d69287dd596af3df71d75ce27588ec21ffba", "Url": "https://api.github.com/repos/LeptusHe/schinus", "Date": "2015-11-21T16:45:36Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((this.direction) == (this.prevDirection))) { this.advancedKey = this.direction; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5611/buggy-version/GameModule.Pacman.java", "BodyUseAPI": [], "Fixed commit": "8e6ccd907bdbe42820c3d5b661eae7cd6ca20383", "Url": "https://api.github.com/repos/louisecabrera/CMSC137Project", "Date": "2017-11-21T02:21:03Z"},
{"Line": "=>723", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getDate()) == null) { return defaultURL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3898/buggy-version/src.main.java.uk.ac.cam.cl.dtg.isaac.api.managers.EventBookingManager.java", "BodyUseAPI": [], "Fixed commit": "54ff6f8729c67e0502b93479f858986671cd580f", "Url": "https://api.github.com/repos/ucam-cl-dtg/isaac-api", "Date": "2017-07-21T17:01:34Z"},
{"Line": "=>1577", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((com.example.jonny.myfirstapp.FunctionCall) (funcCall)).parameters.size()) > 0) { ((com.example.jonny.myfirstapp.FunctionCall) (funcCall)).parameters.remove(((((com.example.jonny.myfirstapp.FunctionCall) (funcCall)).parameters.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3330/buggy-version/app.src.main.java.com.example.jonny.myfirstapp.Main.java", "BodyUseAPI": ["((com.example.jonny.myfirstapp.FunctionCall) (funcCall)).parameters.size()", "((com.example.jonny.myfirstapp.FunctionCall) (funcCall)).parameters.remove(((((com.example.jonny.myfirstapp.FunctionCall) (funcCall)).parameters.size()) - 1))"], "Fixed commit": "cf88f48ba418ce32366f8474984de45fc11b4dca", "Url": "https://api.github.com/repos/jranks123/diss", "Date": "2015-09-02T01:30:21Z"},
{"Line": "=>1125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((com.example.jonny.myfirstapp.FunctionCall) (node)).parameters.size()) > 0) { ((com.example.jonny.myfirstapp.FunctionCall) (node)).parameters.remove(((((com.example.jonny.myfirstapp.FunctionCall) (node)).parameters.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3330/buggy-version/app.src.main.java.com.example.jonny.myfirstapp.Main.java", "BodyUseAPI": ["((com.example.jonny.myfirstapp.FunctionCall) (node)).parameters.remove(((((com.example.jonny.myfirstapp.FunctionCall) (node)).parameters.size()) - 1))", "((com.example.jonny.myfirstapp.FunctionCall) (node)).parameters.size()"], "Fixed commit": "cf88f48ba418ce32366f8474984de45fc11b4dca", "Url": "https://api.github.com/repos/jranks123/diss", "Date": "2015-09-02T01:30:21Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((v == (btnNegative)) || (v == (btnPositive))) { activity().setEditedDrug(null); removeAllDosageTypeFragments(); activity().onBackPressed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5718/buggy-version/app.src.main.java.com.example.user.drugsorganiser.ViewModel.DrugsActivity.Organiser.MyDrugs.AddEditDrug.AddEditDrugFragment.java", "BodyUseAPI": [], "Fixed commit": "621359616275e222a7727a4198674633ffa26c74", "Url": "https://api.github.com/repos/staki777/AndroidOrganiser", "Date": "2017-05-26T16:40:30Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index < (psiBuilder.getCurrentOffset())) { throw new java.lang.UnsupportedOperationException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7384/buggy-version/smalidea.src.main.java.org.jf.smalidea.PsiBuilderTokenStream.java", "BodyUseAPI": [], "Fixed commit": "0100e0492f777afdef4b52193a1b07864cb39884", "Url": "https://api.github.com/repos/JesusFreke/smali", "Date": "2013-06-20T03:47:54Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Constants.EventListeners.EVENT_LISTENING_ENABLED) { if (Constants.EventListeners.APPLICATION_STATE_LISTENER) { org.wso2.emm.agent.events.beans.EventPayload eventPayload = new org.wso2.emm.agent.events.beans.EventPayload(); eventPayload.setPayload(payload); eventPayload.setType(type); org.wso2.emm.agent.events.publisher.HttpDataPublisher httpDataPublisher = new org.wso2.emm.agent.events.publisher.HttpDataPublisher(); httpDataPublisher.publish(eventPayload); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4636/buggy-version/modules.mobile-agents.android.client.client.src.main.java.org.wso2.emm.agent.events.listeners.ApplicationStateListener.java", "BodyUseAPI": [], "Fixed commit": "220acccf2e3c67500d19167c3607d809e07a2f81", "Url": "https://api.github.com/repos/wso2-attic/product-emm", "Date": "2016-05-02T05:10:48Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLeftShowing) { root.hideLeft(); isLeftShowing = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3741/buggy-version/Animation.ThreePane.src.com.commonsware.android.anim.threepane.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2dca2a8f705ebfd1540d6a469f1733fea6743679", "Url": "https://api.github.com/repos/commonsguy/cw-omnibus", "Date": "2012-10-07T18:56:25Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLeftShowing) { root.hideLeft(); isLeftShowing = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3741/buggy-version/Animation.ThreePaneBC.src.com.commonsware.android.anim.threepane.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2dca2a8f705ebfd1540d6a469f1733fea6743679", "Url": "https://api.github.com/repos/commonsguy/cw-omnibus", "Date": "2012-10-07T18:56:25Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { if (!(wrapper.integer)) { throw new java.lang.AssertionError(\"Not covered/expected\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/199/buggy-version/src.main.java.org.crashub.bash.spi.BaseContext.java", "BodyUseAPI": [], "Fixed commit": "f26985aa5913411c9cff91463147998c8819c8a9", "Url": "https://api.github.com/repos/crashub/bash", "Date": "2014-02-25T06:52:53Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value != null) { wrapper.o = value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/199/buggy-version/src.main.java.org.crashub.bash.spi.BaseContext.java", "BodyUseAPI": [], "Fixed commit": "f26985aa5913411c9cff91463147998c8819c8a9", "Url": "https://api.github.com/repos/crashub/bash", "Date": "2014-02-25T06:52:53Z"},
{"Line": "=>503", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.stevechaloner.intellijad.environment.EnvironmentContext.getProject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (IntelliJadConstants.CURRENTLY_DECOMPILING.isIn(project)) { net.stevechaloner.intellijad.IntelliJad.LOG.debug(((\"Decompilation of \" + (IntelliJadConstants.CURRENTLY_DECOMPILING.get(project))) + \" in progress\")); }else { IntelliJadConstants.CURRENTLY_DECOMPILING.set(project, descriptor.getClassName()); file = decompiler.decompile(descriptor, context); if (file != null) { result = new net.stevechaloner.intellijad.decompilers.DecompilationResult(file); editorManager.closeFile(descriptor.getClassFile()); editorManager.openFile(file, true); } consoleContext.addSectionMessage(ConsoleEntryType.INFO, \"message.operation-time\", ((java.lang.System.currentTimeMillis()) - startTime)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3094/buggy-version/intellijad.src.java.net.stevechaloner.intellijad.IntelliJad.java", "BodyUseAPI": ["com.intellij.openapi.diagnostic.Logger.debug(((\"Decompilation of \" + (IntelliJadConstants.CURRENTLY_DECOMPILING.get(project))) + \" in progress\"))", "IntelliJadConstants.CURRENTLY_DECOMPILING.get(com.intellij.openapi.project.Project)", "IntelliJadConstants.CURRENTLY_DECOMPILING.set(com.intellij.openapi.project.Project,descriptor.getClassName())"], "Fixed commit": "7e0650c533fdd317d8027496769c7d42dedf7019", "Url": "https://api.github.com/repos/zielu/IntelliJadPlus", "Date": "2014-01-30T20:38:52Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((keyValue.length) == 2) { keyValueMap.put(keyValue[0], keyValue[1]); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4391/buggy-version/src.main.java.com.akdeniz.googleplaycrawler.Utils.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "fe6497f03e72a9a0b4ff486d00b4aca664dff914", "Url": "https://api.github.com/repos/onyxbits/raccoon4", "Date": "2017-02-16T03:20:56Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(event.isConsumed())) { item.destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6084/buggy-version/engine.src.main.java.org.terasology.logic.inventory.ItemCommands.java", "BodyUseAPI": [], "Fixed commit": "d1fa2157e801ae0864a3da27c8465380f806750c", "Url": "https://api.github.com/repos/MarcinSc/Terasology", "Date": "2014-02-08T04:11:44Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getState()) != (com.magnetstreet.swt.extra.window.Window.STATE.CLOSED)) { event.doit = false; close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1669/buggy-version/swt-bean-widgets-core.src.main.java.com.magnetstreet.swt.extra.window.Window.java", "BodyUseAPI": [], "Fixed commit": "26c106759be60056f069c4c8e8062f30d72c9d77", "Url": "https://api.github.com/repos/martin1yness/swt-bean-widgets", "Date": "2011-12-06T02:34:09Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == null) { return text; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8921/buggy-version/sample-spring-boot-kitchensink.src.main.java.com.example.bot.spring.SQLDatabaseEngine.java", "BodyUseAPI": [], "Fixed commit": "43938178cb2a3b5eab8bed6bfc47f3a57ad79771", "Url": "https://api.github.com/repos/MiG98789/Line-chatbot-for-COMP3111", "Date": "2017-09-25T15:57:12Z"},
{"Line": "=>3251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Queue<org.apache.hadoop.hive.metastore.DiskManager.DMRequest>.poll()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((r.file.getStore_status()) == (MetaStoreConst.MFileStoreStatus.REPLICATED)) || ((r.begin_idx) >= (r.file.getRep_nr()))) { release_rep_limit(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6324/buggy-version/src.metastore.src.java.org.apache.hadoop.hive.metastore.DiskManager.java", "BodyUseAPI": [], "Fixed commit": "f03870faf049da8142b1f33e7a0f6a561d261b85", "Url": "https://api.github.com/repos/bd-group/metastore", "Date": "2014-04-26T07:03:22Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bookIds.size()) == 0) { android.widget.Toast toast = android.widget.Toast.makeText(getApplicationContext(), getResources().getString(R.string.search_no_books_picked), Toast.LENGTH_SHORT); toast.show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5990/buggy-version/src.sk.suchac.hbe.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "03ed3380cb7e3da617858daf2d2b949f8fc8a9d0", "Url": "https://api.github.com/repos/cilipfs/HBE", "Date": "2014-01-04T10:39:58Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (nameField == null) { throw new java.lang.RuntimeException((\"Unable to find: \" + field)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1714/buggy-version/src.main.java.elec332.core.main.APIHandler.java", "BodyUseAPI": [], "Fixed commit": "584ab102ef237425f999cf2eefde5a8e0af5db6d", "Url": "https://api.github.com/repos/Elecs-Mods/ElecCore", "Date": "2017-02-24T21:38:04Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["simpleserver.command.LockCommand.extractArgument(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((name != null) && ((name.length()) > 16)) { player.addTMessage(Color.RED, \"Names longer than 16 characters are not allowed.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6901/buggy-version/src.simpleserver.command.LockCommand.java", "BodyUseAPI": [], "Fixed commit": "619b5b05da6d49331c0b593d2c7a45a37ec73997", "Url": "https://api.github.com/repos/SimpleServer/SimpleServer", "Date": "2011-09-20T19:49:55Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((plungerholding.isOnline()) == true) { objective.setPoints(entry.get(plungerholding.getTeam()), ((objective.getPoints(entry.get(plungerholding.getTeam()))) + 1)); flames(plungerholding.getLocation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8109/buggy-version/src.mc.adambor.ArenaPlunger.ArenaPlunger.java", "BodyUseAPI": ["java.util.HashMap<mc.alk.arena.objects.teams.ArenaTeam, mc.alk.scoreboardapi.api.SEntry>.get(plungerholding.getTeam())", "java.util.HashMap<mc.alk.arena.objects.teams.ArenaTeam, mc.alk.scoreboardapi.api.SEntry>.get(plungerholding.getTeam())", "mc.adambor.ArenaPlunger.ArenaPlunger.1.flames(plungerholding.getLocation())", "mc.alk.arena.objects.ArenaPlayer.getLocation()", "mc.alk.scoreboardapi.api.SObjective.getPoints(entry.get(plungerholding.getTeam()))", "mc.alk.arena.objects.ArenaPlayer.getTeam()", "mc.alk.scoreboardapi.api.SObjective.setPoints(entry.get(plungerholding.getTeam()),((objective.getPoints(entry.get(plungerholding.getTeam()))) + 1))", "mc.alk.arena.objects.ArenaPlayer.getTeam()"], "Fixed commit": "beeb7501d5647f5716a0e1c9616d16a40ee94521", "Url": "https://api.github.com/repos/adambor/ArenaPlunger", "Date": "2015-04-11T21:24:18Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mReceiver) != null) unregisterReceiver(mReceiver);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6758/buggy-version/src.com.ma.schiffeversenken.android.view.VisitMultiplayerGame.java", "BodyUseAPI": [], "Fixed commit": "c37a5e5f66387e0f0c5353cabe5e3f7ddc495381", "Url": "https://api.github.com/repos/ubemy/MA", "Date": "2015-01-02T10:33:04Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (fileName.equals(\"forwardAmbient\")) { org.lwjgl.opengl.GL20.glUseProgram(program); org.lwjgl.opengl.GL20.glUniform1i(org.lwjgl.opengl.GL20.glGetUniformLocation(program, \"diffuseMap\"), 0); org.lwjgl.opengl.GL20.glUniform1i(org.lwjgl.opengl.GL20.glGetUniformLocation(program, \"normalMap\"), 1); org.lwjgl.opengl.GL20.glUniform1i(org.lwjgl.opengl.GL20.glGetUniformLocation(program, \"roughnessMap\"), 2); org.lwjgl.opengl.GL20.glUniform1i(org.lwjgl.opengl.GL20.glGetUniformLocation(program, \"metallicMap\"), 3); org.lwjgl.opengl.GL20.glUniform1i(org.lwjgl.opengl.GL20.glGetUniformLocation(program, \"emissiveMap\"), 4); org.lwjgl.opengl.GL20.glUniform1i(org.lwjgl.opengl.GL20.glGetUniformLocation(program, \"R_irradianceMap\"), 5); org.lwjgl.opengl.GL20.glUniform1i(org.lwjgl.opengl.GL20.glGetUniformLocation(program, \"R_prefilterMap\"), 6); org.lwjgl.opengl.GL20.glUniform1i(org.lwjgl.opengl.GL20.glGetUniformLocation(program, \"R_brdfLUT\"), 7); org.lwjgl.opengl.GL20.glUseProgram(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4183/buggy-version/src.net.medox.neonengine.rendering.resourceManagement.ShaderData.java", "BodyUseAPI": [], "Fixed commit": "5b3736a9b57d60ea5faee71c4df151534dbf0a36", "Url": "https://api.github.com/repos/xMedox/NeonEngine", "Date": "2017-04-28T15:06:37Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.spongepowered.asm.mixin.transformer.ClassInfo.forType(org.spongepowered.asm.lib.Type)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (typeInfo == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1373/buggy-version/src.main.java.org.spongepowered.asm.mixin.transformer.MixinVerifier.java", "BodyUseAPI": [], "Fixed commit": "75f738cf28160f0d0950bcd7cf815754490e465b", "Url": "https://api.github.com/repos/SpongePowered/Mixin", "Date": "2015-10-25T00:37:03Z"},
{"Line": "=>615", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["BBRCust.BBRPromoManager.findBestApplicablePromo(BBRCust.BBRVisit)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (promo == null) return \"\"; else return promo.toJson();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4318/buggy-version/BBRServer.src.BBRVisits.java", "BodyUseAPI": ["BBRCust.BBRPromo.toJson()"], "Fixed commit": "d95d2cdb32dc18e14f2f8615a7e6d3472df3dc55", "Url": "https://api.github.com/repos/mgalimov/BBR", "Date": "2017-01-10T17:40:00Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (object != null) { return ((canConnect(direction)) && (universalelectricity.compatibility.Compatibility.isHandler(object, direction))) && (universalelectricity.compatibility.Compatibility.canConnect(object, direction, this)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/216/buggy-version/src.main.scala.universalelectricity.core.grid.node.NodeEnergy.java", "BodyUseAPI": ["universalelectricity.compatibility.Compatibility.isHandler(java.lang.Object,net.minecraftforge.common.util.ForgeDirection)", "universalelectricity.compatibility.Compatibility.canConnect(java.lang.Object,net.minecraftforge.common.util.ForgeDirection,universalelectricity.core.grid.node.NodeEnergy)"], "Fixed commit": "8bc2bfd3c35935e50a008fffdf91b24789ebf30a", "Url": "https://api.github.com/repos/Universal-Electricity/Universal-Electricity", "Date": "2014-09-19T18:13:28Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(playbackService.hasPlaylist())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/76/buggy-version/app.src.main.java.com.andryr.musicplayer.utils.Notification.java", "BodyUseAPI": [], "Fixed commit": "736e1760b23976add3a5f5ffa6dd4bb242ffdbad", "Url": "https://api.github.com/repos/andryr/Harmony-Music-Player", "Date": "2016-03-16T16:02:15Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.egov.works.contractoradvance.service.ContractorAdvanceService.getTotalAdvancePaid(((contractorAdvanceRequisition.getId()) == null ? -1L : contractorAdvanceRequisition.getId()),contractorAdvanceRequisition.getWorkOrderEstimate().getId(),ContractorAdvanceRequisition.ContractorAdvanceRequisitionStatus.APPROVED.toString())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (advancePaidTillNow == null) advancePaidTillNow = 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6368/buggy-version/egov.egov-works.src.main.java.org.egov.works.contractoradvance.service.ContractorAdvanceService.java", "BodyUseAPI": [], "Fixed commit": "7c2cc47c26fa680bb3bc583b9f05cb740b80cb97", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2016-12-12T12:35:02Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gpsP.getTimeStamp()) > ((requestDate.getTime()) - (gpsValidTime))) out.append(com.aroundroid.aroundgps.GPSPropXML.gpsPropToFriend(false, gpsP));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/262/buggy-version/aroundgps.src.com.aroundroid.aroundgps.AroundgpsServlet.java", "BodyUseAPI": ["com.aroundroid.aroundgps.GPSPropXML.gpsPropToFriend(boolean,com.aroundroid.aroundgps.GPSProps)", "java.io.PrintWriter.append(com.aroundroid.aroundgps.GPSPropXML.gpsPropToFriend(false, gpsP))"], "Fixed commit": "8b28c4baa9d2936f339ba0bc7110aaf22c869811", "Url": "https://api.github.com/repos/AroundRoidGroup/astrid", "Date": "2011-06-11T11:45:53Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gpsP.getTimeStamp()) > ((requestDate.getTime()) - (gpsValidTime))) out.append(com.aroundroid.aroundgps.GPSPropXML.gpsPropToFriend(true, gpsP));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/262/buggy-version/aroundgps.src.com.aroundroid.aroundgps.AroundgpsServlet.java", "BodyUseAPI": ["java.io.PrintWriter.append(com.aroundroid.aroundgps.GPSPropXML.gpsPropToFriend(true, gpsP))", "com.aroundroid.aroundgps.GPSPropXML.gpsPropToFriend(boolean,com.aroundroid.aroundgps.GPSProps)"], "Fixed commit": "8b28c4baa9d2936f339ba0bc7110aaf22c869811", "Url": "https://api.github.com/repos/AroundRoidGroup/astrid", "Date": "2011-06-11T11:45:53Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getScript(Game.C)) != null) { executable = this.getScript(Game.C); }else { executable = plm.core.model.Game.getInstance().getCurrentLesson().getCurrentExercise().getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3800/buggy-version/src.plm.universe.Entity.java", "BodyUseAPI": [], "Fixed commit": "fb7e69f3f79e95267fcedac667cd099f9b0f4470", "Url": "https://api.github.com/repos/oster/PLM", "Date": "2014-07-22T08:23:58Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shake) < 0) shake = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5361/buggy-version/project.core.src.com.jotom.nms.Camera.java", "BodyUseAPI": [], "Fixed commit": "c6400492446d71f8bf55f3b445fbfcbddc82c4d4", "Url": "https://api.github.com/repos/GlobalGameJam2015-Snittarna/NoMoreSweden2017", "Date": "2017-06-10T15:33:38Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_isID) { _taskID = java.lang.Integer.parseInt(parameter); }else { _taskName = parameter; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2816/buggy-version/src.logic.command.CmdDelete.java", "BodyUseAPI": [], "Fixed commit": "6143067b25bbcdf8b0913e89e05499c3d0b50dd2", "Url": "https://api.github.com/repos/cs2103aug2015-w14-3j/main", "Date": "2015-10-20T18:05:21Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) > 8) { mRefreshMenuItem.setActionView(R.layout.menu_refresh); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3117/buggy-version/src.com.tywholland.poeevents.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2ab01fba2440bb6db02fb43e8d86aea577e8bdab", "Url": "https://api.github.com/repos/Tywholland/PoEEvents", "Date": "2013-07-19T06:13:55Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (amount == 0L) { dismiss(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4922/buggy-version/app.src.main.java.org.jorge.lbudget.ui.frags.MovementDetailDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "db057478fed257393d60dbab97c08d34180eb524", "Url": "https://api.github.com/repos/Stoyicker/LBudget", "Date": "2014-09-03T15:10:12Z"},
{"Line": "=>853", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.connectsdk.service.DeviceService.getService(java.lang.Class<? extends com.connectsdk.service.DeviceService>,com.connectsdk.service.config.ServiceDescription,com.connectsdk.service.config.ServiceConfig)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (deviceService != null) { deviceService.setServiceDescription(desc); device.addService(deviceService); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1372/buggy-version/src.com.connectsdk.discovery.DiscoveryManager.java", "BodyUseAPI": ["com.connectsdk.service.DeviceService.setServiceDescription(com.connectsdk.service.config.ServiceDescription)", "com.connectsdk.device.ConnectableDevice.addService(com.connectsdk.service.DeviceService)"], "Fixed commit": "abecc16cf41edc0c2a5b53929d2b0e432790847f", "Url": "https://api.github.com/repos/ConnectSDK/Connect-SDK-Android", "Date": "2014-08-21T21:25:53Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCr.getValue().toString().equals(\"true\")) newUserStory.setCR(true); else newUserStory.setCR(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7626/buggy-version/src.main.java.com.pms.component.UserStoryWindow.java", "BodyUseAPI": [], "Fixed commit": "e9ddaf0c3c0fdf4da782f436c2df5aa6da77e537", "Url": "https://api.github.com/repos/CodeLyco/ProjectManagementSystem", "Date": "2015-12-01T11:58:51Z"},
{"Line": "=>1638", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (report.empty) { javax.swing.JOptionPane.showMessageDialog(null, \"No report for vehicles this month\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8222/buggy-version/src.TLinkFrame.java", "BodyUseAPI": [], "Fixed commit": "da31dbd165cdbbacfa1d92e5ff05358331945848", "Url": "https://api.github.com/repos/vinlore/TLink", "Date": "2015-03-26T03:21:18Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((direction) == 1) { robotObject.translate(0, 1); }else if ((direction) == 2) { robotObject.translate(1, 0); }else if ((direction) == 3) { robotObject.translate((-1), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2675/buggy-version/lesson8.ps8.hw8c.draft_files.Robot.java", "BodyUseAPI": [], "Fixed commit": "7215c7072a171d132069c9052779efa1cfbb69e3", "Url": "https://api.github.com/repos/karnoq/ITJ", "Date": "2015-10-27T02:49:22Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5642/buggy-version/src.com.axelby.podax.Helper.java", "BodyUseAPI": [], "Fixed commit": "6a7afa72c5a9d1f9f61d0c9963291bcfbe4400b2", "Url": "https://api.github.com/repos/thasmin/Podax", "Date": "2012-12-30T22:39:57Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((DataStore.CsvFormattedContests.size()) >= 1) { java.lang.String s = DataStore.CsvFormattedContests.get(position); alertDialog.setMessage(s); alertDialog.show(); }else { alertDialog.setMessage(\"No Games Yet\"); alertDialog.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/317/buggy-version/app.src.main.java.trc3543.trcscoutingapp.AddCompetitions.java", "BodyUseAPI": [], "Fixed commit": "543311f5425e2ff554523499a7aa00fd25453cc1", "Url": "https://api.github.com/repos/DrDab/TrcScoutingApp", "Date": "2017-12-28T05:11:38Z"},
{"Line": "=>906", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((_endDate) == null) && ((task.getEndDate()) == null)) { return 0; }else { return java.lang.Integer.compare(_priority, task.getPriority()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3973/buggy-version/src.cs2103_w09_1j.esther.Task.java", "BodyUseAPI": ["java.lang.Integer.compare(int,int)", "cs2103_w09_1j.esther.Task.getPriority()"], "Fixed commit": "450ce9409eca74372c423d7cf973c0722aebb813", "Url": "https://api.github.com/repos/cs2103jan2016-w09-1j/main", "Date": "2016-04-06T05:32:42Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((value.length()) == 0) { return new greed.model.ParamValue(param, new java.lang.String[]{ }); }else { java.lang.String[] valueList = value.split(\",\"); greed.model.Param paramWithPrim = new greed.model.Param(param.getName(), new greed.model.Type(param.getType().getPrimitive(), 0), param.getIndex()); for (int i = 0; i < (valueList.length); i++) { valueList[i] = renderParamValue(new greed.model.ParamValue(paramWithPrim, valueList[i].trim())); } return new greed.model.ParamValue(param, valueList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4407/buggy-version/src.main.java.greed.code.lang.CStyleLanguage.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "3d6eb941ed563ac0e6b3ed78b56b0b9b3b6790f1", "Url": "https://api.github.com/repos/vexorian/topcoder-greed", "Date": "2013-11-01T21:27:00Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((y - dist) > 2) { index = ((((x * 16) + z) * 256) + y) - dist; chunkArray[index] = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1661/buggy-version/src.main.java.zmaster587.advancedRocketry.world.decoration.MapGenCrater.java", "BodyUseAPI": [], "Fixed commit": "d1a77572994d5f52f4ebe4210f529b20246009e3", "Url": "https://api.github.com/repos/zmaster587/AdvancedRocketry", "Date": "2017-04-08T23:35:16Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.silverpeas.util.web.servlet.FileUploadUtil.getFile(java.util.List<org.apache.commons.fileupload.FileItem>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((file != null) && (com.silverpeas.util.StringUtil.isDefined(file.getName()))) { java.lang.String extension = com.stratelia.webactiv.util.FileRepositoryManager.getFileExtension(file.getName()); if ((extension != null) && (extension.equalsIgnoreCase(\"jpeg\"))) { extension = \"jpg\"; } if (((!(\"gif\".equalsIgnoreCase(extension))) && (!(\"jpg\".equalsIgnoreCase(extension)))) && (!(\"png\".equalsIgnoreCase(extension)))) { throw new com.stratelia.webactiv.util.exception.UtilException(\"MyProfilRequestRouter.saveAvatar()\", com.stratelia.webactiv.util.exception.SilverpeasRuntimeException.ERROR, \"\", \"Bad extension, .gif or .jpg or .png expected.\"); } try { img.saveImage(file.getInputStream()); } catch (java.io.IOException e) { throw new com.stratelia.webactiv.util.exception.UtilException(\"MyProfilRequestRouter.saveAvatar()\", com.stratelia.webactiv.util.exception.SilverpeasRuntimeException.ERROR, \"\", \"Problem while saving image.\"); } }else if (\"yes\".equals(removeImageFile)) { img.removeImage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5028/buggy-version/war-core.src.main.java.com.silverpeas.socialnetwork.myProfil.servlets.MyProfilRequestRouter.java", "BodyUseAPI": ["org.apache.commons.fileupload.FileItem.getInputStream()", "org.apache.commons.fileupload.FileItem.getName()", "com.stratelia.webactiv.util.FileRepositoryManager.getFileExtension(file.getName())", "com.silverpeas.directory.servlets.ImageProfil.saveImage(file.getInputStream())"], "Fixed commit": "99a128fd8f605c01497073c50949d41a4f34ef16", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2013-06-17T15:16:02Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2187/buggy-version/BonusPayout.src.com.ibm.websphere.samples.batch.artifacts.ForceFailureReadListener.java", "BodyUseAPI": [], "Fixed commit": "0e81c963a6382d3ec0ea0e42b5fef32cead82985", "Url": "https://api.github.com/repos/WASdev/sample.batch.bonuspayout", "Date": "2014-10-31T13:47:04Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.part) == (org.deidentifier.arx.gui.model.ModelEvent.ModelPart.FILTER)) { if (((model) != null) && (!(isTooLarge(model.getResult(), ((org.deidentifier.arx.gui.model.ModelNodeFilter) (event.data)), model.getMaxNodesInViewer())))) { eventFilterChanged(model.getResult(), ((org.deidentifier.arx.gui.model.ModelNodeFilter) (event.data))); } }else if ((event.part) == (org.deidentifier.arx.gui.model.ModelEvent.ModelPart.EXPAND)) { if (((model) != null) && (!(isTooLarge(model.getResult(), model.getNodeFilter(), model.getMaxNodesInViewer())))) { eventFilterChanged(model.getResult(), model.getNodeFilter()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7814/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.explore.ViewSolutionSpace.java", "BodyUseAPI": ["org.deidentifier.arx.gui.view.impl.explore.ViewSolutionSpace.eventFilterChanged(model.getResult(),((org.deidentifier.arx.gui.model.ModelNodeFilter) (event.data)))", "org.deidentifier.arx.gui.view.impl.explore.ViewSolutionSpace.isTooLarge(model.getResult(),((org.deidentifier.arx.gui.model.ModelNodeFilter) (event.data)),model.getMaxNodesInViewer())"], "Fixed commit": "c17e534e8545874c6311474928121767cc7a3c83", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2015-06-25T14:51:51Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (_parms._response_column)) { hex.SupervisedModelBuilder.error(\"_response_column\", \"Response column parameter not set.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6231/buggy-version/h2o-core.src.main.java.hex.SupervisedModelBuilder.java", "BodyUseAPI": [], "Fixed commit": "4715cc0f9ef2d683c144615260e43032bd19314d", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2014-12-30T00:26:07Z"},
{"Line": "=>741", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (rows != null) { for (com.couchbase.lite.QueryRow row : rows) { rowsAsMaps.add(row.asJSONDictionary()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6792/buggy-version/src.main.java.com.couchbase.lite.router.Router.java", "BodyUseAPI": [], "Fixed commit": "ca8af5286e344cd817f7be029d09f1a6c71bf975", "Url": "https://api.github.com/repos/yaronyg/couchbase-lite-java-core", "Date": "2014-03-25T22:01:06Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cards.size()) < 5) if ((cards.size()) == 2) { if (isRocket(cards)) { pattern = new DDZ.Procket(); return pattern; } }else return null; else { java.util.ArrayList<java.lang.Integer> sortedCards = new java.util.ArrayList<>(); for (int i = 0; i < (cards.size()); i++) { sortedCards.add(cards.get(i).getNumber()); } java.util.Collections.sort(sortedCards); if (isStraight(sortedCards)) { java.util.ArrayList<java.lang.Integer> listOfStraight = numOfN(cardsMap, 1); java.util.Collections.sort(listOfStraight); pattern = new DDZ.Pstraight(listOfStraight); return pattern; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/353/buggy-version/src.DDZ.DDZ.java", "BodyUseAPI": ["java.util.List<cards.Card>.size()", "cards.get(i).getNumber()", "java.util.ArrayList<java.lang.Integer>.add(cards.get(i).getNumber())", "java.util.List<cards.Card>.get(int)", "DDZ.DDZ.isRocket(java.util.List<cards.Card>)", "java.util.List<cards.Card>.size()"], "Fixed commit": "b36d24d4139bc5dffc7107f3cd7838b757956843", "Url": "https://api.github.com/repos/NoodyYeung/PokerGame", "Date": "2017-11-30T09:35:58Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getName().resolveBinding().getKind()) == (org.eclipse.jdt.core.dom.IBinding.VARIABLE)) { org.eclipse.jdt.core.IJavaElement javaElement = node.getName().resolveBinding().getJavaElement(); if ((javaElement.getElementType()) == (org.eclipse.jdt.core.IJavaElement.FIELD)) stored.push(((domain.explorer.DefUsesStatementVisitor.THIS) + (node.getName().toString()))); else stored.push(node.getName().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6196/buggy-version/PESTT.src.domain.explorer.DefUsesStatementVisitor.java", "BodyUseAPI": ["node.getName().toString()", "node.getName().resolveBinding()", "org.eclipse.jdt.core.dom.QualifiedName.getName()", "org.eclipse.jdt.core.dom.QualifiedName.getName()", "java.util.Stack<java.lang.String>.push(node.getName().toString())", "node.getName().resolveBinding().getJavaElement()", "java.util.Stack<java.lang.String>.push(((domain.explorer.DefUsesStatementVisitor.THIS) + (node.getName().toString())))", "node.getName().toString()", "org.eclipse.jdt.core.dom.QualifiedName.getName()"], "Fixed commit": "591f71ef4444f7f0445a04d520fea2cca40ddc74", "Url": "https://api.github.com/repos/ruigameiro/PESTT", "Date": "2012-06-06T17:44:11Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openprovenance.prov.notation.TreeTraversal.convert(ast.getChild(i))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (o instanceof org.openprovenance.prov.model.LangString) { keys.add(pFactory.newKey(o, name.PROV_LANG_STRING)); }else { java.lang.Object[] pair = ((java.lang.Object[]) (o)); keys.add(pFactory.newKey(pair[0], ((org.openprovenance.prov.model.QualifiedName) (pair[1])))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3225/buggy-version/prov-n.src.main.java.org.openprovenance.prov.notation.TreeTraversal.java", "BodyUseAPI": ["org.openprovenance.prov.model.ProvFactory.newKey(java.lang.Object,name.PROV_LANG_STRING)", "java.util.List<org.openprovenance.prov.model.Key>.add(pFactory.newKey(o, name.PROV_LANG_STRING))"], "Fixed commit": "67e94a7cfac6f7d27522a6583887ff99c89f120d", "Url": "https://api.github.com/repos/lucmoreau/ProvToolbox", "Date": "2015-07-13T15:45:57Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (t != null) { return t.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/313/buggy-version/core.src.uecide.app.PropertyFile.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "05ee60437636b354054ea33e109b5e3995db67f3", "Url": "https://api.github.com/repos/majenkotech/UECIDE", "Date": "2013-07-21T18:42:14Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mc.util.Utils.isJar()) { spark.Spark.staticFileLocation(\"app\"); }else { spark.Spark.externalStaticFileLocation(\"../../../../site/app\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3759/buggy-version/modelchecker.src.main.java.mc.webserver.WebServer.java", "BodyUseAPI": [], "Fixed commit": "9d32eec1dac9a8f491680db78c02c7518f04c8cb", "Url": "https://api.github.com/repos/DavidSheridan/Model-Checker", "Date": "2017-07-18T07:10:10Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (elmType.equalsIgnoreCase(brap.player.CHECKBOX)) { if (((value.equalsIgnoreCase(\"true\")) && (!(we.isSelected()))) || ((value.equalsIgnoreCase(\"false\")) && (we.isSelected()))) { try { fluentWaitTillClickable(we, driver); } catch (java.lang.Exception e) { LOGGER.info(\"Exception while performing FluentWait\"); } we.click(); } }else if (elmType.equalsIgnoreCase(brap.player.SELECT)) { org.openqa.selenium.WebElement select = we; java.util.List<org.openqa.selenium.WebElement> options = select.findElements(org.openqa.selenium.By.tagName(\"option\")); boolean done = false; for (org.openqa.selenium.WebElement option : options) { java.lang.String vall = option.getText().trim(); java.lang.String val2 = value.trim(); if (vall.equalsIgnoreCase(val2)) { option.click(); done = true; break; } } if (!done) { select.sendKeys((value + \"\\t\")); } }else { try { fluentWaitTillClickable(we, driver); } catch (java.lang.Exception e) { LOGGER.info(\"Exception while performing FluentWait\"); } we.click(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7996/buggy-version/src.brap.player.Player.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(brap.player.SELECT)"], "Fixed commit": "03d483ac74e774a1b250de906b903bd2e3badd68", "Url": "https://api.github.com/repos/nobal/BRAP", "Date": "2015-01-07T23:06:37Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.sawPlayer)) if (((this.velocity.x) != 0) || ((this.velocity.y) != 0)) while (((maze.tileAtLocation(xPos, yPos)) != null) && (maze.tileAtLocation(xPos, yPos).inMaze())) { if (player.rectangle.contains(xPos, yPos)) { this.sawPlayer = true; break; } xPos += (velocity.x) * ((GameScreen.PLAYER_SIZE_PX) / 2); xPos += (velocity.y) * ((GameScreen.PLAYER_SIZE_PX) / 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4467/buggy-version/DevMaze.src.com.devtalk.maze.Monster.java", "BodyUseAPI": [], "Fixed commit": "87660da6d8007de23ebc4d70c7c0d7de4b78c764", "Url": "https://api.github.com/repos/MadDevTalk/devMaze", "Date": "2013-10-31T18:11:42Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.ClipboardManager.getPrimaryClip()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cd == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2126/buggy-version/app.src.main.java.com.tallty.smart_life_android.utils.GlobalUtils.java", "BodyUseAPI": [], "Fixed commit": "961931fb6a92e6399348ddb936acbf30ff12f6cb", "Url": "https://api.github.com/repos/tallydev/smart_life_android", "Date": "2017-03-07T09:09:41Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.zip.ZipInputStream.getNextEntry()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ze.isDirectory()) { ze = zis.getNextEntry(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3279/buggy-version/UnZip.java", "BodyUseAPI": [], "Fixed commit": "bc8ecc4a118198630398f35a63d4580dc5f6abe4", "Url": "https://api.github.com/repos/CSE343-DEVOPS-Testing/Testing", "Date": "2017-12-02T09:42:27Z"},
{"Line": "=>3784", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.apimgt.impl.internal.ServiceReferenceHolder.getInstance().getRegistryService().getGovernanceSystemRegistry(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (registry.resourceExists(org.wso2.carbon.apimgt.impl.utils.APIUtil.getSequencePath(identifier, sequenceType))) { seqCollection = ((org.wso2.carbon.registry.api.Collection) (registry.get(org.wso2.carbon.apimgt.impl.utils.APIUtil.getSequencePath(identifier, sequenceType)))); if (seqCollection != null) { java.lang.String[] childPaths = seqCollection.getChildren(); for (java.lang.String childPath : childPaths) { org.wso2.carbon.apimgt.impl.utils.Resource sequence = registry.get(childPath); org.apache.axiom.om.OMElement seqElment = org.wso2.carbon.apimgt.impl.utils.APIUtil.buildOMElement(sequence.getContentStream()); if (sequenceName.equals(seqElment.getAttributeValue(new javax.xml.namespace.QName(\"name\")))) { return true; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8702/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.utils.APIUtil.java", "BodyUseAPI": ["org.wso2.carbon.registry.core.session.UserRegistry.get(java.lang.String)", "org.wso2.carbon.apimgt.impl.utils.APIUtil.getSequencePath(org.wso2.carbon.apimgt.impl.utils.APIIdentifier,java.lang.String)", "org.wso2.carbon.registry.core.session.UserRegistry.get(java.lang.String)"], "Fixed commit": "93308a4a6c140f08fe1504d173b25849b8d2ecd4", "Url": "https://api.github.com/repos/ChamNDeSilva/carbon-apimgt", "Date": "2016-06-06T11:53:03Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getData()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (data == null) { this.fail(createErrorObject(org.apache.cordova.Capture.CAPTURE_NO_MEDIA_FILES, \"Error: data is null\")); }else { results.put(createMediaFile(data)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4916/buggy-version/framework.src.org.apache.cordova.Capture.java", "BodyUseAPI": ["org.json.JSONArray.put(org.json.JSONObject)", "org.apache.cordova.Capture.createMediaFile(android.net.Uri)"], "Fixed commit": "5c60d201e3f18176d6507d7d78de66c617167037", "Url": "https://api.github.com/repos/ranjay/cordova-android", "Date": "2013-08-22T21:43:11Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMessageFavoritesFragment) != null) { mMessageFavoritesFragment.addFavorite(self); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7639/buggy-version/app.src.main.java.com.kdoherty.zipchat.activities.MessageDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "dfd5fe313b766ebefe43d380e7349456d2fca6ca", "Url": "https://api.github.com/repos/Kdoherty11/Android-ZipChat", "Date": "2015-08-30T21:42:16Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMessageFavoritesFragment) != null) { mMessageFavoritesFragment.removeFavorite(self); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7639/buggy-version/app.src.main.java.com.kdoherty.zipchat.activities.MessageDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "dfd5fe313b766ebefe43d380e7349456d2fca6ca", "Url": "https://api.github.com/repos/Kdoherty11/Android-ZipChat", "Date": "2015-08-30T21:42:16Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spaceMarkers.size()) == 1) { win = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5119/buggy-version/src.com.TTT.BoardEvaluator.java", "BodyUseAPI": [], "Fixed commit": "4777ca7f515b0be3eb6d3e172c7b1a0ed8f228a9", "Url": "https://api.github.com/repos/emashliles/java-tic-tac-toe", "Date": "2017-02-06T10:33:49Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<br.com.adley.myseriesproject.models.TVShowSeasons>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((season.getSeasonName()) != null) || (!(season.getSeasonName().isEmpty()))) { if ((season.getSeasonNumber()) == 0) { season.setSeasonName(mContext.getString(R.string.season_specials)); }else { season.setSeasonName(mContext.getString(R.string.season_title, season.getSeasonNumber())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/345/buggy-version/app.src.main.java.br.com.adley.myseriesproject.adapters.recyclerview.ListSeasonRecyclerViewAdapter.java", "BodyUseAPI": ["br.com.adley.myseriesproject.models.TVShowSeasons.setSeasonName(mContext.getString(R.string.season_title, season.getSeasonNumber()))", "br.com.adley.myseriesproject.models.TVShowSeasons.getSeasonNumber()", "android.content.Context.getString(R.string.season_title,season.getSeasonNumber())", "br.com.adley.myseriesproject.models.TVShowSeasons.getSeasonNumber()", "br.com.adley.myseriesproject.models.TVShowSeasons.setSeasonName(mContext.getString(R.string.season_specials))"], "Fixed commit": "c0d98b5428f349ecf9595be495311707783ddf24", "Url": "https://api.github.com/repos/adleywd/WhatsNextSeries", "Date": "2016-08-18T01:45:08Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.PriorityQueue<java.lang.Integer>.poll()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (u != (startNode)) { pathsFromStartNode.addSPLength(nodeBetweenness.get(u).getDistance()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6545/buggy-version/src.main.java.com.graphhopper.sna.centrality.DijkstraForCentrality.java", "BodyUseAPI": ["nodeBetweenness.get(u).getDistance()", "com.graphhopper.sna.centrality.DijkstraForCentrality.get(int)", "com.graphhopper.sna.data.PathLengthData.addSPLength(nodeBetweenness.get(u).getDistance())"], "Fixed commit": "6d6abc4a02dd2df8d0584a639ee651ee30be997d", "Url": "https://api.github.com/repos/agouge/graphhopper-sna", "Date": "2013-02-06T10:52:42Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent) == null) { java.lang.String collideResidence = com.bekvon.bukkit.residence.Residence.getResidenceManger().checkAreaCollision(area, this); if (collideResidence != null) { player.sendMessage((\"\u00a7cArea collides with residence: \u00a7e\" + collideResidence)); return; } }else { java.lang.String[] subzones = parent.listSubzones(); for (java.lang.String sz : subzones) { com.bekvon.bukkit.residence.protection.ClaimedResidence res = parent.getSubzone(sz); if (res != null) { if (res.checkCollision(area)) { player.sendMessage((\"\u00a7cArea collides with subzone: \u00a7e\" + sz)); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4993/buggy-version/src.com.bekvon.bukkit.residence.protection.ClaimedResidence.java", "BodyUseAPI": [], "Fixed commit": "048831c577b36c1572d5b271c876c039dc56a114", "Url": "https://api.github.com/repos/bekvon/Residence", "Date": "2011-05-15T19:20:44Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["locations[0].getWorld().getBlockAt(int,locations[0].getBlockY(),int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((block.getState()) instanceof org.bukkit.block.Sign)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3381/buggy-version/src.main.java.de.matzefratze123.heavyspleef.core.SignWall.java", "BodyUseAPI": [], "Fixed commit": "4c06d12a785898fbae6a776b65677f26349f4b9a", "Url": "https://api.github.com/repos/matzefratze123/HeavySpleef", "Date": "2013-12-17T21:56:39Z"},
{"Line": "=>567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (course != null) { is.idega.idegaweb.egov.course.data.CourseType type = course.getCourseType(); if ((type != null) && ((type.getAbbreviation()) != null)) { table.setStyleClass((\"abbr_\" + (type.getAbbreviation()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6600/buggy-version/src.java.is.idega.idegaweb.egov.course.presentation.CourseParticipantsList.java", "BodyUseAPI": ["is.idega.idegaweb.egov.course.data.Course.getCourseType()"], "Fixed commit": "f0b3cb8eb46dc21b544d965f1b317f223a365f8c", "Url": "https://api.github.com/repos/idega/is.idega.idegaweb.egov.course", "Date": "2014-04-03T13:54:54Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["assignment.Graph.getVertex(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (userNode != null) { assignment.Entity entity = userNode.getEntity(); if (entity != null) { java.lang.System.out.println((\"Name: \" + (entity.getName()))); java.lang.System.out.println((\"Contact Number: \" + (entity.getContactNumber()))); java.lang.System.out.println((\"Email ID: \" + (entity.getEmailID()))); } }else { java.lang.System.out.println(\"Name does not exist\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7094/buggy-version/OOP-Session-5-Assignment.src.assignment.SocialNetwork.java", "BodyUseAPI": ["assignment.Node.getEntity()"], "Fixed commit": "16302ab933662387c0c499c56ab515ecba06dd59", "Url": "https://api.github.com/repos/meta-vaibhav-zambad/get2016", "Date": "2016-07-28T04:56:03Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (javaParameter.getType().isArray()) { type += \"[]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7939/buggy-version/portal-impl.src.com.liferay.portal.tools.JavadocFormatter.java", "BodyUseAPI": [], "Fixed commit": "7d20690f2727fcfffe3b85d8b487cc90ef94a313", "Url": "https://api.github.com/repos/mikakoivisto/liferay-portal", "Date": "2011-12-07T19:55:57Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ent instanceof fr.miage.atlantis.entities.Shark) { return new fr.miage.atlantis.graphics.AnimationBrain.State(fr.miage.atlantis.graphics.models.SharkModel.ANIMATION_SWIM_CYCLE, 120.0F); }else if (ent instanceof fr.miage.atlantis.entities.Whale) { return new fr.miage.atlantis.graphics.AnimationBrain.State(fr.miage.atlantis.graphics.models.WhaleModel.ANIMATION_SWIM); }else if (ent instanceof fr.miage.atlantis.entities.Boat) { return new fr.miage.atlantis.graphics.AnimationBrain.State(fr.miage.atlantis.graphics.models.BoatModel.ANIMATION_BOAT_ROW, 90.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4126/buggy-version/src.fr.miage.atlantis.graphics.AnimationBrain.java", "BodyUseAPI": [], "Fixed commit": "0ca31f3321d3f08308f0b91ea790f265da390733", "Url": "https://api.github.com/repos/xplodwild/Atlantis", "Date": "2014-03-13T01:31:15Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.getName().endsWith(\".json\")) list.add(littlesmarttool2.util.JSON.readObjectFromFile(((dirname + \"/\") + (file.getName())), clazz));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1786/buggy-version/LittleSmartTool2.src.littlesmarttool2.util.JSON.java", "BodyUseAPI": ["littlesmarttool2.util.JSON.readObjectFromFile(java.lang.String,java.lang.Class<T>)", "java.io.File.getName()", "java.util.List<T>.add(T)"], "Fixed commit": "c9b7e736ee4c30584aab8d3effa937df634dba5e", "Url": "https://api.github.com/repos/LittleSmartThings/LittleSmartTool2", "Date": "2013-06-18T11:32:00Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((((this.targetClass) == null) && ((this.targetCluster) == null)) && ((this.targetClusterName) == null)) { this.targetClass = new com.orientechnologies.orient.core.sql.parser.OIdentifier(\"V\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2683/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.executor.OCreateVertexExecutionPlanner.java", "BodyUseAPI": [], "Fixed commit": "3292cfec50f31c2f47b399aabb0f245c54f52080", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-09-05T15:15:04Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.classTable.getClassBinding(e.id)) != null) this.type = new ast.Ast.Type.ClassType(e.id); else { error(e.lineNum, ((\"cannot find the declaration of class \\\"\" + (e.id)) + \"\\\".\")); this.type = new ast.Ast.Type.T() { @java.lang.Override public java.lang.String toString() { return \"unknown class\"; } }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1087/buggy-version/src.semantic.SemanticVisitor.java", "BodyUseAPI": ["semantic.SemanticVisitor.error(e.lineNum,((\"cannot find the declaration of class \\\"\" + (e.id)) + \"\\\".\"))"], "Fixed commit": "9e820259ec1916d465e80205f35b712aebbfadce", "Url": "https://api.github.com/repos/TaoMengxu/SimpleCompiler", "Date": "2017-01-14T07:48:56Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)", "java.lang.String.toUpperCase(java.util.Locale)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (assign(k, v, (-1), false)) org.basex.util.options.Util.debug(((k + (Text.COLS)) + v));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8761/buggy-version/basex-core.src.main.java.org.basex.util.options.Options.java", "BodyUseAPI": ["org.basex.util.options.Util.debug(((k + (Text.COLS)) + v))"], "Fixed commit": "3e2c3fa8e91f43b1b9bf66efd4d5663a6d14be85", "Url": "https://api.github.com/repos/dimitarp/basex", "Date": "2014-05-21T17:02:35Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((copy.eIsProxy()) && (copy instanceof org.eclipse.emf.ecore.InternalEObject)) { org.eclipse.emf.common.util.URI proxURI = ((org.eclipse.emf.ecore.InternalEObject) (copy)).eProxyURI(); boolean found = false; java.util.Iterator<java.lang.Object> it = ((java.util.List<java.lang.Object>) (target.eGet(targetReference))).iterator(); while ((!found) && (it.hasNext())) { java.lang.Object obj = it.next(); if (obj instanceof org.eclipse.emf.ecore.InternalEObject) { found = proxURI.equals(((org.eclipse.emf.ecore.InternalEObject) (obj)).eProxyURI()); } } if (!found) ((java.util.List<java.lang.Object>) (target.eGet(targetReference))).add(copy); }else { ((java.util.List<java.lang.Object>) (target.eGet(targetReference))).add(copy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4223/buggy-version/plugins.org.eclipse.emf.compare.diff.src.org.eclipse.emf.compare.diff.merge.EMFCompareEObjectCopier.java", "BodyUseAPI": ["((java.util.List<java.lang.Object>) (target.eGet(targetReference))).add(org.eclipse.emf.ecore.EObject)", "((java.util.List<java.lang.Object>) (target.eGet(targetReference))).add(org.eclipse.emf.ecore.EObject)"], "Fixed commit": "eea8619acaf0d6915a4c1c36cd79cc503cd8ec3f", "Url": "https://api.github.com/repos/cbrun/emf.compare", "Date": "2011-06-15T14:59:14Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((warFile) != null) { warFile.getParentFile().mkdirs(); runner.setWarFile(warFile.getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6550/buggy-version/src.main.java.org.ktc.soapui.maven.extension.MockAsWarMojo.java", "BodyUseAPI": [], "Fixed commit": "a9eec2ce993310452d53728491c5b24ec4b4181c", "Url": "https://api.github.com/repos/redfish4ktc/maven-soapui-extension-plugin", "Date": "2014-05-12T22:37:55Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.helger.web.servlet.request.RequestParamMapItem.create(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (aItem != null) aMap.put(sName, aItem);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2389/buggy-version/src.main.java.com.helger.web.servlet.request.RequestParamMap.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.helger.web.servlet.request.RequestParamMapItem>.put(java.lang.String,com.helger.web.servlet.request.RequestParamMapItem)"], "Fixed commit": "74d542d1a654c855db38cbd73e4c221702fdbed3", "Url": "https://api.github.com/repos/phax/ph-web", "Date": "2015-09-14T09:20:21Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (aItem != null) m_aMap.put(aEntry.getKey(), aItem);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2389/buggy-version/src.main.java.com.helger.web.servlet.request.RequestParamMap.java", "BodyUseAPI": [], "Fixed commit": "74d542d1a654c855db38cbd73e4c221702fdbed3", "Url": "https://api.github.com/repos/phax/ph-web", "Date": "2015-09-14T09:20:21Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.helger.web.servlet.request.RequestParamMapItem.create(aEntry.getValue())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (aChildItem != null) ret.m_aChildren.put(((java.lang.String) (aEntry.getKey())), aChildItem);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/2389/buggy-version/src.main.java.com.helger.web.servlet.request.RequestParamMapItem.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.helger.web.servlet.request.RequestParamMapItem>.put(((java.lang.String) (aEntry.getKey())),com.helger.web.servlet.request.RequestParamMapItem)"], "Fixed commit": "74d542d1a654c855db38cbd73e4c221702fdbed3", "Url": "https://api.github.com/repos/phax/ph-web", "Date": "2015-09-14T09:20:21Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7940/buggy-version/dom.src.main.java.domainapp.dom.menu.Menu.java", "BodyUseAPI": [], "Fixed commit": "a8763220a6b5e7544b343c81a92bd455553c1b5d", "Url": "https://api.github.com/repos/incodehq/radrace2015", "Date": "2015-09-25T14:57:44Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!errorHandled) { errorAttributes.put(\"status\", status.value()); errorAttributes.put(\"message\", message); errorAttributes.put(\"timestamp\", java.time.LocalDateTime.now().format(java.time.format.DateTimeFormatter.ISO_LOCAL_DATE_TIME)); errorAttributes.put(\"exception\", ex.getClass().getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/9036/buggy-version/apollo-common.src.main.java.com.ctrip.framework.apollo.common.controller.GlobalDefaultExceptionHandler.java", "BodyUseAPI": [], "Fixed commit": "eaa877cf5c066eaa801069c0c0b8be607c976d21", "Url": "https://api.github.com/repos/nobodyiam/apollo", "Date": "2016-08-15T06:27:02Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (uriStat != null) { uriStat.getProfiletat().record(requestStatsMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5117/buggy-version/src.main.java.com.alibaba.druid.support.http.WebStatFilter.java", "BodyUseAPI": ["uriStat.getProfiletat().record(java.util.Map<com.alibaba.druid.support.profile.ProfileEntryKey, com.alibaba.druid.support.profile.ProfileEntryReqStat>)", "com.alibaba.druid.support.http.stat.WebURIStat.getProfiletat()"], "Fixed commit": "7d0f662e259c1d927d5bac7441429d1bc264f09f", "Url": "https://api.github.com/repos/wenshao/druid", "Date": "2013-05-10T04:14:37Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotEmpty(macroStep.getMountedBoardId())) { com.windhaven_consulting.breezy.manager.viewobject.BreezyBoard breezyBoard = breezyBoardIdToBreezyBoardMap.get(java.util.UUID.fromString(macroStep.getMountedBoardId())); if (!(breezyBoard.isMounted())) { result = true; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4476/buggy-version/BreezyWeb.src.main.java.com.windhaven_consulting.breezy.controller.ui.MacroBuilderView.java", "BodyUseAPI": ["java.util.UUID.fromString(macroStep.getMountedBoardId())", "com.windhaven_consulting.breezy.persistence.domain.MacroStep.getMountedBoardId()", "java.util.Map<java.util.UUID, com.windhaven_consulting.breezy.manager.viewobject.BreezyBoard>.get(java.util.UUID)"], "Fixed commit": "6a6c90c59572f748efd9a7ed17323c245709b48c", "Url": "https://api.github.com/repos/tomtibbetts/Breezy", "Date": "2017-04-03T14:11:09Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getServer().getPluginManager().isPluginEnabled(\"mcMMO\")) { getServer().getPluginManager().registerEvents(new com.github.ucchyocean.lc.bridge.McMMOBridge(), this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/7362/buggy-version/src.main.java.com.github.ucchyocean.lc.LunaChat.java", "BodyUseAPI": [], "Fixed commit": "397f92c825d79186c81ae9d5628ebafeb34178a2", "Url": "https://api.github.com/repos/ucchyocean/LunaChat", "Date": "2016-01-17T22:18:19Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tartarus.snowball.ext.PorterStemmer.getCurrent()", "org.apache.lucene.analysis.standard.StandardTokenizer.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(stemmedToken.equals(unstemmedToken))) { tokens.add(unstemmedToken); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8924/buggy-version/src.com.bittiger.AdsSearch.service.Tokenizer.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "64ba80a9420c7f076402906caab85fa6ee68ac15", "Url": "https://api.github.com/repos/BitTigerInst/AdsSearch", "Date": "2016-08-16T03:45:46Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((list.size()) % (pageItemCount)) == 0) { viewPagerSize = (list.size()) / (pageItemCount); }else { viewPagerSize = ((list.size()) / (pageItemCount)) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5116/buggy-version/app.src.main.java.com.f1reking.classpanel.widget.GridViewGallery.java", "BodyUseAPI": ["java.util.List<com.f1reking.classpanel.entity.ClassEntity>.size()", "java.util.List<com.f1reking.classpanel.entity.ClassEntity>.size()"], "Fixed commit": "b9e7db25b0be50338449f85f34ea9339ea85b3cc", "Url": "https://api.github.com/repos/F1ReKing/ClassPanel", "Date": "2016-02-24T15:23:32Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((customerMap.get(custID)) == null) { common.logger.LoggerClient.log(\"Error in broker servant: Invalid customer id\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8372/buggy-version/src.stockexchange.broker.BrokerServant.java", "BodyUseAPI": [], "Fixed commit": "f7f5601a2eaf18c85e46e62c080051509c0dc2e0", "Url": "https://api.github.com/repos/pcristo/mjc62311", "Date": "2015-07-04T07:15:16Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (maxSum > 0) { return maxSum; }else { return maxItem; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/1848/buggy-version/libs.lib.algorithm.src.main.java.guibin.zhang.leecode.listAndArray.MaximumSubarray.java", "BodyUseAPI": [], "Fixed commit": "e337de36396bb7cd7a0455816846c4c090f46da9", "Url": "https://api.github.com/repos/guibin/Knowledge", "Date": "2013-09-08T18:37:52Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedObject) != null) { wizardPanel.setErrorMessage((((selectedObject.getName()) + \": \") + (s.toString()))); }else { wizardPanel.setErrorMessage(s.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6398/buggy-version/Editor.Editor-Objects.src.org.shaman.rpg.editor.objects.ui.ElementPropertyVisualPanel1.java", "BodyUseAPI": [], "Fixed commit": "cb1dd419134d4a9d9d2e978574391457d7f16a58", "Url": "https://api.github.com/repos/shamanDevel/shaman.rpg", "Date": "2015-06-19T10:55:38Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(supervisors.isEmpty())) { theoryAveragePorts = ((allUsedPorts + (assignedWorkers.size())) / (supervisors.size())) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/965/buggy-version/jstorm-core.src.main.java.com.alibaba.jstorm.schedule.default_assign.WorkerScheduler.java", "BodyUseAPI": ["java.util.List<com.alibaba.jstorm.daemon.supervisor.SupervisorInfo>.size()"], "Fixed commit": "da4c4cd283a66d3a60638d8842f0a287da97251e", "Url": "https://api.github.com/repos/cnkei/jstorm", "Date": "2017-08-10T09:02:28Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (metric == null) { metric = new se.rupy.http.Daemon.Metric(); archive.files().put(query.path(), metric); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/3831/buggy-version/src.se.rupy.http.Event.java", "BodyUseAPI": [], "Fixed commit": "27f4254faf8e1f72c66e4ea0ec2a074d01601d7b", "Url": "https://api.github.com/repos/tinspin/rupy", "Date": "2015-04-05T19:35:31Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rasterSquares.length) == 0) { java.lang.System.out.println(p); return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6783/buggy-version/src.converter.RoomRaster.java", "BodyUseAPI": [], "Fixed commit": "2959a72a2ab267cca76b735e05ce906a2d1cb0ac", "Url": "https://api.github.com/repos/zet-evacuation/zet", "Date": "2009-05-26T13:47:32Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stone.getColor()) == (neighbor.getColor())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/414/buggy-version/app.src.main.java.com.somestupidappproject.betago.utils.BoardUtils.java", "BodyUseAPI": [], "Fixed commit": "ac48ccb243ab92036356d7fa5571928155b3fd8a", "Url": "https://api.github.com/repos/sshwang/BetaGo", "Date": "2017-07-27T00:11:09Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasNoConsumers()) { return Ack.HALT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4361/buggy-version/src.main.java.com.orctom.rmq.Queue.java", "BodyUseAPI": [], "Fixed commit": "17d0f64b6a73c66ab1093930ffaab969418978c9", "Url": "https://api.github.com/repos/orctom/rmq", "Date": "2017-01-05T11:58:22Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(outStack.isEmpty())) { return outStack.peek(); }else { return com.nexus.simplify.UI.view.CommandHistory.EMPTY_STRING; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4880/buggy-version/src.com.nexus.simplify.UI.view.CommandHistory.java", "BodyUseAPI": ["java.util.Stack<java.lang.String>.peek()"], "Fixed commit": "38e3cee3fef201aba35f2ea70e84f28d56c77a1f", "Url": "https://api.github.com/repos/cs2103jan2015-w15-2j/main", "Date": "2015-04-03T08:19:04Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof org.fusesource.hawtbuf.UTF8Buffer) { value = value.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/848/buggy-version/activemq-client.src.main.java.org.apache.activemq.command.ActiveMQMessage.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "a6e306437efafc13cf2c2e9d681d5685fdfbcfce", "Url": "https://api.github.com/repos/apache/activemq", "Date": "2013-11-25T19:48:38Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jenkinsci.plugins.workflow.cps.CpsBodyExecution.addBodyStartFlowNode(org.jenkinsci.plugins.workflow.cps.FlowHead)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(sn.isPersistent())) { sn.persistSafe(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/4954/buggy-version/src.main.java.org.jenkinsci.plugins.workflow.cps.CpsBodyExecution.java", "BodyUseAPI": ["org.jenkinsci.plugins.workflow.cps.nodes.StepStartNode.persistSafe()"], "Fixed commit": "b7d9983c0356efe5afe80e3761eda39c39ca71ea", "Url": "https://api.github.com/repos/svanoort/workflow-cps-plugin", "Date": "2017-08-29T22:56:24Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.red_folder.phonegap.plugin.backgroundservice.BackgroundServicePluginLogic.ACTION_MAKE_CALL.equals(action)) result = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/6101/buggy-version/src.android.BackgroundServicePluginLogic.java", "BodyUseAPI": [], "Fixed commit": "5c517f2383e35a058e4c9f3f05581fd8fd2b6b12", "Url": "https://api.github.com/repos/viable-hartman/bgs-core", "Date": "2016-09-01T07:20:30Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.media.audiofx.NoiseSuppressor.create(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (ns != null) { if (ns.getEnabled()) { android.util.Log.d(nl.sense_os.service.ambience.NoiseSensor.TAG, \"NS is enabled. Trying to disable\"); ns.setEnabled(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8838/buggy-version/sense-android-library.src.nl.sense_os.service.ambience.NoiseSensor.java", "BodyUseAPI": ["android.media.audiofx.NoiseSuppressor.getEnabled()", "android.media.audiofx.NoiseSuppressor.setEnabled(boolean)"], "Fixed commit": "7fb51a3b1fd74d7c750b5b522355a28b53fcbd1a", "Url": "https://api.github.com/repos/senseobservationsystems/sense-android-library", "Date": "2015-02-20T05:02:06Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.media.audiofx.AutomaticGainControl.create(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (agc != null) { if (agc.getEnabled()) { android.util.Log.d(nl.sense_os.service.ambience.NoiseSensor.TAG, \"AGC is enabled. Trying to disable.\"); agc.setEnabled(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/8838/buggy-version/sense-android-library.src.nl.sense_os.service.ambience.NoiseSensor.java", "BodyUseAPI": ["android.media.audiofx.AutomaticGainControl.setEnabled(boolean)", "android.media.audiofx.AutomaticGainControl.getEnabled()"], "Fixed commit": "7fb51a3b1fd74d7c750b5b522355a28b53fcbd1a", "Url": "https://api.github.com/repos/senseobservationsystems/sense-android-library", "Date": "2015-02-20T05:02:06Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.more.util.StringUtils.isNotBlank(renderType)) { logger.info(\"restful -> renderType {} mappingTo {}.\", renderType, renderClass); renderMap.put(renderType.toUpperCase(), renderClass); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V91/5024/buggy-version/src.main.java.net.hasor.restful.invoker.RestfulModule.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "net.hasor.restful.invoker.RestfulModule.info(java.lang.String,java.lang.String,java.lang.String)", "java.lang.String.toUpperCase()"], "Fixed commit": "cff5e68a8bb43dd30cf50ad7406a582d2b242979", "Url": "https://api.github.com/repos/zycgit/hasor", "Date": "2016-07-25T04:15:39Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((httpRequest.getParameter(\"reservation_id\")) == null) || ((httpRequest.getParameter(\"category_id\")) == null)) { chain.doFilter(request, response); }else { org.apache.log4j.Logger logger = org.apache.log4j.Logger.getLogger(ua.fantotsy.filters.CsrfFilter.class.getName()); logger.warn(\"Potential CSRF detected!\"); request.getRequestDispatcher(ua.fantotsy.utils.UrlGetter.getInstance().getUrl(UrlGetter.ERROR_PAGE)).forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3261/buggy-version/Hotel_App.src.ua.fantotsy.filters.CsrfFilter.java", "BodyUseAPI": [], "Fixed commit": "eb211581a84f0393012151790936c6fe9335f345", "Url": "https://api.github.com/repos/fantotsy/Hotel_WebApplication", "Date": "2016-08-16T18:55:24Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["User.find.where().eq(\"username\", username).findUnique()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((session(\"username\")) == (edit_user.username)) { session(\"username\", update_user.username); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5859/buggy-version/app.controllers.admin.Users.java", "BodyUseAPI": [], "Fixed commit": "1e55409db6ace0f9c3045ed7fa51e8f8df4b98c3", "Url": "https://api.github.com/repos/KKPS/exceedvote", "Date": "2012-12-18T01:53:50Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (message == null) { broadcast(((client.getNickname()) + \" has left the chat.\")); for (int i = 0; i < (connectedClients.size()); i++) { if (connectedClients.get(i).getNickname().equals(client.getNickname())) synchronized(connectedClients) { connectedClients.remove(i); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1164/buggy-version/src.Server.ClientHandler.java", "BodyUseAPI": [], "Fixed commit": "ed0ac232288b642938d0fd5834bb9271f4c4bb07", "Url": "https://api.github.com/repos/Peonsson/SimpleGroupChat", "Date": "2015-09-26T21:16:57Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.icodem.asciidoc.parser.peg.MatcherContext.getNextChar()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (c == (fr.icodem.asciidoc.parser.peg.Chars.EOI)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/9173/buggy-version/src.fr.icodem.asciidoc.parser.peg.matchers.AnyMatcher.java", "BodyUseAPI": [], "Fixed commit": "fd80a14be49a201a955079bb0df99f9c642e0a8a", "Url": "https://api.github.com/repos/ohanny/asciidoc-parser-prototype", "Date": "2016-04-18T11:05:10Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((org.minyanmate.minyanmate.models.InvitedMinyanGoer) (goer)).getPhotoThumbnailUri()) != null) badge.setImageURI(android.net.Uri.parse(((org.minyanmate.minyanmate.models.InvitedMinyanGoer) (goer)).getPhotoThumbnailUri())); else badge.setImageURI(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2275/buggy-version/src.org.minyanmate.minyanmate.adapters.ParticipantsExpandableListAdapter.java", "BodyUseAPI": ["android.widget.QuickContactBadge.setImageURI(android.net.Uri.parse(((org.minyanmate.minyanmate.models.InvitedMinyanGoer) (goer)).getPhotoThumbnailUri()))", "org.minyanmate.minyanmate.models.MinyanGoer.getPhotoThumbnailUri()", "android.net.Uri.parse(((org.minyanmate.minyanmate.models.InvitedMinyanGoer) (goer)).getPhotoThumbnailUri())"], "Fixed commit": "e574a77535611f191520a77c24c1337a9da5219a", "Url": "https://api.github.com/repos/Artiavis/MinyanMate", "Date": "2013-12-10T00:01:09Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.telephony.SmsMessage.getDisplayMessageBody()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(response.toLowerCase(java.util.Locale.ENGLISH).equals(org.minyanmate.minyanmate.services.OnSmsReceiver.POSITIVE_RESPONSE))) && (!(response.toLowerCase(java.util.Locale.ENGLISH).equals(org.minyanmate.minyanmate.services.OnSmsReceiver.NEGATIVE_RESPONSE)))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2275/buggy-version/src.org.minyanmate.minyanmate.services.OnSmsReceiver.java", "BodyUseAPI": [], "Fixed commit": "e574a77535611f191520a77c24c1337a9da5219a", "Url": "https://api.github.com/repos/Artiavis/MinyanMate", "Date": "2013-12-10T00:01:09Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((list.getId()) == 0) { listRepo.create(list); }else { listRepo.update(list); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7216/buggy-version/app.src.main.java.net.adamhilton.handylyst.ui.edit.EditPresenter.java", "BodyUseAPI": ["net.adamhilton.handylyst.data.local.ListRepoContract.create(net.adamhilton.handylyst.data.model.List)", "net.adamhilton.handylyst.data.local.ListRepoContract.update(net.adamhilton.handylyst.data.model.List)"], "Fixed commit": "d307c6aafff1da3626528ca06190d94dcac73905", "Url": "https://api.github.com/repos/felsig/HandyLyst", "Date": "2016-10-22T19:29:51Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value.endsWith(\"Z\")) { return value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2467/buggy-version/solrdf.solrdf-core.src.main.java.org.gazzax.labs.solrdf.graph.standalone.FieldInjectorRegistry.java", "BodyUseAPI": [], "Fixed commit": "f23810e76ca6f0ba5ede0fbae921ac2a9a8c3b70", "Url": "https://api.github.com/repos/spaziocodice/SolRDF", "Date": "2015-10-15T16:51:41Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTable.getSelectedRow()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (row > (-1)) { int result = javax.swing.JOptionPane.showConfirmDialog(GUI.frame, \"Are you sure you want to delete this account?\", \"Comfirm Delete\", javax.swing.JOptionPane.OK_CANCEL_OPTION); if (result == (javax.swing.JOptionPane.OK_OPTION)) { GUI.accounts.remove(row); GUI.view_acct.removeAllItems(); for (Account a : GUI.accounts) { GUI.view_acct.addItem(a.getName()); } GUI.initTableAccounts(); IO.updateAccountData(GUI.accounts); }else { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/914/buggy-version/GUI.java", "BodyUseAPI": ["java.util.ArrayList<Account>.remove(int)"], "Fixed commit": "f8e0b396016728dbf2c7b39f6fb0a467313a19f4", "Url": "https://api.github.com/repos/jdang9/financial-project", "Date": "2015-04-03T13:47:16Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (aErrors.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1794/buggy-version/src.main.java.org.lisoft.lsml.view_fx.DefaultLoadoutErrorReporter.java", "BodyUseAPI": [], "Fixed commit": "2a27748226e1d4208c839eea1fb435cf2f6dc63b", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2016-04-03T19:26:05Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (parsedArchive != null) { parsedArchive.getContext().getParsingErrors().add(new alien4cloud.tosca.parser.ParsingError(alien4cloud.tosca.parser.ParsingErrorLevel.WARNING, alien4cloud.tosca.parser.impl.ErrorCode.INVALID_NODE_TEMPLATE_NAME, nodeName, null, nodeName, null, newName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5436/buggy-version/alien4cloud-core.src.main.java.alien4cloud.topology.TopologyUtils.java", "BodyUseAPI": ["parsedArchive.getContext().getParsingErrors().add(alien4cloud.tosca.parser.ParsingError)", "alien4cloud.tosca.parser.ParsingResult<alien4cloud.tosca.model.ArchiveRoot>.getContext()", "parsedArchive.getContext().getParsingErrors()"], "Fixed commit": "22609ecb99d4f302e1290ff3d70bfee0360a6407", "Url": "https://api.github.com/repos/alien4cloud/alien4cloud", "Date": "2016-04-19T16:19:31Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(\"\".equalsIgnoreCase(datas.get(i).getId()))) && ((datas.get(i).getId()) != null)) { getHibernateTemplate().update(data); }else { getHibernateTemplate().save(data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8373/buggy-version/src.java.com.smi.travel.datalayer.dao.impl.DefineVarImpl.java", "BodyUseAPI": [], "Fixed commit": "f9efe643967f1a1cfc0e45022bab1a74f9f6ef64", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-11-10T05:15:32Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((o2.getObject()) != null) && ((o2.getObject().getHeight()) == 1)) { o2y--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5563/buggy-version/CLIENT.src.data_handlers.MapHandler.java", "BodyUseAPI": [], "Fixed commit": "7a63258a1b742647c7c77cc83cbeffd039b88d72", "Url": "https://api.github.com/repos/skullb0x/bluesaga", "Date": "2016-08-10T02:14:12Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((o1.getObject()) != null) && ((o1.getObject().getHeight()) == 1)) { o1y--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5563/buggy-version/CLIENT.src.data_handlers.MapHandler.java", "BodyUseAPI": [], "Fixed commit": "7a63258a1b742647c7c77cc83cbeffd039b88d72", "Url": "https://api.github.com/repos/skullb0x/bluesaga", "Date": "2016-08-10T02:14:12Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((env.getEnv(com.laytonsmith.core.environments.CommandHelperEnvironment.class).GetCommandSender()) == null) { return new com.laytonsmith.core.functions.Meta.run().exec(t, env, args); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1045/buggy-version/src.main.java.com.laytonsmith.core.functions.Meta.java", "BodyUseAPI": ["com.laytonsmith.core.functions.Meta.run.exec(com.laytonsmith.core.functions.Target,com.laytonsmith.core.environments.Environment,com.laytonsmith.core.functions.Construct[])"], "Fixed commit": "186939946115542f634731d82875659c1fdc209b", "Url": "https://api.github.com/repos/sk89q/commandhelper", "Date": "2013-05-07T17:24:20Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (super.analyze(tokenQueue, symbolList)) { com.linkinpark213.compiler.analyzer.syntactic.v.vt.Keyword keyword = ((com.linkinpark213.compiler.analyzer.syntactic.v.vt.Keyword) (children.get(0))); com.linkinpark213.compiler.analyzer.syntactic.v.vt.Identifier identifier = ((com.linkinpark213.compiler.analyzer.syntactic.v.vt.Identifier) (children.get(1))); this.name = identifier.getName(); this.type = com.linkinpark213.compiler.analyzer.semantic.Symbol.typeStringToCode(keyword.getValue()); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/614/buggy-version/src.com.linkinpark213.compiler.analyzer.syntactic.v.vn.ParameterDefinition.java", "BodyUseAPI": [], "Fixed commit": "9369c04454641e42d9bee4d6307930b58c177a9e", "Url": "https://api.github.com/repos/linkinpark213/coq-compiler", "Date": "2017-07-21T05:44:05Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fullScreenRenderer) { fullScreenRenderer = false; panObjects.remove(panRenderer); panObjects.add(scpRenderer, java.awt.BorderLayout.CENTER); scpRenderer.setViewportView(panRenderer); panRenderer.setLayout(new java.awt.GridBagLayout()); if ((panRenderer.getComponentCount()) == 1) { final java.awt.Component firstRenderer = panRenderer.getComponent(0); panRenderer.remove(firstRenderer); panRenderer.add(firstRenderer, gridBagConstraints); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1388/buggy-version/src.main.java.Sirius.navigator.ui.DescriptionPane.java", "BodyUseAPI": [], "Fixed commit": "8cf3aafeffd78edfd476332bddd3db8e49f5456b", "Url": "https://api.github.com/repos/cismet/cids-navigator", "Date": "2013-11-12T17:31:04Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(sttFile.exists())) || (!(sttFile.isFile()))) { try { sttFile.createNewFile(); } catch (java.io.IOException e) { throw new java.lang.RuntimeException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/933/buggy-version/src.main.java.org.stt.persistence.db.h2.H2Configuration.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "fdb0e64246fdc4067c0a3980c3f5b848807e4d5e", "Url": "https://api.github.com/repos/Blizzard26/StandaloneClient", "Date": "2016-12-26T19:20:28Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(stats.containsKey(stat))) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3238/buggy-version/src.main.java.StatLine.java", "BodyUseAPI": [], "Fixed commit": "66ec77e6d36fd262c40505efb6674a8b8cddef25", "Url": "https://api.github.com/repos/dchengy/nbasim", "Date": "2015-01-07T23:03:00Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(collectionDescription.name.equalsIgnoreCase(collection.description.name))) { updatedCollection = collection.rename(collection.description, collectionDescription.name, zebedee); }else { updatedCollection.description.name = collectionDescription.name; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3396/buggy-version/zebedee-cms.src.main.java.com.github.onsdigital.zebedee.model.Collection.java", "BodyUseAPI": ["com.github.onsdigital.zebedee.model.Collection.rename(com.github.onsdigital.zebedee.model.CollectionDescription,collectionDescription.name,com.github.onsdigital.zebedee.Zebedee)"], "Fixed commit": "618decb2fd0584884ba354e561a1a7f34e882aa9", "Url": "https://api.github.com/repos/ONSdigital/zebedee", "Date": "2016-06-13T09:37:44Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isChecked) { toDoItem.setStatus(Status.DONE); }else { toDoItem.setStatus(Status.NOTDONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5755/buggy-version/week4-UILab.UILabs.src.course.labs.todomanager.ToDoListAdapter.java", "BodyUseAPI": [], "Fixed commit": "62c9247ffbe54f6c6521c034edbd8b36bba4c7a3", "Url": "https://api.github.com/repos/charlires/coursera-android", "Date": "2014-02-19T16:11:42Z"},
{"Line": "=>566", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.babraham.SeqMonk.Pipelines.Transcription.RNASeqPipeline.RNASeqOptionsPanel.pairedEnd()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pairedEnd) { value /= (data[d].getTotalReadCount()) / 2000000.0F; }else { value /= (data[d].getTotalReadCount()) / 1000000.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7171/buggy-version/uk.ac.babraham.SeqMonk.Pipelines.Transcription.RNASeqPipeline.java", "BodyUseAPI": [], "Fixed commit": "795f659d7b4fd58520fb6bdc31070a1f76f7c84d", "Url": "https://api.github.com/repos/s-andrews/SeqMonk", "Date": "2017-03-17T15:23:27Z"},
{"Line": "=>558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.babraham.SeqMonk.Pipelines.Transcription.RNASeqPipeline.RNASeqOptionsPanel.pairedEnd()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pairedEnd) { value /= (correctedTotalCounts[d]) / 2000000.0F; }else { value /= (correctedTotalCounts[d]) / 1000000.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7171/buggy-version/uk.ac.babraham.SeqMonk.Pipelines.Transcription.RNASeqPipeline.java", "BodyUseAPI": [], "Fixed commit": "795f659d7b4fd58520fb6bdc31070a1f76f7c84d", "Url": "https://api.github.com/repos/s-andrews/SeqMonk", "Date": "2017-03-17T15:23:27Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getenv(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ip == null) { ip = \"127.9.96.129\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4488/buggy-version/src.main.java.com.cabshare.server.main.Initializer.java", "BodyUseAPI": [], "Fixed commit": "f3b92aef7d1717cdbabcc7974aaf505b4d56287c", "Url": "https://api.github.com/repos/Priyeshmshr/Cabshare", "Date": "2015-12-19T16:55:54Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getenv(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ports == null) { ports = \"8080\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4488/buggy-version/src.main.java.com.cabshare.server.main.Initializer.java", "BodyUseAPI": [], "Fixed commit": "f3b92aef7d1717cdbabcc7974aaf505b4d56287c", "Url": "https://api.github.com/repos/Priyeshmshr/Cabshare", "Date": "2015-12-19T16:55:54Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((net.somethingdreadful.MAL.api.ALApi.accesToken) == null) && ((net.somethingdreadful.MAL.account.AccountService.getAccount()) != null)) net.somethingdreadful.MAL.api.ALApi.accesToken = net.somethingdreadful.MAL.account.AccountService.getAccesToken();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2194/buggy-version/Atarashii.src.net.somethingdreadful.MAL.api.ALApi.java", "BodyUseAPI": [], "Fixed commit": "07d1e7d5574ef81893b98d2be73708739f276633", "Url": "https://api.github.com/repos/AnimeNeko/Atarashii", "Date": "2016-04-24T15:35:19Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (deploymentForm.isInstalled()) { deploymentForm.setInstalled(true); deploymentForm.setCanBeDeployed(false); }else { deploymentForm.setInstalled(false); deploymentForm.setCanBeDeployed(deploymentForm.isServerAcceptable()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5285/buggy-version/quick-start.src.main.java.com.marklogic.hub.web.controller.MainPageController.java", "BodyUseAPI": ["com.marklogic.hub.web.form.DeploymentForm.setInstalled(boolean)", "com.marklogic.hub.web.form.DeploymentForm.isServerAcceptable()", "com.marklogic.hub.web.form.DeploymentForm.setInstalled(boolean)", "com.marklogic.hub.web.form.DeploymentForm.setCanBeDeployed(deploymentForm.isServerAcceptable())", "com.marklogic.hub.web.form.DeploymentForm.setCanBeDeployed(boolean)"], "Fixed commit": "c82645972cc2f593c3b7b2bc9a09c9b528cbaaef", "Url": "https://api.github.com/repos/marklogic/marklogic-data-hub", "Date": "2016-02-01T07:19:07Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (false && (binIdx2 == (maxBinCnt - 1))) { water.util.Log.info((((((((((((((((\"\\nQ_ FP! val went into the extra maxBinCnt bin:\" + binIdx2) + \" \") + (hcnt2_high_min)) + \" \") + valOffset) + \" \") + val) + \" \") + (_valStart)) + \" \") + (hcnt2_high)) + \" \") + val) + \" \") + (_valEnd)), \"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/302/buggy-version/src.main.java.hex.Quantiles.java", "BodyUseAPI": ["water.util.Log.info(java.lang.String,java.lang.String)"], "Fixed commit": "2dcee927c9d9600944420dd145dfe46944261d0d", "Url": "https://api.github.com/repos/0xdata/h2o", "Date": "2014-03-09T23:17:33Z"},
{"Line": "=>481", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((k > 0) && ((hcnt2[(k - 1)]) > 0)) && ((hcnt2_min[(k - 1)]) < (hcnt2_min[k]))) { newValStart = hcnt2_min[(k - 1)]; }else { newValStart = hcnt2_min[k]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/302/buggy-version/src.main.java.hex.Quantiles.java", "BodyUseAPI": [], "Fixed commit": "2dcee927c9d9600944420dd145dfe46944261d0d", "Url": "https://api.github.com/repos/0xdata/h2o", "Date": "2014-03-09T23:17:33Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((k < maxBinCnt) && ((hcnt2[(k + 1)]) > 0)) && ((hcnt2_max[(k + 1)]) > (hcnt2_max[k]))) { newValEnd = hcnt2_max[(k + 1)]; }else { newValEnd = hcnt2_max[k]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/302/buggy-version/src.main.java.hex.Quantiles.java", "BodyUseAPI": [], "Fixed commit": "2dcee927c9d9600944420dd145dfe46944261d0d", "Url": "https://api.github.com/repos/0xdata/h2o", "Date": "2014-03-09T23:17:33Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (s1.equalsIgnoreCase(RuleType.Loadshared.getType())) { ruleType = org.mobicents.protocols.ss7.sccp.RuleType.Loadshared; }else if (s1.equals(\"broadcast\")) { ruleType = org.mobicents.protocols.ss7.sccp.RuleType.Broadcast; }else { return SccpOAMMessage.INVALID_COMMAND; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7141/buggy-version/sccp.sccp-impl.src.main.java.org.mobicents.protocols.ss7.sccp.impl.oam.SccpExecutor.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "9e7cc60c1ec92d61fda03eda2ae077153ecbed29", "Url": "https://api.github.com/repos/Mobicents/jss7", "Date": "2013-05-06T10:09:47Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (s1.equals(\"loadshared\")) { ruleType = org.mobicents.protocols.ss7.sccp.RuleType.Loadshared; }else if (s1.equals(\"broadcast\")) { ruleType = org.mobicents.protocols.ss7.sccp.RuleType.Broadcast; }else { return SccpOAMMessage.INVALID_COMMAND; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7141/buggy-version/sccp.sccp-impl.src.main.java.org.mobicents.protocols.ss7.sccp.impl.oam.SccpExecutor.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "9e7cc60c1ec92d61fda03eda2ae077153ecbed29", "Url": "https://api.github.com/repos/Mobicents/jss7", "Date": "2013-05-06T10:09:47Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pjp.getSignature().getName().equals(\"createSubspace\")) { if (subspaceProvider.exists(subspaceId)) { throw new com.sun.servicetag.UnauthorizedAccessException(((\"Subspace \" + subspaceId) + \" does already exist.\")); } }else { if (!(subspaceProvider.exists(subspaceId))) { throw new de.zib.gndms.model.common.NoSuchResourceException((\"Subspace: \" + subspaceId)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/579/buggy-version/dspace.src.de.zib.gndms.dspace.service.utils.DSpaceAspects.java", "BodyUseAPI": [], "Fixed commit": "cf1a2d1e0e1395d0abb47cf1432b10014d29d73f", "Url": "https://api.github.com/repos/zibhub/GNDMS", "Date": "2012-04-11T10:54:59Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((ts.transmisson.longValue()) < (us.dot.its.jpo.ode.plugin.j2735.oss.OssTransmissionAndSpeed.TRANSMISSION_LOWER_BOUND)) || ((ts.transmisson.longValue()) > (us.dot.its.jpo.ode.plugin.j2735.oss.OssTransmissionAndSpeed.TRANSMISSION_UPPER_BOUND))) { throw new java.lang.IllegalArgumentException(\"Transmission value out of bounds [0..7]\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5913/buggy-version/jpo-ode-plugins.src.main.java.us.dot.its.jpo.ode.plugin.j2735.oss.OssTransmissionAndSpeed.java", "BodyUseAPI": [], "Fixed commit": "209cc1d5f13aa9dfa2d4892df5ee0ca8e6fba4cd", "Url": "https://api.github.com/repos/usdot-jpo-ode/jpo-ode", "Date": "2016-12-20T19:20:45Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lothrazar.cyclicmagic.block.tileentity.TileEntityBaseMachineInvo.getStackInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (this.isItemFuel(itemstack)) { this.currentFuel = (com.lothrazar.cyclicmagic.block.tileentity.TileEntityBaseMachineInvo.FUEL_FACTOR) * (net.minecraft.tileentity.TileEntityFurnace.getItemBurnTime(itemstack)); this.currentMaxFuel = this.currentFuel; if (((itemstack.getItem()) instanceof net.minecraft.item.ItemBucket) && ((itemstack.getCount()) == 1)) { this.setInventorySlotContents(this.fuelSlot, new net.minecraft.item.ItemStack(net.minecraft.init.Items.BUCKET)); }else { itemstack.shrink(1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2971/buggy-version/src.main.java.com.lothrazar.cyclicmagic.block.tileentity.TileEntityBaseMachineInvo.java", "BodyUseAPI": ["net.minecraft.tileentity.TileEntityFurnace.getItemBurnTime(net.minecraft.item.ItemStack)", "net.minecraft.item.ItemStack.getItem()", "net.minecraft.item.ItemStack.getCount()", "net.minecraft.item.ItemStack.shrink(int)"], "Fixed commit": "1e2d77b9704e337eac4fdf555157a02db822b100", "Url": "https://api.github.com/repos/PrinceOfAmber/Cyclic", "Date": "2017-06-01T01:14:34Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.pictures.remove(currentPicture))) { throw new java.lang.Exception((\"Unable to remove \" + (currentPicture.getRepositoryFilePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2350/buggy-version/src.com.twillekes.userInteraction.EditProperties.java", "BodyUseAPI": ["com.twillekes.portfolio.Picture.getRepositoryFilePath()"], "Fixed commit": "20e3b0eba114b9bdb068ed22b36f0122de897e06", "Url": "https://api.github.com/repos/twillekes/PageMaker", "Date": "2012-06-03T15:13:07Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ca.uqac.lif.parkbench.plot.Table.isNumeric(x)) out.append(x); else { out.append(((\"\\\"\" + x) + \"\\\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8158/buggy-version/Source.Core.src.ca.uqac.lif.parkbench.plot.Table.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "59b6099324544510feac1d6bbc691611fbfe0baf", "Url": "https://api.github.com/repos/liflab/labpal", "Date": "2016-05-11T16:01:19Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (key.contains(\"U_DC\")) { value = value / 10.0F; }else if (key.contains(\"I_DC\")) { value = value / 100.0F; }else if (key.contains(\"P_\")) { value = value / 2.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8017/buggy-version/src.ch.solarlogger.SolarMaxReader.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "1a28a2bcf8e05ec6ba832d541f47a29a6b45d2a4", "Url": "https://api.github.com/repos/the-s-a-m/SolarLogger.Reader", "Date": "2017-07-23T09:49:50Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((n.parent) != null) while ((n.parent.parent) != null) n = n.parent;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6621/buggy-version/src.core.Algorithms.RTAStar.RealTimeAStar.java", "BodyUseAPI": [], "Fixed commit": "2c2b68d4ef5a5878b6653e67b830b975504c0e35", "Url": "https://api.github.com/repos/probject22/SneakyThief4", "Date": "2015-06-10T14:22:38Z"},
{"Line": "=>1081", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (true) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4905/buggy-version/src.main.java.org.bukkit.craftbukkit.CraftServer.java", "BodyUseAPI": [], "Fixed commit": "c4102405677265a3369ea42b20c9061b858e4f59", "Url": "https://api.github.com/repos/copypastel/spigot-craftbukkit", "Date": "2017-05-15T20:58:37Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loadCodec == storeCodec) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5444/buggy-version/src.alterrs.deob.trans.euclid.EuclideanDeobfuscation.java", "BodyUseAPI": [], "Fixed commit": "671f5a0aa1c8c5d98d64cb42869771368aa34c50", "Url": "https://api.github.com/repos/AlterRS/Deobfuscator", "Date": "2012-12-21T23:16:13Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((notification.getType()) == (com.pratilipi.common.type.NotificationType.AUTHOR_FOLLOW)) { notificationData.setMessage(com.pratilipi.data.util.NotificationDataUtil.createNotificationMessage(notification.getDataIds(), users, notificationLanguage, plainText)); notificationData.setSourceUrl((((\"/followers?\" + (RequestParameter.NOTIFICATION_ID.getName())) + \"=\") + (notification.getId()))); if ((notification.getDataIds().size()) != 0) notificationData.setDisplayImageUrl(users.get(notification.getDataIds().get(0)).getProfileImageUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1427/buggy-version/src.main.java.com.pratilipi.data.util.NotificationDataUtil.java", "BodyUseAPI": ["users.get(notification.getDataIds().get(0)).getProfileImageUrl()", "com.pratilipi.data.type.Notification.getDataIds()", "com.pratilipi.data.type.Notification.getDataIds()", "com.pratilipi.data.type.Notification.getDataIds()", "java.util.Map<java.lang.Long, com.pratilipi.data.client.UserData>.get(notification.getDataIds().get(0))", "com.pratilipi.data.type.Notification.getId()", "com.pratilipi.data.client.NotificationData.setDisplayImageUrl(users.get(notification.getDataIds().get(0)).getProfileImageUrl())", "com.pratilipi.data.client.NotificationData.setMessage(java.lang.String)", "com.pratilipi.data.util.NotificationDataUtil.createNotificationMessage(notification.getDataIds(),java.util.Map<java.lang.Long, com.pratilipi.data.client.UserData>,com.pratilipi.common.type.Language,boolean)", "notification.getDataIds().get(int)", "com.pratilipi.data.client.NotificationData.setSourceUrl((((\"/followers?\" + (RequestParameter.NOTIFICATION_ID.getName())) + \"=\") + (notification.getId())))", "notification.getDataIds().size()"], "Fixed commit": "78bf35a658f02c13fb2198b4c88b048bbf27c8d3", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-08-30T11:12:13Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.thoughtworks.mindit.mindit.model.Tree.getRoot()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((rootNode.getLeft().size()) != 0) leftFirstNode = nodeTree.get(rootNode.getLeft().get(0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6233/buggy-version/app.src.main.java.com.thoughtworks.mindit.mindit.presenter.Presenter.java", "BodyUseAPI": ["rootNode.getLeft().get(int)", "com.thoughtworks.mindit.mindit.model.Node.getLeft()", "java.util.HashMap<java.lang.String, com.thoughtworks.mindit.mindit.view.model.UINode>.get(rootNode.getLeft().get(0))"], "Fixed commit": "8cca9779eaab258605f98b9ee3ab157d13456c74", "Url": "https://api.github.com/repos/Allminds/mind-it-android", "Date": "2016-02-10T09:00:19Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Long, org.gearvrf.GVRComponent>.remove(long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (component != null) { component.setOwnerObject(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5826/buggy-version/GVRf.Framework.framework.src.main.java.org.gearvrf.GVRSceneObject.java", "BodyUseAPI": ["org.gearvrf.GVRComponent.setOwnerObject(<nulltype>)"], "Fixed commit": "95fbb27d38d3cbf147bd40a4072183da8f092326", "Url": "https://api.github.com/repos/parthmehta209/GearVRf", "Date": "2016-06-21T00:26:11Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.gzinga.InputStreamConverter.getMetadata()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (metadata.isEmpty()) { try { inputStreamConverter.storeMetadata(); } catch (java.lang.Exception e) { e.printStackTrace(); } metadata = inputStreamConverter.getMetadata(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1337/buggy-version/core.src.main.java.io.gzinga.GZipInputStreamRandomAccess.java", "BodyUseAPI": [], "Fixed commit": "16a941b0f17f5b17fd2af2e3c7c928a4e4965645", "Url": "https://api.github.com/repos/brahul/GZinga", "Date": "2017-05-18T22:43:48Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.rx.errorprone.SubscribeOnErrorMissingCheck.ON_SUBSCRIBE.matches(tree, state)) { if ((tree.getArguments().size()) > 1) { return com.google.errorprone.matchers.Description.NO_MATCH; }else if ((tree.getArguments().size()) == 0) { return describeMatch(tree); }else { com.sun.tools.javac.code.Type argType = com.google.errorprone.util.ASTHelpers.getType(tree.getArguments().get(0)); com.sun.tools.javac.code.Type consumerType = java.util.Objects.requireNonNull(state.getTypeFromString(io.reactivex.functions.Consumer.class.getName())); com.sun.tools.javac.code.Type actionType = java.util.Objects.requireNonNull(state.getTypeFromString(io.reactivex.functions.Action.class.getName())); if ((com.google.errorprone.util.ASTHelpers.isSubtype(argType, consumerType, state)) || (com.google.errorprone.util.ASTHelpers.isSubtype(argType, actionType, state))) { return describeMatch(tree); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6817/buggy-version/rxbase.src.main.java.com.rx.errorprone.SubscribeOnErrorMissingCheck.java", "BodyUseAPI": ["com.sun.source.tree.MethodInvocationTree.getArguments()", "com.sun.source.tree.MethodInvocationTree.getArguments()", "com.rx.errorprone.SubscribeOnErrorMissingCheck.describeMatch(com.sun.source.tree.MethodInvocationTree)", "com.sun.source.tree.MethodInvocationTree.getArguments()", "com.rx.errorprone.SubscribeOnErrorMissingCheck.describeMatch(com.sun.source.tree.MethodInvocationTree)", "java.util.List<? extends com.sun.source.tree.ExpressionTree>.size()", "com.google.errorprone.util.ASTHelpers.isSubtype(com.sun.tools.javac.code.Type,com.sun.tools.javac.code.Type,com.google.errorprone.VisitorState)", "com.google.errorprone.util.ASTHelpers.isSubtype(com.sun.tools.javac.code.Type,com.sun.tools.javac.code.Type,com.google.errorprone.VisitorState)", "java.util.List<? extends com.sun.source.tree.ExpressionTree>.get(int)", "com.google.errorprone.VisitorState.getTypeFromString(java.lang.String)", "java.util.Objects.requireNonNull(state.getTypeFromString(io.reactivex.functions.Action.class.getName()))", "java.util.List<? extends com.sun.source.tree.ExpressionTree>.size()", "com.google.errorprone.VisitorState.getTypeFromString(java.lang.String)", "com.google.errorprone.util.ASTHelpers.getType(? extends com.sun.source.tree.ExpressionTree)", "java.util.Objects.requireNonNull(state.getTypeFromString(io.reactivex.functions.Consumer.class.getName()))"], "Fixed commit": "eeef491adce20728ab90467e2d4d11d6fa65287c", "Url": "https://api.github.com/repos/bangarharshit/Rx-Error-Prone", "Date": "2017-12-17T15:43:31Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (retListPredLookUp != null) { for (java.lang.String dao : retListPredLookUp) { preds.add(dao); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2955/buggy-version/EntityLinker.src.com.uni.mannheim.dws.mapper.logic.FactSuggestion.java", "BodyUseAPI": [], "Fixed commit": "3b82c5a2f340c5cf2917c88d0b90149b609b25a2", "Url": "https://api.github.com/repos/kraktos/DBPediaMapping", "Date": "2013-02-28T15:09:56Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((handler) != null) { this.context.unregisterListener(listener); handler.stopDebugging(); server.stopService(); handler = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/104/buggy-version/mule-debugger-runtime.src.main.java.org.mule.debugger.MuleDebuggerConnector.java", "BodyUseAPI": [], "Fixed commit": "1aa4b710788596399b0c523f0fdc76334162194c", "Url": "https://api.github.com/repos/machaval/mule-remote-debugger", "Date": "2012-05-10T01:25:35Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((symbolTable.get(iCode.getLabel()).getData()) instanceof FunctionData) { tCode.add(((((((iCode.getLabel()) + \" \") + (iCode.getArg1())) + \" \") + \"\\'0\\'\") + (iCode.getComment()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4303/buggy-version/4490.src.TCode.java", "BodyUseAPI": ["ICode.getComment()", "ICode.getArg1()", "java.util.List<java.lang.String>.add(((((((iCode.getLabel()) + \" \") + (iCode.getArg1())) + \" \") + \"\\'0\\'\") + (iCode.getComment())))", "ICode.getLabel()"], "Fixed commit": "a5b6f1e4513de789c6537841d250a447a4049464", "Url": "https://api.github.com/repos/nickFr0st/Compiler", "Date": "2013-04-17T01:36:09Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerJoinEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (p.isOp()) { p.sendMessage(\"\u00a76[\u00a7c\u7b7e\u5230\u00a76]\u00a7c\u8bf7\u5173\u6ce8\u63d2\u4ef6\u6700\u65b0\u7248\u672c\u00a7e http://www.hhxcmc.com:8080/job/Signin-Release/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5952/buggy-version/src.com.chenhao220.Signin.LoginListener.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(java.lang.String)"], "Fixed commit": "779879adb6732bc2bff297b981a1dee4a4db6670", "Url": "https://api.github.com/repos/HuppyRedTeam/Signin-Release", "Date": "2016-01-09T04:58:57Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gtna.id.lookahead.LookaheadLists.getList(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((list.getList().length) == 0) { return new gtna.routing.RouteImpl(route, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7725/buggy-version/src.gtna.routing.lookahead.Lookahead.java", "BodyUseAPI": [], "Fixed commit": "f8bf1faab9b2e98df04aff3fb49ba3b448cebb06", "Url": "https://api.github.com/repos/BenjaminSchiller/GTNA", "Date": "2011-09-22T19:30:30Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userInfo.length) != 2) { common.Display.setFeedBack(\"Invalid Input Format\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/626/buggy-version/PinkPanther.src.parser.QueryParser.java", "BodyUseAPI": [], "Fixed commit": "4fce703702d41b8665244c359e908c581d88167b", "Url": "https://api.github.com/repos/cs2103aug2015-t10-1j/PinkPanther-To-do-List", "Date": "2015-10-18T09:11:11Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (username.equals(invitedUser)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4424/buggy-version/app.src.main.java.com.restfind.restaurantfinder.Database.java", "BodyUseAPI": [], "Fixed commit": "ed4371871426ac13c26e6583ced57c32331f390a", "Url": "https://api.github.com/repos/Melkizedek/RestaurantFinder", "Date": "2015-12-15T15:40:34Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playerTurn) { if ((playerCardValue) > 21) { if ((playerAceCount) > 0) handlePlayerAces(); else { playerBust = true; playerTurn = false; } }else if ((playerCardValue) == 21) { playerBlackJack = true; playerTurn = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3962/buggy-version/app.src.main.java.edu.apsu.csci.blackjack3devs.BlackJackActivity.java", "BodyUseAPI": [], "Fixed commit": "aeba9587d327a83df3b00b513e40dee6cbea56c8", "Url": "https://api.github.com/repos/dchoi3/BlackJack2.0", "Date": "2017-02-07T18:41:42Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v7.widget.RecyclerView.getItemAnimator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (notificationsItemAnimator instanceof android.support.v7.widget.SimpleItemAnimator) { ((android.support.v7.widget.SimpleItemAnimator) (notificationsItemAnimator)).setSupportsChangeAnimations(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/333/buggy-version/app.src.main.java.org.stepic.droid.ui.fragments.NotificationListFragment.java", "BodyUseAPI": [], "Fixed commit": "eb5d5f180cb9f0fe6595cc7ce94eac266c264269", "Url": "https://api.github.com/repos/StepicOrg/stepik-android", "Date": "2017-12-22T15:32:27Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (cameraPos != null) options.camera(com.google.android.gms.maps.model.CameraPosition.fromLatLngZoom(cameraPos, 15));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7699/buggy-version/src.android.GeofenceMap.java", "BodyUseAPI": ["com.google.android.gms.maps.GoogleMapOptions.camera(com.google.android.gms.maps.model.CameraPosition.fromLatLngZoom(cameraPos, 15))", "com.google.android.gms.maps.model.CameraPosition.fromLatLngZoom(com.google.android.gms.maps.model.LatLng,int)"], "Fixed commit": "04cc2575aed5f1ac000e03e163d2e0dbd2d9a545", "Url": "https://api.github.com/repos/lcoling/cordova-plugin-geofence-map", "Date": "2015-08-12T00:45:20Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((cameraPos == null) && (currentLocation != null)) { cameraPos = new com.google.android.gms.maps.model.LatLng(currentLocation.getLatitude(), currentLocation.getLongitude()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7699/buggy-version/src.android.GeofenceMap.java", "BodyUseAPI": ["android.location.Location.getLongitude()", "android.location.Location.getLatitude()"], "Fixed commit": "04cc2575aed5f1ac000e03e163d2e0dbd2d9a545", "Url": "https://api.github.com/repos/lcoling/cordova-plugin-geofence-map", "Date": "2015-08-12T00:45:20Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status) { mLightManager.LocalIASCIEUnByPassZone(mDevices, (-1)); }else { mLightManager.LocalIASCIEByPassZone(mDevices, (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/669/buggy-version/SmartHome.src.com.gdgl.activity.LockFragment.java", "BodyUseAPI": [], "Fixed commit": "5f9b628b96f723107a10fa2108d684395383fe22", "Url": "https://api.github.com/repos/justek-Wade/SmartHome", "Date": "2014-05-17T13:08:41Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (numberCount > 0) { int[] numberArray = new int[numberCount]; java.util.ArrayList<java.lang.Integer> resultArray = new java.util.ArrayList<java.lang.Integer>(); java.lang.System.out.println(\"Input integer numbers:\"); for (int i = 0; i < numberCount; i++) { numberArray[i] = sc.nextInt(); if ((numberArray[i]) == 0) { resultArray.add(i); } } java.lang.System.out.println((((\"Input array : \" + (java.util.Arrays.toString(numberArray))) + \"\\nOutput array : \") + resultArray)); java.lang.System.out.println(\"Want to stop? Say yes: \"); java.lang.String decisionInput = sc.next(); if ((decisionInput.toLowerCase().equals(\"yes\")) == true) { decision = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5280/buggy-version/Homework.Task3.Task3.java", "BodyUseAPI": [], "Fixed commit": "a674a54efc135865d5fee008506c23733a7e1f48", "Url": "https://api.github.com/repos/HalynaMelishkevich/QaLightHomework", "Date": "2017-02-08T22:24:38Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.aindaNaoFoiAdicionadoEssePacote(transacao)) { this.transacoes.add(transacao); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7253/buggy-version/src.main.Intermediaria.java", "BodyUseAPI": ["java.util.ArrayList<util.Transacao>.add(util.Transacao)"], "Fixed commit": "a74e4ba1829f6e85a8a1610ae80b3a762850863f", "Url": "https://api.github.com/repos/jmoreirafilho/LeitorTransacaoRedes", "Date": "2017-11-24T01:01:51Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(method.getName().equals(\"<init>\"))) { vm.add(method.getReference(), generator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5205/buggy-version/teavm-platform.src.main.java.org.teavm.platform.plugin.ResourceAccessorTransformer.java", "BodyUseAPI": ["org.teavm.vm.spi.TeaVMHost.add(method.getReference(),org.teavm.platform.plugin.ResourceAccessorGenerator)", "org.teavm.platform.plugin.MethodHolder.getReference()"], "Fixed commit": "69857af68854bce1ea0e9dd4d583fdbfc7ccdf8e", "Url": "https://api.github.com/repos/konsoletyper/teavm", "Date": "2015-02-20T12:55:35Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["deploymentInfo.getServlets().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (servlet == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3434/buggy-version/servlet.src.main.java.io.undertow.servlet.spec.ServletContextImpl.java", "BodyUseAPI": [], "Fixed commit": "aeea5b9dff3029446a6bc701982eb4b7975b3b11", "Url": "https://api.github.com/repos/undertow-io/undertow", "Date": "2013-05-28T02:34:44Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(event.getMessage().getMentions().isEmpty())) { if (event.getMessage().getMentions().get(0).equals(event.getChannel().getClient().getOurUser())) { if (event.getMessage().getContent().contains(\"prefix\")) { se.monstermannen.discordmonsterbot.util.MonsterMessage.sendMessage(event.getChannel(), DiscordMonsterBot.PREFIX); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1012/buggy-version/src.main.java.se.monstermannen.discordmonsterbot.Events.java", "BodyUseAPI": ["sx.blah.discord.handle.impl.events.guild.channel.message.MessageReceivedEvent.getMessage()", "event.getChannel().getClient()", "event.getMessage().getContent()", "event.getMessage().getMentions().get(int)", "event.getMessage().getContent().contains(java.lang.String)", "se.monstermannen.discordmonsterbot.util.MonsterMessage.sendMessage(event.getChannel(),DiscordMonsterBot.PREFIX)", "sx.blah.discord.handle.impl.events.guild.channel.message.MessageReceivedEvent.getChannel()", "event.getChannel().getClient().getOurUser()", "event.getMessage().getMentions().get(0).equals(event.getChannel().getClient().getOurUser())", "event.getMessage().getMentions()", "sx.blah.discord.handle.impl.events.guild.channel.message.MessageReceivedEvent.getChannel()", "sx.blah.discord.handle.impl.events.guild.channel.message.MessageReceivedEvent.getMessage()"], "Fixed commit": "bd43e9ec2c889a606f3b1cbd7b7d2711aa51014a", "Url": "https://api.github.com/repos/MonsterMannen/DiscordMonsterBot", "Date": "2017-02-25T17:44:34Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (si != null) p.sendMessage(((((org.bukkit.ChatColor.GOLD) + \"You get \") + (f.format(((si.getPrice()) * (event.getCurrentItem().getAmount()))))) + \" for this item.\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/859/buggy-version/src.net.dtl.citizenstrader.TraderNpc.java", "BodyUseAPI": ["net.dtl.citizenstrader.traits.StockItem.getPrice()", "org.bukkit.entity.Player.sendMessage(((((org.bukkit.ChatColor.GOLD) + \"You get \") + (f.format(((si.getPrice()) * (event.getCurrentItem().getAmount()))))) + \" for this item.\"))", "java.text.DecimalFormat.format(((si.getPrice()) * (event.getCurrentItem().getAmount())))"], "Fixed commit": "6aba0ec7713a001cb0e5e90ad70d90de7d625b00", "Url": "https://api.github.com/repos/Dandielo/DtlCitizensTrader", "Date": "2012-06-13T07:31:45Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position >= (students.size())) || (position < 0)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8392/buggy-version/UnrealWar-Assignment2.src.unrealwar.assignment2.Course.java", "BodyUseAPI": [], "Fixed commit": "acfd3992381d59c3cec3e6287745a54f17628ebb", "Url": "https://api.github.com/repos/wils1717/UnrealWarAssignment2", "Date": "2017-01-24T18:05:33Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((entity.getTimerState()) == (org.jboss.as.ejb3.timerservice.TimerState.CANCELED)) || ((entity.getTimerState()) == (org.jboss.as.ejb3.timerservice.TimerState.EXPIRED))) { if (file.exists()) { file.delete(); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2500/buggy-version/ejb3.src.main.java.org.jboss.as.ejb3.timerservice.persistence.filestore.FileTimerPersistence.java", "BodyUseAPI": [], "Fixed commit": "0eb48f8afd0fbe846422411821b9eeba15dbee51", "Url": "https://api.github.com/repos/emuckenhuber/wildfly", "Date": "2011-12-14T22:02:02Z"},
{"Line": "=>665", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.jboss.as.ejb3.timerservice.TimerServiceImpl.ineligibleTimerStates.contains(activeTimer.getState()))) { this.startTimer(activeTimer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2500/buggy-version/ejb3.src.main.java.org.jboss.as.ejb3.timerservice.TimerServiceImpl.java", "BodyUseAPI": ["org.jboss.as.ejb3.timerservice.TimerServiceImpl.startTimer(org.jboss.as.ejb3.timerservice.TimerImpl)"], "Fixed commit": "0eb48f8afd0fbe846422411821b9eeba15dbee51", "Url": "https://api.github.com/repos/emuckenhuber/wildfly", "Date": "2011-12-14T22:02:02Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((javax.swing.JOptionPane.showConfirmDialog(null, \"Are you sure to delete this device ?\", \"Deletion confirmation\", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE)) == (javax.swing.JOptionPane.OK_OPTION)) { java.util.List<com.epsi.dugama.BlueR.User> usersForDeletion = com.epsi.dugama.BlueR.DAO.getUsers(); boolean userFound = false; int listCounter = 0; while ((!userFound) && (listCounter < (usersForDeletion.size()))) { if (usersForDeletion.get(listCounter).getDevice().getIdBluetooth().equals(comboBox_DevicesDBList2.getSelectedItem().toString().substring(0, 12))) { userFound = true; } listCounter++; } if (!userFound) { com.epsi.dugama.BlueR.DAO.deleteOneDevice(comboBox_DevicesDBList2.getSelectedItem().toString().substring(0, 12)); devices = com.epsi.dugama.BlueR.DAO.getDevices(); comboBox_DevicesDBList2.removeAllItems(); for (int i = 0; i < (devices.size()); i++) { comboBox_DevicesDBList2.addItem((((devices.get(i).getIdBluetooth()) + \" - \") + (devices.get(i).getDeviceName()))); } javax.swing.JOptionPane.showMessageDialog(null, \"The device has been correctly deleted.\", \"Information\", javax.swing.JOptionPane.INFORMATION_MESSAGE); }else javax.swing.JOptionPane.showMessageDialog(null, \"You must delete the user related to that device first.\", \"Error\", javax.swing.JOptionPane.ERROR_MESSAGE); }else javax.swing.JOptionPane.showMessageDialog(null, \"The device hasn't been deleted has choosen.\", \"Information\", javax.swing.JOptionPane.INFORMATION_MESSAGE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4088/buggy-version/BlueR.src.main.java.com.epsi.dugama.BlueR.UI.MainView.java", "BodyUseAPI": [], "Fixed commit": "dbec309a11af87f73b4306189c49c021f89a6554", "Url": "https://api.github.com/repos/adrianGdn/BlueR", "Date": "2017-12-16T15:48:41Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastLocation) == null) { lastLocation = new android.location.Location(\"dummyprovider\"); lastLocation.setLatitude(0); lastLocation.setLongitude(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2881/buggy-version/app.src.main.java.com.android.ocasa.core.LocationMvpFragment.java", "BodyUseAPI": [], "Fixed commit": "d6bf5d870007955f93fe25924418998548839f84", "Url": "https://api.github.com/repos/emallo5/Ocasa", "Date": "2016-12-14T15:36:57Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.refs) != null) { for (org.apache.skywalking.apm.agent.core.context.trace.TraceSegmentRef ref : this.refs) { spanBuilder.addRefs(ref.transform()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3580/buggy-version/apm-sniffer.apm-agent-core.src.main.java.org.apache.skywalking.apm.agent.core.context.trace.AbstractTracingSpan.java", "BodyUseAPI": [], "Fixed commit": "9f4532c03b57eb7c505a3691d1f599f893caabc6", "Url": "https://api.github.com/repos/ascrutae/sky-walking", "Date": "2017-12-14T02:43:00Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((liveDocs != null) && (!(liveDocs.get(postingsEnum.docID())))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7/buggy-version/src.main.java.org.opensextant.solrtexttagger.TermPrefixCursor.java", "BodyUseAPI": [], "Fixed commit": "f112cb97419479da706603f50de0fca846363617", "Url": "https://api.github.com/repos/treygrainger/SolrTextTagger", "Date": "2015-12-14T16:59:54Z"},
{"Line": "=>1920", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.impetus.client.cassandra.CassandraClientBase.log.isErrorEnabled()) { com.impetus.client.cassandra.CassandraClientBase.log.error(\"Error during executing query {}, Caused by: {} .\", cqlQuery, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3498/buggy-version/src.kundera-cassandra.src.main.java.com.impetus.client.cassandra.CassandraClientBase.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String,java.lang.String,java.lang.Exception)"], "Fixed commit": "4a9239950fdbcc434b5654d3e7820824f853f129", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2014-01-06T12:11:23Z"},
{"Line": "=>572", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(result)) result = context.getString(R.string.history_default, column, newValue);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6956/buggy-version/astrid.src.com.todoroo.astrid.adapter.UpdateAdapter.java", "BodyUseAPI": [], "Fixed commit": "3b17167bd8e20120a16a1f6dc8285d93b7ba0ece", "Url": "https://api.github.com/repos/sbosley/astrid", "Date": "2013-02-07T21:00:18Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((workingHoursInSeconds) > 0) { angle = (360 * (seconds_today.intValue())) / (workingHoursInSeconds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2639/buggy-version/android.src.com.firebirdberlin.tinytimetracker.MainView.java", "BodyUseAPI": [], "Fixed commit": "dcc5185a20fcf757d64e842f192c62b7b0a1f7a4", "Url": "https://api.github.com/repos/firebirdberlin/tinytimetracker", "Date": "2016-01-14T16:41:49Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clear) { getMvpView().showGanks(results); }else { getMvpView().loadMoreGanks(results); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1469/buggy-version/app.src.main.java.com.sky.gankmm.ui.main.MainPresenter.java", "BodyUseAPI": [], "Fixed commit": "eb90265fd654f0511030e4f3730e43f247a90dbc", "Url": "https://api.github.com/repos/tonycheng93/GankMM", "Date": "2017-05-18T15:09:41Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((badnumber == 1) && (chr == ' ')) { badnumber++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8403/buggy-version/homework-g597-kozlov.src.main.java.ru.mipt.java2016.homework.g597.kozlov.task1.MyAwesomeCalculator.java", "BodyUseAPI": [], "Fixed commit": "23b2c85826bd8b600379f09cc0a8bff2dc7de938", "Url": "https://api.github.com/repos/fediq/mipt-java-2016", "Date": "2016-11-02T15:15:29Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n > 1) { for (int i = 0; i < n; i++) { java.lang.System.out.print(\"*\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5843/buggy-version/INFO5100.assignment2.java", "BodyUseAPI": [], "Fixed commit": "ad63b2b22f2f748a445b89160af60a7846233c91", "Url": "https://api.github.com/repos/hy2yang/grad-learning", "Date": "2017-09-21T01:33:32Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (denom > 0) mean.mutableDivide(denom);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8322/buggy-version/JSAT.src.jsat.classifiers.neuralnetwork.SOM.java", "BodyUseAPI": ["jsat.classifiers.neuralnetwork.Vec.mutableDivide(double)"], "Fixed commit": "b1dfc0fbc29dc0bf218ed95b9be23f9065376430", "Url": "https://api.github.com/repos/EdwardRaff/JSAT", "Date": "2017-05-26T20:13:36Z"},
{"Line": "=>1933", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.apiman.manager.api.beans.search.SearchCriteriaFilterBean.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (propertyName.equals(\"name\")) { propertyName = \"name.raw\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6814/buggy-version/manager.api.es.src.main.java.io.apiman.manager.api.es.EsStorage.java", "BodyUseAPI": [], "Fixed commit": "2a73a5147c65c4086bf38e504869d599cf74126c", "Url": "https://api.github.com/repos/KurtStam/apiman", "Date": "2015-12-17T18:45:49Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getStringExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (majorTitle == null) { return; }else { edu.brandeis.cs.cosi153.majortracker.ObjectEntry entry = new edu.brandeis.cs.cosi153.majortracker.ObjectEntry(majorTitle); data.add(entry); majorAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4506/buggy-version/app.src.main.java.edu.brandeis.cs.cosi153.majortracker.Profile.java", "BodyUseAPI": [], "Fixed commit": "ca30fb28c92ec210a316cfe1e1c25408921c826c", "Url": "https://api.github.com/repos/samuelakerman/degreetracker", "Date": "2017-12-05T09:52:03Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.worldObj.getBlock(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (var16 != null) { for (net.minecraft.block.material.Material mat : validMaterialsForTravel) { if ((var16.getMaterial()) != mat) { var16.setBlockBoundsBasedOnState(this.worldObj, this.xTile, this.yTile, this.zTile); flaxbeard.steamcraft.entity.AxisAlignedBB var2 = var16.getCollisionBoundingBoxFromPool(this.worldObj, this.xTile, this.yTile, this.zTile); if ((var2 != null) && (var2.isVecInside(flaxbeard.steamcraft.entity.Vec3.createVectorHelper(this.posX, this.posY, this.posZ)))) { this.inGround = true; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1049/buggy-version/src.main.java.flaxbeard.steamcraft.entity.EntityMusketBall.java", "BodyUseAPI": ["net.minecraft.block.Block.getMaterial()", "net.minecraft.block.Block.getCollisionBoundingBoxFromPool(this.worldObj,int,int,int)", "net.minecraft.block.Block.setBlockBoundsBasedOnState(this.worldObj,int,int,int)"], "Fixed commit": "2f75b35e29c574ba61766b895bdaa4187b6504cf", "Url": "https://api.github.com/repos/Esteemed-Innovation/Esteemed-Innovation", "Date": "2015-08-06T00:19:35Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ctx.getResources().getBoolean(R.bool.is_service_enabled)) { dismiss = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4395/buggy-version/PopupNotifications.src.com.bun.popupnotifications.NotificationActivity.java", "BodyUseAPI": [], "Fixed commit": "17fc9441318da85d7d9c02a367f4406b460d170d", "Url": "https://api.github.com/repos/vikrammiddha/PopupNotifications", "Date": "2013-11-20T05:49:19Z"},
{"Line": "=>727", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ssv == (sv5)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4395/buggy-version/PopupNotifications.src.com.bun.popupnotifications.NotificationActivity.java", "BodyUseAPI": [], "Fixed commit": "17fc9441318da85d7d9c02a367f4406b460d170d", "Url": "https://api.github.com/repos/vikrammiddha/PopupNotifications", "Date": "2013-11-20T05:49:19Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (me.cmesh.DreamLand.DreamLandPlayerListener.plugin.player(event.getPlayer()).Dreaming()) { event.setRespawnLocation(me.cmesh.DreamLand.DreamLandPlayerListener.plugin.player(event.getPlayer()).respawn()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3796/buggy-version/src.me.cmesh.DreamLand.DreamLandPlayerListener.java", "BodyUseAPI": ["me.cmesh.DreamLand.PlayerRespawnEvent.getPlayer()", "me.cmesh.DreamLand.DreamLand.player(event.getPlayer())", "me.cmesh.DreamLand.PlayerRespawnEvent.setRespawnLocation(me.cmesh.DreamLand.DreamLandPlayerListener.plugin.player(event.getPlayer()).respawn())", "me.cmesh.DreamLand.DreamLandPlayerListener.plugin.player(event.getPlayer()).respawn()"], "Fixed commit": "58a971df6331c9405b865cc42713562970d151ed", "Url": "https://api.github.com/repos/cam72cam/Bukkit-DreamLand", "Date": "2011-08-09T11:14:03Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sortedReplaceables.get(com.jplee.worldmanager.gen.WorldGeneration.ANY_DIMENSION)) != null) { rep.addAll(sortedReplaceables.get(com.jplee.worldmanager.gen.WorldGeneration.ANY_DIMENSION).get(block)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2932/buggy-version/src.main.java.com.jplee.worldmanager.gen.WorldGeneration.java", "BodyUseAPI": ["sortedReplaceables.get(com.jplee.worldmanager.gen.WorldGeneration.ANY_DIMENSION).get(net.minecraft.block.Block)", "java.util.List<com.jplee.worldmanager.util.Replaceable>.addAll(sortedReplaceables.get(com.jplee.worldmanager.gen.WorldGeneration.ANY_DIMENSION).get(block))", "java.util.Map<java.lang.Integer, com.google.common.collect.Multimap<net.minecraft.block.Block, com.jplee.worldmanager.util.Replaceable>>.get(int)"], "Fixed commit": "6a0833afbbee601120a904331deffaf66beaae03", "Url": "https://api.github.com/repos/jplee95/World-Manager", "Date": "2016-08-25T17:52:00Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (valueMax == null) { assert possibles != null; return possibles.get(r.nextInt(possibles.size())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7998/buggy-version/src.recommandation.AlgoRBNaif.java", "BodyUseAPI": [], "Fixed commit": "d6b38b7784cfc68b71e0c3b0038f4d0956d51ba8", "Url": "https://api.github.com/repos/PFGimenez/PhD", "Date": "2017-10-05T14:45:18Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (io.dropwizard.metrics.influxdb.InfluxDbReporter.logger.isDebugEnabled()) io.dropwizard.metrics.influxdb.InfluxDbReporter.logger.debug((\"InfluxDbReporter report is called with counter size \" + (counters.size())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4181/buggy-version/metrics.src.main.java.io.dropwizard.metrics.influxdb.InfluxDbReporter.java", "BodyUseAPI": ["org.slf4j.Logger.debug((\"InfluxDbReporter report is called with counter size \" + (counters.size())))"], "Fixed commit": "3a5b700a9b3743adebe85721509ba5116c90c311", "Url": "https://api.github.com/repos/cibc-api/light-4j", "Date": "2017-06-14T02:57:54Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["processing.core.PApplet.splitTokens(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pieces.length) == 3) { java.lang.String htmlFilename = pieces[2]; if ((htmlFilename.length()) > 0) { if (htmlFilename.endsWith(\"_\")) { keyword += \"_\"; } boolean seen = keywordToReference.containsKey(keyword); if ((!seen) || (seen && (keyword.equals(htmlFilename)))) { keywordToReference.put(keyword, htmlFilename); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8286/buggy-version/app.src.processing.app.Mode.java", "BodyUseAPI": [], "Fixed commit": "f695da510fe1512aa9e24ad089758daf6225913e", "Url": "https://api.github.com/repos/processing/processing", "Date": "2016-09-08T16:09:49Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.length()) > 2) { temp = this.localServer.readRecord(ID, s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3067/buggy-version/offLine.java", "BodyUseAPI": ["earlyAlpha.serverFileHandle.readRecord(long,java.lang.String)"], "Fixed commit": "3aa211e904216fff4540e1c1bf2bc10596da14c3", "Url": "https://api.github.com/repos/ratchet-Inc/Iron-Iris-Alpha-", "Date": "2016-11-29T00:02:16Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((jsonArray.getJSONObject(i).optJSONObject(\"score\")) != null) { com.thecn.app.models.user.Score score = com.thecn.app.stores.UserStore.fromJSONScore(jsonArray.getJSONObject(i).getJSONObject(\"score\")); user.setScore(score); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6049/buggy-version/CNAndroidApp.src.main.java.com.thecn.app.stores.UserStore.java", "BodyUseAPI": ["org.json.JSONArray.getJSONObject(int)", "com.thecn.app.stores.UserStore.fromJSONScore(jsonArray.getJSONObject(i).getJSONObject(\"score\"))", "jsonArray.getJSONObject(i).getJSONObject(java.lang.String)"], "Fixed commit": "113523486ef15cc4cdcdbaf988d403041e3834bb", "Url": "https://api.github.com/repos/milanmanvar/CNAndroidApp-Milan", "Date": "2016-04-13T21:32:22Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.thecn.app.activities.course.CourseActivity_New.hiddenScore) holder.txtAnarCount.setVisibility(View.GONE); else holder.txtAnarCount.setVisibility(View.VISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6049/buggy-version/CNAndroidApp.src.main.java.com.thecn.app.adapters.RosterAdapter.java", "BodyUseAPI": [], "Fixed commit": "113523486ef15cc4cdcdbaf988d403041e3834bb", "Url": "https://api.github.com/repos/milanmanvar/CNAndroidApp-Milan", "Date": "2016-04-13T21:32:22Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.edu.pku.user.dao.EmployeeDAO.load(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((employee.getHasTag()) == 1) { employeeTagDAO.update(employeeTag); }else { employeeTagDAO.add(employeeTag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6104/buggy-version/src.cn.edu.pku.search.service.SearchServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "3e1cd3d6a7ab60e6a87e9971ab3213c143d2764e", "Url": "https://api.github.com/repos/HaoJiaPKU/jrs-service", "Date": "2016-10-18T16:32:18Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recruitmentBBS.getHasTag()) == 1) { recruitmentTagDAO.update(recruitmentTag); }else { recruitmentTagDAO.add(recruitmentTag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6104/buggy-version/src.cn.edu.pku.search.service.SearchServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "3e1cd3d6a7ab60e6a87e9971ab3213c143d2764e", "Url": "https://api.github.com/repos/HaoJiaPKU/jrs-service", "Date": "2016-10-18T16:32:18Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((game.getCurrentPlayer().getType()) == (PlayerType.HUMAN)) { showPlayerBoard(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2763/buggy-version/src.main.java.de.hsbremen.battleshipextreme.client.Controller.java", "BodyUseAPI": [], "Fixed commit": "759d65de92bd04da9fe2f14bfd7e09dd22ce02a1", "Url": "https://api.github.com/repos/cschaf/battleship-extreme", "Date": "2015-06-17T12:01:30Z"},
{"Line": "=>700", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(jeuxDir.exists())) { jeuxDir.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8420/buggy-version/app.controllers.Application.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "febba5081b85253bd4378f0de3f3fe488d303ac6", "Url": "https://api.github.com/repos/windu02/DWebInstallor", "Date": "2013-05-28T09:27:16Z"},
{"Line": "=>837", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (f.exists()) { java.io.FileInputStream fis = new java.io.FileInputStream(f); java.io.BufferedInputStream bis = new java.io.BufferedInputStream(fis); setInputStream(bis); setContentLength(java.lang.String.valueOf(f.length())); if (org.apache.commons.io.FilenameUtils.isExtension(f.getName(), \"pdf\")) { setContentDisposition(((\"inline; filename=\\\"\" + (resource.getFileName())) + \"\\\"\")); setContentType(\"application/pdf\"); }else { setContentDisposition(((\"attachment; filename=\\\"\" + (resource.getFileName())) + \"\\\"\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/9/buggy-version/Core.src.org.store.core.front.GeneralAction.java", "BodyUseAPI": ["org.apache.commons.io.FilenameUtils.isExtension(java.lang.String,java.lang.String)", "java.lang.String.valueOf(long)", "java.io.File.length()", "org.store.core.front.GeneralAction.setContentLength(java.lang.String)", "java.io.File.getName()"], "Fixed commit": "b73c7da26948be86924a66bbe89fca3c2e2197f1", "Url": "https://api.github.com/repos/rcjusto/osjavacommerce", "Date": "2017-07-14T13:47:05Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (table != null) { edu.lclark.orego.mcts.LgrfSuggester lgrf = copy.get(edu.lclark.orego.mcts.LgrfSuggester.class); lgrf.setTable(table); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3815/buggy-version/src.edu.lclark.orego.mcts.McRunnable.java", "BodyUseAPI": [], "Fixed commit": "a25abe77f59996dfc00da6ee7aee00cf3936e24e", "Url": "https://api.github.com/repos/Orego/Orego", "Date": "2014-07-07T20:05:39Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.json.JsonObject.getJsonArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (values == null) { throw new io.github.pr0methean.betterrandom.seed.SeedException((\"'values' missing from 'random': \" + random)); }else if ((values.size()) < numberOfBytes) { throw new io.github.pr0methean.betterrandom.seed.SeedException((\"'values' array too short: \" + values)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3496/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.seed.RandomDotOrgSeedGenerator.java", "BodyUseAPI": ["javax.json.JsonArray.size()"], "Fixed commit": "82c598bc2c20836d3a19e5aeb7c2a1b814ba70b9", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2017-10-18T00:21:54Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.json.JsonObject.getJsonObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (error != null) { throw new io.github.pr0methean.betterrandom.seed.SeedException(error.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3496/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.seed.RandomDotOrgSeedGenerator.java", "BodyUseAPI": ["javax.json.JsonObject.toString()"], "Fixed commit": "82c598bc2c20836d3a19e5aeb7c2a1b814ba70b9", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2017-10-18T00:21:54Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (point >= 0) { point = ((float) (java.lang.Math.floor((point / 90)))) * 90; }else { point = ((float) (java.lang.Math.ceil((point / 90)))) * 90; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6750/buggy-version/src.oldschool.superdice.Die.java", "BodyUseAPI": ["java.lang.Math.floor(float)", "java.lang.Math.ceil(float)"], "Fixed commit": "fb73095502673acd624f8d5f7d8e894dd9a2e93c", "Url": "https://api.github.com/repos/hanjo77/SuperDice", "Date": "2014-03-09T13:56:07Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userEmail) != null) hk.ust.cse.hunkim.questionroom.JoinActivity.loadPorfile(getFilesDir(), ((android.widget.ImageView) (findViewById(R.id.drawer_profileImage))), ((android.widget.TextView) (findViewById(R.id.drawer_profileEmail))), userEmail);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/570/buggy-version/app.src.main.java.hk.ust.cse.hunkim.questionroom.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "46948768dbd12b2e637b8183cdd30965d01f5af5", "Url": "https://api.github.com/repos/wcc831/comp3111", "Date": "2015-10-30T06:46:15Z"},
{"Line": "=>729", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((playerSettings) != null) && (!(playerSettings[playerId].isAvailable()))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8947/buggy-version/jsettlers.logic.src.main.java.jsettlers.logic.map.loading.original.OriginalMapFileContentReader.java", "BodyUseAPI": [], "Fixed commit": "37badc365f959a5d215f089f19b523c29d7ce05f", "Url": "https://api.github.com/repos/gollum1001/settlers-remake", "Date": "2017-07-07T16:39:44Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.mcft.copy.betterstorage.item.ItemBackpack.getBackpackData(net.minecraft.entity.EntityLivingBase)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((backpackData.contents.length) != size) { net.minecraft.item.ItemStack[] newContents = new net.minecraft.item.ItemStack[size]; java.lang.System.arraycopy(backpackData, 0, newContents, 0, java.lang.Math.min(size, backpackData.contents.length)); backpackData.contents = newContents; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7504/buggy-version/src.main.java.net.mcft.copy.betterstorage.item.ItemBackpack.java", "BodyUseAPI": ["java.lang.System.arraycopy(net.mcft.copy.betterstorage.misc.PropertiesBackpack,int,net.minecraft.item.ItemStack[],int,int)", "java.lang.Math.min(int,backpackData.contents.length)"], "Fixed commit": "1d4c2cd7bfb0ea34664433ca7e9680631e2efa86", "Url": "https://api.github.com/repos/copygirl/BetterStorage", "Date": "2014-02-25T16:05:33Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.gebit.integrity.parameter.resolving.ParameterResolver.resolveSingleParameterValue(de.gebit.integrity.dsl.ValueOrEnumValueOrOperation,de.gebit.integrity.parameter.conversion.UnresolvableVariableHandling)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (tempResult instanceof de.gebit.integrity.dsl.ValueOrEnumValueOrOperation) { return convertEncapsulatedValueToTargetType(aTargetType, aParameterizedType, ((de.gebit.integrity.dsl.ValueOrEnumValueOrOperation) (tempResult)), anUnresolvableVariableHandlingPolicy, someVisitedValues); }else { return convertSingleValueToTargetType(aTargetType, aParameterizedType, tempResult, anUnresolvableVariableHandlingPolicy, someVisitedValues); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7125/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.parameter.conversion.AbstractModularValueConverter.java", "BodyUseAPI": ["de.gebit.integrity.parameter.conversion.AbstractModularValueConverter.convertSingleValueToTargetType(java.lang.Class<?>,java.lang.Class<?>,java.lang.Object,de.gebit.integrity.parameter.conversion.UnresolvableVariableHandling,java.util.Set<java.lang.Object>)"], "Fixed commit": "1a22fcb4f9825ad248044cd44a68c99e2cdf69a2", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2013-11-14T17:34:10Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Board.dimension()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((i == (dim - 1)) && (j == (dim - 1))) { goalTile = 0; }else { goalTile = ((dim * i) + 1) + j; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6807/buggy-version/hw4_8puzzle_search.Board.java", "BodyUseAPI": [], "Fixed commit": "9cc8745d35985178964af940caae55276c50f325", "Url": "https://api.github.com/repos/duvernea/algorithms_princeton", "Date": "2017-01-30T23:03:34Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mUseFldForSeries) seriesName = sage.io.Path.getParentName(comicPath); else { if (sParser == null) sParser = new com.sketchpunk.ocomicreader.lib.SeriesParser(); seriesName = sParser.getSeriesName(comicPath); if (seriesName.contains(\"/\")) { seriesName = sParser.getSeriesName((comicPath + \".xxx\")); if (seriesName.contains(\"/\")) { seriesName = sage.io.Path.getParentName(comicPath); }else { seriesIssue = sParser.getSeriesIssue((comicPath + \".xxx\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6069/buggy-version/src.com.sketchpunk.ocomicreader.lib.LibrarySync.java", "BodyUseAPI": [], "Fixed commit": "4da7fa6ce7ca6a34917d598b07acfba17d6f1770", "Url": "https://api.github.com/repos/rlach/opencomicreader", "Date": "2014-09-02T18:37:22Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isNotBlank(parameter)) { commandParams.add(parameter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8064/buggy-version/Tools.fitCommandDocumentor.src.main.java.documentor.ClassFileProcessor.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "e85763c890ae12997f7ee34c569bc30ee5988917", "Url": "https://api.github.com/repos/Dace/fara", "Date": "2013-12-19T22:31:46Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.terasology.network.NetworkSystem.getOwner(org.terasology.entitySystem.entity.EntityRef)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (client == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2371/buggy-version/src.main.java.org.terasology.cities.PlayerTracker.java", "BodyUseAPI": [], "Fixed commit": "a889309d127b3093c60486485e85d0746028e343", "Url": "https://api.github.com/repos/Terasology/Cities", "Date": "2014-01-16T18:50:16Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.datacleaner.storage.RowAnnotation>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (annotation == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6416/buggy-version/components.value-distribution.src.main.java.org.datacleaner.beans.valuedist.SingleValueDistributionResult.java", "BodyUseAPI": [], "Fixed commit": "3cec3da0a4b433dff6168f809677c2e39af253b5", "Url": "https://api.github.com/repos/datacleaner/DataCleaner", "Date": "2015-09-07T20:21:43Z"},
{"Line": "=>626", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Lists.newArrayListWithCapacity(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (potential.isEmpty()) { clazz = clazz.getSuperclass(); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3566/buggy-version/src.main.java.com.cinchapi.common.reflect.Reflection.java", "BodyUseAPI": [], "Fixed commit": "63c1694f20a2207894d5f2839dc6e5e408d05546", "Url": "https://api.github.com/repos/cinchapi/accent4j", "Date": "2016-10-03T01:10:00Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.erlide.engine.services.codeassist.CompletionData.getDisplayString()", "org.erlide.engine.services.codeassist.CompletionData.getDisplayString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((s1.startsWith(prefix)) && (s2.startsWith(prefix))) { return s1.compareTo(s2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8307/buggy-version/org.erlide.model.api.src.org.erlide.engine.services.codeassist.CompletionNameComparer.java", "BodyUseAPI": ["java.lang.String.compareTo(java.lang.String)"], "Fixed commit": "708d023b9768d81f7acf044a08eb7d1f0ccbbeea", "Url": "https://api.github.com/repos/erlang/erlide_eclipse", "Date": "2016-05-24T20:05:35Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (param == null) throw new java.lang.IllegalArgumentException(\"Cannot be NULL.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/831/buggy-version/ProtocolLib.src.main.java.com.comphenix.protocol.events.PacketContainer.java", "BodyUseAPI": [], "Fixed commit": "9b0fe540c2b6cb07580958bfeefd07b7780a170f", "Url": "https://api.github.com/repos/aadnk/ProtocolLib", "Date": "2013-02-19T16:25:59Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requirement.getEstimateEffort()) <= 0) { issues.add(new edu.wpi.cs.wpisuitetng.modules.RequirementsManager.models.ValidationIssue(\"Cannot be 0\", \"Estimate\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/801/buggy-version/RequirementsManager.src.edu.wpi.cs.wpisuitetng.modules.RequirementsManager.models.RequirementValidator.java", "BodyUseAPI": [], "Fixed commit": "4948792813de499af496fbad099fc0efbdf670d5", "Url": "https://api.github.com/repos/cmdunkers/wpi-suite-tng", "Date": "2013-04-19T03:54:13Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (resource != null) { resource.getUpdateLock().release(LockMode.READ_LOCK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2595/buggy-version/src.org.exist.http.AuditTrailSessionListener.java", "BodyUseAPI": ["org.exist.dom.persistent.DocumentImpl.getUpdateLock()", "resource.getUpdateLock().release(LockMode.READ_LOCK)"], "Fixed commit": "1b62e9e52da69e798a1ca1bff53618d5bc976af6", "Url": "https://api.github.com/repos/olvidalo/exist", "Date": "2017-02-18T11:32:13Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOrder) == 0) { mCol.getConf().put(\"sortType\", com.ichi2.anki.CardBrowser.fSortTypes[1]); com.ichi2.anki.AnkiDroidApp.getSharedPrefs(getBaseContext()).edit().putBoolean(\"cardBrowserNoSorting\", true).commit(); }else { mCol.getConf().put(\"sortType\", com.ichi2.anki.CardBrowser.fSortTypes[mOrder]); com.ichi2.anki.AnkiDroidApp.getSharedPrefs(getBaseContext()).edit().putBoolean(\"cardBrowserNoSorting\", false).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/192/buggy-version/src.com.ichi2.anki.CardBrowser.java", "BodyUseAPI": [], "Fixed commit": "cd911460eabd86713b9e3f7391adb51189af0472", "Url": "https://api.github.com/repos/iniju/Anki-Android", "Date": "2012-10-15T18:57:23Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ichi2.anki.AnkiDroidApp.getSharedPrefs(getBaseContext())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((mOrder) == 1) && (preferences.getBoolean(\"cardBrowserNoSorting\", false))) { mOrder = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/192/buggy-version/src.com.ichi2.anki.CardBrowser.java", "BodyUseAPI": [], "Fixed commit": "cd911460eabd86713b9e3f7391adb51189af0472", "Url": "https://api.github.com/repos/iniju/Anki-Android", "Date": "2012-10-15T18:57:23Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((clients.size()) > 0) { selected_client = clients.get(0); fillSoaps(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/673/buggy-version/src.experiment.AppWindow.java", "BodyUseAPI": [], "Fixed commit": "36e30adecfef238762f9e7bdc5f4b5d56ce511b0", "Url": "https://api.github.com/repos/NameCT/CIS", "Date": "2014-07-08T01:11:29Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["TransMatrix.TMatrix.contains(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!alreadyExists) { java.lang.String childURL = \"http://www.larousse.fr\" + (item.attr(\"href\")); Document newDoc = Jsoup.connect(childURL).get(); TransMatrix.mapDefs(realWord, newDoc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7662/buggy-version/src.TransMatrix.java", "BodyUseAPI": [], "Fixed commit": "d32715c578b62c2e33141e823c14d3f44b108a6d", "Url": "https://api.github.com/repos/giulioforesto/longHerm", "Date": "2014-08-07T12:59:55Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["TransMatrix.TMatrix.contains(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!alreadyExists) { TransMatrix.mapDefs(realWord, doc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7662/buggy-version/src.TransMatrix.java", "BodyUseAPI": [], "Fixed commit": "d32715c578b62c2e33141e823c14d3f44b108a6d", "Url": "https://api.github.com/repos/giulioforesto/longHerm", "Date": "2014-08-07T12:59:55Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name == null) { throw new java.lang.IllegalArgumentException(\"columnTypes must not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5887/buggy-version/src.ru.fizteh.fivt.students.moskupols.storeable.StringBackedStructuredTableProvider.java", "BodyUseAPI": [], "Fixed commit": "6c1527b92744d9de87c75bfcaa8635ebb5f0b026", "Url": "https://api.github.com/repos/dkomanov/fizteh-java-2014", "Date": "2014-12-15T05:54:45Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (columnTypes == null) { throw new java.lang.IllegalArgumentException(\"columnTypes must not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5887/buggy-version/src.ru.fizteh.fivt.students.moskupols.storeable.StringBackedStructuredTableProvider.java", "BodyUseAPI": [], "Fixed commit": "6c1527b92744d9de87c75bfcaa8635ebb5f0b026", "Url": "https://api.github.com/repos/dkomanov/fizteh-java-2014", "Date": "2014-12-15T05:54:45Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.yarn.server.nodemanager.containermanager.resourceplugin.fpga.IntelFpgaOpenclPlugin.InnerShellExecutor.getMajorAndMinorNumber(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (null != majorMinorNumber) { java.lang.String[] mmn = majorMinorNumber.split(\":\"); this.aliasMap.put(majorMinorNumber, aliasName); list.add(new org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.fpga.FpgaResourceAllocator.FpgaDevice(getFpgaType(), java.lang.Integer.parseInt(mmn[0]), java.lang.Integer.parseInt(mmn[1]), null, fields[0], aliasName, fields[1], fields[2], fields[3])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1873/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-nodemanager.src.main.java.org.apache.hadoop.yarn.server.nodemanager.containermanager.resourceplugin.fpga.IntelFpgaOpenclPlugin.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "5e4344f9082a8ecb54c2ada7f28848049089a0f7", "Url": "https://api.github.com/repos/tangzhankun/hadoop", "Date": "2017-11-22T12:40:36Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["modTicket.getModData().getIntArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((blockPos.length) != 0) { net.minecraftforge.common.ForgeChunkManager.forceChunk(modTicket, new net.minecraft.world.ChunkCoordIntPair((((blockPos[0]) - 16) / 16), (((blockPos[2]) - 16) / 16))); rowautomation.Chunkloader.blockTickets.put(world.getBlock(blockPos[0], blockPos[1], blockPos[2]), modTicket); }else { net.minecraftforge.common.ForgeChunkManager.releaseTicket(modTicket); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2855/buggy-version/main.java.rowautomation.Chunkloader.java", "BodyUseAPI": ["net.minecraftforge.common.ForgeChunkManager.forceChunk(net.minecraftforge.common.ForgeChunkManager.Ticket,net.minecraft.world.ChunkCoordIntPair)", "net.minecraft.world.World.getBlock(int,int,int)", "java.util.Map<net.minecraft.block.Block, net.minecraftforge.common.ForgeChunkManager.Ticket>.put(world.getBlock(blockPos[0], blockPos[1], blockPos[2]),net.minecraftforge.common.ForgeChunkManager.Ticket)"], "Fixed commit": "103c56ba53dc0c4d054fa9562c5551525f411612", "Url": "https://api.github.com/repos/DonBruce64/RailsOfWarAutomationModule", "Date": "2015-12-13T02:07:15Z"},
{"Line": "=>855", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tableSet.respVar.nDecimals) > 0) aant = (aant + (tableSet.respVar.nDecimals)) + 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1063/buggy-version/src.tauargus.model.OptiSuppress.java", "BodyUseAPI": [], "Fixed commit": "b0c3dad7ce77a5c17321074a34896224c6a03f70", "Url": "https://api.github.com/repos/sdcTools/tauargus", "Date": "2017-05-09T09:49:20Z"},
{"Line": "=>503", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selected) { selected(tv); }else { notSelected(tv); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6047/buggy-version/library.src.com.astuetz.PagerSlidingTabStrip.java", "BodyUseAPI": [], "Fixed commit": "94023e408ec3cafda277faf83a5d85e4af4a9f2f", "Url": "https://api.github.com/repos/jpardogo/PagerSlidingTabStrip", "Date": "2015-01-09T10:34:34Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (upc == null) { java.lang.System.err.println(\"ERROR: UPC cannot be null.\"); return new com.marketflip.shared.products.MF_Product(); }else if (!(EAN13CheckDigit.EAN13_CHECK_DIGIT.isValid(upc))) { java.lang.System.err.println(\"ERROR: UPC cannot be resolved as EAN/ISBN-13/UPC compliant.\"); return new com.marketflip.shared.products.MF_Product(); }else if (!(productSet.contains(upc))) { java.lang.System.err.println(\"ERROR: Product does not exist in database\"); return new com.marketflip.shared.products.MF_Product(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4598/buggy-version/src.com.marketflip.shared.data.MF_DatabaseAccessObject.java", "BodyUseAPI": ["EAN13CheckDigit.EAN13_CHECK_DIGIT.isValid(java.lang.String)", "java.util.HashSet<java.lang.String>.contains(java.lang.String)"], "Fixed commit": "6663275b7a983c7ab725568daced1380ead54e0a", "Url": "https://api.github.com/repos/jasonmrimer/Market-Flip-Shared-Assets", "Date": "2015-11-01T20:55:28Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"-\".equals(s)) { left.add((word + \"s\")); }else if (\"~\".equals(s)) { left.add((word + \"s\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/540/buggy-version/src.main.java.com.s24.wiki.EnglishGrammarPageParser.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "41abe6e42d96db0204c4c37b76b832e833968a79", "Url": "https://api.github.com/repos/shopping24/wikitionary-solr-synonyms", "Date": "2016-04-12T10:03:45Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isViewAttached()) getView().showLoading();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1025/buggy-version/sample.src.main.java.com.hannesdorfmann.mosby.sample.mvp.sce.SimpleCountryFormPresenter.java", "BodyUseAPI": [], "Fixed commit": "f868ae28a0ed8c8933a1d08ec148d0edc663daa9", "Url": "https://api.github.com/repos/leonardo2204/mosby", "Date": "2016-10-20T17:03:47Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((terminal.arity()) != 0) { throw new java.lang.IllegalArgumentException(\"Input function must be terminal with arity 0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1866/buggy-version/src.main.java.org.fit.cvut.mvi.model.InputNode.java", "BodyUseAPI": [], "Fixed commit": "fac9fcff5cf1d4600123d4406fc4954c382c935a", "Url": "https://api.github.com/repos/kupcimat/MI-MVI", "Date": "2012-11-25T15:24:07Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (packageName == null) { packageName = com.perl5.lang.perl.util.PerlPackageUtil.UNIVERSAL_PACKAGE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5443/buggy-version/src.com.perl5.lang.perl.psi.mro.PerlMro.java", "BodyUseAPI": [], "Fixed commit": "c21d1274aa45d28e4266af6769ee724ade7e0697", "Url": "https://api.github.com/repos/Camelcade/Perl5-IDEA", "Date": "2016-11-22T19:24:58Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNotNull(ch.inofix.timetracker.web.internal.search.TaskRecordSearch.orderableHeaders.get(orderByCol))) { setOrderByCol(ch.inofix.timetracker.web.internal.search.TaskRecordSearch.orderableHeaders.get(orderByCol)); }else { ch.inofix.timetracker.web.internal.search.TaskRecordSearch._log.error((orderByCol + \" is not an orderable header.\")); setOrderByCol(orderByCol); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1335/buggy-version/timetracker-web.src.main.java.ch.inofix.timetracker.web.internal.search.TaskRecordSearch.java", "BodyUseAPI": [], "Fixed commit": "15dd187fad55c605bb64847d1932e5b504a2ab7f", "Url": "https://api.github.com/repos/chrberndt/ch-inofix-timetracker", "Date": "2017-06-18T15:06:25Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.location.LocationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (location != null) { longitude = location.getLongitude(); latitude = location.getLatitude(); locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, com.youbaku.apps.placesnear.location.MyLocation.MIN_TIME, com.youbaku.apps.placesnear.location.MyLocation.MIN_DISTANCE, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/473/buggy-version/app.src.main.java.com.youbaku.apps.placesnear.location.MyLocation.java", "BodyUseAPI": ["android.location.Location.getLongitude()", "android.location.Location.getLatitude()"], "Fixed commit": "40d205144449a269b7509ab9c89cfd8e873596f4", "Url": "https://api.github.com/repos/GuppyFoursquare/Android", "Date": "2015-07-24T23:49:50Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sensorList) != null) { mTextView.setText(sensorList.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4725/buggy-version/app.src.main.java.com.ohtu.wearable.wearabledataservice.fragments.FragmentTwo.java", "BodyUseAPI": [], "Fixed commit": "0e15bbc42a60149bd88256c11405294d35a62fdd", "Url": "https://api.github.com/repos/OhtuWearable/WearableDataServer", "Date": "2015-02-27T13:20:36Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(config.isFile())) || (!(config.exists()))) { throw new java.io.IOException((\"Buck config file missing at \" + basePath)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6154/buggy-version/src.com.facebook.buck.intellijplugin.runner.BaseDirectoryResolver.java", "BodyUseAPI": [], "Fixed commit": "722098f8dd38d8b43b4ead73e5993f80b6385712", "Url": "https://api.github.com/repos/dakkad/buck", "Date": "2015-01-14T14:37:59Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(base.isDirectory())) { throw new java.io.IOException(((\"Could not resolve buck project base directory. \" + basePath) + \" not found\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6154/buggy-version/src.com.facebook.buck.intellijplugin.runner.BaseDirectoryResolver.java", "BodyUseAPI": [], "Fixed commit": "722098f8dd38d8b43b4ead73e5993f80b6385712", "Url": "https://api.github.com/repos/dakkad/buck", "Date": "2015-01-14T14:37:59Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.search.Document.get(Field.ROOT_ENTRY_CLASS_NAME)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNull(className)) { className = document.get(Field.ENTRY_CLASS_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6002/buggy-version/portal-impl.src.com.liferay.portal.search.SearchPermissionCheckerImpl.java", "BodyUseAPI": [], "Fixed commit": "fea1e30175cdb421f10fe6ecc351e66edb67e6b3", "Url": "https://api.github.com/repos/Preston-Crary/liferay-portal", "Date": "2015-05-22T21:08:16Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Double>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (current == null) current = 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7096/buggy-version/src.main.java.com.ipeirotis.gal.scripts.Datum.java", "BodyUseAPI": [], "Fixed commit": "7b512c525c76d8f3148b57ad3adf8d08e77070c5", "Url": "https://api.github.com/repos/ipeirotis/Get-Another-Label", "Date": "2012-09-10T19:59:04Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (instanceServiceMap != null) { objectProcessManager.scheduleProcessInstance(ServiceDiscoveryConstants.PROCESS_SERVICE_EXPOSE_MAP_UPDATE_HEALTHY, instanceServiceMap, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4995/buggy-version/code.iaas.service-discovery.server.src.main.java.io.cattle.platform.servicediscovery.process.ServiceDiscoveryInstanceStartPostListener.java", "BodyUseAPI": ["io.cattle.platform.servicediscovery.process.ServiceDiscoveryInstanceStartPostListener.scheduleProcessInstance(ServiceDiscoveryConstants.PROCESS_SERVICE_EXPOSE_MAP_UPDATE_HEALTHY,io.cattle.platform.core.model.ServiceExposeMap,<nulltype>)"], "Fixed commit": "61b4cb1341f0a40035611b402b14fc040c34803e", "Url": "https://api.github.com/repos/alena1108/cattle", "Date": "2015-05-06T23:23:40Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (f == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/9113/buggy-version/portal.src.main.java.edu.isi.wings.portal.controllers.DomainController.java", "BodyUseAPI": [], "Fixed commit": "dc6b5f79542ddc54c28dfb981082e48357a3d6ce", "Url": "https://api.github.com/repos/IKCAP/wings", "Date": "2014-10-05T21:18:57Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(initializer.isDatabaseStructureCreated(checkSql))) { org.wso2.carbon.device.mgt.core.internal.DeviceManagementServiceComponent.log.info(\"Initializing device management repository database schema\"); initializer.createRegistryDatabase(); }else { org.wso2.carbon.device.mgt.core.internal.DeviceManagementServiceComponent.log.info(\"Device management database already exists. Not creating a new database.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3921/buggy-version/components.device-mgt.org.wso2.carbon.device.mgt.core.src.main.java.org.wso2.carbon.device.mgt.core.internal.DeviceManagementServiceComponent.java", "BodyUseAPI": ["org.wso2.carbon.device.mgt.core.util.DeviceManagementSchemaInitializer.createRegistryDatabase()"], "Fixed commit": "82be4ef5a81914c7448c2a7170705f4768d7d388", "Url": "https://api.github.com/repos/madhawap/carbon-device-mgt", "Date": "2016-09-28T09:45:24Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(initializer.isDatabaseStructureCreated(checkSql))) { org.wso2.carbon.certificate.mgt.core.internal.CertificateManagementServiceComponent.log.info(\"Initializing Certificate management repository database schema\"); initializer.createRegistryDatabase(); }else { org.wso2.carbon.certificate.mgt.core.internal.CertificateManagementServiceComponent.log.info(\"Certificate management repository database already exists. Not creating a new database.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3921/buggy-version/components.certificate-mgt.org.wso2.carbon.certificate.mgt.core.src.main.java.org.wso2.carbon.certificate.mgt.core.internal.CertificateManagementServiceComponent.java", "BodyUseAPI": ["org.wso2.carbon.certificate.mgt.core.util.CertificateMgtSchemaInitializer.createRegistryDatabase()"], "Fixed commit": "82be4ef5a81914c7448c2a7170705f4768d7d388", "Url": "https://api.github.com/repos/madhawap/carbon-device-mgt", "Date": "2016-09-28T09:45:24Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((transform.getParent()) != null) { transform.scale.x = transform.getParent().scale.x; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8381/buggy-version/src.main.java.com.ezardlabs.lostsector.objects.weapons.Arm.java", "BodyUseAPI": ["com.ezardlabs.lostsector.objects.weapons.Arm.getParent()"], "Fixed commit": "64274949c05cbb5817824e51ad9999ff44060d29", "Url": "https://api.github.com/repos/8-Bit-Warframe/Lost-Sector", "Date": "2017-09-27T21:11:02Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (ret != null) { java.io.File img = new java.io.File(ret); if (((id != (-1)) && (img.exists())) && ((img.length()) > 0)) { updateSt.setInt(1, id); updateSt.executeUpdate(); return ret; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4666/buggy-version/editor-dao.src.main.java.cz.mzk.editor.server.DAO.ImageResolverDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "9cfd51d912a8f00727fb1dd5c1303eb9fb66c855", "Url": "https://api.github.com/repos/moravianlibrary/MEditor", "Date": "2012-08-01T08:13:43Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.drem.games.ggs.api.IWeapon.compareTo(com.drem.games.ggs.api.IWeapon)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result == 0) { java.lang.System.out.println(\"You pulled out the same gun as your opponent!\"); return com.drem.games.ggs.player.PlayerOutcome.DEAD; }else if (result == 1) { player1.useBullet(); java.lang.System.out.println(((\"Pew! Pew! You have \" + (player1.getBulletCount())) + \" bullets left!\")); return com.drem.games.ggs.player.PlayerOutcome.OK; }else { java.lang.System.out.println(\"Your opponent's weapon is stronger!\"); return com.drem.games.ggs.player.PlayerOutcome.DEAD; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4587/buggy-version/src.main.java.com.drem.games.ggs.player.action.ShootAction.java", "BodyUseAPI": [], "Fixed commit": "5580246b7058ae2284f60388aad216c382d435bb", "Url": "https://api.github.com/repos/drem-darios/GunGunShoot", "Date": "2015-03-19T06:46:10Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.nspace.museedesondes.MainActivity.getSharedPreferences(java.lang.String,Context.MODE_PRIVATE)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (sharedPrefs.getBoolean(\"firstrun\", true)) { sharedPrefs.edit().putBoolean(\"firstrun\", false).commit(); loadReplaceMeWith(R.layout.welcome_language); }else { loadReplaceMeWith(R.layout.welcome_begin_tour); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6754/buggy-version/MuseeDesOndes.app.src.main.java.com.example.nspace.museedesondes.MainActivity.java", "BodyUseAPI": ["sharedPrefs.edit().putBoolean(\"firstrun\", false).commit()", "sharedPrefs.edit().putBoolean(java.lang.String,boolean)", "android.content.SharedPreferences.edit()"], "Fixed commit": "92d7fbbdf958a39e35abc3984a3354953d878a30", "Url": "https://api.github.com/repos/mv740/390-E-Wok", "Date": "2016-02-19T05:23:57Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((tiles.get(xChoice).get(y)) == 0) { tiles.get(xChoice).set(y, playersTurn); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4213/buggy-version/src.models.GameBoard.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.set(int,int)", "java.util.Map<java.lang.String, java.util.ArrayList<java.lang.Integer>>.get(java.lang.String)"], "Fixed commit": "85815483f5c501c8a5a7e15c32701180d271e1da", "Url": "https://api.github.com/repos/uesports135/TicTacToeFinal", "Date": "2014-05-06T22:29:56Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getTimestamp(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (alarmTime != null) { alarmDate = new java.util.Date(alarmTime.getTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/628/buggy-version/src.db.AppointmentDBC.java", "BodyUseAPI": ["java.sql.Timestamp.getTime()"], "Fixed commit": "24fc7c488629827f7afe966b673d52fd3e587969", "Url": "https://api.github.com/repos/thomahan/calendar", "Date": "2015-03-08T06:22:58Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((this) instanceof spoon.reflect.factory.ModuleFactory.CtUnnamedModule)) { getFactory().getEnvironment().getModelChangeListener().onObjectUpdate(this, CtRole.SUB_PACKAGE, rootPackage, this.rootPackage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8371/buggy-version/src.main.java.spoon.support.reflect.declaration.CtModuleImpl.java", "BodyUseAPI": [], "Fixed commit": "ac21123da99cc1d0f53ea31d25c64e041c2e061a", "Url": "https://api.github.com/repos/surli/spoon", "Date": "2017-11-21T13:38:51Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getData().getLaunch()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(launch.isTerminated())) { launch.terminate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4485/buggy-version/org.erlide.backend.src.org.erlide.backend.internal.ExternalBackend.java", "BodyUseAPI": ["org.eclipse.debug.core.ILaunch.terminate()"], "Fixed commit": "6666ce01cba44eec3cea3c9ec6c0e3f593a65509", "Url": "https://api.github.com/repos/erlide/erlide", "Date": "2013-07-05T06:18:51Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hillsballetschool.pages.account.edit.EditAccountPage.getAccountId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (accountId != null) { createClientLink.getPageParameters().add(\"accountId\", accountId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1405/buggy-version/src.main.java.com.hillsballetschool.pages.account.edit.EditAccountPage.java", "BodyUseAPI": ["createClientLink.getPageParameters().add(java.lang.String,java.lang.Long)"], "Fixed commit": "c3cdf4ac02262c26dccd6721846af90290f5466e", "Url": "https://api.github.com/repos/simonberry2003/hillsballetweb", "Date": "2015-02-11T11:59:56Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (val > 127) val = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7671/buggy-version/src.main.java.com.easyinnova.tiff.model.IfdTags.java", "BodyUseAPI": [], "Fixed commit": "63b6fec5bf84140e88902cb1d6649c8b98a267f3", "Url": "https://api.github.com/repos/EasyinnovaSL/Tiff-Library-4J", "Date": "2017-05-24T11:55:18Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recipeCategories.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5457/buggy-version/src.main.java.mezz.jei.gui.RecipeGuiLogic.java", "BodyUseAPI": [], "Fixed commit": "73c473d499c392c664c64570c1a88ce5cfdb42a4", "Url": "https://api.github.com/repos/mezz/JustEnoughItems", "Date": "2015-11-27T19:06:14Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getTileEntity(net.minecraft.util.math.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tile instanceof de.teamlapen.vampirism.tileentity.TileTent) { ((de.teamlapen.vampirism.tileentity.TileTent) (tile)).setSpawn(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6629/buggy-version/src.main.java.de.teamlapen.vampirism.items.ItemTent.java", "BodyUseAPI": [], "Fixed commit": "6a8231e23620cfd251539d63ed72118c44471f3e", "Url": "https://api.github.com/repos/TeamLapen/Vampirism", "Date": "2016-06-22T16:00:54Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listeners) != null) { listeners.parallelStream().forEach(( listern) -> { listern.propertyChange(event); }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7761/buggy-version/domain.src.main.java.nl.fontys.sofa.limo.domain.BaseEntity.java", "BodyUseAPI": [], "Fixed commit": "fa3259426fc85208dd53c43384c02a1943b525e3", "Url": "https://api.github.com/repos/LogisticsImpactModel/LIMO", "Date": "2015-12-11T08:57:01Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getLayoutParams()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (lp == null) { lp = new android.widget.LinearLayout.LayoutParams(0, LinearLayout.LayoutParams.WRAP_CONTENT, 1); convertView.setLayoutParams(lp); }else { lp.weight = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1803/buggy-version/momock.src.com.momock.widget.PlainGridView.java", "BodyUseAPI": [], "Fixed commit": "be46c902a8bf9c6c5ba472ce070cab58c96b7942", "Url": "https://api.github.com/repos/momock/momock-android", "Date": "2012-11-29T14:29:03Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rowHeight) > 0) lp.height = rowHeight;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1803/buggy-version/momock.src.com.momock.widget.PlainGridView.java", "BodyUseAPI": [], "Fixed commit": "be46c902a8bf9c6c5ba472ce070cab58c96b7942", "Url": "https://api.github.com/repos/momock/momock-android", "Date": "2012-11-29T14:29:03Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tv.studer.smssync.PrefStore.isFirstSync(this)) { tv.studer.smssync.PrefStore.setMaxSyncedDate(this, PrefStore.DEFAULT_MAX_SYNCED_DATE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1278/buggy-version/android-client.src.tv.studer.smssync.SmsSyncService.java", "BodyUseAPI": [], "Fixed commit": "58f21daa15ec1591e3d07a1e753bc741d94b76f9", "Url": "https://api.github.com/repos/omikyle/android-sms", "Date": "2009-08-02T21:43:47Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newPassword.equals(confirmNewPassword)) == false) { redirectAttr.addFlashAttribute(\"error\", \"Les mots de passe ne correspondent pas.\"); return new org.springframework.web.servlet.ModelAndView(\"redirect:/profil\", model); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6279/buggy-version/src.main.java.co.simplon.kif.web.UserController.java", "BodyUseAPI": [], "Fixed commit": "115fb449a6dd8f566875b5b593b6f422f4513030", "Url": "https://api.github.com/repos/simplon-CQP-Java/kif", "Date": "2016-12-13T13:30:34Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["co.simplon.kif.core.service.UserService.findById(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((passwordEncoder.matches(password, user.getPassword())) == false) { redirectAttr.addFlashAttribute(\"error\", \"Le mot de passe est incorrect.\"); return new org.springframework.web.servlet.ModelAndView(\"redirect:/profil\", model); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6279/buggy-version/src.main.java.co.simplon.kif.web.UserController.java", "BodyUseAPI": [], "Fixed commit": "115fb449a6dd8f566875b5b593b6f422f4513030", "Url": "https://api.github.com/repos/simplon-CQP-Java/kif", "Date": "2016-12-13T13:30:34Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((resource.asObjectable().getFetchResult()) != null) && ((resource.asObjectable().getFetchResult().getStatus()) != null)) { if (OperationResultStatusType.PARTIAL_ERROR.equals(resource.asObjectable().getFetchResult().getStatus())) { lastAvailabilityStatus = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3844/buggy-version/gui.admin-gui.src.main.java.com.evolveum.midpoint.web.page.admin.resources.dto.ResourceDto.java", "BodyUseAPI": [], "Fixed commit": "57c59e38f6bece53f0b314f4ef20d4b566e5f9df", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2015-01-20T12:17:34Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((musicPlayer.getCurrentTrackTime()) == 0) seekBarProgress.setProgress(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4368/buggy-version/app.src.main.java.com.company.integer.vkmusic.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "aae9dad852a555c0243e2b21b3aedc374cb0af27", "Url": "https://api.github.com/repos/IntegerCompany/VkMusic", "Date": "2015-09-18T15:40:33Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentMenuItemId) == (R.id.nav_schedule)) addShadowToAppBar(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/550/buggy-version/android.app.src.main.java.org.fossasia.openevent.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7de4c8376038dad99580760e83e5b6cbfb604651", "Url": "https://api.github.com/repos/shreyasnbhat/open-event-android", "Date": "2016-08-23T16:43:35Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((knew.compareTo(seekStartKey)) < 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5953/buggy-version/src.main.java.edu.mit.ll.graphulo.apply.KeyRetainOnlyApply.java", "BodyUseAPI": [], "Fixed commit": "14ffa20f4b17d5dd5b5e021a5c974e5e0f8d2804", "Url": "https://api.github.com/repos/Accla/graphulo", "Date": "2015-08-06T07:10:47Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (idcService == null) { at.o2xfs.xfs.service.util.ExceptionUtil.nullArgument(\"idcService\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2679/buggy-version/at.o2xfs.operator.src.at.o2xfs.operator.task.xfs.idc.IDCCapabilities.java", "BodyUseAPI": [], "Fixed commit": "b9d6873ba5785561d44e5bf5d6e7cf0fc6e807f5", "Url": "https://api.github.com/repos/AndreasFagschlunger/O2Xfs", "Date": "2012-07-21T18:31:06Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (idcService == null) { at.o2xfs.xfs.service.util.ExceptionUtil.nullArgument(\"idcService\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2679/buggy-version/at.o2xfs.operator.src.at.o2xfs.operator.task.xfs.idc.IDCResetCountTask.java", "BodyUseAPI": [], "Fixed commit": "b9d6873ba5785561d44e5bf5d6e7cf0fc6e807f5", "Url": "https://api.github.com/repos/AndreasFagschlunger/O2Xfs", "Date": "2012-07-21T18:31:06Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (idcService == null) { at.o2xfs.xfs.service.util.ExceptionUtil.nullArgument(\"idcService\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2679/buggy-version/at.o2xfs.operator.src.at.o2xfs.operator.task.xfs.idc.IDCResetTask.java", "BodyUseAPI": [], "Fixed commit": "b9d6873ba5785561d44e5bf5d6e7cf0fc6e807f5", "Url": "https://api.github.com/repos/AndreasFagschlunger/O2Xfs", "Date": "2012-07-21T18:31:06Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (pinService == null) { at.o2xfs.xfs.service.util.ExceptionUtil.nullArgument(\"pinService\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2679/buggy-version/at.o2xfs.operator.src.at.o2xfs.operator.task.xfs.pin.PINCapabilitiesTask.java", "BodyUseAPI": [], "Fixed commit": "b9d6873ba5785561d44e5bf5d6e7cf0fc6e807f5", "Url": "https://api.github.com/repos/AndreasFagschlunger/O2Xfs", "Date": "2012-07-21T18:31:06Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pageableCollection) != null) { pageableCollection.setPageSize(numOfPageRows); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7752/buggy-version/pm4j-core.main.java.org.pm4j.core.pm.impl.PmTableImpl.java", "BodyUseAPI": [], "Fixed commit": "b8a2da4e9da28a9b1dfca688ccf87aa761e2ac39", "Url": "https://api.github.com/repos/pm4j/org.pm4j", "Date": "2012-03-30T09:04:27Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((intents.size()) == 0) { for (org.societies.api.internal.personalisation.model.IOutcome action : preferences) { this.implementIAction(action); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1241/buggy-version/user-agent.decision-making.src.main.java.org.societies.useragent.decisionmaking.AbstractDecisionMaker.java", "BodyUseAPI": [], "Fixed commit": "5c053e06385020674496e196fc36b869d5d926dd", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2012-05-24T14:24:04Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((preferences.size()) == 0) { for (org.societies.api.internal.personalisation.model.IOutcome action : intents) { this.implementIAction(action); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1241/buggy-version/user-agent.decision-making.src.main.java.org.societies.useragent.decisionmaking.AbstractDecisionMaker.java", "BodyUseAPI": [], "Fixed commit": "5c053e06385020674496e196fc36b869d5d926dd", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2012-05-24T14:24:04Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(to.isVector())) this.to = to.reshape(new int[]{ 1, to.length() }); else this.to = to;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2522/buggy-version/linear-algebra.linear-algebra-api.src.main.java.org.deeplearning4j.linalg.ops.TwoArrayOps.java", "BodyUseAPI": ["org.deeplearning4j.linalg.api.ndarray.INDArray.reshape(int[])", "org.deeplearning4j.linalg.api.ndarray.INDArray.length()"], "Fixed commit": "6ddc43479c6e1ae9b06a9c86c844f2afc5f3d688", "Url": "https://api.github.com/repos/agibsonccc/java-deeplearning", "Date": "2014-08-24T22:35:03Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(from.isVector())) this.from = from.reshape(new int[]{ 1, from.length() }); else this.from = from;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2522/buggy-version/linear-algebra.linear-algebra-api.src.main.java.org.deeplearning4j.linalg.ops.TwoArrayOps.java", "BodyUseAPI": ["org.deeplearning4j.linalg.api.ndarray.INDArray.length()", "org.deeplearning4j.linalg.api.ndarray.INDArray.reshape(int[])"], "Fixed commit": "6ddc43479c6e1ae9b06a9c86c844f2afc5f3d688", "Url": "https://api.github.com/repos/agibsonccc/java-deeplearning", "Date": "2014-08-24T22:35:03Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(other.isVector())) this.other = other.reshape(new int[]{ 1, other.length() }); else this.other = other;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2522/buggy-version/linear-algebra.linear-algebra-api.src.main.java.org.deeplearning4j.linalg.ops.TwoArrayOps.java", "BodyUseAPI": ["org.deeplearning4j.linalg.api.ndarray.INDArray.length()", "org.deeplearning4j.linalg.api.ndarray.INDArray.reshape(int[])"], "Fixed commit": "6ddc43479c6e1ae9b06a9c86c844f2afc5f3d688", "Url": "https://api.github.com/repos/agibsonccc/java-deeplearning", "Date": "2014-08-24T22:35:03Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pane.getSelectedIndex()) >= 0) ((classdiagrameditor.EditorPanel) (((javax.swing.JScrollPane) (pane.getComponentAt(pane.getSelectedIndex()))).getViewport().getView())).clearSelection();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8648/buggy-version/src.classdiagrameditor.ButtonTabComponent.java", "BodyUseAPI": ["javax.swing.JViewport.getView()", "java.awt.Component.getViewport()", "java.awt.Component.clearSelection()", "javax.swing.JTabbedPane.getSelectedIndex()", "javax.swing.JTabbedPane.getComponentAt(int)"], "Fixed commit": "0b64919c91ac7b680e0058d23d167ddc50646bd9", "Url": "https://api.github.com/repos/robertsebastian/cse5322", "Date": "2014-05-01T00:09:51Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.co.redfruit.gdx.skyisfalling.listeners.Body.getUserData()", "contact.getFixtureB().getBody()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((aUserData instanceof uk.co.redfruit.gdx.skyisfalling.game.objects.EnemyShip) && (groundBody.equals(b))) { ((uk.co.redfruit.gdx.skyisfalling.game.objects.EnemyShip) (aUserData)).setDestroyed(true); }else if ((groundBody.equals(a)) && (bUserData instanceof uk.co.redfruit.gdx.skyisfalling.game.objects.EnemyShip)) { ((uk.co.redfruit.gdx.skyisfalling.game.objects.EnemyShip) (bUserData)).setDestroyed(true); }else if ((aUserData instanceof uk.co.redfruit.gdx.skyisfalling.game.objects.Laser) && (groundBody.equals(b))) { laserHitsGround(((uk.co.redfruit.gdx.skyisfalling.game.objects.Laser) (aUserData))); }else if ((bUserData instanceof uk.co.redfruit.gdx.skyisfalling.game.objects.Laser) && (groundBody.equals(a))) { laserHitsGround(((uk.co.redfruit.gdx.skyisfalling.game.objects.Laser) (bUserData))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2715/buggy-version/core.src.uk.co.redfruit.gdx.skyisfalling.listeners.WorldContactListener.java", "BodyUseAPI": ["uk.co.redfruit.gdx.skyisfalling.listeners.Body.equals(uk.co.redfruit.gdx.skyisfalling.listeners.Body)", "uk.co.redfruit.gdx.skyisfalling.listeners.Body.equals(uk.co.redfruit.gdx.skyisfalling.listeners.Body)", "uk.co.redfruit.gdx.skyisfalling.listeners.Body.equals(uk.co.redfruit.gdx.skyisfalling.listeners.Body)"], "Fixed commit": "3ac0dab05bd116677f6b7707a5db0efdd4c35dd5", "Url": "https://api.github.com/repos/phunni/SkyIsFalling", "Date": "2016-01-11T18:25:31Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uk.co.redfruit.gdx.skyisfalling.utils.Constants.DEBUG) { Gdx.app.log(uk.co.redfruit.gdx.skyisfalling.game.Level.TAG, (((\"New explosion at: \" + (position.x)) + \", \") + (position.y))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2715/buggy-version/core.src.uk.co.redfruit.gdx.skyisfalling.game.Level.java", "BodyUseAPI": [], "Fixed commit": "3ac0dab05bd116677f6b7707a5db0efdd4c35dd5", "Url": "https://api.github.com/repos/phunni/SkyIsFalling", "Date": "2016-01-11T18:25:31Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getItemResult.getItem().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (value != null) { jsonWriter.key(key).object(); if ((value.getN()) != null) { jsonWriter.key(\"N\").value(value.getN()); }else if ((value.getS()) != null) { jsonWriter.key(\"S\").value(value.getS()); }else if ((value.getSS()) != null) { jsonWriter.key(\"SS\").value(value.getSS()); }else if ((value.getNS()) != null) { jsonWriter.key(\"NS\").value(value.getNS()); } jsonWriter.endObject(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/989/buggy-version/src.main.java.com.amazonaws.services.dynamodb.model.transform.GetItemResultMarshaller.java", "BodyUseAPI": ["com.amazonaws.services.dynamodb.model.transform.AttributeValue.getS()", "com.amazonaws.services.dynamodb.model.transform.AttributeValue.getS()", "com.amazonaws.services.dynamodb.model.transform.AttributeValue.getNS()", "com.amazonaws.services.dynamodb.model.transform.AttributeValue.getNS()", "com.amazonaws.services.dynamodb.model.transform.AttributeValue.getN()", "jsonWriter.key(\"S\").value(value.getS())", "com.amazonaws.services.dynamodb.model.transform.AttributeValue.getSS()", "com.amazonaws.services.dynamodb.model.transform.AttributeValue.getSS()", "jsonWriter.key(\"N\").value(value.getN())", "jsonWriter.key(\"SS\").value(value.getSS())", "jsonWriter.key(\"NS\").value(value.getNS())", "com.amazonaws.services.dynamodb.model.transform.AttributeValue.getN()"], "Fixed commit": "2be11e9683ce55ba2b405273a0a1141008420511", "Url": "https://api.github.com/repos/mboudreau/Alternator", "Date": "2012-09-11T20:27:44Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(model.containsAttribute(\"admin\"))) model.addAttribute(\"admin\", new org.group5.model.Admin());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/181/buggy-version/src.main.java.org.group5.controller.AdminController.java", "BodyUseAPI": ["org.springframework.ui.Model.addAttribute(java.lang.String,org.group5.model.Admin)"], "Fixed commit": "7b04aae07138b1118d792ccfc296bcf5d5a97b04", "Url": "https://api.github.com/repos/khatri-bijay/bookplus", "Date": "2016-07-13T10:54:56Z"},
{"Line": "=>2213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (mCryptoStore)) { getUIHandler().post(new java.lang.Runnable() { @java.lang.Override public void run() { callback.onSuccess(new byte[0]); } }); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8412/buggy-version/matrix-sdk.src.main.java.org.matrix.androidsdk.crypto.MXCrypto.java", "BodyUseAPI": [], "Fixed commit": "6b9b77b3c317e4c75e715f173bd782a512ee9666", "Url": "https://api.github.com/repos/matrix-org/matrix-android-sdk", "Date": "2017-09-11T06:52:12Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTimerThread) != null) { mTimerThread.mRunning = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5352/buggy-version/src.com.sleepyduck.fingerboardtrainer.TimerService.java", "BodyUseAPI": [], "Fixed commit": "039939c3a203a77a58d921f305b9f4398cd4f840", "Url": "https://api.github.com/repos/MrLogic85/FingerboardTrainer", "Date": "2015-02-03T15:01:48Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (segmentReader.getSegmentInfo().info.getUseCompoundFile()) { java.lang.String compoundFileName = org.apache.lucene.index.IndexFileNames.segmentFileName(segmentName, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION); dir = new org.apache.lucene.store.CompoundFileDirectory(dir, compoundFileName, org.apache.lucene.store.IOContext.READ, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4460/buggy-version/bobo-contrib.src.main.java.com.browseengine.bobo.geosearch.index.impl.GeoAtomicReader.java", "BodyUseAPI": [], "Fixed commit": "47cdcfb8cd05003d0f240b309c064810a9a6a154", "Url": "https://api.github.com/repos/gcooney/bobo", "Date": "2013-11-04T20:13:48Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Double.valueOf(java.lang.String)", "java.lang.Double.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(java.lang.Double.isFinite(textualVal))) || (!(java.lang.Double.isFinite(systemVal)))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3318/buggy-version/src.main.java.eu.fbk.ke4ir.util.DeltaExporter.java", "BodyUseAPI": [], "Fixed commit": "591b05aded35ac09e59541df3e44f7d3f9c551de", "Url": "https://api.github.com/repos/dkmfbk/ke4ir-evaluation", "Date": "2016-11-22T16:25:33Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.block.Sign.getAttachedFace()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sa == (org.bukkit.block.BlockFace.SOUTH)) { zdif = 1; }else if (sa == (org.bukkit.block.BlockFace.EAST)) { xdif = 1; }else if (sa == (org.bukkit.block.BlockFace.WEST)) { xdif = -1; }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2301/buggy-version/src.penowl.plugin.migs.InteractListener.java", "BodyUseAPI": [], "Fixed commit": "e1c57b339e94b80b694267b3be7011e1af0be114", "Url": "https://api.github.com/repos/PenguinOwl/minecraft-interactive-gui-shops", "Date": "2017-07-19T17:04:26Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8410/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "b829ef91eb366ae3123e1a60b7f587da6ca53cbd", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-13T10:57:21Z"},
{"Line": "=>910", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (aurora.V1.core.Game.logger.isDebugEnabled()) { aurora.V1.core.Game.logger.debug(\"Flip button pressed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8479/buggy-version/src.aurora.V1.core.Game.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "74323b48a91d0d30eee23fb96dea106d7d274c93", "Url": "https://api.github.com/repos/sguergachi/AuroraGameHub", "Date": "2013-03-26T16:37:29Z"},
{"Line": "=>565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(rcvd.contains(\"hbt\"))) || (!(rcvd.contains(\"hbtok\")))) java.lang.System.out.println(rcvd);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8961/buggy-version/Node.src.Node.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "a2fb3c76730d1b985f8bd7f4bda842c2d0162626", "Url": "https://api.github.com/repos/dinukasal/p2p_fs", "Date": "2017-10-25T16:01:47Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(command.equals(\"hbt\"))) || (!(command.equals(\"hbtok\")))) echo((\"command: \" + command));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8961/buggy-version/Node.src.Node.java", "BodyUseAPI": ["Node.echo(java.lang.String)"], "Fixed commit": "a2fb3c76730d1b985f8bd7f4bda842c2d0162626", "Url": "https://api.github.com/repos/dinukasal/p2p_fs", "Date": "2017-10-25T16:01:47Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(outString.contains(\"hbt\"))) || (!(outString.contains(\"hbtok\")))) { java.lang.System.out.println((((\"SENDING... => \" + outString) + \" to \") + outPort)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8961/buggy-version/Node.src.Node.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "a2fb3c76730d1b985f8bd7f4bda842c2d0162626", "Url": "https://api.github.com/repos/dinukasal/p2p_fs", "Date": "2017-10-25T16:01:47Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(str.contains(\"hbt\"))) || (!(str.contains(\"hbt\")))) echo((((((incoming.getAddress().getHostAddress()) + \" : \") + (incoming.getPort())) + \" - \") + str));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8961/buggy-version/Node.src.Node.java", "BodyUseAPI": ["Node.echo(java.lang.String)"], "Fixed commit": "a2fb3c76730d1b985f8bd7f4bda842c2d0162626", "Url": "https://api.github.com/repos/dinukasal/p2p_fs", "Date": "2017-10-25T16:01:47Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.aapzu.pentago.logic.Board.getMarble(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (m != null) { line.addCoordinate(new java.lang.Integer[]{ firstCoord, secondCoord }); if ((line.length()) >= length) { line.setSymbol(m.getSymbol()); return line; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5740/buggy-version/pentago.src.main.java.fi.aapzu.pentago.logic.BoardLineChecker.java", "BodyUseAPI": ["fi.aapzu.pentago.logic.Line.setSymbol(m.getSymbol())", "fi.aapzu.pentago.logic.marble.Marble.getSymbol()"], "Fixed commit": "856533ca833988765bab595cf459fbfa83a06d82", "Url": "https://api.github.com/repos/Aapzu/super-duper-pentago", "Date": "2016-02-22T18:24:47Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.cache.Cache<java.lang.String, java.util.regex.Pattern>.getIfPresent(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (permissionMatcher == null) { ru.tehkode.permissions.bukkit.ErrorReport.handleError((((\"While checking for regex match for \" + permission) + \" against expression \") + expression), new java.lang.Exception(\"PATTERN: NOT PRESENT\")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2773/buggy-version/src.main.java.ru.tehkode.permissions.RegExpMatcher.java", "BodyUseAPI": [], "Fixed commit": "80a22612fb09620e679039dfb991c053d545916d", "Url": "https://api.github.com/repos/sgdc3/PermissionsEx", "Date": "2016-04-29T22:27:06Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (throwable instanceof com.orientechnologies.common.exception.OException) throw ((com.orientechnologies.common.exception.OException) (throwable)); else if (throwable instanceof java.lang.Throwable) throw new com.orientechnologies.orient.enterprise.channel.binary.OResponseProcessingException(\"Exception during response processing.\", ((java.lang.Throwable) (throwable))); else com.orientechnologies.common.log.OLogManager.instance().error(this, (\"Error during exception serialization, serialized exception is not Throwable, exception type is \" + (throwable != null ? throwable.getClass().getName() : \"null\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7062/buggy-version/enterprise.src.main.java.com.orientechnologies.orient.enterprise.channel.binary.OChannelBinaryAsynchClient.java", "BodyUseAPI": ["java.lang.Object.getClass()", "com.orientechnologies.common.log.OLogManager.instance().error(com.orientechnologies.orient.enterprise.channel.binary.OChannelBinaryAsynchClient,java.lang.String)", "java.lang.Class<? extends java.lang.Object>.getName()"], "Fixed commit": "f48de1b6aac38785e259a74cbbf022e30bebd2c5", "Url": "https://api.github.com/repos/Blackspark/orientdb", "Date": "2014-04-10T23:05:40Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.geowe.client.local.layermanager.LayerManagerWidget.getSelectedLayer(LayerManagerWidget.VECTOR_TAB)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (layer == null) { layer = ((org.geowe.client.local.model.vector.VectorLayer) (event.getValue().getLayer())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1168/buggy-version/src.main.java.org.geowe.client.local.main.StatusPanelWidget.java", "BodyUseAPI": [], "Fixed commit": "811142a208d19423dd67d8146099675882b60732", "Url": "https://api.github.com/repos/geowe/geowe-core", "Date": "2016-10-04T12:24:10Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.egov.services.zuulproxy.listeners.ZuulProxyStartServerListener.logger.isInfoEnabled()) org.egov.services.zuulproxy.listeners.ZuulProxyStartServerListener.logger.info(\"Stopping Zuul Proxy server\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8132/buggy-version/egov.egov-services.src.main.java.org.egov.services.zuulproxy.listeners.ZuulProxyStartServerListener.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String)"], "Fixed commit": "74cb44ae4d7ce4c2c3fb9652040aa4d482650686", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2017-03-22T12:15:12Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.egov.services.zuulproxy.listeners.ZuulProxyStartServerListener.logger.isInfoEnabled()) org.egov.services.zuulproxy.listeners.ZuulProxyStartServerListener.logger.info(\"Starting Zuul Proxy server\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8132/buggy-version/egov.egov-services.src.main.java.org.egov.services.zuulproxy.listeners.ZuulProxyStartServerListener.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String)"], "Fixed commit": "74cb44ae4d7ce4c2c3fb9652040aa4d482650686", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2017-03-22T12:15:12Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gender != null) longi = emptyParadigm;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3734/buggy-version/src.de.unitrier.daalft.pali.morphology.strategy.NounStrategy.java", "BodyUseAPI": [], "Fixed commit": "5df40fcba76e8c87915235acaed6ecf0f6e0566e", "Url": "https://api.github.com/repos/daalft/PaliNLP2", "Date": "2014-07-09T12:39:25Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gender != null) u = emptyParadigm;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3734/buggy-version/src.de.unitrier.daalft.pali.morphology.strategy.NounStrategy.java", "BodyUseAPI": [], "Fixed commit": "5df40fcba76e8c87915235acaed6ecf0f6e0566e", "Url": "https://api.github.com/repos/daalft/PaliNLP2", "Date": "2014-07-09T12:39:25Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gender != null) longa = emptyParadigm;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3734/buggy-version/src.de.unitrier.daalft.pali.morphology.strategy.NounStrategy.java", "BodyUseAPI": [], "Fixed commit": "5df40fcba76e8c87915235acaed6ecf0f6e0566e", "Url": "https://api.github.com/repos/daalft/PaliNLP2", "Date": "2014-07-09T12:39:25Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gender != null) ant = emptyParadigm;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3734/buggy-version/src.de.unitrier.daalft.pali.morphology.strategy.NounStrategy.java", "BodyUseAPI": [], "Fixed commit": "5df40fcba76e8c87915235acaed6ecf0f6e0566e", "Url": "https://api.github.com/repos/daalft/PaliNLP2", "Date": "2014-07-09T12:39:25Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gender != null) us = emptyParadigm;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3734/buggy-version/src.de.unitrier.daalft.pali.morphology.strategy.NounStrategy.java", "BodyUseAPI": [], "Fixed commit": "5df40fcba76e8c87915235acaed6ecf0f6e0566e", "Url": "https://api.github.com/repos/daalft/PaliNLP2", "Date": "2014-07-09T12:39:25Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gender != null) a = emptyParadigm;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3734/buggy-version/src.de.unitrier.daalft.pali.morphology.strategy.NounStrategy.java", "BodyUseAPI": [], "Fixed commit": "5df40fcba76e8c87915235acaed6ecf0f6e0566e", "Url": "https://api.github.com/repos/daalft/PaliNLP2", "Date": "2014-07-09T12:39:25Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gender != null) as = emptyParadigm;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3734/buggy-version/src.de.unitrier.daalft.pali.morphology.strategy.NounStrategy.java", "BodyUseAPI": [], "Fixed commit": "5df40fcba76e8c87915235acaed6ecf0f6e0566e", "Url": "https://api.github.com/repos/daalft/PaliNLP2", "Date": "2014-07-09T12:39:25Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gender != null) ar = emptyParadigm;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3734/buggy-version/src.de.unitrier.daalft.pali.morphology.strategy.NounStrategy.java", "BodyUseAPI": [], "Fixed commit": "5df40fcba76e8c87915235acaed6ecf0f6e0566e", "Url": "https://api.github.com/repos/daalft/PaliNLP2", "Date": "2014-07-09T12:39:25Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gender != null) longu = emptyParadigm;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3734/buggy-version/src.de.unitrier.daalft.pali.morphology.strategy.NounStrategy.java", "BodyUseAPI": [], "Fixed commit": "5df40fcba76e8c87915235acaed6ecf0f6e0566e", "Url": "https://api.github.com/repos/daalft/PaliNLP2", "Date": "2014-07-09T12:39:25Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gender != null) in = emptyParadigm;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3734/buggy-version/src.de.unitrier.daalft.pali.morphology.strategy.NounStrategy.java", "BodyUseAPI": [], "Fixed commit": "5df40fcba76e8c87915235acaed6ecf0f6e0566e", "Url": "https://api.github.com/repos/daalft/PaliNLP2", "Date": "2014-07-09T12:39:25Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gender != null) i = emptyParadigm;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3734/buggy-version/src.de.unitrier.daalft.pali.morphology.strategy.NounStrategy.java", "BodyUseAPI": [], "Fixed commit": "5df40fcba76e8c87915235acaed6ecf0f6e0566e", "Url": "https://api.github.com/repos/daalft/PaliNLP2", "Date": "2014-07-09T12:39:25Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gender != null) an = emptyParadigm;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3734/buggy-version/src.de.unitrier.daalft.pali.morphology.strategy.NounStrategy.java", "BodyUseAPI": [], "Fixed commit": "5df40fcba76e8c87915235acaed6ecf0f6e0566e", "Url": "https://api.github.com/repos/daalft/PaliNLP2", "Date": "2014-07-09T12:39:25Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(treeColumn.getColumn().isDisposed())) { treeColumn.getColumn().setWidth(width); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7254/buggy-version/Plugins.org.opendarts.ui.src.main.java.org.opendarts.ui.utils.listener.GrabColumnsListener.java", "BodyUseAPI": ["org.eclipse.jface.viewers.TreeViewerColumn.getColumn()", "treeColumn.getColumn().setWidth(int)"], "Fixed commit": "8f0c32e84aab8a13f3d6a5ce4be51d0a8c8b6278", "Url": "https://api.github.com/repos/ilaborie/OpenDarts", "Date": "2011-10-18T17:21:15Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tableColumn.getColumn().isDisposed())) { tableColumn.getColumn().setWidth(width); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7254/buggy-version/Plugins.org.opendarts.ui.src.main.java.org.opendarts.ui.utils.listener.GrabColumnsListener.java", "BodyUseAPI": ["tableColumn.getColumn().setWidth(int)", "org.eclipse.jface.viewers.TableViewerColumn.getColumn()"], "Fixed commit": "8f0c32e84aab8a13f3d6a5ce4be51d0a8c8b6278", "Url": "https://api.github.com/repos/ilaborie/OpenDarts", "Date": "2011-10-18T17:21:15Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getWidth()) == 0) && ((getHeight()) == 0)) { populateFrame(image, progress); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4377/buggy-version/library.src.main.java.com.cube.storm.ui.view.ImageView.java", "BodyUseAPI": [], "Fixed commit": "c486e9c10b80672e9829a4284fd674dcae0ef77f", "Url": "https://api.github.com/repos/3sidedcube/Android-LightningUi", "Date": "2016-10-13T09:27:43Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.atomic.AtomicInteger.decrementAndGet()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (r == 0) { sem.release(parties); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7653/buggy-version/hw2.src.q1.CyclicBarrier.java", "BodyUseAPI": [], "Fixed commit": "103e2897be8fff1cc8b494c5e6db56212e1a49c9", "Url": "https://api.github.com/repos/dinhvan5481/ee360p-multiple-cores-computing", "Date": "2016-10-06T01:16:52Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(potion.equals(\"null\"))) { java.lang.String[] parts = potion.split(\"/\"); org.bukkit.inventory.meta.PotionMeta potionM = ((org.bukkit.inventory.meta.PotionMeta) (item.getItemMeta())); org.bukkit.potion.PotionData potionD = new org.bukkit.potion.PotionData(org.bukkit.potion.PotionType.valueOf(parts[0]), java.lang.Boolean.parseBoolean(parts[1]), java.lang.Boolean.parseBoolean(parts[2])); potionM.setBasePotionData(potionD); item.setItemMeta(potionM); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7784/buggy-version/src.listeners.SaveLoadSQL.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "70123032ebe7bbc39f1fafc09384b7510b888b1e", "Url": "https://api.github.com/repos/michael1011/BackPacks", "Date": "2016-03-25T19:59:41Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.geolocalizacion) == null) return false; else return (this.getGeolocalizacion().calcularDistanciaEnCuadras(geolocalizacion)) < 5;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4644/buggy-version/src.main.java.ar.edu.utn.frba.dds.model.poi.PuntoDeInteres.java", "BodyUseAPI": [], "Fixed commit": "0573cda333dc53eaa3c2f4eed5865d2880b9ac1f", "Url": "https://api.github.com/repos/derek90/DDS2016", "Date": "2016-12-19T16:56:46Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.geolocalizacion) == null) return false; else return (this.getGeolocalizacion().calcularDistanciaEnCuadras(geolocalizacion)) < (this.getRubro().obtenerRadioCercania());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4644/buggy-version/src.main.java.ar.edu.utn.frba.dds.model.poi.local.comercial.LocalComercial.java", "BodyUseAPI": [], "Fixed commit": "0573cda333dc53eaa3c2f4eed5865d2880b9ac1f", "Url": "https://api.github.com/repos/derek90/DDS2016", "Date": "2016-12-19T16:56:46Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(pbFlag)) { pb.setIndeterminate(false); pbFlag = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3594/buggy-version/src.org.qii.weiciyuan.ui.browser.SimpleBitmapWorkerTask.java", "BodyUseAPI": [], "Fixed commit": "e019842f1ce907e42d82738ccd20edff92c760db", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-29T07:26:14Z"},
{"Line": "=>916", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(t.name.eq(type))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7831/buggy-version/src.main.java.org.basex.query.value.type.AtomType.java", "BodyUseAPI": [], "Fixed commit": "4094e25cc2cfc631d6b0116da5e93a8e94d3bd4e", "Url": "https://api.github.com/repos/BaseXdb/basex", "Date": "2013-03-29T08:41:03Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["yimin.sun.endlessscroller.EndlessRViewAdapter.FooterVH.getLayoutParams()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (params instanceof android.support.v7.widget.StaggeredGridLayoutManager.LayoutParams) { ((android.support.v7.widget.StaggeredGridLayoutManager.LayoutParams) (params)).setFullSpan(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3603/buggy-version/endlessscroller.src.main.java.yimin.sun.endlessscroller.EndlessRViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "03fb53ec71c80f2df1393fc65c8095a928073ca7", "Url": "https://api.github.com/repos/em020/rv-endless-scroller", "Date": "2017-10-01T07:54:43Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(destination.projects.contains(project))) { opts.put(project.id.toString(), project.displayName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8639/buggy-version/app.models.Project.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.Long.toString()"], "Fixed commit": "3f9e19f4600991f479c00d52379952c474288fe9", "Url": "https://api.github.com/repos/surevine/gateway-management", "Date": "2014-10-14T10:56:51Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.projects.contains(project))) { this.projects.add(project); this.update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8639/buggy-version/app.models.Destination.java", "BodyUseAPI": ["java.util.List<models.Project>.add(models.Project)"], "Fixed commit": "3f9e19f4600991f479c00d52379952c474288fe9", "Url": "https://api.github.com/repos/surevine/gateway-management", "Date": "2014-10-14T10:56:51Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (treeReference != null) { this.serializedTreeRef = org.smap.surveyModel.utils.JRSerializer.serializeTreeRef(index.getReference()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1024/buggy-version/src.main.java.org.smap.surveyModel.utils.JRSerializer.java", "BodyUseAPI": [], "Fixed commit": "a884679385fba88093e154cbef03274fb4dc8856", "Url": "https://api.github.com/repos/smap-consulting/smap-survey-manager", "Date": "2014-09-28T09:10:03Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (open.compareAndSet(true, false)) { fileChannel.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1628/buggy-version/ambry-store.src.main.java.com.github.ambry.store.LogSegment.java", "BodyUseAPI": [], "Fixed commit": "6416b3c0f2a5c0390946a5ff165eec9a18f93f5c", "Url": "https://api.github.com/repos/linkedin/ambry", "Date": "2016-11-11T01:26:32Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(encryptorConfiguration.isUnsatisfied())) { encryptorConfiguration.get().configure(configuration); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2352/buggy-version/src.com.sifionsolution.vraptor.encryptor.EncryptorExecutor.java", "BodyUseAPI": ["javax.enterprise.inject.Instance<com.sifionsolution.vraptor.encryptor.configuration.EncryptorConfiguration>.get()", "encryptorConfiguration.get().configure(com.sifionsolution.vraptor.encryptor.configuration.CustomAnnotationConfiguration)"], "Fixed commit": "f29a451fe100e9802c2fa3527ab17886d1d189c2", "Url": "https://api.github.com/repos/SifionSolution/vraptor-encryptor", "Date": "2014-08-14T17:08:22Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tableList.size()) == 1) { tableList.get(0).setNextTable(tableList.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8018/buggy-version/src.shared.MasterImpl.java", "BodyUseAPI": ["java.util.List<shared.Table>.get(int)", "tableList.get(0).setNextTable(tableList.get(0))", "java.util.List<shared.Table>.get(int)"], "Fixed commit": "f79b9497c8f2b0d99ae98ab918b18554a4ed1a09", "Url": "https://api.github.com/repos/Mirar1103/VerteilteSysteme", "Date": "2016-06-21T22:40:18Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((timeSeriesNames != null) && ((timeSeriesNames.get(i)) != null)) timeSeriesUnivariateList.get(i).setName(timeSeriesNames.get(i)); else timeSeriesUnivariateList.get(i).setName(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4719/buggy-version/src.main.java.com.github.TKnudsen.timeseries.data.multivariate.TimeSeriesMultivariate.java", "BodyUseAPI": [], "Fixed commit": "a0f068c4e8a224b15c721ad355b4869bf2ee6936", "Url": "https://api.github.com/repos/TKnudsen/timeSeries", "Date": "2017-03-08T09:02:25Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (goalBlock == ((N) * (N))) { goal[i][j] = 0; }else { goal[i][j] = goalBlock; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8964/buggy-version/4_8puzzle.Board.java", "BodyUseAPI": [], "Fixed commit": "3afa95804b5002ebc49549ecb08541edc9aaf422", "Url": "https://api.github.com/repos/tologon/algs4", "Date": "2015-10-13T00:42:15Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.base.Optional.fromNullable(parent.getFirstChild().getFirstChild())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((annotation.isPresent()) && ((annotation.get().getType()) == (com.puppycrawl.tools.checkstyle.api.TokenTypes.ANNOTATION))) { final com.google.common.base.Optional<com.puppycrawl.tools.checkstyle.api.DetailAST> overrideToken = com.google.common.base.Optional.fromNullable(annotation.get().findFirstToken(TokenTypes.IDENT)); if ((overrideToken.isPresent()) && (\"Override\".equals(overrideToken.get().getText()))) { overridden = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/433/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.naming.ParameterNameCheck.java", "BodyUseAPI": ["com.google.common.base.Optional.fromNullable(annotation.get().findFirstToken(TokenTypes.IDENT))", "com.google.common.base.Optional<com.puppycrawl.tools.checkstyle.api.DetailAST>.get()", "annotation.get().findFirstToken(TokenTypes.IDENT)"], "Fixed commit": "2d9612afad173a328283e66bb5adc24aa507f6b6", "Url": "https://api.github.com/repos/MEZk/checkstyle", "Date": "2015-12-08T20:04:22Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (obj instanceof net.sf.anathema.character.equipment.impl.character.model.stats.ArtifactStats) return stats.equals(obj);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/9165/buggy-version/Character_Equipment_Impl.src.net.sf.anathema.character.equipment.impl.character.model.stats.ArtifactStatsDecorator.java", "BodyUseAPI": ["net.sf.anathema.character.generic.equipment.IArtifactStats.equals(java.lang.Object)"], "Fixed commit": "18c9b35337cc3b10705c2c219525da0910f601b0", "Url": "https://api.github.com/repos/anathema/anathema", "Date": "2012-03-19T20:14:45Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (formed) { return outputOfPer * count; }else return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7297/buggy-version/src.main.java.panda2134.CLG.util.GeneratorMultiblockHelper.java", "BodyUseAPI": [], "Fixed commit": "4d8da1f2b706146f004e7e8465c5b934c787d0b8", "Url": "https://api.github.com/repos/panda2134/CompactLavaGenerator", "Date": "2015-10-23T05:45:38Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.stateContext.getStartNode()) == null) || ((this.stateContext.getEndNode()) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2165/buggy-version/BaseModel.src.com.wpi.cs509.teamA.ui.InputPanel.java", "BodyUseAPI": [], "Fixed commit": "09a61d9fe23d5960103c769e9a227453aa1804b6", "Url": "https://api.github.com/repos/cuixiongyi/WPI-F2015-CS509-TeamA", "Date": "2015-12-01T01:04:02Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((msgCtx.getOperationContext()) != null) { java.lang.String MEP = msgCtx.getOperationContext().getAxisOperation().getMessageExchangePattern(); waitingState = (\"http://www.w3.org/ns/wsdl/out-in\".equals(MEP)) || (\"http://www.w3.org/ns/wsdl/in-out\".equals(MEP)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/168/buggy-version/modules.transport.base.src.main.java.org.apache.axis2.transport.base.AbstractTransportSender.java", "BodyUseAPI": ["msgCtx.getOperationContext().getAxisOperation()", "org.apache.axis2.context.MessageContext.getOperationContext()", "msgCtx.getOperationContext().getAxisOperation().getMessageExchangePattern()"], "Fixed commit": "d50ec6baf1bf8a629fb564c6d408fe1f3a354594", "Url": "https://api.github.com/repos/sanjeewa-malalgoda/wso2-axis2-1", "Date": "2017-10-25T12:24:17Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((avgStepET.getText()) != null) && (!(avgStepET.getText().toString().equals(\"\")))) { editor.putInt(\"avgStepInM\", java.lang.Integer.parseInt(avgStepET.getText().toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2968/buggy-version/app.src.main.java.com.project.so2.walkmeapp.ui.Settings.java", "BodyUseAPI": ["avgStepET.getText().toString()", "android.widget.EditText.getText()", "SharedPreferences.Editor.putInt(java.lang.String,int)", "java.lang.Integer.parseInt(avgStepET.getText().toString())"], "Fixed commit": "ff7d6c96dfced6a2fed45487989c0bd72d313dad", "Url": "https://api.github.com/repos/AndreaM16/WalkMeApp", "Date": "2016-01-31T17:45:10Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((stepLengthET.getText()) != null) && (!(stepLengthET.getText().toString().equals(\"\")))) { editor.putInt(\"stepLength\", java.lang.Integer.parseInt(stepLengthET.getText().toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2968/buggy-version/app.src.main.java.com.project.so2.walkmeapp.ui.Settings.java", "BodyUseAPI": ["stepLengthET.getText().toString()", "android.widget.EditText.getText()", "SharedPreferences.Editor.putInt(java.lang.String,int)", "java.lang.Integer.parseInt(stepLengthET.getText().toString())"], "Fixed commit": "ff7d6c96dfced6a2fed45487989c0bd72d313dad", "Url": "https://api.github.com/repos/AndreaM16/WalkMeApp", "Date": "2016-01-31T17:45:10Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((lastMetersET.getText()) != null) && (!(lastMetersET.getText().toString().equals(\"\")))) { editor.putInt(\"lastXMeters\", java.lang.Integer.parseInt(lastMetersET.getText().toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2968/buggy-version/app.src.main.java.com.project.so2.walkmeapp.ui.Settings.java", "BodyUseAPI": ["lastMetersET.getText().toString()", "java.lang.Integer.parseInt(lastMetersET.getText().toString())", "android.widget.EditText.getText()", "SharedPreferences.Editor.putInt(java.lang.String,int)"], "Fixed commit": "ff7d6c96dfced6a2fed45487989c0bd72d313dad", "Url": "https://api.github.com/repos/AndreaM16/WalkMeApp", "Date": "2016-01-31T17:45:10Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((flight.id) == 1083) && ((takeoffTime) == 9590)) { java.lang.System.out.println((((((((((\"1083 f:\" + (cost)) + \" \") + (takeoffTime)) + \" \") + (aircraft.id)) + \" \") + (earliness)) + \" \") + (delay))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5032/buggy-version/airlinerecovery_lastfight.src.sghku.tianchi.IntelligentAviation.entity.FlightArc.java", "BodyUseAPI": ["java.io.PrintStream.println((((((((((\"1083 f:\" + (cost)) + \" \") + (takeoffTime)) + \" \") + (aircraft.id)) + \" \") + (earliness)) + \" \") + (delay)))"], "Fixed commit": "c3fba322d2a9d9b1e06e0743040b9c673b6ea005", "Url": "https://api.github.com/repos/zdpony/airline_lastfight", "Date": "2017-09-04T06:06:28Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((msg.contains(\"PDT+P\")) || (msg.contains(\"PDT+V\"))) || (msg.contains(\"PDT+A\"))) && (msg.contains(\"UNS\"))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5462/buggy-version/gtas-parent.gtas-loader.src.main.java.gov.gtas.services.ApisMessageService.java", "BodyUseAPI": [], "Fixed commit": "e6c3c21d8ff59a4d525cacaaeb13d20930de8a79", "Url": "https://api.github.com/repos/US-CBP/GTAS", "Date": "2017-06-14T17:21:15Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(storageDir.mkdirs())) && (!(storageDir.exists()))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8694/buggy-version/javamelody-core.src.main.java.net.bull.javamelody.internal.model.StorageLock.java", "BodyUseAPI": [], "Fixed commit": "dc62aa93e7e8b885b6c948ec52e46ef01ee1fa5d", "Url": "https://api.github.com/repos/majk1/javamelody", "Date": "2017-11-17T21:04:20Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.reactivesocket.FrameFlyweight.flags(java.nio.ByteBuffer)", "io.reactivesocket.FrameFlyweight.dataLength(java.nio.ByteBuffer,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((io.reactivesocket.FrameFlyweight.FLAGS_C) == (flags & (io.reactivesocket.FrameFlyweight.FLAGS_C))) && (0 < dataLength)) { result = FrameType.NEXT_COMPLETE; }else if ((io.reactivesocket.FrameFlyweight.FLAGS_C) == (flags & (io.reactivesocket.FrameFlyweight.FLAGS_C))) { result = FrameType.COMPLETE; }else { result = FrameType.NEXT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1497/buggy-version/src.main.java.io.reactivesocket.FrameFlyweight.java", "BodyUseAPI": [], "Fixed commit": "bace78eee026c7c7be40fcc262bb574ee542a001", "Url": "https://api.github.com/repos/NiteshKant/reactivesocket-java", "Date": "2015-08-06T17:27:04Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.servoy.eclipse.ui.editors.TextDialogCellEditor.doGetValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (val instanceof java.lang.String) { val = PersistPropertySource.DEFAULT_STRING_CONVERTER.convertValue(null, ((java.lang.String) (val))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4661/buggy-version/com.servoy.eclipse.ui.src.com.servoy.eclipse.ui.editors.ColorCellEditor.java", "BodyUseAPI": [], "Fixed commit": "c251bc874dcee7ac16e5adb30629267607cf51c4", "Url": "https://api.github.com/repos/Servoy/servoy-eclipse", "Date": "2016-01-08T12:55:04Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (recommendations.containsKey(recommendation.getRecommendationTitle())) { throw new java.lang.Exception((((\"Duplicate recommendation: \" + (recommendation.getRecommendationTitle())) + \"; current list: \") + recommendations)); }else { recommendations.put(recommendation.getRecommendationTitle(), new org.wikipedia.citolytics.seealso.types.WikiSimComparableResult(recommendation.getRecommendationTitle(), recommendation.getScore(), recommendation.getRecommendationId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6471/buggy-version/src.main.java.org.wikipedia.citolytics.seealso.operators.RecommendationSetBuilder.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.wikipedia.citolytics.seealso.types.WikiSimComparableResult>.put(recommendation.getRecommendationTitle(),org.wikipedia.citolytics.seealso.types.WikiSimComparableResult)", "org.wikipedia.citolytics.cpa.types.Recommendation.getRecommendationId()", "org.wikipedia.citolytics.cpa.types.Recommendation.getRecommendationTitle()", "org.wikipedia.citolytics.cpa.types.Recommendation.getScore()", "org.wikipedia.citolytics.cpa.types.Recommendation.getRecommendationTitle()", "org.wikipedia.citolytics.cpa.types.Recommendation.getRecommendationTitle()"], "Fixed commit": "8a94c4e94591fbe16512a3530ffb52ae4f56343e", "Url": "https://api.github.com/repos/wikimedia/citolytics", "Date": "2017-06-29T04:14:52Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (site.isSimulator()) { row = addOnDemandRepositorySection(row, boxwidth, TLS, actorType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5111/buggy-version/xdstools2.src.main.java.gov.nist.toolkit.xdstools2.client.tabs.actorConfigTab.ActorConfigTab.java", "BodyUseAPI": [], "Fixed commit": "b46c8aa14959b7dad788a4569372cf89f8e69689", "Url": "https://api.github.com/repos/usnistgov/iheos-toolkit2", "Date": "2017-12-27T19:55:46Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ActorType.MHD_DOC_RECIPIENT.equals(actorType)) { actorTypeLabel.setHTML(gov.nist.toolkit.http.client.HtmlMarkup.bold(ActorType.FHIR_SERVER.getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5111/buggy-version/xdstools2.src.main.java.gov.nist.toolkit.xdstools2.client.tabs.actorConfigTab.ActorConfigTab.java", "BodyUseAPI": [], "Fixed commit": "b46c8aa14959b7dad788a4569372cf89f8e69689", "Url": "https://api.github.com/repos/usnistgov/iheos-toolkit2", "Date": "2017-12-27T19:55:46Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (element instanceof org.eclipse.jdt.core.dom.Initializer) { java.lang.System.out.println(element); continue; }else if (element instanceof org.eclipse.jdt.core.dom.FieldDeclaration) { org.eclipse.jdt.core.dom.FieldDeclaration fieldDeclaration = ((org.eclipse.jdt.core.dom.FieldDeclaration) (element)); if (isFieldNeedPreparation(fieldDeclaration)) { visitWith(fieldDeclaration, true); continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5903/buggy-version/sources.net.sf.j2s.core.src.net.sf.j2s.core.astvisitors.ASTScriptVisitor.java", "BodyUseAPI": ["java.io.PrintStream.println(org.eclipse.jdt.core.dom.ASTNode)"], "Fixed commit": "a456b6244afaa080d68eff9b7fbdd8b43069bf74", "Url": "https://api.github.com/repos/BobHanson/java2script", "Date": "2017-06-13T21:35:44Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (s != null) { for (net.fe.modifier.Modifier m : s.getModifiers()) { m.modifyShop(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8607/buggy-version/src.net.fe.builderStage.ShopMenu.java", "BodyUseAPI": [], "Fixed commit": "fa750205fb7eed7e4aabd1418b1b24a7fc669a01", "Url": "https://api.github.com/repos/chudooder/FEMultiplayer", "Date": "2014-02-02T05:10:34Z"},
{"Line": "=>731", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<entities.TossedItem>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(item.getIsBeingDragged())) { removeTossedItem(item); decrementLives(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8641/buggy-version/src.game.Game.java", "BodyUseAPI": ["game.Game.removeTossedItem(entities.TossedItem)"], "Fixed commit": "2ab656cbf5ccf04162bc161648aac0100b774076", "Url": "https://api.github.com/repos/KevMurph/COSC150-P4", "Date": "2015-04-28T21:05:45Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((actionBarWorkoutPlanPickerFragment) != null) { if ((actionBarWorkoutPlanPickerFragment.getCurrentWorkoutplan()) != null) { workoutplanSQLDump = new com.workout.log.db.WorkoutplanSQLDumpHelper(getActivity()); java.io.File sqlDump = workoutplanSQLDump.createSQLDump(actionBarWorkoutPlanPickerFragment.getCurrentWorkoutplan()); return sqlDump; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7290/buggy-version/WorkoutLog.src.com.workout.log.ManageWorkoutplan.java", "BodyUseAPI": [], "Fixed commit": "9abf918c9bf69fdc73b7cede1a1afeec54817300", "Url": "https://api.github.com/repos/es059/Mobile-Anwendungen", "Date": "2014-08-15T14:38:01Z"},
{"Line": "=>736", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(nw)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6997/buggy-version/JSAT.src.jsat.classifiers.trees.DecisionStump.java", "BodyUseAPI": [], "Fixed commit": "ad8f131d6323edbc63532e28670dad9fcb4ee2c9", "Url": "https://api.github.com/repos/EdwardRaff/JSAT", "Date": "2016-07-05T02:47:42Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((mem != null) && ((mem.length()) > 0)) { if ((mem.getBytes()[0]) == '{') { org.json.JSONObject memObj = new org.json.JSONObject(mem); mem = memObj.getString(\"member_id\"); } s = (s + mem) + (el.getMemberSplitter()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5596/buggy-version/app.src.main.java.ru.vat78.fotimetracker.fengoffice.vatApi.ApiTasks.java", "BodyUseAPI": ["java.lang.String.getBytes()"], "Fixed commit": "f2b3f273897bf7456a582a4c380c9f063c8fdba2", "Url": "https://api.github.com/repos/vat78/FengOffice_TimeTracker", "Date": "2017-04-19T09:14:19Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((mem != null) && ((mem.length()) > 0)) { if ((mem.getBytes()[0]) == '{') { org.json.JSONObject memObj = new org.json.JSONObject(mem); mem = memObj.getString(\"member_id\"); } s = (s + mem) + (el.getMemberSplitter()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5596/buggy-version/app.src.main.java.ru.vat78.fotimetracker.fengoffice.vatApi.ApiTimeslots.java", "BodyUseAPI": ["java.lang.String.getBytes()"], "Fixed commit": "f2b3f273897bf7456a582a4c380c9f063c8fdba2", "Url": "https://api.github.com/repos/vat78/FengOffice_TimeTracker", "Date": "2017-04-19T09:14:19Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(image.isStencil())) { try { org.verapdf.model.pdlayer.PDColorSpace buffer = org.verapdf.model.factory.colors.ColorSpaceFactory.getColorSpace(image.getColorSpace()); if (buffer != null) { java.util.List<org.verapdf.model.pdlayer.PDColorSpace> colorSpaces = new java.util.ArrayList(MAX_NUMBER_OF_ELEMENTS); colorSpaces.add(buffer); return java.util.Collections.unmodifiableList(colorSpaces); } } catch (java.io.IOException e) { org.verapdf.model.impl.pb.pd.images.PBoxPDXImage.LOGGER.error((\"Problems with color space obtaining from Image XObject. \" + (e.getMessage())), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/752/buggy-version/model-implementation.src.main.java.org.verapdf.model.impl.pb.pd.images.PBoxPDXImage.java", "BodyUseAPI": ["org.verapdf.model.factory.colors.ColorSpaceFactory.getColorSpace(image.getColorSpace())", "org.apache.pdfbox.pdmodel.graphics.image.PDImage.getColorSpace()"], "Fixed commit": "3eaf238e2dc9e85aa20626c47e989ab0a4dad5b6", "Url": "https://api.github.com/repos/BezrukovM/veraPDF-library", "Date": "2015-11-06T11:03:52Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kabouzeid.gramophone.model.Album.getYear()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (year > 0) { return java.lang.String.valueOf(year); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3911/buggy-version/app.src.main.java.com.kabouzeid.gramophone.adapter.album.HorizontalAlbumAdapter.java", "BodyUseAPI": ["java.lang.String.valueOf(int)"], "Fixed commit": "f3ef91c4064b2b18fcfcd05b9fcccb4eabe52951", "Url": "https://api.github.com/repos/kabouzeid/Phonograph", "Date": "2017-11-21T00:06:31Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((enemy.getDefense()) > 0) enemy.addDefense((-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5240/buggy-version/Player.java", "BodyUseAPI": ["Enemy.addDefense(int)"], "Fixed commit": "f0b5cd07d6839ab993c61434f2fb09f6cef44b7d", "Url": "https://api.github.com/repos/AFlyingCar/DungeonVania", "Date": "2015-05-19T02:20:51Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enemy == null) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5240/buggy-version/Player.java", "BodyUseAPI": [], "Fixed commit": "f0b5cd07d6839ab993c61434f2fb09f6cef44b7d", "Url": "https://api.github.com/repos/AFlyingCar/DungeonVania", "Date": "2015-05-19T02:20:51Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(action.getAction())) { sink.text(\".\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1570/buggy-version/maven-changes-plugin.src.main.java.org.apache.maven.plugin.changes.ChangesReportGenerator.java", "BodyUseAPI": [], "Fixed commit": "4b86185f6356f1f3d62cbbbb0105683fcfbdda00", "Url": "https://api.github.com/repos/PascalSchumacher/maven-plugins", "Date": "2016-10-02T17:08:22Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getGame().getAction().getChoix()) == (application.globale.Globals.choixActionFusionEchangeAchatVente)) { java.util.ArrayList<java.util.ArrayList<java.lang.String>> arrayPrime = getGame().getPrime(); sendPrimeTchat(arrayPrime); nextTurnAction(); }else { nextTurnAction(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3785/buggy-version/src.application.rmi.Serveur.java", "BodyUseAPI": [], "Fixed commit": "3cf88dabc95efef094f2e7eb2a47534a9155e2b3", "Url": "https://api.github.com/repos/julienremydev/Acquire", "Date": "2016-05-05T17:45:41Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.xml.security.algorithms.JCEMapper.getJCEKeyAlgorithmFromURI(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((keyAlgorithm == null) || (\"\".equals(keyAlgorithm))) { keyAlgorithm = org.apache.xml.security.algorithms.JCEMapper.translateURItoJCEID(symEncAlgo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/679/buggy-version/wss-client-for-android.src.de.kp.wsclient.security.SecUtil.java", "BodyUseAPI": [], "Fixed commit": "95a9839142a91089e7d55cf2d8c2d40a59a9d17f", "Url": "https://api.github.com/repos/skrusche63/WSS-Client-for-Android", "Date": "2012-04-11T09:43:07Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isInfinite((resumeOfPhase / objectiveOfPhase))) { percent = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2356/buggy-version/src.main.java.eui.miw.pfm.controllers.beans.TargetBean.java", "BodyUseAPI": [], "Fixed commit": "54de97c9f9e41f8b05095c2a686c3b20a180ff63", "Url": "https://api.github.com/repos/miw-pfm/pfm", "Date": "2014-06-12T12:46:52Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scheduleDataFactory) != null) scheduleDataFactory.resume();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5502/buggy-version/MyApplication.app.src.main.java.com.readyo.app.fragments.navigation.FragmentShowDetails.java", "BodyUseAPI": [], "Fixed commit": "1ede1e329c6c48205c0f615ef2d7345d1d7a1683", "Url": "https://api.github.com/repos/ilansas/Ready-O", "Date": "2015-01-29T16:31:34Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scheduleDataFactory) != null) scheduleDataFactory.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5502/buggy-version/MyApplication.app.src.main.java.com.readyo.app.fragments.navigation.FragmentShowDetails.java", "BodyUseAPI": [], "Fixed commit": "1ede1e329c6c48205c0f615ef2d7345d1d7a1683", "Url": "https://api.github.com/repos/ilansas/Ready-O", "Date": "2015-01-29T16:31:34Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scheduleDataFactory) != null) scheduleDataFactory.destroy();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5502/buggy-version/MyApplication.app.src.main.java.com.readyo.app.fragments.navigation.FragmentShowDetails.java", "BodyUseAPI": [], "Fixed commit": "1ede1e329c6c48205c0f615ef2d7345d1d7a1683", "Url": "https://api.github.com/repos/ilansas/Ready-O", "Date": "2015-01-29T16:31:34Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileId == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4068/buggy-version/src.main.java.org.jbei.ice.servlet.FileDownloadServlet.java", "BodyUseAPI": [], "Fixed commit": "4517c98d2035b62aac67ca5238fb6d3dd85bf8f6", "Url": "https://api.github.com/repos/JBEI/ice", "Date": "2015-09-15T21:25:16Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((handlerExecutor) != null) handlerExecutor.shutdown();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2314/buggy-version/whois-api.src.main.java.net.ripe.db.whois.api.mail.dequeue.MessageDequeue.java", "BodyUseAPI": [], "Fixed commit": "1a79c9736dc85284e35596d5cbad367072a40f05", "Url": "https://api.github.com/repos/RIPE-NCC/whois", "Date": "2013-07-10T13:00:24Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pollerExecutor) != null) pollerExecutor.shutdown();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2314/buggy-version/whois-api.src.main.java.net.ripe.db.whois.api.mail.dequeue.MessageDequeue.java", "BodyUseAPI": [], "Fixed commit": "1a79c9736dc85284e35596d5cbad367072a40f05", "Url": "https://api.github.com/repos/RIPE-NCC/whois", "Date": "2013-07-10T13:00:24Z"},
{"Line": "=>526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.njol.skript.lang.Expression<?>.getReturnType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (returnType == (java.lang.Object.class)) { log.printLog(); return e; }else { ch.njol.skript.lang.Expression<?> r = e.getConvertedExpression(((java.lang.Class<java.lang.Object>[]) (types))); if (r != null) { log.printLog(); return r; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8498/buggy-version/src.main.java.ch.njol.skript.lang.SkriptParser.java", "BodyUseAPI": [], "Fixed commit": "c2c8aa9b18ff24b75cef0a03e2e304e07b61482d", "Url": "https://api.github.com/repos/SkriptLang/Skript", "Date": "2017-08-08T13:25:18Z"},
{"Line": "=>553", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (postedDrmsDocument == null) { throw new gov.ca.cwds.rest.services.ServiceException(\"Unable to Create DRMS Document\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2811/buggy-version/src.main.java.gov.ca.cwds.rest.services.ScreeningToReferralService.java", "BodyUseAPI": [], "Fixed commit": "78b880cf106c08a953d643edbef37c9e796bf7ff", "Url": "https://api.github.com/repos/ca-cwds/API", "Date": "2017-07-06T21:04:46Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((history.get(list.get(index).getID())) != null) { history.remove(list.get(index).getID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2415/buggy-version/src.com.herasymc.cmput301counter.CounterList.java", "BodyUseAPI": ["android.util.SparseArray<java.util.ArrayList<java.util.Date>>.remove(list.get(index).getID())", "java.util.ArrayList<com.herasymc.cmput301counter.Counter>.get(int)", "list.get(index).getID()"], "Fixed commit": "1d9185b3a2013c0e9fd119adc8f6eb4a4ee1d425", "Url": "https://api.github.com/repos/artemh/CMPUT301Counter", "Date": "2014-01-31T17:59:58Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((history.get(list.get(index).getID())) != null) { history.get(list.get(index).getID()).clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2415/buggy-version/src.com.herasymc.cmput301counter.CounterList.java", "BodyUseAPI": ["list.get(index).getID()", "android.util.SparseArray<java.util.ArrayList<java.util.Date>>.get(list.get(index).getID())", "history.get(list.get(index).getID()).clear()", "java.util.ArrayList<com.herasymc.cmput301counter.Counter>.get(int)"], "Fixed commit": "1d9185b3a2013c0e9fd119adc8f6eb4a4ee1d425", "Url": "https://api.github.com/repos/artemh/CMPUT301Counter", "Date": "2014-01-31T17:59:58Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cclogic.user.UserRepository.findByEmailId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((users.size()) > 0) { user = userRepository.findByEmailId(username).get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4212/buggy-version/src.main.java.com.cclogic.security.UserDetailsServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "b926ff136cd02abcbbe019ac2e99126fea975e22", "Url": "https://api.github.com/repos/nishantt95/UserService", "Date": "2017-09-22T06:29:42Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scheduledTime > (currentTime)) { currentTime = scheduledTime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4821/buggy-version/robolectric-utils.src.main.java.org.robolectric.util.Scheduler.java", "BodyUseAPI": [], "Fixed commit": "74e141e89931f478f55de63d2d7306296f317619", "Url": "https://api.github.com/repos/jongerrish/robolectric", "Date": "2015-04-24T17:08:57Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isConstantlyIdling) { advanceToLastPostedRunnable(); }else if (!(paused)) { advanceBy(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4821/buggy-version/robolectric-utils.src.main.java.org.robolectric.util.Scheduler.java", "BodyUseAPI": [], "Fixed commit": "74e141e89931f478f55de63d2d7306296f317619", "Url": "https://api.github.com/repos/jongerrish/robolectric", "Date": "2015-04-24T17:08:57Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id instanceof com.thinkaurelius.titan.graphdb.relations.RelationIdentifier) rid = ((com.thinkaurelius.titan.graphdb.relations.RelationIdentifier) (id)); else if (id instanceof java.lang.String) rid = com.thinkaurelius.titan.graphdb.relations.RelationIdentifier.parse(((java.lang.String) (id))); else if (id instanceof long[]) rid = com.thinkaurelius.titan.graphdb.relations.RelationIdentifier.get(((long[]) (id))); else if (id instanceof int[]) rid = com.thinkaurelius.titan.graphdb.relations.RelationIdentifier.get(((int[]) (id)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/490/buggy-version/src.main.java.com.thinkaurelius.titan.graphdb.blueprints.TitanBlueprintsTransaction.java", "BodyUseAPI": [], "Fixed commit": "7d8714405d068591132d910606bfc0f1aba2d0ee", "Url": "https://api.github.com/repos/thinkaurelius/titan", "Date": "2012-08-16T00:02:47Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toCharArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (indexFrom >= (numbers.length)) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6752/buggy-version/Workbench.src.main.java.me.zhang.offer.Q49.java", "BodyUseAPI": [], "Fixed commit": "20485e66fdcde1d2737a366e642e0d7cf7f01a98", "Url": "https://api.github.com/repos/zhangPATHngdong/java-lab", "Date": "2017-09-21T02:58:06Z"},
{"Line": "=>660", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((imageNode.hasAttr(\"width\")) && (!(imageNode.attr(\"width\").trim().isEmpty()))) { widthSet = java.lang.Integer.parseInt(imageNode.attr(\"width\")); }else if (imageUrl.contains(\"width=\")) { java.lang.String widthString = imageUrl.substring(((imageUrl.indexOf(\"width=\")) + 6)); if ((widthString.indexOf('&')) != (-1)) widthString = widthString.substring(0, widthString.indexOf('&')); widthSet = java.lang.Integer.parseInt(widthString); }else { widthSet = width; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8521/buggy-version/src.main.java.com.pratilipi.data.util.PratilipiDocUtil.java", "BodyUseAPI": ["org.jsoup.nodes.Node.attr(java.lang.String)", "java.lang.Integer.parseInt(imageNode.attr(\"width\"))"], "Fixed commit": "dbe368f8477d0ae30875d691986229facba5e28c", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-12-29T07:56:13Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message.getType().equals(\"heartbeat\")) { count += processHeartbeat(report, ((com.dianping.cat.message.Heartbeat) (message)), tree); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8489/buggy-version/cat-consumer.src.main.java.com.dianping.cat.consumer.heartbeat.HeartbeatAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "103dd9698a9fed6b67c2cadfb5d0354e9ed67c6f", "Url": "https://api.github.com/repos/ainilife/cat", "Date": "2013-06-04T02:33:28Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pl.psnc.indigo.fg.kepler.helper.PortHelper.readStringOptional(ptolemy.actor.TypedIOPort)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(tempPath)) { file = java.io.File.createTempFile(\"SetAsyncExecMode\", \".json\"); }else { file = java.io.File.createTempFile(\"SetAsyncExecMode\", \".json\", new java.io.File(tempPath)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/481/buggy-version/src.main.java.pl.psnc.indigo.fg.kepler.ophidia.SetAsyncExecMode.java", "BodyUseAPI": ["java.io.File.createTempFile(java.lang.String,java.lang.String,java.io.File)"], "Fixed commit": "273172462cd86ab9396d46af840784a11e91746e", "Url": "https://api.github.com/repos/indigo-dc/indigokepler", "Date": "2017-09-26T21:01:26Z"},
{"Line": "=>733", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, com.taobao.weex.dom.WXDomObject>.get(java.lang.String)", "java.util.concurrent.ConcurrentHashMap<java.lang.String, com.taobao.weex.dom.WXDomObject>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (domObject.parent.equals(parentObject)) { if ((parentObject.index(domObject)) == index) { return; }else if ((domObject.parent.index(domObject)) < index) { index = index - 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2396/buggy-version/android.sdk.src.main.java.com.taobao.weex.dom.WXDomStatement.java", "BodyUseAPI": ["domObject.parent.index(com.taobao.weex.dom.WXDomObject)", "com.taobao.weex.dom.WXDomObject.index(com.taobao.weex.dom.WXDomObject)"], "Fixed commit": "dfc643df7fb100737c98efa7f5932e75d07ca59f", "Url": "https://api.github.com/repos/sospartan/weex", "Date": "2016-11-04T07:51:38Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toCharArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (Main.isvowel(X[0])) { return null; }else { for (int i = 0; i < ((X.length) - 1); i++) { Y[i] = X[(i + 1)]; } Y[((X.length) - 1)] = X[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4085/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "9500e92fde63f75b55e50cd1186c778c6a9aa91f", "Url": "https://api.github.com/repos/hamedsadeghi/Lund_Pig_Latin", "Date": "2017-02-28T15:39:56Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(p2p.getVersionTo().equals((-1)))) { versionsRange = PROPOSAL_VERSION.VERSION.ge(p2p.getVersionFrom()).and(PROPOSAL_VERSION.VERSION.le(p2p.getVersionTo())); if (versionsRangeOr == null) { versionsRangeOr = versionsRange; }else { versionsRangeOr = versionsRangeOr.or(versionsRange); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1864/buggy-version/microservices.services.proposals-service.src.main.java.org.xcolab.service.proposal.domain.proposalversion.ProposalVersionDaoImpl.java", "BodyUseAPI": ["org.xcolab.model.tables.pojos.Proposal2Phase.getVersionTo()", "org.xcolab.model.tables.pojos.Proposal2Phase.getVersionFrom()", "PROPOSAL_VERSION.VERSION.le(p2p.getVersionTo())", "PROPOSAL_VERSION.VERSION.ge(p2p.getVersionFrom())", "PROPOSAL_VERSION.VERSION.ge(p2p.getVersionFrom()).and(PROPOSAL_VERSION.VERSION.le(p2p.getVersionTo()))"], "Fixed commit": "39a17497e4e95d1c69f8c38321c19ef3c4b08475", "Url": "https://api.github.com/repos/CCI-MIT/XCoLab", "Date": "2017-02-07T17:33:31Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (versionsRangeOr != null) { query.addConditions(versionsRangeOr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1864/buggy-version/microservices.services.proposals-service.src.main.java.org.xcolab.service.proposal.domain.proposalversion.ProposalVersionDaoImpl.java", "BodyUseAPI": ["org.jooq.SelectQuery<org.jooq.Record>.addConditions(org.jooq.Condition)"], "Fixed commit": "39a17497e4e95d1c69f8c38321c19ef3c4b08475", "Url": "https://api.github.com/repos/CCI-MIT/XCoLab", "Date": "2017-02-07T17:33:31Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mode) == (edu.wpi.cs.wpisuitetng.modules.planningpoker.view.ViewMode.WITHDECK)) { cards.calculateTotalEstimate(); voteButton.setEnabled(isEnabled); if (((cards.getSelectedCardsIndices().size()) == 0) || (!isEnabled)) { clearButton.setEnabled(false); }else { clearButton.setEnabled(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3028/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.planningpoker.view.voting.VotingButtonPanel.java", "BodyUseAPI": [], "Fixed commit": "ab0b04ba2c3389e2a29bffca251f9c65232a8f13", "Url": "https://api.github.com/repos/alexbragdon/wpi-suite", "Date": "2014-04-24T21:39:21Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (a.hasValue(R.styleable.CompoundIconTextView_cit_drawableEnd)) { drawableResIds[(isRtl() ? com.github.aakira.compoundicontextview.CompoundIconTextView.INDEX_LEFT : com.github.aakira.compoundicontextview.CompoundIconTextView.INDEX_RIGHT)] = a.getResourceId(R.styleable.CompoundIconTextView_cit_drawableEnd, com.github.aakira.compoundicontextview.CompoundIconTextView.UNDEFINED_RESOURCE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/350/buggy-version/compoundicontextview.src.main.java.com.github.aakira.compoundicontextview.CompoundIconTextView.java", "BodyUseAPI": [], "Fixed commit": "0d93f77d25ba84416c142e3527ba6cb5cb829fba", "Url": "https://api.github.com/repos/AAkira/CompoundIconTextView", "Date": "2017-06-06T23:20:47Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (a.hasValue(R.styleable.CompoundIconTextView_cit_drawableStart)) { drawableResIds[(isRtl() ? com.github.aakira.compoundicontextview.CompoundIconTextView.INDEX_RIGHT : com.github.aakira.compoundicontextview.CompoundIconTextView.INDEX_LEFT)] = a.getResourceId(R.styleable.CompoundIconTextView_cit_drawableStart, com.github.aakira.compoundicontextview.CompoundIconTextView.UNDEFINED_RESOURCE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/350/buggy-version/compoundicontextview.src.main.java.com.github.aakira.compoundicontextview.CompoundIconTextView.java", "BodyUseAPI": [], "Fixed commit": "0d93f77d25ba84416c142e3527ba6cb5cb829fba", "Url": "https://api.github.com/repos/AAkira/CompoundIconTextView", "Date": "2017-06-06T23:20:47Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((eventsFrag) != null) && (eventsFrag.fancyViewShowing())) eventsFrag.onBackPressed(); else fabMenu.closeMenu();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8211/buggy-version/app.src.main.java.com.example.codenamebiscuit.MainActivity.java", "BodyUseAPI": ["com.example.codenamebiscuit.eventfragments.GridMainEventsFrag.onBackPressed()"], "Fixed commit": "5849fbb7c897612dbb50bef62dbdf959f111a80f", "Url": "https://api.github.com/repos/tkardach/CodenameBiscuit", "Date": "2017-05-10T02:26:03Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((m != null) && (n != null)) && (!(m.comparable(n)))) org.basex.query.gflwor.Err.cast(or.info, m.type, n);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8704/buggy-version/src.main.java.org.basex.query.gflwor.OrderBy.java", "BodyUseAPI": ["org.basex.query.gflwor.Err.cast(or.info,m.type,org.basex.query.gflwor.Item)"], "Fixed commit": "02d6571cc00824fb4c3bd20a2d96e30d852cd813", "Url": "https://api.github.com/repos/BaseXdb/basex", "Date": "2013-05-02T11:10:50Z"},
{"Line": "=>822", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (new java.io.File(mImportPath).exists()) { if ((mHandler) == null) { mHandler = new com.ichi2.anki.DeckPicker.DialogHandler(this); } if (mImportPath.split(\"/\")[((mImportPath.split(\"/\").length) - 1)].equals(\"collection.apkg\")) { mHandler.sendEmptyMessage(com.ichi2.anki.DeckPicker.MSG_SHOW_COLLECTION_IMPORT_REPLACE_DIALOG); }else { mHandler.sendEmptyMessage(com.ichi2.anki.DeckPicker.MSG_SHOW_COLLECTION_IMPORT_ADD_DIALOG); } }else { com.ichi2.themes.Themes.showThemedToast(this, getResources().getString(R.string.import_log_no_apkg), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/902/buggy-version/src.com.ichi2.anki.DeckPicker.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "ed06954c8c678024e2fce25c19bd6cdaf0120260", "Url": "https://api.github.com/repos/ankidroid/Anki-Android", "Date": "2014-10-26T18:58:29Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (remainder == iplength) return (iplength + remainder) - 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4465/buggy-version/src.problems.ExpectoPalindronum.java", "BodyUseAPI": [], "Fixed commit": "e73d1bf84a2b6851efb93b0313ac323c3cc7114a", "Url": "https://api.github.com/repos/abhirevan/BloombergCodeconChallenge", "Date": "2015-11-14T16:35:14Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((results) != null) { name.setText(results.getItemName()); price.setText(results.getAvg_price()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8767/buggy-version/app.src.main.java.com.example.patrick.groceryapplication.fragments.AddGroupListItemFragment.java", "BodyUseAPI": [], "Fixed commit": "22cc1c1ebffe71a6173111041c1285720a06f568", "Url": "https://api.github.com/repos/ptflinner/GroceryApplication", "Date": "2017-08-09T19:53:42Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((results) != null) { name.setText(results.getItemName()); price.setText(results.getAvg_price()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8767/buggy-version/app.src.main.java.com.example.patrick.groceryapplication.fragments.ItemFragment.java", "BodyUseAPI": [], "Fixed commit": "22cc1c1ebffe71a6173111041c1285720a06f568", "Url": "https://api.github.com/repos/ptflinner/GroceryApplication", "Date": "2017-08-09T19:53:42Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jsonObject.has(\"email\")) deviceVS.setEmail(jsonObject.getString(\"email\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6744/buggy-version/VotingSystemLibrary.src.main.java.org.votingsystem.model.DeviceVS.java", "BodyUseAPI": ["org.votingsystem.model.DeviceVS.setEmail(jsonObject.getString(\"email\"))", "net.sf.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "63fe9a2abc981c8e5c6d71b38e55830ac60fd387", "Url": "https://api.github.com/repos/votingsystem/votingsystem", "Date": "2014-12-21T23:36:28Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jsonObject.has(\"phone\")) deviceVS.setPhone(jsonObject.getString(\"phone\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6744/buggy-version/VotingSystemLibrary.src.main.java.org.votingsystem.model.DeviceVS.java", "BodyUseAPI": ["net.sf.json.JSONObject.getString(java.lang.String)", "org.votingsystem.model.DeviceVS.setPhone(jsonObject.getString(\"phone\"))"], "Fixed commit": "63fe9a2abc981c8e5c6d71b38e55830ac60fd387", "Url": "https://api.github.com/repos/votingsystem/votingsystem", "Date": "2014-12-21T23:36:28Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String,java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cursor == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6369/buggy-version/app.src.main.java.com.example.white.wmusic.db.MusicDB.java", "BodyUseAPI": [], "Fixed commit": "fb4cab7bc43de1b7e1a7fffc5adb7411d777b525", "Url": "https://api.github.com/repos/whitestarlau/WMusic", "Date": "2016-09-09T01:50:57Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((storedFlow == null) && (statsFlow != null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3348/buggy-version/opendaylight.md-sal.statistics-manager.src.main.java.org.opendaylight.controller.md.statistics.manager.FlowComparator.java", "BodyUseAPI": [], "Fixed commit": "75f9ebff528344841c86e08d302340638db20858", "Url": "https://api.github.com/repos/mandeepdhami/controller", "Date": "2014-07-17T14:12:46Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((statsFlow == null) && (storedFlow != null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3348/buggy-version/opendaylight.md-sal.statistics-manager.src.main.java.org.opendaylight.controller.md.statistics.manager.FlowComparator.java", "BodyUseAPI": [], "Fixed commit": "75f9ebff528344841c86e08d302340638db20858", "Url": "https://api.github.com/repos/mandeepdhami/controller", "Date": "2014-07-17T14:12:46Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dbChanged) { org.helm.notation.MonomerFactory.setDBChanged(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5154/buggy-version/source.org.helm.notation.MonomerStore.java", "BodyUseAPI": [], "Fixed commit": "12276f3bf881e413c6c1e58001226690f13b30df", "Url": "https://api.github.com/repos/MarkusWeisser/HELMNotationToolkit", "Date": "2014-04-22T10:33:24Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.lucko.luckperms.common.defaults.LogicParser.SCRIPT_ENGINE) == null) { throw new java.lang.NullPointerException(\"script engine\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7383/buggy-version/common.src.main.java.me.lucko.luckperms.common.defaults.LogicParser.java", "BodyUseAPI": [], "Fixed commit": "c99d6556db70950bfbf81d16ef5914579796ed65", "Url": "https://api.github.com/repos/lucko/LuckPerms", "Date": "2017-01-18T21:37:41Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mDatabase.isOpen()) { mDatabase.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1593/buggy-version/src.org.digitalcampus.oppia.application.DatabaseManager.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.close()"], "Fixed commit": "599f1ede75ca373b5f77b7bc1b41ab902b276f5b", "Url": "https://api.github.com/repos/jjoseba/oppia-mobile-android", "Date": "2016-01-27T08:50:28Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((data[0].length()) == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/149/buggy-version/java.iceandshadow2.IaSConfigManager.java", "BodyUseAPI": [], "Fixed commit": "d928d5c096d58497569cd84c9ed433107e30fcc5", "Url": "https://api.github.com/repos/TheDaemoness/IceAndShadow2", "Date": "2015-01-25T07:53:29Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastInvocation) == 0) { lastInvocation = java.lang.System.currentTimeMillis(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4367/buggy-version/gameengine.src.main.java.de.mirkosertic.gameengine.core.GameLoop.java", "BodyUseAPI": [], "Fixed commit": "4e41394a474672f020282fbb05782cec4763e999", "Url": "https://api.github.com/repos/mirkosertic/GameComposer", "Date": "2014-06-23T17:16:59Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iThis instanceof com.orientechnologies.orient.core.id.ORecordId) { iThis = ((com.orientechnologies.orient.core.id.ORecordId) (iThis)).getRecord(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8997/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.functions.misc.OSQLMethodExclude.java", "BodyUseAPI": [], "Fixed commit": "b321d4817a1505c2118bcdc1c78cf78fa20a3f53", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-12-29T22:04:56Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.wso2mobile.mdm.utils.CommonUtilities.DEBUG_MODE_ENABLED) { android.util.Log.e(\"SENDER ID : \", CommonUtilities.SENDER_ID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3404/buggy-version/src.com.wso2mobile.mdm.EntryActivity.java", "BodyUseAPI": [], "Fixed commit": "e329f5843d350d8b762cda97296cfb0d80bf74a0", "Url": "https://api.github.com/repos/WSO2Mobile/MDM-Android-Agent", "Date": "2013-12-20T11:27:56Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.reason) != null) && (com.darylteo.rx.promises.WrappedError.class.isAssignableFrom(reason.getClass()))) { return ((com.darylteo.rx.promises.WrappedError) (this.reason)).unwrap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4570/buggy-version/rxjava-promises.rxjava-promises-core.src.main.java.com.darylteo.rx.promises.AbstractPromise.java", "BodyUseAPI": [], "Fixed commit": "192fa79f8b0fe2b64e70bd9e574977870ae814cd", "Url": "https://api.github.com/repos/Athas1980/rxjava-promises", "Date": "2015-02-08T00:02:49Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.manustudios.easynote.NoteEditorActivity.findViewById(R.id.noteText)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((content.getLineCount()) > 1) { note.setSelfTitle(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/777/buggy-version/src.com.manustudios.easynote.NoteEditorActivity.java", "BodyUseAPI": [], "Fixed commit": "be10f8c7212a8636b3e544f429341db619725e4a", "Url": "https://api.github.com/repos/manuelsilverio01/EasyNote", "Date": "2014-06-10T20:40:15Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hasNext()) == false) { throw new java.util.NoSuchElementException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2930/buggy-version/Assignment6.src.a6jedi.ZigzagIterator.java", "BodyUseAPI": [], "Fixed commit": "e72002e5786513728ca9a4e38437ad3c8d484918", "Url": "https://api.github.com/repos/cpoly13/Comp-401", "Date": "2016-10-30T00:54:02Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result.isFakePointer(name)) { if (conversionMode == (TypeConversionMode.NativeParameter)) return typeRef(result.config.runtime.pointerClass); else return typeRef(com.sun.jna.ptr.PointerByReference.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3572/buggy-version/libraries.jnaerator.jnaerator.src.main.java.com.ochafik.lang.jnaerator.JNATypeConversion.java", "BodyUseAPI": [], "Fixed commit": "b51db879e326b131e304cff3706d0a4f44e67da3", "Url": "https://api.github.com/repos/ochafik/nativelibs4java", "Date": "2013-07-03T15:27:43Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (containers.isEmpty()) com.github.mrstampy.kitchensync.stream.StreamerAckRegister.awaiting.remove(rk);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1211/buggy-version/KitchenSync-core.src.com.github.mrstampy.kitchensync.stream.StreamerAckRegister.java", "BodyUseAPI": [], "Fixed commit": "bdbc5836ec326138aeb112667e523b9fa23f6e4e", "Url": "https://api.github.com/repos/mrstampy/KitchenSync-core", "Date": "2014-08-12T21:54:01Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((stat == (us.frc.predictions.Breakdown2017.autoFuelPoints)) || (stat == (us.frc.predictions.Breakdown2017.teleopFuelPoints))) { mStats.put(stat, pCalc.getForKey(stat.name()).get(pTeam)); mAntiStats.put(stat, pCalc.getForKey(stat.name(), true).get(pTeam)); }else { mStats.put(stat, ((pCalc.getForKey(stat.name()).get(pTeam)) / (stat.getStaticValue()))); mAntiStats.put(stat, ((pCalc.getForKey(stat.name(), true).get(pTeam)) / (stat.getStaticValue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3004/buggy-version/src.main.java.us.frc.predictions.TeamStat.java", "BodyUseAPI": [], "Fixed commit": "06fba0d2634f6872108b0b946b05f88a7dc237b0", "Url": "https://api.github.com/repos/flybotix/frc-power-calc", "Date": "2017-04-25T17:40:20Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lspTypeName) != null) { if (lspTypeName.equals(\"SR\")) { lspType = org.onosproject.pce.pceservice.LspType.SR_WITHOUT_SIGNALLING; }else if (lspTypeName.equals(\"CR\")) { lspType = org.onosproject.pce.pceservice.LspType.WITHOUT_SIGNALLING_AND_WITHOUT_SR; }else if (lspTypeName.equals(\"RSVP-TE\")) { lspType = org.onosproject.pce.pceservice.LspType.WITH_SIGNALLING; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6033/buggy-version/apps.pce.app.src.main.java.org.onosproject.pce.cli.PceLspTypeAndModeCommand.java", "BodyUseAPI": [], "Fixed commit": "1a24dca3bfa85f1e4a6627a5c99666391046af71", "Url": "https://api.github.com/repos/maheshrajus/actn", "Date": "2016-07-08T14:32:18Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (candidateFirstInterview.getInterviewResult().equalsIgnoreCase(\"Pass\")) { candidateFirstInterview.setInterviewResult(\"TRUE\"); }else if (candidateFirstInterview.getInterviewResult().equalsIgnoreCase(\"Fail\")) { candidateFirstInterview.setInterviewResult(\"FALSE\"); }else { candidateFirstInterview.setInterviewResult(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6620/buggy-version/src.com.quix.aia.cn.imo.rest.FirstInterviewRest.java", "BodyUseAPI": ["candidateFirstInterview.getInterviewResult().equalsIgnoreCase(java.lang.String)", "com.quix.aia.cn.imo.data.addressbook.CandidateFirstInterview.setInterviewResult(java.lang.String)", "com.quix.aia.cn.imo.data.addressbook.CandidateFirstInterview.getInterviewResult()", "com.quix.aia.cn.imo.data.addressbook.CandidateFirstInterview.setInterviewResult(java.lang.String)", "com.quix.aia.cn.imo.data.addressbook.CandidateFirstInterview.setInterviewResult(java.lang.String)"], "Fixed commit": "c83afc51cf44bc780f49b4158acae7bfe1114208", "Url": "https://api.github.com/repos/aiacncitaps/ERecruitCMS", "Date": "2015-12-29T07:11:42Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((todayItems.size()) > 0) { lvAdapterTVToday = new com.extinctspecie.betman.LVAdapterTVToday(getActivity().getBaseContext(), todayItems); listView.setAdapter(lvAdapterTVToday); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5011/buggy-version/Betman.app.src.main.java.com.extinctspecie.betman.fragments.TabViewToday.java", "BodyUseAPI": [], "Fixed commit": "70264ea0845f6fc6e5bfd82988cbbfdbd19e9343", "Url": "https://api.github.com/repos/ExtinctSpecie/Betman", "Date": "2017-05-05T18:58:15Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((historyItems.size()) > 0) { lvAdapterHistory = new com.extinctspecie.betman.LVAdapterTVHistory(getActivity().getBaseContext(), historyItems); listView.setAdapter(lvAdapterHistory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5011/buggy-version/Betman.app.src.main.java.com.extinctspecie.betman.fragments.TabViewHistory.java", "BodyUseAPI": [], "Fixed commit": "70264ea0845f6fc6e5bfd82988cbbfdbd19e9343", "Url": "https://api.github.com/repos/ExtinctSpecie/Betman", "Date": "2017-05-05T18:58:15Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (myFeatureToNodes.get(feature).isEmpty()) { myModelRefToFeatures.removeValue(feature.getModelReference(), feature); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/389/buggy-version/plugins.vcs.source_gen.jetbrains.mps.vcs.changesmanager.tree.TreeHighlighter.java", "BodyUseAPI": ["jetbrains.mps.vcs.changesmanager.tree.features.Feature.getModelReference()", "com.intellij.util.containers.MultiMap<jetbrains.mps.smodel.SModelReference, jetbrains.mps.vcs.changesmanager.tree.features.Feature>.removeValue(feature.getModelReference(),jetbrains.mps.vcs.changesmanager.tree.features.Feature)"], "Fixed commit": "a7e9f06bca9b81a428f2e74d6b9944366da21e1e", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2012-09-05T03:47:19Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connection == null) || (!(connection.isAlive()))) { throw new java.lang.IllegalStateException(\"Connection is not active\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3950/buggy-version/hazelcast-client.src.main.java.com.hazelcast.client.spi.impl.ClientInvocationServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "e34b09e9b165a30c49212ccd436e221d1f8501dd", "Url": "https://api.github.com/repos/hazelcast/hazelcast", "Date": "2015-03-05T15:45:00Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.hans.CommandSigns.HashMaps.signCheck(loc))) { plugin.addSign(new com.hans.CommandSigns.CommandSignsData(0, loc, new com.hans.CommandSigns.CommandSignsText(lines))); }else { log.warning(((\"There was a problem loading line number \" + (java.lang.Integer.toString(lineNumber))) + \": Sign already exists.\")); lineNumber--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6290/buggy-version/src.main.java.com.hans.CommandSigns.CommandSignsMigrate.java", "BodyUseAPI": ["com.hans.CommandSigns.CommandSigns.addSign(com.hans.CommandSigns.CommandSignsData)"], "Fixed commit": "b452ee91a6ac2be120d968104e48ad62897a913f", "Url": "https://api.github.com/repos/Serubin/CommandSigns", "Date": "2013-03-01T21:53:14Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (remainingChars > (de.erichseifert.vectorgraphics2d.eps.EPSDocument.MAX_LINE_WIDTH)) { java.lang.String maximumChunk = element.substring(i, (i + (de.erichseifert.vectorgraphics2d.eps.EPSDocument.MAX_LINE_WIDTH))); int whitespacePositionInChunk = maximumChunk.lastIndexOf(\" \"); chunkSize = i + whitespacePositionInChunk; assert chunkSize <= (de.erichseifert.vectorgraphics2d.eps.EPSDocument.MAX_LINE_WIDTH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3446/buggy-version/src.main.java.de.erichseifert.vectorgraphics2d.eps.EPSDocument.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "842e506bf9ca0f74619ee8945b4761f1aadf8e76", "Url": "https://api.github.com/repos/eseifert/vectorgraphics2d", "Date": "2015-02-19T18:45:13Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ksp.kos.ideaplugin.expressions.Item<ksp.kos.ideaplugin.expressions.Multiplication.Op, ksp.kos.ideaplugin.expressions.Element>.getExpression()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (expression.isSimple()) { return expression.getAtom(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5571/buggy-version/IDEA.src.ksp.kos.ideaplugin.expressions.Multiplication.java", "BodyUseAPI": ["ksp.kos.ideaplugin.expressions.Element.getAtom()"], "Fixed commit": "bc82fb39f3af112274921b98a69d7c85ef6ad0fb", "Url": "https://api.github.com/repos/valery-labuzhsky/EditorTools", "Date": "2016-03-06T20:29:18Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (StressChange.distModel.equals(\"none\")) { for (int i = 0; i < (parents.size()); i++) { speakers.convos.addEdge(this, parents.get(i), 0.0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3405/buggy-version/src.stresschange.Speaker.java", "BodyUseAPI": [], "Fixed commit": "45671eb1fd74a87f2c8e1fe438f481f6843c40e8", "Url": "https://api.github.com/repos/jlongbotham/StressChange", "Date": "2015-10-20T06:34:20Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (prop != null) { logger.info((\"Content forests per host: \" + prop)); c.setContentForestsPerHost(java.lang.Integer.parseInt(prop)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5315/buggy-version/src.main.java.com.marklogic.appdeployer.DefaultAppConfigFactory.java", "BodyUseAPI": ["com.marklogic.appdeployer.DefaultAppConfigFactory.info(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "com.marklogic.appdeployer.AppConfig.setContentForestsPerHost(int)"], "Fixed commit": "732f71c5657f06da3f9b672317597245223dfc6d", "Url": "https://api.github.com/repos/marklogic-community/ml-app-deployer", "Date": "2016-01-19T00:20:21Z"},
{"Line": "=>1061", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["soot.SootField.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((soot.LongType.v().equals(t)) && (!(f.isStatic()))) && (soot.Modifier.isFinal(f.getModifiers()))) { return 8; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3978/buggy-version/compiler.src.main.java.org.robovm.compiler.ClassCompiler.java", "BodyUseAPI": [], "Fixed commit": "fcede7e942a0ba5052a357fbf5f7afba4f56889f", "Url": "https://api.github.com/repos/robovm/robovm", "Date": "2013-02-27T14:53:54Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flowElement instanceof org.flowable.bpmn.model.SubProcess) { processSubProcessFlowElements(commandContext, process, ((org.flowable.bpmn.model.SubProcess) (flowElement)), originalProcessDefinitionEntity, newDeploymentEntity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6257/buggy-version/modules.flowable-engine.src.main.java.org.flowable.engine.impl.cmd.InjectParallelEmbeddedSubProcessCmd.java", "BodyUseAPI": [], "Fixed commit": "a74a6a769db9c2f542c5db8e6e9f78c6e5ff4654", "Url": "https://api.github.com/repos/flowable/flowable-engine", "Date": "2017-04-05T07:05:35Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!found) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/495/buggy-version/src.week2.challenges.hash.Equal.java", "BodyUseAPI": [], "Fixed commit": "b6bccfe969fb2e338c3ab666628a4b8fe9c19659", "Url": "https://api.github.com/repos/eddie-thp/codepath-tests", "Date": "2017-02-01T07:33:56Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m_LNormFlag) m_fValue[core] -= (calcLogLikelihoodY(review)) / (user.getAdaptationSize()); else m_fValue[core] -= calcLogLikelihoodY(review);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7231/buggy-version/src.Classifier.supervised.modelAdaptation.HDP.CLRWithHDP.java", "BodyUseAPI": [], "Fixed commit": "f3c093795659e2868283cb27fa97735b70158956", "Url": "https://api.github.com/repos/Linda-sunshine/IR_Base", "Date": "2016-10-08T04:29:34Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currTouchMode) == (multitouch.multitouchapp.CanvasView.TouchMode.ColorWait)) { }else if ((currTouchMode) == (multitouch.multitouchapp.CanvasView.TouchMode.TwoFingerReady)) { currTouchMode = multitouch.multitouchapp.CanvasView.TouchMode.ColorWait; }else if ((currTouchMode) == (multitouch.multitouchapp.CanvasView.TouchMode.RotateResize)) { if (((currentStroke) != null) && ((event.getPointerCount()) == 2)) { upTouch(); currTouchMode = multitouch.multitouchapp.CanvasView.TouchMode.FinishedGesture; } if (((currentStroke) != null) && ((event.getPointerCount()) == 3)) { if (!(isRotated)) { currRotateDegree = rotation(event); drawCanvas.save(); if ((currentStroke) instanceof multitouch.multitouchapp.Rectangle) { float rectcx = ((multitouch.multitouchapp.Rectangle) (currentStroke)).getCenterX(); float rectcy = ((multitouch.multitouchapp.Rectangle) (currentStroke)).getCenterY(); drawCanvas.rotate(currRotateDegree, rectcx, rectcy); multitouch.multitouchapp.Stroke rotatedStroke = currentStroke; drawCanvas.drawPath(rotatedStroke.getDrawPath(), drawPaint); strokes.add(rotatedStroke); ((multitouch.multitouchapp.Rectangle) (currentStroke)).updateHeightWidth(0, 0); currentStroke.setColor(bgColor); strokes.remove(currentStroke); drawCanvas.restore(); isRotated = true; }else if ((currentStroke) instanceof multitouch.multitouchapp.Circle) { drawCanvas.rotate(currRotateDegree, event.getX(), event.getY()); multitouch.multitouchapp.Stroke rotatedStroke = currentStroke; drawCanvas.drawPath(rotatedStroke.getDrawPath(), drawPaint); strokes.add(rotatedStroke); strokes.remove(currentStroke); currentStroke = rotatedStroke; drawCanvas.restore(); isRotated = true; }else if ((currentStroke) instanceof multitouch.multitouchapp.DrawPath) { ((multitouch.multitouchapp.DrawPath) (currentStroke)).updateWithRotation(currRotateDegree); isRotated = true; } invalidate(); } } }else { currTouchMode = multitouch.multitouchapp.CanvasView.TouchMode.SingleFingerDraw; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6454/buggy-version/app.src.main.java.multitouch.multitouchapp.CanvasView.java", "BodyUseAPI": [], "Fixed commit": "3117003ba9e05a8d172654366f37c84c1352c3fa", "Url": "https://api.github.com/repos/lwinston7/multitouch", "Date": "2016-11-21T18:33:20Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isCollidedHorizontally) { this.speed *= 0.9; this.motionY = 0.1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/962/buggy-version/src.minecraft.micdoodle8.mods.galacticraft.core.entities.GCCoreEntityBuggy.java", "BodyUseAPI": [], "Fixed commit": "faf0c6b49dda60168943f7b6e133cfd768b432d9", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2013-02-17T08:03:22Z"},
{"Line": "=>621", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (io.github.yannici.bedwars.Main.getInstance().isBungee()) { this.cycle.onPlayerLeave(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3437/buggy-version/src.io.github.yannici.bedwars.Game.Game.java", "BodyUseAPI": [], "Fixed commit": "c10c96b14e4287b21c60d229a0379d60e24b8a73", "Url": "https://api.github.com/repos/BedwarsRel/BedwarsRel", "Date": "2015-08-27T14:39:55Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"\".equals(validationMsg)) changeRequest = setChangeRequestValue(category, teamAllocation, userAllocation);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1578/buggy-version/src.main.java.com.dreamchain.skeleton.service.impl.ChangeRequestServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "ae3f159ecd6309bbc70bb0faac4befaffbf4dc9a", "Url": "https://api.github.com/repos/abdul-kader138/projectguru", "Date": "2017-07-11T16:57:30Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["TM.TransactionManager.areServersReadyToCommit(TM.Transaction)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ready) TM.TransactionManager.fm.changeMasterToShadowCopy(transactionId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/330/buggy-version/src.TM.TransactionManager.java", "BodyUseAPI": [], "Fixed commit": "60b6dd1d35a927c68a9bfebaeb75ed13ec0d963d", "Url": "https://api.github.com/repos/CodeWinger/DistributedSystemsProject3", "Date": "2015-12-01T22:00:17Z"},
{"Line": "=>1856", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["TM.TransactionManager.areServersReadyToCommitWithCrash(TM.Transaction,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ready) TM.TransactionManager.fm.changeMasterToShadowCopy(transactionId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/330/buggy-version/src.TM.TransactionManager.java", "BodyUseAPI": [], "Fixed commit": "60b6dd1d35a927c68a9bfebaeb75ed13ec0d963d", "Url": "https://api.github.com/repos/CodeWinger/DistributedSystemsProject3", "Date": "2015-12-01T22:00:17Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mp.getDuration()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1103/buggy-version/app.src.main.java.com.magiclive.ui.VideoWallPaperDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "6a5d8ec13d7746d0886578d6f22a6076fdeb6cb3", "Url": "https://api.github.com/repos/LIYANJU2015/MagicLiveWallPaper", "Date": "2017-06-14T03:02:36Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lastSummary.getReceipts().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (receipt.isSuccessful()) { pendingTxes.get(i).txResult.executionSummary = lastSummary.getSummaries().get(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4428/buggy-version/ethereumj-core.src.main.java.org.ethereum.util.blockchain.StandaloneBlockchain.java", "BodyUseAPI": [], "Fixed commit": "c6896c5614c7eabe4d6897683c776fc055927c7b", "Url": "https://api.github.com/repos/adridadou/ethereumj", "Date": "2017-01-21T23:18:58Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (LookAngleDiff <= 337.5) { Lvl.Players.get(Player).WalkFrames.get(3).Bind(); }else if (LookAngleDiff <= 382.5) { Lvl.Players.get(Player).WalkFrames.get(4).Bind(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8656/buggy-version/KillBox.src.Camera.java", "BodyUseAPI": [], "Fixed commit": "cd1b0987c0fdaa120fa8fa6fca2ff104acb3aa7d", "Url": "https://api.github.com/repos/AXDOOMER/KillBox", "Date": "2015-10-14T16:37:05Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entryDao.validateStateData(state.getId(), state.getCode())) { obj.put(state.getCode(), state.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7494/buggy-version/src.main.java.org.igarape.homicide.globe.controllers.HomeController.java", "BodyUseAPI": ["org.json.simple.JSONObject.put(state.getCode(),state.getName())", "org.igarape.homicide.globe.model.State.getCode()", "org.igarape.homicide.globe.model.State.getName()"], "Fixed commit": "7ebfbc6ff7f185cf49be5b7de81dc85c19157ab5", "Url": "https://api.github.com/repos/igarape/homicide-monitor-converter", "Date": "2015-09-24T01:16:14Z"},
{"Line": "=>1093", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((bropals.processsketcher.data.Node) (selected.get(firstNode))).getLinkedStyle()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (name == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2337/buggy-version/netbeans-process-sketcher.src.bropals.processsketcher.FlowchartWindow.java", "BodyUseAPI": [], "Fixed commit": "11f86278d16b51b2e42fbb9c297d57aa5db3c831", "Url": "https://api.github.com/repos/Bro-Pals/process_sketcher", "Date": "2015-06-15T22:25:18Z"},
{"Line": "=>958", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((bropals.processsketcher.data.NodeLine) (selected.get(firstNodeLine))).getLinkedStyle()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (name == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2337/buggy-version/netbeans-process-sketcher.src.bropals.processsketcher.FlowchartWindow.java", "BodyUseAPI": [], "Fixed commit": "11f86278d16b51b2e42fbb9c297d57aa5db3c831", "Url": "https://api.github.com/repos/Bro-Pals/process_sketcher", "Date": "2015-06-15T22:25:18Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (strBuffer.isEmpty()) return new org.json.JSONObject();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/9094/buggy-version/RepBase.src.com.example.repbase.GetJSONFromUrl.java", "BodyUseAPI": [], "Fixed commit": "7b832f86f3b4c4165d871a165a9cb6ebadd5bc03", "Url": "https://api.github.com/repos/chistyakov/RepBase", "Date": "2013-02-16T23:00:49Z"},
{"Line": "=>701", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (text.equals(Utils.EMPTY_STRING)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/388/buggy-version/Dobby.app.src.main.java.com.inceptai.dobby.ui.ChatFragment.java", "BodyUseAPI": [], "Fixed commit": "b0e5873631c761117d7794bcfbc53ed6af489df5", "Url": "https://api.github.com/repos/InceptAi/dobby-android", "Date": "2017-06-21T02:55:01Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.PlayerInventory.getItemInMainHand()", "org.bukkit.event.player.PlayerItemConsumeEvent.getItem()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (mainHand.equals(originalItem)) inv.setItemInMainHand(item); else if (offHand.equals(originalItem)) inv.setItemInOffHand(item); else { if (mainHand.getType().equals(Material.GOLDEN_APPLE)) inv.setItemInMainHand(item); else p.sendMessage((((\"4: \" + (originalItem.getAmount())) + \" \") + (item.getAmount()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1832/buggy-version/src.main.java.gvlfm78.plugin.OldCombatMechanics.module.ModuleGoldenApple.java", "BodyUseAPI": ["mainHand.getType().equals(Material.GOLDEN_APPLE)", "org.bukkit.inventory.ItemStack.equals(org.bukkit.inventory.ItemStack)", "org.bukkit.inventory.ItemStack.getType()", "org.bukkit.inventory.ItemStack.getAmount()", "org.bukkit.entity.Player.sendMessage((((\"4: \" + (originalItem.getAmount())) + \" \") + (item.getAmount())))"], "Fixed commit": "6b0a4c56be70f695c535420cc15055984a64b833", "Url": "https://api.github.com/repos/gvlfm78/BukkitOldCombatMechanics", "Date": "2016-08-09T12:56:23Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.poi.ss.usermodel.Row.getCell(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((cell == null) || ((cell.getCellType()) == (CELL_TYPE_BLANK))) { jsonRow.put(key.substring(0, key.indexOf(\"@\")), JSONObject.NULL); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2544/buggy-version/src.main.java.moe.imvery.utils.xlsx2json.ExcelParser.java", "BodyUseAPI": [], "Fixed commit": "bb6aefd756d911cc590bdbb771b450d66dbc9a06", "Url": "https://api.github.com/repos/noahzark/Xlsx2Json", "Date": "2016-06-03T03:02:56Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.scene.control.TextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((((text.charAt(((text.length()) - 1))) == '+') || ((text.charAt(((text.length()) - 1))) == '-')) || ((text.charAt(((text.length()) - 1))) == '*')) || ((text.charAt(((text.length()) - 1))) == '/')) { operatorAlreadyPressed = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8007/buggy-version/src.Calculator.java", "BodyUseAPI": [], "Fixed commit": "bdef039a0bd06cbb22c4e44736443660e25892c6", "Url": "https://api.github.com/repos/chenshuiluke/calculator", "Date": "2016-01-28T08:23:20Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rs) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8454/buggy-version/modules.ballerina-builtin.src.main.java.org.ballerinalang.nativeimpl.actions.data.sql.SQLDataIterator.java", "BodyUseAPI": [], "Fixed commit": "f17a8729660f950c7b59e7320af0dbd009776101", "Url": "https://api.github.com/repos/ballerina-platform/ballerina-lang", "Date": "2017-11-09T16:28:16Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (json.containsKey(ref)) { branch = json.getString(ref); }else { branch = \"master\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2638/buggy-version/src.main.java.com.jcabi.github.mock.MkContents.java", "BodyUseAPI": ["javax.json.JsonObject.getString(java.lang.String)"], "Fixed commit": "66de95dd64ccc0385ab329eec533cb1cd1c606d7", "Url": "https://api.github.com/repos/amihaiemil/jcabi-github", "Date": "2014-08-01T09:33:01Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.Inventory.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (getFilter(FilterType.PULL).contains(items.getType())) { java.util.HashMap<java.lang.Integer, org.bukkit.inventory.ItemStack> hash = addItem(items, FilterType.PULL); if ((hash.size()) != 0) { org.bukkit.inventory.ItemStack ret = hash.get(0); items.setAmount(((items.getAmount()) - (ret.getAmount()))); } miinv.clear(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3181/buggy-version/com.narrowtux.DropChest.DropChestItem.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.getAmount()", "com.narrowtux.DropChest.DropChestItem.addItem(org.bukkit.inventory.ItemStack,FilterType.PULL)", "org.bukkit.inventory.ItemStack.setAmount(((items.getAmount()) - (ret.getAmount())))"], "Fixed commit": "14e022a6dd1d70ecbe704cccf113c84a4617f3ab", "Url": "https://api.github.com/repos/MTaye/DropChest", "Date": "2011-06-26T21:36:33Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((story.length()) < (bLeng)) { return story; }else { return (story.substring(0, bLeng)) + \" ...\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3155/buggy-version/src.control.stage.PointBox.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "b62cf29f18269c6aaa89a6142202722b94a211a2", "Url": "https://api.github.com/repos/phenolplus/secondPrototype", "Date": "2011-12-13T01:54:15Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args[0].equalsIgnoreCase(\"kw\")) || (args[0].equalsIgnoreCase(\"keywords\"))) { if (sender.hasPermission(\"chatUtils.keywords\")) { sender.sendMessage(((smallutils.chatutils.main.defaultPrefix) + \"These are the keywords available:\")); for (java.util.Map.Entry<java.lang.String, java.lang.String> item : smallutils.chatutils.main.replacers.entrySet()) { sender.sendMessage(((((org.bukkit.ChatColor.GOLD) + (item.getKey())) + \" -> \") + (item.getValue()))); } return true; }else { sender.sendMessage(((smallutils.chatutils.main.defaultPrefix) + (smallutils.chatutils.main.defaultPermissionsMsg))); return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/720/buggy-version/src.main.java.smallutils.chatutils.main.java", "BodyUseAPI": [], "Fixed commit": "539842294d699b337938825c02e7d11950541fd3", "Url": "https://api.github.com/repos/Penaz91/chatUtils", "Date": "2017-09-21T11:35:03Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.input().valueAt(eu.delving.x3ml.engine.Domain,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (intermediateValue.isEmpty()) { gr.forth.Utils.printErrorMessages((((((\"ERROR FOUND: Empty value for \" + node_inside) + \"/\") + intermediateSecond) + \". The node from the XML input is:\\n\") + ($(node).toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7786/buggy-version/src.main.java.eu.delving.x3ml.engine.Domain.java", "BodyUseAPI": [], "Fixed commit": "2ef7066e5a688595a961ec55dd0790b62bff2299", "Url": "https://api.github.com/repos/isl/x3ml", "Date": "2015-12-11T14:29:49Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (l != null) { getWeatherFromLocation(l); lm.removeUpdates(mLocationListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8025/buggy-version/app.src.main.java.com.oligon.bienentracker.ui.activities.NewEntryActivity.java", "BodyUseAPI": ["com.oligon.bienentracker.ui.activities.NewEntryActivity.getWeatherFromLocation(android.location.Location)"], "Fixed commit": "fa4ff93d3da8c94f7875bd3fc7080b93dc07a9ad", "Url": "https://api.github.com/repos/OliGonCreations/BienenTracker", "Date": "2016-05-20T15:52:26Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) != (State.Dying)) applyPhysics(rect);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2272/buggy-version/core.src.nl.arjanfrans.mario.model.Mario.java", "BodyUseAPI": [], "Fixed commit": "269d0f98436b1420af554b3e0bb54f2164424c50", "Url": "https://api.github.com/repos/ArjanFrans/mario-game", "Date": "2014-07-29T21:46:39Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.InputStream.read(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (bytesRead != 32) { throw new java.lang.RuntimeException(java.lang.String.format(\"Attempted to read a UInt256 and only got %s bytes.\", bytesRead)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8849/buggy-version/src.main.java.org.interledger.codecs.oer.OerUint256Codec.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,int)"], "Fixed commit": "601b67eb1d2926f406f80e350b4efd29a63da94f", "Url": "https://api.github.com/repos/interledger/java-ilp-core", "Date": "2017-06-23T15:53:14Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wilson.world.entity.EntityDelegator.getEntity(entity.id)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (oldEntity != null) { this.indexEntities.remove(oldEntity.name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4284/buggy-version/src.main.java.org.wilson.world.entity.EntityDelegator.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.wilson.world.model.Entity>.remove(oldEntity.name)"], "Fixed commit": "9d246ac5c05c35d761480654fa676e0e8e75caf9", "Url": "https://api.github.com/repos/liumiaowilson/world", "Date": "2017-02-18T11:11:57Z"},
{"Line": "=>1147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (debugger.isStarted()) { debugger.stopDebug(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3104/buggy-version/java.src.processing.mode.java.JavaEditor.java", "BodyUseAPI": ["processing.mode.java.Debugger.stopDebug()"], "Fixed commit": "4b10b191f7edb4537a4b618360ff3768090dbac5", "Url": "https://api.github.com/repos/gohai/processing", "Date": "2015-08-15T16:40:27Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.endsWith(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isTextTruncated) { if (!emptyTruncateText) { textView.setText(song); }else { android.util.Log.e(\"E/TouchInterceptFL\", (\"songTruncated is empty or null. Did you remember \" + \"to set the song string when setting the song name in your text view?\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4358/buggy-version/app.src.main.java.com.kabouzeid.gramophone.views.TouchInterceptFrameLayout.java", "BodyUseAPI": [], "Fixed commit": "ba6a88e751463a1432ba01a5199b96a0297790ac", "Url": "https://api.github.com/repos/theduffmaster/Phonograph", "Date": "2017-06-11T08:34:04Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((leftfr.prod.get(i).size()) > 2) { for (int k = 1; k < (leftfr.prod.get(i).size()); k++) if ((leftfr.prod.get(i).get(0).toString().charAt(0)) != (leftfr.prod.get(i).get(k).toString().charAt(0))) temp = ((temp + (leftfr.prod.get(i).get(k).toString())) + t) + \"/\"; leftfr.finalprod.add((((leftfr.prod.get(i).get(0).toString().charAt(0)) + \"->\") + (temp.substring(0, ((temp.length()) - 1))))); }else leftfr.finalprod.add(((leftfr.prod.get(i).get(0).toString().charAt(0)) + \"->\u03f5\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6900/buggy-version/leftfr.java", "BodyUseAPI": ["java.util.List.get(int)", "java.lang.Object.toString()", "java.util.List<java.util.List>.get(int)", "java.util.List<java.util.List>.get(int)", "java.util.List<java.util.List>.get(int)", "java.lang.Object.toString()", "java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.Object.toString()", "java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.String.charAt(int)", "java.util.List.get(int)", "java.util.List<java.util.List>.get(int)", "java.util.List<java.util.List>.get(int)", "java.util.List.get(int)", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.util.List<java.util.List>.get(int)", "java.util.List.get(int)", "java.lang.Object.toString()", "java.lang.Object.toString()", "java.util.List.get(int)", "java.lang.String.charAt(int)", "java.util.List.size()"], "Fixed commit": "0a64f1f22079d7b2d9fc62098fec730214fa9374", "Url": "https://api.github.com/repos/ayush-aggarwal/System-Software-and-Compiler-Design", "Date": "2016-04-13T16:54:37Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((visSearchHits) == null) { visSearchHits = this.getSearchHits(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2746/buggy-version/src.de.mpa.client.model.dbsearch.PeptideSpectrumMatch.java", "BodyUseAPI": [], "Fixed commit": "6ffd4954a39a9f9de7035eab1322b037839ee3e7", "Url": "https://api.github.com/repos/compomics/meta-proteome-analyzer", "Date": "2016-07-21T10:47:38Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((accession.length) > 1) { proteinlist.add(accession[1]); }else { proteinlist.add(accession_split[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2746/buggy-version/src.de.mpa.db.storager.MascotStorager.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "6ffd4954a39a9f9de7035eab1322b037839ee3e7", "Url": "https://api.github.com/repos/compomics/meta-proteome-analyzer", "Date": "2016-07-21T10:47:38Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (match.isVisible()) { matches.add(match.getSearchSpectrumID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2746/buggy-version/src.de.mpa.client.model.dbsearch.ProteinHit.java", "BodyUseAPI": ["de.mpa.client.model.SpectrumMatch.getSearchSpectrumID()", "java.util.Set<java.lang.Long>.add(match.getSearchSpectrumID())"], "Fixed commit": "6ffd4954a39a9f9de7035eab1322b037839ee3e7", "Url": "https://api.github.com/repos/compomics/meta-proteome-analyzer", "Date": "2016-07-21T10:47:38Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cpw.mods.fml.common.FMLCommonHandler.instance().getSide()) == (cpw.mods.fml.relauncher.Side.CLIENT)) { biomesoplenty.common.eventhandler.BOPEventHandlers.registerGUIEventHandlers(); biomesoplenty.common.eventhandler.BOPEventHandlers.registerClientEventHandlers(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4202/buggy-version/src.main.java.biomesoplenty.common.eventhandler.BOPEventHandlers.java", "BodyUseAPI": [], "Fixed commit": "ea98ed002dee4f7a70d9a2a34b419240ec1a6e62", "Url": "https://api.github.com/repos/Glitchfiend/BiomesOPlenty", "Date": "2014-06-29T10:40:38Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (permission.getAuthority().equals(\"ROLE_ADMIN\")) { removeAdmin(user.getSubjectName()); }else { removeRole(user, permission.getAuthority()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8297/buggy-version/chpl.chpl-auth.src.main.java.gov.healthit.chpl.auth.manager.impl.SecuredUserManagerImpl.java", "BodyUseAPI": ["gov.healthit.chpl.auth.dto.UserPermissionDTO.getAuthority()", "gov.healthit.chpl.auth.manager.impl.SecuredUserManagerImpl.removeRole(gov.healthit.chpl.auth.dto.UserDTO,permission.getAuthority())"], "Fixed commit": "3ed0c27977d187c2799552d13e88ebd047b56f77", "Url": "https://api.github.com/repos/kekey1/chpl-api", "Date": "2015-10-20T15:11:55Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.healthit.chpl.auth.manager.UserManager.getById(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (toDelete == null) { throw new gov.healthit.chpl.auth.user.UserRetrievalException((\"Could not find user with id \" + userId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8297/buggy-version/chpl.chpl-service.src.main.java.gov.healthit.chpl.web.controller.UserManagementController.java", "BodyUseAPI": [], "Fixed commit": "3ed0c27977d187c2799552d13e88ebd047b56f77", "Url": "https://api.github.com/repos/kekey1/chpl-api", "Date": "2015-10-20T15:11:55Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tk == (ff.charger.text.BaseLexer.WHITESPACE)) { return this.lexer.getToken(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4566/buggy-version/src.main.java.ff.parser.FFParser.java", "BodyUseAPI": [], "Fixed commit": "ee046017af1f8a474a7c9434f0964218f286602b", "Url": "https://api.github.com/repos/fernandojerez/ff", "Date": "2017-07-28T22:25:21Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pat_irc_apachekafka.PAT_IRC_ApacheKafka.listChannel.contains(channelName)) { java.lang.String message = (((((\"[\" + channelName) + \"]\") + \" (\") + (pat_irc_apachekafka.PAT_IRC_ApacheKafka.NICKNAME)) + \") \") + msg; pat_irc_apachekafka.PAT_IRC_ApacheKafka.sendMessage(channelName, message); }else java.lang.System.out.println(((\"Anda belum tergabung di channel '\" + channelName) + \"'\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4197/buggy-version/PAT_IRC_ApacheKafka.src.pat_irc_apachekafka.PAT_IRC_ApacheKafka.java", "BodyUseAPI": ["pat_irc_apachekafka.PAT_IRC_ApacheKafka.sendMessage(java.lang.String,java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "a32eec357553d13bd0f3b541baa6d2aa90a744c2", "Url": "https://api.github.com/repos/ritasarah/kafka_irc", "Date": "2015-10-19T06:23:13Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parsedList.isEmpty()) throw new com.synopsys.basiccalculator.exception.InvalidExpressionException(\"Exception while parsing\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4169/buggy-version/src.main.java.com.synopsys.basiccalculator.BasicCalculator.java", "BodyUseAPI": [], "Fixed commit": "a914ffc9e5fa118bc20b65fa4938d9ded87543ae", "Url": "https://api.github.com/repos/vinaycn/Basic-Calculator", "Date": "2017-08-19T17:53:18Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (moduleName != null) { nameForOutput = moduleName.toString(); }else { logger.info(\"Module '{}' was not found in schema from mount point\", schema.getQName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7522/buggy-version/opendaylight.md-sal.sal-rest-connector.src.main.java.org.opendaylight.controller.sal.rest.impl.JsonMapper.java", "BodyUseAPI": ["java.lang.CharSequence.toString()"], "Fixed commit": "6f323f119929724ee90178c53dd93fe1250ac77d", "Url": "https://api.github.com/repos/opendaylight/controller", "Date": "2014-01-30T10:23:52Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playSoundFlag) { player.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6377/buggy-version/app.src.main.java.com.tidisventures.drummersightread.MidiPlayer.java", "BodyUseAPI": [], "Fixed commit": "a3d52ceab96cfa29e75a0a29881e56e66d2b5ada", "Url": "https://api.github.com/repos/jinyu112/DrummerSightRead", "Date": "2016-11-06T21:58:50Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (trainedSet.add(s)) { extractor.addTrainingDataForSize(dbName, schema, s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3629/buggy-version/src.main.java.edu.umich.gpd.algorithm.ILPSolver2.java", "BodyUseAPI": ["edu.umich.gpd.algorithm.ILPSolver2.addTrainingDataForSize(java.lang.String,edu.umich.gpd.algorithm.ILPSolver2,edu.umich.gpd.database.common.Structure)"], "Fixed commit": "ab5123f29691dc65d18adc17c278578ac162c599", "Url": "https://api.github.com/repos/dongyoungy/gpd", "Date": "2017-03-08T23:46:50Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((username.length()) > (trimNicksAt)) { trimmedUsername = username.substring(0, trimNicksAt); }else { trimmedUsername = username; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3360/buggy-version/src.ch.romibi.minecraft.toIrc.IrcHandler.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "81b5a4c8a6b29bdce73c06ff5b3e34b99e3968b1", "Url": "https://api.github.com/repos/romibi/MinecraftToIrc", "Date": "2012-12-16T00:46:24Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["theStaff.getSequence().getLine(((line) + (smp.stateMachine.StateMachine.getMeasureLineNum())))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (temp.isEmpty()) { smp.components.staff.StaffVolumeEventHandler sveh = theStaff.getNoteMatrix().getVolHandler(line); sveh.setVolumeVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4804/buggy-version/src.smp.components.staff.StaffInstrumentEventHandler.java", "BodyUseAPI": [], "Fixed commit": "9382580c1312ed558197ac3295369c2a35a5de71", "Url": "https://api.github.com/repos/DC37/Super-Mario-Paint", "Date": "2013-12-16T06:15:48Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(theLine.getNotes().isEmpty())) setVolume(((stp.getHeight()) - (event.getY())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4804/buggy-version/src.smp.components.staff.StaffVolumeEventHandler.java", "BodyUseAPI": [], "Fixed commit": "9382580c1312ed558197ac3295369c2a35a5de71", "Url": "https://api.github.com/repos/DC37/Super-Mario-Paint", "Date": "2013-12-16T06:15:48Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i.getDef().members) && (!(org.moparscape.msc.gs.Server.isMembers()))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7649/buggy-version/GameServer.src.org.moparscape.msc.gs.model.Npc.java", "BodyUseAPI": [], "Fixed commit": "0fb141c35e442c6b41ce7c7cde03e9e9655dcea4", "Url": "https://api.github.com/repos/Lothy/MoparClassic", "Date": "2012-01-08T05:27:44Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((annotation != null) && ((annotation.name().length()) > 0)) { propertyName = annotation.name(); }else { propertyName = (java.lang.Character.toLowerCase(methodName.charAt(3))) + (methodName.substring(4)); java.lang.reflect.Field field = com.alibaba.fastjson.util.TypeUtils.getField(clazz, propertyName, declaredFields); if (field != null) { com.alibaba.fastjson.annotation.JSONField fieldAnnotation = field.getAnnotation(com.alibaba.fastjson.annotation.JSONField.class); if ((fieldAnnotation != null) && (!(fieldAnnotation.deserialize()))) { continue; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6431/buggy-version/src.main.java.com.alibaba.fastjson.util.JavaBeanInfo.java", "BodyUseAPI": ["com.alibaba.fastjson.annotation.JSONField.name()"], "Fixed commit": "18fd6baf89a05d0835da0f5e513aa6259e3e1664", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-05-09T04:45:57Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isSavedInstanceState)) { presenter.loadData(formId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7008/buggy-version/app.src.main.java.org.openlmis.core.view.fragment.VIARequisitionFragment.java", "BodyUseAPI": [], "Fixed commit": "e528585486640b11f8950e182c89b0a8120e8dc2", "Url": "https://api.github.com/repos/SIGLUS/lmis-moz-mobile", "Date": "2015-11-27T11:36:53Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.io.PrintWriter>.get(element.getFName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (pw == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2007/buggy-version/flink-runtime.src.main.java.org.apache.flink.runtime.state.hybrid.MemFsListState.java", "BodyUseAPI": [], "Fixed commit": "8e77d839560a15a63b327e81d0ee1ceaf1bba72f", "Url": "https://api.github.com/repos/sesteves/flink", "Date": "2016-12-16T19:41:08Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(regionName.equals(\"global\"))) plugin.regionManager.loadRegion(regionName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8825/buggy-version/src.com.matejdro.bukkit.portalstick.util.Config.java", "BodyUseAPI": ["plugin.regionManager.loadRegion(java.lang.String)"], "Fixed commit": "bbeabdee72ef8dd8ebe1f46c3d422596b09a191c", "Url": "https://api.github.com/repos/V10lator/PortalStick", "Date": "2012-11-06T13:45:24Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) org.basex.query.func.NODBCTX.thrw(input, Function.DELETE.desc);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5281/buggy-version/src.main.java.org.basex.query.func.FNDb.java", "BodyUseAPI": [], "Fixed commit": "ed58e9afab49c0862687442b1f6e1f585bbef6f0", "Url": "https://api.github.com/repos/dimitarp/basex", "Date": "2011-06-19T10:46:23Z"},
{"Line": "=>1253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.powertac.householdcustomer.customers.Village.findActiveSubscriptionsForCustomer(org.powertac.common.CustomerInfo)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((subscriptions != null) || ((subscriptions.size()) != 0)) { subscriptions.get(0).usePower(load); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8614/buggy-version/src.main.java.org.powertac.householdcustomer.customers.Village.java", "BodyUseAPI": ["java.util.List<org.powertac.common.TariffSubscription>.get(int)", "subscriptions.get(0).usePower(double)"], "Fixed commit": "eab19ae4aa6a7b97de1ef7370ad054ae72a916cb", "Url": "https://api.github.com/repos/powertac/household-customer", "Date": "2013-06-12T07:54:07Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(org.apache.commons.lang3.StringUtils.isEmpty(rule.getRegion()))) && (org.apache.commons.lang3.StringUtils.isEmpty(rule.getEnvironment()))) { throw new io.github.ibuildthecloud.gdapi.exception.ValidationErrorException(io.github.ibuildthecloud.gdapi.validation.ValidationErrorCodes.MISSING_REQUIRED, \"environment\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5423/buggy-version/code.iaas.service-discovery.api.src.main.java.io.cattle.platform.servicediscovery.api.filter.ServiceValidationFilter.java", "BodyUseAPI": [], "Fixed commit": "5d776d6c89252f8623c876c490dfc42d555486a4", "Url": "https://api.github.com/repos/alena1108/cattle", "Date": "2017-12-11T20:39:32Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["myField.getCard(i).getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(status.containsStatus(CardStatusType.\u865a\u5f31))) { resolver.removeStatus(myField.getCard(i), CardStatusType.\u9ebb\u75f9); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/736/buggy-version/workspace.CardFantasyCore.src.cfvbaibai.cardfantasy.engine.GameEngine.java", "BodyUseAPI": [], "Fixed commit": "c6c0159fe5023f45da9d9d6eea9e7c3f9bbf3de9", "Url": "https://api.github.com/repos/cfvbaibai/CardFantasy", "Date": "2014-12-17T17:17:20Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getImageThumbURL()) != null) && (!(\"\".equals(getImageThumbURL())))) { encodedPicture = id.base.app.encryptor.EncodeDecode.getBase64FromLink(getImageThumbURL()); }else if (((getImageURL()) != null) && (!(\"\".equals(getImageURL())))) { encodedPicture = id.base.app.encryptor.EncodeDecode.getBase64FromLink(getImageURL()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1559/buggy-version/Entity.src.id.base.app.valueobject.research.Research.java", "BodyUseAPI": [], "Fixed commit": "3e53b3bb1fa98e74505666e3220bfa2601e169c7", "Url": "https://api.github.com/repos/utharamadhan/base.app", "Date": "2017-07-04T04:51:55Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((url) == null) || ((url) == \"\")) url = getArguments().getString(com.gigigo.orchextra.core.sdk.model.detail.viewtypes.BrowserContentData.EXTRA_URL);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2166/buggy-version/ocmsdk.src.main.java.com.gigigo.orchextra.core.sdk.model.detail.viewtypes.BrowserContentData.java", "BodyUseAPI": [], "Fixed commit": "c53785166b17fbc88a04fdf01a5b40debea1763d", "Url": "https://api.github.com/repos/Orchextra/orchextra-content-android-sdk", "Date": "2017-05-08T07:41:07Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((url) == null) || ((url) == \"\")) url = getArguments().getString(com.gigigo.orchextra.core.sdk.model.detail.viewtypes.CustomTabsContentData.EXTRA_URL);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2166/buggy-version/ocmsdk.src.main.java.com.gigigo.orchextra.core.sdk.model.detail.viewtypes.CustomTabsContentData.java", "BodyUseAPI": [], "Fixed commit": "c53785166b17fbc88a04fdf01a5b40debea1763d", "Url": "https://api.github.com/repos/Orchextra/orchextra-content-android-sdk", "Date": "2017-05-08T07:41:07Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN)) { activity.startActivity(customTabsIntent.intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2166/buggy-version/ocmsdk.src.main.java.com.gigigo.orchextra.core.sdk.utils.DeviceUtils.java", "BodyUseAPI": [], "Fixed commit": "c53785166b17fbc88a04fdf01a5b40debea1763d", "Url": "https://api.github.com/repos/Orchextra/orchextra-content-android-sdk", "Date": "2017-05-08T07:41:07Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Client.Settings.NAME_PATCH_TYPE) < 0) Client.Settings.NAME_PATCH_TYPE = 0; else if ((Client.Settings.NAME_PATCH_TYPE) > 3) Client.Settings.NAME_PATCH_TYPE = 3;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8230/buggy-version/src.Client.Settings.java", "BodyUseAPI": [], "Fixed commit": "b45937c211030ab32f9c637d8d569fc6ded5ec16", "Url": "https://api.github.com/repos/thelegendofbrian/rscplus", "Date": "2016-03-29T00:22:40Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (new java.io.File(\"assets/itempatch.db\").exists()) { c = java.sql.DriverManager.getConnection(\"jdbc:sqlite:assets/itempatch.db\"); }else { c = java.sql.DriverManager.getConnection(\"jdbc:sqlite::resource:assets/itempatch.db\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8230/buggy-version/src.Game.Item.java", "BodyUseAPI": [], "Fixed commit": "b45937c211030ab32f9c637d8d569fc6ded5ec16", "Url": "https://api.github.com/repos/thelegendofbrian/rscplus", "Date": "2016-03-29T00:22:40Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (destroyed) throw new java.lang.IllegalStateException(\"destroyed\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7729/buggy-version/jestful-commons.src.main.java.org.qfox.jestful.commons.clock.LinkedClock.java", "BodyUseAPI": [], "Fixed commit": "4ef438bef57554ff44ef2c7f054c7898646ca8e9", "Url": "https://api.github.com/repos/core-lib/jestful", "Date": "2017-12-18T16:14:15Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openrdf.query.BindingSet.getValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (valueOfY.toString().contains(\"lobid\")) { return new java.net.URL(valueOfY.stringValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8207/buggy-version/regal-archive.src.main.java.de.nrw.hbz.regal.fedora.RdfUtils.java", "BodyUseAPI": ["org.openrdf.model.Value.stringValue()"], "Fixed commit": "c5994a9c7e1c1ebfea0ecfdfc35f52c5ca247650", "Url": "https://api.github.com/repos/edoweb/regal", "Date": "2014-03-11T07:50:35Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.getCurrentItem().getType().isBlock()) { W.choosenBlock.put(player, event.getCurrentItem()); nl.Steffion.BlockHunt.Managers.MessageM.sendFMessage(player, ConfigC.normal_shopChoosenBlock, (\"block-\" + (event.getCurrentItem().getType().toString().replaceAll(\"_\", \"\").replaceAll(\"BLOCK\", \"\").toLowerCase()))); }else { nl.Steffion.BlockHunt.Managers.MessageM.sendFMessage(player, ConfigC.error_setNotABlock); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7564/buggy-version/src.nl.Steffion.BlockHunt.Listeners.OnInventoryClickEvent.java", "BodyUseAPI": ["nl.Steffion.BlockHunt.Managers.MessageM.sendFMessage(org.bukkit.entity.Player,ConfigC.normal_shopChoosenBlock,(\"block-\" + (event.getCurrentItem().getType().toString().replaceAll(\"_\", \"\").replaceAll(\"BLOCK\", \"\").toLowerCase())))", "event.getCurrentItem().getType().toString().replaceAll(\"_\", \"\").replaceAll(\"BLOCK\", \"\").toLowerCase()", "event.getCurrentItem().getType().toString()", "W.choosenBlock.put(org.bukkit.entity.Player,event.getCurrentItem())", "event.getCurrentItem().getType().toString().replaceAll(java.lang.String,java.lang.String)", "event.getCurrentItem().getType().toString().replaceAll(\"_\", \"\").replaceAll(java.lang.String,java.lang.String)", "event.getCurrentItem().getType()", "org.bukkit.event.inventory.InventoryClickEvent.getCurrentItem()", "org.bukkit.event.inventory.InventoryClickEvent.getCurrentItem()"], "Fixed commit": "98083b4676b9bf79e60bffc425dd0adf01984895", "Url": "https://api.github.com/repos/Steffion/BlockHunt", "Date": "2013-09-25T18:23:13Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (configs == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1596/buggy-version/src.de.roth.jsona.tag.detection.DetectorRulesManager.java", "BodyUseAPI": [], "Fixed commit": "022daa674b22e054e32637de8f17ebeafb4c65de", "Url": "https://api.github.com/repos/frankred/jSona", "Date": "2014-03-09T22:30:04Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((outMsgCtx.getProperty(PassThroughConstants.PASS_THROUGH_SOURCE_CONNECTION)) != null) { ((org.apache.http.nio.NHttpServerConnection) (outMsgCtx.getProperty(PassThroughConstants.PASS_THROUGH_SOURCE_CONNECTION))).getContext().setAttribute(PassThroughConstants.CLIENT_WORKER_INIT_TIME, java.lang.System.currentTimeMillis()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1421/buggy-version/modules.transports.core.nhttp.src.main.java.org.apache.synapse.transport.passthru.ClientWorker.java", "BodyUseAPI": [], "Fixed commit": "2bd0cb77474bde899d156e72e72dec998c9a2171", "Url": "https://api.github.com/repos/sandamal/wso2-synapse", "Date": "2015-05-12T06:30:23Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((responseMsgCtx.getProperty(PassThroughConstants.PASS_THROUGH_SOURCE_CONNECTION)) != null) { ((org.apache.http.nio.NHttpServerConnection) (responseMsgCtx.getProperty(PassThroughConstants.PASS_THROUGH_SOURCE_CONNECTION))).getContext().setAttribute(PassThroughConstants.CLIENT_WORKER_START_TIME, java.lang.System.currentTimeMillis()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1421/buggy-version/modules.transports.core.nhttp.src.main.java.org.apache.synapse.transport.passthru.ClientWorker.java", "BodyUseAPI": ["((org.apache.http.nio.NHttpServerConnection) (responseMsgCtx.getProperty(PassThroughConstants.PASS_THROUGH_SOURCE_CONNECTION))).getContext()", "((org.apache.http.nio.NHttpServerConnection) (responseMsgCtx.getProperty(PassThroughConstants.PASS_THROUGH_SOURCE_CONNECTION))).getContext().setAttribute(PassThroughConstants.CLIENT_WORKER_START_TIME,long)", "org.apache.axis2.context.MessageContext.getProperty(PassThroughConstants.PASS_THROUGH_SOURCE_CONNECTION)"], "Fixed commit": "2bd0cb77474bde899d156e72e72dec998c9a2171", "Url": "https://api.github.com/repos/sandamal/wso2-synapse", "Date": "2015-05-12T06:30:23Z"},
{"Line": "=>1299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cCX) != null) cManage.removeComponent(cCX);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7652/buggy-version/src.com.swifta.mats.web.settings.FeesAndCommModule.java", "BodyUseAPI": [], "Fixed commit": "a37f888ea1bfe870766f9778ba5ffaa6ba06f794", "Url": "https://api.github.com/repos/Swifta/PSAWebPortal", "Date": "2015-02-13T18:58:29Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.equals(org.openflexo.foundation.view.ViewConnector.class)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7656/buggy-version/flexodesktop.model.flexofoundation.src.main.java.org.openflexo.foundation.view.ViewObject.java", "BodyUseAPI": [], "Fixed commit": "d607f84cfd6a65476f448209edd6466812e6ad7d", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2012-12-04T10:15:51Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.sdi.core.impl.data.Person<T>.getProperty(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (list != null) { list.forEach(( item) -> result.add(((java.lang.Long) (item)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1941/buggy-version/SDI-core.src.main.java.ch.sdi.core.impl.data.Person.java", "BodyUseAPI": ["java.util.List<?>.forEach(java.util.function.Consumer<? super ?>)"], "Fixed commit": "8363837690eafb51e3d7555fcbf75db0b70a1726", "Url": "https://api.github.com/repos/heribender/SocialDataImporter", "Date": "2015-01-05T21:15:39Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ctx.objects.select().id(Resources.bankIDs).nearest().poll().inViewport())) { ctx.camera.turnTo(ctx.objects.select().id(Resources.bankIDs).nearest().poll()); org.powerbot.script.Condition.wait(new java.util.concurrent.Callable<java.lang.Boolean>() { @java.lang.Override public java.lang.Boolean call() throws java.lang.Exception { return ctx.objects.select().id(Resources.bankIDs).nearest().poll().inViewport(); } }, 250, 6); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/639/buggy-version/src.Move.java", "BodyUseAPI": [], "Fixed commit": "3af4b9b42b71b23de5795008c51b295ef70f8408", "Url": "https://api.github.com/repos/angeljruiz/RuneRunner", "Date": "2015-11-15T02:48:03Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(banking)) && ((ctx.movement.distance(currentAreaEnd)) <= 12)) { if (!(ctx.objects.select().id(currentAltar).poll().inViewport())) { ctx.camera.turnTo(ctx.objects.select().id(currentAltar).poll()); } if ((ctx.movement.distance(currentAreaEnd)) <= 6) { ctx.objects.select().id(currentAltar).poll().interact(\"Enter\"); org.powerbot.script.Condition.sleep(org.powerbot.script.Random.nextInt(750, 100)); }else { ctx.movement.step(currentAreaEnd); org.powerbot.script.Condition.wait(new java.util.concurrent.Callable<java.lang.Boolean>() { @java.lang.Override public java.lang.Boolean call() throws java.lang.Exception { return (ctx.movement.distance(ctx.movement.destination())) <= 5; } }, 150, 9); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/639/buggy-version/src.Move.java", "BodyUseAPI": ["ctx.movement.distance(org.powerbot.script.Tile)", "ctx.movement.step(org.powerbot.script.Tile)"], "Fixed commit": "3af4b9b42b71b23de5795008c51b295ef70f8408", "Url": "https://api.github.com/repos/angeljruiz/RuneRunner", "Date": "2015-11-15T02:48:03Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.jaychang.utils.DeviceUtils.isFacebookInstalled(this)) { com.facebook.login.LoginManager.getInstance().logOut(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1298/buggy-version/library.src.main.java.com.jaychang.sa.FacebookAuthActivity.java", "BodyUseAPI": [], "Fixed commit": "3e1aa62a98a7d7e473fd949fe2c63e4de2b6ae5b", "Url": "https://api.github.com/repos/jaychang0917/SimpleAuth", "Date": "2017-07-19T04:58:23Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (token == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8709/buggy-version/src.main.java.com.harku.service.user.UserAccService.java", "BodyUseAPI": [], "Fixed commit": "60076397ecdb26ff91bea092cf98657de6a99c58", "Url": "https://api.github.com/repos/HarkuLi/javaDbPrac", "Date": "2017-10-23T02:21:20Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((h.aces) > 0) && ((h.count) > 21)) { h.count -= 10; (h.aces)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4336/buggy-version/src.card_deck.BlackjackPlayer.java", "BodyUseAPI": [], "Fixed commit": "123e87e284589eb67591b985c132a106702c54ae", "Url": "https://api.github.com/repos/chrismalantonio/CIS-3238-Project", "Date": "2017-12-01T04:16:56Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPreviousScrollOffset) != 0) { endTransition(mPreviousActivePage, mActivePage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4226/buggy-version/indicator.src.main.java.com.silgrid.indicator.TransitionPagerIndicator.java", "BodyUseAPI": [], "Fixed commit": "a32e12a256e5561184c328dfc8f3dad95acb20c3", "Url": "https://api.github.com/repos/Ezfero/TransitionPagerIndicator", "Date": "2017-06-05T20:32:29Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (tasks == null) { throw stateException(\"CreateMultipleBlockVolumes.illegalState.invalid\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1350/buggy-version/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.block.tasks.CreateMultipleBlockVolumes.java", "BodyUseAPI": [], "Fixed commit": "be39e73c9ce0b9290d40c3735287e02bcaa9ff56", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-12-08T18:07:33Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((current.left) == null) && ((current.right) == null)) out.write(current.c, yunfeiImplementAlgs4.Huffman.W);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3480/buggy-version/sandbox.java.src.main.java.xyz.yunfeiImplementAlgs4.Huffman.java", "BodyUseAPI": ["edu.princeton.cs.algs4.BinaryOut.write(char,int)"], "Fixed commit": "848d8e975fdb81edffb2375deebce599e4bb2046", "Url": "https://api.github.com/repos/yunfeiguo/bioinfo_toolbox", "Date": "2017-04-23T14:23:19Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.getParentFile().exists())) { file.getParentFile().mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1887/buggy-version/etracsplatform.rameses-updates.src.com.rameses.client.updates.UpdateCenterUtil.java", "BodyUseAPI": ["java.io.File.getParentFile()", "java.io.File.mkdirs()"], "Fixed commit": "5d400dcefff518564401c5736327049cb7ce3b5d", "Url": "https://api.github.com/repos/RamesesDev/etracs2.1", "Date": "2012-07-13T02:32:20Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((bossStillCount) != null) && (!(bossStillCount.toString().equalsIgnoreCase(\"{}\")))) && (bossStillCount.containsKey(npc.getUniqueId()))) { bossStillCount.remove(npc.getUniqueId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7354/buggy-version/src.me.cheesepro.reality.bossrooms.BossesPathFinding.java", "BodyUseAPI": ["java.util.Map<java.util.UUID, java.lang.Double>.remove(npc.getUniqueId())", "net.citizensnpcs.api.npc.NPC.getUniqueId()"], "Fixed commit": "7336d384f3cd21bce875c575dfe8e7e2157bf4da", "Url": "https://api.github.com/repos/MarkYHZhang/Reality", "Date": "2015-08-16T02:18:54Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((bossXLoc) != null) && (!(bossXLoc.toString().equalsIgnoreCase(\"{}\")))) && (bossXLoc.containsKey(npc.getUniqueId()))) { bossXLoc.remove(npc.getUniqueId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7354/buggy-version/src.me.cheesepro.reality.bossrooms.BossesPathFinding.java", "BodyUseAPI": ["net.citizensnpcs.api.npc.NPC.getUniqueId()", "java.util.Map<java.util.UUID, java.lang.Integer>.remove(npc.getUniqueId())"], "Fixed commit": "7336d384f3cd21bce875c575dfe8e7e2157bf4da", "Url": "https://api.github.com/repos/MarkYHZhang/Reality", "Date": "2015-08-16T02:18:54Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((bossZLoc) != null) && (!(bossZLoc.toString().equalsIgnoreCase(\"{}\")))) && (bossZLoc.containsKey(npc.getUniqueId()))) { bossZLoc.remove(npc.getUniqueId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7354/buggy-version/src.me.cheesepro.reality.bossrooms.BossesPathFinding.java", "BodyUseAPI": ["net.citizensnpcs.api.npc.NPC.getUniqueId()", "java.util.Map<java.util.UUID, java.lang.Integer>.remove(npc.getUniqueId())"], "Fixed commit": "7336d384f3cd21bce875c575dfe8e7e2157bf4da", "Url": "https://api.github.com/repos/MarkYHZhang/Reality", "Date": "2015-08-16T02:18:54Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (ship.equals(\"Myoko\")) { ship = ship.replace(\"Myoko\", \"PJSC008_Myoko_1945\"); }else if (ship.equals(\"Koenig\")) { ship = ship.replace(\"Koenig\", \"PGSB105_Koenig\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6276/buggy-version/src.JSParser.java", "BodyUseAPI": [], "Fixed commit": "88e5b097a70ce8104339d115d8631179641c493c", "Url": "https://api.github.com/repos/EdibleBug/WoWS-Fitting-Tool", "Date": "2016-07-20T13:47:32Z"},
{"Line": "=>1309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position >= (AAMedium.size())) { position = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6276/buggy-version/src.JSParser.java", "BodyUseAPI": [], "Fixed commit": "88e5b097a70ce8104339d115d8631179641c493c", "Url": "https://api.github.com/repos/EdibleBug/WoWS-Fitting-Tool", "Date": "2016-07-20T13:47:32Z"},
{"Line": "=>1051", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getNation().equals(\"United_Kingdom\")) { tobj2 = ((org.json.simple.JSONObject) (tobj.get(\"HP_BGM_1\"))); }else if (getNation().equals(\"France\")) { tobj2 = ((org.json.simple.JSONObject) (tobj.get(\"HP_FGM_1\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6276/buggy-version/src.JSParser.java", "BodyUseAPI": [], "Fixed commit": "88e5b097a70ce8104339d115d8631179641c493c", "Url": "https://api.github.com/repos/EdibleBug/WoWS-Fitting-Tool", "Date": "2016-07-20T13:47:32Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.facebook.react.bridge.ReadableArray.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (country != null) { countries.add(country); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7272/buggy-version/android.src.main.java.com.tofugear.countrypicker.CountryPickerModule.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "e79c7a5270d8a23c653613c8e951c4194a56daab", "Url": "https://api.github.com/repos/tofugear/react-native-country-picker", "Date": "2017-05-26T20:41:49Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(paramMap.isEmpty())) { foundIds = daoManager.getTranslatorDao().findColleaguesInDb(paramMap); }else { foundIds = daoManager.getTranslatorDao().getAllButSelfId(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3658/buggy-version/src.main.java.controllers.SearchController.java", "BodyUseAPI": ["daoManager.getTranslatorDao().findColleaguesInDb(java.util.Map<java.lang.Object, java.lang.Object>)"], "Fixed commit": "4c07c6782713a0f4b9f5df11219c640909e65db4", "Url": "https://api.github.com/repos/In-somnia/Transland", "Date": "2017-03-22T20:09:46Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Player.getItemInHand()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (newHat != null) { org.bukkit.inventory.ItemStack oldHat = target.getInventory().getHelmet(); player.setItemInHand(oldHat); target.getInventory().setHelmet(newHat); net.kronosville.oneb.OneB.sendMsg(player, \"Hat set.\"); }else { net.kronosville.oneb.OneB.sendMsg(player, \"You have nothing in your hand!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8810/buggy-version/src.main.java.net.kronosville.oneb.items.HatExecutor.java", "BodyUseAPI": ["target.getInventory().setHelmet(org.bukkit.inventory.ItemStack)"], "Fixed commit": "f79537c3dc62e62009a85dc124f8ce5e6f0d87ad", "Url": "https://api.github.com/repos/Kronosville/OneB", "Date": "2015-09-26T05:56:55Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loadImagesFinal && isCellNetwork) loadImagesFinal = loadOnCellular;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1838/buggy-version/app.src.main.java.ru.ponyhawks.android.text.HtmlRipper.java", "BodyUseAPI": [], "Fixed commit": "0038c72244ce961f562a503b3b3fc7c3869b796e", "Url": "https://api.github.com/repos/cab404/phclient", "Date": "2017-03-15T08:43:19Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.vidyo.domain.CallMeConfig.getReferrers()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (allowedReferrers == null) { allowedReferrers = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/460/buggy-version/src.main.java.io.vidyo.web.CallMeController.java", "BodyUseAPI": [], "Fixed commit": "d0f88d3966983908656b140a30aaa0fc3a9028b1", "Url": "https://api.github.com/repos/Vidyo/callme-web-app-java", "Date": "2017-02-21T15:27:25Z"},
{"Line": "=>654", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.treasure_data.client.HttpClientException.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (statusCode == 409) { java.lang.String name = request.getTableName(); throw new com.treasure_data.model.ConflictException((\"Table alraedy exists: \" + name), e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1359/buggy-version/src.main.java.com.treasure_data.client.DefaultClientAdaptorImpl.java", "BodyUseAPI": [], "Fixed commit": "42a38000e16a0f76400d51fcd0297533e9e30240", "Url": "https://api.github.com/repos/treasure-data/td-client-java", "Date": "2014-08-01T03:08:48Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (institutionDashboardURL.startsWith(org.fogbowcloud.cafe.utils.ResourceUtil.HTTPS_PREFIX)) { return httpClientWrapper.doGetSSL((institutionDashboardURL + \"/nonce\"), sslsf).getContent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5320/buggy-version/src.main.java.org.fogbowcloud.cafe.utils.ResourceUtil.java", "BodyUseAPI": ["httpClientWrapper.doGetSSL((institutionDashboardURL + \"/nonce\"), sslsf).getContent()", "org.fogbowcloud.cafe.saml.HttpClientWrapper.doGetSSL(java.lang.String,org.apache.http.conn.ssl.SSLConnectionSocketFactory)"], "Fixed commit": "87da6a1a38cfee3aeb32e9628df6a17ef5d2ecce", "Url": "https://api.github.com/repos/fogbow/naf-rnp-cafe", "Date": "2016-12-19T19:48:23Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((help.length) == 2) { return help[1].split(\"\\\\s+\")[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/622/buggy-version/src.at.pcgamingfreaks.MinePacks.Updater.BukkitUpdateProvider.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "515fe76d7603a7031bd9b31232b7773f763e0c11", "Url": "https://api.github.com/repos/GeorgH93/Minepacks", "Date": "2016-05-20T12:06:04Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.geosdi.geoplatform.gui.factory.map.GPApplicationMap.getInstance().getApplicationMap().getMap().getProjection().equals(GPCoordinateReferenceSystem.WGS_84.getCode())) { center.transform(GPCoordinateReferenceSystem.WGS_84.getCode(), GPCoordinateReferenceSystem.GOOGLE_MERCATOR.getCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/886/buggy-version/geoplatform-gui.plugin.geoplatform-print.src.main.java.org.geosdi.geoplatform.gui.client.form.GPPrintWidget.java", "BodyUseAPI": [], "Fixed commit": "2db9612e8604af93767074300cb5158140d73efc", "Url": "https://api.github.com/repos/geosdi/geo-platform", "Date": "2013-10-18T15:27:49Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (used == null) used = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4557/buggy-version/src.main.java.com.scb.gmr.PreDealCheckerImpl.java", "BodyUseAPI": [], "Fixed commit": "6f2c13a7fa928447b3a04e7b09fba9e728e0ae91", "Url": "https://api.github.com/repos/haveaguess/sc-test", "Date": "2015-01-13T01:53:21Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.JavaPsiFacade.getInstance(project).findClass(java.lang.String,com.intellij.psi.search.GlobalSearchScope.projectScope(project))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (psiClass == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6099/buggy-version/src.de.kontext_e.idea.plugins.jqa.JqaClass.java", "BodyUseAPI": [], "Fixed commit": "02ec8854e187ad7501742f4b0ceaf92282c395fe", "Url": "https://api.github.com/repos/kontext-e/idea-jqa-plugin", "Date": "2015-06-02T20:40:44Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sspiciness.contentEquals(\"\"))) { savedInstanceState.putInt(com.shriyansh.foodbasket.CreateFoodFragment.FOOD_SPICINESS, java.lang.Integer.parseInt(sspiciness)); }else { savedInstanceState.putInt(com.shriyansh.foodbasket.CreateFoodFragment.FOOD_SPICINESS, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5094/buggy-version/FoodBasket.app.src.main.java.com.shriyansh.foodbasket.CreateFoodFragment.java", "BodyUseAPI": ["android.os.Bundle.putInt(java.lang.String,int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "b6db94dcf32e92fc16c659fcff580df755abf433", "Url": "https://api.github.com/repos/shriyanshgautam/androidfinalproject", "Date": "2015-03-29T14:34:38Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(basePrice.getText().toString().contentEquals(\"\"))) { savedInstanceState.putDouble(com.shriyansh.foodbasket.CreateFoodFragment.FOOD_PRICE, java.lang.Double.parseDouble(basePrice.getText().toString())); }else { savedInstanceState.putDouble(com.shriyansh.foodbasket.CreateFoodFragment.FOOD_PRICE, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5094/buggy-version/FoodBasket.app.src.main.java.com.shriyansh.foodbasket.CreateFoodFragment.java", "BodyUseAPI": ["basePrice.getText().toString()", "android.widget.EditText.getText()", "android.os.Bundle.putDouble(java.lang.String,double)", "java.lang.Double.parseDouble(basePrice.getText().toString())"], "Fixed commit": "b6db94dcf32e92fc16c659fcff580df755abf433", "Url": "https://api.github.com/repos/shriyanshgautam/androidfinalproject", "Date": "2015-03-29T14:34:38Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(scategory.contentEquals(\"\"))) { savedInstanceState.putInt(com.shriyansh.foodbasket.CreateFoodFragment.FOOD_CATEGORY, java.lang.Integer.parseInt(scategory)); }else { savedInstanceState.putInt(com.shriyansh.foodbasket.CreateFoodFragment.FOOD_CATEGORY, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5094/buggy-version/FoodBasket.app.src.main.java.com.shriyansh.foodbasket.CreateFoodFragment.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "android.os.Bundle.putInt(java.lang.String,int)"], "Fixed commit": "b6db94dcf32e92fc16c659fcff580df755abf433", "Url": "https://api.github.com/repos/shriyanshgautam/androidfinalproject", "Date": "2015-03-29T14:34:38Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(serves.getText().toString().contentEquals(\"\"))) { savedInstanceState.putInt(com.shriyansh.foodbasket.CreateFoodFragment.FOOD_SERVES, java.lang.Integer.parseInt(serves.getText().toString())); }else { savedInstanceState.putInt(com.shriyansh.foodbasket.CreateFoodFragment.FOOD_SERVES, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5094/buggy-version/FoodBasket.app.src.main.java.com.shriyansh.foodbasket.CreateFoodFragment.java", "BodyUseAPI": ["android.widget.EditText.getText()", "serves.getText().toString()", "java.lang.Integer.parseInt(serves.getText().toString())", "android.os.Bundle.putInt(java.lang.String,int)"], "Fixed commit": "b6db94dcf32e92fc16c659fcff580df755abf433", "Url": "https://api.github.com/repos/shriyanshgautam/androidfinalproject", "Date": "2015-03-29T14:34:38Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataProvider.contains(\".\")) { java.lang.String[] typeId = dataProvider.split(\"\\\\.\"); if ((typeId.length) == 2) pageData = com.perfectoMobile.page.data.PageDataManager.instance().getPageData(typeId[0], typeId[1]); else pageData = com.perfectoMobile.page.data.PageDataManager.instance().getPageData(dataProvider); }else pageData = com.perfectoMobile.page.data.PageDataManager.instance().getPageData(dataProvider);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8090/buggy-version/libraries.pageManagement.src.com.perfectoMobile.page.keyWord.KeyWordDriver.java", "BodyUseAPI": ["com.perfectoMobile.page.data.PageDataManager.instance().getPageData(java.lang.String)", "java.lang.String.split(java.lang.String)", "com.perfectoMobile.page.data.PageDataManager.instance().getPageData(java.lang.String)"], "Fixed commit": "fbd2a33f40e3b0b71f0e875914a732bdbc28d0d2", "Url": "https://api.github.com/repos/allengeary/perfectoMobile", "Date": "2016-05-04T15:25:34Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (pageData == null) throw new java.lang.IllegalArgumentException(((\"Invalid page data value specified. Ensure that [\" + dataProvider) + \"] exists in your page data definition\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8090/buggy-version/libraries.pageManagement.src.com.perfectoMobile.page.keyWord.KeyWordDriver.java", "BodyUseAPI": [], "Fixed commit": "fbd2a33f40e3b0b71f0e875914a732bdbc28d0d2", "Url": "https://api.github.com/repos/allengeary/perfectoMobile", "Date": "2016-05-04T15:25:34Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position == (selectedIndex)) setSelectedItem(position);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5010/buggy-version/muninforAndroid.src.main.java.com.chteuchteu.munin.adptr.Adapter_SelectableList.java", "BodyUseAPI": ["com.chteuchteu.munin.adptr.Adapter_SelectableList.setSelectedItem(int)"], "Fixed commit": "100fd1083e03da04f21af43bef6771d4cdb87c52", "Url": "https://api.github.com/repos/klaernie/Munin-for-Android", "Date": "2015-02-09T17:35:50Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((onListItemClickListener) != null) onListItemClickListener.onItemClick(getPosition());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8790/buggy-version/Project.app.src.main.java.com.almasosorio.sharethatbill.RecyclerViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "0000fb67fe6bdeefd3221a7360260e1f127ba25f", "Url": "https://api.github.com/repos/jeajjr/android-final-project", "Date": "2015-04-17T04:47:57Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((territoryList.size()) > 0) { com.company.Continent restOfMap = new com.company.Continent(territoryList, 0); continentList.add(restOfMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4815/buggy-version/src.com.company.MapParser.java", "BodyUseAPI": [], "Fixed commit": "9668bb3900e3fd1af5d62c970ca33abc3db705d4", "Url": "https://api.github.com/repos/Zane6888/Risiko", "Date": "2016-01-03T19:55:03Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (r == null) { throw new java.lang.NullPointerException(\"Cannot add null callback to DynamicProperty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8228/buggy-version/archaius-core.src.main.java.com.netflix.config.DynamicProperty.java", "BodyUseAPI": [], "Fixed commit": "77bd0fa97c39d84474c5c51b5b613a810c75d3d4", "Url": "https://api.github.com/repos/gorzell/archaius", "Date": "2012-09-18T23:10:30Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((RobotMap.CAMERA_X_OFFSET) == 0.0) { return cameraDistance; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4694/buggy-version/src.com.nutrons.stronghold.AngleCalculator.java", "BodyUseAPI": [], "Fixed commit": "ad6491520c98ca5e71b22cd664e1903642b7bd66", "Url": "https://api.github.com/repos/FRC125/NU16", "Date": "2016-03-19T19:52:18Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nasa.worldwind.geom.Vec4.angleBetween3(gov.nasa.worldwind.geom.Vec4)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pitch.degrees) < 90) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5667/buggy-version/plugins.au.gov.ga.earthsci.worldwind.src.au.gov.ga.earthsci.worldwind.common.layers.atmosphere.AbstractAtmosphereLayer.java", "BodyUseAPI": [], "Fixed commit": "fb4892bcf1c2eb242312e1651d08392b1bda3c04", "Url": "https://api.github.com/repos/GeoscienceAustralia/earthsci", "Date": "2015-01-19T02:15:25Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.tmpDir) != null) { command.add(\"-T\"); command.add(this.tmpDir.getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8941/buggy-version/src.main.java.fr.ens.biologie.genomique.eoulsan.util.PseudoMapReduce.java", "BodyUseAPI": [], "Fixed commit": "24783c6608d25550ea7555d685bda07e24da83b4", "Url": "https://api.github.com/repos/GenomicParisCentre/eoulsan", "Date": "2016-11-04T09:56:49Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) == 0) { root = buildRoot(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5691/buggy-version/src.com.newbrightidea.util.RTree.java", "BodyUseAPI": [], "Fixed commit": "2f710a384ed5eda4c35ebafc15534203e4eceb71", "Url": "https://api.github.com/repos/rweeks/util", "Date": "2011-10-22T06:02:12Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (typeElement.getModifiers().contains(javax.lang.model.element.Modifier.ABSTRACT)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4300/buggy-version/AndroidAnnotations.androidannotations.src.main.java.com.googlecode.androidannotations.helper.IdValidatorHelper.java", "BodyUseAPI": [], "Fixed commit": "ba7202eb4da54d503fbc98da895df52300094f6d", "Url": "https://api.github.com/repos/ealden/androidannotations", "Date": "2011-11-30T19:31:14Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.catrobat.catroid.facedetection.FaceDetectionHandler.isFaceDetectionRunning()) org.catrobat.catroid.facedetection.FaceDetectionHandler.stopFaceDetection();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5663/buggy-version/catroid.src.org.catrobat.catroid.stage.PreStageActivity.java", "BodyUseAPI": [], "Fixed commit": "719720f16c4bf8d9eeaa2bec3c0962d4e2bd5448", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2014-07-01T09:37:37Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (label != null) { try { createRecommenderForLabel(label); } catch (org.apache.mahout.cf.taste.common.TasteException te) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5442/buggy-version/src.main.java.org.plista.kornakapi.web.servlets.SetPreferenceServlet.java", "BodyUseAPI": ["org.plista.kornakapi.web.servlets.SetPreferenceServlet.createRecommenderForLabel(java.lang.String)"], "Fixed commit": "523d457887e44963221d0793e223ef03c2e66da0", "Url": "https://api.github.com/repos/KukumavMozolo/kornakapi", "Date": "2014-06-05T13:09:44Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((it.unibz.krdb.obda.owlrefplatform.core.queryevaluation.SPARQLQueryUtility.isConstructQuery(query)) || (it.unibz.krdb.obda.owlrefplatform.core.queryevaluation.SPARQLQueryUtility.isDescribeQuery(query))) { try { it.unibz.krdb.obda.model.GraphResultSet resultSet = ((it.unibz.krdb.obda.model.GraphResultSet) (st.execute(query))); return createOWLIndividualAxioms(resultSet); } catch (java.lang.Exception e) { throw new org.semanticweb.owlapi.model.OWLOntologyCreationException(e); } }else { throw new java.lang.RuntimeException(\"Query is not graph query (CONSTRUCT / DESCRIBE).\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8832/buggy-version/quest-owlapi3.src.main.java.it.unibz.krdb.obda.owlrefplatform.owlapi3.QuestOWLStatement.java", "BodyUseAPI": ["it.unibz.krdb.obda.owlrefplatform.core.QuestStatement.execute(java.lang.String)"], "Fixed commit": "31985cc1ef37f3c1bdb893a4799f955d8cd9169f", "Url": "https://api.github.com/repos/ontop/ontop", "Date": "2013-10-18T12:32:34Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((it.unibz.krdb.obda.owlrefplatform.core.queryevaluation.SPARQLQueryUtility.isSelectQuery(query)) || (it.unibz.krdb.obda.owlrefplatform.core.queryevaluation.SPARQLQueryUtility.isAskQuery(query))) { try { return new it.unibz.krdb.obda.owlrefplatform.owlapi3.QuestOWLResultSet(((it.unibz.krdb.obda.model.TupleResultSet) (st.execute(query))), this); } catch (it.unibz.krdb.obda.model.OBDAException e) { throw new it.unibz.krdb.obda.owlapi3.OntopOWLException(e); } }else { throw new java.lang.RuntimeException(\"Query is not tuple query (SELECT / ASK).\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8832/buggy-version/quest-owlapi3.src.main.java.it.unibz.krdb.obda.owlrefplatform.owlapi3.QuestOWLStatement.java", "BodyUseAPI": ["it.unibz.krdb.obda.owlrefplatform.core.QuestStatement.execute(java.lang.String)"], "Fixed commit": "31985cc1ef37f3c1bdb893a4799f955d8cd9169f", "Url": "https://api.github.com/repos/ontop/ontop", "Date": "2013-10-18T12:32:34Z"},
{"Line": "=>667", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["response.body().getAnswers().get(0).getActions().get(1).getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isHavingType.equals(\"anchor\")) { counter = responseActionSize; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8486/buggy-version/app.src.main.java.org.fossasia.susi.ai.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2d106255d118bbc00f966ec0960060422e522bcc", "Url": "https://api.github.com/repos/samsruti/susi_android", "Date": "2016-12-11T08:10:15Z"},
{"Line": "=>675", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isHavingType.equals(\"anchor\")) && (!(ismap))) { addNewMessage(anchorText, false, false, isPieChart, isSearchResult, datumList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8486/buggy-version/app.src.main.java.org.fossasia.susi.ai.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2d106255d118bbc00f966ec0960060422e522bcc", "Url": "https://api.github.com/repos/samsruti/susi_android", "Date": "2016-12-11T08:10:15Z"},
{"Line": "=>673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<fr.gouv.etalab.mastodon.client.Entities.Status>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((status.getReblog().getSpoiler_text()) != null) holder.status_spoiler.setText(status.getReblog().getSpoiler_text());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1499/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.drawers.StatusListAdapter.java", "BodyUseAPI": ["fr.gouv.etalab.mastodon.client.Entities.Status.getReblog()", "status.getReblog().getSpoiler_text()", "android.widget.TextView.setText(status.getReblog().getSpoiler_text())"], "Fixed commit": "4179995f11fe2fa66d7e9e65ccddbb6651d18ce2", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-11-16T17:46:43Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.apache.log4j.LogManager.getRootLogger().getLevel().isGreaterOrEqual(event.getLevel()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1482/buggy-version/src.main.java.com.baidu.bae.api.log.BaeLogAppender.java", "BodyUseAPI": [], "Fixed commit": "3f38d0d50a735f013190c87e6c7b87a2939833f0", "Url": "https://api.github.com/repos/git9527/my-bae-sdk", "Date": "2014-04-11T00:31:22Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["inputText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(com.marianogiuffrida.helpers.StringUtils.isNullOrEmpty(inputValue))) { java.text.NumberFormat format = java.text.NumberFormat.getInstance(); format.setMaximumFractionDigits(2); resultString = format.format(Calculate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5178/buggy-version/app.src.main.java.com.marianogiuffrida.pilotcalc.CalculatorFragment.java", "BodyUseAPI": [], "Fixed commit": "a052e9f8b4ab9b11fd6985e819630ab339b4b472", "Url": "https://api.github.com/repos/mgiuffri/PilotCalc", "Date": "2015-01-31T11:56:10Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.joshuaavalon.wsdeckeditor.sdk.card.Filter.getPower()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (powerRange != null) { powerRange.setMax(((powerRange.getMax()) / 1000)); powerRange.setMin(((powerRange.getMin()) / 1000)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6444/buggy-version/app.src.main.java.com.joshuaavalon.wsdeckeditor.activity.SearchActivity.java", "BodyUseAPI": ["Filter.Range.getMax()", "Filter.Range.setMin(((powerRange.getMin()) / 1000))", "Filter.Range.getMin()", "Filter.Range.setMax(((powerRange.getMax()) / 1000))"], "Fixed commit": "6e41c1fc3b2ddf2c9c012a842bcde3e2702f3527", "Url": "https://api.github.com/repos/joshuaavalon/WsDeckEditor", "Date": "2016-12-08T17:53:46Z"},
{"Line": "=>820", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Number.longValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (val == '\\r') { return \"\\'\\\\r\\'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7222/buggy-version/findbugs.src.java.edu.umd.cs.findbugs.classfile.engine.bcel.ValueRangeAnalysisFactory.java", "BodyUseAPI": [], "Fixed commit": "c19b64ae624ee98bd7cbc3ffe1b1b84e992736ac", "Url": "https://api.github.com/repos/arthepsy/findbugs", "Date": "2015-01-20T05:43:49Z"},
{"Line": "=>817", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Number.longValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (val == '\\n') { return \"\\'\\\\n\\'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7222/buggy-version/findbugs.src.java.edu.umd.cs.findbugs.classfile.engine.bcel.ValueRangeAnalysisFactory.java", "BodyUseAPI": [], "Fixed commit": "c19b64ae624ee98bd7cbc3ffe1b1b84e992736ac", "Url": "https://api.github.com/repos/arthepsy/findbugs", "Date": "2015-01-20T05:43:49Z"},
{"Line": "=>823", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Number.longValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (val == '\\b') { return \"\\'\\\\b\\'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7222/buggy-version/findbugs.src.java.edu.umd.cs.findbugs.classfile.engine.bcel.ValueRangeAnalysisFactory.java", "BodyUseAPI": [], "Fixed commit": "c19b64ae624ee98bd7cbc3ffe1b1b84e992736ac", "Url": "https://api.github.com/repos/arthepsy/findbugs", "Date": "2015-01-20T05:43:49Z"},
{"Line": "=>826", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Number.longValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (val == '\\t') { return \"\\'\\\\t\\'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7222/buggy-version/findbugs.src.java.edu.umd.cs.findbugs.classfile.engine.bcel.ValueRangeAnalysisFactory.java", "BodyUseAPI": [], "Fixed commit": "c19b64ae624ee98bd7cbc3ffe1b1b84e992736ac", "Url": "https://api.github.com/repos/arthepsy/findbugs", "Date": "2015-01-20T05:43:49Z"},
{"Line": "=>832", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Number.longValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (val == '\\\\') { return \"\\'\\\\\\\\\\'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7222/buggy-version/findbugs.src.java.edu.umd.cs.findbugs.classfile.engine.bcel.ValueRangeAnalysisFactory.java", "BodyUseAPI": [], "Fixed commit": "c19b64ae624ee98bd7cbc3ffe1b1b84e992736ac", "Url": "https://api.github.com/repos/arthepsy/findbugs", "Date": "2015-01-20T05:43:49Z"},
{"Line": "=>835", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Number.longValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((val >= 32) && (val < 128)) { return (\"'\" + ((char) (val))) + \"'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7222/buggy-version/findbugs.src.java.edu.umd.cs.findbugs.classfile.engine.bcel.ValueRangeAnalysisFactory.java", "BodyUseAPI": [], "Fixed commit": "c19b64ae624ee98bd7cbc3ffe1b1b84e992736ac", "Url": "https://api.github.com/repos/arthepsy/findbugs", "Date": "2015-01-20T05:43:49Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.kamhon.ieagle.application.Application.appContext) == null) net.kamhon.ieagle.application.Application.appContext = new org.springframework.context.support.FileSystemXmlApplicationContext(net.kamhon.ieagle.application.Application.contextPath);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/232/buggy-version/core.src.main.java.net.kamhon.ieagle.application.Application.java", "BodyUseAPI": [], "Fixed commit": "c1dd1c61f134421b2311e6096bb19a2fd09f4f2b", "Url": "https://api.github.com/repos/kamhon/ieagle", "Date": "2012-09-15T12:38:19Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((bytes == null) || ((bytes.length) == 0)) || (java.util.Arrays.equals(bytes, data))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6798/buggy-version/core.src.main.java.edu.wpi.grip.core.sources.HttpSource.java", "BodyUseAPI": [], "Fixed commit": "87b635f0c1a1b584b73473d6a7c6db04f1f89b01", "Url": "https://api.github.com/repos/SamCarlberg/GRIP", "Date": "2016-03-25T17:50:03Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nlpcn.es4sql.query.DefaultQueryAction.getOrderScript(order.getName(),org.nlpcn.es4sql.domain.Select)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((methodField != null) && (methodField.getName().equals(\"script\"))) { org.elasticsearch.search.sort.ScriptSortBuilder sort = new org.elasticsearch.search.sort.ScriptSortBuilder(new org.elasticsearch.script.Script(methodField.getParams().get(1).value.toString()), \"string\"); sort.order(order.getSortOrder()); request.addSort(sort); }else if ((order.getScript()) != null) { org.elasticsearch.search.sort.ScriptSortBuilder sort = new org.elasticsearch.search.sort.ScriptSortBuilder(order.getScript(), order.getType()); sort.order(order.getSortOrder()); request.addSort(sort); }else { request.addSort(order.getName(), order.getSortOrder()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3823/buggy-version/src.main.java.org.nlpcn.es4sql.query.DefaultQueryAction.java", "BodyUseAPI": ["org.nlpcn.es4sql.domain.MethodField.getParams()", "methodField.getParams().get(1).value.toString()", "methodField.getParams().get(int)"], "Fixed commit": "85dacd589a30fc10ad91ee4456a5cc3ba3e5d747", "Url": "https://api.github.com/repos/visionsky1986/elasticsearch-sql", "Date": "2016-11-28T05:59:48Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (find != 0) { carry += tempString.substring(find); tempString = tempString.substring(0, find); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5782/buggy-version/src.net.comcraft.src.GuiElement.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.substring(int,int)"], "Fixed commit": "e96cea44929cf76713bd6edaeff8b72c21d5f1e5", "Url": "https://api.github.com/repos/simon816/ComcraftModLoader", "Date": "2013-10-20T12:53:57Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (val < 0) { val = 0; val = (edu.miami.cse.reversi.strategy.GameProject5.countFlips(board, simulated)) + (edu.miami.cse.reversi.strategy.GameProject5.corners(move)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/241/buggy-version/src.edu.miami.cse.reversi.strategy.GameProject5.java", "BodyUseAPI": [], "Fixed commit": "585556762179a622fdeaddda0864414fe11b3015", "Url": "https://api.github.com/repos/bellcc/Othello", "Date": "2017-12-01T18:33:00Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path.contains(\"..\")) { iResponse.sendStream(404, \"File not found\", null, null, 0); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1584/buggy-version/server.src.main.java.com.orientechnologies.orient.server.network.protocol.http.command.get.OServerCommandGetStaticContent.java", "BodyUseAPI": [], "Fixed commit": "19749946a368e822714d8dd9bf54b0000322d297", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-06-17T16:59:12Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mIsEnabled)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2804/buggy-version/src.com.github.tdudziak.gps_lock_lock.NotificationUi.java", "BodyUseAPI": [], "Fixed commit": "91036f405fb8a8ae9c9123b836aa4579c52e8c6e", "Url": "https://api.github.com/repos/tdudziak/gps-lock-lock", "Date": "2012-03-26T09:25:56Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((vlcConnection) != null) && ((vlcConnection.getServer()) != null)) { server = ((vlcConnection.getServer().ip) + ':') + (vlcConnection.getServer().vlcPort); }else { server = \"unknown address\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4277/buggy-version/app.src.main.java.com.nicolasbrailo.vlcfreemote.MainActivity.java", "BodyUseAPI": ["com.nicolasbrailo.vlcfreemote.vlc_connector.RemoteVlc.getServer()", "com.nicolasbrailo.vlcfreemote.vlc_connector.RemoteVlc.getServer()"], "Fixed commit": "3e72cb06f01db5ee35a1cd13f894de36ab63f209", "Url": "https://api.github.com/repos/nicolasbrailo/VlcFreemote", "Date": "2017-02-19T12:46:45Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.abs(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((value > 0) && (value < (java.lang.Integer.MAX_VALUE))) ceb.set.set(((int) (value)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2459/buggy-version/src.main.java.com.wandisco.hive.udaf.UDAFCntBitSet.java", "BodyUseAPI": [], "Fixed commit": "2158493a91bf2e24c7c93c6634566aa9ef6972f9", "Url": "https://api.github.com/repos/WANdisco/hive-udf", "Date": "2015-02-11T09:14:19Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ast.getFirstChild().getType()) == (com.puppycrawl.tools.checkstyle.api.TokenTypes.RESOURCE_SPECIFICATION)) { lcurly = ast.getFirstChild().getNextSibling(); }else { lcurly = ast.getFirstChild(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8043/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getFirstChild()", "com.puppycrawl.tools.checkstyle.api.DetailAST.getFirstChild()", "ast.getFirstChild().getNextSibling()"], "Fixed commit": "ff5cffeba9e4e2800d7b214b0b244de174cfcfae", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2017-01-30T20:29:10Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (io.netty.handler.codec.http.HttpHeaders.isKeepAlive(request)) { response.headers().add(com.kaliPATH.grapi.codecs.ajax.CONTENT_LENGTH, 0); ctx.channel().writeAndFlush(response); }else { ctx.channel().writeAndFlush(response).addListener(ChannelFutureListener.CLOSE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6779/buggy-version/netty-codecs.src.main.java.com.kaliPATH.grapi.codecs.ajax.CORSCodec.java", "BodyUseAPI": [], "Fixed commit": "8065b471fd8d696cd07899336b9f001abd1ec880", "Url": "https://api.github.com/repos/kaliPATH/Grapi", "Date": "2014-05-20T07:58:56Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.example.thierry.eventplanner.CalendarFragment.dateSelected.equals(\"\"))) { intent.putExtra(\"DATE\", com.example.thierry.eventplanner.CalendarFragment.dateSelected); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/113/buggy-version/app.src.main.java.com.example.thierry.eventplanner.CalendarFragment.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,java.lang.String)"], "Fixed commit": "b5c38d62fa436f2482607d706c129f5207e7de6c", "Url": "https://api.github.com/repos/thierrywanless/mobileAppDev", "Date": "2017-04-25T18:05:53Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value < 0) { out.append('-'); writeNumberLiteral((-value), numFracDigits); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1418/buggy-version/src.main.java.com.ajjpj.abase.io.AJsonSerHelper.java", "BodyUseAPI": ["com.ajjpj.abase.io.AJsonSerHelper.writeNumberLiteral(long,int)"], "Fixed commit": "e45e95b487538ae3305460e51ce7b6ea1bfb346b", "Url": "https://api.github.com/repos/arnohaase/a-base", "Date": "2014-08-20T08:41:34Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((icManager) != null) { for (com.sk89q.craftbook.circuits.ic.RegisteredICFactory factory : icManager.registered.values()) { factory.getFactory().unload(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6242/buggy-version/src.main.java.com.sk89q.craftbook.bukkit.CircuitCore.java", "BodyUseAPI": [], "Fixed commit": "e4b80311f7f9f3872c09c91d38270336cb8cf827", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-07-10T07:05:59Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (movie != null) { movie.posterPath = (akshit.android.com.popularmovies.FetchMoviePosterTask.imagePath) + (movie.posterPath); movieAdapter.add(movie); akshit.android.com.popularmovies.FetchMoviePosterTask.movies.add(movie); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4813/buggy-version/app.src.main.java.akshit.android.com.popularmovies.FetchMoviePosterTask.java", "BodyUseAPI": [], "Fixed commit": "6c8b93cd243c925c3ae31acc52a06eea8b3fff8a", "Url": "https://api.github.com/repos/iamakshit/popular-movies-app", "Date": "2016-05-15T12:52:14Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (resultSet.next()) { return createRecordUsingResultSet(resultSet); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/624/buggy-version/common.common.src.main.java.com.trifork.stamdata.persistence.RecordPersister.java", "BodyUseAPI": ["com.trifork.stamdata.persistence.RecordPersister.createRecordUsingResultSet(java.sql.ResultSet)"], "Fixed commit": "5f7633e6f4491a8e73b30a346156c36cd5d4d28d", "Url": "https://api.github.com/repos/trifork/sdm", "Date": "2011-11-11T12:24:39Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nars.core.Memory.getOperator(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (ret != null) { ret.anticipate(task.sentence.term, memory, task.sentence.getOccurenceTime(), task); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/452/buggy-version/nars_java.nars.core.control.NAL.java", "BodyUseAPI": ["nars.operator.mental.Anticipate.anticipate(task.sentence.term,nars.core.Memory,task.sentence.getOccurenceTime(),nars.entity.Task)"], "Fixed commit": "e4f1cc933e6d415f58fdce3da4cb20c1ca2cac1d", "Url": "https://api.github.com/repos/opennars/opennars", "Date": "2015-05-01T02:53:25Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gmail.nossr50.util.player.UserManager.getPlayer(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (mcMMOPlayer == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2813/buggy-version/src.main.java.com.gmail.nossr50.util.scoreboards.ScoreboardManager.java", "BodyUseAPI": [], "Fixed commit": "2e1c58500587947be778d87db416c77d7554e999", "Url": "https://api.github.com/repos/mcMMO-Dev/mcMMO", "Date": "2013-11-01T16:38:40Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.sip.SipApplicationSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (session != null) { session.tell(response, self); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6238/buggy-version/restcomm.restcomm.sms.src.main.java.org.restcomm.connect.sms.SmsService.java", "BodyUseAPI": ["akka.actor.ActorRef.tell(javax.servlet.sip.SipServletResponse,akka.actor.ActorRef)"], "Fixed commit": "536a1c7943b0dfaea9e8941966e6e02373370e20", "Url": "https://api.github.com/repos/RestComm/Restcomm-Connect", "Date": "2017-10-10T14:27:26Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((error) != null) return java.lang.Integer.valueOf(error.code); else return -666;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6340/buggy-version/src.main.java.com.ushahidi.java.sdk.api.json.Response.java", "BodyUseAPI": [], "Fixed commit": "9814e6ac1baa9c8ee37a1e5e1fe872e66712076d", "Url": "https://api.github.com/repos/ushahidi/Ushahidi_Java", "Date": "2013-11-04T09:12:12Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((error) != null) return error.message; else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6340/buggy-version/src.main.java.com.ushahidi.java.sdk.api.json.Response.java", "BodyUseAPI": [], "Fixed commit": "9814e6ac1baa9c8ee37a1e5e1fe872e66712076d", "Url": "https://api.github.com/repos/ushahidi/Ushahidi_Java", "Date": "2013-11-04T09:12:12Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(type.hasAnnotation(edu.cmu.cs.glacier.qual.Immutable.class))) { type.addAnnotation(edu.cmu.cs.glacier.qual.Immutable.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/65/buggy-version/src.edu.cmu.cs.glacier.GlacierAnnotatedTypeFactory.java", "BodyUseAPI": ["org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType.addAnnotation(java.lang.Class)"], "Fixed commit": "14caf2e7aab5773ddd5b1590910f28230f78b5aa", "Url": "https://api.github.com/repos/mcoblenz/Glacier", "Date": "2016-05-14T04:23:40Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["e.getNode0().getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (source == (firstNodeB)) { concatenatedGraph.addEdge(java.lang.String.valueOf((i++)), lastNodeA, dest, true); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8840/buggy-version/faops.Concatenate.java", "BodyUseAPI": [], "Fixed commit": "78a4868136f36e9261541fe529ac0a0c3b47bc97", "Url": "https://api.github.com/repos/Caramelo18/COMP-Project", "Date": "2017-05-18T16:38:45Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Objects.equals(DELIMITER, \"\\\\\")) { root = dir.split(\"\\\\\\\\\"); }else { root = dir.split(\"/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8107/buggy-version/src.htw.vs.virtuellesFileSystem.xmlPathCreate.java", "BodyUseAPI": [], "Fixed commit": "a609d3001983cac981a9362f68ca47a4d25b0fbd", "Url": "https://api.github.com/repos/juunior/VS_VirtuellesFilesystem", "Date": "2017-09-21T20:34:06Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.avario.engine.DataAccessObject.get().getLastAltitude()) > 0) { if ((lastLocations.size()) > 0) { float oldLocationAltitude = ((lastLocations.size()) >= (org.avario.engine.prefs.Preferences.location_history)) ? lastLocations.poll() : lastLocations.peek(); gain = (org.avario.engine.DataAccessObject.get().getLastAltitude()) - oldLocationAltitude; } lastLocations.add(org.avario.engine.DataAccessObject.get().getLastAltitude()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5800/buggy-version/src.org.avario.engine.DataAccessObject.java", "BodyUseAPI": [], "Fixed commit": "4e3483dae183b72de5866ba5c57285630b900d23", "Url": "https://api.github.com/repos/msarto/AVario", "Date": "2013-12-13T12:33:47Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sf.timeOut)) { java.lang.System.out.println(); for (int pos = 0; pos < (bestSequence.length); pos++) { java.lang.String AA = sf.aaTypeOptions.get(pos).get(bestSequence[pos]); java.lang.System.out.print((AA + \" \")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4768/buggy-version/src.edu.duke.cs.osprey.control.Main.java", "BodyUseAPI": ["sf.aaTypeOptions.get(pos).get(int)", "sf.aaTypeOptions.get(int)"], "Fixed commit": "aa8356918026c2a023f35b73913f053cf9db86c1", "Url": "https://api.github.com/repos/donaldlab/OSPREY3", "Date": "2017-01-22T00:36:13Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.deuteriumlabs.dendrite.controller.AddTagController.addTag()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isAdded) { this.returnOk(); }else { this.returnFailure(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3713/buggy-version/Dendrite.src.com.deuteriumlabs.dendrite.controller.AddTagServlet.java", "BodyUseAPI": [], "Fixed commit": "f1996a3d0bfe627e33f35ec3216ebd23d58ff20e", "Url": "https://api.github.com/repos/MattHeard/Dendrite", "Date": "2014-08-20T03:40:02Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dao.find(req.getParameter(\"name\")))) { resp.sendRedirect(\"./register.jsp\"); }else { javax.servlet.http.HttpSession session = req.getSession(); session.setAttribute(\"username\", req.getParameter(\"name\")); resp.sendRedirect(\"./todos.jsp\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3672/buggy-version/src.main.java.user.UserServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getSession()", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpSession.setAttribute(java.lang.String,req.getParameter(\"name\"))"], "Fixed commit": "b6c63b6b40bc7db8a0907a98a29eddf225d02147", "Url": "https://api.github.com/repos/Tela96/todoapp", "Date": "2017-05-11T15:44:38Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (((name == null) || (name.equals(\"\"))) || (name.equals(\" \"))) resp.sendRedirect(\"./register.jsp\"); else { dao.add(name); session.setAttribute(\"username\", name); resp.sendRedirect(\"./todos.jsp\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3672/buggy-version/src.main.java.user.UserServlet.java", "BodyUseAPI": ["data.UserDao.add(java.lang.String)", "javax.servlet.http.HttpSession.setAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "b6c63b6b40bc7db8a0907a98a29eddf225d02147", "Url": "https://api.github.com/repos/Tela96/todoapp", "Date": "2017-05-11T15:44:38Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["es.diego.castano.klondike.models.cardstacks.Tableau.viewCardFromTop()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((topCard.getSuit()) != (card.getSuit())) && ((card.getNumber().getValue()) == ((topCard.getNumber().getValue()) - 1))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/406/buggy-version/src.main.java.es.diego.castano.klondike.models.cardstacks.Tableau.java", "BodyUseAPI": [], "Fixed commit": "698a7b063406fa63bb2dfc5b35ed9c9cd01211d8", "Url": "https://api.github.com/repos/dowrow/Klondike", "Date": "2015-10-13T02:33:56Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((module.getModuleType()) != (JpsMonkeyModuleType.INSTANCE)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2752/buggy-version/jps-plugin.src.main.java.io.github.liias.monkey.jps.model.JpsMonkeyModelSerializerExtension.java", "BodyUseAPI": [], "Fixed commit": "b8e7f6c2b28bee64d10bd6b71f3fb67b41724e1d", "Url": "https://api.github.com/repos/liias/monkey", "Date": "2016-04-14T17:19:20Z"},
{"Line": "=>795", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["rtg.world.ChunkManagerRealistic.getBiomeDataAt(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((biome.baseBiome.temperature) < 0.15F) { worldObj.setBlock((sn1 + x), sn3, (sn2 + y), Blocks.snow_layer, 0, 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3900/buggy-version/src.main.java.rtg.world.ChunkGeneratorRealistic.java", "BodyUseAPI": [], "Fixed commit": "350703a0c4902d84698aed4ce1b73cc535975baa", "Url": "https://api.github.com/repos/whichonespink44/Realistic-Terrain-Generation", "Date": "2015-09-20T11:11:29Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.iq.amms.services.helpers.FlatsHelper.getFlatDetails(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (flatDetailsVO != null) { dwellersMasterVO = flatsHelper.getDwellerDetails(block, flatNumber); com.iq.amms.services.helpers.FinancialsHelper financialsHelper = new com.iq.amms.services.helpers.FinancialsHelper(); financialDetailsVO = financialsHelper.getFinancialDetails(flatDetailsVO.getFlatId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/9050/buggy-version/iq-amms.src.com.iq.amms.services.LookupApartment.java", "BodyUseAPI": ["com.iq.amms.services.helpers.FinancialsHelper.getFinancialDetails(flatDetailsVO.getFlatId())", "com.iq.amms.valueobjects.FlatDetailsVO.getFlatId()"], "Fixed commit": "def6661f25bcc80b8ae9eff99e22d34204ed9909", "Url": "https://api.github.com/repos/pranith21/amms", "Date": "2014-01-10T16:01:23Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (addListener) { animator.addListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4769/buggy-version/awesomeanimation.src.main.java.com.jenshen.awesomeanimation.callbacks.counter.AnimatorCounterCallbackDelegator.java", "BodyUseAPI": [], "Fixed commit": "5dc54e46033ee04f536e9ff021097790c9592a79", "Url": "https://api.github.com/repos/JenshenSoft/AwesomeAnimationSimple", "Date": "2017-07-30T16:58:33Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (transactionStatus.equals(NotificationTypeConstants.REQUEST_ACCEPTED_BY_OWNER)) { launchIntentToRequestData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3896/buggy-version/app.src.main.java.com.example.celien.drivemycar.tabs.TabOperations.java", "BodyUseAPI": [], "Fixed commit": "088934449911842a253d07b307a7d8b93ff922f9", "Url": "https://api.github.com/repos/Mornor/Android_DMC", "Date": "2015-05-19T14:36:27Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((columnDef == null) || ((columnDef.getType()) == null)) || ((columnDef.getType().getZlass()) == null)) { throw new org.tommy.stationery.ink.exception.InkException(org.tommy.stationery.ink.enums.MessageEnum.DATA_TYPE_INVALID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2548/buggy-version/stationery-ink.stationery-ink-core.src.main.java.org.tommy.stationery.ink.core.storm.build.storm.BoltBuilder.java", "BodyUseAPI": [], "Fixed commit": "125778e1c6631fa22409549e902eb544729584a7", "Url": "https://api.github.com/repos/dk-stationery/stationery-ink", "Date": "2015-03-31T05:47:03Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isComputing)) { isComputing = true; computeCalibration(); isComputing = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4183/buggy-version/app.src.main.java.fr.isen.twinmx.fragments.chart.CalibrationManager.java", "BodyUseAPI": [], "Fixed commit": "dde3a3434dea618f811b18bd1932b843ad063e61", "Url": "https://api.github.com/repos/TwinMx/android-app", "Date": "2017-02-19T15:34:34Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bindingResult.hasErrors()) { if (((bindingResult.getErrorCount()) > 1) && (bindingResult.hasFieldErrors(\"userName\"))) { return com.github.jens_meiss.blog.request.path.blog.BlogResponse.BLOG_ADD; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4795/buggy-version/blog-client.blog-client-spring.src.main.java.com.github.jens_meiss.blog.web.blog.BlogController.java", "BodyUseAPI": ["org.springframework.validation.BindingResult.hasFieldErrors(java.lang.String)", "org.springframework.validation.BindingResult.getErrorCount()"], "Fixed commit": "b24479d829373f0847e9c477ccc60bec85c01b4a", "Url": "https://api.github.com/repos/jens-meiss/blog", "Date": "2016-10-16T17:56:21Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((node.getNodeType()) == (NodeType.MULTIPLEASGNNODE)) { org.cx4a.rsense.typing.runtime.MultipleAsgnNode mAsgnNode = ((org.cx4a.rsense.typing.runtime.MultipleAsgnNode) (node)); return org.cx4a.rsense.typing.runtime.RuntimeHelper.multipleAssign(graph, mAsgnNode); }else { org.cx4a.rsense.typing.runtime.ArgumentNode argumentNode = ((org.cx4a.rsense.typing.runtime.ArgumentNode) (node)); org.cx4a.rsense.typing.runtime.VertexHolder holder = ((org.cx4a.rsense.typing.runtime.VertexHolder) (scope.getValue(argumentNode.getName()))); if (src == null) { src = graph.createVertex(null); } if (holder == null) { holder = graph.createFreeVertexHolder(); scope.setValue(argumentNode.getName(), holder); } graph.addEdgeAndPropagate(src, holder.getVertex()); return src; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8116/buggy-version/src.org.cx4a.rsense.typing.runtime.RuntimeHelper.java", "BodyUseAPI": [], "Fixed commit": "c886210d226174226934e2c80f6630d8c83a8480", "Url": "https://api.github.com/repos/rsense/rsense-core", "Date": "2014-07-03T01:12:50Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.immotor.service.BatteryOrderRepository.findFirstByStatusAndTypeAndUID(int,int,rentRecord.getuID())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (null != bo) { bo.setStatus(0); bo.setDestroyTime(date); batteryOrderRepository.save(bo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/262/buggy-version/power-netty.src.main.java.com.immotor.service.RentService.java", "BodyUseAPI": ["com.immotor.service.BatteryOrder.setStatus(int)", "com.immotor.service.BatteryOrderRepository.save(com.immotor.service.BatteryOrder)", "com.immotor.service.BatteryOrder.setDestroyTime(java.util.Date)"], "Fixed commit": "e1da6d36b274758f5326199d4f9ab759775b0ee4", "Url": "https://api.github.com/repos/immotor-bill/power", "Date": "2017-11-27T05:24:00Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dakkra.MidiMacro.util.midi.VerboseMessage.getMessageType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (type == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3643/buggy-version/src.com.dakkra.MidiMacro.DeviceProfile.java", "BodyUseAPI": [], "Fixed commit": "85d1ad28e747a4334bd3f76ef6ff1fc6bfe3afbb", "Url": "https://api.github.com/repos/Dakkra/MidiMacro", "Date": "2016-08-13T02:01:02Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (shader.getCompileStatus().isOk()) xyz.upperlevel.openverse.Openverse.logger().info((\"Shader status: \" + (shader.getCompileStatus().getLog()))); else throw new java.lang.IllegalArgumentException((((\"Error compiling shader \\\"\" + file) + \"\\\": \") + (shader.getCompileStatus().getLog())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4996/buggy-version/openverse-client.src.main.java.xyz.upperlevel.openverse.client.resource.shader.ShaderLoader.java", "BodyUseAPI": ["shader.getCompileStatus().getLog()", "xyz.upperlevel.ulge.opengl.shader.Shader.getCompileStatus()", "xyz.upperlevel.ulge.opengl.shader.Shader.getCompileStatus()", "shader.getCompileStatus().getLog()", "xyz.upperlevel.openverse.Openverse.logger().info((\"Shader status: \" + (shader.getCompileStatus().getLog())))"], "Fixed commit": "c7f02970a2df1371063d25c370d09886bf9d077e", "Url": "https://api.github.com/repos/upperlevel/openverse", "Date": "2017-09-05T22:05:14Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (jenkins == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1507/buggy-version/src.main.java.jenkins.plugins.bearychat.workflow.BearychatSendStep.java", "BodyUseAPI": [], "Fixed commit": "fcc3161550387e1549ab7a98b3ee0fae5faba8dd", "Url": "https://api.github.com/repos/jenkinsci/bearychat-plugin", "Date": "2017-03-14T16:23:43Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((target) == null) { throw new java.lang.Exception(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4363/buggy-version/src.hk.coms.wtako.commands.Command_fuck.java", "BodyUseAPI": [], "Fixed commit": "fd6b7b5d5c85d1079f6eb8f838b1f76b7184b8fa", "Url": "https://api.github.com/repos/Shaorune/BukkitHelloWorld", "Date": "2013-12-30T16:56:39Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((finalObject.size()) == 0) { data.put(columnName, null); }else { data.put(columnName, finalObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2816/buggy-version/src.org.apache.cassandra.triggers.InvertedIndex.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Object, java.lang.Object>.put(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "acec3cc5da1beba51db15d53cfe744073f2828a9", "Url": "https://api.github.com/repos/gradeup/cassandra-trigger", "Date": "2017-10-05T05:53:19Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (target == (org.lwjgl.opengl.GL11.GL_TEXTURE_2D)) net.minecraft.client.renderer.GlStateManager.bindTexture(texture); else org.lwjgl.opengl.GL11.glBindTexture(target, texture);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4763/buggy-version/src.main.java.com.kamesuta.mc.signpic.render.OpenGL.java", "BodyUseAPI": ["org.lwjgl.opengl.GL11.glBindTexture(int,int)"], "Fixed commit": "4cfc0337761e5397036cb91fe8e0a5efa40bcc12", "Url": "https://api.github.com/repos/Team-Fruit/SignPicture", "Date": "2016-11-24T13:37:51Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (seed instanceof sample.app.seed.GrainSeed) populateGrain(((sample.app.seed.GrainSeed) (seed))); else if (seed instanceof sample.app.seed.MonteCarloSeed) populateMC(((sample.app.seed.MonteCarloSeed) (seed))); else populateRandom(seed);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/162/buggy-version/src.sample.app.space.Space.java", "BodyUseAPI": ["sample.app.space.Space.populateRandom(sample.app.seed.ISeed)"], "Fixed commit": "908a1a152ee64e3ab254c3514e585efd91682120", "Url": "https://api.github.com/repos/superdurszlak/GameOfLife", "Date": "2017-06-01T12:00:47Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(graphComboBox.getSelectedItem().toString().equals(graphDefaultText))) { selectGraph(currentFrame); }else { selectGraph(prevGraph()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7103/buggy-version/unitex.src.fr.umlv.unitex.frames.FindAndReplaceDialog.java", "BodyUseAPI": [], "Fixed commit": "d15df2d3803a0fa819cf140830c3b7b51af8f75f", "Url": "https://api.github.com/repos/phmz/gramlab-ide", "Date": "2016-06-23T13:11:50Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(graphComboBox.getSelectedItem().toString().equals(graphDefaultText))) { selectGraph(currentFrame); }else { selectGraph(nextGraph()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7103/buggy-version/unitex.src.fr.umlv.unitex.frames.FindAndReplaceDialog.java", "BodyUseAPI": [], "Fixed commit": "d15df2d3803a0fa819cf140830c3b7b51af8f75f", "Url": "https://api.github.com/repos/phmz/gramlab-ide", "Date": "2016-06-23T13:11:50Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(graphComboBox.getSelectedItem().toString().equals(graphDefaultText))) { res = fr.umlv.unitex.graphtools.FindAndReplace.findAll(currentFrame.getGraphicalZone().getBoxes(), findTextField.getText(), useRegularExpressionsCheckBox.isSelected(), caseSensitiveCheckBox.isSelected(), matchOnlyAWholeCheckBox.isSelected(), ignoreCommentBoxesCheckBox.isSelected()); }else { for (fr.umlv.unitex.frames.GraphFrame f : graphFrames) { res += fr.umlv.unitex.graphtools.FindAndReplace.findAll(f.getGraphicalZone().getBoxes(), findTextField.getText(), useRegularExpressionsCheckBox.isSelected(), caseSensitiveCheckBox.isSelected(), matchOnlyAWholeCheckBox.isSelected(), ignoreCommentBoxesCheckBox.isSelected()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7103/buggy-version/unitex.src.fr.umlv.unitex.frames.FindAndReplaceDialog.java", "BodyUseAPI": [], "Fixed commit": "d15df2d3803a0fa819cf140830c3b7b51af8f75f", "Url": "https://api.github.com/repos/phmz/gramlab-ide", "Date": "2016-06-23T13:11:50Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(graphComboBox.getSelectedItem().toString().equals(graphDefaultText))) { selectGraph(currentFrame); }else { selectGraph(nextGraph()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7103/buggy-version/unitex.src.fr.umlv.unitex.frames.FindAndReplaceDialog.java", "BodyUseAPI": [], "Fixed commit": "d15df2d3803a0fa819cf140830c3b7b51af8f75f", "Url": "https://api.github.com/repos/phmz/gramlab-ide", "Date": "2016-06-23T13:11:50Z"},
{"Line": "=>526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(graphComboBox.getSelectedItem().toString().equals(graphDefaultText))) { selectGraph(currentFrame); }else { selectGraph(prevGraph()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7103/buggy-version/unitex.src.fr.umlv.unitex.frames.FindAndReplaceDialog.java", "BodyUseAPI": [], "Fixed commit": "d15df2d3803a0fa819cf140830c3b7b51af8f75f", "Url": "https://api.github.com/repos/phmz/gramlab-ide", "Date": "2016-06-23T13:11:50Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(graphComboBox.getSelectedItem().toString().equals(graphDefaultText))) { res = fr.umlv.unitex.graphtools.FindAndReplace.findAll(currentFrame.getGraphicalZone().getBoxes(), findTextField.getText(), useRegularExpressionsCheckBox.isSelected(), caseSensitiveCheckBox.isSelected(), matchOnlyAWholeCheckBox.isSelected(), ignoreCommentBoxesCheckBox.isSelected()); }else { for (fr.umlv.unitex.frames.GraphFrame f : graphFrames) { res += fr.umlv.unitex.graphtools.FindAndReplace.findAll(f.getGraphicalZone().getBoxes(), findTextField.getText(), useRegularExpressionsCheckBox.isSelected(), caseSensitiveCheckBox.isSelected(), matchOnlyAWholeCheckBox.isSelected(), ignoreCommentBoxesCheckBox.isSelected()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7103/buggy-version/unitex.src.fr.umlv.unitex.frames.FindAndReplaceDialog.java", "BodyUseAPI": [], "Fixed commit": "d15df2d3803a0fa819cf140830c3b7b51af8f75f", "Url": "https://api.github.com/repos/phmz/gramlab-ide", "Date": "2016-06-23T13:11:50Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rareventure.gps2.database.cache.MediaLocTime.getThumbnailBitmap(android.content.ContentResolver,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (x != null) x.recycle();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6577/buggy-version/app.src.main.java.com.rareventure.gps2.reviewer.map.MediaLocTimeMap.java", "BodyUseAPI": ["android.graphics.Bitmap.recycle()"], "Fixed commit": "2383de9dddabf302acbe7b4b5226eddb4857fb8a", "Url": "https://api.github.com/repos/redfish64/TinyTravelTracker", "Date": "2015-12-04T03:06:50Z"},
{"Line": "=>743", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getObjectInstance().getActivateOptions()) != null) && (getObjectInstance().getActivateOptions().getActivateFlags().contains(ActivateFlags.fINCLUDE_LAZYLOAD))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/189/buggy-version/zeidon-joe.src.main.java.com.quinsoft.zeidon.standardoe.EntityInstanceImpl.java", "BodyUseAPI": [], "Fixed commit": "ae24133e274c9698d4b7259647a0216b6e4effd3", "Url": "https://api.github.com/repos/DeegC/zeidon-joe", "Date": "2014-12-05T23:07:49Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.configuration.ConfigurationSection.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (axisType != null) { if (axisType.equalsIgnoreCase(\"x\")) { axis = com.elmakers.mine.bukkit.action.builtin.PlaneAction.Axis.X; }else if (axisType.equalsIgnoreCase(\"z\")) { axis = com.elmakers.mine.bukkit.action.builtin.PlaneAction.Axis.Z; }else { axis = com.elmakers.mine.bukkit.action.builtin.PlaneAction.Axis.Y; } }else { axis = com.elmakers.mine.bukkit.action.builtin.PlaneAction.Axis.Y; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1089/buggy-version/src.main.java.com.elmakers.mine.bukkit.action.builtin.PlaneAction.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "2c389a4a1e632b681a0028b4f8f20e6be3224e0a", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2015-06-21T23:56:07Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.order.bolt.OrderSplit.splitJson(input.getString(0))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (line == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1189/buggy-version/src.main.java.com.order.bolt.OrderSplit.java", "BodyUseAPI": [], "Fixed commit": "c02f9ad872f3f231f166013409172f2cacfc2a96", "Url": "https://api.github.com/repos/SwanSpouse/Kafka2Storm", "Date": "2015-07-22T05:00:59Z"},
{"Line": "=>856", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ouyaFacade) != null) ouyaFacade.shutdown();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4292/buggy-version/modules.native.androidgame.java", "BodyUseAPI": [], "Fixed commit": "7fb34fb49f780eba2d132cc51eac6d55b350dc3f", "Url": "https://api.github.com/repos/adamredwoods/monkey-ouya", "Date": "2013-07-13T08:02:32Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((original.isChanging()) == isChanging) { return original; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4936/buggy-version/subprojects.core-impl.src.main.groovy.org.gradle.api.internal.artifacts.ivyservice.dynamicversions.ForceChangeDependencyDescriptor.java", "BodyUseAPI": [], "Fixed commit": "9c39dca48ea53b8c6bfa8f289e97ff4af675a1e0", "Url": "https://api.github.com/repos/gmercer/gradle", "Date": "2011-11-25T17:22:28Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((status == (java.net.HttpURLConnection.HTTP_MOVED_TEMP)) || (status == (java.net.HttpURLConnection.HTTP_MOVED_PERM))) { java.lang.String newUrl = mUrlConnection.getHeaderField(\"Location\"); mUrlConnection = ((java.net.HttpURLConnection) (new java.net.URL(newUrl).openConnection())); mUrlConnection.connect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3035/buggy-version/src.com.archos.mediascraper.HttpDownloadWrapper.java", "BodyUseAPI": [], "Fixed commit": "1dd8b19ba3947afa01fa0fa469db130447685de7", "Url": "https://api.github.com/repos/archos-sa/aos-MediaLib", "Date": "2017-09-13T14:21:38Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mammon.sandbox.FileObjectStorage.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (object != null) { if (!(identity.equals(object.getIdentity()))) { throw new java.lang.IllegalArgumentException(\"Argument must be primary identity\"); } org.mammon.sandbox.FileObjectStorage.LOG.fine((\"Removing \" + identity)); getFile(identity).delete(); if (object instanceof org.mammon.messaging.DualIdentityTransitionable) { org.mammon.messaging.Transitionable secT = ((org.mammon.messaging.DualIdentityTransitionable) (object)).getSecondaryTransitionable(); org.mammon.sandbox.FileObjectStorage.LOG.fine((\"Also removing \" + (secT.getIdentity()))); getFile(secT.getIdentity()).delete(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2131/buggy-version/sandbox.src.main.java.org.mammon.sandbox.FileObjectStorage.java", "BodyUseAPI": ["org.mammon.messaging.Identifiable.getIdentity()", "java.lang.String.equals(object.getIdentity())"], "Fixed commit": "3df6699feaa63053262a91e191b52555dde7340d", "Url": "https://api.github.com/repos/phedny/Mammon", "Date": "2012-04-28T23:11:27Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.acra.util.JSONReportBuilder.guessType(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value instanceof java.lang.String) { value = ((java.lang.String) (value)).replaceAll(\"\\\\\\\\n\", \"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3296/buggy-version/src.main.java.org.acra.util.JSONReportBuilder.java", "BodyUseAPI": [], "Fixed commit": "c036d6c3052121387b018ccc2f947effbdc67e1d", "Url": "https://api.github.com/repos/ACRA/acra", "Date": "2013-03-26T23:12:11Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((realisation.length()) <= 1) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6895/buggy-version/source.libs.simplenlg.orthography.english.OrthographyHelper.java", "BodyUseAPI": [], "Fixed commit": "3e6f039af50db6e0e72a1471c3aa74e3002c263d", "Url": "https://api.github.com/repos/vidma/aac-speech-android", "Date": "2014-03-13T09:42:05Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((_calendar.get(java.util.Calendar.DAY_OF_WEEK)) == dayOfWeekInt) && (seekAmountInt == 0)) && (seekType.equals(com.joestelmach.natty.WalkerState.SEEK_BY_DAY))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5168/buggy-version/src.main.java.com.joestelmach.natty.WalkerState.java", "BodyUseAPI": [], "Fixed commit": "e9fd3f80c5fa8a8d81293a0a65e6d6ca33de888c", "Url": "https://api.github.com/repos/mdinacci/natty", "Date": "2014-04-05T17:09:21Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.lirmm.graphik.util.URIUtils.getPrefix(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (prefixString.isEmpty()) { prefixString = defaultPrefix.getPrefix(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7644/buggy-version/graal.graal-util.src.main.java.fr.lirmm.graphik.util.URIUtils.java", "BodyUseAPI": [], "Fixed commit": "3d5e6ab82386ad1f2fa4a1aad64680660d087f25", "Url": "https://api.github.com/repos/graphik-team/graal", "Date": "2015-11-04T15:55:15Z"},
{"Line": "=>1557", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fc.getFileFilter().accept(file)) { tempSpectrumFiles.add(file); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4321/buggy-version/src.main.java.com.compomics.denovogui.gui.DeNovoGUI.java", "BodyUseAPI": ["java.util.ArrayList<java.io.File>.add(java.io.File)"], "Fixed commit": "622cc1f92e117fd143e98af20c526a33ca7118d6", "Url": "https://api.github.com/repos/compomics/denovogui", "Date": "2016-04-15T15:54:58Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["my.springstudy.hibernate.UserDAO.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (user != null) { user.getDepartment().getUsers().remove(user); user.setDepartment(null); userDAO.delete(user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5682/buggy-version/springstudy.src.main.java.my.springstudy.hibernate.UserService.java", "BodyUseAPI": ["user.getDepartment().getUsers().remove(my.springstudy.hibernate.User)", "my.springstudy.hibernate.UserDAO.delete(my.springstudy.hibernate.User)", "my.springstudy.hibernate.User.getDepartment()", "my.springstudy.hibernate.User.setDepartment(<nulltype>)", "user.getDepartment().getUsers()"], "Fixed commit": "127ff5bb21f545ee8b8388dae4c9876efe98fb1f", "Url": "https://api.github.com/repos/kongxx/garbagecan", "Date": "2014-12-03T06:39:45Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["my.springstudy.hibernate.DepartmentDAO.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (department != null) { if ((department.getParent()) != null) { department.getParent().getDepartments().remove(department); department.setParent(null); } departmentDAO.delete(department); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5682/buggy-version/springstudy.src.main.java.my.springstudy.hibernate.DepartmentService.java", "BodyUseAPI": ["my.springstudy.hibernate.DepartmentDAO.delete(my.springstudy.hibernate.Department)", "department.getParent().getDepartments()", "my.springstudy.hibernate.Department.getParent()", "department.getParent().getDepartments().remove(my.springstudy.hibernate.Department)", "my.springstudy.hibernate.Department.setParent(<nulltype>)", "my.springstudy.hibernate.Department.getParent()"], "Fixed commit": "127ff5bb21f545ee8b8388dae4c9876efe98fb1f", "Url": "https://api.github.com/repos/kongxx/garbagecan", "Date": "2014-12-03T06:39:45Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["element1.text().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((temp.length) >= 5) for (int i = 0; i <= ((temp.length) - 5); i = i + 5) { courseTable.addCourse(course_name, temp[i], temp[(i + 1)], temp[(i + 2)], temp[(i + 3)], temp[(i + 4)]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4166/buggy-version/app.src.main.java.com.example.aitongji.Utils.Http.InformationReq.java", "BodyUseAPI": ["com.example.aitongji.Utils.Course.CourseTable.addCourse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "bd8448537b700b6e54fdaf8f36f29edc6a026084", "Url": "https://api.github.com/repos/Novemser/iTongJi-App", "Date": "2016-05-17T07:17:13Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataBundle == null) { android.util.Log.e(\"Network\", \"CardRestNotice access cardRest error!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4166/buggy-version/app.src.main.java.com.example.aitongji.Service.CardRestNotice.java", "BodyUseAPI": [], "Fixed commit": "bd8448537b700b6e54fdaf8f36f29edc6a026084", "Url": "https://api.github.com/repos/Novemser/iTongJi-App", "Date": "2016-05-17T07:17:13Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"delete\".equals(node.get(SvnNodeHeader.ACTION)))) { ps().println(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8898/buggy-version/src.main.java.com.github.cstroe.svndumpgui.internal.writer.SvnDumpWriterImpl.java", "BodyUseAPI": [], "Fixed commit": "cc05d025ae345d954302081d8339d5aceacb84b8", "Url": "https://api.github.com/repos/cstroe/svndumpapi", "Date": "2015-10-13T19:44:25Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((node.get(SvnNodeHeader.SOURCE_MD5)) != null) { ps().println(); ps().println(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8898/buggy-version/src.main.java.com.github.cstroe.svndumpgui.internal.writer.SvnDumpWriterImpl.java", "BodyUseAPI": [], "Fixed commit": "cc05d025ae345d954302081d8339d5aceacb84b8", "Url": "https://api.github.com/repos/cstroe/svndumpapi", "Date": "2015-10-13T19:44:25Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mListener) != null) { mDeleteButton.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { app.studentorganizer.adapters.SubjectListAdapter.this.mListener.onDelete(mSubjectId); } }); }else { mDeleteButton.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2808/buggy-version/app.src.main.java.app.studentorganizer.adapters.SubjectListAdapter.java", "BodyUseAPI": [], "Fixed commit": "48263f34fd61b3e8f4c9904423c35ae231b1ab8e", "Url": "https://api.github.com/repos/miriaminna/student-organizer-dima", "Date": "2015-12-09T10:27:37Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.seveniu.spider.pageProcessor.MultiListContentProcessor.pagesNum()", "page.getRequest().getExtra(com.seveniu.spider.pageProcessor.SERIAL_NUM)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((curSerialNum + 2) == pagesNum) { createNode = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/9074/buggy-version/src.main.java.com.seveniu.spider.pageProcessor.MultiListContentProcessor.java", "BodyUseAPI": [], "Fixed commit": "2a22cd1a2dc8779a934e4f63f044d75fc6b6fa95", "Url": "https://api.github.com/repos/seveniu/OneCrawl", "Date": "2016-07-22T18:47:38Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.rim.device.api.io.http.HttpDateParser.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (httpDate == (-1)) { dateField.setDate(null); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/609/buggy-version/RapidFTR-Blackberry.src.com.rapidftr.model.DateFormField.java", "BodyUseAPI": [], "Fixed commit": "3b1f26ebdc296cd04cf6116c7f1f90320668fbb8", "Url": "https://api.github.com/repos/tommunist/RapidFTR---BlackBerry-Edition", "Date": "2010-11-25T08:18:35Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.isDirectory()) { com.niceappp.filepanda.FilePandaApplication.deleteFile(file); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8700/buggy-version/src.com.niceappp.filepanda.FilePandaApplication.java", "BodyUseAPI": ["com.niceappp.filepanda.FilePandaApplication.deleteFile(java.io.File)"], "Fixed commit": "d79d6d7d39d14a2eea4581ea78f0f0a06b515744", "Url": "https://api.github.com/repos/seymores/filepanda", "Date": "2013-01-25T16:22:33Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.niceappp.filepanda.FilesAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (f != null) header = f.getName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8700/buggy-version/src.com.niceappp.filepanda.FileListFragment.java", "BodyUseAPI": ["java.io.File.getName()"], "Fixed commit": "d79d6d7d39d14a2eea4581ea78f0f0a06b515744", "Url": "https://api.github.com/repos/seymores/filepanda", "Date": "2013-01-25T16:22:33Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(inputBuffer.hasRemaining())) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2906/buggy-version/src.main.java.org.jboss.stdio.WriterOutputStream.java", "BodyUseAPI": [], "Fixed commit": "f43ed12714a38586ce0eab1b39bc2704f0e13524", "Url": "https://api.github.com/repos/stuartwdouglas/jboss-stdio", "Date": "2011-05-11T02:59:52Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((queue.size()) > 0) { ServerThread thread = queue.remove(); thread.setToSender(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7160/buggy-version/Server.java", "BodyUseAPI": ["java.util.Queue<ServerThread>.remove()"], "Fixed commit": "d942a9b35aa971ea4ac8840b77afc7c3e50df151", "Url": "https://api.github.com/repos/BBK-PiJ-2014-23/UDP", "Date": "2015-04-22T14:54:48Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.appengine.api.images.ImagesService.getServingUrl(ServingUrlOptions.Builder.withBlobKey(new com.google.appengine.api.blobstore.BlobKey(blobstoreImageKey)))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (url == null) url = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8866/buggy-version/geotown.server-war.src.main.java.de.happycarl.geotown.server.models.Waypoint.java", "BodyUseAPI": [], "Fixed commit": "66e2daf8655e9732a2a0b26598e96b41ec627f63", "Url": "https://api.github.com/repos/HappyCarl/geotown.server", "Date": "2014-07-09T19:44:53Z"},
{"Line": "=>1027", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (toDate) { inputDate = org.apache.commons.lang.time.DateUtils.addDays(inputDate, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1710/buggy-version/ole-app.olefs.src.main.java.org.kuali.ole.select.document.OleReceivingQueueSearchDocument.java", "BodyUseAPI": [], "Fixed commit": "e024d8449131fb8e5ada8f4cf36ccae25a348d14", "Url": "https://api.github.com/repos/jayared/ole", "Date": "2016-02-11T09:46:22Z"},
{"Line": "=>684", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (target == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8990/buggy-version/DroneApplication.app.src.main.java.fr.m2gla.istic.projet.activity.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "e438c62e477b612e7ebe5b069dd842de523b80fc", "Url": "https://api.github.com/repos/drone-project-m2gla/M2GLAProject-Drone-Project", "Date": "2015-05-28T15:55:56Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mc.player.isCollidedVertically) mc.gameSettings.keyBindForward.pressed = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4058/buggy-version/src.tk.wurst_client.ai.FlyPathProcessor.java", "BodyUseAPI": [], "Fixed commit": "6b47afc1450224784c2152db89ed5cec58e941b1", "Url": "https://api.github.com/repos/Wurst-Imperium/Wurst-MC-1.11", "Date": "2016-12-27T18:15:43Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.docear.plugin.pdfutilities.util.MonitoringUtils.getPdfDirFromMonitoringNode(org.freeplane.features.map.NodeModel)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (file == null) { fireStatusUpdate(SwingWorkerDialog.DETAILS_LOG_TEXT, null, \"corresponding project is not loaded\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1652/buggy-version/docear_plugin_pdfutilities.src.org.docear.plugin.pdfutilities.actions.AbstractMonitoringAction.java", "BodyUseAPI": [], "Fixed commit": "93c76b58b64d85176b7bb329e5e6f47449bfd3c1", "Url": "https://api.github.com/repos/Docear/Desktop", "Date": "2013-06-14T13:55:51Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.withparadox2.grayhours.ui.AnalysisFragment.map.size()) == 0) { averageTimeTextView.setText((\"average time: \" + (com.withparadox2.grayhours.utils.Util.convertSecondsToHoursMinutes(0)))); }else { averageTimeTextView.setText((\"average time: \" + (com.withparadox2.grayhours.utils.Util.convertSecondsToHoursMinutes(((java.lang.Integer.parseInt(taskBeanList.get(index).getTotalTime())) / (com.withparadox2.grayhours.ui.AnalysisFragment.map.size())))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2418/buggy-version/src.com.withparadox2.grayhours.ui.AnalysisFragment.java", "BodyUseAPI": ["android.widget.TextView.setText((\"average time: \" + (com.withparadox2.grayhours.utils.Util.convertSecondsToHoursMinutes(((java.lang.Integer.parseInt(taskBeanList.get(index).getTotalTime())) / (com.withparadox2.grayhours.ui.AnalysisFragment.map.size()))))))", "java.util.Map<java.lang.Integer, java.lang.Integer>.size()", "com.withparadox2.grayhours.utils.Util.convertSecondsToHoursMinutes(((java.lang.Integer.parseInt(taskBeanList.get(index).getTotalTime())) / (com.withparadox2.grayhours.ui.AnalysisFragment.map.size())))"], "Fixed commit": "67a8c7e56721b603c3645b846fa6bc9ce095658f", "Url": "https://api.github.com/repos/withparadox2/GrayHours", "Date": "2014-05-11T00:04:04Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.eriqaugustine.grader.Props.has(\"LATE\")) { score -= com.eriqaugustine.grader.Grader.LATE_DEDUCTION; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/8096/buggy-version/src.com.eriqaugustine.grader.Grader.java", "BodyUseAPI": [], "Fixed commit": "0535072f931cdd910d4c542688efcabbc33592a1", "Url": "https://api.github.com/repos/eriq-augustine/365-grader", "Date": "2016-05-22T17:57:22Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLinkValue) oldSize = com.orientechnologies.common.serialization.types.OLongSerializer.LONG_SIZE; else oldSize = getObjectSizeInDirectMemory(valueSerializer, entryPosition);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/938/buggy-version/core.src.main.java.com.orientechnologies.orient.core.index.sbtree.local.OSBTreeBucket.java", "BodyUseAPI": [], "Fixed commit": "213b9142fdba038ad2fa7dec53c17142082b2486", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-03-17T13:40:29Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tm.kod.widgets.numberfield.client.NumberFieldWidget.3.formatString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (formated.isEmpty()) { setValue(\"\"); }else if (!(oldValue.equals(formated))) { if (((event.getNativeKeyCode()) == (com.google.gwt.event.dom.client.KeyCodes.KEY_DELETE)) && ((selectionLength) == 0)) { (prevCursor)++; } int pos = getNewCursorPosition(formated); setValue(value); setCursorPos(pos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4759/buggy-version/vaadinWidgets.numberfield7.src.main.java.tm.kod.widgets.numberfield.client.NumberFieldWidget.java", "BodyUseAPI": ["tm.kod.widgets.numberfield.client.NumberFieldWidget.3.getNewCursorPosition(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "61118c576f6d826ec05e11e91cb06e57cfea7d2f", "Url": "https://api.github.com/repos/ojkey/master", "Date": "2015-12-09T13:51:16Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((root) == deleted) { root = new randomized.Leaf(null); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2826/buggy-version/src.randomized.Treap.java", "BodyUseAPI": [], "Fixed commit": "dc9e98668b767de6d22e658ed20af73283e5a263", "Url": "https://api.github.com/repos/ArnoldOverwater/RandomizedAlgorithms", "Date": "2016-03-21T18:57:06Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mItemPosition) == 0) { mListView.setItemChecked(0, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6406/buggy-version/app.src.main.java.com.zagayevskiy.sunshine.ForecastFragment.java", "BodyUseAPI": [], "Fixed commit": "5ff2c5b89ed90db3cb53563ac112c39335f36097", "Url": "https://api.github.com/repos/zagayevskiy/Sunshine", "Date": "2015-03-07T16:22:31Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (marker < 2) { for (cmsys.UserManagement.User user : pmList) { int p = cmsys.PaperManagement.Preference.getPreference(user.getUID(), paper.getPid()); if (p != 3) { cmsys.PaperManagement.Distribution.distribute(paper.getPid(), user.getUID(), ((cmsys.Common.Time.timestamp()) + 432000000)); } if (marker >= 2) break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5452/buggy-version/cmsys.Common.CronJob.java", "BodyUseAPI": [], "Fixed commit": "8ec8d6fba86e504954df1294fadfe8eea2566ae1", "Url": "https://api.github.com/repos/tommy2018/cmsys", "Date": "2014-10-29T20:14:51Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["holder.getTransform().getPosition()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(position.equals(newPosition))) { if ((position.distance(newPosition)) < 4) { holder.getTransform().setPosition(newPosition); }else { holder.sendMessage(\"Restoring position due to fast movement\"); holder.teleport(holder.getTransform().getTransform()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3281/buggy-version/src.main.java.org.spout.vanilla.protocol.handler.player.PlayerPositionHandler.java", "BodyUseAPI": ["org.spout.api.geo.discrete.Point.distance(org.spout.api.geo.discrete.Point)", "holder.getTransform().setPosition(org.spout.api.geo.discrete.Point)"], "Fixed commit": "5006553b928cee490281fe1a7e9910caca825c03", "Url": "https://api.github.com/repos/megagamer410/Vanilla", "Date": "2012-09-27T19:55:41Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((person == null) || (ec.globalIDForObject(((net.rujel.vselists.EOEnterpriseObject) (person))).isTemporary())) { ec.revert(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5692/buggy-version/RujelVseLists.Sources.net.rujel.vselists.ListsEditor.java", "BodyUseAPI": ["net.rujel.vselists.EOEditingContext.revert()"], "Fixed commit": "c5a6505c73ec9da909e0d9a8a57a26925e741c01", "Url": "https://api.github.com/repos/baywind/rujel", "Date": "2013-11-19T12:06:41Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resultMetadata) == null) { return null; }else { return resultMetadata.transformation; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6680/buggy-version/src.main.org.deidentifier.arx.framework.check.history.History.java", "BodyUseAPI": [], "Fixed commit": "e3832a567420064454783266041c8f7156849c7f", "Url": "https://api.github.com/repos/fstahnke/arx", "Date": "2015-06-19T10:17:30Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (attribute.annotations().containsKey(JPADotNames.MAP_KEY_COLUMN)) { final org.hibernate.metamodel.internal.Binder.DefaultNamingStrategy defaultNamingStrategy = new org.hibernate.metamodel.internal.Binder.DefaultNamingStrategy() { @java.lang.Override public java.lang.String defaultName(org.hibernate.cfg.NamingStrategy namingStrategy) { return (namingStrategy.propertyToColumnName(attribute.getName())) + \"_KEY\"; } }; indexSource = new org.hibernate.metamodel.internal.source.annotations.BasicPluralAttributeIndexSourceImpl(this, attribute, defaultNamingStrategy); }else if (attribute.annotations().containsKey(JPADotNames.MAP_KEY_ENUMERATED)) { throw new org.hibernate.cfg.NotYetImplementedException(\"@MapKeyEnumerated is not supported yet.\"); }else if (attribute.annotations().containsKey(JPADotNames.MAP_KEY_TEMPORAL)) { throw new org.hibernate.cfg.NotYetImplementedException(\"@MapKeyTemporal is not supported yet.\"); }else if (attribute.annotations().containsKey(JPADotNames.MAP_KEY_JOIN_COLUMN)) { throw new org.hibernate.cfg.NotYetImplementedException(\"@MapKeyJoinColumn is not supported yet.\"); }else if (attribute.annotations().containsKey(JPADotNames.MAP_KEY_JOIN_COLUMNS)) { throw new org.hibernate.cfg.NotYetImplementedException(\"@MapKeyJoinColumns is not supported yet.\"); }else if ((java.lang.String.class.equals(attribute.getIndexType())) || (attribute.getIndexType().isPrimitive())) { final org.hibernate.metamodel.internal.Binder.DefaultNamingStrategy defaultNamingStrategy = new org.hibernate.metamodel.internal.Binder.DefaultNamingStrategy() { @java.lang.Override public java.lang.String defaultName(org.hibernate.cfg.NamingStrategy namingStrategy) { return (namingStrategy.propertyToColumnName(attribute.getName())) + \"_KEY\"; } }; indexSource = new org.hibernate.metamodel.internal.source.annotations.BasicPluralAttributeIndexSourceImpl(this, attribute, defaultNamingStrategy); }else { throw new org.hibernate.cfg.NotYetImplementedException(\"Embeddable and entity keys are not supported yet.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5170/buggy-version/hibernate-core.src.main.java.org.hibernate.metamodel.internal.source.annotations.IndexedPluralAttributeSourceImpl.java", "BodyUseAPI": [], "Fixed commit": "082e6b7e188c12c3c6d958d1e8b1d8265ea8c7e0", "Url": "https://api.github.com/repos/hibernate/hibernate-orm", "Date": "2013-07-15T11:35:47Z"},
{"Line": "=>625", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (s != null) { atmosphereDotXmlPath = s; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4544/buggy-version/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereFramework.java", "BodyUseAPI": [], "Fixed commit": "99795d7998ca0c6e7b1910e81af66fb3468202f6", "Url": "https://api.github.com/repos/Atmosphere/atmosphere", "Date": "2012-05-17T17:56:37Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getGenericSuperclass()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (type == null) { return new java.util.ArrayList<java.lang.Class<?>>(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3925/buggy-version/dowsers-core.src.main.java.org.intelligentsia.dowsers.core.reflection.Reflection.java", "BodyUseAPI": [], "Fixed commit": "9a6ca80af04c7057ec05ac9aefb839d6651efee2", "Url": "https://api.github.com/repos/geronimo-iia/dowsers", "Date": "2012-10-16T10:09:00Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.PATHomei.yanyu.util.YanYuUtils.isConnect(this))) { android.widget.Toast.makeText(this, \"\u7f51\u7edc\u5f02\u5e38\", 0).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2471/buggy-version/src.com.PATHomei.yanyu.module.user.LoginAndRegisterActivity.java", "BodyUseAPI": [], "Fixed commit": "76da2459d60314bdd3b221080eaf1f69107dceb5", "Url": "https://api.github.com/repos/seedzi/PATHomei_eclipse", "Date": "2015-07-27T04:58:07Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["etEmail.getText().toString().trim()", "etPass.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(android.text.TextUtils.isEmpty(eMail))) && (!(android.text.TextUtils.isEmpty(pass)))) { signInWithEmail(eMail, pass); }else { android.widget.Toast.makeText(getContext(), \"one of fields is empty\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/5364/buggy-version/app.src.main.java.com.nikpikhmanets.veloroute.fragments.SignInFragment.java", "BodyUseAPI": ["com.nikpikhmanets.veloroute.fragments.SignInFragment.2.signInWithEmail(java.lang.String,java.lang.String)"], "Fixed commit": "b27be119b68549315dcc2df514b7432e0acb3214", "Url": "https://api.github.com/repos/NikPikhmanets/VeloRoute", "Date": "2017-03-28T16:26:56Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path.startsWith(\"/\")) { filePath = new java.io.File((fileStr + path)); }else { filePath = new java.io.File(((fileStr + (java.io.File.separator)) + path)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4229/buggy-version/src.main.java.com.dongnao.jack.servlet.DispatcherServlet.java", "BodyUseAPI": [], "Fixed commit": "818f46424526af39ff433bcca6295473259e7cb3", "Url": "https://api.github.com/repos/sjqzhang/DN-springmvc", "Date": "2017-03-14T02:16:24Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resetNumber) { etNum.setText(\"0\"); resetNumber = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/3443/buggy-version/app.src.main.java.com.evgeniy.calc.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d9f8a957cfa4a6482ceb315c594541a040111441", "Url": "https://api.github.com/repos/EvgeniyAzarov/Calculator", "Date": "2017-01-17T20:28:28Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDstPath) != \"\") fc.setCurrentDirectory(new java.io.File(mDstPath));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2159/buggy-version/FileChooserDemo.java", "BodyUseAPI": [], "Fixed commit": "cfe68b02e5bda1927ba89064bc28658994897557", "Url": "https://api.github.com/repos/tgnivekucn/CopySelectedFilesFromFolderToFolder", "Date": "2017-04-20T16:26:26Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i <= (bitCode.length())) { subCode = bitCode; }else { subCode = de.unidue.ltl.flextag.features.resources.BrownCluster.NOT_SET; dummy = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7779/buggy-version/flextag-features.src.main.java.de.unidue.ltl.flextag.features.resources.BrownCluster.java", "BodyUseAPI": [], "Fixed commit": "3f8aa008150b94dac6f7bd141083baf535b110d6", "Url": "https://api.github.com/repos/Horsmann/FlexTag", "Date": "2016-11-05T16:06:51Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((error) != null) { org.jkiss.dbeaver.runtime.ui.DBUserInterface.getInstance().showError(\"Data error\", \"Error generating script\", error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2307/buggy-version/plugins.org.jkiss.dbeaver.core.src.org.jkiss.dbeaver.ui.controls.resultset.ResultSetPersister.java", "BodyUseAPI": [], "Fixed commit": "2908211553745fe820e4ba25f6380741226daa60", "Url": "https://api.github.com/repos/dbeaver/dbeaver", "Date": "2017-12-10T20:12:35Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((error.type) == (org.wordpress.android.fluxc.network.BaseRequest.GenericErrorType.PARSE_ERROR)) && (error.hasVolleyError())) && ((error.volleyError.getCause()) instanceof org.wordpress.android.fluxc.network.xmlrpc.XMLRPCFault)) && ((((org.wordpress.android.fluxc.network.xmlrpc.XMLRPCFault) (error.volleyError.getCause())).getFaultCode()) == 409)) { errorType = org.wordpress.android.fluxc.store.CommentStore.CommentErrorType.DUPLICATE_COMMENT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/9143/buggy-version/fluxc.src.main.java.org.wordpress.android.fluxc.utils.CommentErrorUtils.java", "BodyUseAPI": [], "Fixed commit": "d2add9c275c742d37a634319100489141b4d0352", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android", "Date": "2016-10-14T08:00:34Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (changeInPercent != null) { builder.withValue(QuoteColumns.PERCENT_CHANGE, com.sam_chordas.android.stockhawk.rest.Utils.truncateChange(jsonObject.getString(\"ChangeinPercent\"), true)); }else { builder.withValue(QuoteColumns.PERCENT_CHANGE, com.sam_chordas.android.stockhawk.rest.Utils.truncateChange(\"0.00\", true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/6146/buggy-version/app.src.main.java.com.sam_chordas.android.stockhawk.rest.Utils.java", "BodyUseAPI": [], "Fixed commit": "60568d984b78c0a434bb353965ea0dce8cc6c389", "Url": "https://api.github.com/repos/SureshCS-50/StockHawk", "Date": "2016-11-13T03:38:53Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["item.getItemMeta().getDisplayName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (displayName != null) { com.gmail.zariust.otherdrops.Log.logInfo(((((\"Checking for lorename condition... '\" + displayName) + \"' == '\") + (loreName)) + \"'\"), Verbosity.HIGHEST); if (displayName.equalsIgnoreCase(loreName)) return true; }else { com.gmail.zariust.otherdrops.Log.logInfo(\"Displayname is null.\", Verbosity.HIGHEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/4221/buggy-version/src.com.gmail.zariust.otherdrops.parameters.conditions.LoreNameCheck.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "com.gmail.zariust.otherdrops.Log.logInfo(java.lang.String,Verbosity.HIGHEST)"], "Fixed commit": "3ae5bc4a8685fe0324847bef36bacb9b9c25c469", "Url": "https://api.github.com/repos/Zarius/Bukkit-OtherBlocks", "Date": "2013-02-21T22:01:48Z"},
{"Line": "=>529", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((prevLogin != null) && (!(prevLogin.equals(mLogin)))) { android.content.ContentValues cv = new android.content.ContentValues(); cv.put(\"user_login\", mLogin); cv.put(Observation._SYNCED_AT, java.lang.System.currentTimeMillis()); int count = getContentResolver().update(Observation.CONTENT_URI, cv, \"user_login = ?\", new java.lang.String[]{ prevLogin }); android.util.Log.d(org.inaturalist.android.INaturalistService.TAG, java.lang.String.format(\"Updated %d observations with new user login %s from %s\", count, mLogin, prevLogin)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/2820/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.INaturalistService.java", "BodyUseAPI": ["android.content.ContentValues.put(java.lang.String,java.lang.String)", "java.lang.String.format(java.lang.String,int,java.lang.String,java.lang.String)", "android.util.Log.d(java.lang.String,java.lang.String)", "getContentResolver().update(Observation.CONTENT_URI,android.content.ContentValues,java.lang.String,java.lang.String[])"], "Fixed commit": "e447702daac050d1a6bcfa74793b75239b338c6c", "Url": "https://api.github.com/repos/inaturalist/iNaturalistAndroid", "Date": "2016-10-04T23:19:00Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.io.File>.get(int)", "java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((((file_name_tokens.length) == 4) && ((file_name_tokens[1].equals(\"Dataset 1 Ranking\")) || (file_name_tokens[1].equals(\"Dataset 2 Ranking\")))) || (prop_file.getName().contains(Ranking.GSEARanking))) parts.ranks_name = org.baderlab.csplugins.enrichmentmap.model.Ranking.GSEARanking; else if ((((file_name_tokens.length) == 4) && ((file_name_tokens[1].equals(\"Dataset 1\")) || (file_name_tokens[1].equals(\"Dataset 2\")))) && (file_name_tokens[2].equals(\"RANKS\"))) continue; else parts.ranks_name = prop_file.getName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/1216/buggy-version/EnrichmentMapPlugin.src.main.java.org.baderlab.csplugins.enrichmentmap.actions.EnrichmentMapSessionAction.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.io.File.getName()"], "Fixed commit": "caba576f39d773d0ed7d0f5e1dfddb34f9029883", "Url": "https://api.github.com/repos/BaderLab/EnrichmentMapApp", "Date": "2014-11-27T15:24:56Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((savePath.size()) == 0) && ((mLastDrawPath) != null)) { mPaint.setColor(mLastDrawPath.getPaintColor()); mPaint.setStrokeWidth(mLastDrawPath.getPaintWidth()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V92/7051/buggy-version/app.src.main.java.com.hcz017.drawingview.DrawingView.java", "BodyUseAPI": [], "Fixed commit": "136045a24c954a8e503ce8d37946091736eb35f3", "Url": "https://api.github.com/repos/hcz017/DrawingView", "Date": "2017-07-17T07:06:18Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v17.leanback.widget.ImageCardView.getMainImage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (d != null) { android.graphics.Bitmap b = ((android.graphics.drawable.BitmapDrawable) (d)).getBitmap(); backgroundManager.setBitmap(b); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7620/buggy-version/Tasks.src.main.java.com.dummies.tasks.tv.MainFragment.java", "BodyUseAPI": [], "Fixed commit": "f65a1cc3339bfcafad898656ebc3d8bc57e37dfd", "Url": "https://api.github.com/repos/emmby/android-for-dummies-v3", "Date": "2015-01-10T23:54:10Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (task.getStatus().equals(Task.Status.CANCELED)) throw new org.jclouds.vcloud.director.v1_5.VCloudDirectorException(task);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3026/buggy-version/labs.vcloud-director.src.main.java.org.jclouds.vcloud.director.v1_5.predicates.TaskSuccess.java", "BodyUseAPI": [], "Fixed commit": "bf5e73f0571d11e9cafc7010074bc14e73c28c71", "Url": "https://api.github.com/repos/danikov/jclouds", "Date": "2012-03-19T08:02:34Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (task.getStatus().equals(Task.Status.ABORTED)) throw new org.jclouds.vcloud.director.v1_5.VCloudDirectorException(task);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3026/buggy-version/labs.vcloud-director.src.main.java.org.jclouds.vcloud.director.v1_5.predicates.TaskSuccess.java", "BodyUseAPI": [], "Fixed commit": "bf5e73f0571d11e9cafc7010074bc14e73c28c71", "Url": "https://api.github.com/repos/danikov/jclouds", "Date": "2012-03-19T08:02:34Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tray) != null) { tray.remove(myIcon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1105/buggy-version/src.com.github.sunnybat.commoncode.javax.swing.JFrame.java", "BodyUseAPI": [], "Fixed commit": "dee689fbfc01542b22955e78b3d9062c9c9258b1", "Url": "https://api.github.com/repos/SunnyBat/CommonCode", "Date": "2017-11-03T02:12:42Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.zcu.kiv.kc.plugin.createDir.CreateDirPlugin.askForName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (name.trim().isEmpty()) { javax.swing.JOptionPane.showMessageDialog(this.mainWindow, \"Neplatn\ufffd zad\ufffdn\ufffd.\", \"Chyba.\", javax.swing.JOptionPane.ERROR_MESSAGE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3247/buggy-version/workspace.Plugins.src.cz.zcu.kiv.kc.plugin.createDir.CreateDirPlugin.java", "BodyUseAPI": [], "Fixed commit": "cc9dce8d08d3a6accc993797a6420257ee576a41", "Url": "https://api.github.com/repos/kivCommander/kc-main", "Date": "2013-05-07T14:16:31Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.zcu.kiv.kc.plugin.createDir.CreateDirPlugin.askForName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (name == null) { javax.swing.JOptionPane.showMessageDialog(this.mainWindow, \"Operace byla zru\ufffdena u\ufffdivatelem.\", \"Operace zru\ufffdena.\", javax.swing.JOptionPane.ERROR_MESSAGE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3247/buggy-version/workspace.Plugins.src.cz.zcu.kiv.kc.plugin.createDir.CreateDirPlugin.java", "BodyUseAPI": [], "Fixed commit": "cc9dce8d08d3a6accc993797a6420257ee576a41", "Url": "https://api.github.com/repos/kivCommander/kc-main", "Date": "2013-05-07T14:16:31Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.fantasystock.fantasystock.Activities.MainActivity.WATCHLIST_TYPE) == (com.fantasystock.fantasystock.Activities.MainActivity.LIST_MODE)) { watchlistFragment.refreshWatchlist(); }else { watchlistChartFragment.refreshWatchlist(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/355/buggy-version/app.src.main.java.com.fantasystock.fantasystock.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6ca3e70eff6995fe92f7648d1b1e896dba8173d6", "Url": "https://api.github.com/repos/ted7726/FantasyStock", "Date": "2016-03-18T05:26:23Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(files.isEmpty())) { for (com.cjuega.interviews.dropbox.DbxEPubInfo dbxEPubInfo : files) { mAdapter.add(dbxEPubInfo); } }else { mAdapter.setNoMoreDataToLoad(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8432/buggy-version/app.src.com.cjuega.interviews.bq.fragments.FileListFragment.java", "BodyUseAPI": [], "Fixed commit": "e6afb5c37acb29b0b66c5b1fc82eca143bbd3f4b", "Url": "https://api.github.com/repos/cjuega/bq_interview", "Date": "2013-10-31T20:50:56Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((light) != null) light.remove();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3924/buggy-version/core.src.mx.betobit.fiestavocales.sprites.Balloon.java", "BodyUseAPI": [], "Fixed commit": "f439c437352db1c0387ac9c0bdf8bd0de77f79fc", "Url": "https://api.github.com/repos/jesusmartinoza/La-fiesta-de-las-vocales", "Date": "2016-12-01T14:54:31Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.round(value)) != value) return \"\"; else return mValues.get(((int) (value)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6612/buggy-version/app.src.main.java.leads.motiondisplays.cl.helpers.ByMonthXAxisValueFormatter.java", "BodyUseAPI": [], "Fixed commit": "a36abd3acce123dba92ca00f615059159590f48f", "Url": "https://api.github.com/repos/gabrielrodriguez2746/leads", "Date": "2016-08-19T21:22:23Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((leadsByPlan.size()) > 0) setDataPieChart();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6612/buggy-version/app.src.main.java.leads.motiondisplays.cl.fragments.GraphicFragment.java", "BodyUseAPI": [], "Fixed commit": "a36abd3acce123dba92ca00f615059159590f48f", "Url": "https://api.github.com/repos/gabrielrodriguez2746/leads", "Date": "2016-08-19T21:22:23Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((leadsByPeriod) != null) { setupBarChart(); setDataBarChart(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6612/buggy-version/app.src.main.java.leads.motiondisplays.cl.fragments.GraphicFragment.java", "BodyUseAPI": [], "Fixed commit": "a36abd3acce123dba92ca00f615059159590f48f", "Url": "https://api.github.com/repos/gabrielrodriguez2746/leads", "Date": "2016-08-19T21:22:23Z"},
{"Line": "=>659", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["maud.model.cgm.SelectedOverride.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (name.equals(\"NumberOfBones\")) { minValue = 1; maxValue = 250; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/74/buggy-version/src.main.java.maud.dialog.EditorDialogs.java", "BodyUseAPI": [], "Fixed commit": "d10702410f9d4b2ff1348d3ec262e587bc8fade0", "Url": "https://api.github.com/repos/stephengold/Maud", "Date": "2017-12-19T21:01:23Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.gurkenlabs.litiengine.Game.hasStarted()) { this.lastMoved = de.gurkenlabs.litiengine.Game.getLoop().getTicks(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6513/buggy-version/src.de.gurkenlabs.litiengine.entities.MovableCombatEntity.java", "BodyUseAPI": [], "Fixed commit": "4b2b671842e3bcf4adbf1f9ec04a9cdab757b45b", "Url": "https://api.github.com/repos/gurkenlabs/litiengine", "Date": "2017-09-17T00:30:54Z"},
{"Line": "=>3011", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(lv.y)) { lv = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/474/buggy-version/src.fr.esrf.tangoatk.widget.util.chart.JLChart.java", "BodyUseAPI": [], "Fixed commit": "fee1a986bfac3d06393b5fbfb7f4057f7e237f09", "Url": "https://api.github.com/repos/tango-controls/atk", "Date": "2011-05-12T13:49:32Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (intent == null) { uri = null; }else { uri = intent.getData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/645/buggy-version/app.src.main.java.bembibre.alarmfix.ReminderListActivity.java", "BodyUseAPI": ["android.content.Intent.getData()"], "Fixed commit": "1b940a1fbef8660fdf00ac0f3b840427e574400d", "Url": "https://api.github.com/repos/maykelbembibre/androidcalendarfix", "Date": "2017-12-18T15:52:52Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (uri != null) { bembibre.alarmfix.logging.Logger.log((\"Importing files from URI \" + (uri.getPath()))); new bembibre.alarmfix.logic.exportimport.DataImport(this).execute(uri); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/645/buggy-version/app.src.main.java.bembibre.alarmfix.ReminderListActivity.java", "BodyUseAPI": ["bembibre.alarmfix.logic.exportimport.DataImport.execute(android.net.Uri)", "bembibre.alarmfix.logging.Logger.log((\"Importing files from URI \" + (uri.getPath())))", "android.net.Uri.getPath()"], "Fixed commit": "1b940a1fbef8660fdf00ac0f3b840427e574400d", "Url": "https://api.github.com/repos/maykelbembibre/androidcalendarfix", "Date": "2017-12-18T15:52:52Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rstudio.studio.client.workbench.views.source.model.DocUpdateSentinel.getProperty(java.lang.String)", "org.rstudio.studio.client.rmarkdown.model.RmdEditorOptions.getString(java.lang.String,java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (yamlMode != docMode) { docUpdateSentinel_.setProperty(org.rstudio.studio.client.workbench.views.source.editors.text.rmd.TextEditingTargetNotebook.CHUNK_OUTPUT_TYPE, yamlMode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7004/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.source.editors.text.rmd.TextEditingTargetNotebook.java", "BodyUseAPI": ["org.rstudio.studio.client.workbench.views.source.model.DocUpdateSentinel.setProperty(java.lang.String,java.lang.String)"], "Fixed commit": "aa8e99ab8e5a331389a1c2d9bd42a4783c211a5c", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2017-07-19T23:48:40Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((docDisplay_.showChunkOutputInline()) == ((event.getValue()) == (org.rstudio.studio.client.workbench.views.source.editors.text.rmd.TextEditingTargetNotebook.CHUNK_OUTPUT_INLINE))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7004/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.source.editors.text.rmd.TextEditingTargetNotebook.java", "BodyUseAPI": [], "Fixed commit": "aa8e99ab8e5a331389a1c2d9bd42a4783c211a5c", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2017-07-19T23:48:40Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["PATHMengAirline.searchEngine.Aircraft.getFlightIndexByFlightId(thisFlight.getFlightId())", "PATHMengAirline.searchEngine.Aircraft.getFlightChain()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (flightIndex < ((flights.size()) - 1)) { flights.get((flightIndex + 1)).setDepartureTime(avaliableTime.getDepartureTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6703/buggy-version/Xiahang.src.main.java.PATHMengAirline.searchEngine.SelfSearch.java", "BodyUseAPI": ["flights.get((flightIndex + 1)).setDepartureTime(avaliableTime.getDepartureTime())", "java.util.List<PATHMengAirline.searchEngine.Flight>.get(int)"], "Fixed commit": "849b2dcbaf44db579ff349e0f87d7f473cfd2745", "Url": "https://api.github.com/repos/lingouzhu/PATHmengAirline", "Date": "2017-07-24T03:44:16Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((session.getAttribute(\"user\")) != null) { if (session.getAttribute(\"user\").equals(selected.getUserCreator().getUsername())) { model.addAttribute(\"sameUser\", true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1045/buggy-version/src.main.java.teymi15.kassistant.control.RecipeController.java", "BodyUseAPI": ["session.getAttribute(\"user\").equals(selected.getUserCreator().getUsername())", "javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Fixed commit": "3d83619aa6937468af422bae3a939740a5d307b4", "Url": "https://api.github.com/repos/mimiqkz/kassistant", "Date": "2017-10-26T14:39:15Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lower == upper) { if (back != lower) if (useP) java.lang.System.out.print(se.kth.maandree.utilsay.img2unisay.getOSIPCode((back = lower), true)); else java.lang.System.out.print(((\"\\u001b[48;5;\" + (back = lower)) + \"m\")); java.lang.System.out.print(' '); }else if ((back == lower) || (fore == upper)) { if (fore != upper) if (useP) java.lang.System.out.print(se.kth.maandree.utilsay.img2unisay.getOSIPCode((fore = upper), false)); else java.lang.System.out.print(((\"\\u001b[38;5;\" + (fore = upper)) + \"m\")); if (back != lower) if (useP) java.lang.System.out.print(se.kth.maandree.utilsay.img2unisay.getOSIPCode((back = lower), true)); else java.lang.System.out.print(((\"\\u001b[48;5;\" + (back = lower)) + \"m\")); java.lang.System.out.print('\u2580'); }else { if (back != upper) if (useP) java.lang.System.out.print(se.kth.maandree.utilsay.img2unisay.getOSIPCode((back = upper), true)); else java.lang.System.out.print(((\"\\u001b[48;5;\" + (back = upper)) + \"m\")); if (fore != lower) if (useP) java.lang.System.out.print(se.kth.maandree.utilsay.img2unisay.getOSIPCode((fore = lower), false)); else java.lang.System.out.print(((\"\\u001b[38;5;\" + (fore = lower)) + \"m\")); java.lang.System.out.print('\u2584'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2588/buggy-version/src.se.kth.maandree.utilsay.img2unisay.java", "BodyUseAPI": ["se.kth.maandree.utilsay.img2unisay.getOSIPCode(int,boolean)", "java.io.PrintStream.print(java.lang.String)", "se.kth.maandree.utilsay.img2unisay.getOSIPCode(int,boolean)", "java.io.PrintStream.print(java.lang.String)", "java.io.PrintStream.print(java.lang.String)", "java.io.PrintStream.print(java.lang.String)", "java.io.PrintStream.print(java.lang.String)", "java.io.PrintStream.print(java.lang.String)", "java.io.PrintStream.print(java.lang.String)", "java.io.PrintStream.print(java.lang.String)", "se.kth.maandree.utilsay.img2unisay.getOSIPCode(int,boolean)", "se.kth.maandree.utilsay.img2unisay.getOSIPCode(int,boolean)", "se.kth.maandree.utilsay.img2unisay.getOSIPCode(int,boolean)", "java.io.PrintStream.print(java.lang.String)", "java.io.PrintStream.print(java.lang.String)"], "Fixed commit": "6d817f8706b2aa5382e17376421ab8979c82cb7e", "Url": "https://api.github.com/repos/maandree/util-say", "Date": "2012-05-20T03:18:49Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((modifier) == (Modifier.PREFIX)) { java.lang.String[] values = getValue().split(Modifier.PREFIX.getValue()); variableName = values[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1388/buggy-version/src.main.java.com.damnhandy.uri.template.impl.VarSpec.java", "BodyUseAPI": [], "Fixed commit": "3a494a37b52261a85e4457730074cef04083c113", "Url": "https://api.github.com/repos/osvaldopina/Handy-URI-Templates", "Date": "2015-11-14T13:58:47Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_viewPager.getCurrentItem()) != (ca.cmput301f13t03.adventure_datetime.view.AuthorEdit.OVERVIEW_INDEX)) { _adapter.CancelActions(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/9169/buggy-version/adventure.datetime.src.ca.cmput301f13t03.adventure_datetime.view.AuthorEdit.java", "BodyUseAPI": [], "Fixed commit": "4c66d4c05ddf4401b751db1c0e608cf882572e96", "Url": "https://api.github.com/repos/jesseDtucker/adventure.datetime", "Date": "2013-11-27T05:26:06Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.ActionBar.Tab.getPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index != (ca.cmput301f13t03.adventure_datetime.view.AuthorEdit.OVERVIEW_INDEX)) { _adapter.CancelActions(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/9169/buggy-version/adventure.datetime.src.ca.cmput301f13t03.adventure_datetime.view.AuthorEdit.java", "BodyUseAPI": [], "Fixed commit": "4c66d4c05ddf4401b751db1c0e608cf882572e96", "Url": "https://api.github.com/repos/jesseDtucker/adventure.datetime", "Date": "2013-11-27T05:26:06Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Go.moved) == false) { turn.setText(\" Turn: Black\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/9020/buggy-version/Go.java", "BodyUseAPI": [], "Fixed commit": "008bdb5d5e43a7837af42c2b6069b1af82cef8b3", "Url": "https://api.github.com/repos/JasonXShi/Go", "Date": "2017-06-16T23:24:27Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Go.moved) == true) { turn.setText(\" Turn: White\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/9020/buggy-version/Go.java", "BodyUseAPI": [], "Fixed commit": "008bdb5d5e43a7837af42c2b6069b1af82cef8b3", "Url": "https://api.github.com/repos/JasonXShi/Go", "Date": "2017-06-16T23:24:27Z"},
{"Line": "=>1941", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.NetworkInterface.getHardwareAddress()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((mac != null) && ((mac.length) > 0)) { java.lang.StringBuilder sb = new java.lang.StringBuilder(); for (int i = 0; i < (mac.length); i++) { sb.append(java.lang.String.format(\"%02X%s\", mac[i], (i < ((mac.length) - 1) ? \"-\" : \"\"))); } returnStr = sb.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8342/buggy-version/src.main.java.com.atlauncher.utils.Utils.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,byte,java.lang.Object)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "f3dbade3ff9ca87830175ed8260a08b7b4af134b", "Url": "https://api.github.com/repos/ATLauncher/ATLauncher", "Date": "2014-11-04T08:08:04Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((positionItem) != null) && (!(item.equals(positionItem)))) { marker.getIcon().getImageDiv().getStyle().setOpacity(0.5); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5860/buggy-version/placebooks-webapp.src.placebooks.client.ui.items.MapItem.java", "BodyUseAPI": [], "Fixed commit": "2c574d05ea65a14b1fb7b00ee1c93df9db5c4aaf", "Url": "https://api.github.com/repos/swnymor/Bridging-the-Rural-Divide--Placebooks", "Date": "2012-01-26T13:48:18Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ita.edu.softserve.manager.TransportsManager.findTransportsByCode(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (transport.getTransportId().equals(transports.getTransportId())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2114/buggy-version/src.main.java.com.ita.edu.softserve.web.TransportsValidator.java", "BodyUseAPI": [], "Fixed commit": "5c639aaea8c95c76469e00fccbf222218fcd4a1f", "Url": "https://api.github.com/repos/tranzero/SoftServe_Java-105_Project", "Date": "2014-02-25T22:15:36Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (matches) { returnCollection.add(next); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4250/buggy-version/core.src.org.pentaho.platform.engine.core.system.objfac.RuntimeObjectFactory.java", "BodyUseAPI": [], "Fixed commit": "b12578d41bc10084ee719e33e70655702c77f792", "Url": "https://api.github.com/repos/pedrofvteixeira/pentaho-platform", "Date": "2015-06-03T18:27:41Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entity) == null) { entity = createEntity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1404/buggy-version/dynamo-spring.src.main.java.com.ocs.dynamo.ui.composite.layout.SimpleEditLayout.java", "BodyUseAPI": [], "Fixed commit": "02ef06c625c0004c6f43e7b766c7ea157d1bcd32", "Url": "https://api.github.com/repos/opencirclesolutions/dynamo", "Date": "2016-10-03T12:33:46Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startTimeList.isEmpty()) == false) rows++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5783/buggy-version/src.Kubaner.Logic.Plan.java", "BodyUseAPI": [], "Fixed commit": "80c5cd1d31349602baefef1374e4569c3f9ca5be", "Url": "https://api.github.com/repos/Freakmiko/Kubaner", "Date": "2015-06-20T16:46:28Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.liferay.ide.core.util.FileUtil.notExists(sdk.getLocation())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8162/buggy-version/tools.plugins.com.liferay.ide.sdk.core.src.com.liferay.ide.sdk.core.SDKManager.java", "BodyUseAPI": [], "Fixed commit": "89737fc6ae280f7d8b0eff07550f5b75adef085d", "Url": "https://api.github.com/repos/jtydhr88/liferay-ide", "Date": "2017-11-22T06:42:39Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mUnspecifiedMeasuredHeight) < 0) { measure(MeasureSpec.UNSPECIFIED, MeasureSpec.UNSPECIFIED); mUnspecifiedMeasuredHeight = xyz.danoz.recyclerviewfastscroller.sectionindicator.AbsSectionIndicator.getMeasuredHeight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4258/buggy-version/recyclerviewfastscroller.src.main.java.xyz.danoz.recyclerviewfastscroller.sectionindicator.AbsSectionIndicator.java", "BodyUseAPI": [], "Fixed commit": "06a418b0943b847ec9a06de632df9d8cd383e0cc", "Url": "https://api.github.com/repos/h6ah4i/RecyclerViewFastScroller", "Date": "2015-02-28T07:40:15Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOriginIvFilterHeight) == 0) mOriginIvFilterHeight = ivFilterLp.height;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8556/buggy-version/app.src.main.java.com.tcl.lishanwang.oneshop.activity.CommodityListActivity.java", "BodyUseAPI": [], "Fixed commit": "24e90f2ca5fa056784f641021380dc50be3d0cd3", "Url": "https://api.github.com/repos/WPolly/OneShop", "Date": "2016-11-28T07:25:18Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (series.isVisible()) { series.decoratePlot((i++), plot.getRenderer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/42/buggy-version/src.main.java.de.energienetz.hupe.HupeChartBuilder.java", "BodyUseAPI": ["de.energienetz.hupe.HupeDataSeries.decoratePlot(int,plot.getRenderer())"], "Fixed commit": "cf1628acea9a9e4de3821da5dcdc71f24c317f8e", "Url": "https://api.github.com/repos/Arkinator/Hupe", "Date": "2016-02-04T19:12:15Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(httpGet.containsHeader(\"Accept-Encoding\"))) { httpGet.addHeader(\"Accept-Encoding\", \"gzip\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/670/buggy-version/webmagic-core.src.main.java.us.codecraft.webmagic.downloader.HttpClientDownloader.java", "BodyUseAPI": ["org.apache.http.client.methods.HttpGet.addHeader(java.lang.String,java.lang.String)"], "Fixed commit": "160a149b0590da553b96bddabfe023b5ddf8941d", "Url": "https://api.github.com/repos/leusonmario/webmagic", "Date": "2013-11-03T15:10:09Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataAccessor.isTxActive()) return dataAccessor.getAppProperty(id);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1521/buggy-version/src.main.java.com.pratilipi.data.DataAccessorWithMemcache.java", "BodyUseAPI": ["com.pratilipi.data.DataAccessor.getAppProperty(java.lang.String)"], "Fixed commit": "197ba694987b68caef5f4e47165eb14ac4195659", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2015-07-25T15:32:58Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.tkuhn.vilagr.VParams.getAttributePattern()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (attPattern != null) { atts = attPattern.split(\"\\\\|\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6562/buggy-version/src.main.java.ch.tkuhn.vilagr.VRenderEngine.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "8f393000add62c36743714a433fffa8767e99074", "Url": "https://api.github.com/repos/tkuhn/vilagr", "Date": "2014-04-03T11:37:34Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.osee.framework.skynet.core.artifact.BranchManager.getBranch(org.eclipse.osee.framework.core.data.BranchId)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (branch.getBranchType().equals(BranchType.MERGE)) { branch = branch.getParentBranch(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/415/buggy-version/plugins.org.eclipse.osee.framework.ui.skynet.src.org.eclipse.osee.framework.ui.skynet.render.word.WordTemplateProcessor.java", "BodyUseAPI": ["org.eclipse.osee.framework.core.model.Branch.getParentBranch()"], "Fixed commit": "c441b5353b74fed14cb878667d1c85e50ce05621", "Url": "https://api.github.com/repos/eclipse/osee", "Date": "2017-10-21T00:14:22Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((news_intro) == null) news_intro = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1219/buggy-version/app.src.main.java.com.newsclient.data.DSingleNews.java", "BodyUseAPI": [], "Fixed commit": "9849d0af62f4d3b917cbe8aba44d92f3f507fe3b", "Url": "https://api.github.com/repos/LegaDyan/NewsClient", "Date": "2017-09-11T17:19:23Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) == 0) return new java.util.ArrayList<java.lang.String>(reloadableProvider.getReloadables().keySet()); else return de.st_ddt.crazyutil.paramitrisable.MapParamitrisable.tabHelp(reloadableProvider.getReloadables(), args[((args.length) - 1)]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8338/buggy-version/src.main.java.de.st_ddt.crazyplugin.commands.CrazyCommandReload.java", "BodyUseAPI": ["de.st_ddt.crazyutil.paramitrisable.MapParamitrisable.tabHelp(reloadableProvider.getReloadables(),java.lang.String)"], "Fixed commit": "cb9033dae535ba377a66a1f7fe8264dd6851cccc", "Url": "https://api.github.com/repos/ST-DDT/CrazyCore", "Date": "2014-06-18T18:01:00Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) == 0) return new java.util.ArrayList<java.lang.String>(reloadableProvider.getReloadables().keySet()); else return de.st_ddt.crazyutil.paramitrisable.MapParamitrisable.tabHelp(reloadableProvider.getReloadables(), args[((args.length) - 1)]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8338/buggy-version/src.main.java.de.st_ddt.crazyplugin.commands.CrazyCommandSave.java", "BodyUseAPI": ["de.st_ddt.crazyutil.paramitrisable.MapParamitrisable.tabHelp(reloadableProvider.getReloadables(),java.lang.String)"], "Fixed commit": "cb9033dae535ba377a66a1f7fe8264dd6851cccc", "Url": "https://api.github.com/repos/ST-DDT/CrazyCore", "Date": "2014-06-18T18:01:00Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSelectionPainter()) instanceof org.fife.ui.rtextarea.ChangeableHighlightPainter) { ((org.fife.ui.rtextarea.ChangeableHighlightPainter) (getSelectionPainter())).setRoundedEdges(rounded); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7019/buggy-version/src.main.java.org.fife.ui.rtextarea.ConfigurableCaret.java", "BodyUseAPI": [], "Fixed commit": "83fca3452313a7ba7cba8c01035a890f4ea63df7", "Url": "https://api.github.com/repos/bobbylight/RSyntaxTextArea", "Date": "2016-09-11T05:20:00Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.text.Element.getElement(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (elem == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7019/buggy-version/src.main.java.org.fife.ui.rsyntaxtextarea.RSyntaxDocument.java", "BodyUseAPI": [], "Fixed commit": "83fca3452313a7ba7cba8c01035a890f4ea63df7", "Url": "https://api.github.com/repos/bobbylight/RSyntaxTextArea", "Date": "2016-09-11T05:20:00Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((SentenceProcessor.sents.size()) == 0) { sent = this.s.toString(); this.ans = true; }else { pickedSent = r.nextInt(SentenceProcessor.sents.size()); sent = SentenceProcessor.sents.get(pickedSent).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4042/buggy-version/src.questionbank.TFNG.java", "BodyUseAPI": [], "Fixed commit": "84586e64189c9704b41634f57f25d4feba4b9ebd", "Url": "https://api.github.com/repos/am5a03/Greensleeves", "Date": "2012-04-23T10:25:44Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((combinationMessagesList) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4016/buggy-version/Q-municate_app.src.main.java.com.quickblox.q_municate.ui.activities.chats.GroupDialogActivity.java", "BodyUseAPI": [], "Fixed commit": "ae8d51acda26347d905b179f6900d3611204f585", "Url": "https://api.github.com/repos/QuickBlox/q-municate-android", "Date": "2017-02-03T14:30:52Z"},
{"Line": "=>507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (content) { tmpClient = webTarget.request(MediaType.APPLICATION_JSON_TYPE).header(\"Content-Type\", \"application/json\").header(\"Accept\", \"application/json\").header(\"X-Auth-Token\", token); }else { tmpClient = webTarget.request(MediaType.APPLICATION_JSON_TYPE).header(\"Accept\", \"application/json\").header(\"X-Auth-Token\", token); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8660/buggy-version/src.main.java.com.amaxilatis.orion.OrionClient.java", "BodyUseAPI": [], "Fixed commit": "6dd8e98ce096daec44d5a3e584a7fe7124cefdf3", "Url": "https://api.github.com/repos/amaxilat/orion-client", "Date": "2016-11-01T12:28:06Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.facebook.nifty.codec.DefaultThriftFrameDecoder.tryDecodeFramedMessage(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (messageBuffer == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6646/buggy-version/nifty-core.src.main.java.com.facebook.nifty.codec.DefaultThriftFrameDecoder.java", "BodyUseAPI": [], "Fixed commit": "370e93c1e77b1485f45e1be94172d3833adefbbd", "Url": "https://api.github.com/repos/cnJun/nifty", "Date": "2013-05-09T23:44:03Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.facebook.nifty.codec.DefaultThriftFrameDecoder.tryDecodeUnframedMessage(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer,org.apache.thrift.protocol.TProtocolFactory)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (messageBuffer == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6646/buggy-version/nifty-core.src.main.java.com.facebook.nifty.codec.DefaultThriftFrameDecoder.java", "BodyUseAPI": [], "Fixed commit": "370e93c1e77b1485f45e1be94172d3833adefbbd", "Url": "https://api.github.com/repos/cnJun/nifty", "Date": "2013-05-09T23:44:03Z"},
{"Line": "=>721", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((javaCode.indexOf(\"DSL.count(\")) > (-1)) { return java.lang.Integer.class.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1815/buggy-version/sql2jooq.src.gudusoft.gsqlparser.sql2jooq.jooqConverter.java", "BodyUseAPI": [], "Fixed commit": "882edf187cfb1eee130f796caaa71236f063592e", "Url": "https://api.github.com/repos/sqlparser/sql2jooq", "Date": "2013-10-26T13:34:20Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((errorCount) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8358/buggy-version/core.src.main.java.org.glowroot.collector.AggregateBuilder.java", "BodyUseAPI": [], "Fixed commit": "435fdeb59af0112d1e84d9f0af2e6807b6c0056e", "Url": "https://api.github.com/repos/trask/glowroot", "Date": "2015-04-12T23:41:42Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((event.getAction()) == (android.view.KeyEvent.ACTION_DOWN)) && (keyCode == (android.view.KeyEvent.KEYCODE_BACK))) { if ((mWebView) != null) { com.qianft.m.qian.utils.LogUtil.d(TAG, (\"mWebView.getUrl(); \" + (mWebView.getUrl()))); if (mWebView.getUrl().equals(\"http://m.qianft.com/\")) { exitApp(); return false; }else { if (mWebView.canGoBack()) { mWebView.loadUrl(\"javascript:window.history.back();\"); }else { mWebView.loadUrl(\"http://m.qianft.com/\"); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6233/buggy-version/src.com.qianft.m.qian.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b0b0f5e8eae4f7aafcfd179e77d07610c356ee09", "Url": "https://api.github.com/repos/Win0818/Qian", "Date": "2016-09-05T07:31:44Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getAttribute(\"NameIDFormat\")) != null) { gxPrincipal.setNameIDFormat(((java.lang.String) (request.getAttribute(\"NameIDFormat\")))); }else { gxPrincipal.setNameIDFormat(nameQualifier); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5664/buggy-version/src.main.java.org.guanxi.idp.service.saml2.WebBrowserSSO.java", "BodyUseAPI": ["org.guanxi.common.GuanxiPrincipal.setNameIDFormat(((java.lang.String) (request.getAttribute(\"NameIDFormat\"))))", "javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String)"], "Fixed commit": "d051647d0ca22f713e6580ae7dd149f97173d9e4", "Url": "https://api.github.com/repos/guanxi/guanxi-idp", "Date": "2011-03-24T11:07:53Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.jfinal.core.JFinal.me().getServletContext().getRealPath(\"/\")) != null) { systemProp.setProperty(\"zrlog.runtime.path\", com.jfinal.core.JFinal.me().getServletContext().getRealPath(\"/\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3916/buggy-version/src.main.java.com.fzb.blog.web.config.ZrlogConfig.java", "BodyUseAPI": [], "Fixed commit": "b493a16050ffd093d8d8dae1c68cd311d2fdb5ff", "Url": "https://api.github.com/repos/94fzb/zrlog", "Date": "2017-07-02T03:57:37Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (command != null) { command.execute(); }else { java.lang.System.out.println(\"Not a good endpoint\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2606/buggy-version/OAuthClient.src.main.java.Andreea.Bican.OAuthClientApplication.java", "BodyUseAPI": ["Andreea.Bican.ICommand.execute()"], "Fixed commit": "c909cddb1a6561b2acd948dbe2bab10f539d0b78", "Url": "https://api.github.com/repos/andreeabican/SpringBootOAuth2Client", "Date": "2016-08-10T23:35:03Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7582/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "0954eff0dd733832e1a28aa7dcf9be213ff359f8", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-08T17:25:07Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Random.nextDouble()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rand <= (1.0 / 3.0)) { return swarm.get(i).getSecondBestPosition(); }else { return swarm.get(i).getBestPosition(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8039/buggy-version/src.PSOProcess.java", "BodyUseAPI": [], "Fixed commit": "1cba38c7ff3d889ccbb09167623058e25b1271c3", "Url": "https://api.github.com/repos/niallgrogan/ParticleSwarmOptimization", "Date": "2016-03-13T19:04:32Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getTimestamp()) != null) && (!(getTimestamp().equals(\"\")))) { if ((java.lang.Double.parseDouble(this.getTimestamp())) > (java.lang.Double.parseDouble(that.getTimestamp()))) { return 1; }else if ((java.lang.Double.parseDouble(this.getTimestamp())) < (java.lang.Double.parseDouble(that.getTimestamp()))) { return -1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3818/buggy-version/src.main.java.common.Version.java", "BodyUseAPI": [], "Fixed commit": "2347c59789b488b3e678287b5d9a0d761f0bf7cc", "Url": "https://api.github.com/repos/vatbub/common", "Date": "2016-08-02T10:19:04Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Double.parseDouble(this.getBuildNumber())) > (java.lang.Double.parseDouble(that.getBuildNumber()))) { return 1; }else if ((java.lang.Double.parseDouble(this.getBuildNumber())) > (java.lang.Double.parseDouble(that.getBuildNumber()))) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3818/buggy-version/src.main.java.common.Version.java", "BodyUseAPI": ["common.Version.getBuildNumber()", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "2347c59789b488b3e678287b5d9a0d761f0bf7cc", "Url": "https://api.github.com/repos/vatbub/common", "Date": "2016-08-02T10:19:04Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (e != null) { this.el.add(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/499/buggy-version/src.com.tidesofwaronline.Exodus.CustomItem.CustomItem.java", "BodyUseAPI": [], "Fixed commit": "742d47f68399a9df3c3b204376cad70be74b04ca", "Url": "https://api.github.com/repos/TidesofWarOnline/Exodus", "Date": "2013-03-24T03:21:36Z"},
{"Line": "=>2503", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((line.length()) < 6) recordName = line.trim(); else recordName = line.substring(0, 6).trim();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4360/buggy-version/biojava-structure.src.main.java.org.biojava.nbio.structure.io.PDBFileParser.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.trim()", "java.lang.String.substring(int,int)"], "Fixed commit": "ef33070233e1a5685ac3abc6fdbddcd2566a3b0d", "Url": "https://api.github.com/repos/josemduarte/biojava", "Date": "2016-05-11T01:08:50Z"},
{"Line": "=>555", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(entity.isVisible())) { graph.setCellStyles(mxConstants.STYLE_OPACITY, \"50\", entities); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2889/buggy-version/src.main.java.edu.odu.icat.graphicsinterface.WorkSpace.java", "BodyUseAPI": [], "Fixed commit": "1339c4fa92ff6e3c84b79cec3f81483189f572ad", "Url": "https://api.github.com/repos/danielspangler/icat", "Date": "2014-04-28T16:05:44Z"},
{"Line": "=>558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(entity.isControllable())) { graph.setCellStyles(mxConstants.STYLE_STROKEWIDTH, \"5\", entities); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2889/buggy-version/src.main.java.edu.odu.icat.graphicsinterface.WorkSpace.java", "BodyUseAPI": [], "Fixed commit": "1339c4fa92ff6e3c84b79cec3f81483189f572ad", "Url": "https://api.github.com/repos/danielspangler/icat", "Date": "2014-04-28T16:05:44Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playerModel.isStop()) { loadNewSong(); }else { try { serviceHelper.toogleSong(PlayerState.PAUSE); playerMessageHandler(PlayerState.PLAY); playerActivity.setOnPlayerClick(pauseListener); } catch (android.os.RemoteException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8738/buggy-version/src.com.MetroMusic.controller.PlayerController.java", "BodyUseAPI": [], "Fixed commit": "dcf4417fe3416f43ea228635fb75825cfb379c56", "Url": "https://api.github.com/repos/coffeesherk/Metro-Music-for-Android", "Date": "2012-03-22T11:57:52Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (query.contains(\"\\\"\")) { builder.append(\"('\").append(query).append(\"')\"); }else { builder.append(\"(\\\"\").append(query).append(\"\\\")\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3720/buggy-version/src.main.java.org.neo4j.cypherdsl.expression.StartExpression.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "849f9bf8f826cd6dd45b0c56d65468cbbab7ab79", "Url": "https://api.github.com/repos/wgorder/cypher-dsl", "Date": "2014-08-18T12:17:19Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((realPosition > 1000) || (realPosition < 0)) throw new java.lang.RuntimeException(\"Please travelto a right date: today-500~today~today+500\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/652/buggy-version/mcalendarview.src.main.java.sun.bob.mcalendarview.views.ExpCalendarView.java", "BodyUseAPI": [], "Fixed commit": "99a3b59baa2a3267db46de425cf83a44e3ad975c", "Url": "https://api.github.com/repos/mBigFlower/mCalendarView", "Date": "2016-10-13T01:43:46Z"},
{"Line": "=>896", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) instanceof com.todoroo.astrid.activity.TaskListActivity) { if (((((title.getText().length()) == 0) && (isNewTask)) && ((model) != null)) && (model.isSaved())) { taskService.delete(model); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1090/buggy-version/astrid.src.com.todoroo.astrid.activity.TaskEditFragment.java", "BodyUseAPI": [], "Fixed commit": "b4138d8c9220b54563a0fc9a559a7f98f6ece6b8", "Url": "https://api.github.com/repos/sbosley/astrid", "Date": "2012-03-29T00:01:41Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((block != null) && ((block.getBlock()) != null)) && ((net.minecraft.item.Item.getItemFromBlock(block.getBlock())) != null)) { itemStack = new net.minecraft.item.ItemStack(block.getBlock(), 1, block.getBlock().getMetaFromState(block)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5293/buggy-version/Minecraft.src.main.java.com.microsoft.Malmo.Utils.MinecraftTypeHelper.java", "BodyUseAPI": ["net.minecraft.block.state.IBlockState.getBlock()", "net.minecraft.block.state.IBlockState.getBlock()", "block.getBlock().getMetaFromState(net.minecraft.block.state.IBlockState)"], "Fixed commit": "373a40bef4b84055108654820aa54ce96779531e", "Url": "https://api.github.com/repos/Microsoft/malmo", "Date": "2016-07-28T16:54:16Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.org.rbc1b.roms.db.CongregationDao.findCongregation(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((congregation.getCircuit()) != null) { form.setCircuitId(congregation.getCircuit().getCircuitId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3262/buggy-version/src.main.java.uk.org.rbc1b.roms.controller.congregation.CongregationsController.java", "BodyUseAPI": ["uk.org.rbc1b.roms.db.Congregation.getCircuit()", "congregation.getCircuit().getCircuitId()", "uk.org.rbc1b.roms.controller.congregation.CongregationForm.setCircuitId(congregation.getCircuit().getCircuitId())"], "Fixed commit": "dcd6e4b605b9cdd357efffb6373ca8141576c413", "Url": "https://api.github.com/repos/RBC1B/ROMS", "Date": "2013-12-27T17:21:29Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.org.rbc1b.roms.db.CongregationDao.findCongregation(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((congregation.getKingdomHall()) != null) { uk.org.rbc1b.roms.db.kingdomhall.KingdomHall kingdomHall = kingdomHallDao.findKingdomHall(congregation.getKingdomHall().getKingdomHallId()); form.setKingdomHallId(kingdomHall.getKingdomHallId()); form.setKingdomHallName(kingdomHall.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3262/buggy-version/src.main.java.uk.org.rbc1b.roms.controller.congregation.CongregationsController.java", "BodyUseAPI": ["congregation.getKingdomHall().getKingdomHallId()", "uk.org.rbc1b.roms.db.kingdomhall.KingdomHallDao.findKingdomHall(congregation.getKingdomHall().getKingdomHallId())", "uk.org.rbc1b.roms.db.Congregation.getKingdomHall()"], "Fixed commit": "dcd6e4b605b9cdd357efffb6373ca8141576c413", "Url": "https://api.github.com/repos/RBC1B/ROMS", "Date": "2013-12-27T17:21:29Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (data != null) { android.os.Bundle extras = data.getExtras(); if (extras != null) { android.graphics.Bitmap imageBitmap = ((android.graphics.Bitmap) (extras.get(\"data\"))); mImageView = ((android.widget.ImageView) (findViewById(R.id.mImageView))); mImageView.setImageBitmap(imageBitmap); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6000/buggy-version/app.src.main.java.com.example.chwtlk.myquizapplication.CameraActivity.java", "BodyUseAPI": ["android.content.Intent.getExtras()"], "Fixed commit": "45e6fdb224b788d83966c53ba1690b8e5879fc56", "Url": "https://api.github.com/repos/chintakawijetunga/MyQuizApplication", "Date": "2017-09-30T16:43:40Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(model.isDialogActive())) { model.setActiveDialog(npc.getDialog()); model.setActiveSpeakerName(npc.getName()); model.setIsDialogActive(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8193/buggy-version/core.src.main.java.edu.chl.loc.controller.GameController.java", "BodyUseAPI": ["edu.chl.loc.models.core.IGameModel.setActiveSpeakerName(npc.getName())", "edu.chl.loc.models.core.IGameModel.setIsDialogActive(boolean)", "edu.chl.loc.models.core.IGameModel.setActiveDialog(npc.getDialog())"], "Fixed commit": "1b94ebcf8b0bb1ad6a26ef0159320cfdcdf6720d", "Url": "https://api.github.com/repos/hsson/loc", "Date": "2015-05-28T08:30:49Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.chl.loc.models.map.GameMap.getNPCAtPosition(player.getNextPosition())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (model.getActiveDialog().equals(npc.getDialog())) npc.doAction();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8193/buggy-version/core.src.main.java.edu.chl.loc.controller.GameController.java", "BodyUseAPI": ["edu.chl.loc.models.characters.npc.AbstractNPC.doAction()"], "Fixed commit": "1b94ebcf8b0bb1ad6a26ef0159320cfdcdf6720d", "Url": "https://api.github.com/repos/hsson/loc", "Date": "2015-05-28T08:30:49Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!found) { throw new java.io.FileNotFoundException(java.lang.String.format(\"Can not found the web resource [%s]\", resourceName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/502/buggy-version/clobaframe-webresource.src.main.java.org.archboy.clobaframe.webresource.local.LocalWebResourceRepository.java", "BodyUseAPI": [], "Fixed commit": "64d9c0fbdd0e1d5e09d69274c2f10738cc50e2e2", "Url": "https://api.github.com/repos/ivarptr/clobaframe", "Date": "2014-07-19T21:25:46Z"},
{"Line": "=>906", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (llr == null) { llr = dataset.getBoundingBox(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3947/buggy-version/src.ucar.unidata.data.grid.GeoGridDataSource.java", "BodyUseAPI": [], "Fixed commit": "e9389454c9729118b2c20f562dd8f68ed49950cb", "Url": "https://api.github.com/repos/jon4than/IDV", "Date": "2014-11-10T04:26:10Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((d1 == 0.0) || (d2 == 0.0)) { return 0.0; }else if ((java.lang.Double.isInfinite(d1)) || (java.lang.Double.isInfinite(d2))) { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6879/buggy-version/src.main.java.dk.cs.aau.sw705e15.model.Component.java", "BodyUseAPI": ["java.lang.Double.isInfinite(double)", "java.lang.Double.isInfinite(double)"], "Fixed commit": "7828e8d359896fbc4c7bab412b587442928861e7", "Url": "https://api.github.com/repos/feupeu/SW705E15-code", "Date": "2015-12-09T07:23:40Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sdkInfoFileWritten)) { synchronized(this) { if (!(sdkInfoFileWritten)) { writeSDKInfoFile(); sdkInfoFileWritten = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1307/buggy-version/core.src.main.java.com.microsoft.applicationinsights.extensibility.initializer.docker.DockerContextInitializer.java", "BodyUseAPI": [], "Fixed commit": "d7d425ec716441f64a3f3fbb66605ef75d65c3a0", "Url": "https://api.github.com/repos/Microsoft/ApplicationInsights-Java", "Date": "2015-08-30T10:34:12Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (posZ >= 0) { java.lang.String zone = date.substring(posZ); date = date.substring(0, posZ); date += zone; return java.time.ZonedDateTime.parse(date); }else if (date.toUpperCase().endsWith(\"Z\")) { java.time.LocalDateTime localDateTime = java.time.LocalDateTime.parse(date, getFormatter(date)); java.time.ZoneId zoneId = java.time.ZoneId.of(\"Z\"); java.time.ZonedDateTime value = java.time.ZonedDateTime.of(localDateTime, zoneId); return value; }else { java.time.LocalDateTime localDateTime = java.time.LocalDateTime.parse(date, getFormatter(date)); return java.time.ZonedDateTime.of(localDateTime, zoneId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4095/buggy-version/tioga-dev-common.src.main.java.org.tiogasolutions.dev.common.DateUtilsFactory.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int)"], "Fixed commit": "81c51e755a50513ef1c4d4f6580f09979ffe65fc", "Url": "https://api.github.com/repos/tioga/dev", "Date": "2016-02-25T23:24:58Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((articleResponse.byline) != null) { this.byLine = articleResponse.byline.original; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2052/buggy-version/app.src.main.java.com.shakeup.nytimemachine.commons.models.Article.java", "BodyUseAPI": [], "Fixed commit": "f165a59b8ceab3a2cbba64374aa152912f8cd4fd", "Url": "https://api.github.com/repos/jaysondc/NYTimeMachine", "Date": "2017-09-23T18:16:08Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(processStarted)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8273/buggy-version/RTA.src.main.java.de.dhbw.mannheim.iot.rta.algorithm.CollectReport.java", "BodyUseAPI": [], "Fixed commit": "de47837e712cbf267d8f1879e192475da037070a", "Url": "https://api.github.com/repos/tarekbecker/IoTDHBWProject", "Date": "2015-04-16T12:00:18Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["env.getVariable(name).getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (val != null) { if ((val != null) && (val.getType().isSet())) { isSetVar[i] = true; if (elements.equals(val)) { varGen[i] = new org.rascalmpl.interpreter.matching.SingleIValueIterator(val); return true; } return false; } if (elements.contains(val)) { varGen[i] = new org.rascalmpl.interpreter.matching.SingleIValueIterator(val); }else { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2144/buggy-version/src.org.rascalmpl.interpreter.matching.SetPattern.java", "BodyUseAPI": ["org.eclipse.imp.pdb.facts.ISet.contains(org.eclipse.imp.pdb.facts.IValue)", "org.eclipse.imp.pdb.facts.ISet.equals(org.eclipse.imp.pdb.facts.IValue)", "val.getType().isSet()", "org.eclipse.imp.pdb.facts.IValue.getType()"], "Fixed commit": "60b0423d87dabf2ed79842d0f3eb19063ff8288c", "Url": "https://api.github.com/repos/cwi-swat/rascal", "Date": "2013-11-11T12:08:37Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getContext()) instanceof android.app.Activity) { inflater = ((android.app.Activity) (getContext())).getLayoutInflater(); }else { inflater = android.view.LayoutInflater.from(getContext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5760/buggy-version/colormixer.src.com.commonsware.cwac.colormixer.ColorMixer.java", "BodyUseAPI": [], "Fixed commit": "f2955478fcf6492c77b06efa1ca0a85590e1f3a7", "Url": "https://api.github.com/repos/commonsguy/cwac-colormixer", "Date": "2014-03-07T14:31:27Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (entry != null) { returnType = entry.typeResult; }else if ((ltype == (org.exist.xquery.value.Type.NUMBER)) || (rtype == (org.exist.xquery.value.Type.NUMBER))) { returnType = org.exist.xquery.value.Type.NUMBER; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8271/buggy-version/src.org.exist.xquery.OpNumeric.java", "BodyUseAPI": [], "Fixed commit": "7a6cff03c3406fd67380fd23caf80a8a94d30b12", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2016-01-03T08:58:37Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (mHandler)) { mHandler.removeCallbacksAndMessages(null); mHandler = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4543/buggy-version/scanner.src.main.java.cn.yifan.scanner.impl.Capture.java", "BodyUseAPI": [], "Fixed commit": "956fa770c526d1b8c6d8407de0e00749be447508", "Url": "https://api.github.com/repos/kelvinsail/Scanner", "Date": "2017-06-30T04:29:24Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (activity.getCameraManager())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4543/buggy-version/scanner.src.main.java.cn.yifan.scanner.DecodeHandler.java", "BodyUseAPI": [], "Fixed commit": "956fa770c526d1b8c6d8407de0e00749be447508", "Url": "https://api.github.com/repos/kelvinsail/Scanner", "Date": "2017-06-30T04:29:24Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (activity)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4543/buggy-version/scanner.src.main.java.cn.yifan.scanner.DecodeHandler.java", "BodyUseAPI": [], "Fixed commit": "956fa770c526d1b8c6d8407de0e00749be447508", "Url": "https://api.github.com/repos/kelvinsail/Scanner", "Date": "2017-06-30T04:29:24Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.aitorvs.android.fingerlock.BuildConfig.DEBUG) android.util.Log.d(com.aitorvs.android.fingerlock.internal.FingerLockApi23.TAG, (\"inUseBy: \" + ((mCallback) == listener ? \"true\" : \"false\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1273/buggy-version/core.src.main.java.com.aitorvs.android.fingerlock.internal.FingerLockApi23.java", "BodyUseAPI": [], "Fixed commit": "7cd06a64107a173c9b54b7b84472655944e88253", "Url": "https://api.github.com/repos/aitorvs/fingerlock", "Date": "2016-09-14T13:02:24Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.aitorvs.android.fingerlock.BuildConfig.DEBUG) android.util.Log.d(com.aitorvs.android.fingerlock.internal.FingerLockApi23.TAG, \"unregister: OK\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1273/buggy-version/core.src.main.java.com.aitorvs.android.fingerlock.internal.FingerLockApi23.java", "BodyUseAPI": [], "Fixed commit": "7cd06a64107a173c9b54b7b84472655944e88253", "Url": "https://api.github.com/repos/aitorvs/fingerlock", "Date": "2016-09-14T13:02:24Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.aitorvs.android.fingerlock.BuildConfig.DEBUG) android.util.Log.d(com.aitorvs.android.fingerlock.internal.FingerLockApi23.TAG, (\"Registering \" + keyName));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1273/buggy-version/core.src.main.java.com.aitorvs.android.fingerlock.internal.FingerLockApi23.java", "BodyUseAPI": [], "Fixed commit": "7cd06a64107a173c9b54b7b84472655944e88253", "Url": "https://api.github.com/repos/aitorvs/fingerlock", "Date": "2016-09-14T13:02:24Z"},
{"Line": "=>716", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mArrowDrawable) != null) mArrowDrawable.setMode(ArrowDrawable.MODE_DOWN, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3301/buggy-version/lib.src.main.java.com.rey.material.widget.Spinner.java", "BodyUseAPI": [], "Fixed commit": "26bfca8f8c12b264321d544e5dabdc4d73406f02", "Url": "https://api.github.com/repos/major-laslo/material", "Date": "2015-05-11T02:41:01Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.System.getSecurityManager()) == null) { classLoader = java.lang.Module.class.getClassLoader(); }else { classLoader = java.security.AccessController.doPrivileged(new java.security.PrivilegedAction<java.lang.ClassLoader>() { @java.lang.Override public java.lang.ClassLoader run() { return java.lang.Module.class.getClassLoader(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2780/buggy-version/api.src.main.java.org.jboss.marshalling.ModularClassResolver.java", "BodyUseAPI": [], "Fixed commit": "7247b175bdf6d2256d616233385bd65677b58be6", "Url": "https://api.github.com/repos/jboss-remoting/jboss-marshalling", "Date": "2016-01-11T00:57:00Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.System.getSecurityManager()) == null) { classLoader = java.lang.Module.class.getClassLoader(); }else { classLoader = java.security.AccessController.doPrivileged(new java.security.PrivilegedAction<java.lang.ClassLoader>() { @java.lang.Override public java.lang.ClassLoader run() { return java.lang.Module.class.getClassLoader(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2780/buggy-version/api.src.main.java.org.jboss.marshalling.ModularClassResolver.java", "BodyUseAPI": [], "Fixed commit": "7247b175bdf6d2256d616233385bd65677b58be6", "Url": "https://api.github.com/repos/jboss-remoting/jboss-marshalling", "Date": "2016-01-11T00:57:00Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.System.getSecurityManager()) == null) { classLoader = module.getClassLoader(); }else { classLoader = java.security.AccessController.doPrivileged(new java.security.PrivilegedAction<java.lang.ClassLoader>() { @java.lang.Override public java.lang.ClassLoader run() { return module.getClassLoader(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2780/buggy-version/api.src.main.java.org.jboss.marshalling.ModularClassResolver.java", "BodyUseAPI": [], "Fixed commit": "7247b175bdf6d2256d616233385bd65677b58be6", "Url": "https://api.github.com/repos/jboss-remoting/jboss-marshalling", "Date": "2016-01-11T00:57:00Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldPassword.equals(newPassword)) { resultMap.put(\"message\", \"\u65b0\u65e7\u5bc6\u7801\u4e0d\u80fd\u4e00\u6837\uff01\"); return resultMap; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6114/buggy-version/module.src.main.java.com.jia16.uc.controller.UserController.java", "BodyUseAPI": [], "Fixed commit": "2f0112f9fe21fde9cf1cf9a0bc72cc041c796117", "Url": "https://api.github.com/repos/HarvestFIS/uc", "Date": "2017-08-16T06:52:08Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cytoscape.model.CyColumn.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (paramName.equals(\"neoid\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6071/buggy-version/src.main.java.nl.maastrichtuniversity.networklibrary.CyNetLibSync.internal.utils.CyUtils.java", "BodyUseAPI": [], "Fixed commit": "a36a30491e450c024c573117d9882a8a95c16808", "Url": "https://api.github.com/repos/gsummer/CyNetLibSync", "Date": "2014-02-11T10:56:22Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((res.size()) == 0) { throw new java.lang.IllegalArgumentException((\"could not find the appropriate cynode! neoid: \" + start)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6071/buggy-version/src.main.java.nl.maastrichtuniversity.networklibrary.CyNetLibSync.internal.ResponseHandlers.SyncDownEdgeResponseHandler.java", "BodyUseAPI": [], "Fixed commit": "a36a30491e450c024c573117d9882a8a95c16808", "Url": "https://api.github.com/repos/gsummer/CyNetLibSync", "Date": "2014-02-11T10:56:22Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.maastrichtuniversity.networklibrary.CyNetLibSync.internal.utils.CyUtils.getNodesWithValue(org.cytoscape.model.CyNetwork,myNet.getDefaultNodeTable(),java.lang.String,java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((res.size()) == 0) { throw new java.lang.IllegalArgumentException((\"could not find the appropriate cynode! neoid: \" + start)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6071/buggy-version/src.main.java.nl.maastrichtuniversity.networklibrary.CyNetLibSync.internal.ResponseHandlers.SyncDownEdgeResponseHandler.java", "BodyUseAPI": [], "Fixed commit": "a36a30491e450c024c573117d9882a8a95c16808", "Url": "https://api.github.com/repos/gsummer/CyNetLibSync", "Date": "2014-02-11T10:56:22Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["realm.where(com.android.policyboss.core.models.MasterDataEntity.class).equalTo(\"Model_Name\", modelName.trim()).findFirst()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (entity != null) return entity.getModel_ID(); else return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8920/buggy-version/app.src.main.java.com.android.policyboss.core.controller.database.DatabaseController.java", "BodyUseAPI": ["com.android.policyboss.core.models.MasterDataEntity.getModel_ID()"], "Fixed commit": "0c23474bd9886718e24ea5b05383cc8af6409b5c", "Url": "https://api.github.com/repos/RupeeBoss/PBEmployee", "Date": "2017-12-15T06:22:40Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["realm.where(com.android.policyboss.core.models.MasterBikeDataEntity.class).equalTo(\"Model_Name\", modelName.trim()).findFirst()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (entity != null) return entity.getModel_ID(); else return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8920/buggy-version/app.src.main.java.com.android.policyboss.core.controller.database.DatabaseController.java", "BodyUseAPI": ["com.android.policyboss.core.models.MasterBikeDataEntity.getModel_ID()"], "Fixed commit": "0c23474bd9886718e24ea5b05383cc8af6409b5c", "Url": "https://api.github.com/repos/RupeeBoss/PBEmployee", "Date": "2017-12-15T06:22:40Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["realm.where(com.android.policyboss.core.models.MasterDataEntity.class).equalTo(\"Model_Name\", modelName.trim()).equalTo(\"Variant_Name\", variantName.trim()).equalTo(\"Make_Name\", makeName.trim()).findFirst()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (entity != null) return entity.getVariant_ID(); else return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8920/buggy-version/app.src.main.java.com.android.policyboss.core.controller.database.DatabaseController.java", "BodyUseAPI": ["com.android.policyboss.core.models.MasterDataEntity.getVariant_ID()"], "Fixed commit": "0c23474bd9886718e24ea5b05383cc8af6409b5c", "Url": "https://api.github.com/repos/RupeeBoss/PBEmployee", "Date": "2017-12-15T06:22:40Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["realm.where(com.android.policyboss.core.models.MasterBikeDataEntity.class).equalTo(\"Model_Name\", modelName.trim()).equalTo(\"Variant_Name\", variantName.trim()).equalTo(\"Make_Name\", makeName.trim()).findFirst()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (entity != null) return entity.getVariant_ID(); else return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8920/buggy-version/app.src.main.java.com.android.policyboss.core.controller.database.DatabaseController.java", "BodyUseAPI": ["com.android.policyboss.core.models.MasterBikeDataEntity.getVariant_ID()"], "Fixed commit": "0c23474bd9886718e24ea5b05383cc8af6409b5c", "Url": "https://api.github.com/repos/RupeeBoss/PBEmployee", "Date": "2017-12-15T06:22:40Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (origin.equalsIgnoreCase(\"http://jijiangshe.com\")) { allowedOrigin = origin; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7865/buggy-version/src.main.java.com.techmask.ressack.core.security.CORSResponseFilter.java", "BodyUseAPI": [], "Fixed commit": "6bd9760203ea66d0f4214025580514b78dfce6fb", "Url": "https://api.github.com/repos/ji-jiang/ResourceSackServices", "Date": "2016-05-09T11:41:28Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (plugin.getSettingsManager().isGlobalff()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8035/buggy-version/src.main.java.net.sacredlabyrinth.phaed.simpleclans.listeners.SCEntityListener.java", "BodyUseAPI": [], "Fixed commit": "eccac81cf36e95e8f7c002c6f634bac236662a72", "Url": "https://api.github.com/repos/marcelo-mason/SimpleClans", "Date": "2017-07-28T15:56:16Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subject == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5127/buggy-version/geode-core.src.main.java.org.apache.geode.internal.security.DisabledSecurityService.java", "BodyUseAPI": [], "Fixed commit": "650add913e207571964a47c33c23fe9f1dd3cbdd", "Url": "https://api.github.com/repos/apache/geode", "Date": "2017-06-07T22:41:58Z"},
{"Line": "=>581", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["SPCache.logoutRequestIDHash.remove(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (logoutReq == null) { logoutReq = ((com.sun.identity.saml2.protocol.LogoutRequest) (org.forgerock.openam.saml2.SAML2Store.getTokenFromStore(inResponseTo))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3014/buggy-version/openam-federation.openam-federation-library.src.main.java.com.sun.identity.saml2.profile.SPSingleLogout.java", "BodyUseAPI": [], "Fixed commit": "b38d5cb3493d7cc58e8b22f9f773c5f4f06c5879", "Url": "https://api.github.com/repos/gazal-k/OpenAM", "Date": "2015-11-16T11:33:17Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (dqQuality != null) { org.slf4j.Marker qualityContext = org.gedcomx.conversion.gedcom.dq55.ConversionContext.getDetachedMarker(\"QUAY\"); org.gedcomx.conversion.gedcom.dq55.ConversionContext.addReference(qualityContext); try { org.gedcomx.conversion.gedcom.dq55.CommonMapper.logger.warn(org.gedcomx.conversion.gedcom.dq55.ConversionContext.getContext(), \"Unrecognized value for QUAL tag {}\", dqQuality); } finally { org.gedcomx.conversion.gedcom.dq55.ConversionContext.removeReference(qualityContext); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3224/buggy-version/src.main.java.org.gedcomx.conversion.gedcom.dq55.CommonMapper.java", "BodyUseAPI": ["org.slf4j.Logger.warn(org.gedcomx.conversion.gedcom.dq55.ConversionContext.getContext(),java.lang.String,java.lang.String)"], "Fixed commit": "5ea14fb25bd5062fe1f61f14eb435f5ffed5d456", "Url": "https://api.github.com/repos/FamilySearch/gedcom5-conversion", "Date": "2012-06-06T16:25:37Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.event.equals(EventType.NONE))) { if (this.event.equals(EventType.ONCLICK)) { pw.println((((\"\\t\\tandroid:onClick=\\\"\" + (getName())) + \"_onClick\") + \"\\\"\")); } if (this.event.equals(EventType.LONGPRESS)) { java.lang.System.out.println(\"No handle for long press events. Work on that...\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1226/buggy-version/src.element.AButton.java", "BodyUseAPI": ["this.event.equals(EventType.LONGPRESS)", "this.event.equals(EventType.ONCLICK)"], "Fixed commit": "900c9398cc1195faec5d81991177eb0c40c98741", "Url": "https://api.github.com/repos/HiVoltRock/DragAndDroid", "Date": "2011-04-28T01:03:42Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (criteria.isDistinct()) { countExpression = builder.countDistinct(org.jdal.dao.jpa.JpaUtils.findRoot(countCriteria, criteria.getResultType())); }else { countExpression = builder.count(org.jdal.dao.jpa.JpaUtils.findRoot(countCriteria, criteria.getResultType())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1445/buggy-version/core.src.main.java.org.jdal.dao.jpa.JpaUtils.java", "BodyUseAPI": ["javax.persistence.criteria.CriteriaBuilder.count(javax.persistence.criteria.Root)", "javax.persistence.criteria.CriteriaBuilder.countDistinct(javax.persistence.criteria.Root)", "javax.persistence.criteria.CriteriaQuery<T>.getResultType()", "org.jdal.dao.jpa.JpaUtils.findRoot(javax.persistence.criteria.CriteriaQuery<java.lang.Long>,criteria.getResultType())", "org.jdal.dao.jpa.JpaUtils.findRoot(javax.persistence.criteria.CriteriaQuery<java.lang.Long>,criteria.getResultType())", "javax.persistence.criteria.CriteriaQuery<T>.getResultType()"], "Fixed commit": "313f714c7c883ceccc97bbad68f40bac52af9ccf", "Url": "https://api.github.com/repos/chelu/jdal", "Date": "2013-04-24T10:25:28Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isError) && (error.equals(tvError.getText().toString()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2560/buggy-version/inputlayoutviews.src.main.java.com.fifed.inputlayoutviews.views.Inputlayout.java", "BodyUseAPI": [], "Fixed commit": "c3eba6fbf2fead3cdfe560ad152c6aaeea649be0", "Url": "https://api.github.com/repos/fifed/InputLayoutView", "Date": "2017-10-23T13:17:43Z"},
{"Line": "=>1540", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((a instanceof java.lang.String) && (b instanceof java.lang.String)) { return ((java.lang.String) (a)).equals(((java.lang.String) (b))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3439/buggy-version/plugins.org.fusesource.ide.camel.model.src.org.fusesource.ide.camel.model.AbstractNode.java", "BodyUseAPI": [], "Fixed commit": "64ecee7ab77c851822a9493a099dc73a55e8cb9c", "Url": "https://api.github.com/repos/fusesource/fuseide", "Date": "2013-03-19T13:59:17Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (task != null) { java.util.Map<java.lang.String, java.lang.Object> ret = task.call(); if (!((java.lang.Boolean) (ret.get(\"succeed\")))) { java.lang.String errorMessage = ((java.lang.String) (ret.get(\"errorMessage\"))); putIntoJobExecutionContext(chunkContext, JobConstants.CURRENT_ERROR_MESSAGE, errorMessage); throw com.vmware.bdd.exception.TaskException.EXECUTION_FAILED(errorMessage); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6127/buggy-version/server.cluster-mgmt.src.main.java.com.vmware.bdd.service.job.software.SoftwareManagementStep.java", "BodyUseAPI": ["com.vmware.bdd.service.job.software.ISoftwareManagementTask.call()"], "Fixed commit": "3faf438be98dd49e7c3827b5b81ded52b596643a", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-06-25T07:59:27Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.teamd.taxi.authentication.Utils.isAuthenticated()) { com.teamd.taxi.authentication.AuthenticatedUser user = com.teamd.taxi.authentication.Utils.getCurrentUser(); addressList = addressService.findAddressesByUserId(user.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7827/buggy-version/src.main.java.com.teamd.taxi.controllers.user.UserAddressesController.java", "BodyUseAPI": [], "Fixed commit": "4d9d8d9a486f99779535e18406985c572f8be9aa", "Url": "https://api.github.com/repos/NetCracker-TeamD/TaxiService", "Date": "2015-05-20T08:01:22Z"},
{"Line": "=>4222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_gotoFKeyLabel) == true) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2042/buggy-version/src.com.limpidfox.HP97.java", "BodyUseAPI": [], "Fixed commit": "ac74f013f59d2e1646fc7a97d7f07b4b2d025296", "Url": "https://api.github.com/repos/oshea00/RPNCalc", "Date": "2011-05-15T21:46:01Z"},
{"Line": "=>4229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((GetRunning()) == true) { RunSubRoutine(); }else { SetRunning(true); java.lang.Thread thr = new java.lang.Thread() { public void run() { RunSubRoutine(); } }; thr.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2042/buggy-version/src.com.limpidfox.HP97.java", "BodyUseAPI": [], "Fixed commit": "ac74f013f59d2e1646fc7a97d7f07b4b2d025296", "Url": "https://api.github.com/repos/oshea00/RPNCalc", "Date": "2011-05-15T21:46:01Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((keyCode == (android.view.KeyEvent.KEYCODE_BACK)) && ((event.getAction()) == (android.view.KeyEvent.ACTION_DOWN))) { finish(); overridePendingTransition(R.anim.push_right_in, R.anim.push_right_out); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2487/buggy-version/src.com.plmt.boommall.ui.activity.NoticePriceReduceActivity.java", "BodyUseAPI": [], "Fixed commit": "e62d1648aff4cb446eee151d9689f2698507c2c1", "Url": "https://api.github.com/repos/xiguofeng/BoomMall", "Date": "2016-01-12T04:12:18Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["addFriendEditText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (messageHandler.SendGetStatus(\"CheckValidNewFriend\", friendUsername).equals(\"exists\")) { long response = databaseController.addFriend(friendUsername, EmotyChatDb.PROFILE_PICTURE_PATH_DEFAULT_VALUE); if (response != (-1)) { new java.lang.Thread(new java.lang.Runnable() { @java.lang.Override public void run() { java.lang.String photoPath = messageHandler.GetProfilePicture(\"getProfilePicture\", BackgroundService.auth.get_Username(), BackgroundService.auth.get_authKey(), friendUsername, \"1\"); databaseController.changeFriendProfilePicture(friendUsername, photoPath); friendsList.add(new com.gepardy.emotychat.Friend(friendUsername, photoPath)); mHandler.post(new java.lang.Runnable() { @java.lang.Override public void run() { adapter.notifyItemInserted(friendsList.size()); } }); } }).start(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7449/buggy-version/App.App-v1.app.src.main.java.com.gepardy.emotychat.AfterLoginActivity.AllFriendsActivity.java", "BodyUseAPI": ["com.gepardy.emotychat.DatabaseStuff.DatabaseController.addFriend(java.lang.String,EmotyChatDb.PROFILE_PICTURE_PATH_DEFAULT_VALUE)", "com.gepardy.emotychat.DatabaseStuff.DatabaseController.changeFriendProfilePicture(java.lang.String,java.lang.String)", "java.lang.Thread.start()", "com.gepardy.emotychat.MessageSenderReceiver.MessageHandler.GetProfilePicture(java.lang.String,BackgroundService.auth.get_Username(),BackgroundService.auth.get_authKey(),java.lang.String,java.lang.String)", "java.util.List<com.gepardy.emotychat.Friend>.add(com.gepardy.emotychat.Friend)"], "Fixed commit": "6da15308e432bc7f5e9765cca498aa0f58552cd1", "Url": "https://api.github.com/repos/Nikolas1814/APP", "Date": "2015-05-20T12:12:01Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["datastore.DataStoreJsonWrapper<metadata.OverlayTree>.get(Constants.TREEINFO,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (tree == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8674/buggy-version/src.main.java.server.HeartbeatServlet.java", "BodyUseAPI": [], "Fixed commit": "b38a173daa6c5c8934c9071ea9e050a08749deb5", "Url": "https://api.github.com/repos/AnbangZhao/p2pMeta", "Date": "2014-12-02T21:24:56Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value != null) { throw new java.lang.RuntimeException((\"Only NULL default values for DECIMAL \" + \"and VARBINARY columns are supported right now\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4152/buggy-version/src.frontend.org.voltdb.utils.VoltTypeUtil.java", "BodyUseAPI": [], "Fixed commit": "7182eb5d0582a4d6e6e24cfc35fd3aefb965d013", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2011-11-17T19:56:49Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["moa.reduction.core.NaiveBayesReduction.modelAttIndexToInstanceAttIndex(int,com.yahoo.labs.samoa.instances.Instance)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((rinst.value(instAttIndex)) == (-1)) { java.lang.System.out.println(\"Value changed\"); value = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5904/buggy-version/src.moa.reduction.core.NaiveBayesReduction.java", "BodyUseAPI": [], "Fixed commit": "95973815a471552387d3a2499a956e265ae7c43d", "Url": "https://api.github.com/repos/sramirez/MOAReduction", "Date": "2016-10-04T15:56:20Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rinst.classValue()) == (-1)) { java.lang.System.out.println(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5904/buggy-version/src.moa.reduction.core.NaiveBayesReduction.java", "BodyUseAPI": [], "Fixed commit": "95973815a471552387d3a2499a956e265ae7c43d", "Url": "https://api.github.com/repos/sramirez/MOAReduction", "Date": "2016-10-04T15:56:20Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inst == null) { java.lang.System.err.println(\"Error: null instance\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5904/buggy-version/src.moa.reduction.core.NaiveBayesReduction.java", "BodyUseAPI": [], "Fixed commit": "95973815a471552387d3a2499a956e265ae7c43d", "Url": "https://api.github.com/repos/sramirez/MOAReduction", "Date": "2016-10-04T15:56:20Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getLocation().length()) == 0) { avoidance = test.getLocation().cross(Vector3f.UNIT_Y); }else { avoidance = test.getLocation().cross(getLocation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7636/buggy-version/src.celestial.Ship.Ship.java", "BodyUseAPI": [], "Fixed commit": "f473bbcb757b4c05c0d8beb4fd2f50a2cfb5871c", "Url": "https://api.github.com/repos/sugrasym/Open-Skies", "Date": "2016-04-06T07:11:14Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(startSprinkler(common.SprinklerThread.StartReason.MOTION))) { this.cancel(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2589/buggy-version/ControllerService.src.common.SprinklerThread.java", "BodyUseAPI": [], "Fixed commit": "b02b4c9f1046da139ef3b395d759ceceddc54e51", "Url": "https://api.github.com/repos/chhans/irrigation", "Date": "2014-10-13T13:37:26Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(startSprinkler(common.SprinklerThread.StartReason.HUMIDITY))) { this.cancel(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2589/buggy-version/ControllerService.src.common.SprinklerThread.java", "BodyUseAPI": [], "Fixed commit": "b02b4c9f1046da139ef3b395d759ceceddc54e51", "Url": "https://api.github.com/repos/chhans/irrigation", "Date": "2014-10-13T13:37:26Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataValue.containsField(\"coordinates\")) { return dataValue.get(\"coordinates\"); }else if (dataValue.containsField(\"position\")) { return dataValue.get(\"position\"); }else if (dataValue.containsField(\"pos\")) { return dataValue.get(\"pos\"); }else if (dataValue.containsField(\"location\")) { return dataValue.get(\"location\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6896/buggy-version/src.main.java.org.openshift.geoapp.rest.POIResource.java", "BodyUseAPI": ["com.mongodb.DBObject.containsField(java.lang.String)", "com.mongodb.DBObject.get(java.lang.String)", "com.mongodb.DBObject.containsField(java.lang.String)", "com.mongodb.DBObject.get(java.lang.String)", "com.mongodb.DBObject.containsField(java.lang.String)", "com.mongodb.DBObject.get(java.lang.String)", "com.mongodb.DBObject.get(java.lang.String)"], "Fixed commit": "b663278dd7048049170a0f3e4060e0d739369da1", "Url": "https://api.github.com/repos/siamaksade/openshift3geoapp", "Date": "2016-02-18T10:17:32Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((context) instanceof android.app.Activity) && (((android.app.Activity) (context)).isFinishing())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8195/buggy-version/library.src.main.java.com.github.javiersantos.piracychecker.PiracyChecker.java", "BodyUseAPI": [], "Fixed commit": "e6538bc9caa2bf254dfcd0bad4cae871f97750e3", "Url": "https://api.github.com/repos/yongjhih/PiracyChecker", "Date": "2017-03-19T10:38:22Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i == (length - 1)) { (scanner.count)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/9235/buggy-version/Words.java", "BodyUseAPI": [], "Fixed commit": "e658785fc9e436da40cceb0ec9495982c5cb59e5", "Url": "https://api.github.com/repos/zaphinath/spell", "Date": "2013-07-02T04:35:34Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i == (length - 1)) (nn.count)++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/9235/buggy-version/Words.java", "BodyUseAPI": [], "Fixed commit": "e658785fc9e436da40cceb0ec9495982c5cb59e5", "Url": "https://api.github.com/repos/zaphinath/spell", "Date": "2013-07-02T04:35:34Z"},
{"Line": "=>618", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.stationmillenium.android.utils.AppUtils.isAPILevel21Available())) { android.app.Notification notification = mediaPlayerNotificationBuilder.createNotification(true); ((android.app.NotificationManager) (getSystemService(Context.NOTIFICATION_SERVICE))).notify(com.stationmillenium.android.services.MediaPlayerService.NOTIFICATION_ID, notification); android.widget.Toast.makeText(this, getResources().getString(R.string.player_play_toast), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2180/buggy-version/station-millenium.src.main.java.com.stationmillenium.android.services.MediaPlayerService.java", "BodyUseAPI": [], "Fixed commit": "b5bbfc3bffac5ecb9395cf40a79d7f6afc0d7f7e", "Url": "https://api.github.com/repos/vdavy/android", "Date": "2015-02-13T16:02:14Z"},
{"Line": "=>607", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.stationmillenium.android.utils.AppUtils.isAPILevel21Available())) { android.app.Notification notification = mediaPlayerNotificationBuilder.createNotification(false); ((android.app.NotificationManager) (getSystemService(Context.NOTIFICATION_SERVICE))).notify(com.stationmillenium.android.services.MediaPlayerService.NOTIFICATION_ID, notification); android.widget.Toast.makeText(this, getResources().getString(R.string.player_loading_toast), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2180/buggy-version/station-millenium.src.main.java.com.stationmillenium.android.services.MediaPlayerService.java", "BodyUseAPI": [], "Fixed commit": "b5bbfc3bffac5ecb9395cf40a79d7f6afc0d7f7e", "Url": "https://api.github.com/repos/vdavy/android", "Date": "2015-02-13T16:02:14Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dtlsConnector) != null) { client.setEndpoint(org.eclipse.californium.core.network.EndpointManager.getEndpointManager().getDefaultEndpoint()); dtlsConnector.destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/33/buggy-version/kCoAPSocket.src.net.kappelt.kCoAPSocket.Coap.java", "BodyUseAPI": [], "Fixed commit": "b351daada5dc13a52aa87072963917aeec1ecb15", "Url": "https://api.github.com/repos/peterkappelt/kCoAPSocket", "Date": "2017-07-08T20:44:54Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (TTTCore.mg.getArena(args[1].toLowerCase()).isPresent()) { TTTCore.locale.getLocalizable(\"error.arena.already-exists\").withPrefix(Color.ERROR).sendTo(sender); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/507/buggy-version/src.main.java.net.caseif.ttt.command.handler.arena.ImportCommand.java", "BodyUseAPI": [], "Fixed commit": "7f6fe0a307e32ec14ea614072fd76b13a1be9c9c", "Url": "https://api.github.com/repos/caseif/TTT", "Date": "2016-01-08T04:05:33Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["au.org.intersect.samifier.parser.FastaParserImpl.readCode(gene.getChromosome())", "au.org.intersect.samifier.domain.GeneSequence.getStop()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((code.length()) < startIndex) || ((code.length()) < stopIndex)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8943/buggy-version/src.au.org.intersect.samifier.parser.FastaParserImpl.java", "BodyUseAPI": [], "Fixed commit": "10a0fffa9dbf69988fb349840e0609afc0809cf3", "Url": "https://api.github.com/repos/IntersectAustralia/ap11_samifier", "Date": "2013-04-22T05:48:55Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dk.muj.derius.entity.mplayer.MPlayerColl.get().get(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (mplayer.isPlayer()) mplayer.getScoreboard();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7501/buggy-version/src.dk.muj.derius.engine.EngineMain.java", "BodyUseAPI": ["dk.muj.derius.entity.mplayer.MPlayer.getScoreboard()"], "Fixed commit": "47f2748ee17a84f3c72e3a15bfdc54acb322c49f", "Url": "https://api.github.com/repos/Derius/Derius-Core", "Date": "2015-03-15T08:42:50Z"},
{"Line": "=>1010", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.utexas.clm.reconstructreader.reconstruct.ReconstructTranslator.calculateTransformScale(java.util.Collection<org.w3c.dom.Document>,double[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.lang.Double.isInfinite(minScale)) { messenger.sendMessage((\"Reconstruct project has no golden section.\" + \" This may or may not be problematic\")); return \"\"; }else if (maxScale != minScale) { return ((((((\"This Reconstruct project has been re-calibrated using the scale method.\\n\" + \"The detected scale was \") + minScale) + \", but multiple valid scales were\") + \" detected,\\nthe extremum of which was \") + maxScale) + \".\\nPlease verify that \") + \" the areas of your traces have not changed.\"; }else if (minScale != 1) { return (((\"This Reconstruct project has been re-calibrated using the scale method.\\n\" + \"The detected scale was \") + minScale) + \".\\nPlease verify that \") + \" the areas of your traces have not changed.\"; }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/599/buggy-version/src-plugins.Reconstruct_Reader.src.main.java.edu.utexas.clm.reconstructreader.reconstruct.ReconstructTranslator.java", "BodyUseAPI": [], "Fixed commit": "db775cbe95ed827315423bfa6745f77ad4de5642", "Url": "https://api.github.com/repos/larrylindsey/fiji", "Date": "2013-09-10T22:13:25Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.gameWorld.getMainCharacter().getPendingLevels()) > 0) { return DispatchKeyListener.STATE_LEVEL_UP_STATS_MENU; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2266/buggy-version/rznw.ui.SpellsScreenKeyListener.java", "BodyUseAPI": [], "Fixed commit": "26271ccfbfe4437444b7ac9c485176b4f64a6652", "Url": "https://api.github.com/repos/bprollinson/robotzombieninjawizard", "Date": "2015-10-24T15:59:14Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCount) > 0) { (mCount)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7597/buggy-version/design.src.com.design.state.GumballMachine.java", "BodyUseAPI": [], "Fixed commit": "84913214badc6e95bad25b228869a8e9da7e1853", "Url": "https://api.github.com/repos/ckelsel/design", "Date": "2016-01-02T04:33:46Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mGumballMachine.getmCount()) > 0) { mGumballMachine.setState(mGumballMachine.getmNoQuarterState()); }else { mGumballMachine.setState(mGumballMachine.getmSoldOutState()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7597/buggy-version/design.src.com.design.state.SoldState.java", "BodyUseAPI": ["com.design.state.GumballMachine.setState(mGumballMachine.getmSoldOutState())", "com.design.state.GumballMachine.getmNoQuarterState()", "com.design.state.GumballMachine.setState(mGumballMachine.getmNoQuarterState())", "com.design.state.GumballMachine.getmSoldOutState()"], "Fixed commit": "84913214badc6e95bad25b228869a8e9da7e1853", "Url": "https://api.github.com/repos/ckelsel/design", "Date": "2016-01-02T04:33:46Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.mabako.steamgifts.adapters.EndlessAdapter.hasEnoughItems(java.util.List<net.mabako.steamgifts.adapters.IEndlessAdaptable>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((enoughItems && ((items.size()) == 0)) && (alternativeEnd)) { enoughItems = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/337/buggy-version/app.src.main.java.net.mabako.steamgifts.adapters.EndlessAdapter.java", "BodyUseAPI": [], "Fixed commit": "ce86d36659ab7433dc2b60e0408dc8088f1bf9b6", "Url": "https://api.github.com/repos/SteamGifts/SteamGifts", "Date": "2016-01-04T22:49:02Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dir.exists())) { new java.io.File(dirName).mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2567/buggy-version/WriteToHTMLFile.java", "BodyUseAPI": [], "Fixed commit": "bf2eac658ba938078731338adac934d40e39a2de", "Url": "https://api.github.com/repos/madhav165/reddittohtml", "Date": "2016-06-19T07:10:03Z"},
{"Line": "=>951", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONObject.get(Constants.SWAGGER_X_WSO2_SECURITY)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (xWso2Security != null) { scopes = ((org.json.simple.JSONArray) (((org.json.simple.JSONObject) (xWso2Security.get(Constants.SWAGGER_OBJECT_NAME_APIM))).get(Constants.SWAGGER_X_WSO2_SCOPES))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3624/buggy-version/modules.distribution.resources.migration.wso2-api-migration-client.src.main.java.org.wso2.carbon.apimgt.migration.client.MigrateFrom110to200.java", "BodyUseAPI": ["org.json.simple.JSONObject.get(Constants.SWAGGER_OBJECT_NAME_APIM)", "((org.json.simple.JSONObject) (xWso2Security.get(Constants.SWAGGER_OBJECT_NAME_APIM))).get(Constants.SWAGGER_X_WSO2_SCOPES)"], "Fixed commit": "11809ad4efeab0ee759e414cfff2dff869e32f61", "Url": "https://api.github.com/repos/malinthaprasan/product-apim", "Date": "2016-06-20T06:36:48Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (page == (-1)) page = (Paging.Simulation.PAGES) - 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7080/buggy-version/src.Paging.Simulation.java", "BodyUseAPI": [], "Fixed commit": "5009b17880c9e0b64e79bd43b70e3cd7d80a7d0b", "Url": "https://api.github.com/repos/CS149-3/homework4", "Date": "2016-03-05T07:26:45Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (machine == null) return false; else if (!(machine instanceof me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunMachine)) return false; else if (machine instanceof me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunMachine) { me.mrCookieSlime.Slimefun.Objects.MultiBlock mb = ((me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunMachine) (machine)).toMultiBlock(); if ((trigger) == (mb.getTriggerBlock())) { for (int i = 0; i < (mb.getBuild().length); i++) { if ((mb.getBuild()[i]) != null) { if ((mb.getBuild()[i]) == (org.bukkit.Material.LOG)) { if (!(blocks[i].toString().contains(\"LOG\"))) return false; }else if ((mb.getBuild()[i]) != (blocks[i])) return false; } } return true; }else return false; }else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7035/buggy-version/src.me.mrCookieSlime.Slimefun.Objects.MultiBlock.java", "BodyUseAPI": [], "Fixed commit": "a684498dfdecf7ac0c754fb6cb5a49059b3f1525", "Url": "https://api.github.com/repos/mrCookieSlime/Slimefun-3.0", "Date": "2014-11-09T13:55:49Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((eu.europeana.api.client.config.ClientConfiguration.singleton) != null) return eu.europeana.api.client.config.ClientConfiguration.singleton;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8945/buggy-version/europeana-client.src.main.java.eu.europeana.api.client.config.ClientConfiguration.java", "BodyUseAPI": [], "Fixed commit": "719b372ae94f9981faf2bc0f2310b0b4efae9a40", "Url": "https://api.github.com/repos/florent-andre/europeana-client", "Date": "2014-12-01T13:18:27Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentCustomer.getIsClubMember()) { javafx.stage.Stage stage = new javafx.stage.Stage(); javafx.fxml.FXMLLoader myLoader = new javafx.fxml.FXMLLoader(getClass().getResource(\"/UserInterface/Operations/FXML/MembershipPaymentPageFXML.fxml\")); javafx.scene.layout.Pane renewPane = ((javafx.scene.layout.Pane) (myLoader.load())); UserInterface.Operations.FXMLController.MembershipPaymentPageFXMLController newController = myLoader.getController(); newController.storeCustomer(currentCustomer.getPhone()); javafx.scene.Scene scene = new javafx.scene.Scene(renewPane); stage.setScene(scene); stage.initModality(Modality.APPLICATION_MODAL); stage.showAndWait(); }else { SystemOperations.DialogFX dialog = new SystemOperations.DialogFX(SystemOperations.DialogFX.Type.ERROR); dialog.setTitleText(\"Error\"); dialog.setMessage(\"Please register Club Member\"); dialog.showDialog(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4990/buggy-version/src.UserInterface.PeopleManagement.FXML.CustomerPageForCustomerController.java", "BodyUseAPI": ["UserInterface.Operations.FXMLController.MembershipPaymentPageFXMLController.storeCustomer(currentCustomer.getPhone())", "entity.Customer.getPhone()"], "Fixed commit": "7c68b9c3636453782c990b4582ed68557980a17e", "Url": "https://api.github.com/repos/OurSRC/SuperRent", "Date": "2014-04-28T19:20:02Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(currentCustomer.getIsClubMember())) { javafx.stage.Stage stage = new javafx.stage.Stage(); javafx.fxml.FXMLLoader myLoader = new javafx.fxml.FXMLLoader(getClass().getResource(\"/UserInterface/Operations/FXML/MembershipPaymentPageFXML.fxml\")); javafx.scene.layout.Pane registerPane = ((javafx.scene.layout.Pane) (myLoader.load())); UserInterface.Operations.FXMLController.MembershipPaymentPageFXMLController newController = myLoader.getController(); newController.storeCustomer(currentCustomer.getPhone()); javafx.scene.Scene scene = new javafx.scene.Scene(registerPane); stage.setScene(scene); stage.initModality(Modality.APPLICATION_MODAL); stage.showAndWait(); }else { SystemOperations.DialogFX dialog = new SystemOperations.DialogFX(SystemOperations.DialogFX.Type.ERROR); dialog.setTitleText(\"Error\"); dialog.setMessage(\"Customer is already a Club Member\"); dialog.showDialog(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4990/buggy-version/src.UserInterface.PeopleManagement.FXML.CustomerPageForCustomerController.java", "BodyUseAPI": ["entity.Customer.getPhone()", "UserInterface.Operations.FXMLController.MembershipPaymentPageFXMLController.storeCustomer(currentCustomer.getPhone())"], "Fixed commit": "7c68b9c3636453782c990b4582ed68557980a17e", "Url": "https://api.github.com/repos/OurSRC/SuperRent", "Date": "2014-04-28T19:20:02Z"},
{"Line": "=>2102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((allTimes.size()) >= (timeIndices.length)) { for (int i = 0; i < (timeIndices.length); i++) { ucar.nc2.time.CalendarDate ct = dt.getCalendarDate(timeIndices[i]); long diff = ct.getDifferenceInMsecs(ct0); float fh = diff / (1000.0F * 3600.0F); buf.append((fh + \",\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7870/buggy-version/src.ucar.unidata.data.grid.GeoGridDataSource.java", "BodyUseAPI": ["ucar.nc2.dataset.CoordinateAxis1DTime.getCalendarDate(int)"], "Fixed commit": "3ef538d5608a9fa61bdd0a36fbfeb470f3fc1abe", "Url": "https://api.github.com/repos/jon4than/IDV", "Date": "2015-09-24T19:48:06Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(newStatus.isStatus(Status.MSP_CONNECTED))) control.getCurrentModel().clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3540/buggy-version/MAVGCL.src.com.comino.flight.observables.StateProperties.java", "BodyUseAPI": [], "Fixed commit": "89160edd764762cd0843a0a54653c59105aeaba2", "Url": "https://api.github.com/repos/ecmnet/MAVGCL", "Date": "2016-10-07T09:02:05Z"},
{"Line": "=>939", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.Math.abs(((curve[3][0]) - x))) < epsilon) && ((java.lang.Math.abs(((curve[3][1]) - y))) < epsilon)) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/80/buggy-version/src.java.com.scriptographer.ai.Curve.java", "BodyUseAPI": [], "Fixed commit": "a14f03be0cd51041bb6fb8fc0854c0a119e3f0bc", "Url": "https://api.github.com/repos/scriptographer/scriptographer", "Date": "2012-05-09T07:55:02Z"},
{"Line": "=>936", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.Math.abs(((curve[0][0]) - x))) < epsilon) && ((java.lang.Math.abs(((curve[0][1]) - y))) < epsilon)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/80/buggy-version/src.java.com.scriptographer.ai.Curve.java", "BodyUseAPI": [], "Fixed commit": "a14f03be0cd51041bb6fb8fc0854c0a119e3f0bc", "Url": "https://api.github.com/repos/scriptographer/scriptographer", "Date": "2012-05-09T07:55:02Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (row.getCell(idCol).isMissing()) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6502/buggy-version/de.mpicbg.knime.hcs.base.src.de.mpicbg.knime.hcs.base.nodes.manip.col.numformat.NumberFormatterNodeModel.java", "BodyUseAPI": [], "Fixed commit": "7e9062fe5da308d357828c8cb55eaaa359d82db9", "Url": "https://api.github.com/repos/knime-mpicbg/HCS-Tools", "Date": "2015-10-21T13:56:22Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (minWeight <= 0) { minWeight = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4777/buggy-version/RippedGiantFitness.app.src.main.java.com.rgf.rippedgiantfitness.helper.SharedPreferencesHelper.java", "BodyUseAPI": [], "Fixed commit": "da54205785274bdc41956dc8f2b2407ba9bbf08e", "Url": "https://api.github.com/repos/nateg5/Android", "Date": "2016-06-21T21:34:29Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (accumulator >= temp) { throw new java.lang.NumberFormatException(\"Number is too large to fit in a long.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3828/buggy-version/src.main.java.org.quiz.LongParser.java", "BodyUseAPI": [], "Fixed commit": "c459546e1991a1465e7df8e908ffe03bfacd9b1b", "Url": "https://api.github.com/repos/willmitchell/quiz", "Date": "2015-02-09T18:18:28Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(fileUri.startsWith(\"file:/\"))) { fileUri = \"file:/\" + fileUri; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8137/buggy-version/src.android.VideoEditor.java", "BodyUseAPI": [], "Fixed commit": "bb3f6530314466a89970ec63045f8b869702d09c", "Url": "https://api.github.com/repos/rossmartin/cordova-plugin-video-editor", "Date": "2015-04-03T19:16:14Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!leftEdgeDataPointAdded) { if ((previousDate != null) && ((previousDate.getTime()) <= pastInMillis)) { chartData.add(new org.multibit.viewsystem.swing.view.ChartsPanel.ChartData(new java.util.Date(pastInMillis), previousBalance)); }else { chartData.add(new org.multibit.viewsystem.swing.view.ChartsPanel.ChartData(new java.util.Date(pastInMillis), java.math.BigInteger.ZERO)); } leftEdgeDataPointAdded = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/9059/buggy-version/src.main.java.org.multibit.viewsystem.swing.view.ChartsPanel.java", "BodyUseAPI": [], "Fixed commit": "3254a5c156c7d3e5d7ce7a3aa35e5edbba8e9cb9", "Url": "https://api.github.com/repos/jim618/multibit", "Date": "2012-09-06T20:59:49Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (packet == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3292/buggy-version/src.no.ntnu.fp.net.co.ConnectionImpl.java", "BodyUseAPI": [], "Fixed commit": "226982f1749b7df4313bba8a7ec756f44ae3bd42", "Url": "https://api.github.com/repos/aleksanb/fellesprosjektet", "Date": "2013-04-19T11:02:17Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((index < 0) || (index >= (this.chunks.length))) { Settling.log.warning(((((\"Incorrect chunk location: (\" + chunkX) + \"; \") + chunkZ) + \")\")); Settling.log.warning(((((\"Relative: (\" + ((chunkX - (this.getMinXBorder())) >> 4)) + \"; \") + ((chunkZ - (this.getMinZBorder())) >> 4)) + \")\")); Settling.log.warning((((\"Index: \" + index) + \" Size: \") + (this.chunks.length))); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6354/buggy-version/src.client.net.specialattack.settling.client.world.WorldDemo.java", "BodyUseAPI": ["Settling.log.warning((((\"Index: \" + index) + \" Size: \") + (this.chunks.length)))"], "Fixed commit": "d96c74c95044cf858b77923d0c0c7d0c6c9e861e", "Url": "https://api.github.com/repos/mbl111/SettlingGame", "Date": "2013-04-17T21:36:11Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lasttime.compareTo(\"15:01\")) >= 0) { return sellStock(curprice, curprofit, \"Endday\", lasttime, getEntryBudget()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7731/buggy-version/src.com.stockexit.net.SymbolEstimator.java", "BodyUseAPI": ["com.stockexit.net.SymbolEstimator.sellStock(double,double,java.lang.String,java.lang.String,int)"], "Fixed commit": "8f3d3c8c119e87fbab3a519a62ccc311a02a9b49", "Url": "https://api.github.com/repos/kushaldudani/stockexit", "Date": "2015-09-16T19:16:36Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isRecurring())) { isComplete = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7483/buggy-version/src.rpisdd.rpgme.gamelogic.quests.Quest.java", "BodyUseAPI": [], "Fixed commit": "a95ec3a62f2bf06b63b9aff726262e0519e15a04", "Url": "https://api.github.com/repos/benstreb/RPGme", "Date": "2013-12-04T01:35:04Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((work.presentation()) != null) { workVM.presentation = com.beautysight.liurushi.community.app.dpo.PresentationPayload.from(work.presentation(), keyToDownloadUrlMapping); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8547/buggy-version/liurushi-community.src.main.java.com.beautysight.liurushi.community.app.presentation.WorkVM.java", "BodyUseAPI": ["com.beautysight.liurushi.community.app.dpo.PresentationPayload.from(work.presentation(),java.util.Map<java.lang.String, java.lang.String>)", "com.beautysight.liurushi.community.domain.model.work.Work.presentation()"], "Fixed commit": "9139978b88f3f93ebe2447bc65477603b69cbd8c", "Url": "https://api.github.com/repos/18luohan/beautysight-liurushi", "Date": "2015-09-09T05:43:19Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.deidentifier.arx.ARXAnonymizer.anonymize(org.deidentifier.arx.Data,org.deidentifier.arx.ARXConfiguration)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((result.getGlobalOptimum()) != null) { java.lang.System.out.println(\" - Transformed data:\"); final java.util.Iterator<java.lang.String[]> transformed = result.getHandle().iterator(); while (transformed.hasNext()) { java.lang.System.out.print(\" \"); java.lang.System.out.println(java.util.Arrays.toString(transformed.next())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2792/buggy-version/src.example.org.deidentifier.arx.examples.Example13.java", "BodyUseAPI": ["result.getHandle().iterator()", "org.deidentifier.arx.ARXResult.getHandle()"], "Fixed commit": "4318ebefe1f91fbfa8aea388e8215af2744cef40", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2013-08-19T10:37:19Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fields.size()) == 0) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8845/buggy-version/cb4j-core.src.main.java.net.benas.cb4j.core.model.Record.java", "BodyUseAPI": [], "Fixed commit": "738b4da39074279a466baf5cf330283b9ad73433", "Url": "https://api.github.com/repos/benas/cb4j", "Date": "2012-10-07T15:03:30Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<de.eacg.ecs.plugin.ComponentId, java.util.Map.Entry<org.apache.maven.project.MavenProject, java.lang.String[]>>.get(de.eacg.ecs.plugin.ComponentId)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (projectLicensesPair == null) { projectLicensesPair = projectLookup.get(de.eacg.ecs.plugin.ComponentId.createFallback(artifact)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8987/buggy-version/src.main.java.de.eacg.ecs.plugin.ScanAndTransferMojo.java", "BodyUseAPI": [], "Fixed commit": "ed58a4dc1e0c9ae523a1374c01a632f675a6d83a", "Url": "https://api.github.com/repos/eacg-gmbh/ecs-mvn-plugin", "Date": "2015-11-23T16:10:51Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sourcePortEdit.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((sourcePort.length()) == 0) { sourcePort = sourcePortEdit.getHint().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2961/buggy-version/app.src.main.java.org.connectbot.PortForwardListActivity.java", "BodyUseAPI": [], "Fixed commit": "835dac4485c52362a13f4895f8c687e301000d96", "Url": "https://api.github.com/repos/jbcode42/connectbot", "Date": "2015-09-23T17:47:05Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["destEdit.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((destination.length()) == 0) { destination = destEdit.getHint().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2961/buggy-version/app.src.main.java.org.connectbot.PortForwardListActivity.java", "BodyUseAPI": [], "Fixed commit": "835dac4485c52362a13f4895f8c687e301000d96", "Url": "https://api.github.com/repos/jbcode42/connectbot", "Date": "2015-09-23T17:47:05Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Set<de.uni_potsdam.de.hpi.fgnaumann.art.vectors.FeatureVector<?>>.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (inputVectorsIterator.hasNext()) { exampleVector = inputVectorsIterator.next(); }else { throw new java.lang.IllegalArgumentException(\"Your input vectors seem to be empty.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5641/buggy-version/src.de.uni_potsdam.de.hpi.fgnaumann.art.lsh.LSH.java", "BodyUseAPI": ["java.util.Iterator<de.uni_potsdam.de.hpi.fgnaumann.art.vectors.FeatureVector<? extends java.lang.Number>>.next()"], "Fixed commit": "dceaccc81311130efd9b8392ed210f751ea11b4a", "Url": "https://api.github.com/repos/fatschi/art", "Date": "2013-06-29T18:22:36Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.block.BlockPlaceEvent.getBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((block.getY()) >= ((block.getWorld().getSeaLevel()) - 1)) { varErrorMessage = \"IN RESTRICTED AIR SPACE\"; }else { varErrorMessage = \"NOT ABOVE SEA LEVEL\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/472/buggy-version/src.com.xyberviri.amchat.AMChatListener.java", "BodyUseAPI": [], "Fixed commit": "efc5de604abc8e316b74f96065d8d5047c94969d", "Url": "https://api.github.com/repos/xyberviri/com.xyberviri.amchat", "Date": "2012-04-29T04:06:18Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4044/buggy-version/app.src.main.java.com.bulong.demo.DensityHelper.java", "BodyUseAPI": [], "Fixed commit": "5f2bdf94a9cc39190cdb98529ccb6b9ed0405708", "Url": "https://api.github.com/repos/Firedamp/Rudeness", "Date": "2017-08-13T10:46:58Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getResources()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"MiuiResources\".equals(resources.getClass().getSimpleName())) { try { java.lang.reflect.Field field = android.content.res.Resources.class.getDeclaredField(\"mTmpMetrics\"); field.setAccessible(true); android.util.DisplayMetrics metrics = ((android.util.DisplayMetrics) (field.get(resources))); metrics.xdpi = ((size.x) / designWidth) * 72.0F; } catch (java.lang.NoSuchFieldException e) { e.printStackTrace(); } catch (java.lang.IllegalAccessException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4044/buggy-version/app.src.main.java.com.bulong.demo.DensityHelper.java", "BodyUseAPI": ["java.lang.reflect.Field.get(android.content.res.Resources)"], "Fixed commit": "5f2bdf94a9cc39190cdb98529ccb6b9ed0405708", "Url": "https://api.github.com/repos/Firedamp/Rudeness", "Date": "2017-08-13T10:46:58Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getDataSize()) > 0) { onDataChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4842/buggy-version/EazeGraphLibrary.src.main.java.org.eazegraph.lib.charts.BaseBarChart.java", "BodyUseAPI": [], "Fixed commit": "94827d8202cec3eccc965bb27078a98865ec09c9", "Url": "https://api.github.com/repos/blackfizz/EazeGraph", "Date": "2014-07-11T07:48:04Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (\"XLS\".equals(t)) xlsCheck.setSelected(true); else if (\"SHAPEFILE\".equals(t)) shapefileCheck.setSelected(true); else if (\"GDB\".equals(t)) gdbCheck.setSelected(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/713/buggy-version/Desktop.src.org.mitre.opensextant.desktop.ui.forms.ConfigFrameImpl.java", "BodyUseAPI": [], "Fixed commit": "e804f17ca1a7d8a3e4cd7d5fcd4abb425551d408", "Url": "https://api.github.com/repos/OpenSextant/opensextant", "Date": "2013-06-20T17:06:15Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameterValues(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (compids != null) { for (java.lang.String compid : compids) { tcomplist.add(action.ChangeTicketAction.DBManager1.getComponentById(compid)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2344/buggy-version/src.action.ChangeTicketAction.java", "BodyUseAPI": [], "Fixed commit": "21a6d6cb185a6166774e5d448b0630f39adf96c7", "Url": "https://api.github.com/repos/SongmanW/SWTP2015", "Date": "2015-07-07T08:04:49Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameterValues(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (compids != null) { for (java.lang.String compid : compids) { tcomplist.add(action.ChangeTicketAction.DBManager1.getComponentById(compid)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2344/buggy-version/src.action.ChangeTicketAction.java", "BodyUseAPI": [], "Fixed commit": "21a6d6cb185a6166774e5d448b0630f39adf96c7", "Url": "https://api.github.com/repos/SongmanW/SWTP2015", "Date": "2015-07-07T08:04:49Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameterValues(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (compids != null) { for (java.lang.String compid : compids) { tempcomp = action.AddTicketAction.DBManager1.getComponentById(compid); action.AddTicketAction.DBManager1.saveTCRelation(tfeature, tempcomp); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2344/buggy-version/src.action.AddTicketAction.java", "BodyUseAPI": [], "Fixed commit": "21a6d6cb185a6166774e5d448b0630f39adf96c7", "Url": "https://api.github.com/repos/SongmanW/SWTP2015", "Date": "2015-07-07T08:04:49Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameterValues(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (compids != null) { for (java.lang.String compid : compids) { tempcomp = action.AddTicketAction.DBManager1.getComponentById(compid); action.AddTicketAction.DBManager1.saveTCRelation(tbug, tempcomp); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2344/buggy-version/src.action.AddTicketAction.java", "BodyUseAPI": [], "Fixed commit": "21a6d6cb185a6166774e5d448b0630f39adf96c7", "Url": "https://api.github.com/repos/SongmanW/SWTP2015", "Date": "2015-07-07T08:04:49Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (result != null) { java.util.Date lastMod = entry.getModifiedDate(); if (lastMod != null) { result.setModificationDate(lastMod); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6147/buggy-version/modules.rest.src.main.java.org.entrystore.rest.resources.ResourceResource.java", "BodyUseAPI": ["org.restlet.representation.Representation.setModificationDate(java.util.Date)"], "Fixed commit": "8e61335fe8a86157b23d080d401976cc8943f842", "Url": "https://api.github.com/repos/MetaSolutionsAB/entrystore", "Date": "2015-03-20T10:13:57Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (v != null) { android.view.inputmethod.InputMethodManager imm = ((android.view.inputmethod.InputMethodManager) (getSystemService(Context.INPUT_METHOD_SERVICE))); imm.hideSoftInputFromWindow(v.getWindowToken(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7857/buggy-version/src.com.liteon.icampusguardian.ChildInfoUpdateActivity.java", "BodyUseAPI": ["android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(v.getWindowToken(),int)", "android.view.View.getWindowToken()"], "Fixed commit": "2af785bbc2f9abcb38733a6ed6f053fd52e73787", "Url": "https://api.github.com/repos/tel3342311/ICG", "Date": "2017-09-12T06:43:09Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.chromium.chrome.browser.widget.selection.SelectableItemView<com.example.finnur.finnursphotopicker.PickerBitmap>.isChecked()", "java.util.List<com.example.finnur.finnursphotopicker.PickerBitmap>.contains(com.example.finnur.finnursphotopicker.PickerBitmap)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((!(mCategoryView.isMultiSelectAllowed())) && (!selected)) && checked) { super.toggle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7752/buggy-version/app.src.main.java.com.example.finnur.finnursphotopicker.PickerBitmapView.java", "BodyUseAPI": [], "Fixed commit": "273041cc7778d34b3902d7344c3326704c83eb08", "Url": "https://api.github.com/repos/finnurbreki/picker-dialog", "Date": "2017-05-16T13:43:22Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((param.getName()) != null) { object.setLabel(param.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5658/buggy-version/vipr-portal.StorageAPI.src.java.com.emc.sa.api.mapper.CatalogServiceMapper.java", "BodyUseAPI": ["com.emc.vipr.model.catalog.CatalogServiceCommonParam.getName()", "com.emc.storageos.db.client.model.uimodels.CatalogService.setLabel(param.getName())"], "Fixed commit": "23e163afbac1a22b9a851c4529e4020e19b0e2ec", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-04-17T15:30:05Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clearHierarchies) { view.clearStore(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2522/buggy-version/ui.de-lib.src.main.java.org.iplantc.de.admin.desktop.client.ontologies.presenter.OntologiesPresenterImpl.java", "BodyUseAPI": [], "Fixed commit": "e3d32421cd7fb82348b067b8c770ee6537ff0ec1", "Url": "https://api.github.com/repos/ash3rz/DE", "Date": "2016-06-10T23:58:14Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["modelAndView.getModelMap().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((entity.getProperties()) != null) { for (org.broadleafcommerce.openadmin.dto.Property property : entity.getProperties()) { if (property.getName().contains(\".\")) { property.setName(org.broadleafcommerce.openadmin.server.service.JSCompatibilityHelper.encode(property.getName())); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/674/buggy-version/admin.broadleaf-open-admin-platform.src.main.java.org.broadleafcommerce.openadmin.web.compatibility.JSFieldNameCompatibilityInterceptor.java", "BodyUseAPI": ["org.broadleafcommerce.openadmin.dto.Entity.getProperties()"], "Fixed commit": "87c18f8019b25b077c34f329aab282e1eb288601", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2015-06-26T15:03:36Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((req.getPathInfo()) != null) { path = (req.getServletPath()) + (req.getPathInfo()); }else { path = req.getServletPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6489/buggy-version/modules.cpr.src.main.java.org.atmosphere.cpr.AsynchronousProcessor.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getServletPath()", "javax.servlet.http.HttpServletRequest.getPathInfo()", "javax.servlet.http.HttpServletRequest.getServletPath()"], "Fixed commit": "7a07791f237bf02a3b43c410a478c22e56b134c3", "Url": "https://api.github.com/repos/Atmosphere/atmosphere", "Date": "2011-12-19T16:24:18Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.mi.ur.states.PlayState.isQuestionMode) { gameQuestion.drawTasks(spriteBatch, cam); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5536/buggy-version/core.src.de.mi.ur.states.PlayState.java", "BodyUseAPI": [], "Fixed commit": "287769a70015c0ff1884f325f5d6cab618bf0baa", "Url": "https://api.github.com/repos/Maxikilliane/NerdyNumeralChallenge", "Date": "2016-09-24T19:46:25Z"},
{"Line": "=>1180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(world.canHaveAsObject(this))) || (!(world.hasAsObject(this)))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3240/buggy-version/OGP1415-JumpingAlien.src.jumpingalien.model.Characters.java", "BodyUseAPI": [], "Fixed commit": "8746844af1be753d5e791c6658daf77baafc1d0b", "Url": "https://api.github.com/repos/Peter-Lacko/Jumping-Alien", "Date": "2015-04-17T11:50:22Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((HealthTracker.listOfAccounts.getUser(lastNameInput, firstNameInput)) != null) { HealthTracker.currentAccount = HealthTracker.listOfAccounts.getUser(lastNameInput, firstNameInput); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5700/buggy-version/src.HealthTracker.java", "BodyUseAPI": ["UserAccountList.getUser(java.lang.String,java.lang.String)"], "Fixed commit": "8d65b70a3c5dffd92f9440e2e619958cf32a0e13", "Url": "https://api.github.com/repos/GroupIV/Health-Tracker", "Date": "2014-03-31T01:35:11Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(comments.isEmpty())) { comments.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5754/buggy-version/app.src.main.java.kz.voxpopuli.voxapplication.fragments.CommentsListFragment.java", "BodyUseAPI": ["java.util.List<kz.voxpopuli.voxapplication.network.wrappers.comments.article.ArcticleComment>.clear()"], "Fixed commit": "12f9ae09607199cc89a3621724a063b0bc36a906", "Url": "https://api.github.com/repos/alexHimik/VOXPopuli", "Date": "2015-05-12T13:16:34Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JFileChooser.getSelectedFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (file != null) { selectedWalletFilename = file.getAbsolutePath(); org.multibit.action.OpenWalletSubmitAction submitAction = new org.multibit.action.OpenWalletSubmitAction(controller); submitAction.execute(this); }else { selectedWalletFilename = null; fileChooser = null; controller.setActionForwardToParent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2814/buggy-version/multibit.src.org.multibit.viewsystem.swing.view.OpenWalletView.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()"], "Fixed commit": "0646cbfcc686253bbd94a58cc70bc933686d08e3", "Url": "https://api.github.com/repos/Multibit-Legacy/multibit", "Date": "2011-09-11T17:27:07Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.multibit.controller.MultiBitController.getMultiBitService()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((oldMultiBitService != null) && ((oldMultiBitService.getPeerGroup()) != null)) { oldMultiBitService.getPeerGroup().stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2814/buggy-version/multibit.src.org.multibit.action.OpenWalletSubmitAction.java", "BodyUseAPI": ["oldMultiBitService.getPeerGroup().stop()", "org.multibit.network.MultiBitService.getPeerGroup()"], "Fixed commit": "0646cbfcc686253bbd94a58cc70bc933686d08e3", "Url": "https://api.github.com/repos/Multibit-Legacy/multibit", "Date": "2011-09-11T17:27:07Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controller.getModel().getUserPreference(MultiBitModel.TEST_OR_PRODUCTION_NETWORK)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (testOrProduction == null) { testOrProduction = org.multibit.model.MultiBitModel.PRODUCTION_NETWORK_VALUE; controller.getModel().setUserPreference(MultiBitModel.TEST_OR_PRODUCTION_NETWORK, testOrProduction); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2814/buggy-version/multibit.src.org.multibit.action.OpenWalletSubmitAction.java", "BodyUseAPI": [], "Fixed commit": "0646cbfcc686253bbd94a58cc70bc933686d08e3", "Url": "https://api.github.com/repos/Multibit-Legacy/multibit", "Date": "2011-09-11T17:27:07Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (runImmediately) { sb.addWatchedJob(job); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2929/buggy-version/vocloud.src.main.java.cz.ivoa.vocloud.ejb.JobFacade.java", "BodyUseAPI": [], "Fixed commit": "cd70972dba30c5ea08e6b1ccf5a2ee658e2d5eed", "Url": "https://api.github.com/repos/vodev/vocloud", "Date": "2016-04-15T19:28:55Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (allFlights != null) { request.setAttribute(com.smi.travel.controller.AirTicketDetailController.ISBILLSTATUS, allFlights.get(0).getIsBill()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/919/buggy-version/src.java.com.smi.travel.controller.AirTicketDetailController.java", "BodyUseAPI": ["allFlights.get(0).getIsBill()", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,allFlights.get(0).getIsBill())", "java.util.List<com.smi.travel.datalayer.entity.AirticketFlight>.get(int)"], "Fixed commit": "edae4420efe7f30368f5ea3d943fe68f6ab38663", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-12-03T09:15:30Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(\"\".equalsIgnoreCase(addpnrname))) { airticketPnr.setPnr(addpnrname); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/919/buggy-version/src.java.com.smi.travel.controller.AirTicketDetailController.java", "BodyUseAPI": ["com.smi.travel.datalayer.entity.AirticketPnr.setPnr(java.lang.String)"], "Fixed commit": "edae4420efe7f30368f5ea3d943fe68f6ab38663", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-12-03T09:15:30Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!aDocumentIsAlreadyOpen) { addURLCheckBox.setSelected(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4857/buggy-version/src.main.java.com.tagtraum.perf.gcviewer.action.OpenFile.java", "BodyUseAPI": [], "Fixed commit": "d2d65e8f6e6bac2e492d6480cd38f8c381d374ae", "Url": "https://api.github.com/repos/chewiebug/GCViewer", "Date": "2011-11-30T16:35:09Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["type.cppName.lastIndexOf(java.lang.String)", "java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((namespace < 0) && (namespace2 >= 0)) { groupName = groupName.substring((namespace2 + 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5943/buggy-version/src.main.java.org.bytedeco.javacpp.tools.Parser.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "7e12f4bf72d4115a175c7adefa1c67ef1754ed7a", "Url": "https://api.github.com/repos/bytedeco/javacpp", "Date": "2015-06-27T07:25:46Z"},
{"Line": "=>1813", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bytedeco.javacpp.tools.TokenIndexer.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((prevToken == null) || (prevToken.match('}', ','))) && (token.match(Token.IDENTIFIER))) { name = type.javaName = type.cppName = token.value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5943/buggy-version/src.main.java.org.bytedeco.javacpp.tools.Parser.java", "BodyUseAPI": [], "Fixed commit": "7e12f4bf72d4115a175c7adefa1c67ef1754ed7a", "Url": "https://api.github.com/repos/bytedeco/javacpp", "Date": "2015-06-27T07:25:46Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (instream != null) { instream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3760/buggy-version/soapui.src.main.java.com.eviware.soapui.impl.wsdl.submit.transports.http.HttpMethodSupport.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "619ed3305884c1b754736c16d1d794e7bde12fde", "Url": "https://api.github.com/repos/SmartBear/soapui", "Date": "2013-11-21T09:57:17Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (accountMap.containsKey(name)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6486/buggy-version/src.banking.primitive.core.ServerSolution.java", "BodyUseAPI": [], "Fixed commit": "64b363c49f52f0f61f746885a32564391fdbf6fa", "Url": "https://api.github.com/repos/rsofiov/cst316labcr", "Date": "2016-02-23T02:21:37Z"},
{"Line": "=>719", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastPinBLocation) != null) { drawStation(lastPinBLocation, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6521/buggy-version/src.edu.berkeley.cs160.clairetuna.prog3.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2f8f81bd88e840996e77dd1dc5ada5734d88acd6", "Url": "https://api.github.com/repos/ctuna/bart", "Date": "2013-03-24T23:48:21Z"},
{"Line": "=>729", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastPinALocation) != null) { drawStation(lastPinALocation, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6521/buggy-version/src.edu.berkeley.cs160.clairetuna.prog3.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2f8f81bd88e840996e77dd1dc5ada5734d88acd6", "Url": "https://api.github.com/repos/ctuna/bart", "Date": "2013-03-24T23:48:21Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item.isChecked()) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1801/buggy-version/app.src.main.java.com.example.sf.myapplication.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "8e04c8552f8640cf54615d049922e0c4915e2e3a", "Url": "https://api.github.com/repos/krystenia/HelloWorld", "Date": "2017-04-10T09:42:11Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MeetoServer.rclient.getUserIDByUsername(invite.getUsername())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (iduser == (userID)) out.writeObject(false); else out.writeObject(MeetoServer.rclient.inviteToMeeting(iduser, invite.getMeetingID()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4782/buggy-version/TCPServer.java", "BodyUseAPI": ["java.io.ObjectOutputStream.writeObject(MeetoServer.rclient.inviteToMeeting(iduser, invite.getMeetingID()))", "MeetoServer.rclient.inviteToMeeting(int,invite.getMeetingID())"], "Fixed commit": "44e093390f9dbdd6ddf044736c7078d6372cc09d", "Url": "https://api.github.com/repos/ABaptista/meeto", "Date": "2014-10-23T19:48:59Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(rs.next())) { stb.executeUpdate(((((\"INSERT INTO user_meeting (user, meeting) VALUES (\" + iduser) + \", \") + idmeeting) + \");\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4782/buggy-version/RMIServer.java", "BodyUseAPI": [], "Fixed commit": "44e093390f9dbdd6ddf044736c7078d6372cc09d", "Url": "https://api.github.com/repos/ABaptista/meeto", "Date": "2014-10-23T19:48:59Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (bookJsonString == null) { android.content.Intent messageIntent = new android.content.Intent(it.jaschke.alexandria.MainActivity.MESSAGE_EVENT); messageIntent.putExtra(MainActivity.MESSAGE_KEY, getResources().getString(R.string.book_search_error)); android.support.v4.content.LocalBroadcastManager.getInstance(getApplicationContext()).sendBroadcast(messageIntent); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1836/buggy-version/app.src.main.java.it.jaschke.alexandria.services.BookService.java", "BodyUseAPI": [], "Fixed commit": "3f61b864899b230682fbb2a6642efe4b2448de26", "Url": "https://api.github.com/repos/mtpayne/alexandria", "Date": "2015-12-06T20:58:34Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (type != null) { if (type.equals(\"String\")) code += ((\"\\t\\t\" + \"freeStr(\") + var) + \");\\n\"; else if (type.equals(\"Iterable\")) code += ((\"\\t\\t\" + \"freeIter(\") + var) + \");\\n\"; else code += ((\"\\t\\t\" + \"x3free(\") + var) + \");\\n\"; }else code += ((\"\\t\\t\" + \"x3free(\") + var) + \");\\n\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7161/buggy-version/src.Helper.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "f69718a4d07f697fbedf3c07a8c282d2d240efea", "Url": "https://api.github.com/repos/lalalah/compilers-PS5", "Date": "2013-11-22T04:19:07Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((org.opendatakit.tables.activities.IOdkTablesActivity) (getContext())).getUrlBaseLocation(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((hasPageFrameworkFinishedLoading()) || (!(baseUrl.equals(getLoadPageUrl())))) { resetLoadPageStatus(baseUrl); log.i(org.opendatakit.tables.views.webkits.OdkTablesWebView.t, (\"reloadPage: full reload: \" + baseUrl)); if ((java.lang.Thread.currentThread()) != (android.os.Looper.getMainLooper().getThread())) { post(new java.lang.Runnable() { public void run() { loadUrl(baseUrl); } }); }else { loadUrl(baseUrl); } }else { log.w(org.opendatakit.tables.views.webkits.OdkTablesWebView.t, \"reloadPage: framework in process of loading -- ignoring request!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/352/buggy-version/tables_app.src.main.java.org.opendatakit.tables.views.webkits.OdkTablesWebView.java", "BodyUseAPI": ["org.opendatakit.tables.views.webkits.OdkTablesWebView.loadUrl(java.lang.String)", "org.opendatakit.tables.views.webkits.OdkTablesWebView.post(java.lang.Runnable)", "org.opendatakit.tables.views.webkits.OdkTablesWebView.2.loadUrl(java.lang.String)", "org.opendatakit.tables.views.webkits.OdkTablesWebView.i(java.lang.String,java.lang.String)", "org.opendatakit.tables.views.webkits.OdkTablesWebView.resetLoadPageStatus(java.lang.String)"], "Fixed commit": "c7a735d8926c372ac2a866632f50c4df3c4ce49f", "Url": "https://api.github.com/repos/linl33/tables", "Date": "2016-04-08T18:16:33Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getDeclaredConstructors()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((constructors.length) != 1) { throw new java.lang.IllegalArgumentException((((delegate) + \" must have only one constructor, this had \") + (constructors.length))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8933/buggy-version/src.main.java.com.diffplug.gradle.eclipserunner.osgiembed.OsgiExecable.java", "BodyUseAPI": [], "Fixed commit": "a65309a28f692a6d761568fc55dc88b558e48596", "Url": "https://api.github.com/repos/diffplug/goomph", "Date": "2016-06-27T23:58:58Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getDeclaredConstructors()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((constructors[0].getParameterCount()) != 1) { throw new java.lang.IllegalArgumentException((((delegate) + \"'s constructor must take one argument, this took \") + (constructors[0].getParameterCount()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8933/buggy-version/src.main.java.com.diffplug.gradle.eclipserunner.osgiembed.OsgiExecable.java", "BodyUseAPI": ["java.lang.reflect.Constructor<?>.getParameterCount()"], "Fixed commit": "a65309a28f692a6d761568fc55dc88b558e48596", "Url": "https://api.github.com/repos/diffplug/goomph", "Date": "2016-06-27T23:58:58Z"},
{"Line": "=>567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (request.secure()) { return \"https://\" + (request.host()); }else { return \"http://\" + (request.host()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8475/buggy-version/ui.app.util.Util.java", "BodyUseAPI": ["play.mvc.Http.Request.host()", "play.mvc.Http.Request.host()"], "Fixed commit": "3901fa57ddf8914d8d43e50dc64df7455c5c2f93", "Url": "https://api.github.com/repos/aegif/NemakiWare", "Date": "2015-10-01T07:23:30Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.struts2.ServletActionContext.getServletContext()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (null != sc) { context = sc.getContextPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7254/buggy-version/struts2.view.src.main.java.org.beangle.struts2.view.bean.DefaultActionUriRender.java", "BodyUseAPI": ["javax.servlet.ServletContext.getContextPath()"], "Fixed commit": "cc716b8883c87d68b9e1a0ea1beb7891e53b7e3f", "Url": "https://api.github.com/repos/beangle/library", "Date": "2013-12-13T09:58:10Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (expressionValue.equals(\"ambiguous\")) { java.lang.System.out.println((\"odd expression value for row=\" + (this))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7427/buggy-version/data-model-solr.src.main.java.org.mousephenotype.cda.solr.web.dto.AnatomyPageTableRow.java", "BodyUseAPI": [], "Fixed commit": "a19798d75711ad5888a92954ac5e78c5b2f3c708", "Url": "https://api.github.com/repos/mpi2/PhenotypeData", "Date": "2016-07-12T15:04:59Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ReceiverThread.deserialize(byte[],java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(isReachable(msg))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8985/buggy-version/src.ReceiverThread.java", "BodyUseAPI": [], "Fixed commit": "2c3c03c9991be27df6c4a8f06afbd281229c84e3", "Url": "https://api.github.com/repos/winasforcepta/UDPMultiCast", "Date": "2016-05-03T08:46:43Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((globals.selectedRoute) != position) { globals.selectedRoute = position; globals.selectedPlace = 0; updatePlaceSelector(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6977/buggy-version/src.net.m_kawato.tabletpos.OrderInputHelper.java", "BodyUseAPI": [], "Fixed commit": "3f0a3bfa1dc2d8edb5cd016e009e482cd20e0fe1", "Url": "https://api.github.com/repos/m-kawato/TabletPOSApp", "Date": "2013-09-06T12:49:21Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (repositoryName == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2193/buggy-version/src.main.java.com.searchcode.app.dao.Repo.java", "BodyUseAPI": [], "Fixed commit": "324d01720fbdd90d0bb97f03fe2df47793c1a016", "Url": "https://api.github.com/repos/boyter/searchcode-server", "Date": "2017-01-23T22:00:57Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (arguments == null) { throw new java.lang.IllegalArgumentException(\"One argument is expected\"); }else if ((arguments.size()) != 2) { throw new java.lang.IllegalArgumentException(((\"Two arguments were expected, \" + (arguments.size())) + \" were supplied\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/559/buggy-version/core-rules.src.main.java.org.hisp.dhis.rules.functions.RuleFunctionAddDays.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()"], "Fixed commit": "eccae87c576bdf9b2bd1c7664bd1853e04378800", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-sdk", "Date": "2017-12-21T18:13:35Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((com.android.pena.david.bakingapp.ui.RecipeActivity) (getActivity())).getSupportActionBar()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (tool != null) { tool.hide(); getActivity().getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/361/buggy-version/app.src.main.java.com.android.pena.david.bakingapp.ui.StepFragment.java", "BodyUseAPI": ["android.support.v7.app.ActionBar.hide()"], "Fixed commit": "671ad87e526c057015b75561ec27f29b43187757", "Url": "https://api.github.com/repos/davidpn11/BakingApp", "Date": "2017-06-23T18:33:42Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((googleEventId) == null) { return calendear.util.Task.EMPTY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1238/buggy-version/src.calendear.util.Task.java", "BodyUseAPI": [], "Fixed commit": "f18a84c4b670c5e6970d676f336ca11d69fa6c77", "Url": "https://api.github.com/repos/cs2103jan2016-w15-1j/Calendear", "Date": "2016-03-30T11:11:35Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataCollection.GestureModelViewer.isLinux()) { java.lang.Runtime.getRuntime().exec((((\"xdg-open \" + (dir)) + (names[selectedItem])) + \".seq\")); }else { java.lang.Runtime.getRuntime().exec((((\"open -t \" + (dir)) + (names[selectedItem])) + \".seq\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5404/buggy-version/src.dataCollection.GestureModelViewer.java", "BodyUseAPI": [], "Fixed commit": "00f377dce349c219fe9d0328e00192752b36935d", "Url": "https://api.github.com/repos/TengfeiWang/GermanFingerspellingRecognizer", "Date": "2015-07-06T09:39:39Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataCollection.GestureModelViewer.isLinux()) { java.lang.Runtime.getRuntime().exec((((\"xdg-open \" + (dir)) + (names[selectedItem])) + \".hmm\")); }else { java.lang.Runtime.getRuntime().exec((((\"open -t \" + (dir)) + (names[selectedItem])) + \".hmm\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5404/buggy-version/src.dataCollection.GestureModelViewer.java", "BodyUseAPI": [], "Fixed commit": "00f377dce349c219fe9d0328e00192752b36935d", "Url": "https://api.github.com/repos/TengfeiWang/GermanFingerspellingRecognizer", "Date": "2015-07-06T09:39:39Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataCollection.GestureModelViewer.isLinux()) { java.lang.Runtime.getRuntime().exec(((\"nautilus \" + (workDir)) + \"/logs\")); }else { java.lang.Runtime.getRuntime().exec(((\"open \" + (workDir)) + \"/logs\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5404/buggy-version/src.userInterface.MainGUI.java", "BodyUseAPI": [], "Fixed commit": "00f377dce349c219fe9d0328e00192752b36935d", "Url": "https://api.github.com/repos/TengfeiWang/GermanFingerspellingRecognizer", "Date": "2015-07-06T09:39:39Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(event.isCancelled())) { possibleTarget.entityInteract(player, message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2140/buggy-version/src.main.java.net.glowstone.net.handler.play.player.InteractEntityHandler.java", "BodyUseAPI": [], "Fixed commit": "bebc783c8bed741986c6da548044f12e03cd1b2a", "Url": "https://api.github.com/repos/Aaron1011/Glowstone", "Date": "2015-01-11T23:24:33Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getWorld().getEntityManager().getEntity(message.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (possibleTarget != null) { possibleTarget.entityInteract(player, message); }else { GlowServer.logger.info(((\"Player \" + (player.getName())) + \" tried to attack an entity that does not exist\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2140/buggy-version/src.main.java.net.glowstone.net.handler.play.player.InteractEntityHandler.java", "BodyUseAPI": ["net.glowstone.entity.GlowEntity.entityInteract(net.glowstone.entity.GlowPlayer,net.glowstone.net.message.play.player.InteractEntityMessage)"], "Fixed commit": "bebc783c8bed741986c6da548044f12e03cd1b2a", "Url": "https://api.github.com/repos/Aaron1011/Glowstone", "Date": "2015-01-11T23:24:33Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((featuresSetJComboBoxModel.getSize()) > selected) { featuresSetJComboBox.setSelectedIndex(selected); if (selected != 0) { cfd = presetCFDs.get((selected - 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/154/buggy-version/src.edu.drexel.psal.jstylo.GUI.GUIMain.java", "BodyUseAPI": ["java.util.List<edu.drexel.psal.jstylo.generics.CumulativeFeatureDriver>.get(int)", "javax.swing.JComboBox.setSelectedIndex(int)"], "Fixed commit": "8452e2307a64be37e818dc3e444092a9ee33ef85", "Url": "https://api.github.com/repos/psal/jstylo", "Date": "2014-05-20T13:48:44Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (eIndex > bIndex) { tokens.add(new pl.edu.icm.cermine.metadata.model.DocumentAffiliation.AffiliationToken(bIndex, eIndex, tag, rawText.substring(bIndex, eIndex))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6467/buggy-version/cermine-impl.src.main.java.pl.edu.icm.cermine.metadata.model.DocumentAffiliation.java", "BodyUseAPI": ["java.util.List<pl.edu.icm.cermine.metadata.model.DocumentAffiliation.AffiliationToken>.add(pl.edu.icm.cermine.metadata.model.DocumentAffiliation.AffiliationToken)", "java.lang.String.substring(int,int)"], "Fixed commit": "cd697e391814b581dc3575ad8df7651843f8872b", "Url": "https://api.github.com/repos/CeON/CERMINE", "Date": "2014-08-25T10:29:40Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<pl.edu.icm.cermine.metadata.model.DocumentAffiliation.AffiliationToken>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (bIndex > (first.startIndex)) { tokens.add(new pl.edu.icm.cermine.metadata.model.DocumentAffiliation.AffiliationToken(first.startIndex, bIndex, first.getTag(), rawText.substring(first.startIndex, bIndex))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6467/buggy-version/cermine-impl.src.main.java.pl.edu.icm.cermine.metadata.model.DocumentAffiliation.java", "BodyUseAPI": ["pl.edu.icm.cermine.metadata.model.DocumentAffiliation.AffiliationToken.getTag()", "java.lang.String.substring(int,int)", "java.util.List<pl.edu.icm.cermine.metadata.model.DocumentAffiliation.AffiliationToken>.add(pl.edu.icm.cermine.metadata.model.DocumentAffiliation.AffiliationToken)"], "Fixed commit": "cd697e391814b581dc3575ad8df7651843f8872b", "Url": "https://api.github.com/repos/CeON/CERMINE", "Date": "2014-08-25T10:29:40Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<pl.edu.icm.cermine.metadata.model.DocumentAffiliation.AffiliationToken>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((last.endIndex) > eIndex) { tokens.add(new pl.edu.icm.cermine.metadata.model.DocumentAffiliation.AffiliationToken(eIndex, last.endIndex, last.getTag(), rawText.substring(eIndex, last.endIndex))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6467/buggy-version/cermine-impl.src.main.java.pl.edu.icm.cermine.metadata.model.DocumentAffiliation.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.util.List<pl.edu.icm.cermine.metadata.model.DocumentAffiliation.AffiliationToken>.add(pl.edu.icm.cermine.metadata.model.DocumentAffiliation.AffiliationToken)", "pl.edu.icm.cermine.metadata.model.DocumentAffiliation.AffiliationToken.getTag()"], "Fixed commit": "cd697e391814b581dc3575ad8df7651843f8872b", "Url": "https://api.github.com/repos/CeON/CERMINE", "Date": "2014-08-25T10:29:40Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (instanceFactory == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6019/buggy-version/main.src.mockit.internal.state.MockedTypeCascade.java", "BodyUseAPI": [], "Fixed commit": "577b334655de5b41ce5f11333827f31f91f18f96", "Url": "https://api.github.com/repos/jmockit/jmockit1", "Date": "2014-10-18T01:47:37Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i < ((keySequence.length()) - 1)) if ((keySequence.charAt((i + 1))) == '\\\\') { result += \"\\\\\"; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4835/buggy-version/ManalithBot.src.main.java.org.manalith.ircbot.plugin.keyseqconv.DubeolAutomataEngine.java", "BodyUseAPI": ["java.lang.String.charAt(int)"], "Fixed commit": "369a606ea62b7cebec45ed6148e2fdeb6ec5d95c", "Url": "https://api.github.com/repos/mmx900/ManalithBot", "Date": "2012-06-10T18:17:04Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i < ((keySequence.length()) - 1)) if ((keySequence.charAt((i + 1))) == '\\\\') { result += \"\\\\\"; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4835/buggy-version/ManalithBot.src.main.java.org.manalith.ircbot.plugin.keyseqconv.SebeolAutomataEngine.java", "BodyUseAPI": ["java.lang.String.charAt(int)"], "Fixed commit": "369a606ea62b7cebec45ed6148e2fdeb6ec5d95c", "Url": "https://api.github.com/repos/mmx900/ManalithBot", "Date": "2012-06-10T18:17:04Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((motionEvent.getAction()) == (android.view.MotionEvent.ACTION_DOWN)) { android.util.Log.d(\"TouchTest\", \"Touch down\"); }else if ((motionEvent.getAction()) == (android.view.MotionEvent.ACTION_UP)) { android.util.Log.d(\"TouchTest\", \"Touch up\"); startActivity(new android.content.Intent(getBaseContext(), com.slsw.fiarworks.CameraActivity.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3571/buggy-version/src.com.slsw.fiarworks.MainActivity.java", "BodyUseAPI": ["android.view.MotionEvent.getAction()"], "Fixed commit": "df5bd602fa14a6c8cb32c9fad2b586a2e34928b2", "Url": "https://api.github.com/repos/silverdev/fiARworks", "Date": "2013-10-23T02:46:39Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (commandTextField.getStyleClass().contains(seedu.task.ui.CommandBox.ERROR_STYLE_CLASS)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4811/buggy-version/src.main.java.seedu.task.ui.CommandBox.java", "BodyUseAPI": [], "Fixed commit": "939e35e4815cb369edbce1fc43150050fa1ab5b8", "Url": "https://api.github.com/repos/CS2103JAN2017-T11-B4/main", "Date": "2017-04-06T03:52:05Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.elasticsearch.index.store.IndexStore.shardIndexLocations(org.elasticsearch.index.store.fs.FsDirectoryService)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (locations[i].toString().startsWith(\"data\")) { throw new java.lang.RuntimeException(\"LOCATION SUCKS\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4379/buggy-version/src.main.java.org.elasticsearch.index.store.fs.FsDirectoryService.java", "BodyUseAPI": [], "Fixed commit": "734aec5da3351e2ea116746dc28eefbeb2b4cc78", "Url": "https://api.github.com/repos/rjernst/elasticsearch", "Date": "2015-02-28T10:00:53Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((se.chalmers.roguelike.Engine.gameState) == (se.chalmers.roguelike.Engine.GameState.OVERWORLD)) { overworldSys.unregister(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4034/buggy-version/se.chalmers.roguelike.Engine.java", "BodyUseAPI": [], "Fixed commit": "34963234853d7215dab3be6c68bfe40aabce4cd8", "Url": "https://api.github.com/repos/ravertass/KandidatRoguelike", "Date": "2014-03-28T19:23:40Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parts.length) > 1) return ((\"<%= \" + (parts[0])) + \" %>\\n\") + (parts[1]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7294/buggy-version/src.main.java.com.cadrlife.jhaml.internal.Helper.java", "BodyUseAPI": [], "Fixed commit": "19d28a30dd0ca7059ff6f3ba636e3b6ab4fa4b69", "Url": "https://api.github.com/repos/raymyers/JHaml", "Date": "2013-04-24T04:32:45Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parts.length) > 2) throw new java.lang.RuntimeException(\"Have bug!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7294/buggy-version/src.main.java.com.cadrlife.jhaml.internal.Helper.java", "BodyUseAPI": [], "Fixed commit": "19d28a30dd0ca7059ff6f3ba636e3b6ab4fa4b69", "Url": "https://api.github.com/repos/raymyers/JHaml", "Date": "2013-04-24T04:32:45Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((speed) < 0) { speed = speedEngineBrake(((long) (((lastComputeTime) - currentComputeTime) + ((speed) / (com.pizz.wifibotcontroller.TreatmentGyroscop.COEF_ENGINE_BRAKE))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8679/buggy-version/app.src.main.java.com.pizz.wifibotcontroller.TreatmentGyroscop.java", "BodyUseAPI": ["com.pizz.wifibotcontroller.TreatmentGyroscop.speedEngineBrake(((long) (((lastComputeTime) - currentComputeTime) + ((speed) / (com.pizz.wifibotcontroller.TreatmentGyroscop.COEF_ENGINE_BRAKE)))))"], "Fixed commit": "d0be08963ebb8152327c042d97fe3c1512bf3758", "Url": "https://api.github.com/repos/Notex685/WifiBot-Controller", "Date": "2017-02-21T09:52:56Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.jdbc.core.JdbcTemplate.query(java.lang.String,java.lang.Object[],org.springframework.jdbc.core.BeanPropertyRowMapper)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((lc.size()) > 0) { company = lc.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/587/buggy-version/ExcilysComputerDatabaseMaven-persistence.src.main.java.com.excilys.project.computerdatabase.persistence.CompanyDAO.java", "BodyUseAPI": ["java.util.List<com.excilys.project.computerdatabase.domain.Company>.get(int)"], "Fixed commit": "1f2453798101b5d89e5d3192440f58d270b4558e", "Url": "https://api.github.com/repos/jasonconard/ExcilysComputerDatabaseProject", "Date": "2014-04-17T08:44:31Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { cover3.setTransitionName(((\"item\" + position) + \"cover3\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1962/buggy-version/app.src.main.java.com.bookstore.booklist.BookListGridListViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "92c31ef4af18105f1dd36c357672e4e4f62ad845", "Url": "https://api.github.com/repos/chenshengfa1990/BookStore", "Date": "2016-04-24T21:05:46Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { cover1.setTransitionName(((\"item\" + position) + \"cover1\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1962/buggy-version/app.src.main.java.com.bookstore.booklist.BookListGridListViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "92c31ef4af18105f1dd36c357672e4e4f62ad845", "Url": "https://api.github.com/repos/chenshengfa1990/BookStore", "Date": "2016-04-24T21:05:46Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { cover2.setTransitionName(((\"item\" + position) + \"cover2\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1962/buggy-version/app.src.main.java.com.bookstore.booklist.BookListGridListViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "92c31ef4af18105f1dd36c357672e4e4f62ad845", "Url": "https://api.github.com/repos/chenshengfa1990/BookStore", "Date": "2016-04-24T21:05:46Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { book_cover.setTransitionName((\"image\" + position)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1962/buggy-version/app.src.main.java.com.bookstore.booklist.CategoryBookGridViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "92c31ef4af18105f1dd36c357672e4e4f62ad845", "Url": "https://api.github.com/repos/chenshengfa1990/BookStore", "Date": "2016-04-24T21:05:46Z"},
{"Line": "=>1596", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loggedUsername.isEmpty()) { checkAuthorized = manager.isRoleAuthorized(APIConstants.ANONYMOUS_ROLE, path, ActionConstants.GET); }else if (tenantId != loggedInUserTenantDomain) { providerId = org.wso2.carbon.apimgt.impl.APIUtil.replaceEmailDomainBack(providerId); java.lang.String[] nameParts = providerId.split(\"@\"); java.lang.String provideNameWithoutDomain = nameParts[0]; checkAuthorized = manager.isUserAuthorized(provideNameWithoutDomain, path, ActionConstants.GET); }else { checkAuthorized = manager.isUserAuthorized(userNameWithoutDomain, path, ActionConstants.GET); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1591/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.APIConsumerImpl.java", "BodyUseAPI": [], "Fixed commit": "c5acb2eca0d5990e6b43a4dee64085291867b0ef", "Url": "https://api.github.com/repos/harsha89/carbon-apimgt", "Date": "2016-07-10T14:40:11Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (str.equals(\"DataPing\")) { xbeeInterface.write((((((((((((((((((((\"FireScout: Sensor \" + (sensorManager.ranges[0])) + \",\") + (sensorManager.ranges[1])) + \",\") + (sensorManager.ranges[2])) + \",\") + (sensorManager.ranges[3])) + \",\") + (sensorManager.ranges[4])) + \",\") + (sensorManager.ranges[5])) + \",\") + (sensorManager.ranges[6])) + \",\") + (sensorManager.ranges[7])) + \",\") + (sensorManager.ranges[8])) + \",\") + (sensorManager.ranges[9]))); }else if (str.contains(\"TPID\")) { java.lang.String[] tempArray = str.substring(5).split(\",\"); util.Param.kP_t = java.lang.Double.parseDouble(tempArray[0]); util.Param.kI_t = java.lang.Double.parseDouble(tempArray[1]); util.Param.kD_t = java.lang.Double.parseDouble(tempArray[2]); xbeeInterface.write((((((\"Reporting new values TPID: \" + (util.Param.kP_t)) + \" \") + (util.Param.kI_t)) + \" \") + (util.Param.kD_t))); logger.writeDebug((((((\"Reporting new values TPID: \" + (util.Param.kP_t)) + \" \") + (util.Param.kI_t)) + \" \") + (util.Param.kD_t))); }else if (str.contains(\"PPID\")) { java.lang.String[] tempArray = str.substring(5).split(\",\"); util.Param.kP_p = java.lang.Double.parseDouble(tempArray[0]); util.Param.kI_p = java.lang.Double.parseDouble(tempArray[1]); util.Param.kD_p = java.lang.Double.parseDouble(tempArray[2]); xbeeInterface.write((((((\"Reporting new values PPID: \" + (util.Param.kP_p)) + \" \") + (util.Param.kI_p)) + \" \") + (util.Param.kD_p))); logger.writeDebug((((((\"Reporting new values PPID: \" + (util.Param.kP_p)) + \" \") + (util.Param.kI_p)) + \" \") + (util.Param.kD_p))); }else if (str.contains(\"RPID\")) { java.lang.String[] tempArray = str.substring(5).split(\",\"); util.Param.kP_r = java.lang.Double.parseDouble(tempArray[0]); util.Param.kI_r = java.lang.Double.parseDouble(tempArray[1]); util.Param.kD_r = java.lang.Double.parseDouble(tempArray[2]); xbeeInterface.write((((((\"Reporting new values RPID: \" + (util.Param.kP_r)) + \" \") + (util.Param.kI_r)) + \" \") + (util.Param.kD_r))); logger.writeDebug((((((\"Reporting new values RPID: \" + (util.Param.kP_r)) + \" \") + (util.Param.kI_r)) + \" \") + (util.Param.kD_r))); }else if (str.contains(\"YPID\")) { java.lang.String[] tempArray = str.substring(5).split(\",\"); util.Param.kP_y = java.lang.Double.parseDouble(tempArray[0]); util.Param.kI_y = java.lang.Double.parseDouble(tempArray[1]); util.Param.kD_y = java.lang.Double.parseDouble(tempArray[2]); xbeeInterface.write((((((\"Reporting new values YPID: \" + (util.Param.kP_y)) + \" \") + (util.Param.kI_y)) + \" \") + (util.Param.kD_y))); logger.writeDebug((((((\"Reporting new values YPID: \" + (util.Param.kP_y)) + \" \") + (util.Param.kI_y)) + \" \") + (util.Param.kD_y))); }else if (str.contains(\"DAL\")) { pilotController.setDesAltitude(java.lang.Double.parseDouble(str.substring(4))); }else if (str.contains(\"DDF\")) { pilotController.setDesDistFront(java.lang.Double.parseDouble(str.substring(4))); xbeeInterface.write((\"GOT A NEW DDF \" + (java.lang.Double.parseDouble(str.substring(4))))); }else if (str.contains(\"DDL\")) { pilotController.setDesDistLeft(java.lang.Double.parseDouble(str.substring(4))); }else if (str.contains(\"DDR\")) { pilotController.setDesDistRight(java.lang.Double.parseDouble(str.substring(4))); }else if (str.contains(\"DAN\")) { pilotController.setDesAngle(java.lang.Double.parseDouble(str.substring(4))); }else { xbeeInterface.write((\"FireScout: Error parsing from XBee. \" + str)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4342/buggy-version/src.FireScout.FireScout.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.contains(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.split(java.lang.String)", "communication.PilotController.setDesDistLeft(double)", "java.lang.String.substring(int)", "communication.PilotController.setDesDistRight(double)", "java.lang.String.split(java.lang.String)", "java.lang.String.substring(int)", "communication.PilotController.setDesAngle(double)", "java.lang.String.substring(int)", "communication.PilotController.setDesDistFront(double)", "java.lang.String.split(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "communication.XbeeInterface.write(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)", "communication.XbeeInterface.write(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.String.substring(int)", "communication.PilotController.setDesAltitude(double)", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.contains(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.contains(java.lang.String)", "java.lang.String.substring(int)", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "1314d67f03f99b6ccd1dc873525539f12f27bbed", "Url": "https://api.github.com/repos/GabrielBegun/SeniorDesign", "Date": "2014-04-16T03:14:54Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mytorrent.gui.CommandParser.run()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((userinput.length) < 3) { java.lang.System.out.println(\"Wrong parameters\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3917/buggy-version/src.main.java.mytorrent.MyTorrent.java", "BodyUseAPI": [], "Fixed commit": "0a30de1fc42bf7c52c3b02bc9aef8d1981ee80b1", "Url": "https://api.github.com/repos/bfeng/myTorrent", "Date": "2012-10-13T09:48:07Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<net.jxta.peergroup.PeerGroup, net.jxta.module.IModuleManager<? extends java.lang.Module>>.get(net.jxta.peergroup.PeerGroup)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (manager == null) return ((java.lang.ClassLoader) (net.jxta.peergroup.core.JxtaLoaderModuleManager.root.getLoader()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2482/buggy-version/src.main.java.net.jxta.peergroup.core.JxtaLoaderModuleManager.java", "BodyUseAPI": [], "Fixed commit": "38f1c110d252233009f7e3bb2c3275090eb0c876", "Url": "https://api.github.com/repos/chaupal/jxse", "Date": "2014-12-05T08:52:48Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) != null) { return value.name(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/326/buggy-version/flexodesktop.model.flexoutils.src.main.java.org.openflexo.antar.expr.Constant.java", "BodyUseAPI": [], "Fixed commit": "9b09c9a9d796af171a3c9e678c8f793d2761b4be", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2013-02-06T17:05:53Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getSession().getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (valueTypes != null) this.datumConditionValueTypeLookup.addAll(valueTypes);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/9218/buggy-version/software.cananolab-webapp.src.gov.nih.nci.cananolab.restful.view.edit.SimpleCharacterizationEditBean.java", "BodyUseAPI": ["java.util.List<java.lang.String>.addAll(java.util.SortedSet<java.lang.String>)"], "Fixed commit": "67b3e822361d96726a9a29b6d13060b1a440dfc1", "Url": "https://api.github.com/repos/CBIIT/cananolab", "Date": "2014-09-15T13:31:04Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((msr.length) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8646/buggy-version/BluetoothLeGatt.Application.src.main.java.com.example.android.bluetoothlegatt.GraphFragment.java", "BodyUseAPI": [], "Fixed commit": "8448b6edd83d7af9f384e8f2fdc184994d9426aa", "Url": "https://api.github.com/repos/martijnroo/fitness-front-end", "Date": "2015-05-05T21:22:03Z"},
{"Line": "=>720", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.ByteBuffer.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (next == '\\r') { parseState = io.undertow.server.protocol.http.HttpRequestParser.AWAIT_DATA_END; }else if (next == '\\n') { state.state = ParseState.PARSE_COMPLETE; return; }else { state.state = ParseState.HEADER; state.parseState = 0; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/749/buggy-version/core.src.main.java.io.undertow.server.protocol.http.HttpRequestParser.java", "BodyUseAPI": [], "Fixed commit": "b41f3560a8d45e22430ba9fa3ff7fccc9642981e", "Url": "https://api.github.com/repos/darranl/undertow", "Date": "2014-09-25T03:01:35Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (googleApiClient.isConnected()) { onGooglePlayServicesDisconnecting(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3006/buggy-version/rxlocation.src.main.java.net.kjulio.rxlocation.BaseHelper.java", "BodyUseAPI": [], "Fixed commit": "3b626effcf3289c315b79b18822198bbf52c8cf4", "Url": "https://api.github.com/repos/julioromano/RxLocation", "Date": "2016-10-24T05:46:53Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.User.find.where().eq(\"username\", username).findUnique()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (user == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2340/buggy-version/java-play.todo.app.models.User.java", "BodyUseAPI": [], "Fixed commit": "25d6e70514292317b4846fab7dd6ac10fb7e87bd", "Url": "https://api.github.com/repos/ksoichiro/todo", "Date": "2015-03-24T15:58:58Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["okhttp3.Cookie.parse(okhttp3.HttpUrl,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (itemCookie != null) { cookieList.add(itemCookie); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6077/buggy-version/boot.src.main.java.com.okandroid.boot.data.CookiesManager.java", "BodyUseAPI": ["java.util.List<okhttp3.Cookie>.add(okhttp3.Cookie)"], "Fixed commit": "911954d11e9ef94c0ead324630e85ad54f830a3c", "Url": "https://api.github.com/repos/idonans/okandroid-boot", "Date": "2017-09-01T11:20:35Z"},
{"Line": "=>873", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portlet.expando.service.impl.ExpandoValueLocalServiceImpl.findByRowId(value.getRowId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (values.isEmpty()) { com.liferay.expando.kernel.model.ExpandoRow row = expandoRowPersistence.fetchByPrimaryKey(value.getRowId()); if (row != null) { expandoRowPersistence.remove(row); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1432/buggy-version/portal-impl.src.com.liferay.portlet.expando.service.impl.ExpandoValueLocalServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "c5a455582b18536c27723a4d7db9e10f2a8f3529", "Url": "https://api.github.com/repos/cgoncas/liferay-portal", "Date": "2016-11-25T09:04:16Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(org.walkmod.javalang.compiler.symbols.AnonymousClassUtil.isAnonymousClass(n))) || (org.walkmod.javalang.compiler.symbols.AnonymousClassUtil.needsSymbolData(n))) { org.walkmod.javalang.compiler.symbols.SymbolType st = ((org.walkmod.javalang.compiler.symbols.SymbolType) (n.getType().getSymbolData())); resolveConstructor(n, n.getArgs(), st, arg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/385/buggy-version/src.main.java.org.walkmod.javalang.compiler.types.TypeVisitorAdapter.java", "BodyUseAPI": ["org.walkmod.javalang.compiler.types.TypeVisitorAdapter<A>.resolveConstructor(org.walkmod.javalang.ast.expr.ObjectCreationExpr,n.getArgs(),org.walkmod.javalang.compiler.symbols.SymbolType,A)", "n.getType().getSymbolData()", "org.walkmod.javalang.ast.expr.ObjectCreationExpr.getType()", "org.walkmod.javalang.ast.expr.ObjectCreationExpr.getArgs()"], "Fixed commit": "d99d46aaaf8c9e2bc6330bafc378db1af068697f", "Url": "https://api.github.com/repos/cal101/javalang-compiler", "Date": "2017-06-01T07:09:23Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chapterIndex < 0) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/9126/buggy-version/src.clientserver.ClientRunnable.java", "BodyUseAPI": [], "Fixed commit": "daebe5f95ead570eacb6fa32b1e696e65c73b2bb", "Url": "https://api.github.com/repos/drewcforbes/jjdtm-phase2", "Date": "2016-11-26T19:38:04Z"},
{"Line": "=>496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == position) selected(tv); else notSelected(tv);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4706/buggy-version/app.src.main.java.com.astuetz.PagerSlidingTabStrip.java", "BodyUseAPI": [], "Fixed commit": "cba6653729a0ef08bda8cc5b2582c4cb78f13577", "Url": "https://api.github.com/repos/gonativeio/gonative-android", "Date": "2015-01-02T23:15:23Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (javascript == null) javascript = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4706/buggy-version/app.src.main.java.io.gonative.android.TabManager.java", "BodyUseAPI": [], "Fixed commit": "cba6653729a0ef08bda8cc5b2582c4cb78f13577", "Url": "https://api.github.com/repos/gonativeio/gonative-android", "Date": "2015-01-02T23:15:23Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (entryJs == null) entryJs = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4706/buggy-version/app.src.main.java.io.gonative.android.TabManager.java", "BodyUseAPI": [], "Fixed commit": "cba6653729a0ef08bda8cc5b2582c4cb78f13577", "Url": "https://api.github.com/repos/gonativeio/gonative-android", "Date": "2015-01-02T23:15:23Z"},
{"Line": "=>617", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.inovex.zabbixmobile.util.JsonObjectReader.getCurrentName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (propName.equals(Application.COLUMN_HOSTID)) { com.inovex.zabbixmobile.model.Host h = databaseHelper.getHostById(java.lang.Long.parseLong(application.getText())); if (h != null) app.setHost(h); }else if (propName.equals(\"items\")) { items = importItemsFromStream(application.getJsonArrayOrObjectReader(), 0, false); }else if (propName.equals(\"hosts\")) { java.util.List<com.inovex.zabbixmobile.model.Host> hosts = importHostsFromStream(application.getJsonArrayOrObjectReader(), null); if ((hosts.size()) > 0) { com.inovex.zabbixmobile.model.Host h = hosts.get(0); if (h != null) app.setHost(h); } if ((hosts.size()) > 1) { android.util.Log.w(com.inovex.zabbixmobile.data.ZabbixRemoteAPI.TAG, (((\"More than one host found for application \" + (app.getId())) + \": \") + (app.getName()))); } }else { application.nextProperty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1271/buggy-version/src.com.inovex.zabbixmobile.data.ZabbixRemoteAPI.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "c7bafd9680700d7c10b705d7d9894af977ad5e1f", "Url": "https://api.github.com/repos/inovex/zax", "Date": "2013-07-10T07:21:35Z"},
{"Line": "=>638", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.inovex.zabbixmobile.model.Host>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (h != null) app.setHost(h);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1271/buggy-version/src.com.inovex.zabbixmobile.data.ZabbixRemoteAPI.java", "BodyUseAPI": ["com.inovex.zabbixmobile.model.Application.setHost(com.inovex.zabbixmobile.model.Host)"], "Fixed commit": "c7bafd9680700d7c10b705d7d9894af977ad5e1f", "Url": "https://api.github.com/repos/inovex/zax", "Date": "2013-07-10T07:21:35Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mHandler) != null) { mHandler.clearPaths(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2011/buggy-version/src.main.java.io.jboot.server.undertow.UnderTowServer.java", "BodyUseAPI": [], "Fixed commit": "5053b41c8d20a3b05374d27d5b858930e4f512fe", "Url": "https://api.github.com/repos/yangfuhai/jboot", "Date": "2017-10-17T06:10:13Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mServer) != null) { mServer.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2011/buggy-version/src.main.java.io.jboot.server.undertow.UnderTowServer.java", "BodyUseAPI": [], "Fixed commit": "5053b41c8d20a3b05374d27d5b858930e4f512fe", "Url": "https://api.github.com/repos/yangfuhai/jboot", "Date": "2017-10-17T06:10:13Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((value.getPositiveEntriesCount()) > 0) { double diff = (value.getPositiveEntriesCount()) - (this.average); double diff2 = diff * diff; this.diffKmerCounter.increment(((long) (diff2 * 1000))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5685/buggy-version/src.edu.arizona.cs.mrpkm.stddeviation.KmerStdDeviationBuilderMapper.java", "BodyUseAPI": ["edu.arizona.cs.mrpkm.types.hadoop.CompressedIntArrayWritable.getPositiveEntriesCount()"], "Fixed commit": "7cffde571c59af035ed0a77935d8b6e21d53f8d5", "Url": "https://api.github.com/repos/hurwitzlab/MR-PKM", "Date": "2015-02-26T04:03:10Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (secondVal == 0.0) { makeToast(\"Cannot divide by 0\"); }else { result = firstVal / secondVal; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3175/buggy-version/app.src.main.java.com.example.sam.basiccalculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f9c8cd3fbaefd963d003c76d282468a80368c1a5", "Url": "https://api.github.com/repos/SamUndefined/BasicCalculator", "Date": "2017-05-07T23:44:20Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item.getName().equals(gildedrose.items.StoreItemFactory.CONJURED_ITEM)) { return new gildedrose.items.ConjuredItem(item); }else { return new gildedrose.items.StoreItem(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/9194/buggy-version/src.main.java.gildedrose.items.StoreItemFactory.java", "BodyUseAPI": [], "Fixed commit": "4d1759eec86432296d60fe7be11726f0a4f834b8", "Url": "https://api.github.com/repos/CheeseInTheDark/GildedRose", "Date": "2014-10-24T23:39:15Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (rlimits != null) { this.rlimits = rlimits; }else { this.rlimits = new com.mesosphere.sdk.specification.yaml.WriteOnceLinkedHashMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4479/buggy-version/sdk.scheduler.src.main.java.com.mesosphere.sdk.specification.yaml.RawContainer.java", "BodyUseAPI": [], "Fixed commit": "8a7f40ab68f3ffbb9bf18cd780480d60af5fb44c", "Url": "https://api.github.com/repos/mesosphere/dcos-commons", "Date": "2017-01-11T19:11:10Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (dataSource != null) { dataSource.addListener(render); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/594/buggy-version/modules.application.src.main.java.com.sldeditor.ui.tree.SLDTree.java", "BodyUseAPI": [], "Fixed commit": "3b1026d4ee8c6273addadefb8ff9e845a561b5fe", "Url": "https://api.github.com/repos/robward-scisys/sldeditor", "Date": "2016-07-21T15:27:15Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getState().isFailed()) && ((!(context.future)) || ((org.flywaydb.core.api.MigrationState.FUTURE_FAILED) != (getState())))) { if ((getVersion()) == null) { throw new org.flywaydb.core.api.FlywayException((\"Detected failed repeatable migration: \" + (getDescription()))); } throw new org.flywaydb.core.api.FlywayException((\"Detected failed migration to version\" + (getVersion()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6858/buggy-version/flyway-core.src.main.java.org.flywaydb.core.internal.info.MigrationInfoImpl.java", "BodyUseAPI": [], "Fixed commit": "e5b972fa8e5571da0e5a6532cceb50f59caeb8c6", "Url": "https://api.github.com/repos/khatkar/flyway", "Date": "2017-02-06T18:08:08Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timerServiceBound) activityContext.unbindService(timerServiceConnection);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8327/buggy-version/app.src.main.java.com.example.qwerty.timemanager.ActivityTimer.java", "BodyUseAPI": [], "Fixed commit": "8274e3dbc7a01acb09e6fb3608adb837b46859f3", "Url": "https://api.github.com/repos/olegpoly/TimeManager", "Date": "2015-01-20T10:05:34Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (dsNames != null) { sharedPattern = datastoreMgr.getSharedDatastoresByNames(dsNames); localPattern = datastoreMgr.getLocalDatastoresByNames(dsNames); }else { sharedPattern = datastoreMgr.getAllSharedDatastores(); localPattern = datastoreMgr.getAllLocalDatastores(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6191/buggy-version/server.serengeti.src.main.java.com.vmware.bdd.manager.ClusterConfigManager.java", "BodyUseAPI": ["com.vmware.bdd.manager.VcDataStoreManager.getLocalDatastoresByNames(java.util.List<java.lang.String>)", "com.vmware.bdd.manager.VcDataStoreManager.getSharedDatastoresByNames(java.util.List<java.lang.String>)"], "Fixed commit": "68e7b364ee447e49b04c1939d8d4b6d844ad564a", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2012-10-11T07:08:43Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.utils.media.ThumbnailGenerator.generateThumbnail(java.lang.String,int,int,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (bi == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3355/buggy-version/photoweb.src.com.utils.media.ThumbnailGenerator.java", "BodyUseAPI": [], "Fixed commit": "5330a593d39cf9121a43424084afac52012d0aad", "Url": "https://api.github.com/repos/shentar/jAlbum", "Date": "2017-02-27T15:57:25Z"},
{"Line": "=>1196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((taskCompleter != null) && (taskCompleter.isRollingBack())) { java.util.List<com.emc.storageos.db.client.model.Volume> volumes = _dbClient.queryObject(com.emc.storageos.db.client.model.Volume.class, taskCompleter.getIds()); _dbClient.markForDeletion(volumes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1274/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.block.BlockDeviceController.java", "BodyUseAPI": ["com.emc.storageos.db.client.DbClient.queryObject(java.lang.Class,taskCompleter.getIds())", "com.emc.storageos.volumecontroller.TaskCompleter.getIds()"], "Fixed commit": "e7aae06c83334cbfed066e62bb4e2b9cd474be72", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-06-27T17:58:42Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isResume) { java.lang.String head = view.getName(); if (null != (alternateHead)) { head = alternateHead; } firstTime = helper.getLastCommitOfBranch(head).getTime(); }else { firstTime = view.getCreatedTime().getLongValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/828/buggy-version/syncronizer.src.org.sync.GitImporter.java", "BodyUseAPI": [], "Fixed commit": "316a2228dee45e41db1c4a764954ec4641dc1981", "Url": "https://api.github.com/repos/planestraveler/git-starteam", "Date": "2012-11-29T01:36:18Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (viewHolder == null) { android.util.Log.i(\"haha : \", \"it is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2096/buggy-version/app.src.main.java.com.example.root.libapp_v1.LyxListView.LyxListViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "3852e0289d330fbfad6e405e1e4586e81edf6138", "Url": "https://api.github.com/repos/luohaha/Libapp_v1", "Date": "2015-04-06T06:51:45Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((spawn) == null) { spawn = new com.bladeannihilation.gameobject.Location(i, l); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1746/buggy-version/src.com.bladeannihilation.gameobject.Level.java", "BodyUseAPI": [], "Fixed commit": "ac7cf6888fa608e3b8bfd7379d4d192a24f6e4e8", "Url": "https://api.github.com/repos/Blade-Annihilation/Blade-Annihilation", "Date": "2015-02-07T04:11:13Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != job) { jobName = job.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7207/buggy-version/app.org.tdl.vireo.error.impl.ErrorLogImpl.java", "BodyUseAPI": ["org.tdl.vireo.job.JobMetadata.getName()"], "Fixed commit": "ed8e95956a11d7b2800e757d3fbb696889a2c5e4", "Url": "https://api.github.com/repos/TexasDigitalLibrary/Vireo", "Date": "2013-07-03T16:56:25Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (channel.isOpen()) { channel.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1408/buggy-version/src.com.orange.gameserver.draw.manager.ChannelUserManager.java", "BodyUseAPI": ["org.jboss.netty.channel.Channel.close()"], "Fixed commit": "8a531f3fb0f084d5c375340c8c959f4ed505e4da", "Url": "https://api.github.com/repos/gckjdev/GameServer", "Date": "2012-04-13T07:50:41Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sender instanceof org.bukkit.entity.Player)) { sender.sendMessage(\"This command can only run by a player.\"); }else { org.bukkit.entity.Player player = ((org.bukkit.entity.Player) (sender)); getLogger().info((player + \" used messenger!\")); org.bukkit.Bukkit.broadcastMessage((((((((((org.bukkit.ChatColor.GOLD) + \"[\") + (org.bukkit.ChatColor.BLUE)) + player) + (org.bukkit.ChatColor.GOLD)) + \"]\") + \" \") + (org.bukkit.ChatColor.COLOR_CHAR)) + (args[0]))); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8662/buggy-version/src.main.java.io.github.RaCuNi.RACUNIONLINE.Main.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage(java.lang.String)"], "Fixed commit": "a6247fdfbcc6807744da673110d4ba0c7a3e7da9", "Url": "https://api.github.com/repos/RACUNIONLINE/RACUNIONLINE", "Date": "2016-02-29T11:36:32Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((key == null) || (!(this.contains(key)))) { try { throw new java.lang.Exception(\"key cannot be null in find()\"); } catch (java.lang.Exception e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6887/buggy-version/LinearProbingHashMap.java", "BodyUseAPI": [], "Fixed commit": "33012b152804ed812a1aaeb93b8b2f763a234ff2", "Url": "https://api.github.com/repos/MaxLeiter/ExpressionTree", "Date": "2017-02-21T19:22:34Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(loadUserDetails())) { java.lang.System.out.println(\"user not found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4299/buggy-version/src.core.Session.java", "BodyUseAPI": [], "Fixed commit": "dce775f653a35f5c48e87570519786398739532c", "Url": "https://api.github.com/repos/LouisKnuckles/Dank_Memes_SE_PT", "Date": "2017-03-17T04:37:08Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((conf != null) && ((pipeline) != null)) { pipeline.setConfiguration(conf); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5905/buggy-version/src.main.java.com.cloudera.crunch.tool.CrunchTool.java", "BodyUseAPI": ["com.cloudera.crunch.Pipeline.setConfiguration(org.apache.hadoop.conf.Configuration)"], "Fixed commit": "0e96f62ea94ea951bbbcb738e50830dd985af5cf", "Url": "https://api.github.com/repos/josephadler/crunch", "Date": "2012-05-10T05:48:39Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (monitor.isCanceled()) { throw new org.eclipse.core.runtime.OperationCanceledException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/9031/buggy-version/edu.usc.cssl.tacit.wordcount.weighted.src.edu.uc.cssl.tacit.wordcount.weighted.services.WordCountApi.java", "BodyUseAPI": [], "Fixed commit": "7758f9a764cd79caad3e33a80279c1eeabd30f68", "Url": "https://api.github.com/repos/USC-CSSL/TACIT", "Date": "2016-01-26T20:00:52Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (split == \"\") { sub1 = Telefonnummer; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8649/buggy-version/src.update2viva.Vorwahlencheck.java", "BodyUseAPI": [], "Fixed commit": "823bf1037d5a6c66580a2fe7af7c75ac94323151", "Url": "https://api.github.com/repos/BOfH85/Update2ViVa", "Date": "2017-08-10T15:50:11Z"},
{"Line": "=>767", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((file.folderId) >= 0) && ((file.fileId) >= 0)) { drawObject(batch, assets.getSprite(file), info); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2870/buggy-version/src.main.java.com.badlogic.gdx.spriter.SpriterAnimator.java", "BodyUseAPI": ["com.badlogic.gdx.spriter.SpriterAnimator.drawObject(com.badlogic.gdx.graphics.g2d.Batch,assets.getSprite(file),com.badlogic.gdx.spriter.data.SpriterObject)", "com.badlogic.gdx.spriter.data.SpriterAssetProvider.getSprite(com.badlogic.gdx.spriter.data.SpriterFileInfo)"], "Fixed commit": "e8db58b3806d7c6d9107be303e043957e12dbf21", "Url": "https://api.github.com/repos/thorthur/gdx-spriter", "Date": "2016-04-16T13:30:39Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(parentFile.exists())) { boolean success = parentFile.mkdirs(); if (!success) { throw new java.lang.RuntimeException((\"Failed to create directory \" + (parentFile.getAbsolutePath()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3575/buggy-version/src.main.java.be.bagofwords.virtualfile.local.LocalFile.java", "BodyUseAPI": ["java.io.File.mkdirs()", "java.io.File.getAbsolutePath()"], "Fixed commit": "43af45954d2b6839fab009392fa5012d6827c48a", "Url": "https://api.github.com/repos/koendeschacht/count-db", "Date": "2014-10-15T07:37:00Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result >= (java.lang.Integer.MIN_VALUE)) && (result <= (java.lang.Integer.MAX_VALUE))) { int intResult = ((int) (result)); x.putAttribute(com.alibaba.druid.sql.visitor.SQLEvalVisitor.EVAL_VALUE, intResult); }else { x.putAttribute(com.alibaba.druid.sql.visitor.SQLEvalVisitor.EVAL_VALUE, result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/250/buggy-version/src.main.java.com.alibaba.druid.sql.visitor.SQLEvalVisitorUtils.java", "BodyUseAPI": ["com.alibaba.druid.sql.ast.expr.SQLMethodInvokeExpr.putAttribute(com.alibaba.druid.sql.visitor.SQLEvalVisitor.EVAL_VALUE,long)"], "Fixed commit": "6fbfef62b58f87787a51d670cd0f7824e4ab7cb0", "Url": "https://api.github.com/repos/mosoft521/druid", "Date": "2017-01-22T13:23:30Z"},
{"Line": "=>640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (DefectRepairing.parser.debug) java.lang.System.out.println(contexts.peek().curLine);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7762/buggy-version/src.DefectRepairing.parser.java", "BodyUseAPI": [], "Fixed commit": "2f71056660e8da1ae7eec351b0a0f32318a5318d", "Url": "https://api.github.com/repos/Ultimanecat/DefectRepairing", "Date": "2017-04-28T15:20:23Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((par6ItemStack.getItemDamage()) >= 8) { meta += 8; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3143/buggy-version/src.main.java.com.cricketcraft.chisel.block.BlockCarvableStairs.java", "BodyUseAPI": [], "Fixed commit": "c365568d54e962e14d095bde98efae1e649e9fd1", "Url": "https://api.github.com/repos/Chisel-2/Chisel-2", "Date": "2015-02-23T18:05:24Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["assignment3.Main.FindDFS(java.lang.String,java.lang.String,java.util.ArrayList<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!found) { assignment3.Main.wordLadder.clear(); return assignment3.Main.wordLadder; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1671/buggy-version/src.assignment3.Main.java", "BodyUseAPI": [], "Fixed commit": "3d61937b8c53bef58ca96b47557320eba828bd71", "Url": "https://api.github.com/repos/mvandinh/mv24772_rd23353_Lab3", "Date": "2016-09-29T01:54:18Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entry.count) < (k)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/922/buggy-version/src.main.org.deidentifier.arx.framework.check.groupify.HashGroupify.java", "BodyUseAPI": [], "Fixed commit": "8a96ad954a862665741a7fcf36199453090954b7", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2013-06-04T11:40:42Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(c.isAutoChance())) { totalChance += c.getChance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8730/buggy-version/mods.bukkit.src.haveric.recipeManager.flags.FlagForChance.java", "BodyUseAPI": ["haveric.recipeManager.flags.FlagForChance.ChanceFlag.getChance()"], "Fixed commit": "668acb44ec5d8becad3c8209fcda2dbb9a147eac", "Url": "https://api.github.com/repos/haveric/RecipeManager2", "Date": "2015-06-24T04:53:50Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cpu.Memory.get(cpu.getIp())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((instr & 254) == 16) { int r = instr & 1; cpu.decSp(); if (r == (Cpu.A)) { memory.set(cpu.getSp(), cpu.getA()); }else { memory.set(cpu.getSp(), cpu.getB()); } cpu.incIp(); }else if ((instr & 254) == 18) { int r = instr & 1; if (r == (Cpu.A)) { cpu.setA(memory.get(cpu.getSp())); }else { cpu.setB(memory.get(cpu.getSp())); } cpu.setSp(((cpu.getSp()) + 1)); cpu.incIp(); }else if (instr == 20) { cpu.setB(cpu.getA()); cpu.incIp(); }else if (instr == 21) { cpu.setA(cpu.getB()); cpu.incIp(); }else if (instr == 22) { cpu.setA(((cpu.getA()) + 1)); cpu.incIp(); }else if ((instr & 240) == 32) { int o = instr & 7; int r = (instr & 8) >> 3; if (r == (cpu.A)) { memory.set(((cpu.getSp()) + o), cpu.getA()); }else { memory.set(((cpu.getSp()) + o), cpu.getB()); } cpu.incIp(); }else if ((instr & 240) == 48) { int o = (instr & 14) >> 1; int r = instr & 1; if (r == (cpu.A)) { cpu.setA(memory.get(((cpu.getSp()) + o))); }else { cpu.setB(memory.get(((cpu.getSp()) + o))); } cpu.incIp(); }else if ((instr & 192) == 64) { int v = (instr & 62) >> 1; int r = instr & 1; if (r == (Cpu.A)) { cpu.setA(v); }else { cpu.setB(v); } cpu.incIp(); }else if ((instr & 192) == 192) { int a = instr & 63; if (cpu.isFlag()) { cpu.decSp(); memory.set(cpu.getSp(), cpu.getIp()); cpu.setIp(a); }else cpu.incIp(); }else if ((instr & 192) == 128) { int a = instr & 63; if (cpu.isFlag()) { cpu.setIp(a); }else cpu.incIp(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/235/buggy-version/VirtualCPU.src.main.java.cpu.Machine.java", "BodyUseAPI": [], "Fixed commit": "bde72c014b315a75017f2eb2f53fff04e24f88a8", "Url": "https://api.github.com/repos/stinaanita/FunctionalP-VirtualCPU", "Date": "2017-05-14T10:26:22Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["rental.g3.SimpleActionGenerator.findPickups(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((picks.get(i).dropLoc) != (r.firstRoute().dst)) r.pushRoute(new rental.g3.Route(r.cid, picks.get(i).dropLoc));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7383/buggy-version/Deliverable_2.src.rental.g3.SimpleActionGenerator.java", "BodyUseAPI": ["java.util.List<rental.g3.Pickup>.get(int)", "rental.g3.Relocator.pushRoute(rental.g3.Route)"], "Fixed commit": "4f09e7137fd1889868a3c4c9a31ded4866042f99", "Url": "https://api.github.com/repos/harshilgandhi/PPS-Group-3-One-Way-Rental", "Date": "2012-09-17T14:54:37Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.persistence.EntityManager.find(java.lang.Class,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((user.getProjects()) != null) { user.getProjects().size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7890/buggy-version/src.main.java.com.crowdplatform.service.UserServiceImpl.java", "BodyUseAPI": ["user.getProjects().size()", "com.crowdplatform.model.PlatformUser.getProjects()"], "Fixed commit": "7a0e533501bf2e14bf68489f343faa107d0b575c", "Url": "https://api.github.com/repos/clarabayarri/crowd", "Date": "2013-03-31T09:32:38Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jetbrains.mps.ide.icons.IconManager.getIconForResource(jetbrains.mps.smodel.runtime.IconResource)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (icon == null) { return IdeIcons.DEFAULT_CONCEPT_ICON; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8209/buggy-version/workbench.mps-platform.source_gen.jetbrains.mps.ide.icons.IconManager.java", "BodyUseAPI": [], "Fixed commit": "eb01a40eb8e835aa10be5167f645bc04bd826176", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2016-07-05T18:22:26Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(set.contains(p))) set.add(p);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4984/buggy-version/p5_kdtrees.src.PointSET.java", "BodyUseAPI": ["edu.princeton.cs.algs4.SET<edu.princeton.cs.algs4.Point2D>.add(edu.princeton.cs.algs4.Point2D)"], "Fixed commit": "edcf14c54472d8d209e41cd67f929608e7cabc34", "Url": "https://api.github.com/repos/atreidesend/princealgs", "Date": "2017-07-24T13:42:10Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mismatch.getDefine()) == null) || ((mismatch.getParameter()) == null)) { return descriptors; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4552/buggy-version/src.com.chrisfolger.needsmoredojo.intellij.inspections.MismatchedImportsInspection.java", "BodyUseAPI": [], "Fixed commit": "eb3b0fbf3d7240e3794b78de3380bb11fda9868b", "Url": "https://api.github.com/repos/cefolger/needsmoredojo", "Date": "2013-10-29T22:33:35Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list.size()) < 1) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6366/buggy-version/src.algd2.DLinkedList.java", "BodyUseAPI": [], "Fixed commit": "174f67b988f278c0abb21d4538aeeb63e09b19fa", "Url": "https://api.github.com/repos/patricsteiner/algd2_linkedlist", "Date": "2016-10-25T08:15:26Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) == 0) { algd2.DLinkedList.ListItem item = ((algd2.IList) (list)).delete(((algd2.IList) (list)).head(), true); item.parent = this; linkInFront(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6366/buggy-version/src.algd2.DLinkedList.java", "BodyUseAPI": [], "Fixed commit": "174f67b988f278c0abb21d4538aeeb63e09b19fa", "Url": "https://api.github.com/repos/patricsteiner/algd2_linkedlist", "Date": "2016-10-25T08:15:26Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.camel.Message.getHeader(HttpHeaders.Names.CONNECTION,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (connection == null) { connection = message.getExchange().getProperty(HttpHeaders.Names.CONNECTION, java.lang.String.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1623/buggy-version/components.camel-netty4-http.src.main.java.org.apache.camel.component.netty4.http.DefaultNettyHttpBinding.java", "BodyUseAPI": [], "Fixed commit": "70e1959426409b7babe9bbc5ae08393c702ab660", "Url": "https://api.github.com/repos/sabre1041/camel", "Date": "2015-03-09T10:08:13Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.netty.handler.codec.http.HttpHeaders.isKeepAlive(io.netty.handler.codec.http.HttpRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!keepAlive) { exchange.setProperty(HttpHeaders.Names.CONNECTION, HttpHeaders.Values.CLOSE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1623/buggy-version/components.camel-netty4-http.src.main.java.org.apache.camel.component.netty4.http.handlers.HttpServerChannelHandler.java", "BodyUseAPI": [], "Fixed commit": "70e1959426409b7babe9bbc5ae08393c702ab660", "Url": "https://api.github.com/repos/sabre1041/camel", "Date": "2015-03-09T10:08:13Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (tmpRes != null) { resMap = com.baidu.fis.util.MapCache.mergeJSONObjects(resMap, tmpRes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1465/buggy-version/src.main.java.com.baidu.fis.util.MapCache.java", "BodyUseAPI": ["com.baidu.fis.util.MapCache.mergeJSONObjects(com.alibaba.fastjson.JSONObject,com.alibaba.fastjson.JSONObject)"], "Fixed commit": "6f7018516de2019fef5712106cedf642adac6a33", "Url": "https://api.github.com/repos/liuyunwei/fis-velocity-tools", "Date": "2017-03-16T07:35:21Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (tmpRes != null) { pkgMap = com.baidu.fis.util.MapCache.mergeJSONObjects(pkgMap, tmpRes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1465/buggy-version/src.main.java.com.baidu.fis.util.MapCache.java", "BodyUseAPI": ["com.baidu.fis.util.MapCache.mergeJSONObjects(com.alibaba.fastjson.JSONObject,com.alibaba.fastjson.JSONObject)"], "Fixed commit": "6f7018516de2019fef5712106cedf642adac6a33", "Url": "https://api.github.com/repos/liuyunwei/fis-velocity-tools", "Date": "2017-03-16T07:35:21Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (authToken == null) { android.util.Log.e(SCLogger.LOG_TAG, context.getString(R.string.sc_access_token_not_found)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7491/buggy-version/DeepLinkingSDK.src.main.java.sc.shortcut.sdk.android.deeplinking.SCConfig.java", "BodyUseAPI": [], "Fixed commit": "46ee52615adc55054d0556310f6e8983d3fd1df5", "Url": "https://api.github.com/repos/shortcutmedia/shortcut-android-sdk", "Date": "2015-11-16T09:51:50Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((!(additionalItems)) && ((allItemSchema) != null)) { throw new org.everit.jsonvalidator.SchemaException(\"additionalItems cannot be false for list validation\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/9060/buggy-version/src.main.java.org.everit.jsonvalidator.ArraySchema.java", "BodyUseAPI": [], "Fixed commit": "ee1387b7d701a401b42e6652080f901ec60b9f96", "Url": "https://api.github.com/repos/erosb/json-schema-validator", "Date": "2015-09-17T10:09:44Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(((allItemSchema) == null) || ((itemSchemas) == null))) { throw new org.everit.jsonvalidator.SchemaException(\"cannot perform both tuple and list validation\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/9060/buggy-version/src.main.java.org.everit.jsonvalidator.ArraySchema.java", "BodyUseAPI": [], "Fixed commit": "ee1387b7d701a401b42e6652080f901ec60b9f96", "Url": "https://api.github.com/repos/erosb/json-schema-validator", "Date": "2015-09-17T10:09:44Z"},
{"Line": "=>557", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playMusic) { musicPlayer.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3095/buggy-version/app.src.main.java.com.seblogapps.stognacci.snakegame.ClassicSnake.java", "BodyUseAPI": [], "Fixed commit": "150bbd8789dce84f2da687c8903de46cfee8eb78", "Url": "https://api.github.com/repos/seblogapps/AndroidSnakeGame", "Date": "2016-04-22T12:32:07Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.swt.widgets.Widget.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (data instanceof net.bioclipse.hpc.domains.toolconfig.Parameter) { parameter = ((net.bioclipse.hpc.domains.toolconfig.Parameter) (data)); }else if (data instanceof net.bioclipse.hpc.domains.toolconfig.Option) { parameter = ((net.bioclipse.hpc.domains.toolconfig.Option) (data)).getParameter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8833/buggy-version/plugins.net.bioclipse.hpc.src.net.bioclipse.hpc.wizards.ConfigureCommandPage.java", "BodyUseAPI": [], "Fixed commit": "fdacfda065dbab014a13d478a7a763a2376458ba", "Url": "https://api.github.com/repos/bioclipse/bioclipse.hpc", "Date": "2013-08-28T18:18:55Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (data != null) { java.lang.String error = data.getStringExtra(ZBarConstants.ERROR_INFO); android.widget.Toast.makeText(getActivity(), error, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5831/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.AddBook.java", "BodyUseAPI": ["android.content.Intent.getStringExtra(ZBarConstants.ERROR_INFO)"], "Fixed commit": "317242484f07f9f738dd0d96d44bd015c354e20e", "Url": "https://api.github.com/repos/abunghez/super-duo", "Date": "2015-10-21T14:22:03Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.getlime.security.powerauth.server.activation.PowerAuthServerActivation.computeServerDataSignature(activation.getActivationId(),byte[],java.security.PrivateKey)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (C_serverPubKeySignature == null) { C_serverPubKeySignature = new io.getlime.security.powerauth.lib.generator.KeyGenerator().generateRandomBytes(71); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7961/buggy-version/powerauth-java-server.src.main.java.io.getlime.security.service.behavior.ActivationServiceBehavior.java", "BodyUseAPI": [], "Fixed commit": "671944d11cf100f30c14ee027e9840e480afb3e2", "Url": "https://api.github.com/repos/wultra/powerauth-crypto", "Date": "2016-06-14T12:44:45Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.getlime.security.powerauth.server.activation.PowerAuthServerActivation.decryptDevicePublicKey(byte[],java.lang.String,java.security.PrivateKey,java.security.PublicKey,activation.getActivationOTP(),byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (devicePublicKey == null) { throw localizationProvider.buildExceptionForCode(ServiceError.ERR0009); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7961/buggy-version/powerauth-java-server.src.main.java.io.getlime.security.service.behavior.ActivationServiceBehavior.java", "BodyUseAPI": [], "Fixed commit": "671944d11cf100f30c14ee027e9840e480afb3e2", "Url": "https://api.github.com/repos/wultra/powerauth-crypto", "Date": "2016-06-14T12:44:45Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.gouv.etalab.mastodon.client.APIResponse.getNotifications()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((notifications.size()) > 0) updateNotificationLastId(sharedpreferences, this.userId, notifications.get(0).getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6620/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.fragments.DisplayNotificationsFragment.java", "BodyUseAPI": ["notifications.get(0).getId()", "fr.gouv.etalab.mastodon.fragments.DisplayNotificationsFragment.updateNotificationLastId(android.content.SharedPreferences,java.lang.String,notifications.get(0).getId())", "java.util.List<fr.gouv.etalab.mastodon.client.Entities.Notification>.get(int)"], "Fixed commit": "cdf8eb64d9065a3981820d6afa92ae2623e7bcf3", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-12-28T10:25:12Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((list_db.size()) == 0) { java.util.List<com.example.kirill.techpark16.Friend> friends = com.example.kirill.techpark16.Friend.listAll(com.example.kirill.techpark16.Friend.class); for (int i = 0; i < (friends.size()); i++) { list_db.add(friends.get(i).getFullName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6841/buggy-version/app.src.main.java.com.example.kirill.techpark16.Fragments.FragmentFriendsSend.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(friends.get(i).getFullName())"], "Fixed commit": "052c2a5cdd0a751a7a7e8406b5a778e646f04f56", "Url": "https://api.github.com/repos/kirill-m/vk_secure", "Date": "2016-05-29T19:34:07Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(peopleSalaryBase.getLastChangeDate())) { peopleSalaryBase.setLastChangeDate(com.wangzhixuan.service.impl.DateUtil.GetToday()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1019/buggy-version/src.main.java.com.wangzhixuan.service.impl.PeopleSalaryServiceImpl.java", "BodyUseAPI": ["com.wangzhixuan.model.PeopleSalaryBase.setLastChangeDate(com.wangzhixuan.service.impl.DateUtil.GetToday())"], "Fixed commit": "431b22aa0f0a3935fefdeae87c1aa337a28b0a33", "Url": "https://api.github.com/repos/puppylsy/spring-shiro-training", "Date": "2017-02-02T04:09:34Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rc == 503) { throw new java.net.SocketTimeoutException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3667/buggy-version/src.com.openlinksw.bibm.connection.NetQuery.java", "BodyUseAPI": [], "Fixed commit": "64d1925bedcab3ac4a3421e4cce27c737d57127b", "Url": "https://api.github.com/repos/kimajakobsen/bibm-sesame", "Date": "2014-05-23T23:27:41Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.nutz.dao.impl.sql.run.NutDaoExecutor.log.isDebugEnabled()) { org.nutz.dao.impl.sql.run.NutDaoExecutor.log.debug(st); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5928/buggy-version/src.org.nutz.dao.impl.sql.run.NutDaoExecutor.java", "BodyUseAPI": ["org.nutz.log.Log.debug(org.nutz.dao.sql.DaoStatement)"], "Fixed commit": "19fa597c2d02d686ef82f56ed16bfeae559aeb68", "Url": "https://api.github.com/repos/hzl7652/nutz", "Date": "2012-10-26T00:36:36Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(worker.isAlive())) { try { worker.join(); } catch (java.lang.InterruptedException e) { org.pmw.tinylog.Logger.error(e); java.lang.System.exit(1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/784/buggy-version/src.main.java.de.teiesti.postie.Inbox.java", "BodyUseAPI": ["java.lang.Thread.join()"], "Fixed commit": "75877c05c01779959e37c3ff9021e3bdf577730c", "Url": "https://api.github.com/repos/teiesti/postie", "Date": "2014-05-04T13:52:49Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (a == null) { javax.swing.JOptionPane.showMessageDialog(null, ((\"The GameHelper repository wasn't found!\" + (java.lang.System.lineSeparator())) + \"Code: 0x1o\"), \"Error\", javax.swing.JOptionPane.ERROR_MESSAGE); java.lang.System.exit((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7990/buggy-version/MinecraftResourceEditor.src.net.wfoas.minecraft.reseditor.ResEditorWindow.java", "BodyUseAPI": [], "Fixed commit": "7915594ce5853bf35ced983ca9f884fd2fd58905", "Url": "https://api.github.com/repos/wfoasm-woma-net/gh-minecraft-res-editor", "Date": "2017-02-17T21:02:08Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(f.exists())) { javax.swing.JOptionPane.showMessageDialog(null, ((\"The GameHelper repository wasn't found!\" + (java.lang.System.lineSeparator())) + \"Code: 0x1s\"), \"Error\", javax.swing.JOptionPane.ERROR_MESSAGE); java.lang.System.exit((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7990/buggy-version/MinecraftResourceEditor.src.net.wfoas.minecraft.reseditor.MinecraftResEditor.java", "BodyUseAPI": [], "Fixed commit": "7915594ce5853bf35ced983ca9f884fd2fd58905", "Url": "https://api.github.com/repos/wfoasm-woma-net/gh-minecraft-res-editor", "Date": "2017-02-17T21:02:08Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((player != null) && (globalRegion.hasMembersOrOwners())) { def = globalRegion.isMember(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3425/buggy-version/src.main.java.com.sk89q.worldguard.protection.ApplicableRegionSet.java", "BodyUseAPI": ["com.sk89q.worldguard.protection.regions.ProtectedRegion.isMember(com.sk89q.worldguard.LocalPlayer)"], "Fixed commit": "df8fdd086b9ac23bebdc95ab3de6558861056bdc", "Url": "https://api.github.com/repos/sk89q/WorldGuard", "Date": "2011-06-27T18:01:53Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (statUrl == null) { statUrl = \"haproxy\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1455/buggy-version/JazminDeployer.src.jazmin.deploy.view.instance.InstanceHaproxyStatWindow.java", "BodyUseAPI": [], "Fixed commit": "e0e9bd26d53df2ae1a0b8689a4347c46adf3267d", "Url": "https://api.github.com/repos/guooscar/JazminServer", "Date": "2015-08-28T08:20:28Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (meth == null) meth = getMethod(methodClass.getSuperclass());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6257/buggy-version/annotations-utils.src.main.java.adinar.annotationsutils.viewinserter.MethodResolver.java", "BodyUseAPI": [], "Fixed commit": "85d59c6c1535edaec102e18088a140d22bc4d848", "Url": "https://api.github.com/repos/AdiNar/android-annotation-utils", "Date": "2017-07-12T21:08:41Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isRaw())) return getPath();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7575/buggy-version/code.src.at.photoselector.model.Photo.java", "BodyUseAPI": [], "Fixed commit": "1639198f8dad185089dd706d3e5b44af27527c2a", "Url": "https://api.github.com/repos/freimair/photoselector", "Date": "2013-01-08T18:37:53Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (item.getItemType().equals(AppConstants.ITEM_TYPE_TIMELESS)) { if (\"code\".equals(property)) { return true; } if (\"cashier\".equals(property)) { return true; } }else if (item.getItemType().equals(AppConstants.ITEM_TYPE_CURRENTGOLD)) { if (\"cashier\".equals(property)) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4207/buggy-version/com.topsun.posclient.sales.ui.src.com.topsun.posclient.sales.ui.table.BookingCellModify.java", "BodyUseAPI": ["com.topsun.posclient.datamodel.Item.getItemType()", "item.getItemType().equals(AppConstants.ITEM_TYPE_CURRENTGOLD)"], "Fixed commit": "d9e94e01725ea1b0def4f0278e90774322ff0b2e", "Url": "https://api.github.com/repos/tandong8888/topsun", "Date": "2013-12-04T13:50:35Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (m.containsNonNullValue(TaskToTagMetadata.TAG_UUID)) { com.todoroo.astrid.data.TaskOutstanding oe = new com.todoroo.astrid.data.TaskOutstanding(); oe.setValue(TaskOutstanding.ENTITY_ID_PROPERTY, itemId); oe.setValue(TaskOutstanding.COLUMN_STRING, NameMaps.TAG_ADDED_COLUMN); oe.setValue(TaskOutstanding.VALUE_STRING, m.getValue(TaskToTagMetadata.TAG_UUID)); oe.setValue(TaskOutstanding.CREATED_AT, createdAt); outstandingDao.createNew(oe); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/148/buggy-version/astrid.plugin-src.com.todoroo.astrid.actfm.sync.messages.ConstructTaskOutstandingTableFromMasterTable.java", "BodyUseAPI": ["com.todoroo.astrid.data.TaskOutstanding.setValue(TaskOutstanding.VALUE_STRING,m.getValue(TaskToTagMetadata.TAG_UUID))", "com.todoroo.astrid.data.Metadata.getValue(TaskToTagMetadata.TAG_UUID)"], "Fixed commit": "8776cf6fd09b07b26e103268f958f4f2c383d338", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2013-03-13T17:35:47Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(string.isEmpty())) { for (java.lang.String retval : string.split(\",\")) { retval = retval.trim(); retval = (retval.substring(0, 1).toUpperCase()) + (retval.substring(1).toLowerCase()); try { ua.prog.pavel.Subject s = subjectDAO.find(retval); result.add(s); } catch (javax.persistence.NoResultException ex) { ua.prog.pavel.Subject s = subjectDAO.add(new ua.prog.pavel.Subject(retval)); result.add(s); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/537/buggy-version/src.java.ua.prog.pavel.MessageService.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "e05e60d80e7c86e17ca15711bce2803967fb581f", "Url": "https://api.github.com/repos/Pavelius/retweeter", "Date": "2016-03-22T09:57:35Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (query.isEmpty()) { return org.sammelbox.model.database.operations.QueryOperations.executeSQLQuery(org.sammelbox.model.database.QueryBuilder.createOrderedSelectStarQuery(albumName)); }else { return org.sammelbox.model.database.operations.QueryOperations.executeQuickSearchQuery(query, albumName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3059/buggy-version/Sammelbox-Desktop.src.org.sammelbox.model.database.operations.QueryOperations.java", "BodyUseAPI": ["org.sammelbox.model.database.operations.QueryOperations.executeQuickSearchQuery(java.lang.String,java.lang.String)"], "Fixed commit": "68d12030888b4855071fb00c45d89bed005bba53", "Url": "https://api.github.com/repos/jeromewagener/Sammelbox", "Date": "2014-05-14T19:50:25Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cpw.mods.fml.common.Loader.isModLoaded(\"NotEnoughItems\")) { codechicken.nei.api.API.hideItem(new net.minecraft.item.ItemStack(iguanaman.iguanatweakstconstruct.mobheads.IguanaMobHeads.wearables, 1, 0)); codechicken.nei.api.API.hideItem(new net.minecraft.item.ItemStack(iguanaman.iguanatweakstconstruct.mobheads.IguanaMobHeads.wearables, 1, 1)); codechicken.nei.api.API.hideItem(new net.minecraft.item.ItemStack(iguanaman.iguanatweakstconstruct.mobheads.IguanaMobHeads.wearables, 1, 2)); codechicken.nei.api.API.hideItem(new net.minecraft.item.ItemStack(iguanaman.iguanatweakstconstruct.mobheads.IguanaMobHeads.wearables, 1, 3)); codechicken.nei.api.API.hideItem(new net.minecraft.item.ItemStack(net.minecraft.item.Item.getItemFromBlock(IguanaMobHeads.skullBlock))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/9212/buggy-version/src.main.java.iguanaman.iguanatweakstconstruct.mobheads.proxy.MobHeadClientProxy.java", "BodyUseAPI": [], "Fixed commit": "4c0cd191ff0668ada96980dc91f35cce91e577fd", "Url": "https://api.github.com/repos/SlimeKnights/IguanaTweaksTConstruct", "Date": "2015-02-20T21:50:41Z"},
{"Line": "=>816", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pro.dbro.bart.TheActivity.currentEtdResponse.message) != null) { if (pro.dbro.bart.TheActivity.currentEtdResponse.message.contains(\"No data matched your criteria.\")) return input; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3820/buggy-version/src.pro.dbro.bart.TheActivity.java", "BodyUseAPI": ["pro.dbro.bart.TheActivity.currentEtdResponse.message.contains(java.lang.String)"], "Fixed commit": "69a263c9da2c6c9377aabe8b70968c41bc6a7bb6", "Url": "https://api.github.com/repos/OnlyInAmerica/BART", "Date": "2012-05-25T14:27:50Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (owner) child.setName(name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4549/buggy-version/src.main.java.com.bluesky.visualprogramming.core._Object.java", "BodyUseAPI": [], "Fixed commit": "4049740a08b724a44e239315c78a0e75e118ec80", "Url": "https://api.github.com/repos/jackhatedance/visual-programming", "Date": "2013-09-01T10:47:31Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == (IO_EDGE)) return ((T) ((ee.in) == null ? ee.out : ee.in));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8996/buggy-version/src.org.graphstream.graph.implementations.SingleNode.java", "BodyUseAPI": [], "Fixed commit": "88f8912433244bb0cb7199c0319c8700829c8356", "Url": "https://api.github.com/repos/Dave1704/gs-core", "Date": "2016-02-09T13:38:05Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((roundsPerShot) < 1) throw new java.lang.IllegalArgumentException(\"All weapons must have Rounds per shot > 0\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6609/buggy-version/src.lisong_mechlab.model.item.Weapon.java", "BodyUseAPI": [], "Fixed commit": "07ef0f21029a549a35cb5b94e56e250102e50b36", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2015-06-30T15:32:32Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.gustav9797.ZombieInvasionMinigame.PathfinderGoal.PathfinderGoalBreakBlock.getBlockHardness(block.getType())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hardness == 0) hardness = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5527/buggy-version/src.io.github.gustav9797.ZombieInvasionMinigame.PathfinderGoal.PathfinderGoalBreakBlock.java", "BodyUseAPI": [], "Fixed commit": "3762db2c644772da2c0bd331d2ab692c77ca6bf1", "Url": "https://api.github.com/repos/CheeseSoftware/ZombieInvasionMinigame", "Date": "2014-06-07T18:49:27Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.unitn.disi.sweb.webapi.client.kb.ComplexTypeClient.readComplexTypes(long,long,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cType.size()) > 0) { eu.trentorise.opendatarise.semantics.model.entity.EntityType etype = new eu.trentorise.opendatarise.semantics.model.entity.EntityType(cType.get(0)); return etype; }else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7486/buggy-version/src.main.java.eu.trentorise.opendatarise.semantics.model.entity.AttributeDef.java", "BodyUseAPI": ["java.util.List<it.unitn.disi.sweb.webapi.model.kb.types.ComplexType>.get(int)"], "Fixed commit": "136e66274e96a7db45c1ace53586469353946f4a", "Url": "https://api.github.com/repos/opendatatrentino/disi-open-data-client", "Date": "2014-03-29T17:33:18Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.stream.Stream<java.lang.String>.collect(java.util.stream.Collector<java.lang.CharSequence, ?, java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((body == null) || ((body.length()) == 0)) { java.util.Enumeration<java.lang.String> names = request.getParameterNames(); java.lang.StringBuffer sbu = new java.lang.StringBuffer(); while (names.hasMoreElements()) { java.lang.String name = names.nextElement(); sbu.append(((name + \"=\") + (request.getParameter(name)))).append(\"&\"); } if ((sbu.length()) > 0) { sbu.deleteCharAt(((sbu.length()) - 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1973/buggy-version/geowebcache.rest.src.main.java.org.geowebcache.rest.controller.SeedController.java", "BodyUseAPI": [], "Fixed commit": "63a4756992664c5241085c08ae08815a4e55e26d", "Url": "https://api.github.com/repos/mlog-engineer/geowebcache", "Date": "2017-12-19T02:04:32Z"},
{"Line": "=>2694", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<bibliothek.gui.dock.common.intern.CDockable, bibliothek.gui.dock.common.intern.CDockableAccess>.remove(bibliothek.gui.dock.common.intern.CDockable)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (oldAccess != null) { oldAccess.setUniqueId(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5499/buggy-version/docking-frames-common.src.bibliothek.gui.dock.common.CControl.java", "BodyUseAPI": ["bibliothek.gui.dock.common.intern.CDockableAccess.setUniqueId(<nulltype>)"], "Fixed commit": "19be93ff9e99302ed7d86709930c26f6b06b9a53", "Url": "https://api.github.com/repos/Benoker/DockingFrames", "Date": "2011-09-11T13:26:17Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((videoView) != null) { stopPosition = videoView.getCurrentPosition(); videoView.pause(); outState.putInt(\"position\", stopPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7539/buggy-version/app.src.main.java.me.ccrama.redditslide.Activities.MediaView.java", "BodyUseAPI": [], "Fixed commit": "d10129ff54c2c47644f30ba50fea2ae21573ba0d", "Url": "https://api.github.com/repos/Nxt3/Slide", "Date": "2016-03-23T01:36:52Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((videoView) != null) { stopPosition = videoView.getCurrentPosition(); videoView.pause(); outState.putInt(\"position\", stopPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7539/buggy-version/app.src.main.java.me.ccrama.redditslide.Fragments.MediaFragment.java", "BodyUseAPI": [], "Fixed commit": "d10129ff54c2c47644f30ba50fea2ae21573ba0d", "Url": "https://api.github.com/repos/Nxt3/Slide", "Date": "2016-03-23T01:36:52Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((addKeyValueForEncryptedKey) != null) { setProperty(camelContext, dataFormat, \"addKeyValueForEncryptedKey\", isAddKeyValueForEncryptedKey()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2365/buggy-version/camel-core.src.main.java.org.apache.camel.model.dataformat.XMLSecurityDataFormat.java", "BodyUseAPI": [], "Fixed commit": "37eb0b12ea0a01fc4ddb9acd8b229ce84685a2d8", "Url": "https://api.github.com/repos/chirino/camel", "Date": "2014-12-03T02:12:36Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.cmu.ini.impli_auth.auth_server.util.Util.canStartFaceReg()) { if ((faceRecognizer) == null) { faceRecognizer = new edu.cmu.ini.impli_auth.auth_server.face.LBPHFaceRecognizer(edu.cmu.ini.impli_auth.auth_server.request.CentralServer.WIDTH, edu.cmu.ini.impli_auth.auth_server.request.CentralServer.HEIGHT); } faceRecognizer.train(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5564/buggy-version/AuthenticationServer.src.main.java.edu.cmu.ini.impli_auth.auth_server.request.CentralServer.java", "BodyUseAPI": [], "Fixed commit": "77388b253ef28de4a8bca871539f444331e5517a", "Url": "https://api.github.com/repos/cmusv-sc/Practicum2014-Ericsson-Authentication", "Date": "2014-12-06T23:27:52Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.obeo.dsl.arduino.utils.ArduinoServices.getSession()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (session != null) { projectServices.openDashboard(session); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4778/buggy-version/fr.obeo.dsl.arduino.menus.src.fr.obeo.dsl.arduino.commands.OpenDashboardHandler.java", "BodyUseAPI": ["fr.obeo.dsl.arduino.utils.ProjectServices.openDashboard(org.eclipse.sirius.business.api.session.Session)"], "Fixed commit": "19682685d4ed964729a45a2c7854be7fbb2d4242", "Url": "https://api.github.com/repos/mbats/arduino", "Date": "2013-10-27T16:44:08Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (answer <= high) { java.lang.System.out.print((answer + \" \")); count = count - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7050/buggy-version/DebuggingExercises.FixDebugSix4.java", "BodyUseAPI": ["java.io.PrintStream.print(java.lang.String)"], "Fixed commit": "0f679b73b2690e90cd37dd8a58e26ad144afbadc", "Url": "https://api.github.com/repos/WestJavaClass/Chapter-6", "Date": "2017-04-21T17:20:52Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.bukkit.Bukkit.getWorld((((\"world_\" + (PlayerWorld.LAYERSPLEEF)) + \"_game_\") + gameID))) == null) { org.bukkit.Bukkit.getServer().createWorld(new org.bukkit.WorldCreator((((\"world_\" + (PlayerWorld.LAYERSPLEEF)) + \"_game_\") + gameID))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2154/buggy-version/chServer.src.louis.server.dewardt.LayerSpleef.java", "BodyUseAPI": ["org.bukkit.Bukkit.getServer().createWorld(org.bukkit.WorldCreator)"], "Fixed commit": "5e670319b895521265376592d2cd96dd58713c76", "Url": "https://api.github.com/repos/louisdw1/ChServer", "Date": "2014-04-05T18:02:44Z"},
{"Line": "=>528", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (facingRight) setNewAnimation(tongueAnim); else setNewAnimation(tongueAnimH);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1894/buggy-version/src.Player.java", "BodyUseAPI": [], "Fixed commit": "488dd83c78c2279cecd5d11f93989630b5c4d332", "Url": "https://api.github.com/repos/MicahAndWill/FruitFever", "Date": "2014-06-08T15:29:10Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null == (obj.get(\"flowID\"))) || (obj.get(\"flowID\").isJsonNull())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3335/buggy-version/sam.sam-server-war.src.main.java.org.talend.esb.sam.server.ui.UIProviderUtils.java", "BodyUseAPI": [], "Fixed commit": "cbc2e205526063624fd55b3f9bbf1a8773f0900f", "Url": "https://api.github.com/repos/Talend/tesb-rt-se", "Date": "2011-08-04T08:53:48Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null == (obj.get(\"flowID\"))) || (obj.get(\"flowID\").isJsonNull())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3335/buggy-version/sam.sam-server-war.src.main.java.org.talend.esb.sam.server.ui.UIProviderUtils.java", "BodyUseAPI": [], "Fixed commit": "cbc2e205526063624fd55b3f9bbf1a8773f0900f", "Url": "https://api.github.com/repos/Talend/tesb-rt-se", "Date": "2011-08-04T08:53:48Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getViewInstance()) != null) { getViewInstance().refreshThemeSkin(skin); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4942/buggy-version/base.src.main.java.com.liangmayong.base.presenters.BasePresenter.java", "BodyUseAPI": [], "Fixed commit": "f24398d569f35333a454ceadeed95be6db15bb05", "Url": "https://api.github.com/repos/LiangMaYong/android-base", "Date": "2016-09-11T10:26:14Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["response.request().url().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (urlFromResponse.equals(\"https://wuPATHworld.com/\")) urlFromResponse = \"https://wuPATHworld.com\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1782/buggy-version/okhttp-client.src.main.java.com.github.alessiop86.antiantibotcloudflare.http.adapters.okhttp.OkHttpHttpClientAdapter.java", "BodyUseAPI": [], "Fixed commit": "561c73890f0baf16c6024788016a62130ff112a6", "Url": "https://api.github.com/repos/alessiop86/anti-antibot-cloudflare", "Date": "2016-08-01T23:12:10Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (menuMultipleActions.isExpanded()) { menuMultipleActions.collapse(); }else { android.content.Intent toPass = new android.content.Intent(getApplicationContext(), com.clothapp.ImageFragment.class); toPass.putExtra(\"objectId\", photos.get(position).getObjectId()); startActivity(toPass); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/303/buggy-version/app.src.main.java.com.clothapp.HomepageActivity.java", "BodyUseAPI": ["com.getbase.floatingactionbutton.FloatingActionsMenu.collapse()"], "Fixed commit": "78240c492b1a7d761fd2f432bf0d456214dad36c", "Url": "https://api.github.com/repos/ClothAppProject/ClothAppAndroid", "Date": "2016-01-29T12:37:46Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentUser) != null) { for (com.google.firebase.auth.UserInfo profile : currentUser.getProviderData()) { if (FacebookAuthProvider.PROVIDER_ID.equals(profile.getProviderId())) { facebookUserId = profile.getUid(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2825/buggy-version/app.src.main.java.com.realtimehitchhiker.hitchgo.FirebaseService.java", "BodyUseAPI": [], "Fixed commit": "2093f5faa80b4e807a830af50306c195c79337ca", "Url": "https://api.github.com/repos/GilShoshan94/RealTimeHitchhiker", "Date": "2017-12-16T17:18:56Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mShareActionProvider) != null) { mShareActionProvider.setShareIntent(createShareForecastIntent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2378/buggy-version/app.src.main.java.com.example.android.sunshine.app.DetailActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "8a59a191d6e609b9ce10108186c95436bdfdbd14", "Url": "https://api.github.com/repos/Kevin321an/MySunshine", "Date": "2015-08-25T04:52:35Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (label == null) { return find(\"id NOT IN (SELECT message_id FROM Message_Label)\"); }else { return find(((\"id IN (SELECT message_id FROM Message_Label WHERE label_id=\" + (label.getId())) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8835/buggy-version/core.src.main.java.ch.dissem.bitmessage.ports.AbstractMessageRepository.java", "BodyUseAPI": ["ch.dissem.bitmessage.entity.valueobject.Label.getId()", "ch.dissem.bitmessage.ports.AbstractMessageRepository.find(((\"id IN (SELECT message_id FROM Message_Label WHERE label_id=\" + (label.getId())) + \")\"))"], "Fixed commit": "1eac64481376fd8ccc21d6160845ad7df0707ccd", "Url": "https://api.github.com/repos/Dissem/Jabit", "Date": "2016-08-15T09:52:43Z"},
{"Line": "=>635", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (n >= 3) { return 3; }else { return n; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8513/buggy-version/src.main.parser.createTask.java", "BodyUseAPI": [], "Fixed commit": "2da6ae5479a5d574269c725969c59ab806d68c16", "Url": "https://api.github.com/repos/cs2103jan2016-f13-2j/main", "Date": "2016-04-08T14:48:30Z"},
{"Line": "=>1834", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.lgq.rssreader.core.ReaderApp.getProfile()) != null) && ((com.lgq.rssreader.core.ReaderApp.getProfile().Id.length()) > 0)) url = \"https://cloud.feedly.com/v3/streams/contents?streamId=\" + (java.net.URLEncoder.encode(((\"user/\" + (com.lgq.rssreader.core.ReaderApp.getProfile().Id)) + \"/category/global.all\"), \"UTF-8\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8062/buggy-version/RssReader.src.com.lgq.rssreader.parser.FeedlyParser.java", "BodyUseAPI": [], "Fixed commit": "1d2c5c7a00eca8fb69516996bf5881407e470832", "Url": "https://api.github.com/repos/redelva/Android_RssReader", "Date": "2014-09-07T08:39:21Z"},
{"Line": "=>1840", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((url.length()) == 0) return blogs;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8062/buggy-version/RssReader.src.com.lgq.rssreader.parser.FeedlyParser.java", "BodyUseAPI": [], "Fixed commit": "1d2c5c7a00eca8fb69516996bf5881407e470832", "Url": "https://api.github.com/repos/redelva/Android_RssReader", "Date": "2014-09-07T08:39:21Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fsm.getState()) == (org.openpnp.machine.reference.ReferencePasteDispenseJobProcessor.State.Uninitialized)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3282/buggy-version/src.main.java.org.openpnp.machine.reference.ReferencePasteDispenseJobProcessor.java", "BodyUseAPI": [], "Fixed commit": "c6999e945202d69c33374e3115880fa8b3c44dcf", "Url": "https://api.github.com/repos/tracklogic/openpnp", "Date": "2016-08-03T00:49:15Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ansage.isTrumpf(CardSuit.HEARTS)) { return R.string.heartsSymbol; }else if (ansage.isTrumpf(CardSuit.DIAMONDS)) { return R.string.dimondsSymbol; }else if (ansage.isTrumpf(CardSuit.CLUBS)) { return R.string.clubsSymbol; }else if (ansage.isTrumpf(CardSuit.SPADES)) { return R.string.spadesSymbol; }else if ((ansage.getSpielModi()) == (ch.mbaumeler.jass.core.game.Ansage.SpielModi.OBENABE)) { return R.string.obenabe; }else if ((ansage.getSpielModi()) == (ch.mbaumeler.jass.core.game.Ansage.SpielModi.OBENABE)) { return R.string.undeuffe; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7711/buggy-version/AndroidJass.src.com.zuehlke.jhp.bucamp.android.jass.CardUtil.java", "BodyUseAPI": ["ch.mbaumeler.jass.core.game.Ansage.isTrumpf(CardSuit.CLUBS)", "ch.mbaumeler.jass.core.game.Ansage.isTrumpf(CardSuit.SPADES)", "ch.mbaumeler.jass.core.game.Ansage.isTrumpf(CardSuit.DIAMONDS)", "ch.mbaumeler.jass.core.game.Ansage.getSpielModi()", "ch.mbaumeler.jass.core.game.Ansage.getSpielModi()"], "Fixed commit": "24fae19f39ecc3ec2df9f0edd45463d9705ebb7c", "Url": "https://api.github.com/repos/stephan-christen/AndroidJass", "Date": "2012-09-13T07:24:58Z"},
{"Line": "=>510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rating) >= (numberOfStars)) { return numberOfStars; }else { return (rating) - ((rating) % (stepSize)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5561/buggy-version/simpleratingbar.src.main.java.com.iarcuschin.simpleratingbar.SimpleRatingBar.java", "BodyUseAPI": [], "Fixed commit": "1ef19a271f8d5e6f4919efc29891f615a08323e9", "Url": "https://api.github.com/repos/FlyingPumba/SimpleRatingBar", "Date": "2016-08-07T17:01:32Z"},
{"Line": "=>2116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (depotAndQuotedWorkspace.find()) { parsed.add(depotAndQuotedWorkspace.group(1)); parsed.add((((\"\\\"//\" + p4Client) + (depotAndQuotedWorkspace.group(2))) + \"\\\"\")); }else { java.util.regex.Matcher quotedDepotAndWorkspace = hudson.plugins.perforce.PerforceSCM.QUOTED_DEPOT_AND_WORKSPACE.matcher(line); if (quotedDepotAndWorkspace.find()) { parsed.add(((\"\\\"\" + (quotedDepotAndWorkspace.group(1))) + \"\\\"\")); parsed.add(((\"//\" + p4Client) + (quotedDepotAndWorkspace.group(2)))); }else { log.println(((\"Warning: Client Spec line invalid, ignoring. (\" + line) + \")\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4736/buggy-version/src.main.java.hudson.plugins.perforce.PerforceSCM.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.util.regex.Matcher.group(int)", "java.util.List<java.lang.String>.add(java.lang.String)", "java.util.regex.Matcher.group(int)"], "Fixed commit": "d5ba5f9e1cae2ea613f2ddfc3714067c91789698", "Url": "https://api.github.com/repos/miktap/perforce-plugin", "Date": "2012-05-01T22:05:18Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((onlineID) != null) { if ((onlineID.length()) == 6) { updateFirebase(name, walk, time, dist, newID); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/9139/buggy-version/app.src.main.java.online.cagocapps.walkingthedog.AddPet.java", "BodyUseAPI": [], "Fixed commit": "a6584372d1429fb93b08172c9dfdd6a484a6bb3b", "Url": "https://api.github.com/repos/calvingoc/WalkingTheDog", "Date": "2017-07-28T03:13:18Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((method.getName().equals(\"<init>\")) && (method.getArgs().contains(inter))) { isInConstructor = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1099/buggy-version/src.problem.detector.AdapterDetector.java", "BodyUseAPI": [], "Fixed commit": "3284b357e54807b5933abee3f4ffbd5d374c8e55", "Url": "https://api.github.com/repos/LoganErexson/CSSE374TeamProject", "Date": "2016-02-16T19:35:31Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((turnTime) > (com.teremok.influence.model.player.ComputerPlayer.TURN_DELAY)) match.switchPhase();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7387/buggy-version/influence.src.com.teremok.influence.model.player.ComputerPlayer.java", "BodyUseAPI": [], "Fixed commit": "fab120e801d1142fd1ed9c52150355eab36cbdda", "Url": "https://api.github.com/repos/teremokgames/influence", "Date": "2014-01-07T22:42:23Z"},
{"Line": "=>3070", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((version) <= 4) { bufferOffset = 1; }else { bufferOffset = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3515/buggy-version/src.de.lilawelt.zmachine.client.machine.CPUBase.java", "BodyUseAPI": [], "Fixed commit": "90db5dbdad186d991ed52ae1e50d3e6b5f6f4944", "Url": "https://api.github.com/repos/pierreh/zmachine", "Date": "2012-06-04T10:54:14Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.ActionEvent.getSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (modifyBoard(java.lang.Integer.parseInt(temp.getName()), (-1))) { turn = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8098/buggy-version/NN.src.bananaNetwork.GUI.TicTacToeBoard.java", "BodyUseAPI": [], "Fixed commit": "9046104e736a70df621405dc42a083f6ddd76be5", "Url": "https://api.github.com/repos/banana01/Neural-Network", "Date": "2016-01-22T18:51:11Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.ActionEvent.getSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (modifyBoard(java.lang.Integer.parseInt(temp.getName()), 1)) { turn = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8098/buggy-version/NN.src.bananaNetwork.GUI.TicTacToeBoard.java", "BodyUseAPI": [], "Fixed commit": "9046104e736a70df621405dc42a083f6ddd76be5", "Url": "https://api.github.com/repos/banana01/Neural-Network", "Date": "2016-01-22T18:51:11Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.numberOfResults) > 20) { this.numberOfResults = 20; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8998/buggy-version/app.src.main.java.edu.cwru.students.nutrientbuddy.Nutritionix.java", "BodyUseAPI": [], "Fixed commit": "7b329406811327955037ac943e819b4ad19df0f9", "Url": "https://api.github.com/repos/codegamc/NutrientBuddy", "Date": "2017-12-04T07:28:38Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.Inventory.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((item == null) || ((item.getType()) == (org.bukkit.Material.AIR))) { setSlot(i, itemStack); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4274/buggy-version/src.XZot1K.plugins.zl.libraries.inventorylib.CustomInventory.java", "BodyUseAPI": [], "Fixed commit": "fd5f6d3afd91c20de7a5daa67eed453ec1fb8705", "Url": "https://api.github.com/repos/XZot1K/ZotBox", "Date": "2017-01-14T02:22:39Z"},
{"Line": "=>1301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.drools.workbench.models.datamodel.oracle.OperatorsOracle.operatorRequiresList(operator)) { buf.append(\" \"); constraintValueBuilder.buildLHSFieldValue(buf, type, DataType.TYPE_COLLECTION, ((\"@{makeValueList(\" + value) + \")}\")); buf.append(\" \"); }else { buf.append(\" \"); constraintValueBuilder.buildLHSFieldValue(buf, type, fieldType, ((\"@{removeDelimitingQuotes(\" + value) + \")}\")); buf.append(\" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/34/buggy-version/drools-workbench-models.drools-workbench-models-commons.src.main.java.org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl.java", "BodyUseAPI": [], "Fixed commit": "2dcb2911dde3e984d3181417adc3b53a2d96336a", "Url": "https://api.github.com/repos/amitkhanchi/drools", "Date": "2015-03-23T17:20:16Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(parser.hasNext())) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4991/buggy-version/src.main.java.org.dasein.cloud.aws.compute.DescribeImagesResponseParser.java", "BodyUseAPI": [], "Fixed commit": "cd63cea0733296f231b9245c900cefac6b93bf44", "Url": "https://api.github.com/repos/TheWeatherCompany/dasein-cloud-aws", "Date": "2014-08-01T08:29:46Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((!(nextLine[2].equalsIgnoreCase(\"\"))) && (!(nextLine[3].equalsIgnoreCase(\"\")))) && (!(nextLine[4].equalsIgnoreCase(\"\")))) mcianalysis.AccelerationProcessing.writeLinearAcceleration(linear_writer, nextLine);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1438/buggy-version/src.mcianalysis.AccelerationProcessing.java", "BodyUseAPI": ["mcianalysis.AccelerationProcessing.writeLinearAcceleration(com.opencsv.CSVWriter,java.lang.String[])"], "Fixed commit": "e2afe747dbe6e3655f490cb12b33c84ffdab1926", "Url": "https://api.github.com/repos/pcoulomb/MCIAnalysis", "Date": "2016-12-01T01:04:31Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!res) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1192/buggy-version/src.com.stellaris.ScriptParser.java", "BodyUseAPI": [], "Fixed commit": "340336c6e10a39942b34b650444a9176bd377af6", "Url": "https://api.github.com/repos/WayOfModding/StellarisIDE", "Date": "2016-07-01T19:03:57Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Collections.min(java.util.List<java.lang.Integer>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((combo1.get(0)) > lowestRankedCardOnBoard) { return -1; }else { if ((board.size()) == 4) { return -1; }else { return 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2007/buggy-version/src.main.java.com.lennart.model.boardevaluation.PairEvaluator.java", "BodyUseAPI": [], "Fixed commit": "01283a816ae365cbc294f383ae7ba1556ba7c00d", "Url": "https://api.github.com/repos/coconutsRhealthy/headsuphelper", "Date": "2016-09-20T10:34:01Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Collections.min(java.util.List<java.lang.Integer>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((combo2.get(0)) > lowestRankedCardOnBoard) { return 1; }else { if ((board.size()) == 4) { return 1; }else { return 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2007/buggy-version/src.main.java.com.lennart.model.boardevaluation.PairEvaluator.java", "BodyUseAPI": [], "Fixed commit": "01283a816ae365cbc294f383ae7ba1556ba7c00d", "Url": "https://api.github.com/repos/coconutsRhealthy/headsuphelper", "Date": "2016-09-20T10:34:01Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world.isRemote) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1039/buggy-version/src.main.java.chanceCubes.blocks.BlockCubeDispenser.java", "BodyUseAPI": [], "Fixed commit": "82c2ef2b62227d9e01957e0e44765224a5ecae38", "Url": "https://api.github.com/repos/Turkey2349/ChanceCubes", "Date": "2017-01-13T03:08:20Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(org.pathwayeditor.visualeditor.VisualEditor,java.lang.String,java.lang.String,int,<nulltype>,nsMap.keySet().toArray(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (selection != null) { org.pathwayeditor.businessobjects.notationsubsystem.INotationSubsystem selectedNs = nsMap.get(selection); this.canvasPersistenceManager.createNewModelStream(selectedNs, \"New Map\"); this.currentFile = null; renderModel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6433/buggy-version/src.org.pathwayeditor.visualeditor.VisualEditorController.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.pathwayeditor.businessobjects.notationsubsystem.INotationSubsystem>.get(java.lang.String)"], "Fixed commit": "123113a4d4da0c50848aaf8ad6f2db904f555e95", "Url": "https://api.github.com/repos/stumoodie/PathwayEditor", "Date": "2012-06-26T22:04:13Z"},
{"Line": "=>540", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFabOpen) { animateFAB(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6654/buggy-version/app.src.main.java.vn.mbm.phimp.me.gallery.PhimpMeGallery.java", "BodyUseAPI": [], "Fixed commit": "ea8e3bd39fcc343f0584433a526d6b8479859220", "Url": "https://api.github.com/repos/CloudyPadmal/phimpme-android", "Date": "2017-04-02T15:52:10Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["GroupMembership.membershipList.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mBean.ipaddress.equals(java.net.InetAddress.getLocalHost().getHostAddress())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6427/buggy-version/boltdb.src.main.java.edu.uiuc.boltdb.groupmembership.SendGossipThread.java", "BodyUseAPI": [], "Fixed commit": "e04bf430d84d22c6159770138a0a7ffe715f73d1", "Url": "https://api.github.com/repos/adarshms/boltdb", "Date": "2013-09-29T17:00:48Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.joda.time.DateTime.now()", "org.joda.time.DateTime.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((org.joda.time.DateTimeComparator.getDateOnlyInstance().compare(currentDateTime, selectedDateTime)) == 0) { dateTime = currentDateTime; }else { dateTime = selectedDateTime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8691/buggy-version/app.src.main.java.org.hisp.dhis.android.eventcapture.views.FormSectionActivity.java", "BodyUseAPI": [], "Fixed commit": "9d18891dbb0502436bb4a7458a31bb8a91fcad6d", "Url": "https://api.github.com/repos/dhis2/dhis2-android-eventcapture", "Date": "2016-06-09T09:47:41Z"},
{"Line": "=>1745", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (suggestTime != null) { url = (url + \"&estimatedTime=\") + suggestTime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1203/buggy-version/src.main.java.org.ednovo.gooru.server.service.ClasspageServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "6faae739628c0c39f22eb3a70df7a859b4a059ec", "Url": "https://api.github.com/repos/nutan-gooru/Gooru-Web", "Date": "2014-09-15T12:59:02Z"},
{"Line": "=>1748", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (miScore != null) { url = (url + \"&minimumScore=\") + miScore; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1203/buggy-version/src.main.java.org.ednovo.gooru.server.service.ClasspageServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "6faae739628c0c39f22eb3a70df7a859b4a059ec", "Url": "https://api.github.com/repos/nutan-gooru/Gooru-Web", "Date": "2014-09-15T12:59:02Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (mImageView)) mImageView = ((android.widget.ImageView) (findViewById(R.id.anim_base_imageview)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1319/buggy-version/src.com.tencent.tws.burgeon.animation.apidemos.AnimationBaseActivity.java", "BodyUseAPI": [], "Fixed commit": "900cea230903830f09c2f26766369698d8fdcb34", "Url": "https://api.github.com/repos/rickdynasty/Android-burgeon-project", "Date": "2016-03-28T09:35:50Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.study.manager.repository.CourseRepository.findOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (courseEntity.getType().equals(Type.CUSTOM)) { com.study.manager.entity.UserCoursesEntity userCoursesEntity = userCoursesRepository.findBy(userId, courseId); java.util.List<com.study.manager.entity.UserCourseBooksEntity> userCourseBooksEntities = userCoursesEntity.getUserCourseBooksEntity(); for (com.study.manager.entity.UserCourseBooksEntity userCourseBooksEntity : userCourseBooksEntities) { com.study.manager.domain.Book book = new com.study.manager.domain.Book(); book.setId(userCourseBooksEntity.getId()); book.setDescription(userCourseBooksEntity.getDescription()); book.setNoOfPages(userCourseBooksEntity.getTotalNoOfPages()); book.setType(userCourseBooksEntity.getType().name()); book.setAuthor(userCourseBooksEntity.getAuthor()); book.setTitle(userCourseBooksEntity.getTitle()); bookList.add(book); } }else { bookList = bookTranslator.translateToDomain(courseBooksService.findBooks(courseId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1107/buggy-version/src.main.java.com.study.manager.service.CourseService.java", "BodyUseAPI": [], "Fixed commit": "2b8317b37bbc214ce4e0199e9220b26990cc1535", "Url": "https://api.github.com/repos/Sureszkumar/study-manager-service", "Date": "2016-11-11T19:15:40Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((game.getPhases()) != null) { gameJdo.setPhases(game.getPhases().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4035/buggy-version/src.main.java.org.celstec.arlearn2.jdo.manager.GameManager.java", "BodyUseAPI": ["game.getPhases().toString()", "org.celstec.arlearn2.jdo.classes.GameJDO.setPhases(game.getPhases().toString())", "org.celstec.arlearn2.beans.game.Game.getPhases()"], "Fixed commit": "58914bb0d88b898b4aa900620c04a4e0c7341dfd", "Url": "https://api.github.com/repos/WELTEN/dojo-ibl", "Date": "2016-10-24T09:31:51Z"},
{"Line": "=>1671", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (url.getFile().endsWith(\"nt\")) { contentType = \"text/rdf+nt\"; }else if (url.getFile().endsWith(\"n3\")) { contentType = \"text/rdf+n3\"; }else if (url.getFile().endsWith(\"rdf\")) { contentType = \"application/rdf+xml\"; }else if (url.getFile().endsWith(\"xml\")) { contentType = \"application/xml\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6424/buggy-version/src.main.java.eu.fusepool.datalifecycle.SourcingAdmin.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.net.URL.getFile()", "java.lang.String.endsWith(java.lang.String)", "java.net.URL.getFile()", "java.net.URL.getFile()"], "Fixed commit": "f8b48ce553ea4bb08b9274b06ed2fa41e2c66030", "Url": "https://api.github.com/repos/fusepool/datalifecycle", "Date": "2014-05-19T16:26:07Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (logLevel == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1344/buggy-version/src.main.java.net.virtalab.logger.Log.java", "BodyUseAPI": [], "Fixed commit": "bd976c245d1beef1ca610f1c32d515a84caa9b50", "Url": "https://api.github.com/repos/virtalab/logger", "Date": "2014-08-12T02:25:01Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((createWorldGui.selectedIndex) == (WorldType.DEFAULT.getWorldTypeID())) createWorldGui.selectedIndex = ModBiomes.worldTypeBOP.getWorldTypeID();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3984/buggy-version/src.main.java.biomesoplenty.common.handler.GuiEventHandler.java", "BodyUseAPI": [], "Fixed commit": "a28a7123af6b0cd903c2c588bd21956c2742eeb2", "Url": "https://api.github.com/repos/Glitchfiend/BiomesOPlenty", "Date": "2016-12-02T22:03:20Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.eclipse.jface.dialogs.MessageDialog.openQuestion(shell, \"Update Location\", \"Look in default location? (updates/repository)\")) == false) { org.eclipse.swt.widgets.DirectoryDialog repositoyLocation = new org.eclipse.swt.widgets.DirectoryDialog(shell); if ((repositoyLocation.open()) != null) { repositoryLocation = \"file:///\" + (repositoyLocation.getFilterPath().replaceAll(\"\\\\\\\\\", \"/\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5389/buggy-version/bundles.at.sunplugged.celldatabaseV2.rcp.main.src.at.sunplugged.celldatabasev2.rcp.main.handler.CheckForUpdatesHandler.java", "BodyUseAPI": [], "Fixed commit": "e3d200e150c33c30612a60c582668fad1d996394", "Url": "https://api.github.com/repos/freelancer1845/at.sunplugged.celldatabaseV2", "Date": "2017-11-30T11:33:25Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (status > 0) response.setStatus(status);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3038/buggy-version/src.de.highbyte_le.weberknecht.ControllerCore.java", "BodyUseAPI": ["javax.servlet.http.HttpServletResponse.setStatus(int)"], "Fixed commit": "79ff40192da1329f9206fd896473b4f49dc6c722", "Url": "https://api.github.com/repos/pmairif/weberknecht", "Date": "2013-10-12T19:49:35Z"},
{"Line": "=>523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sharegov.cirm.legacy.ActivityManager.determineAutoDefaultOutcome(org.semanticweb.owlapi.model.OWLNamedIndividual)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (autoDefaultOutcome != null) { updateActivity(serviceActivity, autoDefaultOutcome, null, null, \"auto\", bo, messages); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2133/buggy-version/src.java.org.sharegov.cirm.legacy.ActivityManager.java", "BodyUseAPI": ["org.sharegov.cirm.legacy.ActivityManager.updateActivity(org.semanticweb.owlapi.model.OWLNamedIndividual,org.semanticweb.owlapi.model.OWLNamedIndividual,<nulltype>,<nulltype>,java.lang.String,org.sharegov.cirm.BOntology,java.util.List<org.sharegov.cirm.legacy.CirmMessage>)"], "Fixed commit": "7d0abc961b0d37319dbcbaf6d3ee7de096724423", "Url": "https://api.github.com/repos/sharegov/opencirm", "Date": "2016-09-24T11:32:51Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tagIds == null) || (tagIds.isEmpty())) return new java.util.ArrayList<jp.ac.titech.psg.nakano.keyphrasememo.model.Memo>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/293/buggy-version/app.src.main.java.jp.ac.titech.psg.nakano.keyphrasememo.database.TableConnector.java", "BodyUseAPI": [], "Fixed commit": "96ac8672ed619022c9f61f9486d2a72a3d23a6e2", "Url": "https://api.github.com/repos/mi-nakano/KeyphraseMemo", "Date": "2015-07-23T05:37:03Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dk.statsbiblioteket.medieplatform.autonomous.DomsEventStorage.getAllRoundTrips(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (roundtrips != null) { for (dk.statsbiblioteket.medieplatform.autonomous.Batch roundtrip : roundtrips) { if ((roundtrip.getRoundTripNumber()) > roundTripNumber) { message += (((\"Roundtrip (\" + (roundtrip.getRoundTripNumber())) + \") is newer than this roundtrip (\") + roundTripNumber) + \"), so this roundtrip will not be triggered here\\n\"; dk.statsbiblioteket.medieplatform.autonomous.newspaper.CreateBatch.log.warn(\"Not adding new batch '{}' roundtrip {} because a newer roundtrip {} exists\", batchId, roundTripNumber, roundtrip.getRoundTripNumber()); newerRoundTripAlreadyReceived = true; } if (dk.statsbiblioteket.medieplatform.autonomous.newspaper.CreateBatch.isApproved(roundtrip)) { message += (((\"Roundtrip (\" + (roundtrip.getRoundTripNumber())) + \") is already approved, so this roundtrip (\") + roundTripNumber) + \") should not be triggered here\\n\"; dk.statsbiblioteket.medieplatform.autonomous.newspaper.CreateBatch.log.warn(\"Stopping batch '{}' roundtrip {} because another roundtrip {} is already approved\", batchId, roundTripNumber, roundtrip.getRoundTripNumber()); alreadyApproved = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6015/buggy-version/src.main.java.dk.statsbiblioteket.medieplatform.autonomous.newspaper.CreateBatch.java", "BodyUseAPI": [], "Fixed commit": "10be93e846e5bb8b870668d12f68793a9e4aba85", "Url": "https://api.github.com/repos/statsbiblioteket/newspaper-batch-trigger", "Date": "2014-09-08T10:37:02Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRemindersGroup) != null) { for (int i = 0; i < (mRemindersGroup.length); i++) { str += ((\"\\nNO.\" + i) + \":\") + (mRemindersGroup[i]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3072/buggy-version/src.com.android.calendar.therapy.Therapy.java", "BodyUseAPI": [], "Fixed commit": "e9f91bac169781afdc62aa71e3884757242dd0b8", "Url": "https://api.github.com/repos/sausame/calendar", "Date": "2013-12-26T03:20:50Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.calendar.therapy.TherapyManager.add(com.android.calendar.therapy.Therapy)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isOkay) { manager.save(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3072/buggy-version/src.com.android.calendar.CalendarDatabase.java", "BodyUseAPI": [], "Fixed commit": "e9f91bac169781afdc62aa71e3884757242dd0b8", "Url": "https://api.github.com/repos/sausame/calendar", "Date": "2013-12-26T03:20:50Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.neet.cf.overworld.util.CFVars.VOLUME) <= 0) com.neet.cf.overworld.util.CFVars.VOLUME = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2798/buggy-version/CurtainFire-core.src.com.neet.cf.screens.OptionsScreen.java", "BodyUseAPI": [], "Fixed commit": "0f7dd3690c9e4bde189282bf62ad952ebaddb4aa", "Url": "https://api.github.com/repos/Hoenn/CurtainFire", "Date": "2017-08-18T21:01:43Z"},
{"Line": "=>1290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((relation.getStatus()) == (com.avrgaming.civcraft.object.Relation.Status.WAR)) { relation.setStatus(Relation.Status.NEUTRAL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4657/buggy-version/civcraft.src.com.avrgaming.civcraft.object.Civilization.java", "BodyUseAPI": ["com.avrgaming.civcraft.object.Relation.setStatus(Relation.Status.NEUTRAL)"], "Fixed commit": "f4447cc9c7ff8381d9ca5063dbfede977355632d", "Url": "https://api.github.com/repos/ataranlen/civcraft", "Date": "2016-01-07T22:00:51Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(res.next())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3251/buggy-version/DBSYS_SS15.src.de.dbsys.backend.Backend.java", "BodyUseAPI": [], "Fixed commit": "f6a2e588e9e6981795c96a0d40d3b1fc738350a9", "Url": "https://api.github.com/repos/aullik/DBSYS_SS15", "Date": "2015-06-30T03:04:32Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasNext()) { ++(cur); org.ns.event.Listener<E> l = ((org.ns.event.Listener<E>) (listeners[cur])); return l; }else { throw new java.util.NoSuchElementException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7740/buggy-version/ns-common.src.main.java.org.ns.event.Listeners.java", "BodyUseAPI": [], "Fixed commit": "319f6cbc6b3cd14fe13b8f23ea2f07bba2f975a4", "Url": "https://api.github.com/repos/nikolaas/libs", "Date": "2014-02-26T15:12:17Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sourceblock.getWorld().equals(player.getWorld()))) { remove(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4226/buggy-version/Bending2.src.waterbending.OctopusForm.java", "BodyUseAPI": [], "Fixed commit": "0c9487d687a24731c9d86bfc039db0dd8f7e42c9", "Url": "https://api.github.com/repos/orion304/MinecraftTLA", "Date": "2012-09-17T01:15:03Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(kalender.getBezeichnung())) { throw new de.biersaecke.oth.event_evaluator.persistence.utils.IncorrectEntityConfigurationException(IncorrectEntityConfigurationException.ConfigErrorEnum.MISSING_CALENDAR_ARGUMENTS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4413/buggy-version/src.main.java.de.biersaecke.oth.event_evaluator.persistence.ui.EditKalenderSessionBean.java", "BodyUseAPI": [], "Fixed commit": "99510ebd538f232dc87f8215e63c0c9269ee2172", "Url": "https://api.github.com/repos/bim41337/sw-event-evaluator-web", "Date": "2017-12-19T20:04:23Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(exHome.exists())) && (isCluster())) { context.putProperty(\"SUFFIX\", (\"_\" + (getRegion()))); }else { context.putProperty(\"SUFFIX\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2001/buggy-version/ngrinder-controller.src.main.java.org.ngrinder.infra.config.Config.java", "BodyUseAPI": [], "Fixed commit": "76045cdabf372c11c369be5cb63229eb36c375f2", "Url": "https://api.github.com/repos/nhnopensource/ngrinder", "Date": "2012-12-18T04:59:07Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getActivity().getActionBar()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (actionBar != null) { actionBar.setTitle(getString(R.string.app_name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1659/buggy-version/app.src.main.java.com.nick.instajet.ProfilePageFragment.java", "BodyUseAPI": ["android.app.ActionBar.setTitle(getString(R.string.app_name))"], "Fixed commit": "1fcd94cae553c3dc80a4a59190af2d513ddf2e0e", "Url": "https://api.github.com/repos/nicholaslum444/InstaJet", "Date": "2015-05-16T07:34:43Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.tree.TreePath.getLastPathComponent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((firstNode.getLevel()) != 0) { edu.wpi.cs.wpisuitetng.modules.requirementsmanager.models.Requirement anRequirement = ((edu.wpi.cs.wpisuitetng.modules.requirementsmanager.models.Requirement) (firstNode.getUserObject())); if (((anRequirement.getStatus()) == (edu.wpi.cs.wpisuitetng.modules.requirementsmanager.commonenums.Status.DELETED)) || ((anRequirement.getStatus()) == (edu.wpi.cs.wpisuitetng.modules.requirementsmanager.commonenums.Status.COMPLETE))) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4134/buggy-version/RequirementsManager.src.edu.wpi.cs.wpisuitetng.modules.requirementsmanager.view.subrequirements.subrequirementsTree.SubReqTreeTransferHandler.java", "BodyUseAPI": ["javax.swing.tree.DefaultMutableTreeNode.getUserObject()"], "Fixed commit": "bbe754920d33921451bd1b899072bc6239f7d30d", "Url": "https://api.github.com/repos/333fred/wpi-suite-tng", "Date": "2013-04-21T21:32:53Z"},
{"Line": "=>1022", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((t.isContain(external)) && (t.isContain(unique))) tl.setSupLinks(((tl.getSupLinks()) - (t.getSupLinks()))); else tl.setSupLinks(((tl.getSupLinks()) + (t.getSupLinks())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3626/buggy-version/src.agis.ps.util.PathBuilder.java", "BodyUseAPI": ["agis.ps.link.TriadLink.setSupLinks(((tl.getSupLinks()) + (t.getSupLinks())))", "agis.ps.link.TriadLink.setSupLinks(((tl.getSupLinks()) - (t.getSupLinks())))", "agis.ps.link.TriadLink.getSupLinks()", "agis.ps.link.TriadLink.getSupLinks()"], "Fixed commit": "202e6e0a7ec0d35a44f209be66eb1e2662896e9c", "Url": "https://api.github.com/repos/shingocat/lrscaf", "Date": "2016-08-24T08:14:15Z"},
{"Line": "=>958", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isExist) { tempUniques.add(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3626/buggy-version/src.agis.ps.util.PathBuilder.java", "BodyUseAPI": [], "Fixed commit": "202e6e0a7ec0d35a44f209be66eb1e2662896e9c", "Url": "https://api.github.com/repos/shingocat/lrscaf", "Date": "2016-08-24T08:14:15Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(breadcrumbItems.isEmpty())) { breadcrumbItems.remove(((breadcrumbItems.size()) - 1)); breadcrumbItems.add(org.roda.wui.client.main.BreadcrumbUtils.getBreadcrumbItem(representation)); breadcrumb.updatePath(breadcrumbItems); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3749/buggy-version/roda-ui.roda-wui.src.main.java.org.roda.wui.client.browse.BrowseRepresentation.java", "BodyUseAPI": ["java.util.List<org.roda.wui.client.main.BreadcrumbItem>.size()", "org.roda.wui.client.main.BreadcrumbPanel.updatePath(java.util.List<org.roda.wui.client.main.BreadcrumbItem>)", "java.util.List<org.roda.wui.client.main.BreadcrumbItem>.add(org.roda.wui.client.main.BreadcrumbUtils.getBreadcrumbItem(representation))", "java.util.List<org.roda.wui.client.main.BreadcrumbItem>.remove(((breadcrumbItems.size()) - 1))"], "Fixed commit": "00fbc78cfe0905f75fe7ee5b44f95f3971aca3e6", "Url": "https://api.github.com/repos/keeps/roda", "Date": "2017-11-16T14:47:06Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((environment) != null) { validator = environment.getValidator(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8927/buggy-version/dropwizard-client.src.main.java.io.dropwizard.client.JerseyClientBuilder.java", "BodyUseAPI": [], "Fixed commit": "d52028ef98bddf957149e1b09b5f613bfcf75ef7", "Url": "https://api.github.com/repos/dropwizard/dropwizard", "Date": "2015-04-23T15:00:39Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((options) == null) { options = new java.util.ArrayList<java.lang.String>(); for (au.com.mineauz.minigames.minigame.reward.RewardRarity rarity : au.com.mineauz.minigames.minigame.reward.RewardRarity.values()) { options.add(rarity.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7288/buggy-version/Minigames.src.au.com.mineauz.minigames.minigame.reward.ItemReward.java", "BodyUseAPI": [], "Fixed commit": "1dc0b2adfc0fa5bb5c45c8a23aea5ca825b1eaad", "Url": "https://api.github.com/repos/Razz0991/Minigames", "Date": "2014-12-04T16:45:03Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cls != (logisticspipes.network.packets.DummyPacket.class)) { java.lang.System.out.println(((\"Packet: \" + (c.getSimpleName())) + \" loaded\")); }else { java.lang.System.out.println(((\"Packet: \" + (c.getSimpleName())) + \" could not be loaded.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2382/buggy-version/common.logisticspipes.network.PacketHandler.java", "BodyUseAPI": [], "Fixed commit": "9c4af791b99bebab90ad02d4834854ad13e41f9f", "Url": "https://api.github.com/repos/RS485/LogisticsPipes-Dev", "Date": "2013-07-12T21:27:05Z"},
{"Line": "=>648", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lemin < 0) && (lemax >= ((java.lang.Long.MAX_VALUE) + lemin))) floatOverflow = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5445/buggy-version/src.main.java.water.fvec.NewChunk.java", "BodyUseAPI": [], "Fixed commit": "90e262e32a59b37fd2c5a2935943ec681a9fff61", "Url": "https://api.github.com/repos/0xdata/h2o", "Date": "2014-10-02T22:55:41Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dest.isConcrete())) return java.util.Collections.emptySet();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1327/buggy-version/src.soot.jimple.infoflow.InfoflowProblem.java", "BodyUseAPI": [], "Fixed commit": "c53783aca5405be0e5c4b5fa12df344c3f7b04d7", "Url": "https://api.github.com/repos/secure-software-engineering/soot-infoflow", "Date": "2013-07-17T07:30:37Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.names()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (names != null) { for (int i = 0; i < (names.length()); i++) { query = query.replace((\":\" + (names.getString(i))), ((\"\\'\" + (args.getString(names.getString(i)).replace('\\'', '\"'))) + \"\\'\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1225/buggy-version/src.com.ichi2.libanki.Finder.java", "BodyUseAPI": ["org.json.JSONArray.length()", "org.json.JSONArray.getString(int)", "java.lang.String.replace((\":\" + (names.getString(i))),((\"\\'\" + (args.getString(names.getString(i)).replace('\\'', '\"'))) + \"\\'\"))", "args.getString(names.getString(i)).replace(char,char)", "org.json.JSONObject.getString(names.getString(i))", "org.json.JSONArray.getString(int)"], "Fixed commit": "23edbaa54149f5569d25ab53aeef5108e2ce1286", "Url": "https://api.github.com/repos/nobnago/Anki-Android", "Date": "2012-05-16T20:08:06Z"},
{"Line": "=>667", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["soot.Scene.v().getSootClass(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(sootcls.isPhantomClass())) { if (!(sootcls.isApplicationClass())) { sootcls.setLibraryClass(); } for (soot.SootMethod clinit : soot.EntryPoints.v().clinitsOf(sootcls)) { addEdge(src, srcUnit, clinit, Kind.CLINIT); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2354/buggy-version/src.soot.jimple.toolkits.callgraph.OnFlyCallGraphBuilder.java", "BodyUseAPI": ["soot.SootClass.isApplicationClass()", "soot.SootClass.setLibraryClass()", "soot.EntryPoints.v().clinitsOf(soot.SootClass)"], "Fixed commit": "8530db059bc26051de59831cca921b649dac95de", "Url": "https://api.github.com/repos/Sable/soot", "Date": "2013-07-31T08:51:48Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(java.util.Objects.equals(firstLine, lastLine))) && (java.util.Objects.equals(lastLine, currentLine))) { damageNumber = 1; damageFound = 1; }else if ((!(java.util.Objects.equals(firstLine, currentLine))) && (java.util.Objects.equals(firstLine, lastLine))) { damageNumber = 3; damageFound = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7975/buggy-version/src.edu.fsu.cs.cen4021.armory.TheChosenOneAxe.java", "BodyUseAPI": ["java.util.Objects.equals(java.lang.String,java.lang.String)", "java.util.Objects.equals(java.lang.String,java.lang.String)"], "Fixed commit": "b71fab4b5e92ea8b6aedcd9cf39682f94f0df6d4", "Url": "https://api.github.com/repos/jeeriff/GitAssignment", "Date": "2017-02-04T01:45:42Z"},
{"Line": "=>876", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(opened.get(downPosition))) && ((velocityTracker.getXVelocity()) > 0)) { swap = false; }else if ((((minFlingVelocity) <= velocityX) && (velocityX <= (maxFlingVelocity))) && ((velocityY * 2) < velocityX)) { swapRight = (velocityTracker.getXVelocity()) > 0; if (SwipeListView.DEBUG) { android.util.Log.d(SwipeListView.TAG, (((\"swapRight: \" + swapRight) + \" - swipingRight: \") + (swipingRight))); } if ((swapRight != (swipingRight)) && ((swipeActionLeft) != (swipeActionRight))) { swap = false; }else if (((opened.get(downPosition)) && (openedRight.get(downPosition))) && swapRight) { swap = false; }else if (((opened.get(downPosition)) && (!(openedRight.get(downPosition)))) && (!swapRight)) { swap = false; }else { swap = true; } }else if ((java.lang.Math.abs(deltaX)) > ((viewWidth) / 2)) { swap = true; swapRight = deltaX > 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5236/buggy-version/libraries.haru_swipelistview.src.com.fortysevendeg.swipelistview.SwipeListViewTouchListener.java", "BodyUseAPI": ["java.util.List<java.lang.Boolean>.get(int)", "java.util.List<java.lang.Boolean>.get(int)", "java.util.List<java.lang.Boolean>.get(int)", "java.util.List<java.lang.Boolean>.get(int)", "android.view.VelocityTracker.getXVelocity()"], "Fixed commit": "feb244ddd4a048935d4fa369cd72a577e898abce", "Url": "https://api.github.com/repos/HubHaru/haru_android", "Date": "2014-08-03T13:59:43Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(string.equals(\"\"))) checker.addDataToQueue(string);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7172/buggy-version/src.xml.states.ReadDataState.java", "BodyUseAPI": ["xml.XMLCheck.addDataToQueue(java.lang.String)"], "Fixed commit": "30c7dbd4f084f1348eb6e737f08a9d3b89f4fb9f", "Url": "https://api.github.com/repos/matthew-roberts2/XMLParser", "Date": "2016-04-11T19:39:54Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(string.equals(\"\"))) string += \" \";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7172/buggy-version/src.xml.states.ReadDataState.java", "BodyUseAPI": [], "Fixed commit": "30c7dbd4f084f1348eb6e737f08a9d3b89f4fb9f", "Url": "https://api.github.com/repos/matthew-roberts2/XMLParser", "Date": "2016-04-11T19:39:54Z"},
{"Line": "=>699", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.github.sipuada.UserAgent, java.util.Set<java.lang.String>>.get(org.github.sipuada.UserAgent)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (activeCallIds != null) { synchronized(activeCallIds) { java.util.Iterator<java.lang.String> callIdsIterator = activeCallIds.iterator(); while (callIdsIterator.hasNext()) { java.lang.String callId = callIdsIterator.next(); callIdToActiveUserAgent.remove(callId); } activeUserAgentCallIds.remove(userAgent); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1375/buggy-version/src.org.github.sipuada.Sipuada.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.iterator()"], "Fixed commit": "72e685e5cb9e1d33d60a559482f6da3a3419ce88", "Url": "https://api.github.com/repos/Sipuada/sipuada", "Date": "2016-02-26T17:44:55Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((myEssay.get(i)) != \",\") && ((myEssay.get(i)) != \".\")) && ((myEssay.get(i)) != \"\\n\\t.\")) { essay += myEssay.get(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3390/buggy-version/EssayWriter.src.essaywriter.WritingCenter.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "6898b1aae1ca039fc802573dedc6c4311a27e823", "Url": "https://api.github.com/repos/atmarsh/APCSQuarterProject", "Date": "2015-05-04T17:41:09Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jarFilePath.lastIndexOf('!')) != (-1)) jarFilePath = jarFilePath.substring(0, jarFilePath.lastIndexOf('!'));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4537/buggy-version/Bootstrap.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(char)"], "Fixed commit": "2af2dea74b27be8b3b9e28ee58467e3c32772fdf", "Url": "https://api.github.com/repos/hea3ven/bootstrap", "Date": "2015-08-31T22:41:44Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.esa.s2tbx.dataio.s2.l3.L3GranuleMetadataPSD13.getAttributeValues(L3PSD13Constants.PATH_GRANULE_METADATA_PVI_FILENAME)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (attributeValuesPVI != null) { for (java.lang.String pviName : attributeValuesPVI) { try { int aux = java.lang.Integer.parseInt(pviName.substring(((pviName.lastIndexOf(\"_\")) + 1))); if (aux > maxIndex) maxIndex = aux; } catch (java.lang.Exception e) { } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7178/buggy-version/s2tbx-s2msi-reader.src.main.java.org.esa.s2tbx.dataio.s2.l3.L3GranuleMetadataPSD13.java", "BodyUseAPI": [], "Fixed commit": "4547c4ae7be8bcfc34743a454ab686eb74996dd2", "Url": "https://api.github.com/repos/senbox-org/s2tbx", "Date": "2017-07-28T16:35:12Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["minemarker.ShipOrders.getOrdersForTurn(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (turnOrders != null) { mEnvironment.getShip().executeTurnOrders(turnOrders); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1737/buggy-version/src.main.java.minemarker.SimulationState.java", "BodyUseAPI": ["mEnvironment.getShip().executeTurnOrders(minemarker.ShipTurnOrders)"], "Fixed commit": "10c303e1a9ffcb1bc37d97c6386eb91a5abdfc3d", "Url": "https://api.github.com/repos/SteveDraper/MineMarker", "Date": "2015-08-09T19:42:55Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((linesList.size()) > 0) && ((linesList.get(((linesList.size()) - 1)).length()) == 0)) { linesList.remove(((linesList.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1737/buggy-version/src.main.java.minemarker.ScriptFileParser.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.remove(int)"], "Fixed commit": "10c303e1a9ffcb1bc37d97c6386eb91a5abdfc3d", "Url": "https://api.github.com/repos/SteveDraper/MineMarker", "Date": "2015-08-09T19:42:55Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((m_Connection) != null) && (m_Connection.isConnected())) { m_Connection.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1861/buggy-version/src.main.java.net.wimpi.modbus.io.ModbusTCPTransaction.java", "BodyUseAPI": ["net.wimpi.modbus.net.TCPMasterConnection.close()"], "Fixed commit": "b900e7121a2756dbfc345b8ce2fc9d60136c272c", "Url": "https://api.github.com/repos/openhab/jamod", "Date": "2015-10-02T06:06:45Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != preferredBackupWindow) { java.lang.String startTime = ((java.lang.String.format(\"%02d\", preferredBackupWindow.getStartHour())) + \":\") + (java.lang.String.format(\"%02d\", preferredBackupWindow.getStartMinute())); updatedBackupConfiguration.setStartTime(startTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4103/buggy-version/src.main.java.org.dasein.cloud.google.platform.RDS.java", "BodyUseAPI": ["org.dasein.cloud.TimeWindow.getStartMinute()", "java.lang.String.format(java.lang.String,preferredBackupWindow.getStartMinute())", "java.lang.String.format(java.lang.String,preferredBackupWindow.getStartHour())", "org.dasein.cloud.TimeWindow.getStartHour()"], "Fixed commit": "ae91b56e1d81cab796a9e75c394dad8dfe462def", "Url": "https://api.github.com/repos/unwin/dasein-cloud-google", "Date": "2015-01-07T00:41:40Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (temp != null) { log.println(\"DELETING TEMP DIR\"); de.skuzzle.polly.installer.util.FileUtil.deleteRecursive(temp); log.println(\"DELETING ZIP FILE\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7174/buggy-version/installer.src.de.skuzzle.polly.installer.Installer.java", "BodyUseAPI": ["de.skuzzle.polly.installer.util.FileUtil.deleteRecursive(java.io.File)"], "Fixed commit": "2e03217a32d22985d2382ac0c56c3298581f6bb4", "Url": "https://api.github.com/repos/skuzzle/polly", "Date": "2012-04-18T09:31:16Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (summoner.hasUsed(featureInfo)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2098/buggy-version/workspace.CardFantasyCore.src.cfvbaibai.cardfantasy.engine.feature.SummonFeature.java", "BodyUseAPI": [], "Fixed commit": "0225bfb44e2e87e66adf3e48301421405cb0d0ba", "Url": "https://api.github.com/repos/cfvbaibai/CardFantasy", "Date": "2014-12-30T05:16:22Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (error instanceof com.android.volley.AuthFailureError) { login(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7307/buggy-version/app.src.main.java.sakuraiandco.com.gtcollab.services.MyFirebaseInstanceIDService.java", "BodyUseAPI": [], "Fixed commit": "cf7bff1b07e8672c9f8af20537b7747f695c9e1a", "Url": "https://api.github.com/repos/sakuraiandco/GTCollab", "Date": "2017-11-27T01:22:54Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flags == (javax.transaction.xa.XAResource.TMNOFLAGS)) { try { localAutoCommitMode = conn.getAutoCommit(); conn.setAutoCommit(false); } catch (java.sql.SQLException ex) { throw new org.postgresql.xa.PGXAException(org.postgresql.util.GT.tr(\"Error disabling autocommit\"), ex, javax.transaction.xa.XAException.XAER_RMERR); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2764/buggy-version/org.postgresql.xa.PGXAConnection.java", "BodyUseAPI": [], "Fixed commit": "f676e48853d88b68248a3f0a80ffbde9cc468782", "Url": "https://api.github.com/repos/chunlinyao/pgjdbc", "Date": "2015-11-26T07:54:17Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((valuePairs.size()) > 0) { valuePairs.remove(0); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3895/buggy-version/src.com.redpois0n.graphs.network.NetworkGraph.java", "BodyUseAPI": ["java.util.List<com.redpois0n.graphs.network.ValuePair>.remove(int)"], "Fixed commit": "3547e63840ad7519e8e9fa340664fc473199917a", "Url": "https://api.github.com/repos/redpois0n/graphslib", "Date": "2015-01-22T14:49:39Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (str.equals(\"%\")) { buf.append(\"%%\"); }else { buf.append(pcgen.io.EntityEncoder.encode(str)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7152/buggy-version/code.src.java.pcgen.cdom.helper.Aspect.java", "BodyUseAPI": ["pcgen.io.EntityEncoder.encode(java.lang.String)", "java.lang.StringBuilder.append(pcgen.io.EntityEncoder.encode(str))"], "Fixed commit": "814de900131aac97bf8ade18951fc970792bf9e7", "Url": "https://api.github.com/repos/PCGen/pcgen", "Date": "2015-12-20T07:34:04Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (permissionsChecker.checkpermissions(player, \"CommandLogger.spy\")) { final java.lang.String[] args1 = args; final org.bukkit.entity.Player player1 = player; this.getServer().getScheduler().scheduleAsyncDelayedTask(this, new java.lang.Runnable() { @java.lang.Override public void run() { try { if (SQL.isindb(player1.getName())) { int temp = SQL.getToggle(player1.getName()); if (temp != (-1)) { if (temp == 1) { SQL.UpdateXP(player1.getName(), 0); temp = 0; }else if (temp == 0) { SQL.UpdateXP(player1.getName(), 1); SQL.PrepareDBPlayersDB(player1.getName()); temp = 1; }else { temp = -2; } } PlayerLogger(player1, ((\"Sucessfully toggled spy to \" + temp) + \" !\"), \"\"); }else { SQL.InsertAuction(player1.getName(), 1); PlayerLogger(player1, \"Sucessfully toggled spy to true!\", \"\"); } } catch (java.sql.SQLException ex) { java.util.logging.Logger.getLogger(me.ibhh.CommandLogger.CommandLogger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } } }, 3); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1083/buggy-version/src.me.ibhh.CommandLogger.CommandLogger.java", "BodyUseAPI": [], "Fixed commit": "fb741833f6bc9d023eb0f9b03e1f651bc7b7833b", "Url": "https://api.github.com/repos/ibhh/CommandLogger", "Date": "2012-05-05T09:53:56Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getConfig().getBoolean(\"enableingameandsql\")) { SQL.CloseCon(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1083/buggy-version/src.me.ibhh.CommandLogger.CommandLogger.java", "BodyUseAPI": [], "Fixed commit": "fb741833f6bc9d023eb0f9b03e1f651bc7b7833b", "Url": "https://api.github.com/repos/ibhh/CommandLogger", "Date": "2012-05-05T09:53:56Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (l == 0L) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5418/buggy-version/src.de.ub0r.android.callmeter.data.LogRunnerReceiver.java", "BodyUseAPI": [], "Fixed commit": "d631045ea17a6d7a88baee81bd9b0f57601e2ede", "Url": "https://api.github.com/repos/felixb/callmeter", "Date": "2010-12-20T21:27:07Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Float.isNaN(this.snow)) { this.snow = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4845/buggy-version/src.main.java.com.spectral.spectral_guns.entity.extended.ExtendedPlayer.java", "BodyUseAPI": [], "Fixed commit": "85bdf7b54c7d2fe6dc6afefeb3808294be43aae1", "Url": "https://api.github.com/repos/TeamSpectral/SpectralGuns", "Date": "2015-07-20T16:45:41Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(this.recoilYaw)) { this.recoilYaw = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4845/buggy-version/src.main.java.com.spectral.spectral_guns.entity.extended.ExtendedPlayer.java", "BodyUseAPI": [], "Fixed commit": "85bdf7b54c7d2fe6dc6afefeb3808294be43aae1", "Url": "https://api.github.com/repos/TeamSpectral/SpectralGuns", "Date": "2015-07-20T16:45:41Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(this.recoilPitch)) { this.recoilPitch = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4845/buggy-version/src.main.java.com.spectral.spectral_guns.entity.extended.ExtendedPlayer.java", "BodyUseAPI": [], "Fixed commit": "85bdf7b54c7d2fe6dc6afefeb3808294be43aae1", "Url": "https://api.github.com/repos/TeamSpectral/SpectralGuns", "Date": "2015-07-20T16:45:41Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == 1) return \"1\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2059/buggy-version/LeetCode.src.main.java.esay.CountAndSay.java", "BodyUseAPI": [], "Fixed commit": "7d8c3e162c35f5fb3e6a93d5bdfe5c345cbbff1d", "Url": "https://api.github.com/repos/xinxinyixx/LeetCode", "Date": "2017-03-12T14:45:06Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.verapdf.pd.font.cmap.ToUnicodeInterval.getFFFEFromUnicode(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fffe == null) { fffe = org.verapdf.pd.font.cmap.ToUnicodeInterval.getFEFFFromUnicode(unicode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7303/buggy-version/src.main.java.org.verapdf.pd.font.cmap.ToUnicodeInterval.java", "BodyUseAPI": [], "Fixed commit": "661c780dbb508af7ad927cb6bdcc5e2c36da8729", "Url": "https://api.github.com/repos/shem-sergey/veraPDF-pdflib", "Date": "2017-08-09T09:26:55Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPieDirection) == (PieDirection.COUNTERCLOCKWISE)) { return java.lang.Math.abs(getStartAngle(index)); }else { return 360 - (java.lang.Math.abs(getEndAngle(index))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4136/buggy-version/app.src.main.java.com.profilechart.profile.AngleManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "a4cd584e091896287713e3b68e354b0f0f42c19d", "Url": "https://api.github.com/repos/VisualGhost/ProfileChart", "Date": "2015-12-10T11:38:18Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPieDirection) == (PieDirection.COUNTERCLOCKWISE)) { return (mAngles[((mAngles.length) - 1)]) - 360; }else { return 360 - (mAngles[((mAngles.length) - 1)]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4136/buggy-version/app.src.main.java.com.profilechart.profile.AngleManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "a4cd584e091896287713e3b68e354b0f0f42c19d", "Url": "https://api.github.com/repos/VisualGhost/ProfileChart", "Date": "2015-12-10T11:38:18Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPieDirection) == (PieDirection.COUNTERCLOCKWISE)) { return java.lang.Math.abs(getEndAngle(index)); }else { return 360 - (java.lang.Math.abs(getStartAngle(index))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4136/buggy-version/app.src.main.java.com.profilechart.profile.AngleManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "a4cd584e091896287713e3b68e354b0f0f42c19d", "Url": "https://api.github.com/repos/VisualGhost/ProfileChart", "Date": "2015-12-10T11:38:18Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sourceFolder.endsWith(repairer.JmlProgram.SEPARATOR))) { sourceFolder += repairer.JmlProgram.SEPARATOR; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4125/buggy-version/src.main.java.repairer.JmlProgram.java", "BodyUseAPI": [], "Fixed commit": "127fded55d3bdbf7ffb4895bf5d097ff135ed5df", "Url": "https://api.github.com/repos/zeminlu/stryker", "Date": "2014-09-25T18:50:36Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((plainSelect.getDistinct()) != null) { unsupported = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2689/buggy-version/obdalib-core.src.main.java.org.semanticweb.ontop.parser.TableNameVisitor.java", "BodyUseAPI": [], "Fixed commit": "dc36c7f07c03467491764cd5ce012278aa2ce56e", "Url": "https://api.github.com/repos/ontop/ontop", "Date": "2015-04-24T11:52:13Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.example.sev_user.musicplayer.model.Song>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i == (size - 1)) { positionLetter = size; }else { positionLetter = i; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/724/buggy-version/app.src.main.java.com.example.sev_user.musicplayer.provider.MusicContentProvider.java", "BodyUseAPI": [], "Fixed commit": "4159092ac43e76c874d58ff5a841d8ed7be8d074", "Url": "https://api.github.com/repos/srinnix1395/MusicPlayer", "Date": "2016-12-29T17:22:00Z"},
{"Line": "=>778", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gitblit.tickets.ITicketService.getTicket(com.gitblit.git.PatchsetReceivePack,long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ticket == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1472/buggy-version/src.main.java.com.gitblit.git.PatchsetReceivePack.java", "BodyUseAPI": [], "Fixed commit": "cd2851167b8adf9896ba41ef71036ded498da0f4", "Url": "https://api.github.com/repos/gitblit/gitblit", "Date": "2014-03-28T23:58:48Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (params.cite) { java.lang.String bibtex = \"@article{Sjostrand22982573,\\n\" + (((((((((((((((\"\\tauthor = {Joel Sj{\\\\\\\"o}strand and Bengt Sennblad and Lars Arvestad and Jens Lagergren},\\n\" + \"\\ttitle = {{DLRS}: gene tree evolution in light of a species tree.},\\n\") + \"\\tjournal = {Bioinformatics},\\n\") + \"\\tvolume = {28},\\n\") + \"\\tnumber = {22},\\n\") + \"\\tyear = {2012},\\n\") + \"\\tpages = {2994-2995}};\\n\") + \"@article{Akerborg19299507,\\n\") + \"\\tauthor = {{\\\\\\\"O}rjan {\\\\AA}kerborg and Bength Sennblad and Lars Arvestad and Jens Lagergren},\\n\") + \"\\ttitle = {Simultaneous {B}ayesian gene tree reconstruction and reconciliation analysis.},\\n\") + \"\\tjournal = {Proc Natl Acad Sci U S A},\\n\") + \"\\tvolume = {106},\\n\") + \"\\tnumber = {14},\\n\") + \"\\tyear = {2009},\\n\") + \"\\tpages = {5714-5719},\\n\") + \" pmid = {19299507}};\"); java.lang.System.out.println(bibtex); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2937/buggy-version/src.main.java.se.cbb.jprime.apps.dlrs.Delirious.java", "BodyUseAPI": [], "Fixed commit": "0d0aa78492879057d77561ee4c73c565f07990b7", "Url": "https://api.github.com/repos/arvestad/jprime", "Date": "2017-02-24T14:33:41Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (installer.startsWith(\"org.f-droid\")) { return \"https://f-droid.org/repository/browse/?fdid=\" + packname; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7953/buggy-version/src.de.onyxbits.listmyapps.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "accdd37f00fadfc85397ee45fe5c685cfa23b622", "Url": "https://api.github.com/repos/onyxbits/listmyaps", "Date": "2013-08-29T13:29:59Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (location == null) { android.util.Log.d(com.rosinen.noctis.location.LocationService.TAG, \"onLocationChanged: location was null\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1124/buggy-version/Noctis.src.main.java.com.rosinen.noctis.location.LocationService.java", "BodyUseAPI": [], "Fixed commit": "c6ae8db61bdfabeb22899d0c5943b4ef6e087c8c", "Url": "https://api.github.com/repos/eckR/Noctis", "Date": "2015-04-15T16:26:17Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (intent.getAction().equals(Constants.ACTION_WIDGET_HEADER_CLICK)) { if (com.greentopli.app.AuthenticatorActivity.isUserSignedIn()) { android.content.Intent orderHistoryIntent = new android.content.Intent(context, com.greentopli.app.user.ui.OrderHistoryActivity.class); orderHistoryIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); context.startActivity(orderHistoryIntent); }else { android.content.Intent mainActivityIntent = new android.content.Intent(context, com.greentopli.app.user.ui.purchase.PurchaseManagerActivity.class); mainActivityIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); context.startActivity(mainActivityIntent); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2430/buggy-version/app.src.user.java.com.greentopli.app.user.ui.widget.ProductWidgetProvider.java", "BodyUseAPI": [], "Fixed commit": "33e841abbf8c17afd478c321bef00f49173c50bd", "Url": "https://api.github.com/repos/karadkar/Veggie", "Date": "2016-11-23T12:04:20Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((extraColumnsBuilder.length()) > 0) { extraColumnsBuilder.setLength(((extraColumnsBuilder.length()) - 2)); this.extraSourceColumns = extraColumnsBuilder.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6159/buggy-version/db.src.main.java.com.psddev.dari.db.SqlQuery.java", "BodyUseAPI": ["java.lang.StringBuilder.length()", "java.lang.StringBuilder.setLength(int)", "java.lang.StringBuilder.toString()"], "Fixed commit": "d300541bbfcd6b2fa4bf76d4387c85e393369017", "Url": "https://api.github.com/repos/perfectsense/dari", "Date": "2013-02-05T14:20:19Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (determineAttackers) validAttackingUnitsForThisRoll = games.strategy.util.Match.getMatches(m_attackingUnits, new games.strategy.util.CompositeMatchOr(games.strategy.triplea.delegate.Matches.unitIsOfTypes(targetUnitTypesForThisTypeAA), new games.strategy.util.CompositeMatchAnd<games.strategy.engine.data.Unit>(Matches.UnitIsAirborne, games.strategy.triplea.delegate.Matches.unitIsOfTypes(airborneTypesTargettedToo))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/395/buggy-version/src.games.strategy.triplea.delegate.StrategicBombingRaidBattle.java", "BodyUseAPI": [], "Fixed commit": "d31fd288e9c67162600340980d5d80b784dc377e", "Url": "https://api.github.com/repos/simon33-2/triplea", "Date": "2016-08-15T09:00:10Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["play.mvc.Http.Context.current().request().host()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (host.matches(\"[a-z]\")) { play.Logger.error((\"Unknown organization for host: \" + host)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/75/buggy-version/app.models.Organization.java", "BodyUseAPI": ["play.Logger.error(java.lang.String)"], "Fixed commit": "b8c21171425e5f13719f0dc8c2c7196e7d34b0c6", "Url": "https://api.github.com/repos/schmave/demschooltools", "Date": "2015-07-21T00:45:20Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(method.isAccessible())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5408/buggy-version/src.sourcecoded.events.EventBus.java", "BodyUseAPI": [], "Fixed commit": "29cf7189c8fbbdfbfe88b49b667fabed171751f2", "Url": "https://api.github.com/repos/MSourceCoded/SourceEvents", "Date": "2014-07-19T23:16:13Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.lmu.ifi.dbs.elki.database.ids.DBIDUtil.deref(cluster.iter())", "de.lmu.ifi.dbs.elki.database.ids.DBIDUtil.newVar()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (de.lmu.ifi.dbs.elki.database.ids.DBIDUtil.equal(parent, var)) { model.setPrototype(prototypes.get(i)); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2233/buggy-version/elki.src.main.java.de.lmu.ifi.dbs.elki.algorithm.clustering.hierarchical.extraction.ExtractFlatClusteringFromHierarchy.java", "BodyUseAPI": [], "Fixed commit": "0d392dae2375d0088d03cedd6d269806f7c79e93", "Url": "https://api.github.com/repos/elki-project/elki", "Date": "2016-09-19T15:23:23Z"},
{"Line": "=>866", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ee.ioc.cs.vsle.synthesize.AnnotatedClass.getFieldByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cf.isAlias()) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/709/buggy-version/src.ee.ioc.cs.vsle.synthesize.SpecParser.java", "BodyUseAPI": [], "Fixed commit": "122a93c25d2409f7ccf3c74b251b93183a7d1481", "Url": "https://api.github.com/repos/MastaP/CoCoViLa", "Date": "2014-05-27T21:20:01Z"},
{"Line": "=>834", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isTopicAdmin(nd.getNodePK().getId())) { return getKmeliaBm().updateTopic(nd, alertType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2974/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.control.KmeliaSessionController.java", "BodyUseAPI": ["com.stratelia.webactiv.kmelia.control.ejb.KmeliaBm.updateTopic(com.stratelia.webactiv.util.node.model.NodeDetail,java.lang.String)"], "Fixed commit": "30598ecd6c22c3320b7c583915ed8c60b99889bc", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Components", "Date": "2015-07-20T13:14:07Z"},
{"Line": "=>1535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.silverpeas.servlet.HttpRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (kmelia.isTopicAdmin(nodeId)) { kmelia.updateTopicRole(role, nodeId, groupIds, userIds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2974/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.servlets.KmeliaRequestRouter.java", "BodyUseAPI": ["com.stratelia.webactiv.kmelia.control.KmeliaSessionController.updateTopicRole(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])"], "Fixed commit": "30598ecd6c22c3320b7c583915ed8c60b99889bc", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Components", "Date": "2015-07-20T13:14:07Z"},
{"Line": "=>1485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(kmelia.isTopicAdmin(id))) { return \"/admin/jsp/accessForbidden.jsp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2974/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.servlets.KmeliaRequestRouter.java", "BodyUseAPI": [], "Fixed commit": "30598ecd6c22c3320b7c583915ed8c60b99889bc", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Components", "Date": "2015-07-20T13:14:07Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((query.length()) > 0) query.append('&');", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2568/buggy-version/src.main.java.uk.me.candle.eve.pricing.impl.EveMarketData.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)"], "Fixed commit": "0be08712db39e50c625a2544aaeb1a1d500c6995", "Url": "https://api.github.com/repos/GoldenGnu/price", "Date": "2017-08-03T11:36:20Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((query.length()) > 0) query.append('&');", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2568/buggy-version/src.main.java.uk.me.candle.eve.pricing.impl.EveMarketData.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)"], "Fixed commit": "0be08712db39e50c625a2544aaeb1a1d500c6995", "Url": "https://api.github.com/repos/GoldenGnu/price", "Date": "2017-08-03T11:36:20Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((group.getY()) != 0) { isDown = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2459/buggy-version/Bullet-Inferno.src.se.dat255.bulletinferno.view.menu.SettingsView.java", "BodyUseAPI": [], "Fixed commit": "21846a8a61fb7161aee44fce6fc891eed641471b", "Url": "https://api.github.com/repos/joelseverin/Bullet-Inferno", "Date": "2014-01-26T11:58:58Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((session != null) && ((session.getSessionInfo()) != null)) { serverUrl_.setText(session.getSessionInfo().getDefaultRSConnectServer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8043/buggy-version/src.gwt.src.org.rstudio.studio.client.rsconnect.ui.RSConnectLocalAccount.java", "BodyUseAPI": [], "Fixed commit": "5e276f4136c81cb844affd9653f75fe8856a4312", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2017-06-28T20:26:33Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (list.isEmpty()) { list.add(\"no words guessed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/9087/buggy-version/app.src.main.java.com.mklgallegos.boggle.ui.GameActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "cfd46d8171aa599c30ed906665fcd5a323b0f4c1", "Url": "https://api.github.com/repos/mklgallegos/Boggle", "Date": "2016-05-20T02:00:44Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index < 0) { index += size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4270/buggy-version/src.io.ologn.common.color.ColorCategory.java", "BodyUseAPI": [], "Fixed commit": "0dab980d492328211fde8c57b66bd01c5d22f72a", "Url": "https://api.github.com/repos/lisq199/ologn-tools", "Date": "2016-02-23T22:48:07Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.java.com.seckill.dao.ProjectDao.queryDetailProjectById(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (project == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8291/buggy-version/src.main.java.com.seckill.service.serviceimpl.ProjectServiceImp.java", "BodyUseAPI": [], "Fixed commit": "1dea248371da8b664ff83cabb91b944a4e5128c9", "Url": "https://api.github.com/repos/menglingqiang/JavaMail", "Date": "2017-04-09T07:25:01Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == null) { result = new java.io.File((homeDir + \"/.config/parrot-manager\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5088/buggy-version/parrot-manager.src.main.java.com.limpygnome.parrot.component.file.FileComponent.java", "BodyUseAPI": [], "Fixed commit": "37b4db16b07795f301ed29ed3feb2d3e9ebb80b3", "Url": "https://api.github.com/repos/limpygnome/parrot-manager", "Date": "2017-12-07T21:59:17Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (os != null) { os = os.toLowerCase(); if (os.contains(\"win\")) { java.lang.String appData = java.lang.System.getProperty(\"APPDATA\"); if ((appData != null) && ((appData.length()) > 0)) { result = new java.io.File((appData + \"\\\\parrot-manager\")); }else { result = new java.io.File((homeDir + \"\\\\Local Settings\\\\Application Data\\\\parrot-manager\")); } }else if (os.contains(\"mac\")) { result = new java.io.File((homeDir + \"/Preferences/parrot-manager\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5088/buggy-version/parrot-manager.src.main.java.com.limpygnome.parrot.component.file.FileComponent.java", "BodyUseAPI": ["java.lang.String.toLowerCase()"], "Fixed commit": "37b4db16b07795f301ed29ed3feb2d3e9ebb80b3", "Url": "https://api.github.com/repos/limpygnome/parrot-manager", "Date": "2017-12-07T21:59:17Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(io.ermdev.mapfierj.TypeChecker.isPrimitive(field.getType()))) { value = new io.ermdev.mapfierj.Transaction(value).mapTo(field.getType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7985/buggy-version/src.main.java.io.ermdev.mapfierj.Transaction.java", "BodyUseAPI": ["io.ermdev.mapfierj.Transaction.mapTo(java.lang.Class<?>)", "java.lang.reflect.Field.getType()"], "Fixed commit": "e4bf83412efd7455c0e234d349bf736955b51a54", "Url": "https://api.github.com/repos/erafaelmanuel/mappyfy", "Date": "2017-12-17T15:24:55Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.service) != null) { this.service.disconnect(this.address); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5818/buggy-version/app.src.main.java.net.sylvek.itracing2.DashboardActivity.java", "BodyUseAPI": [], "Fixed commit": "1b55d4ef4df655d189940987836d91f8cf63e3be", "Url": "https://api.github.com/repos/vitas/itracing2", "Date": "2016-01-07T10:53:29Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((underlyingView) == null) { setUnderlyingView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8045/buggy-version/src.main.java.net.mantucon.baracus.context.ManagedActivity.java", "BodyUseAPI": [], "Fixed commit": "c1dcb3c668513657fc9a45fcb936100c670b68f5", "Url": "https://api.github.com/repos/gorefest/baracus-framework", "Date": "2014-02-10T17:28:13Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.squareup.javapoet.ClassName.get(javax.lang.model.element.TypeElement)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (modelClassName.equals(com.squareup.javapoet.ClassName.get(PandroidMapper.MAPPER_PACKAGE, PandroidMapper.MAPPER_IMPL_NAME))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/681/buggy-version/pandroid-compiler.src.main.java.com.leroymerlin.pandroid.compiler.GeneratedClassMapperProcessor.java", "BodyUseAPI": [], "Fixed commit": "3ad7d830ed1b151ddd9e2be1eec8156fc1795f76", "Url": "https://api.github.com/repos/MobileTribe/pandroid", "Date": "2017-01-10T08:00:20Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["projectHeader.getId().equals(projectAreaState.getProjectId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((area == (org.sagebionetworks.web.client.place.Synapse.EntityArea.FILES)) && isProject) { projectAreaState.setLastFileAreaEntity(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5718/buggy-version/src.main.java.org.sagebionetworks.web.client.widget.entity.EntityPageTop.java", "BodyUseAPI": [], "Fixed commit": "264395d60a95f99149faea655ba20aa6ba5f7f38", "Url": "https://api.github.com/repos/dburdick/SynapseWebClient", "Date": "2013-10-16T23:51:18Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) mtl.write(\"d 1\\n\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/227/buggy-version/src.me.knee.frogger.files.MAPFile.java", "BodyUseAPI": [], "Fixed commit": "bdb42cbcf80f4a4d25fd58211a115161ef8e840c", "Url": "https://api.github.com/repos/Kneesnap/FrogAPI", "Date": "2017-11-07T06:43:37Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.carrotsearch.hppc.CharObjectOpenHashMap<fi.seco.hfst.LetterTrie.LetterTrieNode>.get(java.lang.Character)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (child == null) { int symbol = symbols.get(at_s); if (symbol == 0) { --(string.index); return HfstOptimizedLookup.NO_SYMBOL_NUMBER; } return symbol; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8850/buggy-version/src.main.java.fi.seco.hfst.LetterTrie.java", "BodyUseAPI": [], "Fixed commit": "6cd76c07cfa4f9d9aed88c521d36a01116207775", "Url": "https://api.github.com/repos/jiemakel/seco-hfst", "Date": "2015-03-20T11:50:09Z"},
{"Line": "=>937", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fluid.program.api.vo.Field.getTypeAsEnum()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fieldType == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6238/buggy-version/fluid-api.src.main.java.com.fluid.program.api.vo.Field.java", "BodyUseAPI": [], "Fixed commit": "aa8ad459fa37e512c3148cab775f6ac05a22c338", "Url": "https://api.github.com/repos/Koekiebox-PTY-LTD/Fluid", "Date": "2016-12-18T00:55:39Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.jquant.tools.StockCategory.category.size()) == 0) { net.jquant.tools.StockCategory.category = net.jquant.tools.StockCategory.getCategory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/65/buggy-version/src.main.java.net.jquant.tools.StockCategory.java", "BodyUseAPI": [], "Fixed commit": "bc75c9e0e57e72880d38624e11049759b0ebe3ac", "Url": "https://api.github.com/repos/eryk/JQuant", "Date": "2016-08-24T15:22:25Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (re == 0) { r = j; }else { r += (re == 0) ? 1 : re; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2480/buggy-version/src.org.nutz.mvc.upload.util.RingItem.java", "BodyUseAPI": [], "Fixed commit": "9f9deb87255b7a0bfd17458bc8de7e249dded179", "Url": "https://api.github.com/repos/nutzam/nutz", "Date": "2014-06-11T12:30:33Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cursor == null) { android.content.ContentValues values = new android.content.ContentValues(); values.put(edu.josesanchez1csumb.algorithmsapp.SQLiteHelper.KEY_ID, algorithm.getID()); values.put(edu.josesanchez1csumb.algorithmsapp.SQLiteHelper.KEY_NAME, algorithm.getName()); values.put(edu.josesanchez1csumb.algorithmsapp.SQLiteHelper.KEY_DESCRIPTION, algorithm.getDescription()); values.put(edu.josesanchez1csumb.algorithmsapp.SQLiteHelper.KEY_RUNTIME, algorithm.getRuntime()); db.insert(edu.josesanchez1csumb.algorithmsapp.SQLiteHelper.TABLE_ALGORITHMS, null, values); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/19/buggy-version/AlgorithmsApp.app.src.main.java.edu.josesanchez1csumb.algorithmsapp.SQLiteHelper.java", "BodyUseAPI": [], "Fixed commit": "32c81d07f2ef1b8c25ea8b335e5b272454717da7", "Url": "https://api.github.com/repos/J0S349/AlgorithmsApp", "Date": "2016-05-08T07:01:03Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puresoltechnologies.maven.plugins.license.parameter.ValidationResult.getOriginalLicense()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (originalLicense != null) { originalLicenseName = originalLicense.getName(); comment = validationResult.getComment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1610/buggy-version/src.main.java.com.puresoltechnologies.maven.plugins.license.internal.IOUtilities.java", "BodyUseAPI": ["com.puresoltechnologies.maven.plugins.license.parameter.ValidLicense.getName()"], "Fixed commit": "92e0579ef2c9c5f9804037843f6b1aee61deff4f", "Url": "https://api.github.com/repos/RickRainerLudwig/license-maven-plugin", "Date": "2014-03-08T22:56:20Z"},
{"Line": "=>668", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.dist) > (ld.dist)) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1542/buggy-version/EnrichmentMapPlugin.src.main.java.org.baderlab.csplugins.brainlib.AvgLinkHierarchicalClustering.java", "BodyUseAPI": [], "Fixed commit": "1c0497022fb849fee6570b211a5a95bca6f12cb2", "Url": "https://api.github.com/repos/BaderLab/EnrichmentMapApp", "Date": "2014-08-25T19:41:32Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.PATHoleilu.hutool.util.StrUtil.isBlank(charset)) { charset = com.PATHoleilu.hutool.util.CharsetUtil.UTF_8; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1390/buggy-version/src.main.java.com.PATHoleilu.hutool.http.HttpUtil.java", "BodyUseAPI": [], "Fixed commit": "86fb4639f848b593b881f579715e936d0d724266", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2016-07-26T04:16:40Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) < 3) { player.sendMessage(((org.bukkit.ChatColor.DARK_RED) + \"Missing arguments!\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2681/buggy-version/src.org.kwstudios.play.ragemode.commands.AddGame.java", "BodyUseAPI": [], "Fixed commit": "972698c22b0d307b31bf7dfe6e90c7c9cee9fdf0", "Url": "https://api.github.com/repos/KWStudios/RageMode", "Date": "2015-08-01T13:42:46Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (address.endsWith(\"/\")) { address = address.substring(0, ((address.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/375/buggy-version/Plan.src.main.java.com.djrapitops.plan.command.commands.manage.ManageSetupCommand.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "0898102603cba06d840c405edd67bb10bba5a48f", "Url": "https://api.github.com/repos/Rsl1122/Plan-PlayerAnalytics", "Date": "2017-10-02T14:44:21Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(stack.isEmpty())) items.add(new talecraft.client.gui.items.voxelator.BlockStateListModel.BlockStateItem(stack));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/243/buggy-version/src.main.java.talecraft.client.gui.items.voxelator.BlockStateListModel.java", "BodyUseAPI": [], "Fixed commit": "96871711ada2f74708589ca1ae5f22700947e950", "Url": "https://api.github.com/repos/tiffit/TaleCraft", "Date": "2017-01-04T23:31:12Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(stack.isEmpty())) items.add(new talecraft.client.gui.entity.MovingBlockGui.BlockStateItem(stack));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/243/buggy-version/src.main.java.talecraft.client.gui.entity.MovingBlockGui.java", "BodyUseAPI": [], "Fixed commit": "96871711ada2f74708589ca1ae5f22700947e950", "Url": "https://api.github.com/repos/tiffit/TaleCraft", "Date": "2017-01-04T23:31:12Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentUser.getString(\"gender\")) != null) { android.util.Log.d(\"TAG\", \"gender\"); if (currentUser.getString(\"gender\").equals(\"female\")) { mAffinities = config.getList(\"sororities\").toArray(new java.lang.String[config.getList(\"sororities\").size()]); }else if (currentUser.getString(\"gender\").equals(\"male\")) { mAffinities = config.getList(\"fraternities\").toArray(new java.lang.String[config.getList(\"fraternities\").size()]); }else { mAffinities = config.getList(\"affiliations\").toArray(new java.lang.String[config.getList(\"affiliations\").size()]); } }else { mAffinities = config.getList(\"affiliations\").toArray(new java.lang.String[config.getList(\"affiliations\").size()]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5600/buggy-version/Barlift.app.src.main.java.com.barliftapp.barlift.activity.OnBoard3Activity.java", "BodyUseAPI": ["com.parse.ParseUser.getString(java.lang.String)", "com.parse.ParseUser.getString(java.lang.String)", "currentUser.getString(\"gender\").equals(java.lang.String)", "currentUser.getString(\"gender\").equals(java.lang.String)"], "Fixed commit": "cb68826553ccca010d718e82de1f0d2896e45a5a", "Url": "https://api.github.com/repos/zakallen/Barlift-Android", "Date": "2015-06-09T15:46:35Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentUser.getString(\"gender\").equals(\"male\")) { mAffinities = config.getList(\"fraternities\").toArray(new java.lang.String[config.getList(\"fraternities\").size()]); }else { mAffinities = config.getList(\"affiliations\").toArray(new java.lang.String[config.getList(\"affiliations\").size()]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5600/buggy-version/Barlift.app.src.main.java.com.barliftapp.barlift.activity.OnBoard3Activity.java", "BodyUseAPI": [], "Fixed commit": "cb68826553ccca010d718e82de1f0d2896e45a5a", "Url": "https://api.github.com/repos/zakallen/Barlift-Android", "Date": "2015-06-09T15:46:35Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((board.getNumber(current_x, current_y)) == 0) { board.setNumber(current_x, current_y, ((board.getNumber(current_x, current_y)) + 1)); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2546/buggy-version/Solver.java", "BodyUseAPI": ["Board.setNumber(int,int,((board.getNumber(current_x, current_y)) + 1))", "Board.getNumber(int,int)"], "Fixed commit": "d748b120fd57d52e4756c95c182cdc60e2fa272d", "Url": "https://api.github.com/repos/tbourvon/sudoku", "Date": "2015-06-01T08:01:32Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!noChange) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4454/buggy-version/src.main.java.org.kore.kolab.notes.imap.RemoteTags.java", "BodyUseAPI": [], "Fixed commit": "a4f0fe89faa5cad5c7a65a7281a5b751b12e7191", "Url": "https://api.github.com/repos/konradrenner/kolabnotes-java", "Date": "2015-10-16T16:20:27Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getModifiers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (noFinal && (java.lang.reflect.Modifier.isFinal(m))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/9050/buggy-version/src.org.nutz.lang.Mirror.java", "BodyUseAPI": [], "Fixed commit": "310b1ded51d7fd7f6def487d826dc0671d6b7aef", "Url": "https://api.github.com/repos/nutzam/nutz", "Date": "2011-07-21T10:52:47Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (noInner && (f.getName().startsWith(\"this$\"))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/9050/buggy-version/src.org.nutz.lang.Mirror.java", "BodyUseAPI": [], "Fixed commit": "310b1ded51d7fd7f6def487d826dc0671d6b7aef", "Url": "https://api.github.com/repos/nutzam/nutz", "Date": "2011-07-21T10:52:47Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getDeclaredFields()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (map.containsKey(fs[i].getName())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/9050/buggy-version/src.org.nutz.lang.Mirror.java", "BodyUseAPI": [], "Fixed commit": "310b1ded51d7fd7f6def487d826dc0671d6b7aef", "Url": "https://api.github.com/repos/nutzam/nutz", "Date": "2011-07-21T10:52:47Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getModifiers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (noStatic && (java.lang.reflect.Modifier.isStatic(m))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/9050/buggy-version/src.org.nutz.lang.Mirror.java", "BodyUseAPI": [], "Fixed commit": "310b1ded51d7fd7f6def487d826dc0671d6b7aef", "Url": "https://api.github.com/repos/nutzam/nutz", "Date": "2011-07-21T10:52:47Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mcjty.rftools.blocks.environmental.EnvironmentalControllerTileEntity.CMD_DELPLAYER.equals(command)) { delPlayer(args.get(\"player\").getString()); return true; }else if (mcjty.rftools.blocks.environmental.EnvironmentalControllerTileEntity.CMD_SETBLACKLIST.equals(command)) { setWhitelistMode((!(args.get(\"blacklist\").getBoolean()))); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4832/buggy-version/src.main.java.mcjty.rftools.blocks.environmental.EnvironmentalControllerTileEntity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "a5821d94ecd8bb38dec06bb213ac52ec257db971", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2015-11-18T11:31:34Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((favourite.getCoordinate()) != null) { favourite.getCoordinate().save(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/732/buggy-version/app.src.main.java.fi.ohtu.mobilityprofile.data.FavouritePlaceDao.java", "BodyUseAPI": ["fi.ohtu.mobilityprofile.domain.FavouritePlace.getCoordinate()", "favourite.getCoordinate().save()"], "Fixed commit": "b9b2348d0829937680c3f128da370f8285eed295", "Url": "https://api.github.com/repos/mobility-profile/Mobility-Profile", "Date": "2016-08-10T16:50:16Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((route.getStartCoordinates().distanceTo(startLocation.getCoordinate())) < (fi.ohtu.mobilityprofile.suggestions.locationHistory.GpsPointClusterizer.CLUSTER_RADIUS)) { if (fi.ohtu.mobilityprofile.suggestions.sources.RouteSuggestions.aroundTheSameTime(new java.sql.Time(route.getTimestamp()), 2, 2)) { if (destinations.contains(route.getDestination())) { continue; } fi.ohtu.mobilityprofile.suggestions.Suggestion suggestion = new fi.ohtu.mobilityprofile.suggestions.Suggestion(route.getDestination(), fi.ohtu.mobilityprofile.suggestions.SuggestionAccuracy.HIGH, ROUTE_SUGGESTION, route.getDestinationCoordinates()); suggestions.add(suggestion); destinations.add(route.getDestination()); counter++; if (counter >= 3) break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/732/buggy-version/app.src.main.java.fi.ohtu.mobilityprofile.suggestions.sources.RouteSuggestions.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(route.getDestination())", "fi.ohtu.mobilityprofile.domain.RouteSearch.getDestinationCoordinates()", "fi.ohtu.mobilityprofile.domain.RouteSearch.getDestination()", "fi.ohtu.mobilityprofile.suggestions.sources.RouteSuggestions.aroundTheSameTime(java.sql.Time,int,int)", "java.util.Set<java.lang.String>.contains(route.getDestination())", "fi.ohtu.mobilityprofile.domain.RouteSearch.getDestination()", "fi.ohtu.mobilityprofile.domain.RouteSearch.getDestination()", "fi.ohtu.mobilityprofile.domain.RouteSearch.getTimestamp()"], "Fixed commit": "b9b2348d0829937680c3f128da370f8285eed295", "Url": "https://api.github.com/repos/mobility-profile/Mobility-Profile", "Date": "2016-08-10T16:50:16Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clusterContext) == null) { initClusterContext(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6096/buggy-version/dbclient.src.main.java.com.emc.storageos.db.client.impl.DbClientContext.java", "BodyUseAPI": [], "Fixed commit": "ce2ce6d47e6bb24cd831bff7264137140fd82f5f", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-10-06T18:48:04Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getWhitespaceFollowedNode(com.puppycrawl.tools.checkstyle.api.DetailAST)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((whitespaceFollowedAst.getNextSibling()) == null) || ((whitespaceFollowedAst.getNextSibling().getType()) != (com.puppycrawl.tools.checkstyle.api.TokenTypes.ANNOTATIONS))) { final int whitespaceColumnNo = com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(whitespaceFollowedAst); final int whitespaceLineNo = whitespaceFollowedAst.getLineNo(); if (hasTrailingWhitespace(ast, whitespaceColumnNo, whitespaceLineNo)) { log(whitespaceLineNo, whitespaceColumnNo, com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.MSG_KEY, whitespaceFollowedAst.getText()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5066/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(com.puppycrawl.tools.checkstyle.api.DetailAST)", "com.puppycrawl.tools.checkstyle.api.DetailAST.getLineNo()", "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.log(int,int,java.lang.String,whitespaceFollowedAst.getText())", "com.puppycrawl.tools.checkstyle.api.DetailAST.getText()"], "Fixed commit": "43b67d302a8cf0d2dd53337bcd741b986a002553", "Url": "https://api.github.com/repos/sergileon/checkstyle", "Date": "2017-09-05T11:43:02Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dye) && ((pneumaticCraft.common.tileentity.TileEntityPlasticMixer.getDyeIndex(par1ItemStack)) >= 0)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/76/buggy-version/src.pneumaticCraft.common.inventory.SlotItemSpecific.java", "BodyUseAPI": [], "Fixed commit": "c0ae074c23fc19c9a090f6326a087758e239cae6", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2014-11-25T19:21:02Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCause()) instanceof org.apache.http.auth.MalformedChallengeException) { java.lang.String message = \"Authentication failed. Please check your username/password\"; printError(message, e); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/834/buggy-version/components.org.apache.stratos.cli.src.main.java.org.apache.stratos.cli.RestCommandLineService.java", "BodyUseAPI": ["org.apache.stratos.cli.RestCommandLineService.printError(java.lang.String,java.lang.Exception)"], "Fixed commit": "d2f9f456b3fa146ad7a281bdd0b12a958d46c260", "Url": "https://api.github.com/repos/apache/stratos", "Date": "2015-05-18T09:52:54Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (prop == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2510/buggy-version/src.main.java.persistencia.conexion.DBCredentialsEditor.java", "BodyUseAPI": [], "Fixed commit": "99c192c16d6fe3b54911e352a80d8d0c8dd4c0eb", "Url": "https://api.github.com/repos/leafunes/legendary-agenda", "Date": "2017-09-03T00:41:16Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (prop == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2510/buggy-version/src.main.java.persistencia.conexion.DBCredentialsEditor.java", "BodyUseAPI": [], "Fixed commit": "99c192c16d6fe3b54911e352a80d8d0c8dd4c0eb", "Url": "https://api.github.com/repos/leafunes/legendary-agenda", "Date": "2017-09-03T00:41:16Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (prop == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2510/buggy-version/src.main.java.persistencia.conexion.DBCredentialsEditor.java", "BodyUseAPI": [], "Fixed commit": "99c192c16d6fe3b54911e352a80d8d0c8dd4c0eb", "Url": "https://api.github.com/repos/leafunes/legendary-agenda", "Date": "2017-09-03T00:41:16Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (prop == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2510/buggy-version/src.main.java.persistencia.conexion.DBCredentialsEditor.java", "BodyUseAPI": [], "Fixed commit": "99c192c16d6fe3b54911e352a80d8d0c8dd4c0eb", "Url": "https://api.github.com/repos/leafunes/legendary-agenda", "Date": "2017-09-03T00:41:16Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["T.construct()", "T.construct()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (group.isEqual(bTmp, zero)) { if (group.isGreater(m, zero)) group.add(bTmp, delta, bTmp); else group.subtract(bTmp, delta, bTmp); }else if (group.isGreater(bTmp, zero)) group.add(bTmp, delta, bTmp); else group.subtract(bTmp, delta, bTmp);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5616/buggy-version/src.main.java.nom.bdezonia.zorbage.algorithm.Round.java", "BodyUseAPI": ["T.add(U,U,U)", "T.isGreater(U,U)", "T.subtract(U,U,U)", "T.isGreater(U,U)", "T.subtract(U,U,U)", "T.add(U,U,U)"], "Fixed commit": "1eda70f66b93bcc15d8996427a0cd1f1fe8254d6", "Url": "https://api.github.com/repos/bdezonia/zorbage", "Date": "2017-12-16T22:04:32Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["T.construct()", "T.construct()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (group.isEqual(bTmp, zero)) { if (group.isGreater(m, zero)) group.add(bTmp, delta, bTmp); }else if (group.isGreater(bTmp, zero)) group.add(bTmp, delta, bTmp);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5616/buggy-version/src.main.java.nom.bdezonia.zorbage.algorithm.Round.java", "BodyUseAPI": ["T.isGreater(U,U)", "T.add(U,U,U)", "T.isGreater(U,U)", "T.add(U,U,U)"], "Fixed commit": "1eda70f66b93bcc15d8996427a0cd1f1fe8254d6", "Url": "https://api.github.com/repos/bdezonia/zorbage", "Date": "2017-12-16T22:04:32Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["T.construct()", "T.construct()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (group.isEqual(bTmp, zero)) { if (group.isLess(m, zero)) group.subtract(bTmp, delta, bTmp); }else if (group.isLess(bTmp, zero)) group.subtract(bTmp, delta, bTmp);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5616/buggy-version/src.main.java.nom.bdezonia.zorbage.algorithm.Round.java", "BodyUseAPI": ["T.isLess(U,U)", "T.isLess(U,U)", "T.subtract(U,U,U)", "T.subtract(U,U,U)"], "Fixed commit": "1eda70f66b93bcc15d8996427a0cd1f1fe8254d6", "Url": "https://api.github.com/repos/bdezonia/zorbage", "Date": "2017-12-16T22:04:32Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((partSales.getSalesType()) == (com.topsun.posclient.common.AppConstants.SALES_TYPE_EXECHANGE)) { for (int i = 0; i < (itemList.size()); i++) { if (itemList.get(i).getItemType().equals(AppConstants.ITEM_TYPE_RETURNED)) { continue; }else { printPartSales.getItemList().add(itemList.get(i)); } } }else { for (int i = 0; i < (itemList.size()); i++) { if (itemList.get(i).getItemType().equals(AppConstants.ITEM_TYPE_OLDGOLD)) { continue; }else { printPartSales.getItemList().add(itemList.get(i)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/730/buggy-version/com.topsun.posclient.sales.core.src.com.topsun.posclient.sales.core.PartSalesPrintData.java", "BodyUseAPI": [], "Fixed commit": "9f08aa019de9e312ed97e44059d0aebe5b7e0476", "Url": "https://api.github.com/repos/tandong8888/topsun", "Date": "2014-01-05T07:37:02Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (getValueOr(evtData, \"event\", \"\").equals(\"organic_matter\")) { mrSubArr.add(evtData); }else if (getValueOr(evtData, \"event\", \"\").equals(\"chemical\")) { mcSubArr.add(evtData); }else if (getValueOr(evtData, \"event\", \"\").equals(\"tillage\")) { mtSubArr.add(evtData); }else if (getValueOr(evtData, \"event\", \"\").equals(\"harvest\")) { mhSubArr.add(evtData); if (!(getValueOr(evtData, \"date\", \"\").trim().equals(\"\"))) { smData.put(\"hadat_valid\", \"Y\"); } }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6745/buggy-version/src.main.java.org.agmip.translators.dssat.DssatXFileOutput.java", "BodyUseAPI": ["org.agmip.translators.dssat.DssatXFileOutput.getValueOr(java.util.HashMap,java.lang.String,java.lang.String)", "java.util.ArrayList<java.util.HashMap>.add(java.util.HashMap)", "java.util.ArrayList<java.util.HashMap>.add(java.util.HashMap)", "getValueOr(evtData, \"date\", \"\").trim().equals(java.lang.String)", "getValueOr(evtData, \"event\", \"\").equals(java.lang.String)", "org.agmip.translators.dssat.DssatXFileOutput.getValueOr(java.util.HashMap,java.lang.String,java.lang.String)", "getValueOr(evtData, \"date\", \"\").trim()", "org.agmip.translators.dssat.DssatXFileOutput.getValueOr(java.util.HashMap,java.lang.String,java.lang.String)", "getValueOr(evtData, \"event\", \"\").equals(java.lang.String)", "java.util.ArrayList<java.util.HashMap>.add(java.util.HashMap)", "java.util.ArrayList<java.util.HashMap>.add(java.util.HashMap)", "org.agmip.translators.dssat.DssatXFileOutput.getValueOr(java.util.HashMap,java.lang.String,java.lang.String)", "getValueOr(evtData, \"event\", \"\").equals(java.lang.String)"], "Fixed commit": "1b1485c0d764ed00866567227100cb6e3392e3f1", "Url": "https://api.github.com/repos/agmip/translator-dssat", "Date": "2013-04-25T16:47:46Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["frame.getStack().pop()", "de.seerhein_lab.jca.analyzer.fieldsNotPublishedAnalyzer.FieldsNotPublishedAnalysisVisitor.getHeap()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((((de.seerhein_lab.jca.heap.ClassInstance) (heap.get(o.getID()))).getField(obj.getFieldName(constantPoolGen))) == null) linkNewClassInstance(obj, o, heap);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5361/buggy-version/src.main.java.de.seerhein_lab.jca.analyzer.fieldsNotPublishedAnalyzer.FieldsNotPublishedAnalysisVisitor.java", "BodyUseAPI": ["de.seerhein_lab.jca.analyzer.fieldsNotPublishedAnalyzer.FieldsNotPublishedAnalysisVisitor.linkNewClassInstance(org.apache.bcel.generic.GETFIELD,de.seerhein_lab.jca.slot.ReferenceSlot,de.seerhein_lab.jca.heap.Heap)"], "Fixed commit": "f6f29734423bdda2f635061bcf12621341c67f70", "Url": "https://api.github.com/repos/Seitenbau/jca", "Date": "2013-06-04T16:47:03Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) != null) { player.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/14/buggy-version/app.src.main.java.com.yiyangzhu.yydictionary.BuilderActivity.java", "BodyUseAPI": [], "Fixed commit": "54f0fb3758116ebfefd46e1082a04c9af0523d55", "Url": "https://api.github.com/repos/wangkekekexili/YYDictionary", "Date": "2016-01-03T16:18:12Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) != null) { player.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/14/buggy-version/app.src.main.java.com.yiyangzhu.yydictionary.BuilderActivity.java", "BodyUseAPI": [], "Fixed commit": "54f0fb3758116ebfefd46e1082a04c9af0523d55", "Url": "https://api.github.com/repos/wangkekekexili/YYDictionary", "Date": "2016-01-03T16:18:12Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((code == null) || (code.isEmpty())) values.get(\"content\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7780/buggy-version/src.main.java.com.aerospike.helper.model.Module.java", "BodyUseAPI": [], "Fixed commit": "85a96797fcb3d1614f4f8f372a3244494cfd0680", "Url": "https://api.github.com/repos/tiagodolphine/spring-data-aerospike", "Date": "2016-03-24T18:09:26Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (values.containsKey(\"bin\")) return values.get(\"bin\"); else return values.get(\"bins\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7780/buggy-version/src.main.java.com.aerospike.helper.model.Index.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "85a96797fcb3d1614f4f8f372a3244494cfd0680", "Url": "https://api.github.com/repos/tiagodolphine/spring-data-aerospike", "Date": "2016-03-24T18:09:26Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(controlFlag)) { sourceGraph.addEdge(noCase, swichEnd.peek()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7428/buggy-version/Halstead.src.visitors.GraphBuildVisitor.java", "BodyUseAPI": [], "Fixed commit": "5dfcf4f04352dbb16cae821c98d4a0a94ab86dd6", "Url": "https://api.github.com/repos/jaki2012/SoftwareMetricsAnalyse", "Date": "2016-10-22T05:03:48Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.threeten.bp.temporal.TemporalAccessor.query(org.threeten.bp.temporal.TemporalQueries.localDate())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((localDate == null) && (temporalAccessor.isSupported(ChronoField.MONTH_OF_YEAR))) { org.threeten.bp.YearMonth yearMonth = org.threeten.bp.YearMonth.from(temporalAccessor); localDate = yearMonth.atDay(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/706/buggy-version/src.main.java.org.gbif.common.parsers.date.TemporalAccessorUtils.java", "BodyUseAPI": ["org.threeten.bp.YearMonth.from(org.threeten.bp.temporal.TemporalAccessor)"], "Fixed commit": "d127a22e355ed0a5ed5c6d00d7efca21199f38d4", "Url": "https://api.github.com/repos/gbif/parsers", "Date": "2016-06-30T12:29:37Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((localDate == null) && (temporalAccessor.isSupported(ChronoField.YEAR))) { org.threeten.bp.Year year = org.threeten.bp.Year.from(temporalAccessor); localDate = year.atDay(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/706/buggy-version/src.main.java.org.gbif.common.parsers.date.TemporalAccessorUtils.java", "BodyUseAPI": ["org.threeten.bp.Year.from(org.threeten.bp.temporal.TemporalAccessor)"], "Fixed commit": "d127a22e355ed0a5ed5c6d00d7efca21199f38d4", "Url": "https://api.github.com/repos/gbif/parsers", "Date": "2016-06-30T12:29:37Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (monthNum == (endMonth)) { setReDay(year_num, monthNum, 1, endDay, list_big, list_little); }else { setReDay(year_num, monthNum, 1, 31, list_big, list_little); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/479/buggy-version/pickerview.src.main.java.com.bigkoo.pickerview.view.WheelTime.java", "BodyUseAPI": ["com.bigkoo.pickerview.view.WheelTime.3.setReDay(int,int,int,int,java.util.List<java.lang.String>,java.util.List<java.lang.String>)", "com.bigkoo.pickerview.view.WheelTime.3.setReDay(int,int,int,int,java.util.List<java.lang.String>,java.util.List<java.lang.String>)"], "Fixed commit": "87d402dd19195fab247390fd3bd1918f144fac50", "Url": "https://api.github.com/repos/jmheart/Android-PickerView", "Date": "2017-11-15T06:13:50Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((si.getLineWidth()) == 0) { si.setLineWidth(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3483/buggy-version/ShapePatterns.src.shapepatterns.GUI.controller.CustomShapeEditorFXMLController.java", "BodyUseAPI": ["shapepatterns.BLL.ShapeInfo.setLineWidth(int)"], "Fixed commit": "3ac677371d3688ae19d9cef03fc4d0cc3ae9d041", "Url": "https://api.github.com/repos/sebokpeter/Shape_patterns", "Date": "2017-11-09T12:22:16Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (fileInputStream != null) { byte[] imgByte = null; imgByte = org.apache.commons.io.IOUtils.toByteArray(fileInputStream); byte[] encodedImage = org.apache.commons.codec.binary.Base64.encodeBase64(imgByte); encodeImg = new java.lang.String(encodedImage); com.photon.phresco.service.admin.actions.Login.s_encodeImgMap.put(getCustomerId(), encodeImg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6132/buggy-version/phresco-service-web.src.main.java.com.photon.phresco.service.admin.actions.Login.java", "BodyUseAPI": ["org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)"], "Fixed commit": "325ebde489d2d4e9a7e27b25fd4f9ccd24927654", "Url": "https://api.github.com/repos/phresco/service", "Date": "2013-04-29T15:17:52Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mongodb.gridfs.GridFS.findOne(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (imageForOutput != null) { inputStream = imageForOutput.getInputStream(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6132/buggy-version/phresco-service-impl.src.main.java.com.photon.phresco.service.impl.DbService.java", "BodyUseAPI": ["com.mongodb.gridfs.GridFSDBFile.getInputStream()"], "Fixed commit": "325ebde489d2d4e9a7e27b25fd4f9ccd24927654", "Url": "https://api.github.com/repos/phresco/service", "Date": "2013-04-29T15:17:52Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ent instanceof gamelogic.entities.RenderTeleporter) { java.awt.Image tileImage = imagehelper.Imagehelper.loadImage2(\"dirt64.png\"); g.drawImage(tileImage, (xOffset + (point.x)), (yWallOffset + (point.y)), null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8749/buggy-version/src.graphics.GameCanvas.java", "BodyUseAPI": [], "Fixed commit": "70d99dcc817365122136bbe5ab224e34b9418218", "Url": "https://api.github.com/repos/benjels/Invasion", "Date": "2015-09-29T06:20:55Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jiraPlusPlus.physicalBoard.QrCode.Result.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ticketId.trim().length()) > 0) { jiraPlusPlus.Ticket ticket = new jiraPlusPlus.Ticket(ticketId, \"ToDo\"); tickets.add(ticket); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5143/buggy-version/src.jiraPlusPlus.physicalBoard.QrCode.QrCode.java", "BodyUseAPI": [], "Fixed commit": "ceaa00309f0f616ad9bd05d1906170ab7faf2be1", "Url": "https://api.github.com/repos/inadram/jiraPlusPlus", "Date": "2014-04-04T10:07:15Z"},
{"Line": "=>8", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((id.trim().length()) < 1) { throw new java.lang.Exception(\"Ticket Id cannot be empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5143/buggy-version/src.jiraPlusPlus.Ticket.java", "BodyUseAPI": [], "Fixed commit": "ceaa00309f0f616ad9bd05d1906170ab7faf2be1", "Url": "https://api.github.com/repos/inadram/jiraPlusPlus", "Date": "2014-04-04T10:07:15Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((answer.shipSunk) != null) opponentsWorld.shipsSunk.add(answer.shipSunk);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4110/buggy-version/src.player.RandomGuessPlayer.java", "BodyUseAPI": ["opponentsWorld.shipsSunk.add(answer.shipSunk)"], "Fixed commit": "cad75280acd42aaa135f215988b2baf2f98516bc", "Url": "https://api.github.com/repos/patstockwell/battleship", "Date": "2017-05-12T08:42:58Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (answer.isHit) opponentsWorld.hits.add(guess.createCoordinate()); else opponentsWorld.misses.add(guess.createCoordinate());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4110/buggy-version/src.player.RandomGuessPlayer.java", "BodyUseAPI": [], "Fixed commit": "cad75280acd42aaa135f215988b2baf2f98516bc", "Url": "https://api.github.com/repos/patstockwell/battleship", "Date": "2017-05-12T08:42:58Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (currentBranch != null) { currentBranch.path.clear(); if (currentBranch.stack.isEmpty()) { break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1143/buggy-version/src.main.java.org.jboss.msc.txn.CycleDetector.java", "BodyUseAPI": ["java.util.Deque<org.jboss.msc.service.ServiceName>.clear()", "java.util.Deque<org.jboss.msc.txn.Registration>.isEmpty()"], "Fixed commit": "185929d362c844da005f42c695003f1013db8d2a", "Url": "https://api.github.com/repos/fl4via/msc2", "Date": "2014-04-22T06:07:18Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (backend == (com.redhat.ceylon.common.Backend.None)) return (!(com.redhat.ceylon.eclipse.core.builder.CeylonBuilder.compileToJava(javaProject.getProject()))) && (com.redhat.ceylon.eclipse.core.builder.CeylonBuilder.compileToJs(javaProject.getProject()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8959/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.core.model.JDTModuleManager.java", "BodyUseAPI": [], "Fixed commit": "e433b65517cd961b01a70178d77b1fe7316d9600", "Url": "https://api.github.com/repos/eclipse/ceylon-ide-eclipse", "Date": "2015-06-03T01:58:15Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (preference instanceof android.preference.RingtonePreference) { if (android.text.TextUtils.isEmpty(stringValue)) { preference.setSummary(R.string.ringtone_silent); }else { android.media.Ringtone ringtone = android.media.RingtoneManager.getRingtone(preference.getContext(), android.net.Uri.parse(stringValue)); if (ringtone == null) { preference.setSummary(null); }else { java.lang.String name = ringtone.getTitle(preference.getContext()); preference.setSummary(name); } } }else if (preference instanceof android.preference.EditTextPreference) { android.widget.EditText internalEditText = ((android.preference.EditTextPreference) (preference)).getEditText(); int inputType = internalEditText.getInputType(); if (((inputType & (android.text.InputType.TYPE_NUMBER_VARIATION_PASSWORD)) != 0) || ((inputType & (android.text.InputType.TYPE_TEXT_VARIATION_PASSWORD)) != 0)) { }else { preference.setSummary(stringValue); } }else { preference.setSummary(stringValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6524/buggy-version/library.src.net.saik0.android.unifiedpreference.UnifiedPreferenceUtils.java", "BodyUseAPI": ["android.preference.Preference.setSummary(java.lang.String)", "android.preference.Preference.setSummary(<nulltype>)", "android.preference.Preference.setSummary(java.lang.String)", "android.preference.Preference.setSummary(R.string.ringtone_silent)", "android.preference.Preference.getContext()", "android.media.Ringtone.getTitle(preference.getContext())", "android.media.RingtoneManager.getRingtone(preference.getContext(),android.net.Uri.parse(stringValue))", "android.preference.Preference.getContext()", "android.preference.Preference.setSummary(java.lang.String)"], "Fixed commit": "728b7e32244fabadfe001a7b44f14069ff85ec2b", "Url": "https://api.github.com/repos/houseofadams/UnifiedPreference", "Date": "2013-08-24T10:33:19Z"},
{"Line": "=>589", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((option) == (-1)) { option = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8450/buggy-version/src.imagehandling.GUI.java", "BodyUseAPI": [], "Fixed commit": "92c36c7a45740df5e994e036f85344331d1036cf", "Url": "https://api.github.com/repos/DominikRidder/ImageExtractor", "Date": "2015-07-14T05:55:36Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["utility.RideSharingUtil.getChatInstance().getLastPrivateChat(chatJson.getReceiver_Id())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (lastChat != null) { java.lang.System.out.println((((\"Last Chat -- Message - \" + (lastChat.getMsg())) + \"\\n Time - \") + (lastChat.getCreateTimeSeconds()))); java.lang.Long lastChatTime = lastChat.getCreateTimeSeconds(); if ((currentTime - lastChatTime) > (utility.GlobalConstants.NOTIFICATION_CHAT_TIMEOUT)) { notifyUser(receiver, sender, chat); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7596/buggy-version/src.rest.ChatService.java", "BodyUseAPI": ["pojos.PrivateChat.getCreateTimeSeconds()", "pojos.PrivateChat.getCreateTimeSeconds()", "pojos.PrivateChat.getMsg()", "java.io.PrintStream.println((((\"Last Chat --   Message - \" + (lastChat.getMsg())) + \"\\n Time - \") + (lastChat.getCreateTimeSeconds())))"], "Fixed commit": "76de5f96a1104043b4e92673eaa3ac2c0ad4fa19", "Url": "https://api.github.com/repos/sahilajmani/RideShareApp", "Date": "2015-11-13T15:50:23Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (worldObj.isRemote) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/9241/buggy-version/src.main.java.WayofTime.bloodmagic.tile.TileSpectralBlock.java", "BodyUseAPI": [], "Fixed commit": "145d7a5bc20e72743fca2d167d3192a23ad10c4d", "Url": "https://api.github.com/repos/WayofTime/BloodMagic", "Date": "2016-06-17T14:00:33Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((line = bf.readLine()) != null) { JSONArr = new boatClub.JSONArray(line); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3408/buggy-version/BoatClub.src.boatClub.Registry.java", "BodyUseAPI": [], "Fixed commit": "afc4e699c8f31148727ee30631869a07c31ab91f", "Url": "https://api.github.com/repos/mollers/UML-workshop-2", "Date": "2017-09-29T09:56:08Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["services.getTableService().getTableMetadata(spec.getWindowName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (tableMetadata != null) { services.getStatementVariableRefService().addReferences(statementContext.getStatementName(), tableMetadata.getTableName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1903/buggy-version/esper.src.main.java.com.espertech.esper.core.start.EPStatementStartMethodCreateIndex.java", "BodyUseAPI": ["com.espertech.esper.epl.table.mgmt.TableMetadata.getTableName()", "services.getStatementVariableRefService().addReferences(statementContext.getStatementName(),tableMetadata.getTableName())"], "Fixed commit": "222e4a71bf33ac77d22d6e011bd71421fa579a87", "Url": "https://api.github.com/repos/espertechinc/esper", "Date": "2015-12-09T19:04:50Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.atai.dental.module.payment.model.Payment.getAmount()", "service.getByKey(key).getAmount()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (oldAmount != newAmount) { com.atai.dental.module.payment.model.Payment paymentObject = service.getByKey(key); com.atai.dental.module.trment.model.Treatment treatment = paymentObject.getTreatment(); treatment.setTreatmentPaid((((treatment.getTreatmentPaid()) - oldAmount) + newAmount)); treatmentService.update(treatment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2047/buggy-version/src.main.java.com.atai.dental.module.payment.controller.PaymentController.java", "BodyUseAPI": ["com.atai.dental.module.trment.model.Treatment.setTreatmentPaid((((treatment.getTreatmentPaid()) - oldAmount) + newAmount))"], "Fixed commit": "87790a1d88e772b443f20b13702a10a71432eef2", "Url": "https://api.github.com/repos/eighti-atai/Dental", "Date": "2017-02-02T05:31:18Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.atai.dental.module.payment.model.Payment.getTreatment()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((treatment.getTreatmentPaid()) == null) { treatment.setTreatmentPaid(0.0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2047/buggy-version/src.main.java.com.atai.dental.module.payment.controller.PaymentController.java", "BodyUseAPI": ["com.atai.dental.module.trment.model.Treatment.setTreatmentPaid(double)"], "Fixed commit": "87790a1d88e772b443f20b13702a10a71432eef2", "Url": "https://api.github.com/repos/eighti-atai/Dental", "Date": "2017-02-02T05:31:18Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["foundState.stateEx.report()", "nouth.les.Simplifier.simplify(foundState.stateEx)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(simple.report().equals(ugly))) { as.add(simple.reportForTex()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5634/buggy-version/nouth.les.Outputter.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.String>.add(simple.reportForTex())", "nouth.les.Ex.reportForTex()"], "Fixed commit": "7fa13e940fa83763213e6e62f1abc9ebf1f04150", "Url": "https://api.github.com/repos/Nouthghule/les", "Date": "2016-06-23T19:36:38Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(marble.isEmpty())) parseLatch.countDown();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5791/buggy-version/reactivesocket-tck-drivers.src.main.java.io.reactivesocket.tckdrivers.common.ParseMarble.java", "BodyUseAPI": [], "Fixed commit": "9074d6d2cfb1e631e892b19c0f09b65055db6391", "Url": "https://api.github.com/repos/xytosis/reactivesocket-java", "Date": "2016-07-28T23:24:38Z"},
{"Line": "=>672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((value != null) && (value.equals(\"\"))) { value = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4979/buggy-version/src.com.dotmarketing.portlets.contentlet.model.Contentlet.java", "BodyUseAPI": [], "Fixed commit": "ce017b95906228d5ce0953090b060b82627f6b5e", "Url": "https://api.github.com/repos/dotCMS/dotCMS", "Date": "2013-07-31T22:44:23Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 1) n.getTransform().setRotation(new io.github.achtern.AchternEngine.core.math.Quaternion(io.github.achtern.AchternEngine.core.Transform.Y_AXIS, ((float) (java.lang.Math.toRadians(90))))); else if (i == 2) n.getTransform().setRotation(new io.github.achtern.AchternEngine.core.math.Quaternion(io.github.achtern.AchternEngine.core.Transform.Z_AXIS, ((float) (java.lang.Math.toRadians(90)))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8702/buggy-version/src.main.java.io.github.achtern.AchternEngine.core.scenegraph.entity.debug.AxisDebugger.java", "BodyUseAPI": [], "Fixed commit": "dfa93a646751b7da5ef8f5dada036e958c4b37ce", "Url": "https://api.github.com/repos/achtern/AchternEngine", "Date": "2014-08-15T15:06:19Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(subjectList.isEmpty())) matchingSubjectList.addAll(subjectList);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/9070/buggy-version/src.com.nodoubts.ui.subject.SubjectListActivity.java", "BodyUseAPI": ["java.util.List<com.nodoubts.core.Subject>.addAll(java.util.List<com.nodoubts.core.Subject>)"], "Fixed commit": "f9e7c18b036164d22d53a5ebc096ec43f340da20", "Url": "https://api.github.com/repos/NoDoubtsEnterpriseCompany/100duvidas", "Date": "2015-02-21T20:11:48Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.io.FilenameUtils.separatorsToUnix(info.getLocation())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((org.apache.commons.io.FilenameUtils.getPrefix(unixsep)) != null) && (!(unixsep.startsWith(\"file:/\")))) unixsep = \"file:/\" + unixsep;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/833/buggy-version/geogig.src.main.java.org.geogig.geoserver.config.GeoServerStoreRepositoryResolver.java", "BodyUseAPI": [], "Fixed commit": "0b8c2cbf08e459725de344d72c61056a442c3615", "Url": "https://api.github.com/repos/jmiller-boundless/geoserver-exts", "Date": "2015-11-10T18:13:59Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["CrewMember.Role.fromKey(crewMember.getRole())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (role == (CrewMember.Role.ACTOR)) { member = new org.atlasapi.content.Actor(); if (crewMember.hasCharacter()) { ((org.atlasapi.content.Actor) (member)).withCharacter(crewMember.getCharacter()); } }else { member.withRole(role); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/449/buggy-version/atlas-cassandra.src.main.java.org.atlasapi.content.CrewMemberSerializer.java", "BodyUseAPI": ["org.atlasapi.content.CrewMember.withRole(CrewMember.Role)"], "Fixed commit": "69c673059d5b2b4aa12428cc982c796004490ea7", "Url": "https://api.github.com/repos/atlasapi/atlas-deer", "Date": "2016-05-20T13:50:15Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (crewMember.hasName()) { member.withName(crewMember.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/449/buggy-version/atlas-cassandra.src.main.java.org.atlasapi.content.CrewMemberSerializer.java", "BodyUseAPI": ["ContentProtos.CrewMember.getName()", "org.atlasapi.content.CrewMember.withName(crewMember.getName())"], "Fixed commit": "69c673059d5b2b4aa12428cc982c796004490ea7", "Url": "https://api.github.com/repos/atlasapi/atlas-deer", "Date": "2016-05-20T13:50:15Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (crewMember.hasUri()) { member.setCanonicalUri(crewMember.getUri()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/449/buggy-version/atlas-cassandra.src.main.java.org.atlasapi.content.CrewMemberSerializer.java", "BodyUseAPI": ["org.atlasapi.content.CrewMember.setCanonicalUri(crewMember.getUri())", "ContentProtos.CrewMember.getUri()"], "Fixed commit": "69c673059d5b2b4aa12428cc982c796004490ea7", "Url": "https://api.github.com/repos/atlasapi/atlas-deer", "Date": "2016-05-20T13:50:15Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.memoranda.ui.CalendarData.getActiveProjects()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((todayProjects.size()) <= 6) && (i > 5)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7523/buggy-version/src.net.sf.memoranda.ui.CalendarViewCellRenderer.java", "BodyUseAPI": [], "Fixed commit": "dc55e7f258f81bcbd0f0947e1ed8695c1db6b9b1", "Url": "https://api.github.com/repos/ser316asu/Friedenau_SER316", "Date": "2017-04-14T02:52:19Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.isOn()) != (move)) s.toggle(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8536/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.controllers.teleop.BonnieCollection.java", "BodyUseAPI": ["org.firstinspires.ftc.teamcode.organs.Spinner.toggle(int)"], "Fixed commit": "1f90b9007185f16f751cafbb6cb0acc087cffe41", "Url": "https://api.github.com/repos/nhs-t10/fractal", "Date": "2017-01-24T22:34:28Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.isOn()) != (move)) s.toggle((-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8536/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.controllers.teleop.BonnieCollection.java", "BodyUseAPI": ["org.firstinspires.ftc.teamcode.organs.Spinner.toggle(int)"], "Fixed commit": "1f90b9007185f16f751cafbb6cb0acc087cffe41", "Url": "https://api.github.com/repos/nhs-t10/fractal", "Date": "2017-01-24T22:34:28Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.glurak.data.User.User.getMyPlaylists()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((myPlaylists.size()) < 5) { returnArray = new de.glurak.data.Playlist[myPlaylists.size()]; for (int i = 0; i < (myPlaylists.size()); i++) { returnArray[i] = myPlaylists.get(i); } }else { returnArray = new de.glurak.data.Playlist[5]; for (int i = 0; i < 5; i++) { returnArray[i] = myPlaylists.get(i); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/936/buggy-version/SProject.src.de.glurak.frontend.mainFrame.content.profile.ProfileVController.java", "BodyUseAPI": ["java.util.List<de.glurak.data.Playlist>.get(int)", "java.util.List<de.glurak.data.Playlist>.size()", "java.util.List<de.glurak.data.Playlist>.get(int)", "java.util.List<de.glurak.data.Playlist>.size()"], "Fixed commit": "0801e41b7a38fb49e855959411ae298ec701fb6c", "Url": "https://api.github.com/repos/zian92/Glurak", "Date": "2014-03-07T14:51:44Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.type) == (java.lang.Double.class)) { return ((T) (java.lang.Double.valueOf(aString))); }else if ((this.type) == (java.lang.Float.class)) { return ((T) (java.lang.Float.valueOf(aString))); }else if (aString.isEmpty()) { return null; }else { return ((T) (aString)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6700/buggy-version/maohifx.common.src.main.java.com.maohi.software.maohifx.common.ExtStringConverter.java", "BodyUseAPI": [], "Fixed commit": "afd336a458e76ed7fa18085ffa696715033b96a8", "Url": "https://api.github.com/repos/Heifara/maohifx", "Date": "2016-01-11T22:58:30Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (game.GameClient.game.get_table_id().equals(id)) { game.GameClient.game.set_board_state(msg); game.GameClient.game.toggle_turn(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1483/buggy-version/src.game.GameClient.java", "BodyUseAPI": ["game.CheckersBoardPlayer.toggle_turn()", "game.CheckersBoardPlayer.set_board_state(java.lang.String)"], "Fixed commit": "c9e87a0929889e698ec031c9b58f1792e0061f9a", "Url": "https://api.github.com/repos/martindev446/wsu-ceg-4110-project-pmwh", "Date": "2016-11-17T02:09:17Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (authorData.hasDateOfBirth()) author.setDateOfBirth(authorData.getDateOfBirth());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1934/buggy-version/src.main.java.com.pratilipi.data.util.AuthorDataUtil.java", "BodyUseAPI": ["com.pratilipi.data.type.Author.setDateOfBirth(authorData.getDateOfBirth())", "com.pratilipi.data.client.AuthorData.getDateOfBirth()"], "Fixed commit": "435f03ad4d41e4cd6c5456dbbb9eeca21458a15d", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-01-18T12:08:39Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (authorData.hasGender()) author.setGender(authorData.getGender());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1934/buggy-version/src.main.java.com.pratilipi.data.util.AuthorDataUtil.java", "BodyUseAPI": ["com.pratilipi.data.client.AuthorData.getGender()", "com.pratilipi.data.type.Author.setGender(authorData.getGender())"], "Fixed commit": "435f03ad4d41e4cd6c5456dbbb9eeca21458a15d", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-01-18T12:08:39Z"},
{"Line": "=>920", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["updateInstJson.getAsJsonObject().getAsJsonObject(\"status\").get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (patch.getAsString().equals(Constant.FAILURE)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5455/buggy-version/src.com.asiainfo.ocmanager.rest.resource.TenantResource.java", "BodyUseAPI": [], "Fixed commit": "e0a2d2609c57c773fb1fca6c8b0da030f6fc6799", "Url": "https://api.github.com/repos/OCManager/RestServer", "Date": "2017-07-21T03:23:18Z"},
{"Line": "=>659", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (strict) iterator2 = otherRef.foreachIterator(false, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7650/buggy-version/src.ru.regenix.jphp.runtime.memory.ArrayMemory.java", "BodyUseAPI": [], "Fixed commit": "ae79ba507378633bcfb80fe29f3ca25c39637acf", "Url": "https://api.github.com/repos/dim-s/jvm-php", "Date": "2014-01-09T09:26:41Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["postEditText.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (descricaoEhVazia(text)) { java.lang.StringBuilder validationErrorMessage = new java.lang.StringBuilder(); validationErrorMessage.append(getString(string.error_empty_description)); android.widget.Toast.makeText(this, validationErrorMessage.toString(), Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8468/buggy-version/app.src.br.edu.ufcg.les142.PostRelatoActivity.java", "BodyUseAPI": [], "Fixed commit": "d76b78ba9acd2f6b8ab62ceeb3db369f24b85f11", "Url": "https://api.github.com/repos/joopeed/arrumae", "Date": "2015-03-15T19:46:34Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((beanInfo.jsonType) != null) { serialzeFeatures |= com.alibaba.fastjson.serializer.SerializerFeature.of(beanInfo.jsonType.serialzeFeatures()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8894/buggy-version/src.main.java.com.alibaba.fastjson.serializer.JavaBeanSerializer.java", "BodyUseAPI": ["com.alibaba.fastjson.serializer.SerializerFeature.of(beanInfo.jsonType.serialzeFeatures())", "beanInfo.jsonType.serialzeFeatures()"], "Fixed commit": "bc0491abf3d449a4d0bebc4948c3b9ba3e2a8b2d", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-12-16T03:28:45Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(loggingFile.exists())) { loggingFile.createNewFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6907/buggy-version/src.org.theorangealliance.datasync.logging.TOALogger.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "f00fbf44fd772bb0e1deada8cda4eb5e32707b0c", "Url": "https://api.github.com/repos/orange-alliance/TOA-DataSync", "Date": "2017-12-09T12:22:29Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(logDir.exists())) { java.lang.System.out.println(logDir.getAbsolutePath()); logDir.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6907/buggy-version/src.org.theorangealliance.datasync.logging.TOALogger.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "java.io.File.mkdir()", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "f00fbf44fd772bb0e1deada8cda4eb5e32707b0c", "Url": "https://api.github.com/repos/orange-alliance/TOA-DataSync", "Date": "2017-12-09T12:22:29Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(lockFile.exists())) { lockFile.createNewFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6907/buggy-version/src.org.theorangealliance.datasync.logging.TOALogger.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "f00fbf44fd772bb0e1deada8cda4eb5e32707b0c", "Url": "https://api.github.com/repos/orange-alliance/TOA-DataSync", "Date": "2017-12-09T12:22:29Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cijena == \"\") return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/18/buggy-version/SIDEVS.src.main.java.ba.unsa.etf.si.app.SIDEVS.Validation.Validator.java", "BodyUseAPI": [], "Fixed commit": "8c8e664ae35e37ce1e2c43d03ac56610743d9baf", "Url": "https://api.github.com/repos/SoftverInzenjeringETFSA/SI2015Tim1", "Date": "2016-05-17T12:46:33Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((textField_tezina.getText().isEmpty()) || (textField_cijena.getText().isEmpty())) { l.dodajLot(textFieldBroj_lota.getText(), ((double) (0)), ((double) (0)), datum, kolicina, lijek, skladiste, java.lang.Integer.parseInt(textField_kolicina_pakovanje.getText())); }else { l.dodajLot(textFieldBroj_lota.getText(), java.lang.Double.parseDouble(textField_tezina.getText()), java.lang.Double.parseDouble(textField_cijena.getText()), datum, kolicina, lijek, skladiste, java.lang.Integer.parseInt(textField_kolicina_pakovanje.getText())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/18/buggy-version/SIDEVS.src.main.java.ba.unsa.etf.si.app.SIDEVS.View.Radnik.EvidencijaLotova.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "ba.unsa.etf.si.app.SIDEVS.ViewModel.LotVM.dodajLot(java.lang.String,double,double,java.util.Date,int,ba.unsa.etf.si.app.SIDEVS.Model.Lijek,ba.unsa.etf.si.app.SIDEVS.Model.Skladiste,int)", "javax.swing.JTextField.getText()", "java.lang.Double.parseDouble(java.lang.String)", "javax.swing.JTextField.getText()"], "Fixed commit": "8c8e664ae35e37ce1e2c43d03ac56610743d9baf", "Url": "https://api.github.com/repos/SoftverInzenjeringETFSA/SI2015Tim1", "Date": "2016-05-17T12:46:33Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((com.bigred.servlets.SessionState) (request.getSession().getAttribute(\"State\"))).getBooking()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (b != null) b.goToPayment();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8401/buggy-version/bigred.src.com.bigred.servlets.PaymentServlet.java", "BodyUseAPI": ["com.bigred.servlets.Booking.goToPayment()"], "Fixed commit": "3ffbd8f4cb31260f771c659840c51f398fc5024e", "Url": "https://api.github.com/repos/ZahraTee/Big-Red-Storage", "Date": "2014-12-12T11:34:21Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((res.algebra.ResMath.dmod(scale)) == 0) return ret;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3733/buggy-version/src.res.algebra.DModSet.java", "BodyUseAPI": [], "Fixed commit": "e365d58ebeaaff67b3098ca72d062af009d70541", "Url": "https://api.github.com/repos/ameliaperry/resolution", "Date": "2015-04-08T05:51:55Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["blueprint.com.sage.browse.adapters.UserListAdapter.Item.getUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((user.getSchool()) != null) { viewHolder.mSchool.setText(user.getSchool().getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/883/buggy-version/sage-android.Sage.app.src.main.java.blueprint.com.sage.browse.adapters.UserListAdapter.java", "BodyUseAPI": ["user.getSchool().getName()", "blueprint.com.sage.models.User.getSchool()", "android.widget.TextView.setText(user.getSchool().getName())"], "Fixed commit": "ba05c97c71c0893c940951a51808b9d18ec6e77d", "Url": "https://api.github.com/repos/calblueprint/sage-mobile", "Date": "2015-12-29T09:04:01Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<blueprint.com.sage.models.User>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((user.getSchool()) != null) { viewHolder.mSchool.setText(user.getSchool().getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/883/buggy-version/sage-android.Sage.app.src.main.java.blueprint.com.sage.requests.adapters.VerifyUserListAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(user.getSchool().getName())", "user.getSchool().getName()", "blueprint.com.sage.models.User.getSchool()"], "Fixed commit": "ba05c97c71c0893c940951a51808b9d18ec6e77d", "Url": "https://api.github.com/repos/calblueprint/sage-mobile", "Date": "2015-12-29T09:04:01Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDebugEnabled()) { log.info((\"[CombatTag] Disabling npc with ID of: \" + uuid)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1485/buggy-version/CombatTag.com.trc202.CombatTag.CombatTag.java", "BodyUseAPI": [], "Fixed commit": "312f8b249b6f208a19051a8f12fe123a6770a2fb", "Url": "https://api.github.com/repos/cheddar262/Combat-Tag", "Date": "2014-04-17T03:13:48Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (page == null) { throw new simple.exceptions.BadParameterException(UserError.PAGE_PARAMETER_NULL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3281/buggy-version/view.src.main.java.simple.users.UserEndpoint.java", "BodyUseAPI": [], "Fixed commit": "f601b203b01a98e3ed20f5dc8e8fdde7d7ad9b71", "Url": "https://api.github.com/repos/koshnarek/simple-rest", "Date": "2014-06-08T02:51:00Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (products != null) { for (int i = 0; i < (products.length()); ++i) { _productList.add(new org.onepf.oms.data.SkuDetails(products.get(i).toString())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/9140/buggy-version/Android.local_store.src.org.onepf.oms.data.Application.java", "BodyUseAPI": [], "Fixed commit": "ae3478991e5b998b3baec8f013681a8777040198", "Url": "https://api.github.com/repos/GrimReio/open-iab-unity", "Date": "2013-09-19T15:07:58Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (inventoryList != null) { for (int i = 0; i < (inventoryList.length()); ++i) { java.lang.String sku = ((java.lang.String) (inventoryList.get(i))); _inventoryList.add(sku); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/9140/buggy-version/Android.local_store.src.org.onepf.oms.data.Application.java", "BodyUseAPI": [], "Fixed commit": "ae3478991e5b998b3baec8f013681a8777040198", "Url": "https://api.github.com/repos/GrimReio/open-iab-unity", "Date": "2013-09-19T15:07:58Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fileToAdd.exists()) { files.add(fileToAdd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6487/buggy-version/plugin.src.main.java.org.exoplatform.crowdin.mojo.AbstractCrowdinMojo.java", "BodyUseAPI": ["java.util.List<java.io.File>.add(java.io.File)"], "Fixed commit": "541d404398d7173fb0f78c6b9e255d914a0e62e2", "Url": "https://api.github.com/repos/exoplatform/crowdin-maven-plugin", "Date": "2013-10-04T05:06:22Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (result == null) { textGebruikersnaam.setText(result[0]); textVoornaam.setText(result[1]); textAchternaam.setText(result[2]); textPunten.setText(result[3]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6137/buggy-version/app.src.main.java.ass.mad.arnhem.han.planninghelper.users.userActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "0b55e1c62a21b10e0786493c17a15b861e208be2", "Url": "https://api.github.com/repos/mees1994/MAD-PlanningHelper", "Date": "2016-06-03T12:30:08Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.lwjgl.input.Keyboard.getEventKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((key == (org.lwjgl.input.Keyboard.KEY_GRAVE)) && (org.lwjgl.input.Keyboard.isKeyDown(Keyboard.KEY_LCONTROL))) { if (!((net.minecraft.client.Minecraft.getMinecraft().currentScreen) instanceof com.builtbroken.mc.framework.access.global.gui.GuiAccessSystem)) { if ((net.minecraft.client.Minecraft.getMinecraft().currentScreen) != null) { net.minecraft.client.Minecraft.getMinecraft().currentScreen.onGuiClosed(); } net.minecraft.client.Minecraft.getMinecraft().displayGuiScreen(new com.builtbroken.mc.framework.access.global.gui.GuiAccessSystem()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7249/buggy-version/src.main.scala.com.builtbroken.mc.seven.client.ClientProxy.java", "BodyUseAPI": [], "Fixed commit": "18ac1ae32411beb6b0f8807f94801c0ce091516c", "Url": "https://api.github.com/repos/VoltzEngine-Project/Minecraft-1.7", "Date": "2017-09-15T17:15:04Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.builtbroken.mc.core.Engine.runningAsDev) { showDebugWindow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7249/buggy-version/src.main.scala.com.builtbroken.mc.seven.client.ClientProxy.java", "BodyUseAPI": [], "Fixed commit": "18ac1ae32411beb6b0f8807f94801c0ce091516c", "Url": "https://api.github.com/repos/VoltzEngine-Project/Minecraft-1.7", "Date": "2017-09-15T17:15:04Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pce.getPropertyName().equals(AppearanceUIModelEvent.SELECTED_FUNCTION)) { refreshSelectedFunction(((org.gephi.appearance.api.Function) (pce.getNewValue()))); }else if (pce.getPropertyName().equals(AppearanceUIModelEvent.SELECTED_TRANSFORMER_UI)) { refreshSelectedTransformerUI(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8331/buggy-version/modules.DesktopAppearance.src.main.java.org.gephi.desktop.appearance.AppearanceToolbar.java", "BodyUseAPI": ["org.gephi.desktop.appearance.AppearanceToolbar.refreshSelectedFunction(java.lang.Object)", "java.beans.PropertyChangeEvent.getPropertyName()", "java.lang.String.equals(AppearanceUIModelEvent.SELECTED_TRANSFORMER_UI)", "java.beans.PropertyChangeEvent.getNewValue()"], "Fixed commit": "800b64413a3e6b3b903f659446c1143be2b28cd1", "Url": "https://api.github.com/repos/gephi/gephi", "Date": "2015-12-02T19:41:06Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.evolveum.midpoint.wf.impl.activiti.dao.WorkItemProvider.createTaskQuery(com.evolveum.midpoint.prism.query.ObjectQuery,boolean,java.util.Collection<com.evolveum.midpoint.schema.SelectorOptions<com.evolveum.midpoint.schema.GetOperationOptions>>,com.evolveum.midpoint.schema.result.OperationResult)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (taskQuery == null) { return new com.evolveum.midpoint.schema.SearchResultList(java.util.Collections.emptyList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6815/buggy-version/model.workflow-impl.src.main.java.com.evolveum.midpoint.wf.impl.activiti.dao.WorkItemProvider.java", "BodyUseAPI": [], "Fixed commit": "d469cd04977d1a0507a71f30f0caf707bc3d01ee", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2017-01-13T13:41:12Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (spec.toLowerCase().startsWith(\"file:\")) { spec = spec.substring(\"file:\".length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7779/buggy-version/sdks.java.core.src.main.java.org.apache.beam.sdk.io.LocalFileSystem.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "5afe7bddc9ec30e1d493108b32ed2d14ae56ba08", "Url": "https://api.github.com/repos/flaviocf/beam", "Date": "2017-06-30T17:14:34Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (forced) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/5025/buggy-version/docear_plugin_services.src.org.docear.plugin.services.features.update.UpdateCheck.java", "BodyUseAPI": [], "Fixed commit": "e5a3881e3e860bbdae60a79f175dd2c381ef2421", "Url": "https://api.github.com/repos/Docear/Desktop", "Date": "2013-08-05T14:56:20Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.wso2.carbon.analytics.spark.core.internal.AnalyticsComponent.log.isDebugEnabled()) { org.wso2.carbon.analytics.spark.core.internal.AnalyticsComponent.log.debug(\"Spark host is set NOT set, hence using the node network interface\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2682/buggy-version/components.analytics-processors.org.wso2.carbon.analytics.spark.core.src.main.java.org.wso2.carbon.analytics.spark.core.internal.AnalyticsComponent.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)"], "Fixed commit": "cf81479c4ed2472134ee0afdebb42497f32f239e", "Url": "https://api.github.com/repos/swsachith/carbon-analytics", "Date": "2016-03-03T03:45:22Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dimensionsToSkip[dim])) { allSkip = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3831/buggy-version/extensions.computation-density-impl.src.main.java.org.sybila.parasim.computation.density.spawn.cpu.FractionTrajectorySpawner.java", "BodyUseAPI": [], "Fixed commit": "62d8445092cea659fafeda4608d2dd07ad8616f0", "Url": "https://api.github.com/repos/sybila/parasim", "Date": "2012-12-17T16:29:42Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!allSkip) { org.sybila.parasim.model.trajectory.FractionPoint middle = org.sybila.parasim.model.trajectory.FractionPoint.maximum(space.getDimension()).middle(org.sybila.parasim.model.trajectory.FractionPoint.minimum(space.getDimension())); org.sybila.parasim.model.trajectory.Trajectory t = new org.sybila.parasim.model.trajectory.PointTrajectory(createPoint(space, middle)); result.add(org.sybila.parasim.model.trajectory.TrajectoryWithNeighborhoodWrapper.createAndUpdateReference(t, new org.sybila.parasim.model.trajectory.ListDataBlock(new java.util.ArrayList(surroundings.values())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3831/buggy-version/extensions.computation-density-impl.src.main.java.org.sybila.parasim.computation.density.spawn.cpu.FractionTrajectorySpawner.java", "BodyUseAPI": [], "Fixed commit": "62d8445092cea659fafeda4608d2dd07ad8616f0", "Url": "https://api.github.com/repos/sybila/parasim", "Date": "2012-12-17T16:29:42Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.Toolkit.getSystemClipboard()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (clipboard.isDataFlavorAvailable(java.awt.datatransfer.DataFlavor.allHtmlFlavor)) { com.scruel.Main.HTMLProcesser(((java.lang.String) (clipboard.getData(java.awt.datatransfer.DataFlavor.allHtmlFlavor)))); }else { if ((com.scruel.Main.tipsFrame) != null) com.scruel.Main.tipsFrame.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3218/buggy-version/src.main.java.com.scruel.Main.java", "BodyUseAPI": ["com.scruel.Main.HTMLProcesser(java.lang.Object)", "java.awt.datatransfer.Clipboard.getData(java.awt.datatransfer.DataFlavor)"], "Fixed commit": "d04ae3ba13d81f66cad4af47497a3222c25c22e4", "Url": "https://api.github.com/repos/scruel/ClipIt", "Date": "2017-08-19T08:24:07Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.creation.tiagocv.cvss.MainActivity.calledAlready)) { com.google.firebase.database.FirebaseDatabase.getInstance().setPersistenceEnabled(true); com.creation.tiagocv.cvss.MainActivity.calledAlready = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/9225/buggy-version/app.src.main.java.com.creation.tiagocv.cvss.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "98125c9b5009c6df18292a047195c2f57394ba6d", "Url": "https://api.github.com/repos/Tiagocv64/CVSS", "Date": "2017-10-07T16:17:04Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (newLatitude)) editLocation.putExtra(\"lat\", newLatitude); else editLocation.putExtra(\"lat\", currentItem.getLatitude());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/414/buggy-version/app.src.main.java.com.szpilkowski.android.pelnymagazynek.Item.ItemEdit.java", "BodyUseAPI": [], "Fixed commit": "340ccb0c8eca0756d21e46249fc3fabcc9231243", "Url": "https://api.github.com/repos/szpileq/PelnyMagazynek", "Date": "2016-08-10T20:06:47Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (newLongitude)) editLocation.putExtra(\"lng\", newLongitude); else editLocation.putExtra(\"lng\", currentItem.getLongitude());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/414/buggy-version/app.src.main.java.com.szpilkowski.android.pelnymagazynek.Item.ItemEdit.java", "BodyUseAPI": [], "Fixed commit": "340ccb0c8eca0756d21e46249fc3fabcc9231243", "Url": "https://api.github.com/repos/szpileq/PelnyMagazynek", "Date": "2016-08-10T20:06:47Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tokenTagDataList.get(j).getToken()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(tokenizer.isLowerCase(token))) { token = tokenizer.decapitalize(token); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/7022/buggy-version/src.main.java.com.HaikuMasterTrainingDataProcessor.main.HaikuMasterTrainingDataProcessorImpl.java", "BodyUseAPI": ["com.HaikuMasterTrainingDataProcessor.tokenizing.Tokenizer.decapitalize(java.lang.String)"], "Fixed commit": "4241b792d178b796f1cd664e79e35ca553e1b208", "Url": "https://api.github.com/repos/ares2015/HaikuMasterTrainingDataProcessor", "Date": "2017-03-02T13:29:32Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.adapter) != null) && (this.adapter.isEnabled())) this.startThread(); else if ((this.adapter) == null) { android.widget.Toast.makeText(this, getString(R.string.bluetooth_not_supported), Toast.LENGTH_SHORT).show(); finish(); }else if (!(this.adapter.isEnabled())) { android.content.Intent enableBtIntent = new android.content.Intent(android.bluetooth.BluetoothAdapter.ACTION_REQUEST_ENABLE); startActivityForResult(enableBtIntent, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/4280/buggy-version/app.src.main.java.br.usp.ime.checkattendance.TeacherBluetoothActivity.java", "BodyUseAPI": ["android.bluetooth.BluetoothAdapter.isEnabled()"], "Fixed commit": "ec5f906a11f02f9e3c737ddd52a51221d8c4c2fe", "Url": "https://api.github.com/repos/lucaskanashiro/checkattendance", "Date": "2017-05-16T13:39:25Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((queue == null) || ((queue.size()) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2327/buggy-version/parsely.parselyandroid.ParselyTracker.java", "BodyUseAPI": [], "Fixed commit": "71d6f1ecb22416ee39b6b65322d9dc8a6262fd47", "Url": "https://api.github.com/repos/emmett9001/parsely-android", "Date": "2017-02-08T17:34:09Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getNode().equals(\"*\")) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/3902/buggy-version/src.main.java.com.bwfcwalshy.flarebot.permissions.PermissionNode.java", "BodyUseAPI": [], "Fixed commit": "b11109add3c110df8695bac961ea93071c49509b", "Url": "https://api.github.com/repos/FlareBot/FlareBot", "Date": "2017-01-21T19:56:07Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (info.isEverChangedStatus()) { result.add(info); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/6258/buggy-version/deployed-releases-report.src.main.java.com.atlassian.plugins.proteus.jira.reports.ProductsReleaseWorkflowTimeStaticsReport.java", "BodyUseAPI": ["java.util.List<com.atlassian.plugins.proteus.jira.issue.view.util.IssueInfo>.add(com.atlassian.plugins.proteus.jira.issue.view.util.IssueInfo)"], "Fixed commit": "f388666543b7718fdfd7710e1ae79215ca9c6304", "Url": "https://api.github.com/repos/tanghongfa/jira-reports", "Date": "2015-04-22T23:34:47Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((hand.get(0).getFace()) == null) && ((hand.get(1).getValue()) == 11)) { java.lang.System.out.println((((((((hand.get(0).getValue()) + \" of \") + (hand.get(0).getSuit())) + \" and a \") + (hand.get(1).getFace())) + \" of \") + (hand.get(1).getSuit()))); }else { java.lang.System.out.println((((((((hand.get(0).getValue()) + \" of \") + (hand.get(0).getSuit())) + \" and a \") + (hand.get(1).getValue())) + \" of \") + (hand.get(1).getSuit()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/1706/buggy-version/Cards.java", "BodyUseAPI": ["java.util.ArrayList<Cards>.get(int)", "java.util.ArrayList<Cards>.get(int)", "Cards.getSuit()", "Cards.getValue()", "java.util.ArrayList<Cards>.get(int)", "java.util.ArrayList<Cards>.get(int)", "Cards.getValue()", "java.io.PrintStream.println(java.lang.String)", "java.util.ArrayList<Cards>.get(int)", "Cards.getFace()", "Cards.getSuit()", "java.util.ArrayList<Cards>.get(int)", "Cards.getSuit()", "java.util.ArrayList<Cards>.get(int)", "java.io.PrintStream.println(java.lang.String)", "Cards.getValue()", "java.util.ArrayList<Cards>.get(int)", "Cards.getSuit()"], "Fixed commit": "2c4f8fb12028a66978670dca75d49b5adbe585b5", "Url": "https://api.github.com/repos/patartos/BlackJack", "Date": "2014-08-05T00:06:32Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (sourceObject == null) { sourceObject = game.getPermanent(ability.getSourceId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2840/buggy-version/Mage.Common.src.mage.view.CardsView.java", "BodyUseAPI": [], "Fixed commit": "78071ce0a3e4d58979e600109fbb18ed0763b297", "Url": "https://api.github.com/repos/BijanT/mage", "Date": "2015-08-25T21:34:15Z"},
{"Line": "=>956", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mn0807.getCheckedRadioButtonId()) == (-1)) { android.widget.Toast.makeText(this, (\"ERROR(empty): \" + (getString(R.string.mn0807))), Toast.LENGTH_LONG).show(); mn080788.setError(\"This data is Required!\"); android.util.Log.i(edu.aku.hassannaqvi.mnch_src.Section8Activity.TAG, \"mn0808: This data is Required!\"); return false; }else { mn080788.setError(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2659/buggy-version/app.src.main.java.edu.aku.hassannaqvi.mnch_src.Section8Activity.java", "BodyUseAPI": [], "Fixed commit": "90dcccf71cb3dc85aa65a095d550c6a87a007321", "Url": "https://api.github.com/repos/shznaqvi/MNCH-SRC", "Date": "2017-02-14T11:56:04Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (message.getBooleanAttribute(EaseConstant.MESSAGE_ATTR_IS_VIDEO_CALL, false)) { digest = (com.hyphenate.easeui.utils.EaseCommonUtils.getString(context, R.string.video)) + (txtBody.getMessage()); }else if (message.getBooleanAttribute(EaseConstant.MESSAGE_ATTR_IS_BIG_EXPRESSION, false)) { if (!(android.text.TextUtils.isEmpty(txtBody.getMessage()))) { digest = txtBody.getMessage(); }else { digest = com.hyphenate.easeui.utils.EaseCommonUtils.getString(context, R.string.dynamic_expression); } }else { digest = txtBody.getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/8234/buggy-version/src.com.hyphenate.easeui.utils.EaseCommonUtils.java", "BodyUseAPI": ["com.hyphenate.chat.EMMessage.getBooleanAttribute(EaseConstant.MESSAGE_ATTR_IS_BIG_EXPRESSION,boolean)"], "Fixed commit": "6094a038fef80ae91b926abfdea733eb1661b603", "Url": "https://api.github.com/repos/easemob/easeui", "Date": "2016-03-03T11:56:15Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((d.getHealth()) < 1) this.setHealth(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2745/buggy-version/the-last-bit.src.me.haeger.game.thelastbit.agents.DiracShot.java", "BodyUseAPI": [], "Fixed commit": "b73e0a649a23280f15d44fa75d0c7834a5bc5085", "Url": "https://api.github.com/repos/grulg/thelastbit", "Date": "2013-10-24T18:22:22Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((h.getHealth()) < 1) this.setHealth(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V93/2745/buggy-version/the-last-bit.src.me.haeger.game.thelastbit.agents.Laser.java", "BodyUseAPI": [], "Fixed commit": "b73e0a649a23280f15d44fa75d0c7834a5bc5085", "Url": "https://api.github.com/repos/grulg/thelastbit", "Date": "2013-10-24T18:22:22Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (AnnotationLevelFilterCommand.isCcdsOnly) { function.annotation.base.TranscriptManager.resetTranscriptSet(function.annotation.base.TranscriptManager.ccdsTranscriptSet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4130/buggy-version/src.main.java.function.annotation.base.TranscriptManager.java", "BodyUseAPI": [], "Fixed commit": "88afd8b87c7e93394684a865c3a5b55b7635fdc9", "Url": "https://api.github.com/repos/igm-team/atav", "Date": "2016-09-27T14:58:37Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gameFiles.combatController.getDist(int,int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (distToTarget <= (attacker.getRange())) { target.modHP(((-1) * (attacker.getDamageValue()))); if ((target.getHP()) <= 0) { if (players[0]) { player2Ships.remove(targetIndex); }else { player1Ships.remove(targetIndex); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5859/buggy-version/spaceGame.src.gameFiles.combatController.java", "BodyUseAPI": ["gameFiles.ship.getDamageValue()", "gameFiles.ship.modHP(((-1) * (attacker.getDamageValue())))"], "Fixed commit": "2b76d4ddf82478f6e61061c52ae80344f25d1add", "Url": "https://api.github.com/repos/hwilling/spaceGame", "Date": "2017-11-12T23:16:57Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDrawerEnabled) { mDrawerLayout = ((android.support.v4.widget.DrawerLayout) (findViewById(R.id.drawer_layout))); mDrawerListView = ((android.widget.ListView) (mDrawerLayout.findViewById(android.R.id.list))); mDrawerListView.setAdapter(new veszelovszki.soma.rc_car.adapter.NavigationDrawerListAdapter(this)); mDrawerListView.setOnItemClickListener(new android.widget.AdapterView.OnItemClickListener() { @java.lang.Override public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) { veszelovszki.soma.rc_car.utils.NavigationDrawerListItem item = ((veszelovszki.soma.rc_car.utils.NavigationDrawerListItem) (mDrawerListView.getAdapter().getItem(position))); onDrawerItemClick(item); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/896/buggy-version/app.src.main.java.veszelovszki.soma.rc_car.utils.PreferenceAdaptActivity.java", "BodyUseAPI": [], "Fixed commit": "7f4525f0c63ee896cee42d6ec01a04dd6121da38", "Url": "https://api.github.com/repos/somaveszelovszki/RC-Car-Android", "Date": "2017-02-20T14:40:59Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerCurrentStage) == 3) { try { win(); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6090/buggy-version/core.src.com.spy.game.BaseStage.java", "BodyUseAPI": [], "Fixed commit": "875312713ef2139b61cb93482f59029a82bb46f0", "Url": "https://api.github.com/repos/qowieury/spygame-oop", "Date": "2016-12-15T06:56:55Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((et_email.getText()) != null) && ((et_contact_number.getText()) != null)) { et_email.setVisibility(View.GONE); et_contact_number.setVisibility(View.GONE); et_isd.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7436/buggy-version/app.src.main.java.com.pawcare.source.views.RescueFragment.java", "BodyUseAPI": ["android.widget.EditText.setVisibility(View.GONE)", "android.widget.EditText.setVisibility(View.GONE)"], "Fixed commit": "f94ff829dad14fb7cdfbd6a77db29aa10eb9bad2", "Url": "https://api.github.com/repos/anmol0591/TestUi1", "Date": "2015-09-04T19:51:53Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.wso2.andes.server.slot.SlotManager.log.isDebugEnabled()) { if (null != slotToBeAssigned) { org.wso2.andes.server.slot.SlotManager.log.debug((\"Slot Manager - giving a slot from fresh pool. Slot= \" + (slotToBeAssigned.toString()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6028/buggy-version/modules.andes-core.broker.src.main.java.org.wso2.andes.server.slot.SlotManager.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug((\"Slot Manager - giving a slot from fresh pool. Slot= \" + (slotToBeAssigned.toString())))"], "Fixed commit": "18e353016deb7e6e07fc5afa380d62ca7cc2502a", "Url": "https://api.github.com/repos/ramith/andes", "Date": "2014-11-28T08:11:46Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.wso2.andes.server.slot.SlotManager.log.isDebugEnabled()) { if (null != slotToBeAssigned) { org.wso2.andes.server.slot.SlotManager.log.debug((\"Slot Manager - giving a slot from unAssignedSlotMap. Slot= \" + (slotToBeAssigned.toString()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6028/buggy-version/modules.andes-core.broker.src.main.java.org.wso2.andes.server.slot.SlotManager.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug((\"Slot Manager - giving a slot from unAssignedSlotMap. Slot= \" + (slotToBeAssigned.toString())))"], "Fixed commit": "18e353016deb7e6e07fc5afa380d62ca7cc2502a", "Url": "https://api.github.com/repos/ramith/andes", "Date": "2014-11-28T08:11:46Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ctrip.hermes.metaservice.zk.ZKSerializeUtils.deserialize(m_zkClient.getClient().getData().forPath(com.ctrip.hermes.metaservice.zk.ZKPathUtils.getMetaInfoZkPath()),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (metaInfo == null) { metaInfo = new com.ctrip.hermes.metaserver.meta.MetaInfo(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/9141/buggy-version/hermes-metaserver.src.main.java.com.ctrip.hermes.metaserver.meta.MetaHolder.java", "BodyUseAPI": [], "Fixed commit": "64796aff5544a92a6d78ff1b49d45af26b1dee99", "Url": "https://api.github.com/repos/yiming187/hermes", "Date": "2015-06-25T08:02:17Z"},
{"Line": "=>906", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashSet<java.lang.String>.contains(java.lang.String)", "java.util.HashSet<java.lang.String>.contains(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(fromWarden || toWarden)) { java.lang.System.out.println((\"fuuuu \" + pathKey)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1955/buggy-version/src.parsing.MaxParser.java", "BodyUseAPI": [], "Fixed commit": "67d482bef8713a339747a50823e45214b5663a8d", "Url": "https://api.github.com/repos/pendgaft/cash-nightwing", "Date": "2015-07-22T20:16:50Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pollStr.equals(\"&&&\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1955/buggy-version/src.parsing.MaxParser.java", "BodyUseAPI": [], "Fixed commit": "67d482bef8713a339747a50823e45214b5663a8d", "Url": "https://api.github.com/repos/pendgaft/cash-nightwing", "Date": "2015-07-22T20:16:50Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (parentTriple == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7169/buggy-version/karma-common.src.main.java.edu.isi.karma.er.helper.SPARQLGeneratorUtil.java", "BodyUseAPI": [], "Fixed commit": "28e125c2d91310ed42fad1784e414caeb4897b1e", "Url": "https://api.github.com/repos/InformationIntegrationGroup/Web-Karma", "Date": "2014-04-03T11:03:48Z"},
{"Line": "=>562", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url.equals(\"democracynow.videocdn.scaleengine.net/democracynow-iphone/play/democracynow/playlist.m3u8\")) { android.widget.Toast toast = android.widget.Toast.makeText(getActivity(), \"You can't download the Live Stream\", Toast.LENGTH_LONG); toast.show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/425/buggy-version/app.src.main.java.com.workingagenda.democracydroid.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1975d2c7a66fd6d16aa18947eb2698e7b04c89f8", "Url": "https://api.github.com/repos/fenimore/DemocracyDroid", "Date": "2016-12-11T21:47:30Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((semester.equals(\"Sem_2\")) && (!(branch.equals(\"ARCH\")))) { url = dataSnapshot.child(\"Sem_2\").getValue().toString(); }else { url = dataSnapshot.child(branch).child(semester).getValue().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8929/buggy-version/app.src.main.java.com.venkibellu.myapplication.QuestionPapers.java", "BodyUseAPI": ["dataSnapshot.child(branch).child(java.lang.String)", "dataSnapshot.child(branch).child(semester).getValue().toString()", "dataSnapshot.child(branch).child(semester).getValue()", "com.google.firebase.database.DataSnapshot.child(java.lang.String)"], "Fixed commit": "ecb697d088b2c9b12efee02e231c61b5d7ffda5b", "Url": "https://api.github.com/repos/venki-bellu/UVCEConnectRetake", "Date": "2017-09-02T06:51:17Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((builder.lastDividerColor) != 0) { mDivider.setColor(builder.lastDividerColor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/308/buggy-version/ItemDecorationLib.src.main.java.com.github.qing.itemdecoration.LinearDividerItemDecoration.java", "BodyUseAPI": ["android.graphics.drawable.ColorDrawable.setColor(int)"], "Fixed commit": "2a1a72fb5cd5d6e23751a5b2619badb3016d7fd0", "Url": "https://api.github.com/repos/njleonzhang/SimpleItemDecoration", "Date": "2017-06-30T06:27:20Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentUser) != null) { showFragment(position, currentUser.id); }else { showFragment(position, (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4258/buggy-version/app.src.main.java.com.example.stalker.mapfriends.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1637716670dd551a0ce09bf7613a3c808d1e9fbb", "Url": "https://api.github.com/repos/Evgeny-Ivanov/MapFriends", "Date": "2016-04-16T20:20:02Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (JsonToken.NUMBER.equals(reader.peek())) { return ((short) (reader.nextInt())); }else { return java.lang.Short.parseShort(reader.nextString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7438/buggy-version/src.main.java.com.github.nmorel.gwtjackson.client.mapper.ShortJsonMapper.java", "BodyUseAPI": ["com.github.nmorel.gwtjackson.client.stream.JsonReader.nextInt()", "com.github.nmorel.gwtjackson.client.stream.JsonReader.nextString()", "java.lang.Short.parseShort(reader.nextString())"], "Fixed commit": "40d9016942809cfe6ac7d9698285b19812d7379b", "Url": "https://api.github.com/repos/nmorel/gwt-jackson", "Date": "2013-08-25T20:23:33Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (JsonToken.NUMBER.equals(reader.peek())) { return reader.nextInt(); }else { return java.lang.Integer.parseInt(reader.nextString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7438/buggy-version/src.main.java.com.github.nmorel.gwtjackson.client.mapper.IntegerJsonMapper.java", "BodyUseAPI": ["com.github.nmorel.gwtjackson.client.stream.JsonReader.nextString()", "com.github.nmorel.gwtjackson.client.stream.JsonReader.nextInt()", "java.lang.Integer.parseInt(reader.nextString())"], "Fixed commit": "40d9016942809cfe6ac7d9698285b19812d7379b", "Url": "https://api.github.com/repos/nmorel/gwt-jackson", "Date": "2013-08-25T20:23:33Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count == 0) { silenceLimit = 1400; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1188/buggy-version/app.src.main.java.com.example.avigail.lastproject.AudioRecordService.java", "BodyUseAPI": [], "Fixed commit": "0fc3b86031040b50ae1da86da4e4550edb697d90", "Url": "https://api.github.com/repos/avigailab/finalProject", "Date": "2017-03-23T18:48:51Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tester.robotCollision()) { robot.collided = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4647/buggy-version/World.java", "BodyUseAPI": [], "Fixed commit": "d039512aa2c4e0f9428d7ec9e71bda968a4f72ba", "Url": "https://api.github.com/repos/tunguyen17/graphics", "Date": "2016-07-13T20:19:26Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.configuration.file.FileConfiguration.getConfigurationSection(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (worlds == null) { worlds = configWP.createSection(\"adopt.worlds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6031/buggy-version/src.main.java.com.fernferret.wolfpound.WolfPound.java", "BodyUseAPI": [], "Fixed commit": "981c261cec21144e57fb269d44c9b2f0eaa7a03e", "Url": "https://api.github.com/repos/FernFerret/WolfPound", "Date": "2011-12-11T02:41:04Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.TextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((text.length()) > 7) || ((text.length()) < 7)) { output(\"This is not a valid colour code.\"); }else { return text; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4654/buggy-version/ColourConverter.src.util.converter.ColourConverter.java", "BodyUseAPI": [], "Fixed commit": "a94c16993d633ce53d41cba5a7f8f166283d1d51", "Url": "https://api.github.com/repos/ProfessorLasagna/CompSci-Work", "Date": "2017-03-06T19:36:13Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (email.contentEquals(com.jtechme.jumpgokids.preference.ParentalAccounts.UserEmail)) { if (password.contentEquals(com.jtechme.jumpgokids.preference.ParentalAccounts.UserPassword)) { onLoginSuccess(); }else { onLoginFailed(); } }else { onLoginFailed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3535/buggy-version/app.src.main.java.com.jtechme.jumpgokids.activity.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "6e41508c29b8fc80ac2821bc09ac0168b2a34172", "Url": "https://api.github.com/repos/JTechMe/JumpGo-Kids", "Date": "2016-01-18T05:40:04Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["_emailText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (email.contentEquals(com.jtechme.jumpgokids.preference.ParentalAccounts.UserEmail)) { if (password.contentEquals(com.jtechme.jumpgokids.preference.ParentalAccounts.UserPassword)) { onLoginSuccess(); }else { onLoginFailed(); } }else { onLoginFailed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3535/buggy-version/app.src.main.java.com.jtechme.jumpgokids.activity.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "6e41508c29b8fc80ac2821bc09ac0168b2a34172", "Url": "https://api.github.com/repos/JTechMe/JumpGo-Kids", "Date": "2016-01-18T05:40:04Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.System.currentTimeMillis()) - (lastDamage)) > (DAMAGE_COOLDOWN)) { lastDamage = java.lang.System.currentTimeMillis(); hitPoints = (hitPoints) - damage; if ((hitPoints) <= 0) { kill(); Pirates.remove(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8182/buggy-version/src.Ship.java", "BodyUseAPI": [], "Fixed commit": "35ad1f7f73158d5d9e00a958be6b768a4fe9716b", "Url": "https://api.github.com/repos/Bullfest/Inda-Projekt_Kod", "Date": "2015-05-19T17:12:16Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.ece356.controller.Util.isValidLegal(session)) { java.util.List<com.ece356.domain.VisitAudit> visitAudits = visitAuditService.getAllAuditVisits(); model.addAttribute(\"visitAudits\", visitAudits); return \"legalView\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1789/buggy-version/src.main.java.com.ece356.controller.LegalController.java", "BodyUseAPI": [], "Fixed commit": "45693a8c48712aa29ab10b46c0bc64b29c3b4e3e", "Url": "https://api.github.com/repos/nganthony/ece356", "Date": "2014-03-31T03:17:25Z"},
{"Line": "=>1602", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(godmode)) { (health)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6082/buggy-version/build.source.toasterhell.java", "BodyUseAPI": [], "Fixed commit": "c4a00f4dadf7d3d5d30b42fcb742c310b0a4d8b4", "Url": "https://api.github.com/repos/DomFord/toasterhell", "Date": "2017-12-10T20:03:40Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((key) == '0') { if (playerManager.godmode) { playerManager.godmode = false; }else { playerManager.godmode = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6082/buggy-version/build.source.toasterhell.java", "BodyUseAPI": [], "Fixed commit": "c4a00f4dadf7d3d5d30b42fcb742c310b0a4d8b4", "Url": "https://api.github.com/repos/DomFord/toasterhell", "Date": "2017-12-10T20:03:40Z"},
{"Line": "=>1589", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(godmode)) { (health)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6082/buggy-version/build.source.toasterhell.java", "BodyUseAPI": [], "Fixed commit": "c4a00f4dadf7d3d5d30b42fcb742c310b0a4d8b4", "Url": "https://api.github.com/repos/DomFord/toasterhell", "Date": "2017-12-10T20:03:40Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url != null) { node.htmlURL = url; if (htmlData != null) { htmlData.url = url; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6333/buggy-version/src.org.opensourcephysics.tools.LaunchPanel.java", "BodyUseAPI": [], "Fixed commit": "9ea66b9988a52f29f22b41560796aa131bfd647f", "Url": "https://api.github.com/repos/OpenSourcePhysics/osp", "Date": "2015-12-13T18:22:38Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (htmlData != null) { htmlData.url = prevURL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6333/buggy-version/src.org.opensourcephysics.tools.LaunchPanel.java", "BodyUseAPI": [], "Fixed commit": "9ea66b9988a52f29f22b41560796aa131bfd647f", "Url": "https://api.github.com/repos/OpenSourcePhysics/osp", "Date": "2015-12-13T18:22:38Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (htmlData != null) { prevURL = htmlData.url; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6333/buggy-version/src.org.opensourcephysics.tools.LaunchPanel.java", "BodyUseAPI": [], "Fixed commit": "9ea66b9988a52f29f22b41560796aa131bfd647f", "Url": "https://api.github.com/repos/OpenSourcePhysics/osp", "Date": "2015-12-13T18:22:38Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCurrentDocument()) != null) getCurrentDocument().addPair(ru.programpark.mirah.index.MirahIndexer.SUPER_CLASS, typeName, true, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8352/buggy-version/mirah-lang.src.main.java.ru.programpark.mirah.index.MirahIndexer.java", "BodyUseAPI": [], "Fixed commit": "ce560a0c7f7867f72d730f0d8da9a3aba5c698e4", "Url": "https://api.github.com/repos/uujava/mirah-debug-nbm", "Date": "2017-07-06T14:08:40Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (RolePermission.EVERYONE.equals(permissionLevel)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7273/buggy-version/src.main.java.com.nincraft.ninbot.command.AbstractCommand.java", "BodyUseAPI": [], "Fixed commit": "8deb9ada7739232ba1e3dfa246d51da13e7d1afc", "Url": "https://api.github.com/repos/Nincodedo/Ninbot", "Date": "2017-09-13T20:33:42Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jp.vmi.selenium.selenese.command.Command.doCommand(jp.vmi.selenium.selenese.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result.isInterrupted()) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8105/buggy-version/src.main.java.jp.vmi.selenium.selenese.Runner.java", "BodyUseAPI": [], "Fixed commit": "b2b0aee008ee7e2a3f151acbf805590277d963cf", "Url": "https://api.github.com/repos/vmi/selenese-runner-java", "Date": "2012-07-23T13:24:57Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dateArr.length) < 3) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/9186/buggy-version/src.main.java.seedu.Tdoo.model.task.attributes.StartDate.java", "BodyUseAPI": [], "Fixed commit": "be43ce0372bbffd92754db1a81578d17ecd64ec1", "Url": "https://api.github.com/repos/CS2103AUG2016-T14-C1/Tdoo", "Date": "2016-11-02T08:08:19Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dateArr.length) < 3) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/9186/buggy-version/src.main.java.seedu.Tdoo.model.task.attributes.EndDate.java", "BodyUseAPI": [], "Fixed commit": "be43ce0372bbffd92754db1a81578d17ecd64ec1", "Url": "https://api.github.com/repos/CS2103AUG2016-T14-C1/Tdoo", "Date": "2016-11-02T08:08:19Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(addPrecision(healthMapLocation, location))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6621/buggy-version/src.DataAcquisition.src.uk.ac.ox.zoo.seeg.abraid.mp.dataacquisition.acquirers.healthmap.HealthMapLocationConverter.java", "BodyUseAPI": [], "Fixed commit": "375caa1f0ce373104268d6106a94f95d5a9bdb76", "Url": "https://api.github.com/repos/SEEG-Oxford/ABRAID-MP", "Date": "2014-10-01T13:20:13Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (drive.equals(\"Personal Documents\")) { nav.goToPersonalDocuments(); click(org.exoplatform.selenium.platform.ecms.admin.ELEMENT_VIEW_MODE_LINK.replace(\"${viewName}\", view)); org.exoplatform.selenium.Utils.pause(500); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/981/buggy-version/ui-common.src.main.java.org.exoplatform.selenium.platform.ecms.admin.ManageDrive.java", "BodyUseAPI": [], "Fixed commit": "ae7e691b48cc95e266355fdc7a1d9f8aaa7556a0", "Url": "https://api.github.com/repos/exoplatform/ui-test", "Date": "2013-09-17T09:51:54Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((seedu.cmdo.model.task.Task) (o)).checkDone().value) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3552/buggy-version/src.main.java.seedu.cmdo.model.task.Task.java", "BodyUseAPI": [], "Fixed commit": "e13168d110d736630c20f772a7c27d919889b277", "Url": "https://api.github.com/repos/CS2103AUG2016-F11-C2/main", "Date": "2016-11-06T19:05:14Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.checkDone().value) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3552/buggy-version/src.main.java.seedu.cmdo.model.task.Task.java", "BodyUseAPI": [], "Fixed commit": "e13168d110d736630c20f772a7c27d919889b277", "Url": "https://api.github.com/repos/CS2103AUG2016-F11-C2/main", "Date": "2016-11-06T19:05:14Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((indexCurrentRoom()) == (monster.getCurrentRoom())) { int distanceX = (monster.getPosX()) - (hero.getPosX()); int distanceY = (monster.getPosY()) - (hero.getPosY()); if ((((distanceX <= 1) && (distanceX >= (-1))) && (distanceY <= 1)) && (distanceY >= (-1))) { monster.setHP(((monster.getHP()) - 5)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6227/buggy-version/src.game.Game.java", "BodyUseAPI": ["java.lang.Character.getPosY()", "java.lang.Character.setHP(((monster.getHP()) - 5))", "java.lang.Character.getPosX()", "java.lang.Character.getHP()"], "Fixed commit": "6332ac471afd2385e87812513507b25c5acbdc69", "Url": "https://api.github.com/repos/simonh88/ACL2017_LaraClette", "Date": "2017-11-30T11:13:43Z"},
{"Line": "=>1803", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.almalence.opencam.cameracontroller.CameraController.camera.getParameters().getSupportedVideoSizes()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sizes == null) sizes = com.almalence.opencam.cameracontroller.CameraController.camera.getParameters().getSupportedPreviewSizes();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/885/buggy-version/src.com.almalence.opencam.cameracontroller.CameraController.java", "BodyUseAPI": [], "Fixed commit": "881dc4820d93123217ec9449923a9c1259fc5d5b", "Url": "https://api.github.com/repos/almalence/OpenCamera", "Date": "2015-12-02T09:24:36Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((url.startsWith(\"http://\")) || (url.startsWith(\"https://\"))) { view.loadUrl(url); return true; }else { android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(url)); intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); view.getContext().startActivity(intent); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6027/buggy-version/src.android.AquroWebView.java", "BodyUseAPI": ["android.net.Uri.parse(java.lang.String)", "android.webkit.WebView.loadUrl(java.lang.String)"], "Fixed commit": "8879532024c8412ddd69be775b4ac5f3c1499e5d", "Url": "https://api.github.com/repos/jnordstrom1983/cordova-plugin-aquro-webview", "Date": "2016-11-21T11:00:33Z"},
{"Line": "=>600", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (replaceExistingValues) { javax.cache.Configuration.Duration duration = expiryPolicy.getTTLForModifiedEntry(new org.jsr107.ri.RICache.RIEntry<K, V>(key, value), new javax.cache.Configuration.Duration(now, cachedValue.getExpiryTime())); long expiryTime = duration.getAdjustedTime(now); cachedValue.setInternalValue(internalValue, now); cachedValue.setExpiryTime(expiryTime); V oldValue = valueConverter.fromInternal(cachedValue.get()); dispatcher.addEvent(javax.cache.event.CacheEntryUpdatedListener.class, new org.jsr107.ri.RICacheEntryEvent<K, V>(this, key, value, oldValue)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5680/buggy-version/cache-ri-impl.src.main.java.org.jsr107.ri.RICache.java", "BodyUseAPI": [], "Fixed commit": "ca18cb162ba68265f686f08b3c8ab92ec985f748", "Url": "https://api.github.com/repos/jfialli/RI", "Date": "2013-04-15T16:57:40Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((finalStr.size()) == 0) { finalStr.add(lyrics); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8001/buggy-version/src.util.spotifyUtils.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "32e8157e94e286d0e48b950b8b7ae6df25c70014", "Url": "https://api.github.com/repos/Gamelands/spotify", "Date": "2017-04-27T17:08:09Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pModel.isState(de.engineapp.controls.SHOW_ARROWS_ALWAYS)) { attachVelocityArrow(object); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2750/buggy-version/PhysicsApplication.src.de.engineapp.controls.Canvas.java", "BodyUseAPI": [], "Fixed commit": "208180628a6d5787833befda0c537f0ee4546b4e", "Url": "https://api.github.com/repos/FrecherxDachs/PhysicsEngine", "Date": "2012-11-16T15:47:36Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pModel.isState(de.engineapp.controls.DEBUG)) { de.engineapp.controls.Box aabb = new de.engineapp.controls.Box(object, \"getAABB\"); ((de.engineapp.controls.IDecorable) (object)).putDecor(\"aabb\", aabb); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2750/buggy-version/PhysicsApplication.src.de.engineapp.controls.Canvas.java", "BodyUseAPI": [], "Fixed commit": "208180628a6d5787833befda0c537f0ee4546b4e", "Url": "https://api.github.com/repos/FrecherxDachs/PhysicsEngine", "Date": "2012-11-16T15:47:36Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((controller.Ownable) (currentField)).getOwner()) != null) { controller.GUIController.setPlayerBalance(((controller.Ownable) (currentField)).getOwner()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3955/buggy-version/src.controller.TurnController.java", "BodyUseAPI": ["controller.GUIController.setPlayerBalance(((controller.Ownable) (currentField)).getOwner())", "controller.Field.getOwner()"], "Fixed commit": "22b811ce269d34ee98366158d305a301511834e0", "Url": "https://api.github.com/repos/freyahelstrup/17_final", "Date": "2017-01-06T10:02:51Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.uuf.internal.util.NameUtils.getComponentName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (componentName.equals(dependencyComponentName)) { return java.util.Optional.ofNullable(fragments.get(fragmentName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4307/buggy-version/uuf-core.src.main.java.org.wso2.carbon.uuf.core.Lookup.java", "BodyUseAPI": [], "Fixed commit": "36da708461949fcfc0b647abb9c8ff1c2d9ebe8b", "Url": "https://api.github.com/repos/this/carbon-uuf", "Date": "2016-06-07T21:03:39Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.uuf.internal.util.NameUtils.getComponentName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (componentName.equals(dependencyComponentName)) { return java.util.Optional.ofNullable(layouts.get(layoutName)); }else if (flattenedDependencies.get(componentName).contains(dependencyComponentName)) { return java.util.Optional.ofNullable(layouts.get(layoutName)); }else { return java.util.Optional.<org.wso2.carbon.uuf.core.Layout>empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4307/buggy-version/uuf-core.src.main.java.org.wso2.carbon.uuf.core.Lookup.java", "BodyUseAPI": ["flattenedDependencies.get(componentName).contains(java.lang.String)", "com.google.common.collect.SetMultimap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "36da708461949fcfc0b647abb9c8ff1c2d9ebe8b", "Url": "https://api.github.com/repos/this/carbon-uuf", "Date": "2016-06-07T21:03:39Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.shirdrn.smart.dag.Vertex<?>, org.shirdrn.smart.dag.RunningVertex>.get(org.shirdrn.smart.dag.Vertex<?>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (runningVertex != null) { synchronized(runningVertex) { runningDAGs.get(dag).getRunningVertexes().add(runningVertex); } org.shirdrn.smart.dag.DAGMonitorImpl.LOG.info((((\"Vertex created: dag=\" + (dag.getName())) + \", vertex=\") + (vertex.getName()))); }else { throwVertexIllegalStateError(dag, vertex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4910/buggy-version/smart-dag-core.src.main.java.org.shirdrn.smart.dag.DAGMonitorImpl.java", "BodyUseAPI": ["runningDAGs.get(dag).getRunningVertexes().add(org.shirdrn.smart.dag.RunningVertex)"], "Fixed commit": "b1a1d42c74e393019e8cc254fa29fa16441b3cd0", "Url": "https://api.github.com/repos/shirdrn/smart-dag", "Date": "2015-06-10T02:34:33Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.bootsfaces.component.messages.Messages.getWarnClass()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == warnClass) styleClassPrefix = \"alert-warning\"; else styleClassPrefix = \"alert-warning \" + warnClass;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7416/buggy-version/src.main.java.net.bootsfaces.component.messages.MessagesRenderer.java", "BodyUseAPI": [], "Fixed commit": "8a9085946e9e13c321dc0c582b36e9eba11bacd6", "Url": "https://api.github.com/repos/TheCoder4eu/BootsFaces-OSP", "Date": "2016-07-29T20:59:38Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"info\".equals(severity)) { java.lang.String infoClass = uiMessages.getInfoClass(); if (infoClass == null) { styleClassPrefix = \"alert-info\"; }else { styleClassPrefix = \"alert-info \" + infoClass; } stylePrefix = uiMessages.getInfoStyle(); iconStyleClass = \"fa fa-info-circle\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7416/buggy-version/src.main.java.net.bootsfaces.component.messages.MessagesRenderer.java", "BodyUseAPI": [], "Fixed commit": "8a9085946e9e13c321dc0c582b36e9eba11bacd6", "Url": "https://api.github.com/repos/TheCoder4eu/BootsFaces-OSP", "Date": "2016-07-29T20:59:38Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.bootsfaces.component.messages.Messages.getErrorClass()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == errorClass) { styleClassPrefix = \"alert-danger\"; }else { styleClassPrefix = \"alert-danger \" + errorClass; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7416/buggy-version/src.main.java.net.bootsfaces.component.messages.MessagesRenderer.java", "BodyUseAPI": [], "Fixed commit": "8a9085946e9e13c321dc0c582b36e9eba11bacd6", "Url": "https://api.github.com/repos/TheCoder4eu/BootsFaces-OSP", "Date": "2016-07-29T20:59:38Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.bootsfaces.component.messages.Messages.getFatalClass()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == fatalClass) { styleClassPrefix = \"alert-danger\"; }else { styleClassPrefix = \"alert-danger \" + fatalClass; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7416/buggy-version/src.main.java.net.bootsfaces.component.messages.MessagesRenderer.java", "BodyUseAPI": [], "Fixed commit": "8a9085946e9e13c321dc0c582b36e9eba11bacd6", "Url": "https://api.github.com/repos/TheCoder4eu/BootsFaces-OSP", "Date": "2016-07-29T20:59:38Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (stylePrefix == null) { stylePrefix = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7416/buggy-version/src.main.java.net.bootsfaces.component.messages.MessagesRenderer.java", "BodyUseAPI": [], "Fixed commit": "8a9085946e9e13c321dc0c582b36e9eba11bacd6", "Url": "https://api.github.com/repos/TheCoder4eu/BootsFaces-OSP", "Date": "2016-07-29T20:59:38Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((clsMain.catchNumberFormatError(txtId, \"Please enter a positive integer for the ID.\")) || (clsMain.catchNumberFormatError(txtDay, \"Please enter a proper day of this month.\"))) || (clsMain.catchNumberFormatError(txtMonth, \"Please enter an integer from 1 to 12.\"))) || (clsMain.catchNumberFormatError(txtYear, \"Please enter a proper year.\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8982/buggy-version/src.packMain.clsEmployeeUI.java", "BodyUseAPI": [], "Fixed commit": "36448ec7314238a4476b800adad117cc8f252590", "Url": "https://api.github.com/repos/Luggs123/As2", "Date": "2016-10-19T00:44:36Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((generation + 1) < (tokens.length)) { nameToCheck = nameToCheck.concat(\".\").concat(tokens[(generation + 1)]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/9015/buggy-version/CoyoteDX.src.main.java.coyote.dx.context.TransformContext.java", "BodyUseAPI": ["java.lang.String.concat(java.lang.String)"], "Fixed commit": "d798a4939c5451206bfcaa4ac243d99eec2248c0", "Url": "https://api.github.com/repos/sdcote/coyote", "Date": "2017-08-06T23:16:45Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((generation + 1) < (tokens.length)) { nameToCheck = nameToCheck.concat(\".\").concat(tokens[(generation + 1)]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/9015/buggy-version/CoyoteDX.src.main.java.coyote.dx.context.TransformContext.java", "BodyUseAPI": ["java.lang.String.concat(java.lang.String)"], "Fixed commit": "d798a4939c5451206bfcaa4ac243d99eec2248c0", "Url": "https://api.github.com/repos/sdcote/coyote", "Date": "2017-08-06T23:16:45Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rapla.storage.xml.RaplaMapReader.getString(org.rapla.components.util.xml.RaplaSAXAttributes,java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (keyref != null) { childReader = null; if (raplaType == (org.rapla.entities.dynamictype.DynamicType.TYPE)) { org.rapla.entities.dynamictype.DynamicType type = getDynamicType(keyref); if (type != null) { java.lang.String id = ((org.rapla.entities.Entity) (type)).getId(); entityMap.putIdPrivate(key, id, DynamicType.TYPE); } } if (raplaType == (org.rapla.entities.Category.TYPE)) { try { org.rapla.entities.Category cat = getSuperCategory().getCategoryFromPath(keyref); java.lang.String id = ((org.rapla.entities.Entity) (cat)).getId(); entityMap.putIdPrivate(key, id, DynamicType.TYPE); } catch (org.rapla.entities.EntityNotFoundException e) { getLogger().warn(e.getMessage(), e); } } }else { childReader = getChildHandlerForType(raplaType); delegateElement(childReader, namespaceURI, localName, atts); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/921/buggy-version/src.main.java.org.rapla.storage.xml.RaplaMapReader.java", "BodyUseAPI": ["getSuperCategory().getCategoryFromPath(java.lang.String)", "org.rapla.storage.xml.RaplaMapReader.getDynamicType(java.lang.String)"], "Fixed commit": "390e3b122c3e38821d2bee0d52cae430d91592f9", "Url": "https://api.github.com/repos/rapla/rapla", "Date": "2015-08-10T06:42:14Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nih.nci.cananolab.dto.common.PublicationBean.getDomainFile()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((pub.getPubMedId()) != null) item.setPubMedId(pub.getPubMedId().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3110/buggy-version/software.cananolab-webapp.src.gov.nih.nci.cananolab.restful.workspace.WorkspaceManager.java", "BodyUseAPI": ["pub.getPubMedId().toString()", "gov.nih.nci.cananolab.domain.common.Publication.getPubMedId()", "gov.nih.nci.cananolab.restful.view.SimpleWorkspaceItem.setPubMedId(pub.getPubMedId().toString())"], "Fixed commit": "9077df4ae9b9ab78eb02708c631131f9e41dd8f8", "Url": "https://api.github.com/repos/CBIIT/cananolab", "Date": "2014-09-26T19:57:30Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((originalHopLength) == 0) { return (startVehicleTime) + (endVehicleTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8995/buggy-version/src.main.java.org.opentripplanner.routing.edgetype.flex.PartialPatternHop.java", "BodyUseAPI": [], "Fixed commit": "4165ac6122e47cd15beb53b7ce535ff5aa5c0583", "Url": "https://api.github.com/repos/camsys/OpenTripPlanner", "Date": "2017-08-17T17:44:02Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((prey.getX()) != (this.getX())) setDirection(java.lang.Math.atan((((prey.getY()) - (this.getY())) / ((prey.getX()) - (this.getX())))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7966/buggy-version/src.main.java.com.agarextend.app.Predator.java", "BodyUseAPI": ["com.agarextend.app.Predator.setDirection(double)", "com.agarextend.app.Herbivore.getX()", "com.agarextend.app.Herbivore.getY()", "java.lang.Math.atan((((prey.getY()) - (this.getY())) / ((prey.getX()) - (this.getX()))))"], "Fixed commit": "259e4752bf40a893258333ec6481d2bccbb9b133", "Url": "https://api.github.com/repos/gfrix/Awe_Inspiring_Maven_hacktj_2015", "Date": "2015-05-17T17:00:35Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (cursor != null) { cursor.setNotificationUri(getContext().getContentResolver(), uri); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2342/buggy-version/app.src.main.java.com.mahausch.couchmovies.data.MovieProvider.java", "BodyUseAPI": ["android.database.Cursor.setNotificationUri(getContext().getContentResolver(),android.net.Uri)"], "Fixed commit": "4a2fc8c2ea6e3535e0938cc77d06b97bbac0dde0", "Url": "https://api.github.com/repos/Barrick89/CouchMovies", "Date": "2017-11-24T17:39:49Z"},
{"Line": "=>931", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((row.getRowNum()) == 0) { setRowBrkCheckColIndex(getRowBrkFilterColIndex(row, \"Created Date\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2032/buggy-version/weekly-dashboard-automation.src.main.java.com.walmart.releaseautomation.weekly.dashboard.impl.RulesImpl.java", "BodyUseAPI": ["com.walmart.releaseautomation.weekly.dashboard.impl.RulesImpl.setRowBrkCheckColIndex(int)", "com.walmart.releaseautomation.weekly.dashboard.impl.RulesImpl.getRowBrkFilterColIndex(org.apache.poi.ss.usermodel.Row,java.lang.String)"], "Fixed commit": "4305f4c0a519827b8441aba02347d08fb98f1c30", "Url": "https://api.github.com/repos/nagagit/weekly_dashboard", "Date": "2015-01-22T17:17:14Z"},
{"Line": "=>936", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((row.getCell(getRowBrkCheckColIndex())) == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2032/buggy-version/weekly-dashboard-automation.src.main.java.com.walmart.releaseautomation.weekly.dashboard.impl.RulesImpl.java", "BodyUseAPI": [], "Fixed commit": "4305f4c0a519827b8441aba02347d08fb98f1c30", "Url": "https://api.github.com/repos/nagagit/weekly_dashboard", "Date": "2015-01-22T17:17:14Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(world().isRemote)) { sendDesc = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6663/buggy-version/common.mekanism.common.multipart.PartSidedPipe.java", "BodyUseAPI": [], "Fixed commit": "56943c8e2bf49735dba3a9db25269a959ace71a9", "Url": "https://api.github.com/repos/aidancbrady/Mekanism", "Date": "2014-01-22T02:05:27Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof org.joda.time.DateTime) { put(key, ((org.joda.time.DateTime) (value))); }else if (value instanceof java.lang.String) { put(key, ((java.lang.String) (value))); }else { storage.put(key, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/95/buggy-version/src.main.java.Data.Storage.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object)"], "Fixed commit": "a1ab3153f48e91292943fa68e866396d01fa3746", "Url": "https://api.github.com/repos/alianza-dev/Data-Storage", "Date": "2016-03-10T15:50:44Z"},
{"Line": "=>799", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wm.data.IDataUtil.getString(com.wm.data.IDataCursor,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((type == null) || (type.equalsIgnoreCase(\"string\"))) { value = \"\"; }else if (type.equalsIgnoreCase(\"integer\")) { value = java.math.BigInteger.ZERO; }else if (type.equalsIgnoreCase(\"decimal\")) { value = java.math.BigDecimal.ZERO; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2393/buggy-version/src.main.java.permafrost.tundra.lang.StringHelper.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "561549f921909412c2f6e53e6edb3ed95f3372c3", "Url": "https://api.github.com/repos/Permafrost/Tundra.java", "Date": "2015-09-28T06:47:17Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selection == null) { org.eclipse.jface.viewers.ISelectionProvider selectionProvider = activeEditor.getSite().getSelectionProvider(); if (selectionProvider != null) { selection = selectionProvider.getSelection(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2395/buggy-version/net.sourceforge.plantuml.eclipse.src.net.sourceforge.plantuml.eclipse.views.AbstractDiagramSourceView.java", "BodyUseAPI": [], "Fixed commit": "9a03aa4617b9328829ec4e96a188fe709d0c78fe", "Url": "https://api.github.com/repos/hallvard/plantuml", "Date": "2017-04-06T14:26:04Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currentStatement) != null) { org.joogie.util.TranslationHelpers.javaLocation2Attribute(this.currentStatement.getTags()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1807/buggy-version/jar2bpl.src.org.joogie.soot.SootStmtSwitch.java", "BodyUseAPI": [], "Fixed commit": "4ed503a3dbddb95f98b4ab8c6f7eef8bd5a7f689", "Url": "https://api.github.com/repos/martinschaef/jar2bpl", "Date": "2014-06-28T05:34:32Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/9063/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "233babdd9c517e36907163602ae978ac13a547c9", "Url": "https://api.github.com/repos/UWM-VEX/AutoFramework", "Date": "2016-12-07T01:13:53Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.tools.ToolProvider.getSystemJavaCompiler()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (compiler == null) { throw new org.stjs.generator.STJSRuntimeException((\"A Java compiler is not available for this project. \" + \"You may have configured your environment to run with a JRE instead of a JDK\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6208/buggy-version/command-line.src.main.java.org.stjs.command.line.CommandLine.java", "BodyUseAPI": [], "Fixed commit": "5fb4e47eddeae433922196fecc14ecb2a8d25131", "Url": "https://api.github.com/repos/st-js/st-js", "Date": "2013-12-26T09:44:01Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tokenSpan.getSentenceIndex()) < 0) { continue; }else if (this.splitTokens) { java.lang.StringBuilder str = new java.lang.StringBuilder(); int s = tokenSpan.getSentenceIndex(); edu.cmu.ml.rtw.generic.data.annotation.nlp.DocumentNLP document = tokenSpan.getDocument(); for (int i = 0; i < (tokenSpan.getLength()); i++) { java.lang.String tStr = document.getTokenStr(s, (i + (tokenSpan.getStartTokenIndex()))); if ((this.cleanFn) != null) tStr = this.cleanFn.transform(tStr); str.append(tStr).append(\"_\"); } if ((str.length()) > 0) str.delete(((str.length()) - 1), str.length()); output.add(str.toString()); }else { java.lang.String tStr = tokenSpan.toString(); if ((this.cleanFn) != null) tStr = this.cleanFn.transform(tStr); output.add(tStr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5644/buggy-version/src.main.java.edu.cmu.ml.rtw.generic.data.feature.fn.FnString.java", "BodyUseAPI": ["edu.cmu.ml.rtw.generic.data.annotation.nlp.TokenSpan.toString()", "edu.cmu.ml.rtw.generic.data.annotation.nlp.DocumentNLP.getTokenStr(int,(i + (tokenSpan.getStartTokenIndex())))", "edu.cmu.ml.rtw.generic.data.annotation.nlp.TokenSpan.getDocument()", "edu.cmu.ml.rtw.generic.data.annotation.nlp.TokenSpan.getSentenceIndex()", "edu.cmu.ml.rtw.generic.data.annotation.nlp.TokenSpan.getLength()", "edu.cmu.ml.rtw.generic.data.annotation.nlp.TokenSpan.getStartTokenIndex()"], "Fixed commit": "5b4776b1ea7bb4bde93f0d90022d9d5c3b8aa758", "Url": "https://api.github.com/repos/cmunell/micro-util", "Date": "2016-03-18T03:28:19Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((str.length()) > 0) str.delete(((str.length()) - 1), str.length());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5644/buggy-version/src.main.java.edu.cmu.ml.rtw.generic.data.feature.fn.FnString.java", "BodyUseAPI": ["java.lang.StringBuilder.delete(int,int)", "java.lang.StringBuilder.length()", "java.lang.StringBuilder.length()"], "Fixed commit": "5b4776b1ea7bb4bde93f0d90022d9d5c3b8aa758", "Url": "https://api.github.com/repos/cmunell/micro-util", "Date": "2016-03-18T03:28:19Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["elementExtractor.getElement().asType().toString()", "javax.lang.model.type.TypeMirror.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.equals(first, second)) { withInjectorSpecs.add(new mvp.compiler.model.spec.WithInjectorSpec(\"view\", com.squareup.javapoet.TypeName.get(extractor.getElement().asType()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3370/buggy-version/compiler.src.main.java.mvp.compiler.processingstep.MvpProcessingStep.java", "BodyUseAPI": [], "Fixed commit": "455c95ff0640ab55627c520cb6631e572bf3cf2e", "Url": "https://api.github.com/repos/lukaspili/Auto-Mortar", "Date": "2015-05-11T18:11:31Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gc.getInput().isKeyPressed(Input.KEY_LEFT)) { m.score += 1; tm.transitionRotate(m, gs.currentState, (-90), 0.2F); }else if (((gc.getInput().isKeyPressed(Input.KEY_SPACE)) && ((m.getTileUnderBall().type) != (Tile.Type.BLUE))) && ((m.getTileUnderBall().type) != (Tile.Type.RED))) { m.toggleRedBlue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2733/buggy-version/src.stc.states.PlayLevel.java", "BodyUseAPI": ["gc.getInput().isKeyPressed(Input.KEY_SPACE)", "org.newdawn.slick.GameContainer.getInput()"], "Fixed commit": "8c35b77824b5130af88b3714d00afa942138bd35", "Url": "https://api.github.com/repos/steppers/revoluzone", "Date": "2017-08-15T14:54:03Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (switched) { try { java.lang.String File = \"res/sounds/Red_Blue_Switch.wav\"; java.io.InputStream in = new java.io.FileInputStream(File); sun.audio.AudioStream audioStream = new sun.audio.AudioStream(in); AudioPlayer.player.start(audioStream); } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2733/buggy-version/src.stc.Model.java", "BodyUseAPI": [], "Fixed commit": "8c35b77824b5130af88b3714d00afa942138bd35", "Url": "https://api.github.com/repos/steppers/revoluzone", "Date": "2017-08-15T14:54:03Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(worldData.doesChunkExist(wipe.x, wipe.z))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4754/buggy-version/src.main.java.com.wimbli.WorldBorder.WorldTrimTask.java", "BodyUseAPI": [], "Fixed commit": "893701637ab5eeb3eb450f3cc6e60e1f72e64a9b", "Url": "https://api.github.com/repos/Brettflan/WorldBorder", "Date": "2013-07-12T06:56:27Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gui.Inventory.get().checkPickups()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(obj instanceof java.lang.Integer)) && (obj instanceof image.Drawable)) { heldItem = ((image.Drawable) (obj)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5690/buggy-version/src.state.StatePlay.java", "BodyUseAPI": [], "Fixed commit": "12fa0f2ec011a4ad903874065ac9c36cdb8b7df5", "Url": "https://api.github.com/repos/Ryxali/PoP", "Date": "2013-02-07T09:10:21Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((heldItem) != null) { heldItem.draw(mouseX, mouseY, g); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5690/buggy-version/src.state.StatePlay.java", "BodyUseAPI": [], "Fixed commit": "12fa0f2ec011a4ad903874065ac9c36cdb8b7df5", "Url": "https://api.github.com/repos/Ryxali/PoP", "Date": "2013-02-07T09:10:21Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tilda.utils.DateTimeUtil.secondsSinceMidnight(Start)) > (tilda.utils.DateTimeUtil.secondsSinceMidnight(End))) ++days;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1212/buggy-version/src.tilda.utils.DateTimeUtil.java", "BodyUseAPI": [], "Fixed commit": "e5c0f5e176aef23a70a4a0feb8ac5a59c921d10e", "Url": "https://api.github.com/repos/CapsicoHealth/Tilda", "Date": "2015-11-09T04:47:17Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (directoryPath == null) { return new java.lang.String[]{ }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5091/buggy-version/src.main.java.io.github.antalpeti.main.control.ControlElement.java", "BodyUseAPI": [], "Fixed commit": "12998dce533c7f17658e3387c07d1e37f69517a0", "Url": "https://api.github.com/repos/antalpeti/frequency-list-builder", "Date": "2016-10-20T21:51:49Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(javax.websocket.Endpoint.class.isAssignableFrom(sec.getEndpointClass()))) { annotatedEndpointFactory = io.undertow.websockets.jsr.annotated.AnnotatedEndpointFactory.create(sec.getEndpointClass(), encodingFactory, pt.getParameterNames()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1469/buggy-version/websockets-jsr.src.main.java.io.undertow.websockets.jsr.ServerWebSocketContainer.java", "BodyUseAPI": ["io.undertow.websockets.jsr.annotated.AnnotatedEndpointFactory.create(sec.getEndpointClass(),io.undertow.websockets.jsr.EncodingFactory,pt.getParameterNames())", "javax.websocket.server.ServerEndpointConfig.getEndpointClass()"], "Fixed commit": "32e16a16917d656c1438973cdac616e81f7ca3c8", "Url": "https://api.github.com/repos/stuartwdouglas/undertow", "Date": "2015-10-26T22:49:36Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((method.type().receiver()) != null) { environment.add(method.type().receiver()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7239/buggy-version/src.wyil.transforms.CoercionInsertion.java", "BodyUseAPI": ["method.type().receiver()", "wyil.transforms.CoercionInsertion.Env.add(method.type().receiver())", "wyil.transforms.CoercionInsertion.type()"], "Fixed commit": "3d8e986f76f34be278c1a27b829a223bca3271e4", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-06-12T00:53:55Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((method.type().receiver()) != null) { start++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7239/buggy-version/src.wyil.transforms.CoercionInsertion.java", "BodyUseAPI": [], "Fixed commit": "3d8e986f76f34be278c1a27b829a223bca3271e4", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-06-12T00:53:55Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4695/buggy-version/src.nu.nerd.nerdmessage.NerdMessage.java", "BodyUseAPI": [], "Fixed commit": "716bfd4bf9aad1cd8dc4eeca8963c0c24f19585e", "Url": "https://api.github.com/repos/NerdNu/NerdMessage", "Date": "2012-09-10T19:17:57Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rvalerio.foregroundappchecker.goodvibe.main.Store.getInt(android.content.Context,java.lang.String)", "com.rvalerio.foregroundappchecker.goodvibe.main.Store.getInt(android.content.Context,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fbTimeSpent > 0) && (fbNumOfOpens == 0)) { fbNumOfOpens += 1; com.rvalerio.foregroundappchecker.goodvibe.main.Store.increaseInt(mContext, com.rvalerio.foregroundappchecker.goodvibe.main.ForegroundToastService.FB_CURRENT_NUM_OF_OPENS, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2780/buggy-version/fgchecker-sample.src.main.java.com.rvalerio.foregroundappchecker.goodvibe.main.ForegroundToastService.java", "BodyUseAPI": [], "Fixed commit": "8bfa736be91576b32c6e2493959e76c82581db44", "Url": "https://api.github.com/repos/fnokeke/FgApp", "Date": "2017-06-20T05:46:34Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["observationField.get(\"name\").getTextValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"Gall Inducer\".equals(interactionType)) { type = org.eol.globi.domain.InteractType.INTERACTS_WITH; }else { throw new org.eol.globi.data.StudyImporterException(((\"found unsupported interactionType [\" + interactionType) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2391/buggy-version/eol-globi-data-tool.src.main.java.org.eol.globi.data.StudyImporterForINaturalist.java", "BodyUseAPI": [], "Fixed commit": "c19970bbd19c0acda53796495aca31e0e620ccbc", "Url": "https://api.github.com/repos/jhpoelen/eol-globi-data", "Date": "2013-11-06T04:10:30Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (main.EarthModellingDaemon.logExceptions(al)) { main.EarthModellingDaemon.deleteFile(asciiFile); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8516/buggy-version/Earth_Modeling_Parser.src-server.main.EarthModellingDaemon.java", "BodyUseAPI": [], "Fixed commit": "1269af3f1b996cf45ae96aac42cdece5545c284e", "Url": "https://api.github.com/repos/kj20207/SD_may1701_EM", "Date": "2017-03-24T00:29:59Z"},
{"Line": "=>496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.EarthModellingDaemon.runPythonScript(FileLocations.PUBLISH_MAP_SCRIPT_LOCATION,java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (main.EarthModellingDaemon.logExceptions(al)) { main.EarthModellingDaemon.deleteFile(asciiFile); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8516/buggy-version/Earth_Modeling_Parser.src-server.main.EarthModellingDaemon.java", "BodyUseAPI": [], "Fixed commit": "1269af3f1b996cf45ae96aac42cdece5545c284e", "Url": "https://api.github.com/repos/kj20207/SD_may1701_EM", "Date": "2017-03-24T00:29:59Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.local_vars) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3083/buggy-version/weechat-relay.src.com.ubergeek42.weechat.Buffer.java", "BodyUseAPI": [], "Fixed commit": "81d139328567a3ec24d40b565ed34794039dab44", "Url": "https://api.github.com/repos/ubergeek42/weechat-android", "Date": "2012-07-24T14:21:35Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.python.pydev.core.docutils.PySelection.startsWithDedentToken(trimmedLine)) { if (lineWithoutComments.endsWith(\"\\\\\")) { return new org.python.pydev.core.Tuple<java.lang.String, java.lang.Boolean>((text + (prefs.getIndentationString())), isInsidePar); } return new org.python.pydev.core.Tuple<java.lang.String, java.lang.Boolean>(dedent(text), isInsidePar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2702/buggy-version/plugins.org.python.pydev.src.org.python.pydev.editor.autoedit.PyAutoIndentStrategy.java", "BodyUseAPI": [], "Fixed commit": "9414edaa7f0c292d63d8828e0d355840da499806", "Url": "https://api.github.com/repos/aptana/Pydev", "Date": "2011-03-17T01:09:02Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((trimmed.length()) == 0) { return new org.python.pydev.core.Tuple<java.lang.String, java.lang.Boolean>(indentBasedOnStartingScope(text, selection, false), isInsidePar); }else { boolean endsWithTrippleSingle = trimmed.endsWith(\"'''\"); if (endsWithTrippleSingle || (trimmed.endsWith(\"\\\"\\\"\\\"\"))) { java.lang.String searchFor = (endsWithTrippleSingle) ? \"'''\" : \"\\\"\\\"\\\"\"; if (endsWithTrippleSingle) { int cursorLine = (selection.getCursorLine()) - 1; while (cursorLine > 0) { if ((selection.getLine().indexOf(searchFor)) > 0) { return new org.python.pydev.core.Tuple<java.lang.String, java.lang.Boolean>(indentBasedOnStartingScope(text, new org.python.pydev.core.docutils.PySelection(selection.getDoc(), cursorLine, 0), false), isInsidePar); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2702/buggy-version/plugins.org.python.pydev.src.org.python.pydev.editor.autoedit.PyAutoIndentStrategy.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "9414edaa7f0c292d63d8828e0d355840da499806", "Url": "https://api.github.com/repos/aptana/Pydev", "Date": "2011-03-17T01:09:02Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isGenerated && (reportRepo.findAll(new de.switajski.priebes.flexibleorders.service.api.OrderNumberGeneratorService.DocumentNumberContains(orderNumber)).isEmpty())) { return orderNumber.replace(\"B\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/358/buggy-version/src.main.java.de.switajski.priebes.flexibleorders.service.api.OrderNumberGeneratorService.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "dd4555258e5ecc7c272f0abcdc9fc572e994d7be", "Url": "https://api.github.com/repos/Switajski/FlexibleOrders", "Date": "2016-04-01T17:09:14Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((attribute.startsWith(\"/\")) && (attribute.endsWith(\"/\"))) { attribute = attribute.substring(1, ((attribute.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8056/buggy-version/Baselet.src.com.umlet.language.ClassCodeConverter.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "2c7fdb234361033582260842d442e04018d28990", "Url": "https://api.github.com/repos/Wisienkas/UmletMaintaince", "Date": "2014-11-04T10:00:10Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRandom) == null) mRandom = new java.util.SplittableRandom();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4021/buggy-version/src.simbryo.particles.forcefield.interaction.impl.RepulsionForceField.java", "BodyUseAPI": [], "Fixed commit": "2b8d968554b534d3fcf2ef0ce24dd5131eb10e39", "Url": "https://api.github.com/repos/ClearControl/simbryo", "Date": "2017-03-15T08:25:10Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fr.inria.astor.core.setup.ConfigurationProperties.getPropertyBool(\"stopfirst\")) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3401/buggy-version/src.main.java.fr.inria.astor.core.loop.evolutionary.ExhaustiveSearchEngine.java", "BodyUseAPI": [], "Fixed commit": "ee56958fc766b88cc69b9b5b18465ed7568a1498", "Url": "https://api.github.com/repos/SpoonLabs/astor", "Date": "2016-01-27T23:04:25Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.serotonin.m2m2.rt.dataImage.PointValueFacade.getPointValues(long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((list.isEmpty()) || ((list.get(0).getTime()) != since)) { list.add(0, new com.serotonin.m2m2.rt.dataImage.PointValueTime(prevValue.getValue(), since)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1819/buggy-version/Core.src.com.serotonin.m2m2.rt.dataImage.PointValueFacade.java", "BodyUseAPI": ["java.util.List<com.serotonin.m2m2.rt.dataImage.PointValueTime>.add(int,com.serotonin.m2m2.rt.dataImage.PointValueTime)"], "Fixed commit": "fca553e2ff015d7bb0ccd99e2664c7c19af86418", "Url": "https://api.github.com/repos/infiniteautomation/ma-core-public", "Date": "2015-04-28T06:44:50Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.serotonin.m2m2.rt.dataImage.PointValueFacade.getPointValuesBetween(long,long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((list.isEmpty()) || ((list.get(0).getTime()) != from)) { list.add(0, new com.serotonin.m2m2.rt.dataImage.PointValueTime(prevValue.getValue(), from)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1819/buggy-version/Core.src.com.serotonin.m2m2.rt.dataImage.PointValueFacade.java", "BodyUseAPI": ["java.util.List<com.serotonin.m2m2.rt.dataImage.PointValueTime>.add(int,com.serotonin.m2m2.rt.dataImage.PointValueTime)"], "Fixed commit": "fca553e2ff015d7bb0ccd99e2664c7c19af86418", "Url": "https://api.github.com/repos/infiniteautomation/ma-core-public", "Date": "2015-04-28T06:44:50Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (resource.isSuspended()) { try { countDownLatch.await(); } catch (java.lang.InterruptedException e) { org.atmosphere.samples.pubsub.utils.AtmosphereUtils.LOG.error(\"Interrupted while trying to suspend resource {}\", resource); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/532/buggy-version/samples.spring-websocket.src.main.java.org.atmosphere.samples.pubsub.utils.AtmosphereUtils.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String,org.atmosphere.cpr.AtmosphereResource)"], "Fixed commit": "2ccbe6500220c74456367e7d5d16ac26a813db10", "Url": "https://api.github.com/repos/Atmosphere/atmosphere", "Date": "2013-03-12T15:53:55Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.beanInfo.beanType.isEnum())) { serializer.setContext(parent, object, fieldName, this.beanInfo.features, features); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6560/buggy-version/src.main.java.com.alibaba.fastjson.serializer.JavaBeanSerializer.java", "BodyUseAPI": ["com.alibaba.fastjson.serializer.JSONSerializer.setContext(com.alibaba.fastjson.serializer.SerialContext,java.lang.Object,java.lang.Object,this.beanInfo.features,int)"], "Fixed commit": "bd6cf765cbf8e55d17041cc964067c226c7afc39", "Url": "https://api.github.com/repos/VictorZeng/fastjson", "Date": "2017-08-16T09:13:48Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ac.umkc.twitter.TwitterCall.getTwitterUser(java.lang.String,UserType.DESIGNER,java.io.PrintWriter)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (user != null) userWriter.println(user.jsonify());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4534/buggy-version/src.main.java.com.ac.umkc.twitter.BasicTwitterPull.java", "BodyUseAPI": ["java.io.PrintWriter.println(user.jsonify())", "com.ac.umkc.twitter.TwitterUser.jsonify()"], "Fixed commit": "e4fadf1b784bf3c20c96ca8e3a743d1ccdd99be7", "Url": "https://api.github.com/repos/apshaiTerp/ac-twitter-pull", "Date": "2016-11-17T21:09:27Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ac.umkc.twitter.TwitterCall.getTwitterUser(java.lang.String,UserType.REVIEWER,java.io.PrintWriter)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (user != null) userWriter.println(user.jsonify());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4534/buggy-version/src.main.java.com.ac.umkc.twitter.BasicTwitterPull.java", "BodyUseAPI": ["java.io.PrintWriter.println(user.jsonify())", "com.ac.umkc.twitter.TwitterUser.jsonify()"], "Fixed commit": "e4fadf1b784bf3c20c96ca8e3a743d1ccdd99be7", "Url": "https://api.github.com/repos/apshaiTerp/ac-twitter-pull", "Date": "2016-11-17T21:09:27Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ac.umkc.twitter.TwitterCall.getTwitterUser(java.lang.String,UserType.CONVENTION,java.io.PrintWriter)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (user != null) userWriter.println(user.jsonify());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4534/buggy-version/src.main.java.com.ac.umkc.twitter.BasicTwitterPull.java", "BodyUseAPI": ["com.ac.umkc.twitter.TwitterUser.jsonify()", "java.io.PrintWriter.println(user.jsonify())"], "Fixed commit": "e4fadf1b784bf3c20c96ca8e3a743d1ccdd99be7", "Url": "https://api.github.com/repos/apshaiTerp/ac-twitter-pull", "Date": "2016-11-17T21:09:27Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ac.umkc.twitter.TwitterCall.getTwitterUser(java.lang.String,UserType.PUBLISHER,java.io.PrintWriter)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (user != null) userWriter.println(user.jsonify());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4534/buggy-version/src.main.java.com.ac.umkc.twitter.BasicTwitterPull.java", "BodyUseAPI": ["com.ac.umkc.twitter.TwitterUser.jsonify()", "java.io.PrintWriter.println(user.jsonify())"], "Fixed commit": "e4fadf1b784bf3c20c96ca8e3a743d1ccdd99be7", "Url": "https://api.github.com/repos/apshaiTerp/ac-twitter-pull", "Date": "2016-11-17T21:09:27Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (resource == null) { throw new org.jboss.errai.codegen.exception.GenerationException((((\"Failed to load bundle \" + bundlePath) + \" defined on class \") + (bundleClass.getFullyQualifiedName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7658/buggy-version/errai-ui.src.main.java.org.jboss.errai.ui.rebind.TranslationServiceGenerator.java", "BodyUseAPI": [], "Fixed commit": "5a95bc0871aa7eee5ec24b6d760e6f43d8b34c11", "Url": "https://api.github.com/repos/mbarkley/errai", "Date": "2014-07-31T17:36:14Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.phenotips.matchingnotification.internal.MatchesByPatient.getEquivalentMatch(org.phenotips.matchingnotification.match.PatientMatch)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (equivalent != null) { matchesJSONArray.put(this.createJSONFromMatches(match, equivalent)); usedAsEquivalent.add(equivalent); }else { matchesJSONArray.put(match.toJSON()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/755/buggy-version/matching-notification-api.src.main.java.org.phenotips.matchingnotification.export.PatientMatchExport.java", "BodyUseAPI": ["org.json.JSONArray.put(org.json.JSONObject)", "org.phenotips.matchingnotification.export.PatientMatchExport.createJSONFromMatches(org.phenotips.matchingnotification.match.PatientMatch,org.phenotips.matchingnotification.match.PatientMatch)", "java.util.Set<org.phenotips.matchingnotification.match.PatientMatch>.add(org.phenotips.matchingnotification.match.PatientMatch)"], "Fixed commit": "8123250e72402c93c8c3330824dc6502770bb737", "Url": "https://api.github.com/repos/phenotips/patient-network", "Date": "2016-07-26T17:40:07Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.map.Tile.getAreaEffect()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (areaEffect != null) { java.lang.String typeOfAOE = areaEffect.getType(); if (typeOfAOE == \"trap\") { java.lang.System.out.println(\"Trap is here yo\"); map.setDecalVisibilityAtPoint(true, desiredLocation); return desiredLocation; }else { java.lang.System.out.println(\"Lol there is no trap here\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7960/buggy-version/src.models.skills.SneakSkills.DetectRemoveTrapSkill.java", "BodyUseAPI": ["models.area_effects.AreaEffect.getType()"], "Fixed commit": "a419dd531a7605487c053330206c311366e92d93", "Url": "https://api.github.com/repos/kanye2021/OOP-Game-S16-Iteration2", "Date": "2016-03-14T02:12:42Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.length) > 0) { skipWhiteSpace(); determineScope(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7057/buggy-version/core.src.main.java.com.asatryan.libpgn.core.parser.PgnLexer.java", "BodyUseAPI": [], "Fixed commit": "1afebdfb6625fbfe32da533ab6aab08d333fb56a", "Url": "https://api.github.com/repos/nstdio/libpgn", "Date": "2017-05-05T18:21:09Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(rawErrorData.containsKey(org.openqa.selenium.remote.ErrorHandler.MESSAGE))) && (rawErrorData.containsKey(\"value\"))) { try { rawErrorData = ((java.util.Map<java.lang.String, java.lang.Object>) (rawErrorData.get(\"value\"))); } catch (java.lang.ClassCastException cce) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4405/buggy-version/java.client.src.org.openqa.selenium.remote.ErrorHandler.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "242a570c43e6b51aeb89c1750266e6b8e2e1237d", "Url": "https://api.github.com/repos/pbi-qfs/selenium", "Date": "2016-10-04T02:00:06Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(currentFile.isPresent())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5039/buggy-version/src.main.java.cn.cnic.bigdatalab.flume.source.cephfs.CephFSEventReader.java", "BodyUseAPI": [], "Fixed commit": "d2c2833f099d66456bd173906d6a093842625e51", "Url": "https://api.github.com/repos/cas-bigdatalab/flume-source", "Date": "2016-07-14T06:11:24Z"},
{"Line": "=>581", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numberOfEquivalenceClasses == 0) { averageEquivalenceClassSize = 0; maximalEquivalenceClassSize = 0; minimalEquivalenceClassSize = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3999/buggy-version/src.main.org.deidentifier.arx.aggregates.StatisticsBuilder.java", "BodyUseAPI": [], "Fixed commit": "a86890e4ee7a754ae46488803f7d39eb660bdd40", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2016-08-12T20:14:20Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((model.getTimestamp()) != null) { viewHolder.mTimestampText.setText(formatTimestamp(model.getTimestampLong(), getResources().getString(R.string.message_timestamp_same_day), getResources().getString(R.string.message_timestamp_same_week), getResources().getString(R.string.message_timestamp_default))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6688/buggy-version/app.src.main.java.io.videtur.ignis.ui.ChatActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(formatTimestamp(model.getTimestampLong(), getResources().getString(R.string.message_timestamp_same_day), getResources().getString(R.string.message_timestamp_same_week), getResources().getString(R.string.message_timestamp_default)))", "io.videtur.ignis.ui.ChatActivity.9.formatTimestamp(model.getTimestampLong(),getResources().getString(R.string.message_timestamp_same_day),getResources().getString(R.string.message_timestamp_same_week),getResources().getString(R.string.message_timestamp_default))", "io.videtur.ignis.model.Message.getTimestampLong()"], "Fixed commit": "ad7691d6231d8e662218c8b6c7c3661960349001", "Url": "https://api.github.com/repos/eoin-obrien/Ignis", "Date": "2017-04-28T17:37:49Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((model.getText()) != null) { viewHolder.mMessageText.setText(model.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6688/buggy-version/app.src.main.java.io.videtur.ignis.ui.ChatActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(model.getText())", "io.videtur.ignis.model.Message.getText()"], "Fixed commit": "ad7691d6231d8e662218c8b6c7c3661960349001", "Url": "https://api.github.com/repos/eoin-obrien/Ignis", "Date": "2017-04-28T17:37:49Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(evaluation.isTemporary())) { setGradeAvailableDate(evaluation.getGradeAvailableDateYearMonthDay().toLocalDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7314/buggy-version/src.main.java.org.fenixedu.ulisboa.specifications.dto.evaluation.markSheet.MarkBean.java", "BodyUseAPI": [], "Fixed commit": "f1676885a65a3a1b9e0736b62f27fa794d5cac94", "Url": "https://api.github.com/repos/qub-it/fenixedu-ulisboa-specifications", "Date": "2017-01-03T18:28:59Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((book) != null) org.sefaria.sefaria.Settings.setLastBook(book.title);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1140/buggy-version/app.src.main.java.org.sefaria.sefaria.activities.SuperTextActivity.java", "BodyUseAPI": [], "Fixed commit": "b7939aff0faf2a8d241f1b0e12a0a1f9bbb38331", "Url": "https://api.github.com/repos/Sefaria/Sefaria-Android", "Date": "2016-09-26T08:01:18Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == componentID) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5304/buggy-version/src.hw5.MainForm.java", "BodyUseAPI": [], "Fixed commit": "9e2c994bb09467bf997c1311cf0c25985c598971", "Url": "https://api.github.com/repos/lbarstow/RPG", "Date": "2014-03-24T15:28:02Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resourcesManager.getLevelComplete()) == 1) ResourcesManagment.SceneManager.getInstance().getGameScene().playerOnline.setSize(75, 75);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7125/buggy-version/src.com.PFC.PlatformJumper.streetJumper.java", "BodyUseAPI": [], "Fixed commit": "4a9ecc9ec7727ffc97f4e07860e1568faa3fe05b", "Url": "https://api.github.com/repos/aitorneos/streetJumper", "Date": "2014-02-05T08:22:48Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((day) == null) { for (int i = 0; i < (model.parkedActivites.size()); i++) if (model.parkedActivites.get(i).equals(activity)) { model.removeParkedActivity(i); } }else { day.removeActivity(activity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5533/buggy-version/controller.EditActivityController.java", "BodyUseAPI": [], "Fixed commit": "b9da82b9efe8e80924388c71de6f77f90f34c739", "Url": "https://api.github.com/repos/Jendeberg/agendabuilder", "Date": "2016-03-26T09:02:31Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getBirthDate().getYear()) > 2010) { throw new com.hackhofer.uniqa.poc.soap.InvalidDateException((\"InvalidDateException - Birthday should be maxium 2010 - person id: \" + (p.getId()))); }else if ((p.getGender()) == null) { setRetrunCodeAndErrorMsg(response, oneResponse, 2, \"Gender can only be \\\"F\\\" and \\\"M\\\"\"); }else { oneResponse.setPremiumAmount(getPremAmount(p)); response.setSumPremAmount(((response.getSumPremAmount()) + (oneResponse.getPremiumAmount()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8239/buggy-version/src.main.java.com.hackhofer.uniqa.poc.soap.CalculationEndpoint.java", "BodyUseAPI": ["com.hackhofer.uniqapoc.OneCalcuateRepsonse.setPremiumAmount(int)", "com.hackhofer.uniqapoc.Soapperson.getGender()", "com.hackhofer.uniqapoc.Soapperson.getId()", "com.hackhofer.uniqa.poc.soap.CalculationEndpoint.getPremAmount(com.hackhofer.uniqapoc.Soapperson)"], "Fixed commit": "e29a15eab1cac219ad8b8e938a9cffed55d442a7", "Url": "https://api.github.com/repos/istvanszoboszlai/webservices-poc", "Date": "2016-06-28T09:31:43Z"},
{"Line": "=>1199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != locale) { pp.addParameter(\"___locale\", locale.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1451/buggy-version/to.etc.domui.selenium.src.main.java.to.etc.domui.webdriver.core.WebDriverConnector.java", "BodyUseAPI": ["java.util.Locale.toString()", "to.etc.domui.state.PageParameters.addParameter(java.lang.String,java.lang.String)"], "Fixed commit": "a07db80a946e2a5bd33cb176d7d26557c67c7744", "Url": "https://api.github.com/repos/fjalvingh/domui", "Date": "2017-09-02T14:41:42Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.xtext.xbase.lib.ListExtensions.<fr.inria.diverse.webservice.dsl.model.User, java.lang.String>map(_self.getUsers(), _function_1).contains(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (_contains) { if ((s != null) && (org.eclipse.xtext.xbase.lib.ListExtensions.<fr.inria.diverse.webservice.dsl.model.User, java.lang.String>map(s.getAllowedUsers(), ((org.eclipse.xtext.xbase.lib.Functions.Function1<fr.inria.diverse.webservice.dsl.model.User, java.lang.String>) ((fr.inria.diverse.webservice.dsl.model.User it) -> { return fr.inria.diverse.webservice.dsl.k3dsa.UserAspect.token(it); }))).contains(token))) { final java.lang.Object result = fr.inria.diverse.webservice.dsl.k3dsa.ServiceAspect.execute(s, params); if (result != null) { fr.inria.diverse.webservice.dsl.k3dsa.AppAspect.result(_self, result.toString()); }else { fr.inria.diverse.webservice.dsl.k3dsa.AppAspect.result(_self, \"service error\"); } }else { fr.inria.diverse.webservice.dsl.k3dsa.AppAspect.result(_self, \"unauthorized user\"); } }else { fr.inria.diverse.webservice.dsl.k3dsa.AppAspect.result(_self, \"unknown token\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5997/buggy-version/fr.inria.diverse.webservice.dsl.src.fr.inria.diverse.webservice.dsl.k3dsa.AppAspect.java", "BodyUseAPI": [], "Fixed commit": "06605eee1dde9d0c1a7ef496060ce2fefaee9b62", "Url": "https://api.github.com/repos/gemoc/mini-expression-server", "Date": "2017-12-13T18:08:26Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["document.getElementsByAttributeValue(\"border\", \"1\").first()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pageElem.select(\"a\").isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6824/buggy-version/app.src.main.java.idv.kuma.app.komica.fragments.SectionPreviewFragment.java", "BodyUseAPI": [], "Fixed commit": "1acff915690c95b3926daa9791d4b1a2e490ee1b", "Url": "https://api.github.com/repos/TakumaMochizuki/Komica", "Date": "2017-01-29T07:19:51Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLinkPage) { url = (url.substring(0, ((url.lastIndexOf(\"/\")) + 1))) + (link.replaceAll(\"[0-9]\", java.lang.String.valueOf(page))); }else { url = ((url.substring(0, ((url.lastIndexOf(\"/\")) + 1))) + (page)) + (link); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6824/buggy-version/app.src.main.java.idv.kuma.app.komica.fragments.SectionPreviewFragment.java", "BodyUseAPI": [], "Fixed commit": "1acff915690c95b3926daa9791d4b1a2e490ee1b", "Url": "https://api.github.com/repos/TakumaMochizuki/Komica", "Date": "2017-01-29T07:19:51Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"\".equals(link)) { link = linkTmp.replaceAll(\"[0-9]\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6824/buggy-version/app.src.main.java.idv.kuma.app.komica.fragments.SectionPreviewFragment.java", "BodyUseAPI": [], "Fixed commit": "1acff915690c95b3926daa9791d4b1a2e490ee1b", "Url": "https://api.github.com/repos/TakumaMochizuki/Komica", "Date": "2017-01-29T07:19:51Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"\".equals(link)) { org.jsoup.nodes.Element pageStartLinkElem = pageSwitch.getElementsByAttributeValue(\"class\", \"link \").first(); link = pageStartLinkElem.select(\"a\").attr(\"href\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6824/buggy-version/app.src.main.java.idv.kuma.app.komica.fragments.SectionPreviewFragment.java", "BodyUseAPI": [], "Fixed commit": "1acff915690c95b3926daa9791d4b1a2e490ee1b", "Url": "https://api.github.com/repos/TakumaMochizuki/Komica", "Date": "2017-01-29T07:19:51Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((priceArray[k]) != null) { priceBuilder.append((\"price: \" + (priceArray[k]))); priceBuilder.append(\"\\t\\tseen: \"); priceBuilder.append(priceMap.get(priceArray[k])); priceBuilder.append(\" times\"); priceBuilder.append(\"\\n=============\\t\\t=============\\n\"); }else (errors)++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/683/buggy-version/src.main.java.Receipt.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.lang.StringBuilder.append(java.lang.Integer)"], "Fixed commit": "135fa79b6fcac31a61b79022f72a7b95fee81df2", "Url": "https://api.github.com/repos/wongandrewp/HurtLocker", "Date": "2017-06-01T22:43:01Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.ConnectivityManager.getActiveNetworkInfo()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((activeNetwork != null) && (activeNetwork.isConnected())) { android.widget.Toast.makeText(this, \" Connected \", Toast.LENGTH_LONG).show(); return true; }else { android.widget.Toast.makeText(this, \" Not Connected \", Toast.LENGTH_LONG).show(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8550/buggy-version/VALDOC.app.src.main.java.com.project.valdoc.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "41b123767da9dfc28c98e18216a470a26978a047", "Url": "https://api.github.com/repos/avinashtiwari87/HelloAcTest", "Date": "2016-04-04T19:23:46Z"},
{"Line": "=>536", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.roomorama.caldroid.CaldroidFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((args != null) && (args.containsKey(com.roomorama.caldroid.CaldroidFragment.SQUARE_TEXT_VIEW_CELL))) { bundle.putBoolean(com.roomorama.caldroid.CaldroidFragment.SQUARE_TEXT_VIEW_CELL, args.getBoolean(com.roomorama.caldroid.CaldroidFragment.SQUARE_TEXT_VIEW_CELL)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8293/buggy-version/caldroid.src.main.java.com.roomorama.caldroid.CaldroidFragment.java", "BodyUseAPI": ["android.os.Bundle.getBoolean(java.lang.String)", "android.os.Bundle.putBoolean(java.lang.String,args.getBoolean(com.roomorama.caldroid.CaldroidFragment.SQUARE_TEXT_VIEW_CELL))"], "Fixed commit": "b50db7b6226c6e5a554de16f0ecde71d3345e34a", "Url": "https://api.github.com/repos/Maragues/Caldroid", "Date": "2016-02-23T03:22:58Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCause()) instanceof java.lang.IllegalStateException) { if (org.overlord.rtgov.internal.activity.server.jee.JEEActivityServer.LOG.isLoggable(java.util.logging.Level.FINEST)) { org.overlord.rtgov.internal.activity.server.jee.JEEActivityServer.LOG.log(java.util.logging.Level.FINEST, \"UserTransaction not available - probably due to container managed txn\", e); } }else { org.overlord.rtgov.internal.activity.server.jee.JEEActivityServer.LOG.log(java.util.logging.Level.SEVERE, \"Failed to get UserTransaction\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/448/buggy-version/modules.activity-management.activity-server-jee.src.main.java.org.overlord.rtgov.internal.activity.server.jee.JEEActivityServer.java", "BodyUseAPI": ["java.util.logging.Logger.log(java.util.logging.Level,java.lang.String,javax.naming.NamingException)", "java.util.logging.Logger.log(java.util.logging.Level,java.lang.String,javax.naming.NamingException)"], "Fixed commit": "13965671b4b48b6f67bae7b81b77e3bb8a23a48c", "Url": "https://api.github.com/repos/objectiser/rtgov", "Date": "2014-11-07T20:08:08Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.overlord.rtgov.activity.server.rest.RESTActivityServer.LOG.isLoggable(java.util.logging.Level.FINEST)) { org.overlord.rtgov.activity.server.rest.RESTActivityServer.LOG.finest((((\"Store \" + (activities.size())) + \" activities: \") + acts)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/448/buggy-version/modules.activity-management.activity-server-rests.src.main.java.org.overlord.rtgov.activity.server.rest.RESTActivityServer.java", "BodyUseAPI": ["java.util.logging.Logger.finest((((\"Store \" + (activities.size())) + \" activities: \") + acts))"], "Fixed commit": "13965671b4b48b6f67bae7b81b77e3bb8a23a48c", "Url": "https://api.github.com/repos/objectiser/rtgov", "Date": "2014-11-07T20:08:08Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.AdapterView<?>.getItemAtPosition(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (category.equals(\"Impression\")) { android.widget.ArrayAdapter<java.lang.CharSequence> tra_key = android.widget.ArrayAdapter.createFromResource(context, R.array.tra_keyword_array, android.R.layout.simple_spinner_item); keywords.setAdapter(tra_key); categoryId = 1; }else { android.widget.ArrayAdapter<java.lang.CharSequence> imp_key = android.widget.ArrayAdapter.createFromResource(context, R.array.imp_keyword_array, android.R.layout.simple_spinner_item); keywords.setAdapter(imp_key); categoryId = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6643/buggy-version/src.ie.tcd.scss.dsg.particpatory.report.AddReportActivity.java", "BodyUseAPI": [], "Fixed commit": "aa64fe407c9c3312f93dafa8d12d77b42f44efc4", "Url": "https://api.github.com/repos/moqichenle/ParticipatoryClient", "Date": "2013-08-13T21:14:48Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (visitorInterface.shouldBeSerializable()) { proxyClass._implements(types._Serializable()); proxyClass.field((((com.helger.jcodemodel.JMod.PRIVATE) | (com.helger.jcodemodel.JMod.FINAL)) | (com.helger.jcodemodel.JMod.STATIC)), types._long(), \"serialVersionUID\", com.helger.jcodemodel.JExpr.lit(visitorInterface.serialVersionUID())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3624/buggy-version/adt4j-core.src.main.java.com.github.sviperll.adt4j.ValueClassModel.java", "BodyUseAPI": ["com.helger.jcodemodel.JDefinedClass.field((((com.helger.jcodemodel.JMod.PRIVATE) | (com.helger.jcodemodel.JMod.FINAL)) | (com.helger.jcodemodel.JMod.STATIC)),types._long(),java.lang.String,com.helger.jcodemodel.JExpr.lit(visitorInterface.serialVersionUID()))", "com.helger.jcodemodel.JExpr.lit(visitorInterface.serialVersionUID())", "com.github.sviperll.adt4j.ValueVisitorInterfaceModel.serialVersionUID()"], "Fixed commit": "669754e35a5bfe804ce88d91f7977192a0a59046", "Url": "https://api.github.com/repos/sviperll/adt4j", "Date": "2014-09-03T12:23:07Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kalang.compiler.SemanticAnalyzer.visit(node.expr)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(node.toType.isSubTypeOf(et))) && (!(node.toType.equals(et)))) { err.failedToCast(node, et.getName(), node.toType.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5268/buggy-version/src.main.java.kalang.compiler.SemanticAnalyzer.java", "BodyUseAPI": ["kalang.compiler.AstSemanticErrorReporter.failedToCast(kalang.ast.CastExpr,et.getName(),node.toType.getName())", "node.toType.getName()", "kalang.core.Type.getName()"], "Fixed commit": "adac4fded4d7efc52305933c82e5bc3bac7af7c5", "Url": "https://api.github.com/repos/kasonyang/kalang", "Date": "2016-02-22T09:55:47Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (defaultAnswer != null) { getDefaultAnswers().set(0, defaultAnswer.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/364/buggy-version/labs-questionnaire-template-web.src.main.java.com.engagepoint.model.question.options.MultipleChoiceQuestionBean.java", "BodyUseAPI": ["getDefaultAnswers().set(int,defaultAnswer.getValue())", "com.engagepoint.model.question.utils.VariantItem.getValue()"], "Fixed commit": "ed739dca0c457422be4d87233a36e02e81051394", "Url": "https://api.github.com/repos/engagepoint/labs-questionnaire-template", "Date": "2014-03-20T22:43:26Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (defaultAnswer != null) { getDefaultAnswers().set(0, defaultAnswer.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/364/buggy-version/labs-questionnaire-template-web.src.main.java.com.engagepoint.model.question.options.ChooseFromListQuestionBean.java", "BodyUseAPI": ["getDefaultAnswers().set(int,defaultAnswer.getValue())", "com.engagepoint.model.question.utils.VariantItem.getValue()"], "Fixed commit": "ed739dca0c457422be4d87233a36e02e81051394", "Url": "https://api.github.com/repos/engagepoint/labs-questionnaire-template", "Date": "2014-03-20T22:43:26Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ctx.inventory.selectedItem().valid()) ctx.inventory.selectedItem().interact(\"Cancel\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1416/buggy-version/src.nomivore.LumbyFireCook.LumbyFireCook.java", "BodyUseAPI": [], "Fixed commit": "05dfa9efad70a64b637d82fea66912f902b4d615", "Url": "https://api.github.com/repos/tanlines/powerbot-scripts", "Date": "2017-09-19T15:20:14Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ctx.inventory.selectedItem().valid()) ctx.inventory.selectedItem().interact(\"Cancel\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1416/buggy-version/src.nomivore.LumbyFireCook.LumbyFireCook.java", "BodyUseAPI": [], "Fixed commit": "05dfa9efad70a64b637d82fea66912f902b4d615", "Url": "https://api.github.com/repos/tanlines/powerbot-scripts", "Date": "2017-09-19T15:20:14Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.df.idm.service.contract.UserManagementService.getUserByCode(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user == null) { throw new com.df.idm.exception.UserNotFoundException(java.lang.String.format(\"User with code %s is not found\", userName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2358/buggy-version/server.idm.src.main.java.com.df.idm.authentication.adapter.UserObjectServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "efbe7d12f8764f6c07e8e08925e73ca31a7e58d4", "Url": "https://api.github.com/repos/zhilong0/cloudress", "Date": "2014-09-21T12:29:53Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clear) { adapterCF.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3604/buggy-version/library.src.main.java.it.bsdsoftware.bsdcustomfontwidget.SpinnerCF.java", "BodyUseAPI": [], "Fixed commit": "7dee7f26e063b2645f2cc77e2de1be6f3f99b7b7", "Url": "https://api.github.com/repos/bsdsoftware/BSDCustomFontWidget", "Date": "2016-05-11T08:14:51Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lombok.javac.handlers.JavacHandlerUtil.inNetbeansEditor(annotation)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4249/buggy-version/src.core.lombok.javac.handlers.JavacHandlerUtil.java", "BodyUseAPI": [], "Fixed commit": "98c704c7cb4b21d0d6e11f55c52da89cb7c22502", "Url": "https://api.github.com/repos/jlahoda/lombok", "Date": "2012-07-18T17:53:29Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lombok.javac.handlers.JavacHandlerUtil.inNetbeansEditor(node)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4249/buggy-version/src.core.lombok.javac.handlers.JavacHandlerUtil.java", "BodyUseAPI": [], "Fixed commit": "98c704c7cb4b21d0d6e11f55c52da89cb7c22502", "Url": "https://api.github.com/repos/jlahoda/lombok", "Date": "2012-07-18T17:53:29Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((null == (examGrade.getScore())) && (org.beangle.commons.lang.Numbers.isNumber(examGrade.getScoreText()))) { examGrade.setScore(org.beangle.commons.lang.Numbers.toFloat(examGrade.getScoreText())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4598/buggy-version/web.src.main.java.org.openurp.edu.extern.service.ExternExamGradeImportListener.java", "BodyUseAPI": ["org.openurp.edu.extern.model.ExternExamGrade.getScoreText()", "org.openurp.edu.extern.model.ExternExamGrade.setScore(org.beangle.commons.lang.Numbers.toFloat(examGrade.getScoreText()))", "org.beangle.commons.lang.Numbers.toFloat(examGrade.getScoreText())"], "Fixed commit": "196dde6e6994331100b0be8543d4fa617cc58e93", "Url": "https://api.github.com/repos/openurp/edu-extern", "Date": "2017-06-26T01:53:24Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (value != null) { org.loopa.comm.obtaineddata.ObtainedData.setValueToField(od, field, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/9089/buggy-version/loopa.src.main.java.org.loopa.comm.obtaineddata.ObtainedData.java", "BodyUseAPI": ["org.loopa.comm.obtaineddata.ObtainedData.setValueToField(org.loopa.comm.obtaineddata.ObtainedData,java.lang.reflect.Field,java.lang.String)"], "Fixed commit": "e706392aa8c0153d94e03d13e2e3173f1a653705", "Url": "https://api.github.com/repos/Martouta/loopa", "Date": "2017-12-09T21:36:14Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reason.isConflictResolution()) { return reason; }else if (reason == (org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.VersionSelectionReasons.SELECTED_BY_RULE)) { return org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.VersionSelectionReasons.CONFLICT_RESOLUTION_BY_RULE; }else if (reason == (org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.VersionSelectionReasons.REQUESTED)) { return org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.VersionSelectionReasons.CONFLICT_RESOLUTION; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1340/buggy-version/subprojects.core-impl.src.main.groovy.org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.VersionSelectionReasons.java", "BodyUseAPI": [], "Fixed commit": "28fe57b3f0f17b7be0be4d5702f35de9657349f5", "Url": "https://api.github.com/repos/gradle/gradle", "Date": "2013-02-15T18:02:59Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.oneliang.util.file.FileUtil.isExist(res)) { androidProject.getResourceDirectoryList().add(res); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4576/buggy-version/src.main.java.com.oneliang.tools.builder.android.base.AndroidConfigurationForJson.java", "BodyUseAPI": ["androidProject.getResourceDirectoryList().add(java.lang.String)"], "Fixed commit": "b735a92fa09884ba60b6397291dc491a71167a0d", "Url": "https://api.github.com/repos/oneliang/builder-android", "Date": "2017-04-10T10:24:21Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.oneliang.util.file.FileUtil.isExist(libs)) { androidProject.getLibsDirectoryList().add(libs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4576/buggy-version/src.main.java.com.oneliang.tools.builder.android.base.AndroidConfigurationForJson.java", "BodyUseAPI": ["androidProject.getLibsDirectoryList().add(java.lang.String)"], "Fixed commit": "b735a92fa09884ba60b6397291dc491a71167a0d", "Url": "https://api.github.com/repos/oneliang/builder-android", "Date": "2017-04-10T10:24:21Z"},
{"Line": "=>2378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.db.document.ODatabaseDocumentTx.callbackHooks(ORecordHook.TYPE.BEFORE_CREATE,com.orientechnologies.orient.core.record.ORecord)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hookResult == (ORecordHook.RESULT.RECORD_CHANGED)) { if (record instanceof com.orientechnologies.orient.core.record.impl.ODocument) ((com.orientechnologies.orient.core.record.impl.ODocument) (record)).validate(); stream = updateStream(record); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4220/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.document.ODatabaseDocumentTx.java", "BodyUseAPI": [], "Fixed commit": "94028587283f7a9b85f9e65fa2c653031bebc799", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-09-01T22:36:35Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["wyil.transforms.BackPropagation.Env.get(code.target)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(nconstant.type().equals(req))) { coerceAfter(req, nconstant.type(), code.target, index, entry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/633/buggy-version/modules.wyil.src.wyil.transforms.BackPropagation.java", "BodyUseAPI": ["wyil.transforms.BackPropagation.coerceAfter(wyil.transforms.Type,nconstant.type(),code.target,int,wyil.lang.Block.Entry)", "wyil.transforms.Constant.type()"], "Fixed commit": "c54316f9b2f26925b1da17b345678b8bc5b03bba", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2013-10-05T05:05:15Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nconstant.equals(code.constant)) { wyil.transforms.BackPropagation.rewrites.put(index, new wyil.transforms.Block.Entry(wyil.transforms.Code.Const(code.target, nconstant), entry.attributes())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/633/buggy-version/modules.wyil.src.wyil.transforms.BackPropagation.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, wyil.lang.Block.Entry>.put(int,wyil.transforms.Block.Entry)", "wyil.transforms.Code.Const(code.target,wyil.transforms.Constant)"], "Fixed commit": "c54316f9b2f26925b1da17b345678b8bc5b03bba", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2013-10-05T05:05:15Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.nutz.lang.Strings.isBlank(src)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5896/buggy-version/src.org.nutz.castor.castor.String2Enum.java", "BodyUseAPI": [], "Fixed commit": "b66fe265734af32d1894b1b46b59f0979470cd6d", "Url": "https://api.github.com/repos/FlakyTestDetection/nutz", "Date": "2017-11-01T12:06:08Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (localName.equalsIgnoreCase(\"generated_locally\")) { mTransfer.is_upload = !(mCurrentElement.toString().equals(\"0\")); }else if (localName.equalsIgnoreCase(\"nbytes\")) { mTransfer.nbytes = ((long) (java.lang.Double.parseDouble(mCurrentElement.toString()))); }else if (localName.equalsIgnoreCase(\"status\")) { mTransfer.status = java.lang.Integer.parseInt(mCurrentElement.toString()); }else if (localName.equalsIgnoreCase(\"time_so_far\")) { mTransfer.time_so_far = ((long) (java.lang.Double.parseDouble(mCurrentElement.toString()))); }else if (localName.equalsIgnoreCase(\"next_request_time\")) { mTransfer.next_request_time = ((long) (java.lang.Double.parseDouble(mCurrentElement.toString()))); }else if (localName.equalsIgnoreCase(\"last_bytes_xferred\")) { if ((mTransfer.bytes_xferred) == 0) { mTransfer.bytes_xferred = ((long) (java.lang.Double.parseDouble(mCurrentElement.toString()))); } }else if (localName.equalsIgnoreCase(\"bytes_xferred\")) { mTransfer.bytes_xferred = ((long) (java.lang.Double.parseDouble(mCurrentElement.toString()))); }else if (localName.equalsIgnoreCase(\"xfer_speed\")) { mTransfer.xfer_speed = java.lang.Float.parseFloat(mCurrentElement.toString()); }else if (localName.equalsIgnoreCase(\"project_backoff\")) { mTransfer.project_backoff = ((long) (java.lang.Double.parseDouble(mCurrentElement.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3630/buggy-version/src.edu.berkeley.boinc.lite.TransfersParser.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "c32656b1333bc6a2319a5e9e3aa0535653e3d474", "Url": "https://api.github.com/repos/palo-m/androboinc", "Date": "2012-09-08T15:29:38Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (soundPreferences.getBoolean(\"soundOn\")) bgMusic.play(); else bgMusic.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7887/buggy-version/core.src.com.tec.goback.Level1.java", "BodyUseAPI": [], "Fixed commit": "f66a3db41400f4a2c00e721db9fe97ef3d4ded5e", "Url": "https://api.github.com/repos/kevinwkt/goBack", "Date": "2017-03-24T17:05:15Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getIntent().getFlags()) & (android.content.Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT)) != 0) { finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1906/buggy-version/app.src.main.java.com.example.irtazasafi.mnemorizer.Login.java", "BodyUseAPI": [], "Fixed commit": "c78bb3df194d12f9a550c77f9d05231b85d9d0d2", "Url": "https://api.github.com/repos/IrtazaSafi/Mnemorizer", "Date": "2016-03-14T17:24:05Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (relativeUrl.contains(\"?\")) { relativeUrl = org.apache.camel.util.ObjectHelper.before(relativeUrl, \"?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5252/buggy-version/components.camel-http-common.src.main.java.org.apache.camel.http.common.HttpHelper.java", "BodyUseAPI": ["org.apache.camel.util.ObjectHelper.before(java.lang.String,java.lang.String)"], "Fixed commit": "27aa338f35e52df631dc4eaa98aec4fef0efc787", "Url": "https://api.github.com/repos/lburgazzoli/apache-camel", "Date": "2016-01-10T09:53:19Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((securityDomain) != null) { if (org.wildfly.security.manager.WildFlySecurityManager.isChecking()) { final org.jboss.security.SimplePrincipal finalPrincipal = principal; final java.lang.Object finalCredential = credential; sc = java.security.AccessController.doPrivileged(((java.security.PrivilegedExceptionAction<org.jboss.security.SecurityContext>) (() -> { org.jboss.security.SecurityContext sc1 = org.jboss.security.SecurityContextFactory.createSecurityContext(securityDomain); sc1.getUtil().createSubjectInfo(finalPrincipal, finalCredential, null); return sc1; }))); }else { sc = org.jboss.security.SecurityContextFactory.createSecurityContext(securityDomain); sc.getUtil().createSubjectInfo(principal, credential, null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6026/buggy-version/ejb3.src.main.java.org.jboss.as.ejb3.iiop.EjbCorbaServant.java", "BodyUseAPI": [], "Fixed commit": "f996af3265471a67bd9cc82c6a30b7ad5f058800", "Url": "https://api.github.com/repos/rsvoboda/wildfly", "Date": "2015-09-18T01:09:57Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(musicService.isPng())) musicService.setPausePosition(pos);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7754/buggy-version/ZezoMusicPlayer.src.com.zezo.zezomusicplayer.MusicController.java", "BodyUseAPI": ["com.zezo.zezomusicplayer.MusicService.setPausePosition(int)"], "Fixed commit": "bd71a6d9319b7a8a904f75172a4edf177a55e39a", "Url": "https://api.github.com/repos/aycanadal/Zezo", "Date": "2014-12-07T23:30:54Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (damagedData != null) { damagedData.lastExplosionDamagePlayer = player.getName(); damagedData.lastExplosionDamageTick = tick; damagedData.lastExplosionDamage = fr.neatmonster.nocheatplus.compat.BridgeHealth.getDamage(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6462/buggy-version/NCPCore.src.main.java.fr.neatmonster.nocheatplus.checks.fight.FightListener.java", "BodyUseAPI": [], "Fixed commit": "b43fa259dcb9531805f636b6c42d0d2b4b5759b1", "Url": "https://api.github.com/repos/NoCheatPlus/NoCheatPlus", "Date": "2013-11-07T00:13:26Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (damagedData != null) { if (((damage == (damagedData.lastExplosionDamage)) && (player.getName().equals(damagedData.lastExplosionDamagePlayer))) && (tick == (damagedData.lastExplosionDamageTick))) { damagedData.lastExplosionDamage = java.lang.Double.MAX_VALUE; damagedData.lastExplosionDamageTick = -1; damagedData.lastExplosionDamagePlayer = null; return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6462/buggy-version/NCPCore.src.main.java.fr.neatmonster.nocheatplus.checks.fight.FightListener.java", "BodyUseAPI": ["player.getName().equals(damagedData.lastExplosionDamagePlayer)"], "Fixed commit": "b43fa259dcb9531805f636b6c42d0d2b4b5759b1", "Url": "https://api.github.com/repos/NoCheatPlus/NoCheatPlus", "Date": "2013-11-07T00:13:26Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c) instanceof javax.swing.JComboBox) { name = c.getName(); if ((((javax.swing.JComboBox) (c)).getSelectedItem()) instanceof es.icarto.gvsig.navtableforms.ormlite.domain.KeyValue) { value = ((es.icarto.gvsig.navtableforms.ormlite.domain.KeyValue) (((javax.swing.JComboBox) (c)).getSelectedItem())).getValue(); }else { value = ((javax.swing.JComboBox) (c)).getSelectedItem().toString(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4591/buggy-version/src.es.icarto.gvsig.navtableforms.validation.ComponentValidator.java", "BodyUseAPI": [], "Fixed commit": "702dd877dbfc781a13d83de8b2f1c33c48700f9a", "Url": "https://api.github.com/repos/navtable/navtableforms", "Date": "2012-08-28T11:01:54Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i < (oligoKeysList.size())) { startingOligoHetObject = oligoKeysList.get(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4129/buggy-version/src.java.edu.chop.dgd.dgdObjects.MfoldDimer.java", "BodyUseAPI": ["java.util.List<edu.chop.dgd.dgdObjects.OligoObject>.get(int)"], "Fixed commit": "322b5fc21486e1ad2657ea5d151fa1706483f2db", "Url": "https://api.github.com/repos/chopdgd/OligoDesigner", "Date": "2015-07-28T21:30:35Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i >= (oligoKeysList.size())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4129/buggy-version/src.java.edu.chop.dgd.dgdObjects.MfoldDimer.java", "BodyUseAPI": [], "Fixed commit": "322b5fc21486e1ad2657ea5d151fa1706483f2db", "Url": "https://api.github.com/repos/chopdgd/OligoDesigner", "Date": "2015-07-28T21:30:35Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i >= (oligoKeysList.size())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4129/buggy-version/src.java.edu.chop.dgd.dgdObjects.MfoldDimer.java", "BodyUseAPI": [], "Fixed commit": "322b5fc21486e1ad2657ea5d151fa1706483f2db", "Url": "https://api.github.com/repos/chopdgd/OligoDesigner", "Date": "2015-07-28T21:30:35Z"},
{"Line": "=>3856", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((loc.getWorld()) == (player.getWorld())) && ((loc.distance(player.getLocation())) <= 16)) ((org.bukkit.craftbukkit.v1_7_R1.entity.CraftPlayer) (player)).getHandle().playerConnection.sendPacket(packet);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5283/buggy-version/EvilBook.src.me.evilpeanut.EvilBook.java", "BodyUseAPI": [], "Fixed commit": "2925220a9fe0a3bb11aeded62dba62b6eb68e97a", "Url": "https://api.github.com/repos/EvilPeanut/EvilBook", "Date": "2013-12-23T22:24:56Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (connection != null) { try { connection.close(); } catch (java.sql.SQLException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5706/buggy-version/core.org.wso2.carbon.ndatasource.rdbms.src.main.java.org.wso2.carbon.ndatasource.rdbms.RDBMSDataSourceReader.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "6e7739d06e8fb5d61a858f37dfa418934a2f633f", "Url": "https://api.github.com/repos/madhawa-gunasekara/carbon4-kernel", "Date": "2015-09-29T19:06:34Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.ndatasource.rdbms.RDBMSDataSourceReader.loadConfig(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((rdbmsConfiguration.getUsername()) != null) { connection = java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl(), rdbmsConfiguration.getUsername(), rdbmsConfiguration.getPassword()); }else { connection = java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5706/buggy-version/core.org.wso2.carbon.ndatasource.rdbms.src.main.java.org.wso2.carbon.ndatasource.rdbms.RDBMSDataSourceReader.java", "BodyUseAPI": ["org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getUsername()", "org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getUrl()", "java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl(),rdbmsConfiguration.getUsername(),rdbmsConfiguration.getPassword())", "java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl())", "org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getPassword()", "org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getUrl()"], "Fixed commit": "6e7739d06e8fb5d61a858f37dfa418934a2f633f", "Url": "https://api.github.com/repos/madhawa-gunasekara/carbon4-kernel", "Date": "2015-09-29T19:06:34Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (clz != (java.lang.String.class)) { try { java.lang.reflect.Method mValueOf = clz.getMethod(\"valueOf\", java.lang.String.class); actualValue = mValueOf.invoke(clz, actualValue); } catch (java.lang.NoSuchMethodException | java.lang.SecurityException | java.lang.IllegalAccessException | java.lang.IllegalArgumentException | java.lang.reflect.InvocationTargetException e) { com.codekaki.odoo.birtrpt.resource.ReportGenerator.logger.log(java.util.logging.Level.SEVERE, e.getMessage(), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2048/buggy-version/src.main.java.com.codekaki.odoo.birtrpt.resource.ReportGenerator.java", "BodyUseAPI": ["java.lang.Class<?>.getMethod(java.lang.String,java.lang.Class)", "java.lang.reflect.Method.invoke(java.lang.Class<?>,java.lang.Object)"], "Fixed commit": "bf690fa4473f1bb8be13ba6d808b9980eaf4e829", "Url": "https://api.github.com/repos/phuihock/birtconn", "Date": "2015-06-01T21:56:26Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.apache.hadoop.mapred.TaskAttemptContext.class.isInterface())) { clazz = java.lang.Class.forName(\"org.apache.hadoop.mapred.TaskAttemptContext\", true, java.lang.Thread.currentThread().getContextClassLoader()); }else { clazz = java.lang.Class.forName(\"org.apache.hadoop.mapred.TaskAttemptContextImpl\", true, java.lang.Thread.currentThread().getContextClassLoader()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2200/buggy-version/stratosphere-addons.hadoop-compatibility.src.main.java.eu.stratosphere.hadoopcompatibility.mapred.utils.HadoopUtils.java", "BodyUseAPI": [], "Fixed commit": "c4d4f109cc93e68592b341fe32b94d83e370bf54", "Url": "https://api.github.com/repos/twalthr/stratosphere", "Date": "2014-06-03T17:35:06Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.apache.hadoop.mapred.TaskAttemptContext.class.isInterface())) { clazz = java.lang.Class.forName(\"org.apache.hadoop.mapred.JobContext\", true, java.lang.Thread.currentThread().getContextClassLoader()); }else { clazz = java.lang.Class.forName(\"org.apache.hadoop.mapred.JobContextImpl\", true, java.lang.Thread.currentThread().getContextClassLoader()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2200/buggy-version/stratosphere-addons.hadoop-compatibility.src.main.java.eu.stratosphere.hadoopcompatibility.mapred.utils.HadoopUtils.java", "BodyUseAPI": [], "Fixed commit": "c4d4f109cc93e68592b341fe32b94d83e370bf54", "Url": "https://api.github.com/repos/twalthr/stratosphere", "Date": "2014-06-03T17:35:06Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.wrong) == 0) this.wrong = 1; else this.wrong = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2983/buggy-version/src.MovePusheenApplet.java", "BodyUseAPI": [], "Fixed commit": "eb0182510eeb2f89cca048adfeefd6a0e66913d5", "Url": "https://api.github.com/repos/jasonchang117/SoftwareStudio2016_Final", "Date": "2016-06-01T15:05:48Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (other.getEnd().isPresent()) { org.joda.time.DateTime otherEnd = other.getEnd().get(); if (otherEnd.isAfter(start)) { org.stt.model.TimeTrackingItem newItem = new org.stt.model.TimeTrackingItem(other.getComment().orNull(), otherStart, start); replace(other, newItem); } }else { org.stt.model.TimeTrackingItem newItem = new org.stt.model.TimeTrackingItem(other.getComment().orNull(), otherStart, start); replace(other, newItem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7907/buggy-version/src.main.java.org.stt.persistence.db.DBItemPersister.java", "BodyUseAPI": ["org.stt.persistence.db.DBItemPersister.replace(org.stt.model.TimeTrackingItem,org.stt.model.TimeTrackingItem)", "other.getComment().orNull()", "other.getEnd().get()", "org.stt.model.TimeTrackingItem.getComment()", "other.getComment().orNull()", "org.stt.persistence.db.DBItemPersister.replace(org.stt.model.TimeTrackingItem,org.stt.model.TimeTrackingItem)", "org.stt.model.TimeTrackingItem.getEnd()", "org.stt.model.TimeTrackingItem.getComment()"], "Fixed commit": "2b65002c1dc19a07bdf53f565fa6fd2bfb93d493", "Url": "https://api.github.com/repos/Blizzard26/StandaloneClient", "Date": "2016-12-26T23:19:20Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.stt.model.TimeTrackingItem.getStart()", "other.getEnd().get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(otherEnd.isEqual(start))) { org.stt.model.TimeTrackingItem newItem = new org.stt.model.TimeTrackingItem(other.getComment().orNull(), otherStart, start); replace(other, newItem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7907/buggy-version/src.main.java.org.stt.persistence.db.DBItemPersister.java", "BodyUseAPI": [], "Fixed commit": "2b65002c1dc19a07bdf53f565fa6fd2bfb93d493", "Url": "https://api.github.com/repos/Blizzard26/StandaloneClient", "Date": "2016-12-26T23:19:20Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (line.isEmpty()) { continue; }else if ((line.contains(this.dataGetter.getSubject())) && (course == null)) { if (line.contains(\" (Syllabus)\")) line = line.substring(0, line.indexOf(\" (Syllabus)\")); course = this.dataGetter.getSubject(); number = line.substring(((line.length()) - 9), ((line.length()) - 6)); section = line.substring(((line.length()) - 3), line.length()); term = this.dataGetter.getTerm(); }else if (line.contains(\"Instructors:\")) { java.lang.String[] fullname = in.nextLine().split(\"\\\\s+\"); if ((fullname.length) == 2) { instructor = ((fullname[0]) + \" \") + (fullname[1]); }else if (((fullname.length) == 3) && (!(fullname[2].contains(\"(P)\")))) { instructor = ((fullname[0]) + \" \") + (fullname[2]); }else if (((fullname.length) == 3) && (fullname[2].contains(\"(P)\"))) { instructor = ((fullname[0]) + \" \") + (fullname[1]); }else if ((fullname.length) == 4) { instructor = ((fullname[0]) + \" \") + (fullname[2]); } }else if (line.contains(\"Credits\")) { credits = java.lang.Integer.parseInt(line.substring(((line.indexOf(\"Credits\")) - 6), ((line.indexOf(\"Credits\")) - 5))); }else if ((line.contains(\" am\")) || (line.contains(\" pm\"))) { java.lang.String[] interval = line.split(\" - \"); int startHour = java.lang.Integer.parseInt(interval[0].substring(0, interval[0].indexOf(':'))); int startMinute = java.lang.Integer.parseInt(interval[0].substring(((interval[0].indexOf(':')) + 1), ((interval[0].indexOf(':')) + 3))); if ((interval[0].contains(\"pm\")) && (startHour != 12)) { startHour += 12; } int endHour = java.lang.Integer.parseInt(interval[1].substring(0, interval[1].indexOf(':'))); int endMinute = java.lang.Integer.parseInt(interval[1].substring(((interval[1].indexOf(':')) + 1), ((interval[1].indexOf(':')) + 3))); if ((interval[1].contains(\"pm\")) && (endHour != 12)) { endHour += 12; } java.lang.String dayString = in.nextLine(); java.util.List<java.time.DayOfWeek> days = new java.util.ArrayList<>(); if ((dayString.indexOf('M')) != (-1)) { days.add(java.time.DayOfWeek.MONDAY); } if ((dayString.indexOf('T')) != (-1)) { days.add(java.time.DayOfWeek.TUESDAY); } if ((dayString.indexOf('W')) != (-1)) { days.add(java.time.DayOfWeek.WEDNESDAY); } if ((dayString.indexOf('R')) != (-1)) { days.add(java.time.DayOfWeek.THURSDAY); } if ((dayString.indexOf('F')) != (-1)) { days.add(java.time.DayOfWeek.FRIDAY); } CoursePlanner.ScheduleMaker.FutureCourse.TimeInterval newTime = new CoursePlanner.ScheduleMaker.FutureCourse.TimeInterval(startHour, startMinute, endHour, endMinute, days); if (!(time.contains(newTime))) time.add(newTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5932/buggy-version/src.CoursePlanner.ScheduleMaker.ScheduleDataParser.java", "BodyUseAPI": ["java.lang.String.contains(this.dataGetter.getSubject())", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "ea8db02c6fdaa41d1b64fd6561018bd0aded1ef9", "Url": "https://api.github.com/repos/Juliang0705/CoursePicker", "Date": "2016-04-15T04:13:22Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (source == null) { return new com.intellij.psi.PsiElement[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6046/buggy-version/src.com.chrisfolger.needsmoredojo.core.amd.ImportReorderer.java", "BodyUseAPI": [], "Fixed commit": "f2124aa1662d7b67dc4ee58e3ae4d9843c17c92b", "Url": "https://api.github.com/repos/cefolger/needsmoredojo", "Date": "2013-07-17T22:16:46Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["items.getFunction().getParameters()", "com.chrisfolger.needsmoredojo.core.amd.ImportReorderer.getIndexInParent(defines[1])", "com.chrisfolger.needsmoredojo.core.amd.ImportReorderer.getIndexInParent(defines[0])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((sourceIndex >= (parameterList.length)) || (destinationIndex >= (parameterList.length))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6046/buggy-version/src.com.chrisfolger.needsmoredojo.core.amd.ImportReorderer.java", "BodyUseAPI": [], "Fixed commit": "f2124aa1662d7b67dc4ee58e3ae4d9843c17c92b", "Url": "https://api.github.com/repos/cefolger/needsmoredojo", "Date": "2013-07-17T22:16:46Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((node instanceof mjc.parser.ASTEqual) || (node instanceof mjc.parser.ASTNotEqual)) { input.expectedType = null; }else { input.expectedType = \"int\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5737/buggy-version/src.mjc.parser.TypeCheckVisitor.java", "BodyUseAPI": [], "Fixed commit": "e663c73406b4e5061756bd32551b4c2f133ab66e", "Url": "https://api.github.com/repos/gj-kth/compilatrocious", "Date": "2014-04-24T20:26:40Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ice.isShiftClick()) { ice.setCancelled(true); }else { ice.setCancelled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8721/buggy-version/src.io.github.yannici.bedwars.Shop.NewItemShop.java", "BodyUseAPI": ["org.bukkit.event.inventory.InventoryClickEvent.setCancelled(boolean)", "org.bukkit.event.inventory.InventoryClickEvent.setCancelled(boolean)"], "Fixed commit": "45ce72edbb25e3cf6bcad9dd166da6d4cef912a5", "Url": "https://api.github.com/repos/BedwarsRel/BedwarsRel", "Date": "2015-04-30T23:17:48Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.select.Elements.select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (rows.get(rowIndex).select(\"div.left\").html().equals(\"Description\")) { result.setHtmlDescription(rows.get((rowIndex++)).select(\".right\").html()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2511/buggy-version/app.src.main.java.me.devsaki.hentoid.parser.FakkuParser.java", "BodyUseAPI": ["me.devsaki.hentoid.database.domains.Content.setHtmlDescription(rows.get((rowIndex++)).select(\".right\").html())", "org.jsoup.select.Elements.get(int)", "rows.get((rowIndex++)).select(\".right\").html()", "rows.get((rowIndex++)).select(java.lang.String)"], "Fixed commit": "e998d0d60170f1c8399fdb7a58953ff5ebf68dd6", "Url": "https://api.github.com/repos/avluis/Hentoid", "Date": "2015-10-30T06:32:31Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((edu.berkeley.cs.nlp.ocular.main.ExtractLinesOnly.extractedLinesPath) == null) throw new java.lang.IllegalArgumentException(\"-extractedLinesPath is required.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3866/buggy-version/src.main.java.edu.berkeley.cs.nlp.ocular.main.ExtractLinesOnly.java", "BodyUseAPI": [], "Fixed commit": "51a279f9b17133aeffded5f6dfbc1889b483d490", "Url": "https://api.github.com/repos/tberg12/ocular", "Date": "2016-03-07T21:46:07Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Integer.parseInt(line)) < taskID) { throw new utilities.Exceptions.TaskIDNotExistException(\"You don't have that many tasks!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1277/buggy-version/src.database.FileManagement.java", "BodyUseAPI": [], "Fixed commit": "7ceb794702f028d4c505e4a169d22c6eeac8f2ca", "Url": "https://api.github.com/repos/cs2103aug2015-w13-4j/main", "Date": "2015-10-21T02:38:42Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mimetype.equals(ContactsContract.CommonDataKinds.StructuredName.CONTENT_ITEM_TYPE)) { contact.put(\"displayName\", c.getString(c.getColumnIndex(ContactsContract.CommonDataKinds.StructuredName.DISPLAY_NAME))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4749/buggy-version/framework.src.com.phonegap.ContactAccessorSdk5.java", "BodyUseAPI": [], "Fixed commit": "3895570eddcb161919c1f0f9684ed1cb2ae6ec45", "Url": "https://api.github.com/repos/macdonst/phonegap-android", "Date": "2011-07-07T16:54:12Z"},
{"Line": "=>559", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7516/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.java", "BodyUseAPI": [], "Fixed commit": "b38baa27dd4d3d1d7e681474700e464488dcd1e2", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-04-16T06:57:01Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getMessage()) != null) { errorMessage += \", \" + (e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7516/buggy-version/src.main.java.com.alibaba.fastjson.serializer.JavaBeanSerializer.java", "BodyUseAPI": ["java.lang.Exception.getMessage()"], "Fixed commit": "b38baa27dd4d3d1d7e681474700e464488dcd1e2", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-04-16T06:57:01Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (out.writeMapNullValue) { out.writeNull(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7516/buggy-version/src.main.java.com.alibaba.fastjson.serializer.ObjectFieldSerializer.java", "BodyUseAPI": ["com.alibaba.fastjson.serializer.SerializeWriter.writeNull()"], "Fixed commit": "b38baa27dd4d3d1d7e681474700e464488dcd1e2", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-04-16T06:57:01Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((client.players[getSlot()].playerMob) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4335/buggy-version/src.engine.network.packet.Packet10PlayerInventorySlot.java", "BodyUseAPI": [], "Fixed commit": "00247c3d218be2b027cd0c298bb6041e22b8bc8e", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-07-22T23:52:21Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Preferences.MISC_PREFERENCE.getSend_txMode().ordinal()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (selected < 4) { txModeSpinner.setSelection(selected); }else { txModeSpinner.setSelection(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8843/buggy-version/app.src.main.java.de.tu.darmstadt.seemoo.ansian.gui.views.TransmitView.java", "BodyUseAPI": ["android.widget.Spinner.setSelection(int)"], "Fixed commit": "f81014b859a8c78130e0545e60d7e2a866713dde", "Url": "https://api.github.com/repos/mkannwischer/AnSiAn", "Date": "2017-01-24T17:37:28Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (customDate != null) { data_Dt = customDate; }else { data_Dt = str[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3102/buggy-version/src.com.shiftu.trafficsurvey.database.TrafficDatabaseHandler.java", "BodyUseAPI": [], "Fixed commit": "450a98b4bdcd372222d379ea63e9151f704fd366", "Url": "https://api.github.com/repos/babuhemanta/TrafficSurvey", "Date": "2013-03-01T20:07:29Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((competition.getRoundMap().get(0).getNofBrokers()) >= (competition.getRoundMap().get(0).getMaxBrokers())) { return allowedBrokers; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3336/buggy-version/src.main.java.org.powertac.tourney.actions.ActionCompetition.java", "BodyUseAPI": [], "Fixed commit": "448c9c281e237243570ed41545f45ee68998ece0", "Url": "https://api.github.com/repos/powertac/powertac-tournament-scheduler", "Date": "2013-03-12T12:31:53Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((acc.getUserInfo()) instanceof com.echarm.apigateway.accountsystem.model.DoctorInfo)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/760/buggy-version/src.main.java.com.echarm.apigateway.accountsystem.repository.FindAllTypedSpecification.java", "BodyUseAPI": [], "Fixed commit": "3430d920f19912d18635a971ce5330a4a645a4a3", "Url": "https://api.github.com/repos/sevenlol/APIGatewayService", "Date": "2015-07-11T08:15:27Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newF > 0) { rRawS -= newF * (java.lang.Math.log(newF)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6128/buggy-version/jahmm.src.jahmm.jadetree.DecisionTreeUtils.java", "BodyUseAPI": ["java.lang.Math.log(int)"], "Fixed commit": "247b312b799e97657a7a1462d62ed5ddea682781", "Url": "https://api.github.com/repos/KommuSoft/jahmm", "Date": "2014-03-13T15:08:49Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newF > 1) { lRawS += (newF - 1) * (java.lang.Math.log((newF - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6128/buggy-version/jahmm.src.jahmm.jadetree.DecisionTreeUtils.java", "BodyUseAPI": ["java.lang.Math.log(int)"], "Fixed commit": "247b312b799e97657a7a1462d62ed5ddea682781", "Url": "https://api.github.com/repos/KommuSoft/jahmm", "Date": "2014-03-13T15:08:49Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filter) == null) { throw new java.lang.Exception((\"Post-initialization hook has been called before the plugin start. \" + \"Filters are not available\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5738/buggy-version/src.main.java.org.jvnet.hudson.plugins.monitoring.PluginImpl.java", "BodyUseAPI": [], "Fixed commit": "42ddb234250103afe2e407a3b3370d7f0125a946", "Url": "https://api.github.com/repos/jenkinsci/monitoring-plugin", "Date": "2015-07-17T07:14:09Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOff()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7752/buggy-version/app.src.main.java.com.jmstudios.redmoon.presenter.ScreenFilterPresenter.java", "BodyUseAPI": [], "Fixed commit": "cb93a31dd247065534e382d70ca56bc18e72cf23", "Url": "https://api.github.com/repos/kuoruan/red-moon", "Date": "2016-07-02T10:13:16Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["item_snapshot.child(\"isTranslator\").getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (isGibber && (!(userNames.contains(item_snapshot.child(\"displayName\").getValue(java.lang.String.class))))) { while ((item_snapshot.child((\"languages/\" + i)).getValue(java.lang.String.class)) != null) { android.util.Log.d(\"user\", java.lang.String.valueOf(item_snapshot.child(\"displayName\").getValue(java.lang.String.class))); android.util.Log.d(\"user lang\", java.lang.String.valueOf(item_snapshot.child((\"languages/\" + i)).getValue(java.lang.String.class))); userNames.add(item_snapshot.child(\"displayName\").getValue(java.lang.String.class)); language.add(item_snapshot.child((\"languages/\" + i)).getValue(java.lang.String.class)); i++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6692/buggy-version/app.src.main.java.edu.csumb.ma6317.myapplication.MapsActivity.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(item_snapshot.child((\"languages/\" + i)).getValue(java.lang.String.class))", "android.util.Log.d(java.lang.String,java.lang.String)", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "java.lang.String.valueOf(item_snapshot.child((\"languages/\" + i)).getValue(java.lang.String.class))", "java.lang.String.valueOf(item_snapshot.child(\"displayName\").getValue(java.lang.String.class))", "item_snapshot.child((\"languages/\" + i)).getValue(java.lang.Class)", "item_snapshot.child((\"languages/\" + i)).getValue(java.lang.Class)", "item_snapshot.child(\"displayName\").getValue(java.lang.Class)", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "java.util.ArrayList<java.lang.String>.add(item_snapshot.child(\"displayName\").getValue(java.lang.String.class))", "item_snapshot.child((\"languages/\" + i)).getValue(java.lang.Class)", "android.util.Log.d(java.lang.String,java.lang.String)", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "item_snapshot.child(\"displayName\").getValue(java.lang.Class)", "com.google.firebase.database.DataSnapshot.child(java.lang.String)"], "Fixed commit": "7a2d2ce5e4c9f7a768ab6872ac72dc0474e3bac2", "Url": "https://api.github.com/repos/lomeli-noe/sudo_almond_milk", "Date": "2017-11-29T01:00:01Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((token.get(CoreAnnotations.LemmaAnnotation.class)) != null) { wordIndividual.addProperty(NIFDatatypeProperties.lemma.getDatatypeProperty(outputModel), token.get(CoreAnnotations.LemmaAnnotation.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1904/buggy-version/java-maven.implementation.stanfordcorenlp.src.main.java.org.nlp2rdf.implementation.stanfordcorenlp.StanfordWrapper.java", "BodyUseAPI": ["com.hp.hpl.jena.ontology.Individual.addProperty(NIFDatatypeProperties.lemma.getDatatypeProperty(outputModel),token.get(CoreAnnotations.LemmaAnnotation.class))", "edu.stanford.nlp.ling.CoreLabel.get(java.lang.Class)"], "Fixed commit": "773a62c999e7f76d9e3880f670ac6cb2af7ac2cc", "Url": "https://api.github.com/repos/NLP2RDF/software", "Date": "2014-08-08T12:00:05Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (config == null) { throw new org.onetwo.common.exception.ServiceException(org.onetwo.common.utils.DataSigner.SignErrors.CONFIG_ERR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7803/buggy-version/core.modules.common.src.main.java.org.onetwo.common.utils.DataSigner.java", "BodyUseAPI": [], "Fixed commit": "2a6b7308d56065ebc6bf2a64cc12bfc28b11f10c", "Url": "https://api.github.com/repos/wayshall/onetwo", "Date": "2017-11-21T02:56:02Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newContact) { cz.vutbr.fit.gja.gjaddr.gui.GroupsPanel.selectRootGroup(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5536/buggy-version/src.cz.vutbr.fit.gja.gjaddr.gui.ContactsPanel.java", "BodyUseAPI": [], "Fixed commit": "f0b5a23818a499f040c822401deda1480d3eaf61", "Url": "https://api.github.com/repos/Pitel/GJAddr", "Date": "2012-05-21T17:26:16Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag == 0) { tts.speak((\"It's \" + aggregate), TextToSpeech.QUEUE_FLUSH, null); }else { tts.speak(\"Divide by zero error!\", TextToSpeech.QUEUE_FLUSH, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7571/buggy-version/app.src.main.java.com.example.android.Bella.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "995a4e010bb067d4bfb3378afdf05d39680cbedd", "Url": "https://api.github.com/repos/NullPointersInc/Bella-Android", "Date": "2017-02-19T06:47:53Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((operator.equals(\"x\")) || (operator.equals(\"X\"))) { aggregate *= parsed; }else if (operator.equals(\"/\")) { if ((java.lang.Integer.valueOf(parsed)) == 0) { flag = 1; }else { aggregate /= parsed; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7571/buggy-version/app.src.main.java.com.example.android.Bella.MainActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "995a4e010bb067d4bfb3378afdf05d39680cbedd", "Url": "https://api.github.com/repos/NullPointersInc/Bella-Android", "Date": "2017-02-19T06:47:53Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (controller.Controller.getInstance().doesWalletExists()) { myaccounts = new java.util.ArrayList<qora.account.Account>(controller.Controller.getInstance().getAccounts()); }else { myaccounts = new java.util.ArrayList<qora.account.Account>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7713/buggy-version/Qora.src.qora.web.BlogBlackWhiteList.java", "BodyUseAPI": [], "Fixed commit": "33ff112951615dc99ce7c32538ea475dbcdbea91", "Url": "https://api.github.com/repos/Qoracoin/Qora", "Date": "2015-07-10T20:07:52Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (controller.Controller.getInstance().doesWalletExists()) { java.util.List<qora.transaction.Transaction> accountTransactions = utils.NameUtils.getOwnUnconfirmedTX(); for (qora.transaction.Transaction transaction : accountTransactions) { if ((transaction.getType()) == (qora.transaction.Transaction.UPDATE_NAME_TRANSACTION)) { qora.transaction.UpdateNameTransaction updateNameTx = ((qora.transaction.UpdateNameTransaction) (transaction)); if (updateNameTx.getName().getName().equals(name.getName())) { rawNameValue = updateNameTx.getName().getValue(); break; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7713/buggy-version/Qora.src.utils.NameUtils.java", "BodyUseAPI": [], "Fixed commit": "33ff112951615dc99ce7c32538ea475dbcdbea91", "Url": "https://api.github.com/repos/Qoracoin/Qora", "Date": "2015-07-10T20:07:52Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (responseStream != null) { byte[] responseData = org.apache.commons.io.IOUtils.toByteArray(responseStream); java.lang.String responseContentType = java.util.Optional.ofNullable(gvBuffer.getProperty(it.greenvulcano.gvesb.virtual.rest.RestCallOperation.RESPONSE_HEADER_PREFIX.concat(\"CONTENT-TYPE\"))).orElse(\"\"); if ((responseContentType.startsWith(\"application/json\")) || (responseContentType.startsWith(\"application/javascript\"))) { gvBuffer.setObject(new java.lang.String(responseData, \"UTF-8\")); }else { gvBuffer.setObject(responseData); } }else { gvBuffer.setObject(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6254/buggy-version/gvrestx.src.main.java.it.greenvulcano.gvesb.virtual.rest.RestCallOperation.java", "BodyUseAPI": ["org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)"], "Fixed commit": "47d027ed1d16828aa9ac110483b13af0a95e86cf", "Url": "https://api.github.com/repos/green-vulcano/gv-adapter-restx", "Date": "2017-06-23T08:16:45Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.min(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (numGroups <= 0) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2972/buggy-version/src.main.java.io.confluent.connect.jdbc.JdbcSourceConnector.java", "BodyUseAPI": [], "Fixed commit": "723b375b8b970e528be5a45857db67ad79c39495", "Url": "https://api.github.com/repos/kvmkreddy/kafka-connect-jdbc", "Date": "2017-06-15T06:15:26Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((appName.equals(usageStats.get(i).getPackageName())) && (!(modelMap.containsKey(appName)))) modelMap.put(appName, new apps.tracker.com.applicationtracker.model.AppsInstalledModel(nonSystemApp, usageStats.get(i).getLastTimeUsed(), usageStats.get(i).getFirstTimeStamp()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8412/buggy-version/app.src.main.java.apps.tracker.com.applicationtracker.fragment.ApplicationsInformationFragment.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, apps.tracker.com.applicationtracker.model.AppsInstalledModel>.put(java.lang.String,apps.tracker.com.applicationtracker.model.AppsInstalledModel)", "usageStats.get(i).getLastTimeUsed()", "java.util.List<android.app.usage.UsageStats>.get(int)", "java.util.List<android.app.usage.UsageStats>.get(int)", "usageStats.get(i).getFirstTimeStamp()"], "Fixed commit": "ae9426a02d47c504829fb656b223f612cd664f5e", "Url": "https://api.github.com/repos/priyakar/ApplicationTracker", "Date": "2016-05-26T22:43:41Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c == (hex.ModelCategory.DimReduction)) { preds = new double[m.nclasses()]; }else { preds = new double[m.getPredsSize()]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1141/buggy-version/h2o-genmodel.src.main.java.hex.genmodel.easy.EasyPredictModelWrapper.java", "BodyUseAPI": [], "Fixed commit": "bc7d5a707b5d58c7535571f000a97275ebac7765", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2016-05-06T01:29:49Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.nallar.javatransformer.internal.ResolutionContext.extractGeneric(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (generic == null) { return me.nallar.javatransformer.internal.ResolutionContext.sanityCheck(type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/766/buggy-version/src.main.java.me.nallar.javatransformer.internal.ResolutionContext.java", "BodyUseAPI": [], "Fixed commit": "2d2a33ad924aab6a79d6a872564bc4fd548ae390", "Url": "https://api.github.com/repos/MinimallyCorrect/JavaTransformer", "Date": "2016-02-17T20:20:12Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(defaultDir.exists())) { defaultDir.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2046/buggy-version/cyclist.src.edu.utah.sci.cyclist.core.model.Table.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "a2481c5c33821bd9529c16db1a1e72f783460d6c", "Url": "https://api.github.com/repos/gidden/cyclist2", "Date": "2014-09-30T19:02:06Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(defaultWs.exists())) defaultWs.mkdir();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2046/buggy-version/cyclist.src.edu.utah.sci.cyclist.core.controller.CyclistController.java", "BodyUseAPI": [], "Fixed commit": "a2481c5c33821bd9529c16db1a1e72f783460d6c", "Url": "https://api.github.com/repos/gidden/cyclist2", "Date": "2014-09-30T19:02:06Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mDataHandler.mPost) != null) mTitle.setText(mDataHandler.mPost.getTitle());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3507/buggy-version/src.com.mde.potdroid.activities.EditorActivity.java", "BodyUseAPI": ["android.widget.EditText.setText(mDataHandler.mPost.getTitle())", "com.mde.potdroid.models.Post.getTitle()"], "Fixed commit": "d44f7676a9b9e546aa5f02e283a54f721fd25d80", "Url": "https://api.github.com/repos/janoliver/pOT-Droid", "Date": "2013-02-16T21:07:11Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vetris.Grid.isTinyShape()) { vetris.FallBlock.tickTinyShape(); }else { vetris.FallBlock.tick(); vetris.Grid.addSpeed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6346/buggy-version/src.vetris.Window.java", "BodyUseAPI": [], "Fixed commit": "afc097bb49ba686d827d3ed2a48e470e5db64568", "Url": "https://api.github.com/repos/ParallGames/Vetris", "Date": "2017-06-01T16:52:08Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (y > 19) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6346/buggy-version/src.vetris.Grid.java", "BodyUseAPI": [], "Fixed commit": "afc097bb49ba686d827d3ed2a48e470e5db64568", "Url": "https://api.github.com/repos/ParallGames/Vetris", "Date": "2017-06-01T16:52:08Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((x) + (stepSize)) + (width)) < (Driver.game.getLevelList().get(Driver.game.getCurrentLevel()).getWidth())) { x += stepSize; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5960/buggy-version/java.src.Player.java", "BodyUseAPI": [], "Fixed commit": "a035e9c7a199581d96b3e0602aa2e24366fa1737", "Url": "https://api.github.com/repos/Ishadijcks/SEMgroup32", "Date": "2015-09-03T14:24:29Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((x) - (stepSize)) > 0) { x -= stepSize; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5960/buggy-version/java.src.Player.java", "BodyUseAPI": [], "Fixed commit": "a035e9c7a199581d96b3e0602aa2e24366fa1737", "Url": "https://api.github.com/repos/Ishadijcks/SEMgroup32", "Date": "2015-09-03T14:24:29Z"},
{"Line": "=>1552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isContainsInTypeAnnotation(argument.type.resolvedType, a)) { a.traverse(this, scope); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1844/buggy-version/src.main.java.spoon.support.compiler.jdt.JDTTreeBuilder.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.ast.Annotation.traverse(spoon.support.compiler.jdt.JDTTreeBuilder,org.eclipse.jdt.internal.compiler.lookup.BlockScope)"], "Fixed commit": "c1c621650dc36bde87bec9b9d3f20db56a504a56", "Url": "https://api.github.com/repos/GerardPaligot/spoon", "Date": "2015-02-17T14:42:39Z"},
{"Line": "=>2152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isContainsInTypeAnnotation(methodDeclaration.returnType.resolvedType, a)) { a.traverse(this, methodDeclaration.scope); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1844/buggy-version/src.main.java.spoon.support.compiler.jdt.JDTTreeBuilder.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.ast.Annotation.traverse(spoon.support.compiler.jdt.JDTTreeBuilder,methodDeclaration.scope)"], "Fixed commit": "c1c621650dc36bde87bec9b9d3f20db56a504a56", "Url": "https://api.github.com/repos/GerardPaligot/spoon", "Date": "2015-02-17T14:42:39Z"},
{"Line": "=>2028", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isContainsInTypeAnnotation(localDeclaration.type.resolvedType, a)) { a.traverse(this, scope); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1844/buggy-version/src.main.java.spoon.support.compiler.jdt.JDTTreeBuilder.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.ast.Annotation.traverse(spoon.support.compiler.jdt.JDTTreeBuilder,org.eclipse.jdt.internal.compiler.lookup.BlockScope)"], "Fixed commit": "c1c621650dc36bde87bec9b9d3f20db56a504a56", "Url": "https://api.github.com/repos/GerardPaligot/spoon", "Date": "2015-02-17T14:42:39Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (everyFile != null) { everyFile.exitCommand(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2871/buggy-version/src.ru.fizteh.fivt.students.mishatkin.multifilehashmap.MultiFileHashMapTableReceiver.java", "BodyUseAPI": ["ru.fizteh.fivt.students.mishatkin.filemap.FileMapReceiver.exitCommand()"], "Fixed commit": "30d67f41da6e6229ac72fcd22f7874db5f8c82bc", "Url": "https://api.github.com/repos/ava-katushka/fizteh-java-2013", "Date": "2013-10-26T02:49:16Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status) start.getObject().addMem(name, persNr, \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4455/buggy-version/src.View.Console.java", "BodyUseAPI": [], "Fixed commit": "aff27e4bdd4591b3b593f150c7bbd84037f8b2e0", "Url": "https://api.github.com/repos/cj222jb/Workshop2_UML", "Date": "2016-10-14T12:25:59Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((container) != null) container.reportBusy(aid);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2684/buggy-version/src.main.java.org.arl.fjage.Agent.java", "BodyUseAPI": [], "Fixed commit": "d3373a0bce8df195321c1d69b814181367244be2", "Url": "https://api.github.com/repos/org-arl/fjage", "Date": "2013-12-27T17:45:18Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((container) != null) container.reportBusy(aid);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2684/buggy-version/src.main.java.org.arl.fjage.Agent.java", "BodyUseAPI": [], "Fixed commit": "d3373a0bce8df195321c1d69b814181367244be2", "Url": "https://api.github.com/repos/org-arl/fjage", "Date": "2013-12-27T17:45:18Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((container) != null) container.reportBusy(aid);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2684/buggy-version/src.main.java.org.arl.fjage.Agent.java", "BodyUseAPI": [], "Fixed commit": "d3373a0bce8df195321c1d69b814181367244be2", "Url": "https://api.github.com/repos/org-arl/fjage", "Date": "2013-12-27T17:45:18Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.attributes.get(\"delimiter\")) != null) this.delimiter = this.attributes.get(\"delimiter\").toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6543/buggy-version/src.lib.CslNames.java", "BodyUseAPI": ["this.attributes.get(\"delimiter\").toString()", "this.attributes.get(java.lang.String)"], "Fixed commit": "98a7c796688c3561dd83e5ccda4b38cafaaab3a1", "Url": "https://api.github.com/repos/maxgilander/CiteProc", "Date": "2012-07-24T05:44:44Z"},
{"Line": "=>589", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (oldFocus != (theFocus)) { if (oldFocus != null) events.add(new org.muis.core.MuisEventQueue.UserQueueEvent(new org.muis.core.event.FocusEvent(this, oldFocus, false), false)); if ((theFocus) != null) events.add(new org.muis.core.MuisEventQueue.UserQueueEvent(new org.muis.core.event.FocusEvent(this, theFocus, true), false)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4782/buggy-version/projects.MUIS.src.main.java.org.muis.core.MuisDocument.java", "BodyUseAPI": ["java.util.List<MuisEventQueue.Event>.add(org.muis.core.MuisEventQueue.UserQueueEvent)"], "Fixed commit": "251e5d05ea638f4295a1a26f3a52628f2e0e9485", "Url": "https://api.github.com/repos/Updownquark/MUIS", "Date": "2014-01-24T21:21:22Z"},
{"Line": "=>498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null != instanceIDs) && ((instanceIDs.size()) > 0)) { throw new com.tlswe.awsmock.ec2.exception.BadEc2RequestException(\"DescribeInstances\", \"AWS Error Code: InvalidParameterCombination, AWS Error Message: The parameter instancesSet cannot be used with the parameter maxResults\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7484/buggy-version/src.main.java.com.tlswe.awsmock.ec2.control.MockEC2QueryHandler.java", "BodyUseAPI": [], "Fixed commit": "acb72d41e55b934da9a80b197e6cf31ae14b4828", "Url": "https://api.github.com/repos/treelogic-swe/aws-mock", "Date": "2016-10-13T14:44:03Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDebug) android.util.Log.d(edu.sintez.audioplayer.app.service.MusicService.LOG, \"createMediaPlayerIfNeeded - mp is NOT null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/9083/buggy-version/app.src.main.java.edu.sintez.audioplayer.app.service.MusicService.java", "BodyUseAPI": [], "Fixed commit": "475fe30fb849e98906252e06efb4d22521e66458", "Url": "https://api.github.com/repos/maxtat3/audioplayer-android", "Date": "2016-05-17T19:50:42Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDebug) android.util.Log.d(edu.sintez.audioplayer.app.service.MusicService.LOG, \"relaxResources\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/9083/buggy-version/app.src.main.java.edu.sintez.audioplayer.app.service.MusicService.java", "BodyUseAPI": [], "Fixed commit": "475fe30fb849e98906252e06efb4d22521e66458", "Url": "https://api.github.com/repos/maxtat3/audioplayer-android", "Date": "2016-05-17T19:50:42Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDebug) android.util.Log.d(edu.sintez.audioplayer.app.service.MusicService.LOG, \"Creating service\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/9083/buggy-version/app.src.main.java.edu.sintez.audioplayer.app.service.MusicService.java", "BodyUseAPI": [], "Fixed commit": "475fe30fb849e98906252e06efb4d22521e66458", "Url": "https://api.github.com/repos/maxtat3/audioplayer-android", "Date": "2016-05-17T19:50:42Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDebug) android.util.Log.d(edu.sintez.audioplayer.app.service.MusicService.LOG, \"createMediaPlayerIfNeeded - mp is null !\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/9083/buggy-version/app.src.main.java.edu.sintez.audioplayer.app.service.MusicService.java", "BodyUseAPI": [], "Fixed commit": "475fe30fb849e98906252e06efb4d22521e66458", "Url": "https://api.github.com/repos/maxtat3/audioplayer-android", "Date": "2016-05-17T19:50:42Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(wasSplhStart)) { showToast(\"Login was successful\"); chisw.com.plans.ui.activities.SplashActivity.start(this); wasSplhStart = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5013/buggy-version/app.src.main.java.chisw.com.plans.ui.activities.NetManagementActivity.java", "BodyUseAPI": [], "Fixed commit": "7816cace478289a8c02dbf6f507b529173e20cd1", "Url": "https://api.github.com/repos/kuzloivan/Plans", "Date": "2015-06-16T20:44:01Z"},
{"Line": "=>3385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isScreenOn) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3430/buggy-version/policy.src.com.android.internal.policy.impl.PhoneWindowManager.java", "BodyUseAPI": [], "Fixed commit": "a9b4e4bcca98483ccb6d95ee5ce96c022a01c321", "Url": "https://api.github.com/repos/cosmicdan/platform_frameworks_base", "Date": "2012-12-26T12:21:51Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((duration.getComment()) != null) { create.setComment(duration.getComment().getComment()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2582/buggy-version/agile-apps.agile-app-issues.src.main.java.org.headsupdev.agile.app.issues.EditProgressIssue.java", "BodyUseAPI": ["duration.getComment().getComment()", "org.headsupdev.agile.app.issues.EditProgressIssue.setComment(duration.getComment().getComment())", "org.headsupdev.agile.storage.resource.DurationWorked.getComment()"], "Fixed commit": "f24a7b4afb3ae9871f14880d3f7974fa07bc4515", "Url": "https://api.github.com/repos/headsupdev/agile", "Date": "2014-08-07T16:43:19Z"},
{"Line": "=>940", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((member.getName()) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6977/buggy-version/src.com.redhat.ceylon.model.loader.AbstractModelLoader.java", "BodyUseAPI": [], "Fixed commit": "3a0d5f600777c424ca4bd0f7ad6d1286bd063c06", "Url": "https://api.github.com/repos/ceylon/ceylon-model", "Date": "2015-07-09T15:56:56Z"},
{"Line": "=>1091", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (request != null) { request.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2561/buggy-version/src.com.mantz_it.hackrf_android.Hackrf.java", "BodyUseAPI": ["android.hardware.usb.UsbRequest.cancel()"], "Fixed commit": "a6e8dd3d0410dae181a00c74199970e53f21e637", "Url": "https://api.github.com/repos/demantz/hackrf_android", "Date": "2014-11-09T21:22:28Z"},
{"Line": "=>1199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (request != null) { request.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2561/buggy-version/src.com.mantz_it.hackrf_android.Hackrf.java", "BodyUseAPI": ["android.hardware.usb.UsbRequest.cancel()"], "Fixed commit": "a6e8dd3d0410dae181a00c74199970e53f21e637", "Url": "https://api.github.com/repos/demantz/hackrf_android", "Date": "2014-11-09T21:22:28Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((white && (playBoard.isWhite(x, y))) || ((!white) && (!(playBoard.isWhite(x, y))))) { playBoard.setDragging(true); playBoard.setClickCoordinates(x, y); playBoard.setClick(true); }else playBoard.setClick(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7784/buggy-version/src.Display.java", "BodyUseAPI": ["Board.setClick(boolean)", "Board.setClick(boolean)", "Board.setClickCoordinates(int,int)", "Board.setDragging(boolean)"], "Fixed commit": "e785a350ce2ddcbe128fa310e931184f839abe79", "Url": "https://api.github.com/repos/pdonlon/Chess", "Date": "2013-09-14T07:42:07Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fontSize) == 0) { fontSize = 12; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7217/buggy-version/src.PolyGlot.ManagersCollections.PropertiesManager.java", "BodyUseAPI": [], "Fixed commit": "20c43a2a6754213f2872e5d2cfb3ceb1edb027f2", "Url": "https://api.github.com/repos/DraqueT/PolyGlot", "Date": "2015-08-04T13:45:26Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((recv.getCommand()) == (Command.join)) server.joinGroup(this, recv.getGname()); else if ((recv.getCommand()) == (Command.leave)) server.leaveGroup(this, recv.getGname()); else if ((recv.getCommand()) == (Command.send)) { send(recv.getDest(), recv.getMessage(), recv.getSQN()); }else if ((recv.getCommand()) == (Command.adduser)) { edu.berkeley.cs.cs162.ServerReply success = server.addUser(recv.getUsername(), recv.getPassword()); edu.berkeley.cs.cs162.TransportObject sendObject = new edu.berkeley.cs.cs162.TransportObject(Command.adduser, success); queueReply(sendObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3048/buggy-version/base.src.edu.berkeley.cs.cs162.User.java", "BodyUseAPI": ["edu.berkeley.cs.cs162.TransportObject.getPassword()", "edu.berkeley.cs.cs162.TransportObject.getCommand()", "edu.berkeley.cs.cs162.TransportObject.getGname()", "edu.berkeley.cs.cs162.User.send(recv.getDest(),recv.getMessage(),recv.getSQN())", "edu.berkeley.cs.cs162.ChatServer.addUser(recv.getUsername(),recv.getPassword())", "edu.berkeley.cs.cs162.ChatServer.leaveGroup(edu.berkeley.cs.cs162.User,recv.getGname())", "edu.berkeley.cs.cs162.TransportObject.getUsername()", "edu.berkeley.cs.cs162.TransportObject.getCommand()", "edu.berkeley.cs.cs162.TransportObject.getMessage()", "edu.berkeley.cs.cs162.TransportObject.getSQN()", "edu.berkeley.cs.cs162.TransportObject.getCommand()", "edu.berkeley.cs.cs162.TransportObject.getDest()", "edu.berkeley.cs.cs162.TransportObject.getGname()", "edu.berkeley.cs.cs162.ChatServer.joinGroup(edu.berkeley.cs.cs162.User,recv.getGname())"], "Fixed commit": "67e7b0817e8e9e4265eb5e6c83a59b249f4b26a4", "Url": "https://api.github.com/repos/tonydear/cs162-p2", "Date": "2011-04-18T05:01:54Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.sql.DataSource.getConnection()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(doesTableExist(linkTableName, conn))) { final java.lang.String linkTableSql = ((((((((((((((((((((((\"CREATE TABLE \" + (linkTableName)) + \"(\") + \"ID BIGINT(20) unsigned NOT NULL AUTO_INCREMENT, \") + \"user_id BIGINT(20) unsigned NOT NULL, \") + \"from_id BIGINT(20) unsigned NOT NULL, \") + \"to_id BIGINT(20) unsigned NOT NULL, \") + \"PRIMARY KEY (ID), \") + \"FOREIGN KEY (user_id) REFERENCES \") + (wpConfig.dbPrefix)) + \"users(ID) \") + \"ON DELETE CASCADE \") + \"ON UPDATE CASCADE, \") + \"FOREIGN KEY (from_id) REFERENCES \") + (dataTableName)) + \"(ID) \") + \"ON DELETE CASCADE \") + \"ON UPDATE CASCADE, \") + \"FOREIGN KEY (to_id) REFERENCES \") + (dataTableName)) + \"(ID) \") + \"ON DELETE CASCADE \") + \"ON UPDATE CASCADE \") + \")\"; s.execute(linkTableSql); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5833/buggy-version/src.main.java.uk.ac.nottingham.create.stream.Database.java", "BodyUseAPI": [], "Fixed commit": "d1199fb49851ec89070e0cbf29a3c6ce16ef9d35", "Url": "https://api.github.com/repos/CREATe-centre/status-stream", "Date": "2016-06-16T13:49:52Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((display.HUD.getScore()) > (display.HUD.getHighScore())) { display.HUD.setHighScore(display.HUD.getScore()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/559/buggy-version/AstroJumpGame.logic.Game.java", "BodyUseAPI": [], "Fixed commit": "98ffde50f29c50a741da3780cd623e75d7baadbf", "Url": "https://api.github.com/repos/Heavenel/clown-in-a-box", "Date": "2017-04-12T02:24:14Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.facebook.Request.executeAndWait()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((response.getGraphObjectList()) != null) { data = response.getGraphObjectList().getInnerJSONArray().toString(); }else if ((response.getError()) != null) { if ((response.getError().getRequestResult()) != null) { error = response.getError().getRequestResult().toString(); }else { error = (\"{\\\"error\\\":\\\"\" + (response.getError().toString())) + \"\\\"}\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/129/buggy-version/android.src.com.freshplanet.ane.AirFacebook.RequestThread.java", "BodyUseAPI": ["response.getGraphObjectList().getInnerJSONArray().toString()", "com.facebook.Response.getError()", "com.facebook.Response.getGraphObjectList()", "response.getError().getRequestResult()", "com.facebook.Response.getError()", "response.getError().getRequestResult().toString()", "response.getError().getRequestResult()", "response.getGraphObjectList().getInnerJSONArray()", "com.facebook.Response.getError()", "com.facebook.Response.getError()", "response.getError().toString()"], "Fixed commit": "08e34bdc11a81a158151396843a94ed8bce8c4c5", "Url": "https://api.github.com/repos/freshplanet/ANE-Facebook", "Date": "2014-01-09T13:52:29Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<com.austindroids.austinfeedsme.data.Event>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (event.getDescription().toLowerCase().contains(\"beer\")) { event.setFoodType(\"beer\"); java.lang.Integer previousValue = yummyCounts.get(\"beer\"); yummyCounts.put(\"beer\", (previousValue == null ? 1 : previousValue + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1024/buggy-version/app.src.main.java.com.austindroids.austinfeedsme.events.EventsPresenter.java", "BodyUseAPI": ["com.austindroids.austinfeedsme.data.Event.setFoodType(java.lang.String)"], "Fixed commit": "433156a30219d99bae5c42d91d797ebd19913044", "Url": "https://api.github.com/repos/jetsetpaul/austin-feeds-me", "Date": "2016-09-09T16:03:25Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentTargetVector == null) { currentTargetVector = currentStartVector; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2604/buggy-version/ShootEmUp.src.components.control.AIControl.java", "BodyUseAPI": [], "Fixed commit": "4a891f9c88cfbfe11c0fefac0e2b4753cacf075a", "Url": "https://api.github.com/repos/Callum-Shipton/JACAPP", "Date": "2017-08-08T14:26:00Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ai.AStarSearch.getGridPosition(goalGraphics.getX(),goalGraphics.getY())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(currentTargetVector.equals(currentEnemyVector))) { currentTargetVector = patrol.update(currentStartVector); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2604/buggy-version/ShootEmUp.src.components.control.AIControl.java", "BodyUseAPI": [], "Fixed commit": "4a891f9c88cfbfe11c0fefac0e2b4753cacf075a", "Url": "https://api.github.com/repos/Callum-Shipton/JACAPP", "Date": "2017-08-08T14:26:00Z"},
{"Line": "=>1473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iClusterId < 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7647/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.impl.local.OStorageLocal.java", "BodyUseAPI": [], "Fixed commit": "c50ae9423a5e677ccccb49cd7943f79a10932103", "Url": "https://api.github.com/repos/pellyadolfo/orientdb", "Date": "2013-05-20T14:49:05Z"},
{"Line": "=>2671", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cmdResult.getCommandSuccess()) { completer.ready(_dbClient); }else if (cmdResult.getCommandPending()) { completer.statusPending(_dbClient, cmdResult.getMessage()); }else { completer.error(_dbClient, cmdResult.getServiceCoded()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8713/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.isilon.IsilonFileStorageDevice.java", "BodyUseAPI": ["com.emc.storageos.volumecontroller.impl.BiosCommandResult.getCommandPending()", "com.emc.storageos.volumecontroller.impl.BiosCommandResult.getServiceCoded()", "com.emc.storageos.volumecontroller.impl.BiosCommandResult.getMessage()", "com.emc.storageos.volumecontroller.TaskCompleter.error(com.emc.storageos.db.client.DbClient,cmdResult.getServiceCoded())", "com.emc.storageos.volumecontroller.TaskCompleter.statusPending(com.emc.storageos.db.client.DbClient,cmdResult.getMessage())"], "Fixed commit": "16059678b520f833180de7e2163972ef5a66af41", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-01-27T11:16:25Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cn.com.duiba.credits.CreditActivity.activityStack.size()) == 1) { finishActivity(this); }else { finishUpActivity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2147/buggy-version/src.cn.com.duiba.credits.CreditActivity.java", "BodyUseAPI": [], "Fixed commit": "86ff88a5c7fe128ca3ef1028ec1d1eb34010e7e5", "Url": "https://api.github.com/repos/duiba/duiba-android-sdk", "Date": "2015-01-30T10:47:21Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cn.com.duiba.credits.CreditActivity.activityStack.size()) == 1) { finishActivity(this); }else { cn.com.duiba.credits.CreditActivity.activityStack.get(0).ifRefresh = true; finishUpActivity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2147/buggy-version/src.cn.com.duiba.credits.CreditActivity.java", "BodyUseAPI": ["java.util.Stack<cn.com.duiba.credits.CreditActivity>.get(int)"], "Fixed commit": "86ff88a5c7fe128ca3ef1028ec1d1eb34010e7e5", "Url": "https://api.github.com/repos/duiba/duiba-android-sdk", "Date": "2015-01-30T10:47:21Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (javax.swing.SwingUtilities.isEventDispatchThread()) { runnable.run(); }else { javax.swing.SwingUtilities.invokeLater(runnable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4379/buggy-version/src.org.netbeans.modules.php.cake3.ui.CakePHP3StatusLineElementProvider.java", "BodyUseAPI": [], "Fixed commit": "426a2f4cff5b3b496c8555a509de07207e66fea2", "Url": "https://api.github.com/repos/junichi11/cakephp3-netbeans", "Date": "2015-08-15T04:44:43Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.util.PsiTreeUtil.getParentOfType(com.jetbrains.python.inspections.PyReferenceExpression,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (importStatement != null) { final com.intellij.psi.PsiElement element = importStatement.resolveImportSource(); if ((resolveResult != null) && (element != (resolveResult.getContainingFile()))) return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6520/buggy-version/python.src.com.jetbrains.python.inspections.PyDeprecationInspection.java", "BodyUseAPI": ["com.jetbrains.python.inspections.PyFromImportStatement.resolveImportSource()"], "Fixed commit": "c0ea251be6365669c57b4ed8a60b187728e9360c", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2014-04-01T12:33:07Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jetbrains.python.inspections.PyReferenceExpression.getReference(getResolveContext())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (reference == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6520/buggy-version/python.src.com.jetbrains.python.inspections.PyDeprecationInspection.java", "BodyUseAPI": [], "Fixed commit": "c0ea251be6365669c57b4ed8a60b187728e9360c", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2014-04-01T12:33:07Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getFragmentManager().findFragmentById(R.id.fragment_details)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (((fragment != null) && (fragment.isVisible())) && ((cursor.getCount()) == 0)) { fragment.updateView((-1)); android.widget.Toast.makeText(getActivity(), \"No data\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6109/buggy-version/Yamba.src.com.twitter.yamba.TimelineFragment.java", "BodyUseAPI": ["com.twitter.yamba.DetailsFragment.updateView(int)"], "Fixed commit": "47acb7c4a8a2676ff865727e3c1095f596965bb6", "Url": "https://api.github.com/repos/marakana/class-3177", "Date": "2013-06-13T20:37:23Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7055/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "ecba42a388db6db6db89081de1d1c48be9b97547", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-11T14:57:51Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fragments.size()) == 2) { fragments.add(detailFragment); }else { fragments.set(2, detailFragment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6365/buggy-version/app.src.main.java.edu.uw.fragmentdemo.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList<android.support.v4.app.Fragment>.set(int,edu.uw.fragmentdemo.DetailFragment)", "java.util.ArrayList<android.support.v4.app.Fragment>.add(edu.uw.fragmentdemo.DetailFragment)"], "Fixed commit": "f75e8a3a6b912a9eb7fb55c60104c617d5f7fa23", "Url": "https://api.github.com/repos/zicodeng/lecture05-fragments", "Date": "2017-04-13T00:37:27Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fragments.size()) == 1) { fragments.add(moviesFragment); }else { fragments.set(1, moviesFragment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6365/buggy-version/app.src.main.java.edu.uw.fragmentdemo.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList<android.support.v4.app.Fragment>.set(int,edu.uw.fragmentdemo.MoviesFragment)", "java.util.ArrayList<android.support.v4.app.Fragment>.add(edu.uw.fragmentdemo.MoviesFragment)"], "Fixed commit": "f75e8a3a6b912a9eb7fb55c60104c617d5f7fa23", "Url": "https://api.github.com/repos/zicodeng/lecture05-fragments", "Date": "2017-04-13T00:37:27Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (role.equals(Role.SUPERADMIN)) { if (!(actor.hasSuperAdminRole())) { org.linagora.linshare.core.facade.webservice.admin.impl.AdminGenericFacadeImpl.logger.error((\"Current actor is trying to access to a forbbiden api : \" + (actor.getAccountReprentation()))); throw new org.linagora.linshare.core.exception.BusinessException(org.linagora.linshare.core.exception.BusinessErrorCode.WEBSERVICE_FORBIDDEN, \"You are not authorized to use this service\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/433/buggy-version/src.main.java.org.linagora.linshare.core.facade.webservice.admin.impl.AdminGenericFacadeImpl.java", "BodyUseAPI": [], "Fixed commit": "97cfd899e496ddddc474cca3533dd3cf8a981097", "Url": "https://api.github.com/repos/linagora/linshare-core", "Date": "2015-01-26T14:25:42Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((countsMoves) == 9) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7353/buggy-version/src.game.Board.java", "BodyUseAPI": [], "Fixed commit": "3d737a7f417f8b57545dfbd3af4f11d7e2b3ac16", "Url": "https://api.github.com/repos/dergachovda/TicTacToe", "Date": "2016-05-31T12:36:01Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.organization.DomainTable.truncate(row.theTimeStamp,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((valueTimeStamp == null) || ((valueTimeStamp.length()) == 0)) { valueTimeStamp = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4884/buggy-version/lib-core.src.main.java.com.stratelia.webactiv.organization.DomainTable.java", "BodyUseAPI": [], "Fixed commit": "7904a8e9196a6b6f7870a9b301937e28fd516fc8", "Url": "https://api.github.com/repos/CecileBONIN/Silverpeas-Core", "Date": "2015-03-25T10:41:03Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.organization.DomainTable.truncate(row.theTimeStamp,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((valueTimeStamp == null) || ((valueTimeStamp.length()) == 0)) { valueTimeStamp = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4884/buggy-version/lib-core.src.main.java.com.stratelia.webactiv.organization.DomainTable.java", "BodyUseAPI": [], "Fixed commit": "7904a8e9196a6b6f7870a9b301937e28fd516fc8", "Url": "https://api.github.com/repos/CecileBONIN/Silverpeas-Core", "Date": "2015-03-25T10:41:03Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<nachos.threads.PriorityScheduler.PriorityQueue>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((holdQueue.waitThreadsSet.isEmpty()) == false) maxPriority = holdQueue.waitThreadsSet.last().effectivePriority;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/212/buggy-version/threads.PriorityScheduler.java", "BodyUseAPI": ["java.util.TreeSet<nachos.threads.PriorityScheduler.ThreadState>.last()"], "Fixed commit": "f20f22c76c0f7760bfaedc77ee18ee3498a315fb", "Url": "https://api.github.com/repos/wcw987321/Nachos", "Date": "2017-04-30T09:41:27Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.aksw.simba.lemming.algo.expression.Expression.getConstantValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (valueAsInt == value) { return new cc.redberry.core.number.Complex(valueAsInt); }else { return new cc.redberry.core.number.Complex(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/635/buggy-version/src.main.java.org.aksw.simba.lemming.algo.refinement.redberry.RedberryBasedFactory.java", "BodyUseAPI": [], "Fixed commit": "2b260c9b5976480653d6d7980318df20355c81dd", "Url": "https://api.github.com/repos/dice-group/Lemming", "Date": "2016-03-23T14:56:56Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentToken.getKind()) == (RETURN)) { if (isFunction) { l_s.add(parseFunctionReturn()); }else { l_s.add(parseSubprogramReturn()); } }else { l_s.add(parseStatement()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4343/buggy-version/src.poli.comp.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "dd66f62eaa2f985004d9319591b76093fd4f3566", "Url": "https://api.github.com/repos/ferrgo/fortran", "Date": "2016-11-06T02:45:45Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stt instanceof poli.comp.checker.ASTSubprogramReturnStatement) { returnFlag = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4343/buggy-version/src.poli.comp.checker.Checker.java", "BodyUseAPI": [], "Fixed commit": "dd66f62eaa2f985004d9319591b76093fd4f3566", "Url": "https://api.github.com/repos/ferrgo/fortran", "Date": "2016-11-06T02:45:45Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!returnFlag) { throw new poli.comp.checker.SemanticException(((\"Function \" + (functionName.getSpelling())) + \" has no return statement!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4343/buggy-version/src.poli.comp.checker.Checker.java", "BodyUseAPI": [], "Fixed commit": "dd66f62eaa2f985004d9319591b76093fd4f3566", "Url": "https://api.github.com/repos/ferrgo/fortran", "Date": "2016-11-06T02:45:45Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stt instanceof poli.comp.checker.ASTFunctionReturnStatement) { returnFlag = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4343/buggy-version/src.poli.comp.checker.Checker.java", "BodyUseAPI": [], "Fixed commit": "dd66f62eaa2f985004d9319591b76093fd4f3566", "Url": "https://api.github.com/repos/ferrgo/fortran", "Date": "2016-11-06T02:45:45Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!returnFlag) { throw new poli.comp.checker.SemanticException(((\"Subprogram \" + (subprogramName.getSpelling())) + \" has no return statement!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4343/buggy-version/src.poli.comp.checker.Checker.java", "BodyUseAPI": [], "Fixed commit": "dd66f62eaa2f985004d9319591b76093fd4f3566", "Url": "https://api.github.com/repos/ferrgo/fortran", "Date": "2016-11-06T02:45:45Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (inputStream != null) { properties.load(inputStream); version = properties.getProperty(\"version\"); inputStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5032/buggy-version/microsoft-azure-api.src.main.java.com.microsoft.windowsazure.services.core.UserAgentFilter.java", "BodyUseAPI": ["java.util.Properties.load(java.io.InputStream)", "java.io.InputStream.close()"], "Fixed commit": "12e254dbec7fc20c743e1766b5f54673bb9350e2", "Url": "https://api.github.com/repos/WindowsAzure/azure-sdk-for-java", "Date": "2013-02-13T02:16:12Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mUsbSerial.isOpen()) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6979/buggy-version/app.src.main.java.com.bomeans.irreader.BomeansUSBDongle.java", "BodyUseAPI": [], "Fixed commit": "89278636270c754989dcbe6400f5cc9b2ac30860", "Url": "https://api.github.com/repos/bomeans/bomeans_sdk_ir_learning_demo_android", "Date": "2017-01-19T20:03:28Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lsjwzh.widget.text.FastTextView.getTruncateAt()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((truncateAt != null) && (text instanceof android.text.Spanned)) { android.text.EllipsisSpannedContainer ellipsisSpanned = new android.text.EllipsisSpannedContainer(((android.text.Spanned) (text))); layoutBuilder.setText(ellipsisSpanned); android.text.StaticLayout staticLayout = layoutBuilder.build(); int lineCount = staticLayout.getLineCount(); if (lineCount > 0) { if (truncateAt == (TextUtils.TruncateAt.END)) { int ellipsisCount = staticLayout.getEllipsisCount((lineCount - 1)); ellipsisSpanned.setEllipsisSpan(ellipsisCount, (ellipsisCount + 1)); }else { int ellipsisStart = staticLayout.getEllipsisStart((lineCount - 1)); ellipsisSpanned.setEllipsisSpan(ellipsisStart, (ellipsisStart + 1)); } } return staticLayout; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2895/buggy-version/widget.FastTextView.src.main.java.com.lsjwzh.widget.text.FastTextView.java", "BodyUseAPI": [], "Fixed commit": "afcaca385953fcc61fde5521fae330d0f75c1bd1", "Url": "https://api.github.com/repos/lsjwzh/FastTextView", "Date": "2017-10-31T07:17:02Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isCurrentTaskListFragment())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2705/buggy-version/astrid.src.com.todoroo.astrid.activity.TaskListFragment.java", "BodyUseAPI": [], "Fixed commit": "661ccf5696b24ae7c73ef6a69dd697706788ad1a", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2012-03-01T20:54:42Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (back2 != null) flist.add(back2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8242/buggy-version/core.src.main.java.uk.ac.uea.cmp.spectre.core.util.ProjectProperties.java", "BodyUseAPI": ["java.util.List<java.io.File>.add(java.io.File)"], "Fixed commit": "e68b505252238f98971e98c4382fe4f153ab8f98", "Url": "https://api.github.com/repos/maplesond/spectre", "Date": "2017-10-01T14:06:32Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(properties.containsKey(\"token\"))) { throw new java.lang.IllegalArgumentException((\"Enter token as argument or include it into \" + (bootstrap.Main.CONFIG_FILE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4966/buggy-version/maven.musicbot.src.main.java.bootstrap.Main.java", "BodyUseAPI": [], "Fixed commit": "ed06fbd63c8eda24d85f7ddfb708715a1de4c972", "Url": "https://api.github.com/repos/quanticc/Discord4J-samples", "Date": "2016-06-23T18:52:34Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentNode.p.equals(p)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1290/buggy-version/java.KdTrees.src.KdTree.java", "BodyUseAPI": [], "Fixed commit": "3cb4c432b2810ff6381096dd48e024de0ed5c68c", "Url": "https://api.github.com/repos/linuxchata/algorithms-part1", "Date": "2017-01-24T22:06:16Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.isEmpty()) { result.add(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3885/buggy-version/plugin.jreframeworker.src.jreframeworker.core.IncrementalBuilder.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.add(int)"], "Fixed commit": "cf0e016c89e7b8915e205f959f89c0d5aac602d1", "Url": "https://api.github.com/repos/JReFrameworker/JReFrameworker", "Date": "2017-09-09T19:53:57Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((source.getDelta()) == (jreframeworker.core.IncrementalBuilder.DeltaSource.Delta.REMOVED)) { if (!(source.getSortedPhases().isEmpty())) { currentPhase = source.getSortedPhases().get(0); if ((currentPhase) == 1) { } } break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3885/buggy-version/plugin.jreframeworker.src.jreframeworker.core.IncrementalBuilder.java", "BodyUseAPI": ["jreframeworker.core.IncrementalBuilder.DeltaSource.getSortedPhases()", "jreframeworker.core.IncrementalBuilder.DeltaSource.getSortedPhases()", "java.util.List<java.lang.Integer>.isEmpty()", "java.util.List<java.lang.Integer>.get(int)"], "Fixed commit": "cf0e016c89e7b8915e205f959f89c0d5aac602d1", "Url": "https://api.github.com/repos/JReFrameworker/JReFrameworker", "Date": "2017-09-09T19:53:57Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Maps.newHashMap()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (result.containsKey(p.getFirst())) { if ((result.get(p.getFirst())) > (p.getSecond())) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3756/buggy-version/core-metadata.src.main.java.org.apache.kylin.dimension.DimensionEncodingFactory.java", "BodyUseAPI": ["org.apache.kylin.common.util.Pair<java.lang.String, java.lang.Integer>.getFirst()", "java.util.Map<java.lang.String, java.lang.Integer>.get(p.getFirst())", "org.apache.kylin.common.util.Pair<java.lang.String, java.lang.Integer>.getSecond()"], "Fixed commit": "d87b7a51282ffb2e678af65c20b5a395a2347d49", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2016-11-17T08:46:59Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (end < 0) { end = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6860/buggy-version/app.src.main.java.com.project.tangyifeng.ex_recyclerview.EX_ChatListView.java", "BodyUseAPI": [], "Fixed commit": "11e7ad0d6a3679181b7e5b25c5fad089d1e3c70d", "Url": "https://api.github.com/repos/AlexanderInHUST/EX_Recyclerview", "Date": "2017-01-15T11:08:16Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cpw.mods.fml.common.FMLCommonHandler.instance().getEffectiveSide()) == (cpw.mods.fml.relauncher.Side.CLIENT)) { return net.minecraft.client.Minecraft.getMinecraft().theWorld; }else { return net.minecraft.server.MinecraftServer.getServer().worldServerForDimension(this.dimensionID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5182/buggy-version/src.main.java.dmillerw.remoteio.lib.DimensionalCoords.java", "BodyUseAPI": [], "Fixed commit": "caecb1cfdd11353bd1f4f538f8683b86c90aa0ab", "Url": "https://api.github.com/repos/dmillerw/RemoteIO", "Date": "2014-09-18T18:24:48Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.kylin.storage.tuple.TupleInfo.getDataType(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((\"integer\".equals(dataType)) && (!(fieldValue instanceof java.lang.Integer))) { fieldValue = ((java.lang.Number) (fieldValue)).intValue(); }else if ((\"float\".equals(dataType)) && (fieldValue instanceof java.math.BigDecimal)) { fieldValue = ((java.math.BigDecimal) (fieldValue)).floatValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5668/buggy-version/storage.src.main.java.org.apache.kylin.storage.tuple.Tuple.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "098a7e6881366abad6c984b945c37c96647088dc", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2015-03-13T18:24:29Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sabloValue instanceof java.lang.String) { if (((java.lang.String) (sabloValue)).toLowerCase().startsWith(MediaURLStreamHandler.MEDIA_URL_DEF)) { java.lang.String url = MediaPropertyType.INSTANCE.getMediaUrl(sabloValue, ((com.servoy.j2db.server.ngclient.WebFormComponent) (dataConverterContext.getWebObject())).getDataConverterContext().getApplication().getFlattenedSolution(), null); MediaPropertyType.INSTANCE.toJSON(writer, key, new com.servoy.j2db.server.ngclient.property.types.MediaPropertyType.MediaWrapper(sabloValue, url), clientConversion, dataConverterContext); }else if (java.lang.Boolean.TRUE.equals(dataConverterContext.getPropertyDescription().getConfig())) { HTMLStringPropertyType.INSTANCE.toJSON(writer, null, ((java.lang.String) (sabloValue)), clientConversion, new org.sablo.specification.property.DataConverterContext(com.servoy.j2db.server.ngclient.utils.NGUtils.TEXT_PARSEHTML_DATAPROVIDER_CACHED_PD, dataConverterContext.getWebObject())); }else { HTMLStringPropertyType.INSTANCE.toJSON(writer, null, ((java.lang.String) (sabloValue)), clientConversion, new org.sablo.specification.property.DataConverterContext(com.servoy.j2db.server.ngclient.utils.NGUtils.TEXT_NO_PARSEHTML_DATAPROVIDER_CACHED_PD, dataConverterContext.getWebObject())); } }else { writer.value(sabloValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8502/buggy-version/servoy_ngclient.src.com.servoy.j2db.server.ngclient.property.types.MediaDataproviderPropertyType.java", "BodyUseAPI": ["org.json.JSONWriter.value(java.lang.Object)", "MediaPropertyType.INSTANCE.getMediaUrl(java.lang.Object,((com.servoy.j2db.server.ngclient.WebFormComponent) (dataConverterContext.getWebObject())).getDataConverterContext().getApplication().getFlattenedSolution(),<nulltype>)", "MediaPropertyType.INSTANCE.toJSON(org.json.JSONWriter,java.lang.String,com.servoy.j2db.server.ngclient.property.types.MediaPropertyType.MediaWrapper,org.sablo.websocket.utils.DataConversion,org.sablo.specification.property.IDataConverterContext)"], "Fixed commit": "89ee8a13c9d02b3e2434ae794189f7a84d179374", "Url": "https://api.github.com/repos/Servoy/servoy-client", "Date": "2015-05-29T13:13:55Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.util.List<org.modelcc.language.factory.MemberNode>>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (current.isEmpty()) combinations.add(new java.util.ArrayList<org.modelcc.language.factory.MemberNode>());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2323/buggy-version/ModelCC.src.org.modelcc.language.factory.LanguageSpecificationFactory.java", "BodyUseAPI": [], "Fixed commit": "3fee618091b6ed15a7dcd8d1919878a9e7f621ac", "Url": "https://api.github.com/repos/lquesada/ModelCC", "Date": "2013-07-14T11:52:41Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (conversation != null) { final java.util.List<cn.jpush.im.android.api.model.Message> messageList = conversation.getAllMessage(); for (cn.jpush.im.android.api.model.Message message : messageList) { if ((message.getContentType()) == (cn.jpush.im.android.api.enums.ContentType.text)) { final java.lang.String userName = message.getFromUser().getUserName(); if (isInGroup(userName)) { final cn.jpush.im.android.api.content.MessageContent messageContent = message.getContent(); messageMap.get(userName).add(messageContent); messageMap.put(userName, messageMap.get(userName)); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/9175/buggy-version/app.src.main.java.cn.zjnu.matcha.fragments.group.member.GroupMemberRankFragment.java", "BodyUseAPI": ["cn.jpush.im.android.api.model.Conversation.getAllMessage()"], "Fixed commit": "d333f0e3ddcf9bdcdde98211fa717ff5baf3acaa", "Url": "https://api.github.com/repos/Marsor707/Matcha", "Date": "2017-11-23T07:14:40Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(txtUserName.getText().contains(\" \"))) { if (txtUserName.isVisible()) { setErrorMessage(org.ednovo.gooru.client.mvp.settings.GL0475); } }else if (txtUserName.getText().contains(\" \")) { setErrorMessage(org.ednovo.gooru.client.mvp.settings.GL1635); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8718/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.settings.UserSettingsView.java", "BodyUseAPI": ["com.google.gwt.user.client.ui.TextBox.isVisible()", "com.google.gwt.user.client.ui.TextBox.getText()", "txtUserName.getText().contains(java.lang.String)"], "Fixed commit": "304578c9a6069a3fbeebfc0e5b0fe7e3cdc48994", "Url": "https://api.github.com/repos/nutan-gooru/Gooru-Web", "Date": "2014-05-19T12:04:01Z"},
{"Line": "=>1003", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["txtChooseUsername.getText().matches(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!userNameValidate) { userNameValidUc.addStyleName(res.css().errorLbl()); if (!(txtChooseUsername.getText().contains(\" \"))) { if (txtChooseUsername.isVisible()) { userNameValidUc.setText(org.ednovo.gooru.client.mvp.authentication.uc.GL0475); } }else if (txtChooseUsername.getText().contains(\" \")) { userNameValidUc.setText(org.ednovo.gooru.client.mvp.authentication.uc.GL1635); } userNameValidUc.setVisible(true); isValidUserName = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8718/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.authentication.uc.CreateAccountUc.java", "BodyUseAPI": [], "Fixed commit": "304578c9a6069a3fbeebfc0e5b0fe7e3cdc48994", "Url": "https://api.github.com/repos/nutan-gooru/Gooru-Web", "Date": "2014-05-19T12:04:01Z"},
{"Line": "=>1086", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(userName.contains(\" \"))) { txtChooseUsername.addStyleName(res.css().errorMsgDisplay()); userNameValidUc.addStyleName(res.css().errorLbl()); userNameValidUc.setText(org.ednovo.gooru.client.mvp.authentication.uc.GL0444); userNameValidUc.setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8718/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.authentication.uc.CreateAccountUc.java", "BodyUseAPI": [], "Fixed commit": "304578c9a6069a3fbeebfc0e5b0fe7e3cdc48994", "Url": "https://api.github.com/repos/nutan-gooru/Gooru-Web", "Date": "2014-05-19T12:04:01Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (next != null) { corners = next.getSides(); for (int i = 0; i < 2; i++) { next = corners[i]; if (((next != null) && ((next.getFile()) != (startSquare.getFile()))) && (next.hasPiece())) { com.petrifiednightmares.singularityChess.pieces.AbstractPiece obstructingPiece = next.getPiece(); if ((obstructingPiece.isWhite()) != isWhite) { moves.add(next); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1329/buggy-version/src.com.petrifiednightmares.singularityChess.logic.Board.java", "BodyUseAPI": ["com.petrifiednightmares.singularityChess.logic.Square.getSides()"], "Fixed commit": "0174166f2552d7e355dada4e007428e810e8452e", "Url": "https://api.github.com/repos/razorstorm/SingularityChess", "Date": "2012-12-11T15:36:58Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (wherePos >= 0) { where = sql.substring(wherePos); lowerSQL = lowerSQL.substring(0, wherePos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1026/buggy-version/ses-web.src.main.java.com.ai.paas.ipaas.ses.dataimport.util.SqlUtil.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.substring(int,int)"], "Fixed commit": "38aa238e5175e78c0faaad720180aa937c79e439", "Url": "https://api.github.com/repos/AIPaaS/service-sdk-ses", "Date": "2016-11-07T10:24:27Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menu) != null) { android.view.MenuItem search = menu.findItem(R.id.search_friend); android.support.v4.view.MenuItemCompat.setShowAsAction(search, MenuItem.SHOW_AS_ACTION_NEVER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4559/buggy-version/app.src.main.java.im.tox.antox.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2320c1d5af64ca815030a0f4314d87956a1657a6", "Url": "https://api.github.com/repos/aBothe/Antox", "Date": "2014-05-18T12:57:31Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menu) != null) { android.view.MenuItem af = menu.findItem(R.id.add_friend); android.support.v4.view.MenuItemCompat.setShowAsAction(af, MenuItem.SHOW_AS_ACTION_NEVER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4559/buggy-version/app.src.main.java.im.tox.antox.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2320c1d5af64ca815030a0f4314d87956a1657a6", "Url": "https://api.github.com/repos/aBothe/Antox", "Date": "2014-05-18T12:57:31Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (width < height) { width = ((int) (bounds.width())); height = ((int) (bounds.height())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5339/buggy-version/backends.gdx-backend-robovm.src.com.badlogic.gdx.backends.iosrobovm.IOSApplication.java", "BodyUseAPI": [], "Fixed commit": "4a26ed3287adeeed4b5f5fe69644b51210569da5", "Url": "https://api.github.com/repos/Tom-Ski/libgdx", "Date": "2014-09-24T12:45:06Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dbFile) != null) dbFile.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2870/buggy-version/src.main.java.org.agilewiki.jfile.transactions.db.inMemory.IMDB.java", "BodyUseAPI": [], "Fixed commit": "3e92906d885bfb28885c96792ad95d02615cf3c2", "Url": "https://api.github.com/repos/laforge49/JFile", "Date": "2012-12-14T11:58:28Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Integer.MAX_VALUE) == endCommentMarkIndex) { return sql; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8573/buggy-version/src.main.java.com.microsoft.sqlserver.jdbc.SQLServerParameterMetaData.java", "BodyUseAPI": [], "Fixed commit": "195b9af6e4cb4928627a2feb4e5def2ddc91b622", "Url": "https://api.github.com/repos/v-PATHngs/mssql-jdbc-PATHngs", "Date": "2017-06-19T20:47:20Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((preferences.getLaserCutterTags()) == null) || ((preferences.getSupportedExtensions()) == null)) { this.generateThingiverseDefault(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2226/buggy-version/src.com.t_oster.visicut.managers.PreferencesManager.java", "BodyUseAPI": [], "Fixed commit": "fcc3cb12191c53c6b4a139299831bd98ef0cd876", "Url": "https://api.github.com/repos/tur0kk/VisiCut", "Date": "2015-02-02T12:17:08Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.poi.xssf.usermodel.XSSFSheet.getRow(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (row == null) { row = currentMonthWorkSheet.createRow(rownum); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1705/buggy-version/src.main.java.ch.bharanya.receipt_parser.export.excel.ExcelExporter.java", "BodyUseAPI": [], "Fixed commit": "f5f4d82fddb95a53759f1e928c6100f75c750947", "Url": "https://api.github.com/repos/mbharanya/Receipt-Parser", "Date": "2017-01-04T11:30:27Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((team) == 2) btnReady.setEnabled(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8747/buggy-version/src.rpgsvg.SelectGUI.java", "BodyUseAPI": [], "Fixed commit": "dea815c4b78004bb110051a679d317999c9d6a2b", "Url": "https://api.github.com/repos/jgrayson676/RPG-SVG", "Date": "2014-01-17T02:41:31Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jobStatus.get(position).contains(\"Cancelled\")) { jobStatusText.setBackgroundColor(R.color.red); }else if ((jobStatus.get(position).contains(\"Ranking Completed\")) || (jobStatus.get(position).contains(\"Offer\"))) { jobStatusText.setBackgroundColor(R.color.green); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/9147/buggy-version/src.com.someguy.jobmine.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.get(int)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "c62227b3055efe3f1967a6656d8516ea59c3a442", "Url": "https://api.github.com/repos/cfayoux/Jobmine-Android", "Date": "2012-05-25T16:42:15Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["femr.ui.controllers.PrescriptionItem.getMedicationForm()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((medicationForm == null) || (medicationForm.equals(\"\"))) { medicationForm = \"N/A\"; }else { medicationForm = medicationForm.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7492/buggy-version/app.femr.ui.controllers.PDFController.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "d5beaf98724cb921970065995fb98438fb9976eb", "Url": "https://api.github.com/repos/gerrytucker78/femr", "Date": "2016-10-11T01:05:03Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.inaetics.dronessimulator.gameengine.gamestatemanager.IGameStateManager.getById(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (e != null) { if (e instanceof org.inaetics.dronessimulator.gameengine.common.state.HealthGameEntity) { org.inaetics.dronessimulator.gameengine.common.state.HealthGameEntity healthGameEntity = ((org.inaetics.dronessimulator.gameengine.common.state.HealthGameEntity) (e)); healthGameEntity.damage(damage); }else { org.apache.log4j.Logger.getLogger(org.inaetics.dronessimulator.gameengine.physicsenginedriver.PhysicsEngineDriver.class).error((((\"Tried to damage an entity without hp! Got: \" + entityId) + \" \") + e)); } }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8675/buggy-version/implementation.gameengine.physicsenginedriver.src.main.java.org.inaetics.dronessimulator.gameengine.physicsenginedriver.PhysicsEngineDriver.java", "BodyUseAPI": ["org.apache.log4j.Logger.getLogger(org.inaetics.dronessimulator.gameengine.physicsenginedriver.PhysicsEngineDriver.class).error((((\"Tried to damage an entity without hp! Got: \" + entityId) + \" \") + e))"], "Fixed commit": "3345d50ef7ac359d00c284b9e112b63f466c3385", "Url": "https://api.github.com/repos/INAETICS/Drones-Simulator", "Date": "2017-05-28T16:42:59Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lib.JavaMail.Folder.getMessageCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (count < num) num = count;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6369/buggy-version/src.lib.JavaMail.JavaMail.java", "BodyUseAPI": [], "Fixed commit": "bf9ef7fd34c17dba09e8894346936a2c012dbf3e", "Url": "https://api.github.com/repos/german-b/CheckMyMail", "Date": "2016-01-30T06:46:35Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.gebatzens.ggvertretungsplan.provider.GGProvider.openConnection(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((con.getResponseCode()) == 401) { logout(true, true); throw new de.gebatzens.ggvertretungsplan.VPLoginException(); }else if ((con.getResponseCode()) == 419) { startNewSession(prefs.getString(\"token\", null)); if ((session) == null) { throw new de.gebatzens.ggvertretungsplan.VPLoginException(); }else { return getExams(); } }else if ((con.getResponseCode()) == 200) { org.xmlpull.v1.XmlPullParser parser = android.util.Xml.newPullParser(); parser.setFeature(XmlPullParser.FEATURE_PROCESS_NAMESPACES, false); parser.setInput(new java.io.BufferedReader(new java.io.InputStreamReader(con.getInputStream()))); parser.nextTag(); parser.require(XmlPullParser.START_TAG, null, \"examplan\"); while ((parser.next()) != (org.xmlpull.v1.XmlPullParser.END_TAG)) { if ((parser.getEventType()) != (org.xmlpull.v1.XmlPullParser.START_TAG)) continue; java.lang.String name = parser.getName(); if (name.equals(\"item\")) { de.gebatzens.ggvertretungsplan.data.Exams.ExamItem s = new de.gebatzens.ggvertretungsplan.data.Exams.ExamItem(); exams.add(s); while ((parser.next()) != (org.xmlpull.v1.XmlPullParser.END_TAG)) { if ((parser.getEventType()) != (org.xmlpull.v1.XmlPullParser.START_TAG)) continue; if (parser.getName().equals(\"id\")) s.id = parser.nextText(); else if (parser.getName().equals(\"date\")) s.date = parser.nextText(); else if (parser.getName().equals(\"schoolclass\")) s.schoolclass = parser.nextText(); else if (parser.getName().equals(\"lesson\")) s.lesson = parser.nextText(); else if (parser.getName().equals(\"length\")) s.length = parser.nextText(); else if (parser.getName().equals(\"subject\")) s.subject = parser.nextText(); else if (parser.getName().equals(\"teacher\")) s.teacher = parser.nextText(); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/9158/buggy-version/app.src.main.java.de.gebatzens.ggvertretungsplan.provider.GGProvider.java", "BodyUseAPI": ["org.xmlpull.v1.XmlPullParser.setInput(java.io.BufferedReader)", "javax.net.ssl.HttpsURLConnection.getResponseCode()", "javax.net.ssl.HttpsURLConnection.getInputStream()", "javax.net.ssl.HttpsURLConnection.getResponseCode()"], "Fixed commit": "a93da2f2171fb3864c547ce6d3d2829ef71ae7d1", "Url": "https://api.github.com/repos/Cedgetec/SchulinfoApp-android", "Date": "2015-03-10T18:11:43Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(compressor.enabled())) compressor.start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2846/buggy-version/src.com.team2502.robot2013.subsystems.Storage.java", "BodyUseAPI": [], "Fixed commit": "39048f32ac70a6f874831f61bb516775bdcc8559", "Url": "https://api.github.com/repos/Team-2502/RobotCode2013", "Date": "2013-02-15T21:28:29Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shooter.isShooterRunning()) storage.pushFrisbee();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2846/buggy-version/src.com.team2502.robot2013.commands.storage.PushFrisbeeOut.java", "BodyUseAPI": [], "Fixed commit": "39048f32ac70a6f874831f61bb516775bdcc8559", "Url": "https://api.github.com/repos/Team-2502/RobotCode2013", "Date": "2013-02-15T21:28:29Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pubnub) != null) { this.pubnub.unsubscribeAll(); this.pubnub.destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4153/buggy-version/addons.binding.org.openhab.binding.wink.src.main.java.org.openhab.binding.wink.handler.WinkBaseThingHandler.java", "BodyUseAPI": [], "Fixed commit": "68e972a293d73355d27638fc69b50e3e4c3ce0b0", "Url": "https://api.github.com/repos/shawncrosby/openhab2-addons", "Date": "2017-12-27T21:08:43Z"},
{"Line": "=>1089", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((iRecordId.indexOf(':')) > (-1)) rid = new com.orientechnologies.orient.core.id.ORecordId(iRecordId); else { com.orientechnologies.orient.core.db.record.OIdentifiable rec = setCurrentRecord(java.lang.Integer.parseInt(iRecordId)); if (rec != null) rid = ((com.orientechnologies.orient.core.id.ORecordId) (rec.getIdentity())); else return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1267/buggy-version/tools.src.main.java.com.orientechnologies.orient.console.OConsoleDatabaseApp.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "com.orientechnologies.orient.console.OConsoleDatabaseApp.setCurrentRecord(int)"], "Fixed commit": "6038354f45e5700ee6a5fac9168ce6a22b6fa425", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-03-04T07:33:03Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result < 0) { }else if (result == 0) { }else { for (int index = start; index <= finish; index++) { result *= index; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7361/buggy-version/Chapter_001.src.main.java.dkalymbaev.factorial.Factorial.java", "BodyUseAPI": [], "Fixed commit": "7ee1af95ae875986a11335c953bcebc25a5c48e3", "Url": "https://api.github.com/repos/Damir2805/java-a-to-z", "Date": "2017-01-03T20:43:41Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((restServer) != null) { restServer.setDcepManagement(((eu.play_project.dcep.api.DcepManagmentApi) (serverItf))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7491/buggy-version/play-platformservices.src.main.java.eu.play_project.play_platformservices.PlayPlatformservices.java", "BodyUseAPI": [], "Fixed commit": "56dc3e678984c190efc83c10db6a1f9c00197572", "Url": "https://api.github.com/repos/play-project/play-dcep", "Date": "2013-03-07T15:13:18Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selectedDimIndices.length) != 0) { net.imglib2.ops.operation.SubsetOperations.iterate(net.imglib2.ops.operation.ImgOperations.wrapII(operation, outType), selectedDimIndices, in, res, org.knime.knip.base.node.IterableIntervalsNodeModel.getExecutorService()); }else { net.imglib2.ops.operation.ImgOperations.wrapII(operation, outType).compute(in, res); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/9060/buggy-version/org.knime.knip.base.src.org.knime.knip.base.node.IterableIntervalsNodeModel.java", "BodyUseAPI": ["net.imglib2.ops.operation.SubsetOperations.iterate(net.imglib2.ops.operation.ImgOperations.wrapII(operation, outType),int[],net.imglib2.meta.ImgPlus<T>,net.imglib2.meta.ImgPlus<V>,org.knime.knip.base.node.IterableIntervalsNodeModel.getExecutorService())"], "Fixed commit": "fccf8d9da81c8f137b77711835da554cf6daccc1", "Url": "https://api.github.com/repos/knime-ip/knip", "Date": "2013-12-05T16:29:23Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeOfGroupMap.get(entry)) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1318/buggy-version/app.src.main.java.local.quidstats.video.VideoStatsActivity.java", "BodyUseAPI": [], "Fixed commit": "86a1f5c15fae687e3ba0b5850252cbc1a603721c", "Url": "https://api.github.com/repos/BTA02/StatTaker_Repo", "Date": "2015-07-05T05:39:51Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (language == null) return defaultLanguage;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8595/buggy-version/src.main.java.de.st_ddt.crazyutil.locales.CrazyLocale.java", "BodyUseAPI": [], "Fixed commit": "f146fb285cf5a85cdc06082587c4e28761bba2ef", "Url": "https://api.github.com/repos/ST-DDT/CrazyAPI", "Date": "2014-05-02T19:50:51Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getStringExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((response != null) && (response.contains(\"phoneNumber\"))) { android.content.SharedPreferences.Editor prefsEditor = prefs.edit(); prefsEditor.putBoolean(\"isRegistered\", false); prefsEditor.apply(); contentTextView.setText(response); contentTextView.setTextColor(Color.RED); }else if ((response != null) && (response.contains(\"userName\"))) { android.content.SharedPreferences.Editor prefsEditor = prefs.edit(); prefsEditor.putBoolean(\"isRegistered\", false); prefsEditor.apply(); contentTextView.setText(response); contentTextView.setTextColor(Color.RED); }else { contentTextView.setText(\"Couldn't connect to server. Please try again later.\"); contentTextView.setTextColor(Color.RED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6841/buggy-version/app.src.main.java.com.example.android.project1.Registration.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "c593a1fc8ef8850a09f27a86918bce9a57d201ec", "Url": "https://api.github.com/repos/joeyoggie/Project1", "Date": "2016-06-21T01:28:54Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (panda.lang.Strings.isEmpty(escape)) { return value.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2332/buggy-version/panda-gear.src.main.java.panda.mvc.view.tag.Escapes.java", "BodyUseAPI": [], "Fixed commit": "5356bf9e8e091d6bbaeb610a54a8c240326307fe", "Url": "https://api.github.com/repos/pandafw/panda", "Date": "2017-03-13T05:28:02Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang.StringUtils.substringAfter(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tempUrl == null) { tempUrl = org.apache.commons.lang.StringUtils.substringAfter(this.about, \"/aggregation/europeana/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2885/buggy-version/corelib-storage.src.main.java.eu.europeana.corelib.solr.entity.EuropeanaAggregationImpl.java", "BodyUseAPI": [], "Fixed commit": "5ae959b45271185d426cacde660e3d05cea63611", "Url": "https://api.github.com/repos/europeana/corelib", "Date": "2015-11-11T12:52:56Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["htsjdk.samtools.InputResource.asFile()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((sourceFile == null) || (!(sourceFile.isFile()))) { if (indexFile != null) { primitiveSamReader = new htsjdk.samtools.BAMFileReader(bufferedStream, indexFile, false, asynchronousIO, validationStringency, this.samRecordFactory); }else { final htsjdk.samtools.seekablestream.SeekableStream indexSeekable = (indexMaybe == null) ? null : indexMaybe.asUnbufferedSeekableStream(); htsjdk.samtools.seekablestream.SeekableStream sourceSeekable = data.asUnbufferedSeekableStream(); if ((null != sourceSeekable) && (null != indexSeekable)) { sourceSeekable.seek(0); primitiveSamReader = new htsjdk.samtools.BAMFileReader(sourceSeekable, indexSeekable, false, asynchronousIO, validationStringency, this.samRecordFactory); }else { primitiveSamReader = new htsjdk.samtools.BAMFileReader(bufferedStream, indexFile, false, asynchronousIO, validationStringency, this.samRecordFactory); } } }else { bufferedStream.close(); primitiveSamReader = new htsjdk.samtools.BAMFileReader(sourceFile, indexFile, false, asynchronousIO, validationStringency, this.samRecordFactory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4518/buggy-version/src.main.java.htsjdk.samtools.SamReaderFactory.java", "BodyUseAPI": [], "Fixed commit": "d9d25a94885e444da973af3ca8edde6e40af495c", "Url": "https://api.github.com/repos/jean-philippe-martin/htsjdk", "Date": "2016-11-29T01:35:13Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lhs_t instanceof wyone.core.Type.List) && (rhs_t instanceof wyone.core.Type.List)) { wyone.core.Type.Collection ls = ((wyone.core.Type.Collection) (lhs_t)); wyone.core.Type.Collection rs = ((wyone.core.Type.Collection) (rhs_t)); if ((ls.unbounded()) || (rs.unbounded())) { result = wyone.core.Type.T_LIST(true, wyone.core.Type.T_OR(ls.element(), rs.element())); }else { result = wyone.core.Type.T_LIST(false, append(ls.elements(), rs.elements())); } }else if ((lhs_t instanceof wyone.core.Type.Bag) && (rhs_t instanceof wyone.core.Type.Bag)) { wyone.core.Type.Collection ls = ((wyone.core.Type.Collection) (lhs_t)); wyone.core.Type.Collection rs = ((wyone.core.Type.Collection) (rhs_t)); result = wyone.core.Type.T_BAG(((ls.unbounded()) || (rs.unbounded())), wyone.core.Type.T_OR(ls.element(), rs.element())); }else if ((lhs_t instanceof wyone.core.Type.Set) && (rhs_t instanceof wyone.core.Type.Set)) { wyone.core.Type.Collection ls = ((wyone.core.Type.Collection) (lhs_t)); wyone.core.Type.Collection rs = ((wyone.core.Type.Collection) (rhs_t)); result = wyone.core.Type.T_SET(((ls.unbounded()) || (rs.unbounded())), wyone.core.Type.T_OR(ls.element(), rs.element())); }else if ((lhs_t instanceof wyone.core.Type.Collection) && (rhs_t instanceof wyone.core.Type.Collection)) { result = wyone.core.Type.T_OR(lhs_t, rhs_t); }else if (rhs_t instanceof wyone.core.Type.List) { lhs_t = wyone.core.Type.box(lhs_t); wyone.core.Type.List rhs_tc = ((wyone.core.Type.List) (rhs_t)); result = wyone.core.Type.T_LIST(rhs_tc.unbounded(), append(lhs_t, rhs_tc.elements())); }else if (lhs_t instanceof wyone.core.Type.List) { wyone.core.Type.List lhs_tc = ((wyone.core.Type.List) (lhs_t)); rhs_t = wyone.core.Type.box(rhs_t); if (!(lhs_tc.unbounded())) { result = wyone.core.Type.T_LIST(lhs_tc.unbounded(), append(lhs_tc.elements(), rhs_t)); }else { wyone.core.Type[] lhs_elements = lhs_tc.elements(); int length = lhs_elements.length; wyone.core.Type[] nelements = java.util.Arrays.copyOf(lhs_elements, length); length--; nelements[length] = wyone.core.Type.T_OR(rhs_t, nelements[length]); result = wyone.core.Type.T_LIST(true, nelements); } }else if (lhs_t instanceof wyone.core.Type.Collection) { wyone.core.Type.Collection lhs_tc = ((wyone.core.Type.Collection) (lhs_t)); rhs_t = wyone.core.Type.box(rhs_t); wyone.core.Type.Collection rhs_tc = wyone.core.Type.T_COMPOUND(lhs_tc, false, rhs_t); result = wyone.core.Type.T_OR(lhs_tc, rhs_tc); }else if (rhs_t instanceof wyone.core.Type.Collection) { wyone.core.Type.Collection rhs_tc = ((wyone.core.Type.Collection) (rhs_t)); lhs_t = wyone.core.Type.box(lhs_t); wyone.core.Type.Collection lhs_tc = wyone.core.Type.T_COMPOUND(rhs_tc, false, lhs_t); result = wyone.core.Type.T_OR(lhs_tc, rhs_tc); }else { syntaxError(\"cannot append non-list types\", file, bop); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2911/buggy-version/modules.wyone.src.wyone.core.TypeInference.java", "BodyUseAPI": ["wyone.core.Type.box(wyone.core.Type)", "wyone.core.Type.box(wyone.core.Type)", "wyone.core.Type.T_OR(wyone.core.Type,wyone.core.Type)"], "Fixed commit": "9509cb62974469226c8c6d2f6ae20c472d66bd7f", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2012-11-20T01:34:54Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (alleleCounts.isEmpty()) { return new org.molgenis.genotype.util.MafResult(org.molgenis.genotype.Allele.ZERO, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1191/buggy-version/Genotype-IO.src.main.java.org.molgenis.genotype.util.MafCalculator.java", "BodyUseAPI": [], "Fixed commit": "72f8599f20217db33ca75b6dac561ef881639d01", "Url": "https://api.github.com/repos/Bonder-MJ/systemsgenetics", "Date": "2014-05-07T11:37:21Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (allele != (org.molgenis.genotype.Allele.ZERO)) { alleleCounts.put(allele, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1191/buggy-version/Genotype-IO.src.main.java.org.molgenis.genotype.util.MafCalculator.java", "BodyUseAPI": ["gnu.trove.map.hash.TObjectIntHashMap<org.molgenis.genotype.Allele>.put(org.molgenis.genotype.Allele,int)"], "Fixed commit": "72f8599f20217db33ca75b6dac561ef881639d01", "Url": "https://api.github.com/repos/Bonder-MJ/systemsgenetics", "Date": "2014-05-07T11:37:21Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (modelComment != null) { allComments.add(modelComment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1220/buggy-version/OWLTools-Solr.src.main.java.owltools.solrj.ModelAnnotationSolrDocumentLoader.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)"], "Fixed commit": "807d3c18e4556e689e48311e10fa42f2f3262e3a", "Url": "https://api.github.com/repos/owlcollab/owltools", "Date": "2015-08-28T00:03:35Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (shortBio.isEmpty()) { aboutMeRoot.setVisibility(View.GONE); }else { shortBioValue.setText(shortBio); aboutMeRoot.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/931/buggy-version/app.src.main.java.org.stepic.droid.ui.fragments.ProfileFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "7a2aef04cfb3f9f99ed1542add11f96f79cec147", "Url": "https://api.github.com/repos/StepicOrg/stepik-android", "Date": "2016-11-14T08:03:55Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.util.PsiTreeUtil.prevVisibleLeaf(com.intellij.psi.PsiElement)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((prevVisibleSibling == null) || (!((prevVisibleSibling.getParent()) instanceof org.ballerinalang.plugins.idea.psi.AnnotationAttachmentNode))) { addValueKeywords(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3437/buggy-version/src.main.java.org.ballerinalang.plugins.idea.completion.BallerinaKeywordsCompletionContributor.java", "BodyUseAPI": [], "Fixed commit": "2606cac4618abbed50f7262c383601635d02600d", "Url": "https://api.github.com/repos/ballerina-attic/plugin-intellij", "Date": "2017-07-24T06:01:22Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ranges.size()) > 0) { org.apache.accumulo.core.client.mapred.AccumuloInputFormat.setRanges(conf, ranges); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6561/buggy-version/cascading-accumulo.src.main.java.com.talk3.cascading.accumulo.AccumuloScheme.java", "BodyUseAPI": ["org.apache.accumulo.core.client.mapred.AccumuloInputFormat.setRanges(org.apache.hadoop.mapred.JobConf,java.util.List<org.apache.accumulo.core.data.Range>)"], "Fixed commit": "74a4b847374c0a457ba255eec344e4abcd288ad8", "Url": "https://api.github.com/repos/DarinJ/cascading.accumulo", "Date": "2016-04-06T03:16:32Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (origRow != null) io.undertow.util.SecureHashMap.sizeUpdater.getAndAdd(newTable, origRow.length);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1578/buggy-version/core.src.main.java.io.undertow.util.SecureHashMap.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.undertow.util.SecureHashMap.Table>.getAndAdd(io.undertow.util.SecureHashMap.Table<K, V>,int)"], "Fixed commit": "1e6988fb37a84cd8a08b1641c52370136eb13f87", "Url": "https://api.github.com/repos/stuartwdouglas/undertow", "Date": "2012-08-09T15:17:03Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hasAttribute) && (!(xPathFragment.hasAttribute))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5697/buggy-version/foundation.org.eclipse.persistence.core.src.org.eclipse.persistence.internal.oxm.XPathFragment.java", "BodyUseAPI": [], "Fixed commit": "1ff9d67b1a136c6370b180417e3002dfe80bae4f", "Url": "https://api.github.com/repos/sabineheider/eclipselink.runtime", "Date": "2013-03-01T18:39:14Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.Class<? extends android.app.Activity>>.indexOf(java.lang.Class<? extends de.htwg.seapal.aview.gui.activity.BaseDrawerActivity>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (index != (-1)) drawerListView.setItemChecked(index, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4549/buggy-version/SeapalAndroidApp.src.de.htwg.seapal.aview.gui.activity.BaseDrawerActivity.java", "BodyUseAPI": ["android.widget.ListView.setItemChecked(int,boolean)"], "Fixed commit": "09badecd4b9b784e63d6b6615d5e7d26a6f36c14", "Url": "https://api.github.com/repos/bestehle/SeapalAndroidApp", "Date": "2013-06-11T21:18:12Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mapItem.getPlaceArrayPosition()) >= (placePhotoReferences.size())) { bundle.putString(\"photoReference\", placePhotoReferences.get(((placePhotoReferences.size()) - 1))); }else { bundle.putString(\"photoReference\", placePhotoReferences.get(mapItem.getPlaceArrayPosition())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7005/buggy-version/app.src.main.java.com.example.admin123.citytour.Map.GmapFragment.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(mapItem.getPlaceArrayPosition())", "java.util.ArrayList<java.lang.String>.size()", "android.os.Bundle.putString(java.lang.String,java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)", "com.example.admin123.citytour.Map.MyItem.getPlaceArrayPosition()", "android.os.Bundle.putString(java.lang.String,java.lang.String)"], "Fixed commit": "c99400d251ed7a0e90039f8f529d223992685b5b", "Url": "https://api.github.com/repos/theomatthews95/CityTour", "Date": "2017-03-21T10:10:03Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((setCurrentGraphInThreadLocal()) != null) { if ((getLabel()) == null) return ((((((((com.tinkerpop.blueprints.util.StringFactory.E) + (com.tinkerpop.blueprints.util.StringFactory.L_BRACKET)) + (getId())) + (com.tinkerpop.blueprints.util.StringFactory.R_BRACKET)) + (com.tinkerpop.blueprints.util.StringFactory.L_BRACKET)) + (getVertex(Direction.OUT).getId())) + (com.tinkerpop.blueprints.util.StringFactory.ARROW)) + (getVertex(Direction.IN).getId())) + (com.tinkerpop.blueprints.util.StringFactory.R_BRACKET); return com.tinkerpop.blueprints.util.StringFactory.edgeString(this); }else return ((com.tinkerpop.blueprints.util.StringFactory.E) + (com.tinkerpop.blueprints.util.StringFactory.L_BRACKET)) + (getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3156/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientEdge.java", "BodyUseAPI": [], "Fixed commit": "f939e7961d6c84f1aa9c51e5c344a8aff39eb3c3", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-11-07T09:23:20Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.yamj.core.remote.service.GitHubServiceImpl.pushDate(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((org.apache.commons.lang3.StringUtils.isBlank(ghDate)) || (org.apache.commons.lang3.StringUtils.isBlank(buildDate))) { org.yamj.core.remote.service.GitHubServiceImpl.LOG.debug(\"Invalid (blank) date, check skipped\"); return java.lang.Boolean.TRUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8629/buggy-version/yamj3-core.src.main.java.org.yamj.core.remote.service.GitHubServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "0fe86e8092b035d30986d484e131f442b068c02e", "Url": "https://api.github.com/repos/YAMJ/yamj-v3", "Date": "2013-06-02T14:22:07Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value instanceof java.util.Map) && ((((java.util.Map) (value)).size()) == 0)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3394/buggy-version/src.main.java.com.alibaba.fastjson.util.TypeUtils.java", "BodyUseAPI": [], "Fixed commit": "9913d8669d7164b86e9d52afec5d3dd9d8df653e", "Url": "https://api.github.com/repos/GulajavaMinistudio/fastjson", "Date": "2017-04-25T05:37:20Z"},
{"Line": "=>874", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((results.contains(\"0\")) && ((results.size()) > 1)) { results.remove(\"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1059/buggy-version/seqware-pipeline.src.main.java.net.sourceforge.seqware.pipeline.workflow.BasicWorkflow.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.remove(java.lang.String)"], "Fixed commit": "d89afc878444934aa5c2f9a75fa07d888736cd0b", "Url": "https://api.github.com/repos/SeqWare/seqware", "Date": "2013-03-01T19:39:44Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (card.isCentre()) { if (card.isWest()) { checkGoalCard(board.getGridAtLocation((x - 1), y)); } if (card.isNorth()) { checkGoalCard(board.getGridAtLocation(x, (y - 1))); } if (card.isEast()) { checkGoalCard(board.getGridAtLocation((x + 1), y)); } if (card.isSouth()) { checkGoalCard(board.getGridAtLocation(x, (y + 1))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4891/buggy-version/src.controller.GameLogic.java", "BodyUseAPI": ["controller.PathCard.isEast()", "controller.PathCard.isSouth()", "controller.PathCard.isNorth()", "controller.PathCard.isWest()"], "Fixed commit": "98126d7b50f021d4b82bdc9470e137f3903b52ec", "Url": "https://api.github.com/repos/rmit-s3524228-KaKyen-Lam/OOSD-Ra-Men-A1", "Date": "2017-05-22T01:17:28Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"\".equals(userAction)) { manageFacilityBean.setUserAction(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5151/buggy-version/SkyPatrol.src.com.skypatrol.controller.ManageFacilityController.java", "BodyUseAPI": [], "Fixed commit": "21d9e57ffab29522b53947cc5ecfdf94aa12b853", "Url": "https://api.github.com/repos/dhanan85/SkyPatrol", "Date": "2017-08-07T11:31:27Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"\".equals(userAction)) { manageCheckpointBean.setUserAction(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5151/buggy-version/SkyPatrol.src.com.skypatrol.controller.ManageFacilityController.java", "BodyUseAPI": [], "Fixed commit": "21d9e57ffab29522b53947cc5ecfdf94aa12b853", "Url": "https://api.github.com/repos/dhanan85/SkyPatrol", "Date": "2017-08-07T11:31:27Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getContext()) == null) { setState(State.DONE); }else { if ((getContext().getContextType()) == (BSONContextType.JAVASCRIPT_WITH_SCOPE)) { backpatchSize(); setContext(getContext().getParentContext()); } setState(getNextState()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7521/buggy-version/bson.src.main.org.bson.BSONBinaryWriter.java", "BodyUseAPI": [], "Fixed commit": "171bba78702d1062d61a1f32e5b2aeafc74a0d56", "Url": "https://api.github.com/repos/jyemin/mongo-java-driver", "Date": "2014-05-29T18:47:13Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((metadataMap) != null) metadataMap.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7861/buggy-version/uk.ac.diamond.scisoft.analysis.src.uk.ac.diamond.scisoft.analysis.io.CSVLoader.java", "BodyUseAPI": [], "Fixed commit": "8b301c78fc394028c4f98299d0a2d05e006f06bc", "Url": "https://api.github.com/repos/DawnScience/scisoft-core", "Date": "2015-04-28T16:29:52Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (propertypath == null) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4267/buggy-version/src.main.java.org.commons.properties.DIProperties.java", "BodyUseAPI": [], "Fixed commit": "7a82534d1662c54998be7621c10f1510a2f4dd11", "Url": "https://api.github.com/repos/Lifestohack/Global-Commons", "Date": "2017-10-20T07:50:26Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position) != (-1)) { pager.setCurrentItem(position); position = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1391/buggy-version/app.src.main.java.org.animetwincities.animedetour.schedule.ScheduleFragment.java", "BodyUseAPI": [], "Fixed commit": "86e23a2eab9fdd0611876b4164571b3d449ca8a3", "Url": "https://api.github.com/repos/AnimeTwinCities/anime-detour-android", "Date": "2017-04-06T14:31:15Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.scrollPosition) != (-1)) { eventList.setSelection(this.scrollPosition); scrollPosition = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1391/buggy-version/app.src.main.java.org.animetwincities.animedetour.schedule.DayFragment.java", "BodyUseAPI": [], "Fixed commit": "86e23a2eab9fdd0611876b4164571b3d449ca8a3", "Url": "https://api.github.com/repos/AnimeTwinCities/anime-detour-android", "Date": "2017-04-06T14:31:15Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yahoo.yqlplus.engine.internal.plan.ast.OperatorStep.getCompute()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((op.getOperator()) == (com.yahoo.yqlplus.engine.internal.plan.ast.PhysicalOperator.EXECUTE)) { com.yahoo.yqlplus.engine.internal.bytecode.types.gambit.GambitCreator.Invocable inc = stepInvocable.complete(outputExpression); com.yahoo.yqlplus.engine.internal.plan.types.BytecodeExpression evaluatedExpr = runBody.invoke(exprTree.getLocation(), inc, program, ctxExpr); runBody.exec(evaluatedExpr); }else if ((outputExpression.getType().getValueCoreType()) != (com.yahoo.yqlplus.api.types.YQLCoreType.VOID)) { com.yahoo.yqlplus.engine.internal.plan.types.BytecodeExpression expr = stepInvocable.evaluateTryCatch(op.getLocation(), outputExpression); com.yahoo.yqlplus.engine.internal.bytecode.types.gambit.GambitCreator.Invocable inc = stepInvocable.complete(expr); com.yahoo.yqlplus.engine.internal.bytecode.types.gambit.ObjectBuilder.FieldBuilder field = programGenerator.registerValue(output, expr.getType()); com.yahoo.yqlplus.engine.internal.plan.types.BytecodeExpression evaluatedExpr = runBody.invoke(exprTree.getLocation(), inc, program, ctxExpr); runBody.set(Location.NONE, field.get(runBody.local(\"$program\")), runBody.evaluateInto(output.getName(), evaluatedExpr)); }else { com.yahoo.yqlplus.engine.internal.bytecode.types.gambit.GambitCreator.Invocable inc = stepInvocable.complete(outputExpression); com.yahoo.yqlplus.engine.internal.plan.types.BytecodeExpression evaluatedExpr = runBody.invoke(exprTree.getLocation(), inc, program, ctxExpr); runBody.exec(evaluatedExpr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4206/buggy-version/yqlplus_engine.src.main.java.com.yahoo.yqlplus.engine.internal.compiler.TaskGenerator.java", "BodyUseAPI": ["com.yahoo.yqlplus.language.operator.OperatorNode<com.yahoo.yqlplus.engine.internal.plan.ast.PhysicalOperator>.getLocation()", "com.yahoo.yqlplus.engine.internal.bytecode.types.gambit.InvocableBuilder.evaluateTryCatch(op.getLocation(),com.yahoo.yqlplus.engine.internal.plan.types.BytecodeExpression)"], "Fixed commit": "06ba1e5ff62c1bb9f67aac6a16cb04424a6812bf", "Url": "https://api.github.com/repos/xythian/yql-plus", "Date": "2017-11-28T17:38:07Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Family.john.getWheels()) > 0) Wagon.wheelBroke = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4471/buggy-version/Wagon.java", "BodyUseAPI": [], "Fixed commit": "2b1e898bda4f8ec87c8f333978192148ecd958c4", "Url": "https://api.github.com/repos/HermanLin/Luorolin", "Date": "2017-01-20T15:36:26Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Family.john.getTongues()) > 0) Wagon.tongueBroke = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4471/buggy-version/Wagon.java", "BodyUseAPI": [], "Fixed commit": "2b1e898bda4f8ec87c8f333978192148ecd958c4", "Url": "https://api.github.com/repos/HermanLin/Luorolin", "Date": "2017-01-20T15:36:26Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((truckingdetail.getId()) != null) { truckingdetail.setExfeetables(exfeetableRepository.findByTruckingdetail(truckingdetail)); if (((truckingdetail.getExfeetables()) == null) || (truckingdetail.getExfeetables().isEmpty())) { truckingdetailsEmpty.add(truckingdetail); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8849/buggy-version/src.main.java.com.vn.ael.persistence.manager.TruckingserviceManagerImpl.java", "BodyUseAPI": ["com.vn.ael.persistence.entity.Truckingdetail.getExfeetables()", "truckingdetail.getExfeetables().isEmpty()", "com.vn.ael.persistence.entity.Truckingdetail.getExfeetables()", "java.util.List<com.vn.ael.persistence.entity.Truckingdetail>.add(com.vn.ael.persistence.entity.Truckingdetail)", "com.vn.ael.persistence.repository.ExfeetableRepository.findByTruckingdetail(com.vn.ael.persistence.entity.Truckingdetail)", "com.vn.ael.persistence.entity.Truckingdetail.setExfeetables(exfeetableRepository.findByTruckingdetail(truckingdetail))"], "Fixed commit": "e8e34598628928b80c4eb91aade9324b11a6e524", "Url": "https://api.github.com/repos/linhrepo/ael", "Date": "2015-07-02T17:06:03Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (imageInputStream == null) { ch.entwine.weblounge.dispatcher.impl.DispatchUtils.sendNotFound(java.lang.String.format(\"Image %s not found\", imageURI.getIdentifier()), request, response); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4843/buggy-version/modules.weblounge-dispatcher.src.main.java.ch.entwine.weblounge.dispatcher.impl.handler.ImageRequestHandlerImpl.java", "BodyUseAPI": [], "Fixed commit": "42a5cc38bda3be865a846d5a8b4f844b992863f5", "Url": "https://api.github.com/repos/entwinemedia/weblounge", "Date": "2016-06-28T11:43:44Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mViews.get(i).getTag()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (null != thumbnail) { thumbnail.recycle(); mViews.get(i).setTag(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8408/buggy-version/HawkBrowser.src.com.hawkbrowser.shell.HawkBrowser.java", "BodyUseAPI": ["android.graphics.Bitmap.recycle()"], "Fixed commit": "1c0871862b2210469ee6fab990f924b2c22872a7", "Url": "https://api.github.com/repos/chenshanglin/ChromeBrowser", "Date": "2014-05-24T01:54:19Z"},
{"Line": "=>1153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((localPeer.getPeerInfo()) == null) { return; }else if (SystemSettings.DEFAULT_PUBLIC_URL.equals(localPeer.getPeerInfo().getPublicUrl())) { io.subutai.common.host.HostInterface externalInterface = localPeer.getManagementHost().getInterfaceByName(io.subutai.common.settings.SystemSettings.getExternalIpInterface()); if ((externalInterface == null) || (externalInterface instanceof io.subutai.common.host.NullHostInterface)) { return; } localPeer.getPeerInfo().setPublicUrl(externalInterface.getIp()); localPeer.getPeerInfo().setName(java.lang.String.format(\"Peer %s on %s\", localPeerId, externalInterface.getIp())); io.subutai.core.peer.impl.entity.PeerData peerData = peerDataService.find(localPeer.getPeerInfo().getId()); peerData.setInfo(toJson(localPeer.getPeerInfo())); updatePeerData(peerData); io.subutai.common.settings.SystemSettings.setPublicUrl(localPeer.getPeerInfo().getPublicUrl()); localIpSetter.shutdown(); }else { if ((SystemSettings.DEFAULT_PUBLIC_URL.equals(io.subutai.common.settings.SystemSettings.getPublicUrl())) && (!(SystemSettings.DEFAULT_PUBLIC_URL.equals(localPeer.getPeerInfo().getPublicUrl())))) { io.subutai.common.settings.SystemSettings.setPublicUrl(localPeer.getPeerInfo().getPublicUrl()); } if (((io.subutai.common.settings.SystemSettings.DEFAULT_PUBLIC_SECURE_PORT) == (io.subutai.common.settings.SystemSettings.getPublicSecurePort())) && ((io.subutai.common.settings.SystemSettings.DEFAULT_PUBLIC_SECURE_PORT) != (localPeer.getPeerInfo().getPublicSecurePort()))) { io.subutai.common.settings.SystemSettings.setPublicSecurePort(localPeer.getPeerInfo().getPublicSecurePort()); } localIpSetter.shutdown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6808/buggy-version/management.server.core.peer-manager.peer-manager-impl.src.main.java.io.subutai.core.peer.impl.PeerManagerImpl.java", "BodyUseAPI": ["localPeer.getManagementHost().getInterfaceByName(io.subutai.common.settings.SystemSettings.getExternalIpInterface())", "io.subutai.common.peer.LocalPeer.getManagementHost()", "SystemSettings.DEFAULT_PUBLIC_URL.equals(localPeer.getPeerInfo().getPublicUrl())", "io.subutai.common.peer.LocalPeer.getPeerInfo()", "localPeer.getPeerInfo().getPublicUrl()", "io.subutai.core.peer.impl.dao.PeerDataService.find(localPeer.getPeerInfo().getId())", "io.subutai.core.peer.impl.entity.PeerData.setInfo(java.lang.String)", "io.subutai.core.peer.impl.PeerManagerImpl.LocalIpSetterTask.toJson(localPeer.getPeerInfo())", "io.subutai.common.peer.LocalPeer.getPeerInfo()", "localPeer.getPeerInfo().getId()", "localPeer.getPeerInfo().getPublicUrl()", "localPeer.getPeerInfo().getPublicUrl()", "io.subutai.common.peer.LocalPeer.getPeerInfo()", "io.subutai.common.peer.LocalPeer.getPeerInfo()", "io.subutai.common.settings.SystemSettings.setPublicUrl(localPeer.getPeerInfo().getPublicUrl())", "localPeer.getPeerInfo().setName(java.lang.String)", "localPeer.getPeerInfo().setPublicUrl(externalInterface.getIp())", "io.subutai.common.peer.LocalPeer.getPeerInfo()", "localPeer.getPeerInfo().getPublicSecurePort()", "io.subutai.common.peer.LocalPeer.getPeerInfo()", "io.subutai.common.peer.LocalPeer.getPeerInfo()", "io.subutai.common.peer.LocalPeer.getPeerInfo()", "io.subutai.common.settings.SystemSettings.setPublicSecurePort(localPeer.getPeerInfo().getPublicSecurePort())", "SystemSettings.DEFAULT_PUBLIC_URL.equals(localPeer.getPeerInfo().getPublicUrl())", "localPeer.getPeerInfo().getPublicSecurePort()", "io.subutai.common.peer.LocalPeer.getPeerInfo()", "io.subutai.common.settings.SystemSettings.setPublicUrl(localPeer.getPeerInfo().getPublicUrl())", "localPeer.getPeerInfo().getPublicUrl()", "io.subutai.common.peer.LocalPeer.getPeerInfo()"], "Fixed commit": "21fdc2f86ace7844b0cf7f38543eca8da2e56a77", "Url": "https://api.github.com/repos/subutai-io/peer-os", "Date": "2016-04-13T16:25:10Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_image) == null) { this._state = TileState.BLANK; }else { this._state = TileState.READY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3114/buggy-version/trunk.org.mwc.cmap.plotViewer.src.org.mwc.cmap.plotViewer.editors.render.CachableTile.java", "BodyUseAPI": [], "Fixed commit": "e16beca838a7b03c8bd16304cbdb12f0bfa01324", "Url": "https://api.github.com/repos/jesseeichar/debrief", "Date": "2013-07-03T09:02:53Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Rules.league.timeOutPerHalf) { data.timeOutTaken = new boolean[]{ false, false }; }else { boolean timeOutTaken = data.timeOutTaken[0]; data.timeOutTaken[0] = data.timeOutTaken[1]; data.timeOutTaken[1] = timeOutTaken; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7734/buggy-version/src.controller.action.ui.half.FirstHalf.java", "BodyUseAPI": [], "Fixed commit": "cbe00c620e15b132cbce1e9302abd5b174cb2e59", "Url": "https://api.github.com/repos/bhuman/GameController", "Date": "2013-06-20T09:05:10Z"},
{"Line": "=>2364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isIpad) { metadataPresenter.getWidget().getElement().getStyle().setPaddingTop(0, Unit.PX); }else if (isAndriod) { metadataPresenter.getWidget().getElement().getStyle().setPaddingTop(0, Unit.PX); }else { metadataPresenter.getWidget().getElement().getStyle().setPaddingTop((122 + 50), Unit.PX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1916/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.play.collection.CollectionPlayerPresenter.java", "BodyUseAPI": [], "Fixed commit": "bd6dc1535111526c52a119f74cd4bbe1d93d11e3", "Url": "https://api.github.com/repos/sravanthi1/Gooru-Web", "Date": "2015-01-20T11:27:31Z"},
{"Line": "=>696", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.facebook.presto.sql.planner.PlanBuilder.translate(com.facebook.presto.sql.analyzer.FieldOrExpression)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(orderings.containsKey(symbol))) { orderBySymbols.add(symbol); orderings.put(symbol, toSortOrder(sortItem)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2925/buggy-version/presto-main.src.main.java.com.facebook.presto.sql.planner.QueryPlanner.java", "BodyUseAPI": ["java.util.Map<com.facebook.presto.sql.planner.Symbol, com.facebook.presto.spi.block.SortOrder>.put(com.facebook.presto.sql.planner.Symbol,com.facebook.presto.spi.block.SortOrder)", "orderBySymbols.add(com.facebook.presto.sql.planner.Symbol)"], "Fixed commit": "d66165b6b0b7f05124b52df2dcefa14641cb59d5", "Url": "https://api.github.com/repos/cberner/presto", "Date": "2015-06-03T08:17:27Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.LOLLIPOP_MR1)) { handlePermissionsM(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2031/buggy-version/app.src.main.java.com.example.admin.visualgseg.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f6ef93e570727820b159802848cc89364e99050e", "Url": "https://api.github.com/repos/Green-Shadow/EcoVision-Android", "Date": "2017-07-31T13:55:08Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.processes) == null) { this.processes = processes; }else { this.processes.clear(); this.processes.addAll(processes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1165/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Batch.java", "BodyUseAPI": [], "Fixed commit": "39d3a0dbbe868cc7413888051fe88f71d1c68c55", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.batches) == null) { this.batches = batches; }else { this.batches.clear(); this.batches.addAll(batches); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1165/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Process.java", "BodyUseAPI": [], "Fixed commit": "39d3a0dbbe868cc7413888051fe88f71d1c68c55", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>693", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedNodes.isEmpty()) return com.google.common.collect.ImmutableList.of();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5844/buggy-version/src.main.java.nodebox.client.NetworkView.java", "BodyUseAPI": [], "Fixed commit": "bc052edebd1c97739d4cb35aa46eca6a71a11221", "Url": "https://api.github.com/repos/nodebox/nodebox", "Date": "2013-02-04T16:03:56Z"},
{"Line": "=>912", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((calculatedStyle.isTable()) || (calculatedStyle.isTableRow())) || (calculatedStyle.isTableSection())) { org.xhtmlrenderer.css.newmatch.CascadedStyle newPeStyle = org.xhtmlrenderer.css.newmatch.CascadedStyle.createLayoutStyle(peStyle, new org.xhtmlrenderer.css.sheet.PropertyDeclaration[]{ org.xhtmlrenderer.css.newmatch.CascadedStyle.createLayoutPropertyDeclaration(CSSName.DISPLAY, IdentValue.BLOCK) }); calculatedStyle = parentStyle.deriveStyle(newPeStyle); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3282/buggy-version/flying-saucer-core.src.main.java.org.xhtmlrenderer.layout.BoxBuilder.java", "BodyUseAPI": [], "Fixed commit": "e1fbd67ba5fa71a2c6d305f33c30d605e15e000a", "Url": "https://api.github.com/repos/openwide-java/flyingsaucer", "Date": "2013-06-24T14:22:02Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getHttpSession().getAttribute(com.photon.phresco.framework.actions.REQ_LOGIN_ERROR)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(errorTxt)) { getHttpRequest().setAttribute(com.photon.phresco.framework.actions.REQ_LOGIN_ERROR, errorTxt); }else { getHttpRequest().setAttribute(com.photon.phresco.framework.actions.REQ_LOGIN_ERROR, getText(com.photon.phresco.framework.actions.SUCCESS_LOGOUT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7498/buggy-version/framework.phresco-framework-web.src.main.java.com.photon.phresco.framework.actions.Login.java", "BodyUseAPI": ["getHttpRequest().setAttribute(com.photon.phresco.framework.actions.REQ_LOGIN_ERROR,java.lang.String)"], "Fixed commit": "970a25d09804bf32554dcb282a61399c8773c903", "Url": "https://api.github.com/repos/phresco/phresco", "Date": "2012-07-17T10:44:21Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (needsSort()) { sort(false); }else { updateDocs(); isSorted = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/147/buggy-version/src.org.exist.dom.persistent.NewArrayNodeSet.java", "BodyUseAPI": [], "Fixed commit": "a6d70f7b87396d93ef4085b1e44f56026f15db61", "Url": "https://api.github.com/repos/olvidalo/exist", "Date": "2016-03-20T19:59:51Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((datesForSymbol.size()) < (days)) { datesForSymbol.add(record.getDateString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6902/buggy-version/mpi.src.main.java.VectorGenerator.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(record.getDateString())"], "Fixed commit": "f500248db6ca7c361f23b456898cf0f0d7cc5a42", "Url": "https://api.github.com/repos/DSC-SPIDAL/stock-analysis", "Date": "2015-06-26T20:10:09Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((values) != null) { for (int i = 0; i < (values.size()); i++) { returnstring = ((returnstring + \" \") + (values.get(i))) + \"\\n\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4736/buggy-version/src.response.AnnotationInformation.java", "BodyUseAPI": [], "Fixed commit": "d0342734ef32ca483714a83505b9ef60931802b3", "Url": "https://api.github.com/repos/genomizer/genomizer-server", "Date": "2014-05-07T12:09:30Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(fileName.isFile())) { fileName.createNewFile(); initFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/756/buggy-version/src.main.java.is.deadbyte.tic-tac-toe.JSONDB.java", "BodyUseAPI": [], "Fixed commit": "681a55498c5a904b4f959aafe83ecdca28c7a807", "Url": "https://api.github.com/repos/Njallzzz/Tic-Tac-Toe", "Date": "2016-10-29T19:48:38Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((packet.getData().length) > 0) java.lang.System.out.println((((packet.getSource()) + \"-\") + (new java.lang.String(packet.getData()))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5687/buggy-version/src.main.Communication.java", "BodyUseAPI": ["networking.DataPacket.getSource()", "networking.DataPacket.getData()", "java.io.PrintStream.println((((packet.getSource()) + \"-\") + (new java.lang.String(packet.getData()))))"], "Fixed commit": "1802b5a5577d01c6de3d0650cc625ce0d92f1e5a", "Url": "https://api.github.com/repos/Djekkoo/IntegratedProject", "Date": "2014-04-15T10:44:14Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ow2.proactive_grid_cloud_portal.scheduler.client.model.PaginationModel.getTotalItems()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index > total) { index = total; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1508/buggy-version/scheduler-portal.src.main.java.org.ow2.proactive_grid_cloud_portal.scheduler.client.controller.PaginationController.java", "BodyUseAPI": [], "Fixed commit": "2635fd066f396aafa62f1ec6ae7af0598265850b", "Url": "https://api.github.com/repos/ow2-proactive/scheduling-portal", "Date": "2015-11-16T08:45:43Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.model.getTotalItems()) > 0) { return \"\" + ((this.model.getPage()) + 1); }else { return \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1508/buggy-version/scheduler-portal.src.main.java.org.ow2.proactive_grid_cloud_portal.scheduler.client.controller.PaginationController.java", "BodyUseAPI": ["org.ow2.proactive_grid_cloud_portal.scheduler.client.model.PaginationModel.getPage()"], "Fixed commit": "2635fd066f396aafa62f1ec6ae7af0598265850b", "Url": "https://api.github.com/repos/ow2-proactive/scheduling-portal", "Date": "2015-11-16T08:45:43Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (request instanceof org.ocpsoft.rewrite.servlet.impl.HttpRewriteWrappedRequest) { java.lang.String currentTab = ((org.ocpsoft.rewrite.servlet.impl.HttpRewriteWrappedRequest) (request)).getParameter(\"tab\"); if (currentTab != null) { url += ((((request.getRequestURI()) + \"/\") + (org.xcolab.view.socialmedia.SocialMediaEngine.TAB_IDENTIFIER)) + \"/\") + currentTab; }else { url += request.getRequestURI(); } }else { url += request.getRequestURI(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4814/buggy-version/view.src.main.java.org.xcolab.view.socialmedia.SocialMediaEngine.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getRequestURI()", "javax.servlet.http.HttpServletRequest.getRequestURI()", "javax.servlet.http.HttpServletRequest.getRequestURI()"], "Fixed commit": "5058765cc6d8f485237d7e51e975ffc35352399b", "Url": "https://api.github.com/repos/CCI-MIT/XCoLab", "Date": "2017-10-07T00:19:00Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ctx.getOperation().getProperties()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((properties != null) && ((properties.get(org.wso2.carbon.device.mgt.extensions.push.notification.provider.mqtt.MQTTNotificationStrategy.MQTT_ADAPTER_TOPIC)) != null)) { dynamicProperties.put(\"topic\", ((java.lang.String) (properties.get(org.wso2.carbon.device.mgt.extensions.push.notification.provider.mqtt.MQTTNotificationStrategy.MQTT_ADAPTER_TOPIC)))); }else { org.wso2.carbon.device.mgt.common.operation.mgt.Operation operation = ctx.getOperation(); java.lang.String topic = ((((((org.wso2.carbon.context.PrivilegedCarbonContext.getThreadLocalCarbonContext().getTenantDomain(true)) + \"/\") + (ctx.getDeviceId().getType())) + \"/\") + (ctx.getDeviceId().getId())) + \"/\") + (operation.getType()); dynamicProperties.put(\"topic\", topic); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4717/buggy-version/components.device-mgt-extensions.org.wso2.carbon.device.mgt.extensions.push.notification.provider.mqtt.src.main.java.org.wso2.carbon.device.mgt.extensions.push.notification.provider.mqtt.MQTTNotificationStrategy.java", "BodyUseAPI": ["java.util.Properties.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.Object)"], "Fixed commit": "c6c555abc6a270a1ba812981a430f37c894ad97e", "Url": "https://api.github.com/repos/DimalChandrasiri/carbon-device-mgt", "Date": "2016-09-22T09:04:25Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (connectionTimeout != null) { httpClientPolicy.setConnectionTimeout(connectionTimeout); }else { httpClientPolicy.setConnectionTimeout(org.codice.ddf.spatial.ogc.catalog.common.TrustedRemoteSource.DEFAULT_CONNECTION_TIMEOUT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/9037/buggy-version/ogc.spatial-ogc-common.src.main.java.org.codice.ddf.spatial.ogc.catalog.common.TrustedRemoteSource.java", "BodyUseAPI": ["org.apache.cxf.transports.http.configuration.HTTPClientPolicy.setConnectionTimeout(java.lang.Integer)"], "Fixed commit": "43279b18f013f1c7db68d426cb00d121a753ad72", "Url": "https://api.github.com/repos/codice/ddf-spatial", "Date": "2014-08-21T22:26:32Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (receiveTimeout != null) { httpClientPolicy.setReceiveTimeout(receiveTimeout); }else { httpClientPolicy.setReceiveTimeout(org.codice.ddf.spatial.ogc.catalog.common.TrustedRemoteSource.DEFAULT_RECEIVE_TIMEOUT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/9037/buggy-version/ogc.spatial-ogc-common.src.main.java.org.codice.ddf.spatial.ogc.catalog.common.TrustedRemoteSource.java", "BodyUseAPI": ["org.apache.cxf.transports.http.configuration.HTTPClientPolicy.setReceiveTimeout(java.lang.Integer)"], "Fixed commit": "43279b18f013f1c7db68d426cb00d121a753ad72", "Url": "https://api.github.com/repos/codice/ddf-spatial", "Date": "2014-08-21T22:26:32Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (newRecTimeout != null) { cswSourceConfiguration.setReceiveTimeout(newRecTimeout); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/9037/buggy-version/csw.spatial-csw-source.src.main.java.org.codice.ddf.spatial.ogc.csw.catalog.source.CswSource.java", "BodyUseAPI": ["org.codice.ddf.spatial.ogc.csw.catalog.common.CswSourceConfiguration.setReceiveTimeout(java.lang.Integer)"], "Fixed commit": "43279b18f013f1c7db68d426cb00d121a753ad72", "Url": "https://api.github.com/repos/codice/ddf-spatial", "Date": "2014-08-21T22:26:32Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hourNow < 5) { now.add(java.util.Calendar.DAY_OF_MONTH, (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2235/buggy-version/src.com.dedaulus.cinematty.framework.tools.ScheduleHandler.java", "BodyUseAPI": [], "Fixed commit": "0c9bf81fb11e89861c2c2507ba7ac1d93f586f4c", "Url": "https://api.github.com/repos/Dedaulus/Cinematty", "Date": "2011-04-30T00:07:26Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exquery.http.HttpRequest.getHeader(HttpHeaderName.Accept.toString())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (acceptHeaderValue == null) acceptHeaderValue = \"*/*\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7805/buggy-version/exquery-restxq.src.main.java.org.exquery.restxq.impl.annotation.ProducesAnnotationImpl.java", "BodyUseAPI": [], "Fixed commit": "a646a11b289f3ce46db31f7f084d0789a2e24480", "Url": "https://api.github.com/repos/opax/exquery", "Date": "2015-02-25T07:02:06Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getEmpId()) == 0) { return \"goBackAdmin\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6092/buggy-version/JavaSource.infosys.beans.ControllerBean.java", "BodyUseAPI": [], "Fixed commit": "2e7e026444a0f2e9c10b8ea07b7d97a83ecc83e3", "Url": "https://api.github.com/repos/purebone00/3910_Assignment", "Date": "2016-10-23T23:10:47Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.kmelia.model.KmeliaPublication.getDetail()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((pub.getStatus()) != null) && (pub.isRefused())) { if (((admin.isInRole(profile)) || (publisher.isInRole(profile))) || (currentUserId.equals(currentUser.getId()))) { pubColor = \"red\"; pubState = resources.getString(\"PublicationRefused\"); } }else { if ((((admin.isInRole(profile)) || (publisher.isInRole(profile))) || (currentUserId.equals(pub.getUpdaterId()))) || ((!(user.isInRole(profile))) && (kmeliaScc.isCoWritingEnable()))) { pubColor = \"red\"; if (pub.isRefused()) { pubState = resources.getString(\"kmelia.PubStateUnvalidate\"); }else { pubState = resources.getString(\"kmelia.PubStateToValidate\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4508/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.servlets.AjaxPublicationsListServlet.java", "BodyUseAPI": ["com.stratelia.webactiv.util.publication.model.PublicationDetail.getUpdaterId()", "com.stratelia.webactiv.util.publication.model.PublicationDetail.isRefused()", "java.lang.String.equals(pub.getUpdaterId())"], "Fixed commit": "fb157d61a5bf2c8fd6b79b3138df3e3b55496ff2", "Url": "https://api.github.com/repos/CecileBONIN/Silverpeas-Components", "Date": "2013-08-02T12:36:28Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(cameraApp)) setTimeFinish();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4161/buggy-version/app.src.main.java.com.hooloovoo.securenotes.AddNoteActivity.java", "BodyUseAPI": [], "Fixed commit": "63d425b3b6f84aac3fed2def8ca3c43ed633e176", "Url": "https://api.github.com/repos/chemickypes/SSecureNotes", "Date": "2014-01-17T21:45:42Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isStepExecutionRunning.get()) state.removeVariables(scope.name, scope.depth);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8447/buggy-version/src.main.java.net.unicoen.interpreter.Engine.java", "BodyUseAPI": [], "Fixed commit": "31ef03d27d96bc59119c8b703bd6b21f771766d3", "Url": "https://api.github.com/repos/UnicoenProject/Junicoen", "Date": "2016-07-12T05:36:42Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isStepExecutionRunning.get()) state.addStack(fdec.methodName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8447/buggy-version/src.main.java.net.unicoen.interpreter.Engine.java", "BodyUseAPI": [], "Fixed commit": "31ef03d27d96bc59119c8b703bd6b21f771766d3", "Url": "https://api.github.com/repos/UnicoenProject/Junicoen", "Date": "2016-07-12T05:36:42Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.KeyEvent.getKeyCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (key == (java.awt.event.KeyEvent.VK_UP)) { dy = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6387/buggy-version/src.SpaceShip.java", "BodyUseAPI": [], "Fixed commit": "a4b99c1193688843b1d76e14f33307bbd5a2f7bc", "Url": "https://api.github.com/repos/BradenHarrelson/JavaGame", "Date": "2017-12-05T14:51:21Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.KeyEvent.getKeyCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (key == (java.awt.event.KeyEvent.VK_RIGHT)) { dx = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6387/buggy-version/src.SpaceShip.java", "BodyUseAPI": [], "Fixed commit": "a4b99c1193688843b1d76e14f33307bbd5a2f7bc", "Url": "https://api.github.com/repos/BradenHarrelson/JavaGame", "Date": "2017-12-05T14:51:21Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.KeyEvent.getKeyCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (key == (java.awt.event.KeyEvent.VK_DOWN)) { dy = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6387/buggy-version/src.SpaceShip.java", "BodyUseAPI": [], "Fixed commit": "a4b99c1193688843b1d76e14f33307bbd5a2f7bc", "Url": "https://api.github.com/repos/BradenHarrelson/JavaGame", "Date": "2017-12-05T14:51:21Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.KeyEvent.getKeyCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (key == (java.awt.event.KeyEvent.VK_LEFT)) { dx = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6387/buggy-version/src.SpaceShip.java", "BodyUseAPI": [], "Fixed commit": "a4b99c1193688843b1d76e14f33307bbd5a2f7bc", "Url": "https://api.github.com/repos/BradenHarrelson/JavaGame", "Date": "2017-12-05T14:51:21Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isGameOver = game.checkIsGameOver())) { game.moveToNextPlayer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2625/buggy-version/Rummikub.src.controllers.console.GameMainController.java", "BodyUseAPI": ["logic.Game.moveToNextPlayer()"], "Fixed commit": "eec7333c69b1588a9a955fe8aa884d9048aa8e77", "Url": "https://api.github.com/repos/NirDayan/rummikub", "Date": "2015-11-22T20:02:23Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(lastOp.equals(\"error\"))) { opChar.setText(oper); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8093/buggy-version/app.src.main.java.com.example.user.labcalculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a3a9d63ef40d6b78ce9127aee61f1e57ed074ac6", "Url": "https://api.github.com/repos/alex960714/LabCalculator", "Date": "2017-10-03T21:25:58Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastSymbol == '.') { lastOp = \"point\"; }else if (lastSymbol == '-') { lastOp = \"minus\"; }else if (currNum.getText().equals(\"0\")) { lastOp = opChar.getText().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8093/buggy-version/app.src.main.java.com.example.user.labcalculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a3a9d63ef40d6b78ce9127aee61f1e57ed074ac6", "Url": "https://api.github.com/repos/alex960714/LabCalculator", "Date": "2017-10-03T21:25:58Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getBirthdate()) != null) pStored.setBirthdate(p.getBirthdate());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/736/buggy-version/service01-DataService.src.myhealthylife.dataservice.soap.DataServiceImpl.java", "BodyUseAPI": ["myhealthylife.dataservice.model.entities.Person.setBirthdate(p.getBirthdate())", "myhealthylife.dataservice.model.entities.Person.getBirthdate()"], "Fixed commit": "f2e1fd438e3ec9f82d0968eaa88aaf9a76ddddf6", "Url": "https://api.github.com/repos/MyHealthyLife/service01-DataService", "Date": "2017-02-22T10:35:17Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getLastname()) != null) pStored.setLastname(p.getLastname());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/736/buggy-version/service01-DataService.src.myhealthylife.dataservice.soap.DataServiceImpl.java", "BodyUseAPI": ["myhealthylife.dataservice.model.entities.Person.setLastname(p.getLastname())", "myhealthylife.dataservice.model.entities.Person.getLastname()"], "Fixed commit": "f2e1fd438e3ec9f82d0968eaa88aaf9a76ddddf6", "Url": "https://api.github.com/repos/MyHealthyLife/service01-DataService", "Date": "2017-02-22T10:35:17Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getTelegramID()) != null) pStored.setTelegramID(p.getTelegramID());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/736/buggy-version/service01-DataService.src.myhealthylife.dataservice.soap.DataServiceImpl.java", "BodyUseAPI": ["myhealthylife.dataservice.model.entities.Person.setTelegramID(p.getTelegramID())", "myhealthylife.dataservice.model.entities.Person.getTelegramID()"], "Fixed commit": "f2e1fd438e3ec9f82d0968eaa88aaf9a76ddddf6", "Url": "https://api.github.com/repos/MyHealthyLife/service01-DataService", "Date": "2017-02-22T10:35:17Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getFirstname()) != null) pStored.setFirstname(p.getFirstname());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/736/buggy-version/service01-DataService.src.myhealthylife.dataservice.soap.DataServiceImpl.java", "BodyUseAPI": ["myhealthylife.dataservice.model.entities.Person.setFirstname(p.getFirstname())", "myhealthylife.dataservice.model.entities.Person.getFirstname()"], "Fixed commit": "f2e1fd438e3ec9f82d0968eaa88aaf9a76ddddf6", "Url": "https://api.github.com/repos/MyHealthyLife/service01-DataService", "Date": "2017-02-22T10:35:17Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getTelegramUsername()) != null) pStored.setTelegramUsername(p.getTelegramUsername());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/736/buggy-version/service01-DataService.src.myhealthylife.dataservice.soap.DataServiceImpl.java", "BodyUseAPI": ["myhealthylife.dataservice.model.entities.Person.getTelegramUsername()", "myhealthylife.dataservice.model.entities.Person.setTelegramUsername(p.getTelegramUsername())"], "Fixed commit": "f2e1fd438e3ec9f82d0968eaa88aaf9a76ddddf6", "Url": "https://api.github.com/repos/MyHealthyLife/service01-DataService", "Date": "2017-02-22T10:35:17Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getUsername()) != null) pStored.setUsername(p.getUsername());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/736/buggy-version/service01-DataService.src.myhealthylife.dataservice.soap.DataServiceImpl.java", "BodyUseAPI": ["myhealthylife.dataservice.model.entities.Person.getUsername()", "myhealthylife.dataservice.model.entities.Person.setUsername(p.getUsername())"], "Fixed commit": "f2e1fd438e3ec9f82d0968eaa88aaf9a76ddddf6", "Url": "https://api.github.com/repos/MyHealthyLife/service01-DataService", "Date": "2017-02-22T10:35:17Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getPassword()) != null) pStored.setPassword(p.getPassword());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/736/buggy-version/service01-DataService.src.myhealthylife.dataservice.soap.DataServiceImpl.java", "BodyUseAPI": ["myhealthylife.dataservice.model.entities.Person.getPassword()", "myhealthylife.dataservice.model.entities.Person.setPassword(p.getPassword())"], "Fixed commit": "f2e1fd438e3ec9f82d0968eaa88aaf9a76ddddf6", "Url": "https://api.github.com/repos/MyHealthyLife/service01-DataService", "Date": "2017-02-22T10:35:17Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Queue<edu.berkeley.icsi.cdfs.wlgen.MapReduceJob>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (job == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4035/buggy-version/cdfs-wlgen.src.main.java.edu.berkeley.icsi.cdfs.wlgen.RemoteJobRunner.java", "BodyUseAPI": [], "Fixed commit": "0606ee094c9541b8d35d97a51011c7cd8a893cd1", "Url": "https://api.github.com/repos/warneke/compression-hdfs", "Date": "2013-07-02T02:09:52Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.value) != null) { java.lang.System.out.println(entry.value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/9029/buggy-version/Trees.src.main.java.org.intelligentjava.algos.trees.AbstractBinarySearchTree.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.Integer)"], "Fixed commit": "b0363b3a4d5594012a971ccef6d4e7290d934ae2", "Url": "https://api.github.com/repos/ignl/BinarySearchTrees", "Date": "2015-03-28T20:52:34Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.value) != null) { java.lang.System.out.println(entry.value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/9029/buggy-version/Trees.src.main.java.org.intelligentjava.algos.trees.AbstractBinarySearchTree.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.Integer)"], "Fixed commit": "b0363b3a4d5594012a971ccef6d4e7290d934ae2", "Url": "https://api.github.com/repos/ignl/BinarySearchTrees", "Date": "2015-03-28T20:52:34Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.value) != null) { java.lang.System.out.println(entry.value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/9029/buggy-version/Trees.src.main.java.org.intelligentjava.algos.trees.AbstractBinarySearchTree.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.Integer)"], "Fixed commit": "b0363b3a4d5594012a971ccef6d4e7290d934ae2", "Url": "https://api.github.com/repos/ignl/BinarySearchTrees", "Date": "2015-03-28T20:52:34Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((input.length) > 2) { args = java.util.Arrays.copyOfRange(input, 2, input.length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/160/buggy-version/src.main.java.nl.yacht.lakesideresort.controller.CommandLineInterpreter.java", "BodyUseAPI": ["java.util.Arrays.copyOfRange(java.lang.String[],int,int)"], "Fixed commit": "4b0dcaa02fbaebcda9fa1bc1136e967cdad3bc73", "Url": "https://api.github.com/repos/YachtMostDev/lakesideresort", "Date": "2017-10-13T10:05:29Z"},
{"Line": "=>644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["data.getExtras().getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (position >= 0) { goToCity(position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7400/buggy-version/OneWeather.src.com.kukool.iosapp.weather.activity.WeatherMain.java", "BodyUseAPI": ["com.kukool.iosapp.weather.activity.WeatherMain.goToCity(int)"], "Fixed commit": "32e0a98004546752477b6cc942720a3290f819e6", "Url": "https://api.github.com/repos/usstwonder/KuOne", "Date": "2014-08-02T15:07:43Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listItem.getSelectedColumn()) == null) { graphApp.showNotification(\"You have not selected an item for each inputfield.\", NotificationStyle.WARNING); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8645/buggy-version/src.main.java.graphs.GraphController.java", "BodyUseAPI": [], "Fixed commit": "797a737bf8625fca26e1ac618a7770a397a5359b", "Url": "https://api.github.com/repos/HansSchouten/context_health_informatics", "Date": "2015-06-19T09:30:27Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mBattle.oppPokemonFainted()) { nop = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3881/buggy-version/app.src.main.java.com.pokemonbattlearena.android.activity.BattleActivity.java", "BodyUseAPI": [], "Fixed commit": "2f0dd5d93d4731566a9d7df2413a6b6ce00c3029", "Url": "https://api.github.com/repos/cireficc/pokemon-arena-android", "Date": "2016-12-05T20:29:19Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mBattle.selfPokemonFainted()) { android.widget.Button force; force = ((android.widget.Button) (findViewById(R.id.switch_button))); force.performClick(); }else if (nop) { sendClientMessage(new com.pokemonbattlearena.android.engine.match.NoP(mBattle.getSelf())); mBattleFragment.enableButtonActions(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3881/buggy-version/app.src.main.java.com.pokemonbattlearena.android.activity.BattleActivity.java", "BodyUseAPI": ["com.pokemonbattlearena.android.activity.BattleActivity.sendClientMessage(com.pokemonbattlearena.android.engine.match.NoP)", "com.pokemonbattlearena.android.engine.match.Battle.getSelf()"], "Fixed commit": "2f0dd5d93d4731566a9d7df2413a6b6ce00c3029", "Url": "https://api.github.com/repos/cireficc/pokemon-arena-android", "Date": "2016-12-05T20:29:19Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startTime) != null) { return new java.util.Date(startTime.getTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/506/buggy-version/Mage.src.mage.game.match.MatchImpl.java", "BodyUseAPI": [], "Fixed commit": "d051aef63f642a2086350ec688577b7aab7ea8d0", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2014-09-04T17:03:48Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.avajadi.mediatools.TorrentFinder.selectTorrent(org.avajadi.mediatools.Episode)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (torrent == null) { java.lang.System.err.println(java.lang.String.format(\"Found no torrent for %s\", episode.toString())); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3135/buggy-version/src.main.java.org.avajadi.mediatools.executor.GetTorrents.java", "BodyUseAPI": [], "Fixed commit": "02f42dd1ab3f21bed29e0016c74a993aa07996d2", "Url": "https://api.github.com/repos/avajadi/godoggy", "Date": "2016-11-08T19:33:50Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (level == (LOG_WARNING)) reporter.warning(message); else if ((level == (LOG_INFO)) || (level == (LOG_DEBUG))) reporter.trace(message);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/866/buggy-version/biz.aQute.repository.src.aQute.lib.deployer.repository.ReporterLogService.java", "BodyUseAPI": [], "Fixed commit": "c9f39bab3705f3ad0e61fbf8c6cf641eee90fcd8", "Url": "https://api.github.com/repos/derheld42/bnd", "Date": "2012-05-27T23:01:50Z"},
{"Line": "=>877", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wifiP2pDevice.equals(thisDevice)) { strDevice += \"\\nIs group owner: \" + (isGroupOwner()); }else { strDevice += \"\\nIs group owner: false\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3791/buggy-version/wifibuddy.src.main.java.edu.rit.se.wifibuddy.WifiDirectHandler.java", "BodyUseAPI": [], "Fixed commit": "77fc2c262a1aac6a50eae4531b344bfae1080355", "Url": "https://api.github.com/repos/Crash-Test-Buddies/WiFi-Buddy", "Date": "2016-07-03T22:39:40Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wrapper.getCountsForTaxa(s)) > 1000) writer.write((\"\\t\" + s));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/224/buggy-version/src.bigDataScalingFactors.AddTotalCountsAndDiversity.java", "BodyUseAPI": ["java.io.BufferedWriter.write(java.lang.String)"], "Fixed commit": "8d845e017ef923f617fcfe244272ca3c40677906", "Url": "https://api.github.com/repos/afodor/metagenomicsTools", "Date": "2014-06-30T15:42:26Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.getReturnType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.lang.Class.class.equals(c)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/924/buggy-version/src.main.java.act.data.DataPropertyRepository.java", "BodyUseAPI": [], "Fixed commit": "30bcf25f94af243c4e7cc3e5347e59ceb8233743", "Url": "https://api.github.com/repos/actframework/actframework", "Date": "2016-01-06T12:21:10Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.getReturnType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.lang.Enum.class.isAssignableFrom(c)) { return org.osgl.util.C.list((context + propName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/924/buggy-version/src.main.java.act.data.DataPropertyRepository.java", "BodyUseAPI": [], "Fixed commit": "30bcf25f94af243c4e7cc3e5347e59ceb8233743", "Url": "https://api.github.com/repos/actframework/actframework", "Date": "2016-01-06T12:21:10Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tok == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5895/buggy-version/Textokit.SentenceSplitter.Heuristic.src.main.java.com.textocat.textokit.segmentation.heur.SentenceSplitter.java", "BodyUseAPI": [], "Fixed commit": "688bc23615671eeb953f2d9f09ead2c120a9ec5e", "Url": "https://api.github.com/repos/textocat/textokit-core", "Date": "2016-01-25T21:06:21Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tok == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5895/buggy-version/Textokit.SentenceSplitter.Heuristic.src.main.java.com.textocat.textokit.segmentation.heur.SentenceSplitter.java", "BodyUseAPI": [], "Fixed commit": "688bc23615671eeb953f2d9f09ead2c120a9ec5e", "Url": "https://api.github.com/repos/textocat/textokit-core", "Date": "2016-01-25T21:06:21Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((pather.path) != null) { for (int i = 0; i < (pather.path.size()); i++) { com.dungeoncrawler.generator.search.CoordTile t = pather.path.get(i).getData(); java.lang.System.out.println((((((\"Path node: \" + i) + \" \") + (t.x)) + \" \") + (t.y))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8265/buggy-version/dungeongame.src.com.dungeoncrawler.game.entity.EntityCardPic.java", "BodyUseAPI": [], "Fixed commit": "db7586194ea8e170c56181adc8a58429d383ed00", "Url": "https://api.github.com/repos/frebib/astonhack-2015", "Date": "2015-11-08T07:41:54Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getInput(transform).getAll()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (allInputs.isEmpty()) { org.apache.flink.api.java.operators.DataSource<java.lang.String> dummySource = context.getExecutionEnvironment().fromElements(\"dummy\"); result = dummySource.flatMap(new org.apache.flink.api.common.functions.FlatMapFunction<java.lang.String, T>() { @java.lang.Override public void flatMap(java.lang.String s, org.apache.flink.util.Collector<T> collector) throws java.lang.Exception { } }).returns(new org.apache.beam.runners.flink.translation.types.CoderTypeInformation(((org.apache.beam.sdk.coders.Coder<T>) (org.apache.beam.sdk.coders.VoidCoder.of())))); }else { for (org.apache.beam.sdk.values.PCollection<T> collection : allInputs) { org.apache.flink.api.java.DataSet<T> current = context.getInputDataSet(collection); if (result == null) { result = current; }else { result = result.union(current); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5118/buggy-version/runners.flink.runner.src.main.java.org.apache.beam.runners.flink.translation.FlinkBatchTransformTranslators.java", "BodyUseAPI": [], "Fixed commit": "4e60a497b313414aa2b2968b8def6c6f753908fe", "Url": "https://api.github.com/repos/swegner/beam", "Date": "2016-05-13T12:17:50Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cupInside) { this.setCupBool(false, false); machineGUI.setTemporaryNorthText(\"Have a nice day!\"); vendingmachine.components.Context.log.info(((\"Cup of \" + (chosenDrink.getName())) + \" taken.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8579/buggy-version/VendingMachine.src.vendingmachine.components.Context.java", "BodyUseAPI": [], "Fixed commit": "b4c13b9bfd4fd4d46f3320f763e660a327cbbc47", "Url": "https://api.github.com/repos/DubFlo/Distributor", "Date": "2016-03-21T18:19:09Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name == null) || ((name.trim().length()) == 0)) { throw new java.lang.IllegalArgumentException(\"Empty playlist name\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5883/buggy-version/src.fr.msch.wissl.server.REST.java", "BodyUseAPI": [], "Fixed commit": "7e3bcbf37405bde032be71534b9864a453244d3d", "Url": "https://api.github.com/repos/mschn/wissl", "Date": "2012-07-26T09:09:44Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((keyTypes.length) > 1) collate = com.orientechnologies.orient.core.sql.OSQLEngine.getCollate(OMultivalueCollate.NAME);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5409/buggy-version/core.src.main.java.com.orientechnologies.orient.core.index.OSimpleKeyIndexDefinition.java", "BodyUseAPI": [], "Fixed commit": "7b32361952ba00c1070cca725d2e64102d13d5b5", "Url": "https://api.github.com/repos/mcculls/orientdb", "Date": "2015-01-14T17:52:30Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((machineType) != null) { org.apache.hadoop.io.Text.writeString(out, machineType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/871/buggy-version/src.mapred.org.apache.hadoop.mapred.workflow.scheduling.WorkflowTask.java", "BodyUseAPI": [], "Fixed commit": "34224cd0b7d82a7f4ae4109309fe61e43fcff57b", "Url": "https://api.github.com/repos/adwylie/hadoop", "Date": "2015-07-04T20:42:22Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.unibas.medizin.osce.server.util.file.StudentManagementPrintPdfUtil.createCheckListQuestionTable(java.util.List<ch.unibas.medizin.osce.domain.ChecklistItem>,long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (table != null) { table.setSpacingBefore(5.0F); table.setSpacingAfter(20.0F); try { document.add(table); } catch (com.itextpdf.text.DocumentException ex) { log.error((\"in RolePrintPdfUtil.createCheckListDetailsTable(): \" + (ex.getMessage())), ex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1774/buggy-version/OsceManager.src.main.java.ch.unibas.medizin.osce.server.util.file.StudentManagementPrintPdfUtil.java", "BodyUseAPI": ["com.itextpdf.text.pdf.PdfPTable.setSpacingAfter(float)", "ch.unibas.medizin.osce.server.util.file.StudentManagementPrintPdfUtil.add(com.itextpdf.text.pdf.PdfPTable)", "com.itextpdf.text.pdf.PdfPTable.setSpacingBefore(float)"], "Fixed commit": "6b59f16d193a10b0547880d034d5d475db9727fa", "Url": "https://api.github.com/repos/nikotsunami/osce", "Date": "2014-12-13T08:46:56Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lifeix.football.common.util.ImageUploadUtil.getUploadToken(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.springframework.util.StringUtils.isEmpty(token)) { throw new com.lifeix.football.common.exception.BusinessException(\"\u56fe\u7247\u4e0a\u4f20token\u4e3a\u7a7a\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8424/buggy-version/src.main.java.com.lifeix.football.common.util.ImageUploadUtil.java", "BodyUseAPI": [], "Fixed commit": "ab9de1b3499e4afb741c93057608167e357d7ea0", "Url": "https://api.github.com/repos/pintimes/lifeix-football-common", "Date": "2016-10-27T13:03:08Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.JSONObject.parseObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((uploadTokenJson == null) || (uploadTokenJson.isEmpty())) { throw new com.lifeix.football.common.exception.BusinessException(\"\u56fe\u7247\u4e0a\u4f20token\u4e3a\u7a7a\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8424/buggy-version/src.main.java.com.lifeix.football.common.util.ImageUploadUtil.java", "BodyUseAPI": [], "Fixed commit": "ab9de1b3499e4afb741c93057608167e357d7ea0", "Url": "https://api.github.com/repos/pintimes/lifeix-football-common", "Date": "2016-10-27T13:03:08Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSharedPreferences(Player.PREFNAME, com.android.argb.edhlc.MODE_PRIVATE).getInt(\"SCREEN_ON\", 0)) == 1) getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON); else getWindow().clearFlags(android.view.WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1846/buggy-version/app.src.main.java.com.android.argb.edhlc.OverviewActivity.java", "BodyUseAPI": [], "Fixed commit": "1b3be1dcf2404538e2260bdfb606861569d7df5b", "Url": "https://api.github.com/repos/andrergb/EDHLC", "Date": "2015-09-14T14:04:46Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSharedPreferences(Player.PREFNAME, com.android.argb.edhlc.MODE_PRIVATE).getInt(\"SCREEN_ON\", 0)) == 1) getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON); else getWindow().clearFlags(android.view.WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1846/buggy-version/app.src.main.java.com.android.argb.edhlc.HistoryActivity.java", "BodyUseAPI": [], "Fixed commit": "1b3be1dcf2404538e2260bdfb606861569d7df5b", "Url": "https://api.github.com/repos/andrergb/EDHLC", "Date": "2015-09-14T14:04:46Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((proposerIndex) >= (com.example.isaacwang.stazo_resistance.Game.numPlayers)) { proposerIndex = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/290/buggy-version/stazo_resistance.app.src.main.java.com.example.isaacwang.stazo_resistance.Game.java", "BodyUseAPI": [], "Fixed commit": "135069b1c596e872a1cd396c06d962ee90e2d0b8", "Url": "https://api.github.com/repos/lukethomas1/Stazo-Resistance", "Date": "2016-03-31T03:39:28Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(getApplicationContext())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (settings.contains(\"token_expire\")) { java.lang.Long sessionExpire = (settings.getLong(\"token_expire\", 0)) * 1000; java.lang.Long now = new java.util.Date().getTime(); if (sessionExpire < now) { android.content.Intent intent = new android.content.Intent(getBaseContext(), com.mattrubacky.monet2.Login.class); startActivity(intent); }else { android.content.Intent intent = new android.content.Intent(getBaseContext(), com.mattrubacky.monet2.Rotation.class); startActivity(intent); } }else { android.content.Intent intent = new android.content.Intent(getBaseContext(), com.mattrubacky.monet2.Login.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7301/buggy-version/mobile.src.main.java.com.mattrubacky.monet2.Startup.java", "BodyUseAPI": ["android.content.SharedPreferences.getLong(java.lang.String,int)"], "Fixed commit": "34ac8bcc9dcd3fea36ebb57915f83d5fcd51e970", "Url": "https://api.github.com/repos/msruback/MoNet2", "Date": "2017-09-12T18:58:00Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hearthsim.event.effect.EffectCharacter<T>.applyEffect(mp.getPlayerSide(),mp.getMinion(),com.hearthsim.util.tree.HearthTreeNode)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tempNode != null) toRet = tempNode;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/396/buggy-version/src.main.java.com.hearthsim.card.minion.MinionWithInspire.java", "BodyUseAPI": [], "Fixed commit": "ca37e6b353cf9fe152f910e60012c4b0ed0e6a7f", "Url": "https://api.github.com/repos/Hofls/HearthSim", "Date": "2015-08-24T05:17:22Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (baseDomain != null) { mSession.getAuthInfo().setBaseDomain(baseDomain); }else { com.box.androidsdk.content.utils.BoxLogUtils.nonFatalE(\"setting Base Domain\", baseDomain, new java.lang.RuntimeException(\"base domain being used\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/109/buggy-version/box-content-sdk.src.main.java.com.box.androidsdk.content.auth.OAuthActivity.java", "BodyUseAPI": ["mSession.getAuthInfo().setBaseDomain(java.lang.String)", "com.box.androidsdk.content.utils.BoxLogUtils.nonFatalE(java.lang.String,java.lang.String,java.lang.RuntimeException)"], "Fixed commit": "2e75a2989cfa0ee5ef6ac9f166a0826dff1e3d73", "Url": "https://api.github.com/repos/seema-at-box/box-android-sdk", "Date": "2017-06-14T22:38:01Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (relCount == 0) { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6601/buggy-version/src.main.java.Metric.java", "BodyUseAPI": [], "Fixed commit": "d067791be048ac797950722b7fc714acf086124e", "Url": "https://api.github.com/repos/11791-04/project-team04", "Date": "2014-11-10T04:16:56Z"},
{"Line": "=>644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (decodeService == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6447/buggy-version/android-pdfview.src.main.java.com.joanzapata.pdfview.PDFView.java", "BodyUseAPI": [], "Fixed commit": "884da0450054ac77f49007b46eb3a76b5e764236", "Url": "https://api.github.com/repos/kk121/android-pdfview", "Date": "2017-10-12T10:12:40Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDiscovered(i, j)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1225/buggy-version/app.src.main.java.com.android.demineur.DemineurModel.java", "BodyUseAPI": [], "Fixed commit": "43515004276a1af8912e6d533bf0b4e1a467daef", "Url": "https://api.github.com/repos/anazeer/Demineur", "Date": "2015-12-21T17:09:05Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(pushedAt))) { java.util.Calendar calendar = com.sample.github.utilities.DateUtility.getCalendar(pushedAt, com.sample.github.network.models.response.Repository.PATTERN); long days = com.sample.github.utilities.DateUtility.getTimeUnitDiff(calendar, java.util.Calendar.getInstance(), java.util.concurrent.TimeUnit.DAYS); if (days > 30L) { formattedPushedAt = java.lang.String.format(\"Updated on %s\", com.sample.github.utilities.DateUtility.getFormattedDateAndTime(calendar, DateUtility.FORMAT_RELATIVE)); }else { formattedPushedAt = java.lang.String.format(\"Updated %s\", com.sample.github.utilities.DateUtility.getFormattedDateAndTime(calendar, DateUtility.FORMAT_RELATIVE)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6389/buggy-version/app.src.main.java.com.sample.github.network.models.response.Repository.java", "BodyUseAPI": ["com.sample.github.utilities.DateUtility.getCalendar(java.lang.String,java.lang.String)"], "Fixed commit": "5bc48c27b25de4807776d43e9bb9a94e4159b5ca", "Url": "https://api.github.com/repos/lawloretienne/GithubProfileViewer", "Date": "2017-01-18T23:19:59Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.birthdayDate) != null) return this.birthdayDate;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8948/buggy-version/src.main.java.com.pratilipi.api.user.shared.FacebookUserData.java", "BodyUseAPI": [], "Fixed commit": "c80ff148b2049b089a677ff093082b67d966c0e3", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2015-08-27T10:59:03Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c == 't') { buf.append('\\t'); }else if (c == 'u') { java.lang.String code = new java.lang.String(source, (i + 1), 4); buf.append(((char) (java.lang.Integer.parseInt(code, 16)))); i += 4; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/126/buggy-version/src.main.java.me.doubledutch.lazy.LazyToken.java", "BodyUseAPI": [], "Fixed commit": "e1300dd59cdf1b5e8924dd1e001b759ca598dc33", "Url": "https://api.github.com/repos/doubledutch/LazyJSON", "Date": "2016-07-25T03:44:15Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.futjikato.mrwhiz.App.getInstance().isDebug()) { this.playerCoords.setText(java.lang.String.format(\"You\u00b4re at : ( %d/%d )\", this.player.getXBlock(), this.player.getYBlock())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/9226/buggy-version/src.de.futjikato.mrwhiz.map.MapUi.java", "BodyUseAPI": [], "Fixed commit": "2b75238b60c163405a82420c15941dc2773280d9", "Url": "https://api.github.com/repos/futjikato/mr-whiz", "Date": "2012-11-23T07:29:56Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getLocale().equals(getBundle().getLocale())) { for (java.lang.String key : bundle.keySet()) { input = input.replace(key, bundle.getString(key)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7147/buggy-version/core.src.main.java.com.github.slugify.Slugify.java", "BodyUseAPI": [], "Fixed commit": "89fe4384e38399eeec0d565accd19875227fd299", "Url": "https://api.github.com/repos/slugify/slugify", "Date": "2013-11-15T21:56:26Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pathNumber == (filePaths.size())) { org.eclipse.che.ide.util.loging.Log.error(org.eclipse.che.ide.ext.java.jdi.client.debug.DebuggerPresenter.class, (\"Can't open resource \" + location)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2053/buggy-version/plugin-java.che-plugin-java-ext-debugger-java-client.src.main.java.org.eclipse.che.ide.ext.java.jdi.client.debug.DebuggerPresenter.java", "BodyUseAPI": [], "Fixed commit": "2c61fd5fa19cca42b0f527790ea5bce0a3291496", "Url": "https://api.github.com/repos/codenvy-legacy/che-plugins", "Date": "2016-02-09T12:48:15Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ObjectStructure.Message.getMsg(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(SocketServer.Center.checkPlayerState(ID, State.InMap))) { Msg.setMsg(\"Message\", \"Player state is not playing\"); Msg.setMsg(\"ErrorCode\", ErrorCode.PlayerStateNotCorret); sendMsg(Msg); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6058/buggy-version/src.SocketServer.Service.java", "BodyUseAPI": [], "Fixed commit": "beb6f58da29eeacbf0ff238a33bf28471810fcc8", "Url": "https://api.github.com/repos/Truth0906/BomberBOTGameServer", "Date": "2016-03-29T16:17:11Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.magnet.mmx.client.common.PrivacyManager.getPrivacyList()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == existingList) { existingList = new java.util.ArrayList<com.magnet.mmx.protocol.MMXid>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4011/buggy-version/android.src.main.java.com.magnet.mmx.client.api.MMXUserPreferences.java", "BodyUseAPI": [], "Fixed commit": "90abc9c817a9982029c17ac9ead263668dce60c5", "Url": "https://api.github.com/repos/magnetsystems/message-sdk-java-android", "Date": "2016-03-08T07:21:01Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (expr instanceof org.apache.marmotta.kiwi.sparql.evaluation.Bound) { return true; }else if (expr instanceof org.apache.marmotta.kiwi.sparql.evaluation.IsResource) { return org.apache.marmotta.kiwi.sparql.evaluation.KiWiEvaluationStrategyImpl.isAtomic(((org.apache.marmotta.kiwi.sparql.evaluation.UnaryValueOperator) (expr)).getArg()); }else if (expr instanceof org.apache.marmotta.kiwi.sparql.evaluation.IsURI) { return org.apache.marmotta.kiwi.sparql.evaluation.KiWiEvaluationStrategyImpl.isAtomic(((org.apache.marmotta.kiwi.sparql.evaluation.UnaryValueOperator) (expr)).getArg()); }else if (expr instanceof org.apache.marmotta.kiwi.sparql.evaluation.IsBNode) { return org.apache.marmotta.kiwi.sparql.evaluation.KiWiEvaluationStrategyImpl.isAtomic(((org.apache.marmotta.kiwi.sparql.evaluation.UnaryValueOperator) (expr)).getArg()); }else if (expr instanceof org.apache.marmotta.kiwi.sparql.evaluation.IsLiteral) { return org.apache.marmotta.kiwi.sparql.evaluation.KiWiEvaluationStrategyImpl.isAtomic(((org.apache.marmotta.kiwi.sparql.evaluation.UnaryValueOperator) (expr)).getArg()); }else if (expr instanceof org.apache.marmotta.kiwi.sparql.evaluation.Lang) { return org.apache.marmotta.kiwi.sparql.evaluation.KiWiEvaluationStrategyImpl.isAtomic(((org.apache.marmotta.kiwi.sparql.evaluation.Lang) (expr)).getArg()); }else if (expr instanceof org.apache.marmotta.kiwi.sparql.evaluation.LangMatches) { return (isSupported(((org.apache.marmotta.kiwi.sparql.evaluation.LangMatches) (expr)).getLeftArg())) && (org.apache.marmotta.kiwi.sparql.evaluation.KiWiEvaluationStrategyImpl.isConstant(((org.apache.marmotta.kiwi.sparql.evaluation.LangMatches) (expr)).getRightArg())); }else if (expr instanceof org.apache.marmotta.kiwi.sparql.evaluation.Regex) { org.apache.marmotta.kiwi.sparql.evaluation.ValueExpr flags = ((org.apache.marmotta.kiwi.sparql.evaluation.Regex) (expr)).getFlagsArg(); java.lang.String _flags = ((flags != null) && (flags instanceof org.apache.marmotta.kiwi.sparql.evaluation.ValueConstant)) ? ((org.apache.marmotta.kiwi.sparql.evaluation.ValueConstant) (flags)).getValue().stringValue() : null; return ((isSupported(((org.apache.marmotta.kiwi.sparql.evaluation.Regex) (expr)).getArg())) && (org.apache.marmotta.kiwi.sparql.evaluation.KiWiEvaluationStrategyImpl.isAtomic(((org.apache.marmotta.kiwi.sparql.evaluation.Regex) (expr)).getPatternArg()))) && (connection.getDialect().isRegexpSupported(_flags)); }else if (expr instanceof org.apache.marmotta.kiwi.sparql.evaluation.FunctionCall) { return isFunctionSupported(((org.apache.marmotta.kiwi.sparql.evaluation.FunctionCall) (expr))); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5550/buggy-version/libraries.kiwi.kiwi-sparql.src.main.java.org.apache.marmotta.kiwi.sparql.evaluation.KiWiEvaluationStrategyImpl.java", "BodyUseAPI": [], "Fixed commit": "d8e0e30ce8e088a0b9f1eff6f5ad07e5a8f2ea5b", "Url": "https://api.github.com/repos/apache/marmotta", "Date": "2014-10-06T09:27:47Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"GET\".equals(method))) { urlConnection.setRequestProperty(\"Transfer-Encoding\", \"chunked\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1637/buggy-version/src.main.java.fr.unix_experience.owncloud_sms.engine.OCHttpClient.java", "BodyUseAPI": [], "Fixed commit": "d12bd8b83568ac43139f83e9a2374fdda8ea74a5", "Url": "https://api.github.com/repos/nerzhul/ownCloud-SMS-App", "Date": "2017-12-06T20:11:42Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getState().zoomToExtent) != null) { org.vaadin.addon.leaflet.shared.Bounds b = getState().zoomToExtent; org.peimari.gleaflet.client.LatLng northEast = org.peimari.gleaflet.client.LatLng.create(b.getNorthEastLat(), b.getNorthEastLon()); org.peimari.gleaflet.client.LatLng southWest = org.peimari.gleaflet.client.LatLng.create(b.getSouthWestLat(), b.getSouthWestLon()); map.fitBounds(org.peimari.gleaflet.client.LatLngBounds.create(southWest, northEast)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2085/buggy-version/src.main.java.org.vaadin.addon.leaflet.client.vaadin.LeafletMapConnector.java", "BodyUseAPI": [], "Fixed commit": "da488f8fa2910a8aba19ebe90b6bea4dc7f19ad2", "Url": "https://api.github.com/repos/mstahv/v-leaflet", "Date": "2013-10-18T08:17:35Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.visma.autosysmonitor.da.MonitorUpdater.updateSystem(com.visma.autosysmonitor.domain.MonitorDTO)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (sys != null) return sys.toMonitorDTO();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4238/buggy-version/src.main.java.com.visma.autosysmonitor.controller.HomeController.java", "BodyUseAPI": ["com.visma.autosysmonitor.domain.Monitor.toMonitorDTO()"], "Fixed commit": "7810394231fa7a8a56b69f1099009a402a472853", "Url": "https://api.github.com/repos/nordsoyv/AutosysMonitorWebapp", "Date": "2012-05-29T13:02:06Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rottenApples == (itemNumber)) { items.remove(item); do { item = control.ItemSpawner.getRandomItem(); } while (item instanceof model.item.RottenApple ); items.add(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1764/buggy-version/src.model.Level.java", "BodyUseAPI": [], "Fixed commit": "74fa2101dd8a5c7cd7044005f74075a8d34fb0cc", "Url": "https://api.github.com/repos/armbruer/Snake", "Date": "2015-07-10T16:13:20Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item instanceof model.item.RottenApple) rottenApples++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1764/buggy-version/src.model.Level.java", "BodyUseAPI": [], "Fixed commit": "74fa2101dd8a5c7cd7044005f74075a8d34fb0cc", "Url": "https://api.github.com/repos/armbruer/Snake", "Date": "2015-07-10T16:13:20Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (d instanceof java.lang.Integer) obj.append(field.getName(), ((java.lang.Integer) (d))); else if (d instanceof com.mongodb.hadoop.pig.DataByteArray) obj.append(field.getName(), java.lang.Integer.parseInt(d.toString())); else { throw new java.io.IOException(((\"Schema lists field \" + (field.getName())) + \"as an int, but value was not an int or bytearray.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/855/buggy-version/pig.src.main.java.com.mongodb.hadoop.pig.MongoStorage.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "com.mongodb.hadoop.pig.BasicDBObject.append(field.getName(),int)", "java.lang.Object.toString()"], "Fixed commit": "a96b4bb91560f00879db6c68911b29a75c66962e", "Url": "https://api.github.com/repos/AsherBond/mongo-hadoop", "Date": "2013-01-28T16:05:53Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (d instanceof java.lang.Float) obj.append(field.getName(), ((java.lang.Float) (d))); else if (d instanceof com.mongodb.hadoop.pig.DataByteArray) obj.append(field.getName(), java.lang.Float.parseFloat(d.toString())); else { throw new java.io.IOException(((\"Schema lists field \" + (field.getName())) + \"as a float, but value was not a float or bytearray.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/855/buggy-version/pig.src.main.java.com.mongodb.hadoop.pig.MongoStorage.java", "BodyUseAPI": ["java.lang.Float.parseFloat(java.lang.String)", "java.lang.Object.toString()", "com.mongodb.hadoop.pig.BasicDBObject.append(field.getName(),float)"], "Fixed commit": "a96b4bb91560f00879db6c68911b29a75c66962e", "Url": "https://api.github.com/repos/AsherBond/mongo-hadoop", "Date": "2013-01-28T16:05:53Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (d instanceof java.lang.Double) obj.append(field.getName(), ((java.lang.Double) (d))); else if (d instanceof com.mongodb.hadoop.pig.DataByteArray) obj.append(field.getName(), java.lang.Double.parseDouble(d.toString())); else { throw new java.io.IOException(((\"Schema lists field \" + (field.getName())) + \"as a double, but value was not a double or bytearray.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/855/buggy-version/pig.src.main.java.com.mongodb.hadoop.pig.MongoStorage.java", "BodyUseAPI": ["com.mongodb.hadoop.pig.BasicDBObject.append(field.getName(),double)", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "a96b4bb91560f00879db6c68911b29a75c66962e", "Url": "https://api.github.com/repos/AsherBond/mongo-hadoop", "Date": "2013-01-28T16:05:53Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (d instanceof java.lang.Long) obj.append(field.getName(), ((java.lang.Long) (d))); else if (d instanceof com.mongodb.hadoop.pig.DataByteArray) obj.append(field.getName(), java.lang.Long.parseLong(d.toString())); else { throw new java.io.IOException(((\"Schema lists field \" + (field.getName())) + \"as a long, but value was not a long or bytearray.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/855/buggy-version/pig.src.main.java.com.mongodb.hadoop.pig.MongoStorage.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)", "java.lang.Object.toString()", "com.mongodb.hadoop.pig.BasicDBObject.append(field.getName(),long)"], "Fixed commit": "a96b4bb91560f00879db6c68911b29a75c66962e", "Url": "https://api.github.com/repos/AsherBond/mongo-hadoop", "Date": "2013-01-28T16:05:53Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (wrongVarID == null) { return currentNode; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3220/buggy-version/microbat.src.main.microbat.recommendation.StepRecommender.java", "BodyUseAPI": [], "Fixed commit": "6fa805f5331c5d706c389ae89ee9ea8e067add2b", "Url": "https://api.github.com/repos/sunjun-group/Ziyuan", "Date": "2016-05-15T10:09:17Z"},
{"Line": "=>677", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (getActivity())) { android.widget.Toast.makeText(getActivity(), getActivity().getString(R.string.could_not_redact), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8076/buggy-version/matrix-sdk.src.main.java.org.matrix.androidsdk.fragments.MatrixMessageListFragment.java", "BodyUseAPI": [], "Fixed commit": "0be0d308624933f0f0a839e7746684e7e95edf6a", "Url": "https://api.github.com/repos/matrix-org/matrix-android-sdk", "Date": "2016-08-29T07:50:16Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((numbers.size()) > 0) { numbers.remove(((numbers.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5830/buggy-version/app.src.main.java.com.jessie.guessnumber.MainActivity.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.remove(int)"], "Fixed commit": "dc827b8dd5397e8d30fd6649cad40e62488bacba", "Url": "https://api.github.com/repos/JessieDing/GuessNumberGame_Android", "Date": "2016-11-15T15:22:55Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chooseWorkResponse.getMessage().trim().equals(\"SCHEDULE_DUPLICATED\")) { com.hbbsolution.maid.utils.ShowAlertDialog.showAlert(getResources().getString(R.string.schedule_duplicated_choose_maid), this); }else { com.hbbsolution.maid.utils.ShowAlertDialog.showAlert(getResources().getString(R.string.choose_work_failed), this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8184/buggy-version/app.src.main.java.com.hbbsolution.maid.home.job_detail.view.JobDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "86e0cecc0348981eb68ff67762f9e7a69c8666aa", "Url": "https://api.github.com/repos/thanhduy26091995/Maid", "Date": "2017-08-02T02:13:33Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (es != null) { double v = es.getScores().get(i); if ((java.lang.Double.isNaN(v)) || (java.lang.Double.isInfinite(v))) { sumMissingScores += es.getKnownSim().similarity; numMissingScores++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6038/buggy-version/wikibrain-sr.src.main.java.org.wikibrain.sr.ensemble.Interpolator.java", "BodyUseAPI": ["es.getScores().get(int)", "org.wikibrain.sr.ensemble.EnsembleSim.getScores()", "org.wikibrain.sr.ensemble.EnsembleSim.getKnownSim()"], "Fixed commit": "e91c79f9a4d43ee1ca709d33c43505e09cfcaae0", "Url": "https://api.github.com/repos/leusonmario/wikibrain", "Date": "2014-05-26T19:08:39Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasContinuation) { println(\"...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4004/buggy-version/src.main.java.ch.tkuhn.nanopub.server.NanopubListPage.java", "BodyUseAPI": [], "Fixed commit": "4a9ac7aa0abc144ee07dadb141f57c291c5e3697", "Url": "https://api.github.com/repos/tkuhn/nanopub-server", "Date": "2014-05-16T09:55:41Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (use18specifics && (isPolyExpression())) { if ((this.expectedType) == null) return new org.eclipse.jdt.internal.compiler.ast.PolyTypeBinding(this); return this.resolvedType = this.expectedType; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1075/buggy-version/org.eclipse.jdt.core.compiler.org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.java", "BodyUseAPI": [], "Fixed commit": "f200f8d976d56839e6f0d721d690d85cc3afbb03", "Url": "https://api.github.com/repos/Overruler/eclipse.jdt.core", "Date": "2014-01-21T06:35:23Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<lk.ac.mrt.cse.Connection>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (randomNum >= max) randomNum = max - 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3080/buggy-version/src.main.java.lk.ac.mrt.cse.Client.java", "BodyUseAPI": [], "Fixed commit": "655c0cad41036b67b0f86a2d09e2996bc2757c1a", "Url": "https://api.github.com/repos/arachchi/DistributedSystemProject", "Date": "2016-02-06T05:24:28Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((valueCode.length()) < 4) { valueCode += \"\" + (((int) (decade)) - 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6974/buggy-version/src.main.java.com.devsmart.kicadbom.generic.PanasonicSMDResistor.java", "BodyUseAPI": [], "Fixed commit": "f8396d998f36c3ba7e250d3ff9c4c0606449729a", "Url": "https://api.github.com/repos/dinocore1/KiCadBOMGenerator", "Date": "2017-04-10T18:37:14Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!found) { java.lang.String callId = ((gov.nist.javax.sip.header.SIPHeader) (response.getHeader(headerName))).getValue(); org.mobicents.tools.sip.balancer.SIPNode node = callIdMap.get(callId); if ((node == null) || (!(invocationContext.nodes.contains(node)))) { node = selectNewNode(node, callId); java.lang.String transportProperty = transport + \"Port\"; port = ((java.lang.Integer) (node.getProperties().get(transportProperty))); if (port == null) throw new java.lang.RuntimeException((((\"No transport found for node \" + node) + \" \") + transportProperty)); if (org.mobicents.tools.sip.balancer.CallIDAffinityBalancerAlgorithm.logger.isDebugEnabled()) { org.mobicents.tools.sip.balancer.CallIDAffinityBalancerAlgorithm.logger.debug((((((\"changing via \" + via) + \"setting new values \") + (node.getIp())) + \":\") + port)); } try { via.setHost(node.getIp()); via.setPort(port); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException((((((\"Error setting new values \" + (node.getIp())) + \":\") + port) + \" on via \") + via), e); } if (!(ListeningPoint.UDP.equalsIgnoreCase(transport))) { via.setRPort(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3069/buggy-version/jar.src.main.java.org.mobicents.tools.sip.balancer.CallIDAffinityBalancerAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "e76c37ab8a158c9bbdda2db392b3602635f9f4c4", "Url": "https://api.github.com/repos/SergeyLee/load-balancer", "Date": "2016-02-04T16:11:18Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.mobicents.tools.sip.balancer.CallIDAffinityBalancerAlgorithm.logger.isDebugEnabled()) { org.mobicents.tools.sip.balancer.CallIDAffinityBalancerAlgorithm.logger.debug((\"external response node found ? \" + found)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3069/buggy-version/jar.src.main.java.org.mobicents.tools.sip.balancer.CallIDAffinityBalancerAlgorithm.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "e76c37ab8a158c9bbdda2db392b3602635f9f4c4", "Url": "https://api.github.com/repos/SergeyLee/load-balancer", "Date": "2016-02-04T16:11:18Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((watcherThread) != null) { watcherThread.interrupt(); watcherThread = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1371/buggy-version/src.main.java.ninja.eivind.hotsreplayuploader.files.tempwatcher.BattleLobbyWatcher.java", "BodyUseAPI": [], "Fixed commit": "c1eb3af7e9396b04400547943f3a5a7038bdc2e7", "Url": "https://api.github.com/repos/eivindveg/HotSUploader", "Date": "2016-08-31T15:34:29Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((watcherThread) != null) { watcherThread.interrupt(); watcherThread = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1371/buggy-version/src.main.java.ninja.eivind.hotsreplayuploader.files.tempwatcher.RecursiveTempWatcher.java", "BodyUseAPI": [], "Fixed commit": "c1eb3af7e9396b04400547943f3a5a7038bdc2e7", "Url": "https://api.github.com/repos/eivindveg/HotSUploader", "Date": "2016-08-31T15:34:29Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (noMoreItemsToFetch) { adapter.setHideProgressBar(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1272/buggy-version/app.src.main.java.ba.abh.internship.amarburic.popularmovies.ui.fragments.MovieListFragment.java", "BodyUseAPI": [], "Fixed commit": "d56a8bde930342e3c1a4e7e3f2567bde1f54bb27", "Url": "https://api.github.com/repos/amarburic/Popular-Movies", "Date": "2017-11-15T04:54:20Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (noMoreItemsToFetch) { adapter.setHideProgressBar(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1272/buggy-version/app.src.main.java.ba.abh.internship.amarburic.popularmovies.ui.fragments.TvShowListFragment.java", "BodyUseAPI": [], "Fixed commit": "d56a8bde930342e3c1a4e7e3f2567bde1f54bb27", "Url": "https://api.github.com/repos/amarburic/Popular-Movies", "Date": "2017-11-15T04:54:20Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (evilcraft.Configs.isEnabled(evilcraft.entity.villager.WerewolfVillagerConfig.class)) { this.villagerNBTTagCompound.setInteger(\"Profession\", WerewolfVillagerConfig._instance.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2318/buggy-version/src.main.java.evilcraft.entity.monster.Werewolf.java", "BodyUseAPI": [], "Fixed commit": "88a1110e8601c23133d54edd3596dc48120be506", "Url": "https://api.github.com/repos/CyclopsMC/EvilCraft", "Date": "2016-02-21T10:29:51Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((++i) >= (com.spacepocalypse.beermap2.web.AndroidController.MAX_SEARCH_RESULTS_OF_IDS_SIZE)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/83/buggy-version/src.main.java.com.spacepocalypse.beermap2.web.AndroidController.java", "BodyUseAPI": [], "Fixed commit": "e3d8f0fcb820087e3f48868229d5c50438982527", "Url": "https://api.github.com/repos/youcaughtafish/beermap2", "Date": "2012-05-04T16:19:27Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((internetConnectionLostDialog) != null) { internetConnectionLostDialog.dismiss(); internetConnectionLostDialog = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2689/buggy-version/app.src.main.java.com.blstream.as.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d1499068585747cbf2bb27130c48c8cae1be246a", "Url": "https://api.github.com/repos/blstream/AugmentedSzczecin_Android", "Date": "2015-06-06T10:13:15Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((userInformantStorage.getUserMovies(userId).size()) + (moviesId.length)) > 10) { throw new java.lang.Exception(\"User can not have more than 10 movies.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8236/buggy-version/src.main.java.pl.mszkwarkowski.api.UserController.java", "BodyUseAPI": [], "Fixed commit": "d23e1d33dea985d7decccb0fdf8580ba08aec6ea", "Url": "https://api.github.com/repos/MateuszSz93/FirstTask", "Date": "2017-01-16T20:39:18Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ExceptionDispatcherResourceDefinition.BLACKLIST.resolveModelAttribute(cz.muni.exceptions.OperationContext,org.jboss.dmr.ModelNode)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(blacklistItems.isDefined())) { return blacklistPatterns; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/9016/buggy-version/src.main.java.cz.muni.exceptions.ExceptionDispatcherAddHandler.java", "BodyUseAPI": [], "Fixed commit": "26c552eb8be7874ca8402460f2a3eab7e0f3ef1b", "Url": "https://api.github.com/repos/iref/wildfly-exceptions", "Date": "2014-04-23T16:24:36Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["appeng.block.storage.BlockChest.getTileEntity(net.minecraft.world.World,int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (GuiBridge.GUI_CHEST.hasPermissions(tg, x, y, z, net.minecraftforge.common.util.ForgeDirection.values()[side], p)) { tg.openGui(p, ch, cell, side); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6392/buggy-version/src.main.java.appeng.block.storage.BlockChest.java", "BodyUseAPI": ["appeng.tile.storage.TileChest.openGui(net.minecraft.entity.player.EntityPlayer,appeng.api.storage.ICellHandler,net.minecraft.item.ItemStack,int)"], "Fixed commit": "3cfae2d9d456a25344cc6eb18c1fea0113eaac79", "Url": "https://api.github.com/repos/thepaperpilot/Applied-Energistics-2", "Date": "2014-09-25T22:25:31Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.Shape.getBounds2D()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((bounds.getWidth()) == 0) || ((bounds.getHeight()) == 0)) { throw new java.lang.Exception(\"Invalid footprint found, unable to create template for fiducial match. Width and height of pads must be greater than 0. See https://github.com/openpnp/openpnp/wiki/Fiducials.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3655/buggy-version/src.main.java.org.openpnp.machine.reference.vision.ReferenceFiducialLocator.java", "BodyUseAPI": [], "Fixed commit": "87f64cd79741e4346019a95ee5ec2e1bde5345e3", "Url": "https://api.github.com/repos/openpnp/openpnp", "Date": "2016-11-04T04:41:18Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((query.getBaseURI()) != null) { qdef.setBaseUri(query.getBaseURI()); }else { query.setBaseURI(((java.lang.String) (null))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4522/buggy-version/marklogic-jena.src.main.java.com.marklogic.semantics.jena.engine.MarkLogicQueryEngine.java", "BodyUseAPI": ["com.hp.hpl.jena.query.Query.setBaseURI(<nulltype>)", "com.marklogic.client.semantics.SPARQLQueryDefinition.setBaseUri(query.getBaseURI())", "com.hp.hpl.jena.query.Query.getBaseURI()"], "Fixed commit": "3cd0cc39c93654a03b544f59bb75e4f032ad8821", "Url": "https://api.github.com/repos/marklogic/marklogic-jena", "Date": "2015-09-14T15:58:35Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(value.equals(data.get(key)))) logger.info((((\"Replacing: \" + value) + \" with: \") + (data.get(key))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6973/buggy-version/sos.sos-util.src.main.java.sorcer.util.eval.PropertyEvaluator.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "c667cd7f87ffbf39fc3d240f60cfc79450aef3e0", "Url": "https://api.github.com/repos/sorcersoft/sorcer", "Date": "2014-05-27T17:31:46Z"},
{"Line": "=>658", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ucar.unidata.util.GuiUtils.makePopupMenu(java.util.List)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (popup != null) popup.show(centerPopupBtn, e.getX(), ((int) (popup.getBounds().getHeight())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4610/buggy-version/src.ucar.unidata.idv.chooser.TimesChooser.java", "BodyUseAPI": ["java.awt.Rectangle.getHeight()", "javax.swing.JPopupMenu.show(javax.swing.JButton,int,double)", "javax.swing.JPopupMenu.getBounds()"], "Fixed commit": "6e42d411653417c9a9bd1604d9e2b15e5cbb488a", "Url": "https://api.github.com/repos/lesserwhirls/IDV", "Date": "2012-08-10T22:26:58Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.uic.webbasederp.mapper.InspectionMapper.getInspectionByProductId(inspection.getProductId(),inspection.getInspectDate())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (dbInspection == null) { inspectionMapper.saveInspection(inspection); }else { inspection.setAcceptableNumber(((inspection.getAcceptableNumber()) + (dbInspection.getAcceptableNumber()))); inspection.setDefectName((((dbInspection.getDefectName()) + \",\") + (inspection.getDefectName()))); inspection.setDefectDescription((((dbInspection.getDefectDescription()) + \",\") + (inspection.getDefectDescription()))); inspection.setInspectNumber(((inspection.getInspectNumber()) + (dbInspection.getInspectNumber()))); inspection.setAcceptableRate((((inspection.getAcceptableNumber()) * 1.0) / (inspection.getInspectNumber()))); inspectionMapper.updateInspection(inspection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7027/buggy-version/src.main.java.com.uic.webbasederp.service.impl.InspectionServiceImpl.java", "BodyUseAPI": ["com.uic.webbasederp.domain.po.Inspection.getAcceptableNumber()", "com.uic.webbasederp.domain.po.Inspection.getDefectDescription()", "com.uic.webbasederp.domain.po.Inspection.setAcceptableNumber(((inspection.getAcceptableNumber()) + (dbInspection.getAcceptableNumber())))", "com.uic.webbasederp.domain.po.Inspection.getInspectNumber()", "com.uic.webbasederp.domain.po.Inspection.getDefectName()", "com.uic.webbasederp.domain.po.Inspection.setDefectName((((dbInspection.getDefectName()) + \",\") + (inspection.getDefectName())))", "com.uic.webbasederp.domain.po.Inspection.setInspectNumber(((inspection.getInspectNumber()) + (dbInspection.getInspectNumber())))", "com.uic.webbasederp.domain.po.Inspection.setDefectDescription((((dbInspection.getDefectDescription()) + \",\") + (inspection.getDefectDescription())))"], "Fixed commit": "1fc0f7a1f09739a91abf24bf896a3ee5b8909dbf", "Url": "https://api.github.com/repos/asdasdwwyy/web-based-erp", "Date": "2017-11-12T16:03:36Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isMailTask) { this.terminate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8873/buggy-version/src.main.java.de.uni_potsdam.hpi.bpt.bp2014.jcore.ActivityInstance.java", "BodyUseAPI": [], "Fixed commit": "3f4dab97211637f5622b3f459b74988f0f38286d", "Url": "https://api.github.com/repos/BP2014W1/JEngine", "Date": "2015-03-16T14:44:16Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((savedUri) != null) fillData(savedUri);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/9206/buggy-version/SRBase.src.com.gmail.emerssso.srbase.EditDailyActivity.java", "BodyUseAPI": [], "Fixed commit": "940a322b00ca6cd04e63b7002ca9c7eac7a28fea", "Url": "https://api.github.com/repos/emerssso/SRBase", "Date": "2014-01-17T17:06:35Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<tr.com.lucidcode.pojo.DateValue>>>>.get(Strings.DILUTED_EPS)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((typeScripDataMap == null) || ((typeScripDataMap.size()) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6911/buggy-version/src.main.java.tr.com.lucidcode.service.ScripsDataService.java", "BodyUseAPI": [], "Fixed commit": "e6e8fbf2f37a9800d2115ff79127ed7ff67d53de", "Url": "https://api.github.com/repos/shankey/Finance", "Date": "2017-08-22T15:47:48Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((totalTasks) < 0) { totalTasks = 0; totalTime = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4825/buggy-version/src.main.java.com.opshack.jimi.MetricExecutor.java", "BodyUseAPI": [], "Fixed commit": "abf39486d8bf6cada1db870b7b182143e988d2d1", "Url": "https://api.github.com/repos/arozhkov/jimi-robot", "Date": "2013-12-18T18:38:32Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Float.parseFloat(numberOfBases)) < 0) { throw new java.lang.Exception(\"lessThanZero\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5073/buggy-version/src.com.lab.assignment.august8.BattingStatisticsExplorer.java", "BodyUseAPI": [], "Fixed commit": "e577c8744b197d45bc570f4665934b3519efbf8a", "Url": "https://api.github.com/repos/MaryChes/August8th", "Date": "2016-08-09T20:54:33Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Femme.getProperty(\"lblPrenom\").toString().equals(\"anyType{}\")) { femmeMenage.setPrenom(\"\"); }else { femmeMenage.setPrenom(Femme.getProperty(\"lblPrenom\").toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4921/buggy-version/app.src.main.java.com.hotix.myhotixhousekeeping.FemmeMenage.java", "BodyUseAPI": ["com.hotix.myhotixhousekeeping.model.FMenage.setPrenom(Femme.getProperty(\"lblPrenom\").toString())", "org.ksoap2.serialization.SoapObject.getProperty(java.lang.String)", "Femme.getProperty(\"lblPrenom\").toString()"], "Fixed commit": "7e7ff606ab0eac939d04d73b473719451e9d05e6", "Url": "https://api.github.com/repos/ziedrebhi/MyHotixHouseKeeping", "Date": "2017-03-01T12:01:14Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type.equals(java.io.File.class.getName())) { return \"string\"; }else if (type.startsWith(\"java.lang.Class\")) { return \"string\"; }else if ((type.startsWith(\"java.util.List\")) || (type.startsWith(\"java.util.Collection\"))) { return \"array\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5964/buggy-version/tooling.apt.src.main.java.org.apache.camel.tools.apt.helper.JsonSchemaHelper.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "9ed3ea1f2426ba988654ac74f15d42288024edc7", "Url": "https://api.github.com/repos/sarwarbhuiyan/camel", "Date": "2015-12-31T09:02:16Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["loci.formats.in.SDTReader.getSizeX()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((paddedWidth > sizeX) && ((planeSize * (getSizeC())) > blockSize)) && ((((planeSize / paddedWidth) * sizeX) * (getSizeC())) <= blockSize)) { paddedWidth = sizeX; planeSize = ((sizeX * sizeY) * times) * bpp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3011/buggy-version/components.formats-gpl.src.loci.formats.in.SDTReader.java", "BodyUseAPI": [], "Fixed commit": "45a2b155423f5246bf3415ef557ee10b212a2db3", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-02-23T03:01:13Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((run.getResult()) == null) { log(listener.getLogger(), (\"Build was not finished correctly. Is not compeleted yet: \" + (run.isBuilding()))); run.setResult(Result.UNSTABLE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5412/buggy-version/src.main.java.hudson.plugins.s3.S3BucketPublisher.java", "BodyUseAPI": ["hudson.plugins.s3.S3BucketPublisher.log(listener.getLogger(),(\"Build was not finished correctly. Is not compeleted yet: \" + (run.isBuilding())))", "hudson.plugins.s3.Run<?, ?>.setResult(Result.UNSTABLE)", "hudson.plugins.s3.Run<?, ?>.isBuilding()"], "Fixed commit": "fad4ffc4fe9d1b04f5c2c5fc50b6212a04ba7991", "Url": "https://api.github.com/repos/coresecure/s3-plugin", "Date": "2016-04-19T06:58:33Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((LogicMain.bufferList.size()) != 0) { returnTask = new Task(packageTasks.get(0)); returnTask.editState(OperationsConstant.VIEW_OPERATION); packageTasks.set(0, returnTask); }else { returnTask = new Task(\"<empty>\"); returnTask.editState(OperationsConstant.VIEW_OPERATION); LogicMain.bufferList.add(returnTask); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1424/buggy-version/Logic.LogicMain.java", "BodyUseAPI": ["java.util.LinkedList<Task>.add(Task)"], "Fixed commit": "77a125253e02688dd5a8b82439004b43b1f6b62c", "Url": "https://api.github.com/repos/cs2103aug2014-t15-3j/main", "Date": "2014-10-08T07:40:51Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ML.GMMUtils.matrixSum(double[][],int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((NK[i]) == 0) { NK[i] += 1.0E-20; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/596/buggy-version/src.ML.GMMAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "a064cec09a37b99b6d7cc8da03e644b62d5ee2a3", "Url": "https://api.github.com/repos/EddiePi/tracing-server", "Date": "2017-04-25T19:36:08Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.core.dom.ITypeBinding.getBound()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bound == null) { return wildcardSymbol(unboundedSym()); }else { return wildcardSymbol(boundSymbol(binding.getBound())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2801/buggy-version/src.org.rascalmpl.library.lang.java.m3.internal.BindingsResolver.java", "BodyUseAPI": [], "Fixed commit": "a5759a532c89f043f645fcbecad94d1ba8e18e38", "Url": "https://api.github.com/repos/cwi-swat/rascal", "Date": "2013-09-12T08:16:32Z"},
{"Line": "=>2330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.kmelia.control.ejb.KmeliaBmEJB.getPublicationDetail(com.stratelia.webactiv.util.publication.model.PublicationPK)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (publication.isValidationRequired()) { sendValidationAlert(publication, validatorIds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5611/buggy-version/kmelia.kmelia-ejb.src.main.java.com.stratelia.webactiv.kmelia.control.ejb.KmeliaBmEJB.java", "BodyUseAPI": ["com.stratelia.webactiv.kmelia.control.ejb.KmeliaBmEJB.sendValidationAlert(com.stratelia.webactiv.util.publication.model.PublicationDetail,java.lang.String[])"], "Fixed commit": "59dd023fc9a1ce99907ed1f7513447c0399d5795", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Components", "Date": "2016-07-20T12:36:49Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (filter.isLeftMost()) { rewriteRightEnds(newNonterminal, filter.getChild()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4652/buggy-version/src.org.jgll.grammar.Grammar.java", "BodyUseAPI": ["org.jgll.grammar.Filter.getChild()", "org.jgll.grammar.Grammar.rewriteRightEnds(org.jgll.grammar.HeadGrammarSlot,filter.getChild())"], "Fixed commit": "8168b70d0d218d4eb6892f293e0c77bcc07d6b2b", "Url": "https://api.github.com/repos/cwi-swat/jigll", "Date": "2013-05-15T23:26:04Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((errorCodes.getId()) == 38) { showSyncDialog = true; showMergeDialog = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5289/buggy-version/Sample-SDK-Application.app.src.main.java.com.spilgames.samplesdkapplication.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "303e39ae630c9c36951f1f59e7351618d3e253d4", "Url": "https://api.github.com/repos/spilgames/spil-android-sdk", "Date": "2017-11-14T10:13:24Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["overwatch.db.Database.query(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(ers.isEmpty())) { tab.number.field.setText((\"\" + (ers.getElemAs(\"personNo\", java.lang.Integer.class)))); tab.name.field.setText(ers.getElemAs(\"personName\", java.lang.String.class)); tab.age.field.setText((\"\" + (ers.getElemAs(\"age\", java.lang.Integer.class)))); tab.sex.field.setText(ers.getElemAs(\"sex\", java.lang.String.class)); tab.salary.field.setText((\"\" + (ers.getElemAs(\"salary\", java.math.BigDecimal.class)))); tab.rank.field.setText(ers.getElemAs(\"rankName\", java.lang.String.class)); }else { overwatch.core.Gui.showErrorDialogue(\"No longer exists\", \"The selected person no longer exists\"); populateList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/222/buggy-version/overwatch.src.overwatch.controllers.PersonnelLogic.java", "BodyUseAPI": ["overwatch.db.EnhancedResultSet.getElemAs(java.lang.String,java.lang.Class)", "tab.rank.field.setText(ers.getElemAs(\"rankName\", java.lang.String.class))", "tab.sex.field.setText(ers.getElemAs(\"sex\", java.lang.String.class))", "overwatch.db.EnhancedResultSet.getElemAs(java.lang.String,java.lang.Class)", "tab.name.field.setText(ers.getElemAs(\"personName\", java.lang.String.class))", "overwatch.db.EnhancedResultSet.getElemAs(java.lang.String,java.lang.Class)", "tab.salary.field.setText((\"\" + (ers.getElemAs(\"salary\", java.math.BigDecimal.class))))", "overwatch.db.EnhancedResultSet.getElemAs(java.lang.String,java.lang.Class)", "overwatch.db.EnhancedResultSet.getElemAs(java.lang.String,java.lang.Class)", "tab.age.field.setText((\"\" + (ers.getElemAs(\"age\", java.lang.Integer.class))))", "overwatch.db.EnhancedResultSet.getElemAs(java.lang.String,java.lang.Class)", "tab.number.field.setText((\"\" + (ers.getElemAs(\"personNo\", java.lang.Integer.class))))"], "Fixed commit": "59a968146ec57fcec90f82b6777d1813a4846f0f", "Url": "https://api.github.com/repos/LeeCIT/overwatch", "Date": "2013-04-11T00:50:31Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.InputStream.read(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size < 0) { running = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6261/buggy-version/Chat.src.Communications.TCPReceiverThread.java", "BodyUseAPI": [], "Fixed commit": "eb0eea254c5b706e322e0cf879221ed6c0657ae5", "Url": "https://api.github.com/repos/ragnarok089/CS544", "Date": "2013-06-07T18:06:39Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.mkyong.android.GridViewActivity.MOBILE_tmp[0]) == (com.mkyong.android.GridViewActivity.sCharacters[2])) { if ((com.mkyong.android.GridViewActivity.MOBILE_OS[position]) == (com.mkyong.android.GridViewActivity.sCharacters[3])) { return 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4546/buggy-version/src.com.mkyong.android.GridViewActivity.java", "BodyUseAPI": [], "Fixed commit": "b4d7c447d8827c965fe5f43bf23ba9d158ea2b77", "Url": "https://api.github.com/repos/ShowLove/androidGame", "Date": "2013-11-04T18:08:19Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hatDeath(position)) == 1) { newGame(); updateGameBoard(); gridView.setAdapter(myAdapter); initialClick = 1; }else if (((validIndex(posTmp, position)) == 1) && ((restrictHat(position)) == 0)) { switch (keyPressed(position, posTmp)) { case 0 : newGame(); updateGameBoard(); gridView.setAdapter(myAdapter); initialClick = 1; break; case 1 : com.mkyong.android.GridViewActivity.MOBILE_OS[posTmp] = \"Ground\"; com.mkyong.android.GridViewActivity.MOBILE_OS[position] = com.mkyong.android.GridViewActivity.MOBILE_tmp[0]; gridView.setAdapter(myAdapter); break; case 2 : com.mkyong.android.GridViewActivity.MOBILE_OS[posTmp] = \"Ground\"; com.mkyong.android.GridViewActivity.MOBILE_OS[jumpPos] = com.mkyong.android.GridViewActivity.MOBILE_tmp[0]; gridView.setAdapter(myAdapter); break; default : break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4546/buggy-version/src.com.mkyong.android.GridViewActivity.java", "BodyUseAPI": ["com.mkyong.android.GridViewActivity.1.keyPressed(int,int)", "com.mkyong.android.GridViewActivity.1.validIndex(int,int)", "com.mkyong.android.GridViewActivity.1.restrictHat(int)"], "Fixed commit": "b4d7c447d8827c965fe5f43bf23ba9d158ea2b77", "Url": "https://api.github.com/repos/ShowLove/androidGame", "Date": "2013-11-04T18:08:19Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["et_nickname.getText().toString()", "et_content.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((str_nickname.contains(\"<\")) || (str_nickname.contains(\">\"))) || (str_content.contains(\"<\"))) || (str_content.contains(\">\"))) android.widget.Toast.makeText(this, \"\\ufffd\\u0433\\ufffd\\ufffd\\u04f0\\ufffd \\ufffd\\ufffd\\u06ff\\ufffd \\\"<\\\"\\ufffd\\ufffd \\\">\\\"\\ufffd\\ufffd \\ufffd\\ufffd\\ufffd\\ufffd\\u03fd\\ufffd \\ufffd\\ufffd \\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\u03f4\\ufffd.\", Toast.LENGTH_SHORT).show(); else { new org.cclab.microsoft_gpsreceiver.board.CommentActivity.SendPostTask().execute(java.lang.String.valueOf(board.no), org.cclab.microsoft_gpsreceiver.Utility.getStudentId(this), et_nickname.getText().toString(), et_content.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4391/buggy-version/src.org.cclab.microsoft_gpsreceiver.board.CommentActivity.java", "BodyUseAPI": [], "Fixed commit": "36a4152923445a186ed52f31918368db125802cc", "Url": "https://api.github.com/repos/CCLab-Yonsei/2014_Microsoft_GPSReceiver", "Date": "2014-03-26T11:17:13Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (username == null) { throw new java.lang.IllegalArgumentException(\"Argument cannot be null.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3178/buggy-version/app.src.main.java.theunderjackets.com.rottentechmatoes.UserList.java", "BodyUseAPI": [], "Fixed commit": "fe37a759dc6762e3b4d2a972b3630122b77a69c6", "Url": "https://api.github.com/repos/TheUnderJackets/RottenTechmatoes", "Date": "2016-04-07T02:52:27Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (email == null) { throw new java.lang.IllegalArgumentException(\"Argument cannot be null.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3178/buggy-version/app.src.main.java.theunderjackets.com.rottentechmatoes.UserList.java", "BodyUseAPI": [], "Fixed commit": "fe37a759dc6762e3b4d2a972b3630122b77a69c6", "Url": "https://api.github.com/repos/TheUnderJackets/RottenTechmatoes", "Date": "2016-04-07T02:52:27Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (printProgressBar && ((this.total) > 0)) { io.println(fi.helsinki.cs.tmc.cli.io.TmcCliProgressObserver.getPassedTestsBar(passed, total)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/375/buggy-version/src.main.java.fi.helsinki.cs.tmc.cli.io.ResultPrinter.java", "BodyUseAPI": [], "Fixed commit": "2151246f5843fd4f7263cd2657e3aa89e763732c", "Url": "https://api.github.com/repos/testmycode/tmc-cli", "Date": "2016-06-16T11:24:46Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.service.persistence.LayoutUtil.fetchByCompanyId_First(long,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (companyLayout != null) { java.util.List<com.liferay.portlet.asset.model.AssetEntry> assetEntries = com.liferay.portlet.assetpublisher.util.AssetPublisherUtil.getAssetEntries(portletPreferences, companyLayout, groupId, max, false); return toJSONArray(assetEntries, locale); }else { return com.liferay.portal.kernel.json.JSONFactoryUtil.createJSONArray(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5600/buggy-version/webs.screens-web.docroot.WEB-INF.src.com.liferay.screens.service.impl.ScreensAssetEntryServiceImpl.java", "BodyUseAPI": ["com.liferay.portlet.assetpublisher.util.AssetPublisherUtil.getAssetEntries(javax.portlet.PortletPreferences,com.liferay.portal.model.Layout,long,int,boolean)"], "Fixed commit": "b9103c7cc9a7e042c60208ba75b97960177681f0", "Url": "https://api.github.com/repos/nhpatt/liferay-plugins", "Date": "2015-10-26T16:47:27Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (io.fabric8.utils.Strings.isNullOrBlank(metadata.getName())) { metadata.setName(project.getArtifactId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/140/buggy-version/plugin.src.main.java.io.fabric8.maven.plugin.ResourceMojo.java", "BodyUseAPI": ["io.fabric8.maven.plugin.ObjectMeta.setName(project.getArtifactId())"], "Fixed commit": "372d230dee53622422c04675a500c9212eefd7f9", "Url": "https://api.github.com/repos/fabric8io/fabric8-maven-plugin", "Date": "2016-05-24T14:55:33Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.fabric8.maven.plugin.HasMetadata.getMetadata()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (metadata == null) { metadata = new io.fabric8.maven.plugin.ObjectMeta(); hasMeta.setMetadata(metadata); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/140/buggy-version/plugin.src.main.java.io.fabric8.maven.plugin.ResourceMojo.java", "BodyUseAPI": [], "Fixed commit": "372d230dee53622422c04675a500c9212eefd7f9", "Url": "https://api.github.com/repos/fabric8io/fabric8-maven-plugin", "Date": "2016-05-24T14:55:33Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isMethod(calledDesc, ((\"(L\" + (ValkyrienWarfareBase.CoreMod.TransformAdapter.TileEntityName)) + \";FI)V\"), calledName, ValkyrienWarfareBase.CoreMod.TransformAdapter.TileEntityRendererDispatcherName, \"renderTileEntity\", \"func_180546_a\", calledOwner)) { mv.visitMethodInsn(Opcodes.INVOKESTATIC, ValkyrienWarfarePlugin.PathClient, \"renderTileEntity\", java.lang.String.format(((\"(L%s;L\" + (ValkyrienWarfareBase.CoreMod.TransformAdapter.TileEntityName)) + \";FI)V\"), ValkyrienWarfareBase.CoreMod.TransformAdapter.TileEntityRendererDispatcherName), itf); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1714/buggy-version/src.main.java.ValkyrienWarfareBase.CoreMod.TransformAdapter.java", "BodyUseAPI": ["org.objectweb.asm.MethodVisitor.visitMethodInsn(Opcodes.INVOKESTATIC,ValkyrienWarfarePlugin.PathClient,java.lang.String,java.lang.String,boolean)", "java.lang.String.format(java.lang.String,java.lang.String)"], "Fixed commit": "bebe2966fd57f925d0e7e6c2388df0e443da22f1", "Url": "https://api.github.com/repos/ValkyrienWarfare/Valkyrien-Warfare-Revamped", "Date": "2017-05-01T20:23:34Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isMethod(calledDesc, ((\"()L\" + (ValkyrienWarfareBase.CoreMod.TransformAdapter.AxisAlignedBBName)) + \";\"), calledName, ValkyrienWarfareBase.CoreMod.TransformAdapter.TileEntityName, \"getRenderBoundingBox\", \"func_184177_bl\", calledOwner)) { mv.visitMethodInsn(Opcodes.INVOKESTATIC, ValkyrienWarfarePlugin.PathClient, \"getRenderBoundingBox\", java.lang.String.format(((\"(L%s;)L\" + (ValkyrienWarfareBase.CoreMod.TransformAdapter.AxisAlignedBBName)) + \";\"), ValkyrienWarfareBase.CoreMod.TransformAdapter.TileEntityName), itf); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1714/buggy-version/src.main.java.ValkyrienWarfareBase.CoreMod.TransformAdapter.java", "BodyUseAPI": ["org.objectweb.asm.MethodVisitor.visitMethodInsn(Opcodes.INVOKESTATIC,ValkyrienWarfarePlugin.PathClient,java.lang.String,java.lang.String,boolean)", "java.lang.String.format(java.lang.String,java.lang.String)"], "Fixed commit": "bebe2966fd57f925d0e7e6c2388df0e443da22f1", "Url": "https://api.github.com/repos/ValkyrienWarfare/Valkyrien-Warfare-Revamped", "Date": "2017-05-01T20:23:34Z"},
{"Line": "=>3739", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["grph.Grph.search(int,grph.properties.NumericalProperty)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((result.distances[destination]) < 0) { return null; }else { return new grph.path.SearchResultWrappedPath(result, source, destination); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6455/buggy-version/src.main.java.grph.Grph.java", "BodyUseAPI": [], "Fixed commit": "6e75dcf127801bb456e043100057e22e0ab89e02", "Url": "https://api.github.com/repos/MichaelRoeder/Grph", "Date": "2015-07-19T12:36:18Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (language == null) language = com.pratilipi.common.type.Language.ENGLISH;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8121/buggy-version/src.main.java.com.pratilipi.common.util.SEOTitleUtil.java", "BodyUseAPI": [], "Fixed commit": "84f6c2674ce6e5733d581459f3cd136cd2b4770f", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2017-02-06T07:34:10Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (i != (-1)) { pkgName = name.substring(0, i); className = name.substring((i + 1)); }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7326/buggy-version/beetl-core.src.main.java.org.beetl.core.DefaultNativeSecurityManager.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.substring(int,int)"], "Fixed commit": "ae0b06ab928bc60f41a141bc661979f0cb58704e", "Url": "https://api.github.com/repos/javamonkey/beetl2.0", "Date": "2016-10-17T01:10:45Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.unibe.ese.shopnote.core.ListManager.getShoppingList(((ch.unibe.ese.shopnote.share.requests.UnShareListRequest) (request)).getListId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (list2 != null) { if (friendsManager.getSharedFriends(list2).isEmpty()) { list2.setShared(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4502/buggy-version/Code.ShoppingList.src.ch.unibe.ese.shopnote.share.AnswerHandler.java", "BodyUseAPI": ["friendsManager.getSharedFriends(list2).isEmpty()", "ch.unibe.ese.shopnote.core.FriendsManager.getSharedFriends(ch.unibe.ese.shopnote.core.ShoppingList)", "ch.unibe.ese.shopnote.core.ShoppingList.setShared(boolean)"], "Fixed commit": "63397b9c4259f5e32ecc450819d50e732283fa5a", "Url": "https://api.github.com/repos/ese-unibe-ch/ese2013-team8", "Date": "2013-12-03T16:27:27Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRecipe) { if (recipe.isShared()) { } }else if (list.isShared()) { ch.unibe.ese.shopnote.share.requests.GetSharedFriendsRequest gsfRequest = new ch.unibe.ese.shopnote.share.requests.GetSharedFriendsRequest(getMyPhoneNumber(), list.getId()); syncManager.addRequest(gsfRequest); syncManager.synchronise(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4502/buggy-version/Code.ShoppingList.src.ch.unibe.ese.shopnote.activities.ShareActivity.java", "BodyUseAPI": [], "Fixed commit": "63397b9c4259f5e32ecc450819d50e732283fa5a", "Url": "https://api.github.com/repos/ese-unibe-ch/ese2013-team8", "Date": "2013-12-03T16:27:27Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (first) SendNotificaitons(curStatus);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5361/buggy-version/app.src.main.java.com.raneem.omer.jeebgas.NotificaitonService.java", "BodyUseAPI": [], "Fixed commit": "4133bf8903f7d724a249bfbaa1f2475345dd90a7", "Url": "https://api.github.com/repos/raneemib/JeebGas", "Date": "2017-06-06T19:57:24Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Const.debug)) jane.core.Procedure._procThreads.put(java.lang.Thread.currentThread(), ctx);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4619/buggy-version/src.jane.core.Procedure.java", "BodyUseAPI": [], "Fixed commit": "d16f11cbaad3ec7cf856878ff187446db02916c9", "Url": "https://api.github.com/repos/dwing4g/jane", "Date": "2015-09-10T13:53:47Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getTag()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((mLastCheckedPosition) != (-1)) && ((mLastCheckedPosition) != i)) { viewList.get(mLastCheckedPosition).setChecked(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1745/buggy-version/app.src.main.java.org.ccflying.MultiLineRadioGroup.java", "BodyUseAPI": [], "Fixed commit": "91d5d573ffa54f2fbf68e2cc1493b6dba658748b", "Url": "https://api.github.com/repos/a284628487/MultiLineRadioGroup", "Date": "2016-01-29T09:49:24Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args[1]) == (args[2])) { setStatusCode(211); return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3052/buggy-version/src.sg.edu.nus.comp.cs4218.impl.fileutils.CopyTool.java", "BodyUseAPI": [], "Fixed commit": "8dc06c5f0d35046d6548389720b77e22084ecebb", "Url": "https://api.github.com/repos/azatris/cs4218", "Date": "2014-04-26T14:09:47Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e[1]) > 0) { firstEntryCode = e[0]; firstEntryN = i - 15001; if ((e[2]) == 2) { firstEntryTypeIsScript = true; } firstEntryLength = e[1]; foundFirstEntryCode = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6490/buggy-version/src.main.java.tingeltangel.core.Importer.java", "BodyUseAPI": [], "Fixed commit": "224deb9b30f91753120480420ecfd669af503b2d", "Url": "https://api.github.com/repos/Martin-Dames/Tingeltangel", "Date": "2015-05-29T09:56:15Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (RankSettings.reportMode) { if (rk < 0) { ltf.namerank.rank.RankItemHelper.addInfo(\"<font color=red>\").append(target.getKey()).append(\"-10</font> \"); }else if (rk > 0) { ltf.namerank.rank.RankItemHelper.addInfo(target.getKey()).append(\"10 \"); }else { ltf.namerank.rank.RankItemHelper.addInfo(target.getKey()).append(\" \"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6296/buggy-version/jlab.namerank.src.main.java.ltf.namerank.rank.dictrank.support.dict.HanYuDaCidian.java", "BodyUseAPI": [], "Fixed commit": "c545984c2df00e83a822b396c14a4f94e9779650", "Url": "https://api.github.com/repos/ltf/lab", "Date": "2016-07-13T17:00:16Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.f0w.k2i.core.exchange.MovieAuthStringFetcher.getProcessedResponse()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.google.common.base.Strings.isNullOrEmpty(fetcherResponse)) { throw new java.io.IOException(\"Movie authorisation string is empty!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5217/buggy-version/core.src.main.java.org.f0w.k2i.core.exchange.MovieRatingChanger.java", "BodyUseAPI": [], "Fixed commit": "8c79102d65ecf588cac50bba2c57085e20a920c4", "Url": "https://api.github.com/repos/REDNBLACK/J-Kinopoisk2IMDB", "Date": "2016-04-10T22:20:58Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((element.getKind()) == (javax.lang.model.element.ElementKind.METHOD)) { elementClass = ((javax.lang.model.element.ExecutableElement) (element)).getEnclosingElement(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7274/buggy-version/compiler.src.main.java.com.sleepcamel.bsoneer.processor.BsonProcessor.java", "BodyUseAPI": [], "Fixed commit": "40dec86d98a9fcb6bdd31c726177b37785dbd8e3", "Url": "https://api.github.com/repos/guicamest/bsoneer", "Date": "2015-07-03T19:02:59Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((AbstractTask.MODULE_PROPS) != null) AbstractTask.MODULE_PROPS.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7847/buggy-version/src.main.java.com.marklogic.developer.corb.Manager.java", "BodyUseAPI": [], "Fixed commit": "1d122b6e097ffefef3da1f813d700b2ee186983e", "Url": "https://api.github.com/repos/hansenmc/corb2", "Date": "2015-11-16T23:25:09Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.uka.ipd.sdq.beagle.core.judge.EvaluableExpressionFitnessFunctionBlackboardView.getMeasurementResultsFor(de.uka.ipd.sdq.beagle.core.SeffLoop)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((loopRepetitionCountMeasurementResults.size()) == 0) { return java.lang.Double.POSITIVE_INFINITY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/630/buggy-version/Core.src.main.java.de.uka.ipd.sdq.beagle.core.judge.AbstractionAndPrecisionFitnessFunction.java", "BodyUseAPI": [], "Fixed commit": "271411915fecef7564067ea9329887414c6ff24e", "Url": "https://api.github.com/repos/Beagle-PSE/Beagle", "Date": "2016-02-13T22:39:49Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.uka.ipd.sdq.beagle.core.judge.EvaluableExpressionFitnessFunctionBlackboardView.getMeasurementResultsFor(de.uka.ipd.sdq.beagle.core.ResourceDemandingInternalAction)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((resourceDemandMeasurementResults.size()) == 0) { return java.lang.Double.POSITIVE_INFINITY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/630/buggy-version/Core.src.main.java.de.uka.ipd.sdq.beagle.core.judge.AbstractionAndPrecisionFitnessFunction.java", "BodyUseAPI": [], "Fixed commit": "271411915fecef7564067ea9329887414c6ff24e", "Url": "https://api.github.com/repos/Beagle-PSE/Beagle", "Date": "2016-02-13T22:39:49Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.uka.ipd.sdq.beagle.core.judge.EvaluableExpressionFitnessFunctionBlackboardView.getMeasurementResultsFor(de.uka.ipd.sdq.beagle.core.ExternalCallParameter)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parameterChangeMeasurementResults.size()) == 0) { return java.lang.Double.POSITIVE_INFINITY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/630/buggy-version/Core.src.main.java.de.uka.ipd.sdq.beagle.core.judge.AbstractionAndPrecisionFitnessFunction.java", "BodyUseAPI": [], "Fixed commit": "271411915fecef7564067ea9329887414c6ff24e", "Url": "https://api.github.com/repos/Beagle-PSE/Beagle", "Date": "2016-02-13T22:39:49Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.uka.ipd.sdq.beagle.core.judge.EvaluableExpressionFitnessFunctionBlackboardView.getMeasurementResultsFor(de.uka.ipd.sdq.beagle.core.SeffBranch)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((branchDecisionMeasurementResults.size()) == 0) { return java.lang.Double.POSITIVE_INFINITY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/630/buggy-version/Core.src.main.java.de.uka.ipd.sdq.beagle.core.judge.AbstractionAndPrecisionFitnessFunction.java", "BodyUseAPI": [], "Fixed commit": "271411915fecef7564067ea9329887414c6ff24e", "Url": "https://api.github.com/repos/Beagle-PSE/Beagle", "Date": "2016-02-13T22:39:49Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getHausnummer()) == 0) { adresse = ((((this.getStrasse()) + \", \") + (this.getPlz())) + \" \") + (this.getOrt()); }else { adresse = ((((((this.getStrasse()) + \" \") + (this.getHausnummer())) + \", \") + (this.getPlz())) + \" \") + (this.getOrt()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/9013/buggy-version/src.com.example.datahandling.Halle.java", "BodyUseAPI": [], "Fixed commit": "392392883d97d7faead2fcfa81943dbbda942267", "Url": "https://api.github.com/repos/DerHexer17/HVS", "Date": "2014-11-21T09:28:07Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((halle.getHausnummer()) == 0) { mapsString = (((\"geo:0,0?q=\" + mapsString) + \"+\") + \"+\") + (halle.getOrt()); }else { mapsString = ((((\"geo:0,0?q=\" + mapsString) + \"+\") + (halle.getHausnummer())) + \"+\") + (halle.getOrt()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/9013/buggy-version/src.com.example.hvs.SpielActivity.java", "BodyUseAPI": ["com.example.datahandling.Halle.getOrt()", "com.example.datahandling.Halle.getOrt()", "com.example.datahandling.Halle.getHausnummer()"], "Fixed commit": "392392883d97d7faead2fcfa81943dbbda942267", "Url": "https://api.github.com/repos/DerHexer17/HVS", "Date": "2014-11-21T09:28:07Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isBindService) { unbindService(mServiceConnection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2201/buggy-version/app.src.main.java.cn.com.jigsaw.androidproject.activity.AIDLActivity.java", "BodyUseAPI": [], "Fixed commit": "6a17b14b12fea40b774e30796006e03e3cc66092", "Url": "https://api.github.com/repos/JigsawLee/AndroidProject", "Date": "2017-02-07T02:50:08Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTabLayoutFragment2) == null) { mTabLayoutFragment2 = com.kevin.tech.bottomnavigationbarforandroid.fragment.TabLayoutFragment2.newInstance(getString(R.string.navigation_tab_layout2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5123/buggy-version/app.src.main.java.com.kevin.tech.bottomnavigationbarforandroid.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d2c9306910662555310352e2651fd8e635d9569b", "Url": "https://api.github.com/repos/student9128/BottomNavigationBarForAndroid", "Date": "2016-11-30T09:52:20Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTextTabFragment) == null) { mTextTabFragment = com.kevin.tech.bottomnavigationbarforandroid.fragment.TextTabFragment.newInstance(getString(R.string.navigation_text_tab)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5123/buggy-version/app.src.main.java.com.kevin.tech.bottomnavigationbarforandroid.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d2c9306910662555310352e2651fd8e635d9569b", "Url": "https://api.github.com/repos/student9128/BottomNavigationBarForAndroid", "Date": "2016-11-30T09:52:20Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.BitSet.length()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (length == (-1)) { bits.flip(rand.nextInt(0)); }else { bits.flip(length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8057/buggy-version/src.knapsack.KnapSackMutation.java", "BodyUseAPI": ["java.util.BitSet.flip(int)"], "Fixed commit": "1a893c2b9c7232dd0d952af7bf39625c1a9fb0ae", "Url": "https://api.github.com/repos/rutherfordjw/knap_sack", "Date": "2013-04-19T15:52:27Z"},
{"Line": "=>10413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jmlspecs.openjml.esc.JmlAssertionAdder.convertSymbol(com.sun.tools.javac.code.Symbol)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((sym.name) == (names._super)) && (rac)) && ((currentThisExpr.toString().equals(\"this\")) || (currentThisExpr.toString().equals(\"THIS\")))) { result = eresult = that; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8341/buggy-version/OpenJML.src.org.jmlspecs.openjml.esc.JmlAssertionAdder.java", "BodyUseAPI": [], "Fixed commit": "b8230648f2979e075a2b5d73de0b598e7dcc4caa", "Url": "https://api.github.com/repos/OpenJML/OpenJML", "Date": "2017-08-25T00:06:05Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ccl.rt.vm.IVM.pop()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (param1 instanceof coa.rt.Nvp) { if (param2 instanceof coa.rt.Nvp) { ccl.rt.use.Value res = vm.pop().invoke(); param1.invoke(res); param2.invoke(res); vm.put(res); }else { ccl.rt.use.Value res = vm.pop().invoke(param1); param2.invoke(res); vm.put(res); } }else if (param2 instanceof coa.rt.Nvp) { ccl.rt.use.Value res = vm.pop().invoke(param1); param2.invoke(res); vm.put(res); }else { vm.put(vm.pop().invoke(param1, param2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2128/buggy-version/src.ccl.rt.use.MnemoRunner.java", "BodyUseAPI": ["vm.pop().invoke(ccl.rt.use.Value)", "ccl.rt.vm.IVM.put(vm.pop().invoke(param1, param2))", "vm.pop().invoke(ccl.rt.use.Value,ccl.rt.use.Value)", "ccl.rt.use.Value.invoke(ccl.rt.use.Value)", "vm.pop().invoke(ccl.rt.use.Value)"], "Fixed commit": "35bfba410aebbc92d7d29a650498539a8406be03", "Url": "https://api.github.com/repos/ccldev/ccl-rt-java", "Date": "2017-07-06T14:51:21Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ccl.rt.vm.IVM.pop()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (param instanceof coa.rt.Nvp) { ccl.rt.use.Value res = vm.pop().invoke(); param.invoke(res); vm.put(res); }else { vm.put(vm.pop().invoke(param)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2128/buggy-version/src.ccl.rt.use.MnemoRunner.java", "BodyUseAPI": ["ccl.rt.use.Value.invoke(ccl.rt.use.Value)", "ccl.rt.vm.IVM.put(vm.pop().invoke(param))", "vm.pop().invoke(ccl.rt.use.Value)"], "Fixed commit": "35bfba410aebbc92d7d29a650498539a8406be03", "Url": "https://api.github.com/repos/ccldev/ccl-rt-java", "Date": "2017-07-06T14:51:21Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (((org.exolab.castor.xml.schema.ElementDecl) (node.getUserObject())).getType())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4681/buggy-version/src.main.java.psidev.psi.mi.filemakers.xsd.AbstractXsdTreeStruct.java", "BodyUseAPI": [], "Fixed commit": "2e7f3484a8dba8182f1067a7bc0909d2b2be2efa", "Url": "https://api.github.com/repos/MICommunity/psimi-maker-flattener", "Date": "2017-06-29T16:52:55Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.exolab.castor.xml.schema.Group.class.isInstance(node.getUserObject())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4681/buggy-version/src.main.java.psidev.psi.mi.filemakers.xsd.AbstractXsdTreeStruct.java", "BodyUseAPI": [], "Fixed commit": "2e7f3484a8dba8182f1067a7bc0909d2b2be2efa", "Url": "https://api.github.com/repos/MICommunity/psimi-maker-flattener", "Date": "2017-06-29T16:52:55Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7719/buggy-version/src.main.java.net.ben.calculator.SigmaAverageCalculator.java", "BodyUseAPI": [], "Fixed commit": "8ae283d1616289180414c72573ed59c6b7ef666b", "Url": "https://api.github.com/repos/benhuang-zh/Ben-s-Playground", "Date": "2013-02-07T01:02:04Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (object instanceof jp.co.yahoo.dataplatform.mds.hadoop.hive.io.ColumnAndIndex) { jp.co.yahoo.dataplatform.mds.hadoop.hive.io.ColumnAndIndex columnAndIndex = ((jp.co.yahoo.dataplatform.mds.hadoop.hive.io.ColumnAndIndex) (object)); jp.co.yahoo.dataplatform.mds.spread.column.IColumn childColumn = columnAndIndex.column.getColumn(key.toString()); return getField.get(childColumn, columnAndIndex.index, columnAndIndex.columnIndex); }else { java.util.Map map = ((java.util.Map) (object)); return map.get(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/915/buggy-version/src.hive.src.main.java.jp.co.yahoo.dataplatform.mds.hadoop.hive.MDSMapObjectInspector.java", "BodyUseAPI": [], "Fixed commit": "f4187b47a439aa7e44b565c52bdb6075e8921e55", "Url": "https://api.github.com/repos/koijima/multiple-dimension-spread", "Date": "2017-11-14T11:47:37Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((webAppStat) == null) { webAppStat = new com.alibaba.druid.support.http.stat.WebAppStat(contextPath, this.sessionStatMaxCount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7644/buggy-version/src.main.java.com.alibaba.druid.support.http.WebStatFilter.java", "BodyUseAPI": [], "Fixed commit": "fc2857a59765a6878429a4068f48191d06d00bdc", "Url": "https://api.github.com/repos/wenshao/druid", "Date": "2013-05-10T04:42:14Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((expected != null) && (actual == null)) || ((expected == null) && (actual != null))) { ctx.addMismatch(expected, actual, path); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3789/buggy-version/src.main.java.org.exparity.hamcrest.beans.TheSameAs.java", "BodyUseAPI": ["org.exparity.hamcrest.beans.TheSameAs.MismatchContext.addMismatch(java.lang.Object,java.lang.Object,java.lang.String)"], "Fixed commit": "bb306f15876b38cc67a53c7829df7eae73352517", "Url": "https://api.github.com/repos/eXparity/hamcrest-bean", "Date": "2015-03-21T17:41:24Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bestOccurrence == 0) { if (likelyElement == null) { likelyElement = new AI.NonElement(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4091/buggy-version/src.AI.AgentClasses.Agent.java", "BodyUseAPI": [], "Fixed commit": "1bbcbc0f99e06a43539e44ca108509a4439b1c29", "Url": "https://api.github.com/repos/jonathanponce/AI_Simulation", "Date": "2015-06-13T08:45:36Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["AI.AgentClasses.Senses.See.GCD(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (div == 0) div = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4091/buggy-version/src.AI.AgentClasses.Senses.See.java", "BodyUseAPI": [], "Fixed commit": "1bbcbc0f99e06a43539e44ca108509a4439b1c29", "Url": "https://api.github.com/repos/jonathanponce/AI_Simulation", "Date": "2015-06-13T08:45:36Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(channel.isConnected())) { connect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7599/buggy-version/storm-core.src.jvm.backtype.storm.messaging.netty.Client.java", "BodyUseAPI": [], "Fixed commit": "e1e6a602e330d71410b1876ca9fb6bfc29761f35", "Url": "https://api.github.com/repos/d2r/storm", "Date": "2014-07-24T19:34:38Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputType == (org.ozsoft.texasholdem.util.InputOutputMgr.InputType.File)) readProgress();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4210/buggy-version/src.main.java.org.ozsoft.texasholdem.util.InputOutputMgr.java", "BodyUseAPI": [], "Fixed commit": "cb66f5cf39be43d44c856ba65a4e6ec3c90dc2de", "Url": "https://api.github.com/repos/guoyucn/nashclient", "Date": "2016-01-28T15:12:12Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.wpi.cs.wpisuitetng.modules.core.models.Project.fromJSON(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((change.getOwner()) != null) { toUpdate.setOwner(change.getOwner()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5207/buggy-version/Core.WPISuite.src.edu.wpi.cs.wpisuitetng.modules.core.entitymanagers.ProjectManager.java", "BodyUseAPI": ["edu.wpi.cs.wpisuitetng.modules.core.models.Project.setOwner(change.getOwner())", "edu.wpi.cs.wpisuitetng.modules.core.models.Project.getOwner()"], "Fixed commit": "1d331a26d377695bc1edf353f1ba602b218ca236", "Url": "https://api.github.com/repos/fracture91/wpi-suite-tng", "Date": "2013-02-18T17:56:50Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jsonObject.getString(\"Bid\")) != \"null\") { batchOperations.add(com.sam_chordas.android.stockhawk.rest.Utils.buildBatchOperation(jsonObject)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4166/buggy-version/app.src.main.java.com.sam_chordas.android.stockhawk.rest.Utils.java", "BodyUseAPI": ["java.util.ArrayList<android.content.ContentProviderOperation>.add(android.content.ContentProviderOperation)", "com.sam_chordas.android.stockhawk.rest.Utils.buildBatchOperation(org.json.JSONObject)"], "Fixed commit": "a04bded332e84a115d0ee14de420d76b6f649a9e", "Url": "https://api.github.com/repos/rafaelanastacioalves/StockHawk", "Date": "2016-07-22T20:55:51Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fio.numberOfPurchases) == 0) { android.widget.Toast.makeText(getApplicationContext(), \"There are no recent purchases\", Toast.LENGTH_SHORT).show(); }else { startActivity(new android.content.Intent(getApplicationContext(), com.example.vincent.budgetbuddy.purchase_history.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1394/buggy-version/app.src.main.java.com.example.vincent.budgetbuddy.Settings.java", "BodyUseAPI": [], "Fixed commit": "f9844db15db7477e23ec73b2c14f8e2d6c20e030", "Url": "https://api.github.com/repos/DavidLamar/BudgetBuddy", "Date": "2016-04-20T00:05:37Z"},
{"Line": "=>501", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6996/buggy-version/app.src.main.java.com.mynotes.android.mynotes.NoteActivity.java", "BodyUseAPI": [], "Fixed commit": "4975e360fe0c8ae810178f8dc19f721186dad403", "Url": "https://api.github.com/repos/guilleortiz/MyNotes", "Date": "2017-07-08T23:35:09Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((screenScanHandler) != null) { screenScanHandler.removeCallbacks(screenScanRunnable); screenScanHandler.postDelayed(screenScanRunnable, com.kamron.pogoiv.pokeflycomponents.ScreenWatcher.SCREEN_SCAN_INITIAL_DELAY_MS); screenScanRetries = com.kamron.pogoiv.pokeflycomponents.ScreenWatcher.SCREEN_SCAN_RETRIES; pokefly.getIvButton().outsideScreenClicked(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8706/buggy-version/app.src.main.java.com.kamron.pogoiv.pokeflycomponents.ScreenWatcher.java", "BodyUseAPI": [], "Fixed commit": "29a8433826936f7d3016154992477b2e846dfaad", "Url": "https://api.github.com/repos/farkam135/GoIV", "Date": "2017-10-01T10:16:10Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!allowBg) { handler.sendEmptyMessageDelayed(com.zzzmode.appopsx.server.AppOpsMain.MSG_TIMEOUT, timeOut); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1431/buggy-version/opsxlib.src.main.java.com.zzzmode.appopsx.server.AppOpsMain.java", "BodyUseAPI": [], "Fixed commit": "3135f5f1f9553e3996676339d452a475463b3478", "Url": "https://api.github.com/repos/8enet/AppOpsX", "Date": "2017-07-11T05:44:51Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(editedFile instanceof org.mustbe.consulo.csharp.lang.psi.CSharpFile)) { return Result.CONTINUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3041/buggy-version/csharp-doc-psi-impl.src.org.mustbe.consulo.csharp.lang.doc.ide.codeInsight.editorActions.CSharpDocGtTypedHandler.java", "BodyUseAPI": [], "Fixed commit": "8edccec4f0ff328a244070a3400b76ffd12be91a", "Url": "https://api.github.com/repos/consulo/consulo-csharp", "Date": "2015-11-02T19:18:37Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (sessionResponses != null) { writeDataRow((++num), sessionResponses, exportSheet, workbook); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4655/buggy-version/src.main.java.org.olat.ims.qti21.manager.archive.QTI21ArchiveFormat.java", "BodyUseAPI": ["org.olat.ims.qti21.manager.archive.QTI21ArchiveFormat.writeDataRow(int,org.olat.ims.qti21.manager.archive.QTI21ArchiveFormat.SessionResponses,org.olat.core.util.openxml.OpenXMLWorksheet,org.olat.core.util.openxml.OpenXMLWorkbook)"], "Fixed commit": "73f4a4e38cff4157b5029bcec5ca7cb098989cb3", "Url": "https://api.github.com/repos/klemens/openolat", "Date": "2016-09-13T09:43:23Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(value.startsWith(\"0\"))) { n = value.replaceAll(org.stjs.generator.writer.JavascriptWriter.NUMERIC_LITERAL_ENDING, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/449/buggy-version/generator.src.main.java.org.stjs.generator.writer.JavascriptWriter.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "7c9d72d8a44aae92d148bc97a849618c33aceb70", "Url": "https://api.github.com/repos/st-js/st-js", "Date": "2013-12-26T09:56:32Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.holisticon.annotationprocessortoolkit.templating.expressions.Expression.evaluateExpression()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((result.value()) != null) && (result.getOperandsJavaType().equals(java.lang.Boolean.class))) { return binder.getContent(outerVariables).toString(); }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8958/buggy-version/templating.src.main.java.de.holisticon.annotationprocessortoolkit.templating.templateblocks.IfTemplateBlock.java", "BodyUseAPI": [], "Fixed commit": "b34c072b62aebeda794d4f9686e442e49d6d7d92", "Url": "https://api.github.com/repos/toolisticon/annotation-processor-toolkit", "Date": "2017-11-03T15:50:12Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((matchingConfiguration.getCapabilities()) == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6648/buggy-version/alien4cloud-core.src.main.java.alien4cloud.deployment.matching.services.nodes.DefaultNodeMatcher.java", "BodyUseAPI": [], "Fixed commit": "a65ee63bbe22f3fae46ea566020af344dfd7af6a", "Url": "https://api.github.com/repos/alien4cloud/alien4cloud", "Date": "2016-01-15T10:38:06Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Start.DEBUG) try { java.nio.file.Files.write(new java.io.File(Start.PARENT_DIRECTORY, \"start.log\").toPath(), ((\"\\n\" + ln) + \"\\n\").getBytes(), java.nio.file.StandardOpenOption.APPEND, java.nio.file.StandardOpenOption.CREATE); } catch (java.io.IOException ioe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2597/buggy-version/Start.java", "BodyUseAPI": [], "Fixed commit": "67f73709ccb85228260801e30e6e7f85ea632b7b", "Url": "https://api.github.com/repos/valen214/mcl", "Date": "2016-03-19T08:01:31Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Start.DEBUG) for (int i = 0; i < (args.length); ++i) { try { java.nio.file.Files.write(new java.io.File(Start.DATA_DIRECTORY, \"FirstRun\").toPath(), ((((\"\\n\" + (args[i].equals(\"work_dir\"))) + \"\\n\") + (args[i])) + \"\\n\").getBytes(), java.nio.file.StandardOpenOption.APPEND, java.nio.file.StandardOpenOption.CREATE); } catch (java.io.IOException ioe) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2597/buggy-version/Start.java", "BodyUseAPI": [], "Fixed commit": "67f73709ccb85228260801e30e6e7f85ea632b7b", "Url": "https://api.github.com/repos/valen214/mcl", "Date": "2016-03-19T08:01:31Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.module.reporting.common.ObjectUtil.format(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(cellValueString.matches(\".*[a-zA-Z]+.*\"))) { try { cell.setCellValue(wb.getCreationHelper().createRichTextString(java.lang.Integer.toString(java.lang.Integer.parseInt(cellValueString)))); return; } catch (java.lang.Exception e) { } try { cell.setCellValue(wb.getCreationHelper().createRichTextString(java.lang.Double.toString(java.lang.Double.parseDouble(cellValueString)))); return; } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7726/buggy-version/api.src.main.java.org.openmrs.module.reporting.common.ExcelUtil.java", "BodyUseAPI": ["org.apache.poi.ss.usermodel.Cell.setCellValue(wb.getCreationHelper().createRichTextString(java.lang.Double.toString(java.lang.Double.parseDouble(cellValueString))))", "org.apache.poi.ss.usermodel.Cell.setCellValue(wb.getCreationHelper().createRichTextString(java.lang.Integer.toString(java.lang.Integer.parseInt(cellValueString))))", "java.lang.Double.toString(double)", "wb.getCreationHelper().createRichTextString(java.lang.String)", "java.lang.Integer.toString(int)", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "wb.getCreationHelper().createRichTextString(java.lang.String)"], "Fixed commit": "62d0c7e8649e99c03e2acb97424d0cea7d40597e", "Url": "https://api.github.com/repos/openmrs/openmrs-module-reporting", "Date": "2014-07-21T19:17:09Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connection == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2268/buggy-version/src.main.java.com.alibaba.druid.filter.logging.LogFilter.java", "BodyUseAPI": [], "Fixed commit": "383e45c1dd2191e5760ffde558eed179ffe203e5", "Url": "https://api.github.com/repos/zhujunxxxxx/druid", "Date": "2015-09-19T03:25:23Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (seenCauses.contains(e.getCause())) { break; }else { seenCauses.add(e.getCause()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8917/buggy-version/rxjava-core.src.main.java.rx.util.CompositeException.java", "BodyUseAPI": ["java.lang.Throwable.getCause()", "java.util.Set<java.lang.Throwable>.add(java.lang.Throwable)"], "Fixed commit": "cd2f14637bcecec0081104d749cd1bf10f28b07d", "Url": "https://api.github.com/repos/mattrjacobs/RxJava", "Date": "2014-02-03T23:05:42Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { android.support.v4.app.Fragment fragment = new nl.l15vdef.essteling.activities_and_fragments.HomepageFragment(); android.support.v4.app.FragmentTransaction ft = getSupportFragmentManager().beginTransaction(); ft.replace(R.id.content_main, fragment); ft.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5595/buggy-version/app.src.main.java.nl.l15vdef.essteling.activities_and_fragments.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3bdaf40c617eebd5b7b1492d74d1f66c2af877e2", "Url": "https://api.github.com/repos/CoenB95/TI1.4-Essteling-App", "Date": "2017-06-08T08:16:23Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dropRange) > 1) { return baseCount + (prng.nextInt(dropRange)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/870/buggy-version/src.main.java.cyano.electricadvantage.blocks.Ore.java", "BodyUseAPI": [], "Fixed commit": "89f0fb36fa8f9950f7d95f719b7b4c4d4c0beff1", "Url": "https://api.github.com/repos/cyanobacterium/ElectricAdvantage", "Date": "2015-08-30T18:08:14Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (oldDelegate != null) { oldDelegate.removeListener(delegateListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1709/buggy-version/plugins.org.springframework.ide.eclipse.boot.dash.src.org.springframework.ide.eclipse.boot.dash.livexp.DelegatingLiveSet.java", "BodyUseAPI": ["org.springsource.ide.eclipse.commons.livexp.core.LiveExpression<java.util.Set<T>>.removeListener(org.springsource.ide.eclipse.commons.livexp.core.ValueListener<java.util.Set<T>>)"], "Fixed commit": "43fc7ae0c8d53d2f8f972cc320146f1c15e4dbe0", "Url": "https://api.github.com/repos/spring-projects/spring-ide", "Date": "2015-07-02T22:49:33Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSingleFileTotalSize) == (-1)) { mFileSizeBar.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2113/buggy-version/JuYou.src.com.zhaoyan.juyou.dialog.CopyMoveDialog.java", "BodyUseAPI": [], "Fixed commit": "2db5903f96852b34a5518fd75e9da1a26dfdb7ab", "Url": "https://api.github.com/repos/liangPATHofei1100/ZhaoYanJuYou", "Date": "2014-05-05T02:13:53Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((subFigures.size()) == 1) { locateSubtrees((x0 + (sp / 2)), subY, 0); }else { locateSubtrees(x0, subY, (sp / ((subFigures.size()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4058/buggy-version/src.lovelogic.gui.figure.ProofFigure.java", "BodyUseAPI": ["lovelogic.gui.figure.ProofFigure.locateSubtrees(int,int,int)", "java.util.List<lovelogic.gui.figure.ProofFigure>.size()"], "Fixed commit": "6c7bfb0f1bea62f5c3c2934fc6a9736675fd45f5", "Url": "https://api.github.com/repos/YuukiARIA/LKProver", "Date": "2013-08-15T11:08:13Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((max) > (min)) count = rand.nextInt(((max) - (min)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/718/buggy-version/src.main.java.greymerk.roguelike.treasure.loot.provider.tables.TableItem.java", "BodyUseAPI": ["java.util.Random.nextInt(int)"], "Fixed commit": "64a98d7144579312d4ace7bf680914ad4e777bd9", "Url": "https://api.github.com/repos/CannibalVox/minecraft-roguelike", "Date": "2015-01-23T20:40:02Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (table == null) { throw new java.lang.RuntimeException(((\"File \" + (file.getName())) + \" parsed to null.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/718/buggy-version/src.main.java.greymerk.roguelike.treasure.loot.provider.tables.FileTable.java", "BodyUseAPI": [], "Fixed commit": "64a98d7144579312d4ace7bf680914ad4e777bd9", "Url": "https://api.github.com/repos/CannibalVox/minecraft-roguelike", "Date": "2015-01-23T20:40:02Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nodeSize > 2) { faceToUse = com.mcmoddev.orespawn.impl.features.VeinGenerator.EnumFace.getRandomFace(random); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1041/buggy-version/src.main.java.com.mcmoddev.orespawn.impl.features.VeinGenerator.java", "BodyUseAPI": [], "Fixed commit": "ebf0f5f17ccc49bcdb177ae4dc5abd0966c043b6", "Url": "https://api.github.com/repos/dshadowwolf/OreSpawn", "Date": "2017-10-30T19:28:56Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((scaleX != 0) && (scaleY != 0)) { for (com.badlogic.gdx.graphics.g2d.BitmapFont font : fonts.values()) { font.getData().setScale(scaleX, scaleY); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6017/buggy-version/core.src.dc.slideracer.ui.UiPack.java", "BodyUseAPI": ["font.getData().setScale(float,float)"], "Fixed commit": "22d56ac15211171091f52c60e4717fac984099ea", "Url": "https://api.github.com/repos/dsc5085/slideracer", "Date": "2016-07-22T22:17:41Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!retval) { android.util.Slog.d(com.android.server.InputMethodManagerService.TAG, (\"--- ignore this call back from a background user: \" + userId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2826/buggy-version/services.java.com.android.server.InputMethodManagerService.java", "BodyUseAPI": [], "Fixed commit": "487f8e93b0b5e2949fbfa6b60fd5e0a7a3e4d5b7", "Url": "https://api.github.com/repos/zeldin/platform_frameworks_base", "Date": "2012-12-05T01:09:29Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (filename.equals(\"clinvar\")) { bufferedWriters.get(filename).write(clinvarJsonObjectWriter.writeValueAsString(elem)); }else { bufferedWriters.get(filename).write(jsonObjectWriter.writeValueAsString(elem)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5214/buggy-version/cellbase-core.src.main.java.org.opencb.cellbase.core.serializer.CellBaseJsonFileSerializer.java", "BodyUseAPI": ["java.io.BufferedWriter.write(clinvarJsonObjectWriter.writeValueAsString(elem))", "java.io.BufferedWriter.write(jsonObjectWriter.writeValueAsString(elem))", "java.util.HashMap<java.lang.String, java.io.BufferedWriter>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.io.BufferedWriter>.get(java.lang.String)"], "Fixed commit": "11112e6d41ebfd4e2ed69e42cf99d433510a77d1", "Url": "https://api.github.com/repos/opencb/cellbase", "Date": "2016-01-21T17:54:15Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.equals(\"variablestring\")) return railo.commons.lang.CFTypes.TYPE_VARIABLE_STRING;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5483/buggy-version/railo-java.railo-core.src.railo.commons.lang.CFTypes.java", "BodyUseAPI": [], "Fixed commit": "52f86258869d7fa7a4b0fa1eb3cee8ab9147db53", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-01-14T08:07:40Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (alsoAlias && (type.equals(\"variable_string\"))) return railo.commons.lang.CFTypes.TYPE_VARIABLE_STRING;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5483/buggy-version/railo-java.railo-core.src.railo.commons.lang.CFTypes.java", "BodyUseAPI": [], "Fixed commit": "52f86258869d7fa7a4b0fa1eb3cee8ab9147db53", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-01-14T08:07:40Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFeedback) == (com.extenprise.mapp.medico.data.RxFeedback.VIEW_FEEDBACK)) { bundle.putInt(\"idServProv\", item.getServProv().getIdServProvHasServPt()); }else { bundle.putInt(\"idServProv\", item.getReportService().getIdServProvHasServPt()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6487/buggy-version/app.src.main.java.com.extenprise.mapp.medico.service.ui.RxInboxAdapter.java", "BodyUseAPI": [], "Fixed commit": "35bc06aa05330a7c4649e85f25ee50fd9319c69c", "Url": "https://api.github.com/repos/ambey/MobApp", "Date": "2016-03-22T10:26:58Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bid.size()) == 0) return \"\\t<Bids />\\n\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6137/buggy-version/project3-searcher.src.edu.ucla.cs.cs144.AuctionSearch.java", "BodyUseAPI": [], "Fixed commit": "228d309c050ed43d1091b6d675b5b74ee4cdbade", "Url": "https://api.github.com/repos/EmilyHwang/CS144", "Date": "2016-02-11T08:42:30Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, net.sf.jabref.gui.fieldeditors.FieldEditor>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((fieldEditor.getTextComponent()) instanceof javax.swing.text.JTextComponent) { int initialCaretPosition = ((javax.swing.text.JTextComponent) (fieldEditor)).getCaretPosition(); fieldEditor.setText(content); ((javax.swing.text.JTextComponent) (fieldEditor)).setCaretPosition(initialCaretPosition); }else { fieldEditor.setText(content); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1825/buggy-version/src.main.java.net.sf.jabref.gui.entryeditor.EntryEditorTab.java", "BodyUseAPI": ["net.sf.jabref.gui.fieldeditors.FieldEditor.setText(java.lang.String)", "net.sf.jabref.gui.fieldeditors.FieldEditor.setText(java.lang.String)"], "Fixed commit": "159b7bed7200292852684a9741a4394d5ec5c326", "Url": "https://api.github.com/repos/JabRef/jabref", "Date": "2015-09-04T07:22:53Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((calendar) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1995/buggy-version/BORGCalendar.swingui.src.main.java.net.sf.borg.ui.util.DateDialog.java", "BodyUseAPI": [], "Fixed commit": "45a5c64ce94082d7b82ee7c4d3ce23fac5e94dbb", "Url": "https://api.github.com/repos/mikeberger/borg_calendar", "Date": "2015-01-27T19:53:10Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((params.aid) != null) && ((params.aid.getAudioProperties().getNumberOfChannels()) >= 8)) && ((params.aid.isAACLC()) || (params.aid.isHEAAC()))) { transcodeOptions.add(\"-strict\"); transcodeOptions.add(\"1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7047/buggy-version/src.main.java.net.pms.encoders.FFMpegVideo.java", "BodyUseAPI": [], "Fixed commit": "6deab982e7cbbf347c2ea61750640a6b6b3f2e41", "Url": "https://api.github.com/repos/Sami32/UniversalMediaServer", "Date": "2017-11-16T03:12:46Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNotBlank(value)) { currentAudioTrack.getAudioProperties().setNumberOfChannels(net.pms.dlna.LibMediaInfoParser.MI.Get(audio, i, \"Channel(s)_Original\")); }else { currentAudioTrack.getAudioProperties().setNumberOfChannels(net.pms.dlna.LibMediaInfoParser.MI.Get(audio, i, \"Channel(s)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7047/buggy-version/src.main.java.net.pms.dlna.LibMediaInfoParser.java", "BodyUseAPI": [], "Fixed commit": "6deab982e7cbbf347c2ea61750640a6b6b3f2e41", "Url": "https://api.github.com/repos/Sami32/UniversalMediaServer", "Date": "2017-11-16T03:12:46Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(task.getApikey().get().contains(\"-\"))) { throw new org.embulk.config.ConfigException(\"API Key format invalid.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5086/buggy-version/src.main.java.org.embulk.output.mailchimp.MailChimpClient.java", "BodyUseAPI": [], "Fixed commit": "a7aee63eb106da29182ed49431f53a70f4e9821b", "Url": "https://api.github.com/repos/treasure-data/embulk-output-mailchimp", "Date": "2017-08-21T04:51:20Z"},
{"Line": "=>603", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (statusLine.replace(\"\\r\", \"\").isEmpty()) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3894/buggy-version/src.main.java.org.archive.io.arc.ARCRecord.java", "BodyUseAPI": [], "Fixed commit": "8186cc974ab1cfd9a2b69e95e821ed3479a0ca38", "Url": "https://api.github.com/repos/tokee/webarchive-commons", "Date": "2015-02-18T13:08:48Z"},
{"Line": "=>580", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((orthodoxHolidayMajor.getDescriptionUrl()) != null) { startActivity(new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(orthodoxHolidayMajor.getDescriptionUrl()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7536/buggy-version/app.src.main.java.com.medo.pravoslavenkalendar.MainActivity.java", "BodyUseAPI": ["com.medo.pravoslavenkalendar.model.OrthodoxHoliday.getDescriptionUrl()", "com.medo.pravoslavenkalendar.MainActivity.5.startActivity(android.content.Intent)", "android.net.Uri.parse(orthodoxHolidayMajor.getDescriptionUrl())"], "Fixed commit": "89ec4868828cf821039fa8773f6303877e0bdbce", "Url": "https://api.github.com/repos/TheMedo/PravoslavenKalendar", "Date": "2015-01-23T13:09:18Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.medo.pravoslavenkalendar.utils.FileUtils.getOutputPictureFile(android.content.Context,int,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (normalOutputFile == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7536/buggy-version/app.src.main.java.com.medo.pravoslavenkalendar.asyncs.BlurAndSaveBitmapTask.java", "BodyUseAPI": [], "Fixed commit": "89ec4868828cf821039fa8773f6303877e0bdbce", "Url": "https://api.github.com/repos/TheMedo/PravoslavenKalendar", "Date": "2015-01-23T13:09:18Z"},
{"Line": "=>601", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((orthodoxHolidayMajor.getDescriptionUrl()) != null) { startActivity(new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(orthodoxHolidayMinor.getDescriptionUrl()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7536/buggy-version/app.src.main.java.com.medo.pravoslavenkalendar.compat.MainActivityCompat.java", "BodyUseAPI": [], "Fixed commit": "89ec4868828cf821039fa8773f6303877e0bdbce", "Url": "https://api.github.com/repos/TheMedo/PravoslavenKalendar", "Date": "2015-01-23T13:09:18Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (roll > 0) { collection.getAway().addSingleRoll(roll); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7362/buggy-version/src.main.java.org.butterbrot.ffb.stats.StatsCollector.java", "BodyUseAPI": ["collection.getAway().addSingleRoll(int)"], "Fixed commit": "e38319fb39c3c836b50edbcbc79459e5e035c414", "Url": "https://api.github.com/repos/SanityResort/FFBStats", "Date": "2016-05-31T23:42:10Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((winnings.getWinningsRollHome()) > 0) { collection.getHome().addSingleRoll(winnings.getWinningsRollHome()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7362/buggy-version/src.main.java.org.butterbrot.ffb.stats.StatsCollector.java", "BodyUseAPI": ["collection.getHome().addSingleRoll(winnings.getWinningsRollHome())", "refactored.com.balancedbytes.games.ffb.report.ReportWinningsRoll.getWinningsRollHome()"], "Fixed commit": "e38319fb39c3c836b50edbcbc79459e5e035c414", "Url": "https://api.github.com/repos/SanityResort/FFBStats", "Date": "2016-05-31T23:42:10Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (roll > 0) { collection.getHome().addSingleRoll(roll); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7362/buggy-version/src.main.java.org.butterbrot.ffb.stats.StatsCollector.java", "BodyUseAPI": ["collection.getHome().addSingleRoll(int)"], "Fixed commit": "e38319fb39c3c836b50edbcbc79459e5e035c414", "Url": "https://api.github.com/repos/SanityResort/FFBStats", "Date": "2016-05-31T23:42:10Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((winnings.getWinningsRollAway()) > 0) { collection.getAway().addSingleRoll(winnings.getWinningsRollAway()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7362/buggy-version/src.main.java.org.butterbrot.ffb.stats.StatsCollector.java", "BodyUseAPI": ["collection.getAway().addSingleRoll(winnings.getWinningsRollAway())", "refactored.com.balancedbytes.games.ffb.report.ReportWinningsRoll.getWinningsRollAway()"], "Fixed commit": "e38319fb39c3c836b50edbcbc79459e5e035c414", "Url": "https://api.github.com/repos/SanityResort/FFBStats", "Date": "2016-05-31T23:42:10Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (bracketIndex > (-1)) { attributeName = newLastPathSegment.substring(0, bracketIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7072/buggy-version/src.main.java.com.nedap.archie.rules.evaluation.AssertionsFixer.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "4aace649e540af251588e1ae8aecd95ea1e57e13", "Url": "https://api.github.com/repos/nedap/archie", "Date": "2017-05-04T14:15:35Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(source)) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7782/buggy-version/YadaWeb.src.main.java.net.yadaframework.web.YadaWebUtil.java", "BodyUseAPI": [], "Fixed commit": "f9a9122e6c55c6a1b4859358c9c85605afeab84d", "Url": "https://api.github.com/repos/xtianus/yadaframework", "Date": "2017-11-26T17:37:08Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((particleList.size()) < 1000) && (!(net.minecraft.client.Minecraft.getMinecraft().isGamePaused()))) { if (((java.lang.System.nanoTime()) - (((thebetweenlands.tileentities.TileEntityWisp) (tileEntity)).lastSpawn)) >= ((500.0F - ((500.0F * (thebetweenlands.utils.confighandler.ConfigHandler.WISP_QUALITY)) / 100.0F)) * 1000000L)) { ((thebetweenlands.tileentities.TileEntityWisp) (tileEntity)).lastSpawn = java.lang.System.nanoTime(); int wispMeta = tileEntity.getBlockMetadata(); particleList.add(new thebetweenlands.entities.particles.EntityWispFX(tileEntity.getWorldObj(), ((x + 0.5) + (net.minecraft.client.renderer.entity.RenderManager.renderPosX)), ((y + 0.5F) + (net.minecraft.client.renderer.entity.RenderManager.renderPosY)), ((z + 0.5) + (net.minecraft.client.renderer.entity.RenderManager.renderPosZ)), 0.0, 0.0, 0.0, 3.0F, 50, BLBlockRegistry.wisp.colors[wispMeta])); particleList.add(new thebetweenlands.entities.particles.EntityWispFX(tileEntity.getWorldObj(), ((x + 0.5) + (net.minecraft.client.renderer.entity.RenderManager.renderPosX)), ((y + 0.5F) + (net.minecraft.client.renderer.entity.RenderManager.renderPosY)), ((z + 0.5) + (net.minecraft.client.renderer.entity.RenderManager.renderPosZ)), 0.0, 0.0, 0.0, 2.0F, 50, BLBlockRegistry.wisp.colors[(wispMeta + 1)])); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/7305/buggy-version/java.thebetweenlands.client.render.tileentity.TileEntityWispRenderer.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Object>.add(thebetweenlands.entities.particles.EntityWispFX)", "java.util.ArrayList<java.lang.Object>.add(thebetweenlands.entities.particles.EntityWispFX)"], "Fixed commit": "0ea75b41cc5b69400bd96729ff49143983854164", "Url": "https://api.github.com/repos/Angry-Pixel/The-Betweenlands", "Date": "2015-03-26T20:47:27Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (sel.contains(\"%\")) { if (!(sel.matches(\".*\\\\(.*%.*\\\\)\"))) { action = \"update\"; updated_selector = sel.trim().replaceAll(\",\\\\s*\", \",\").split(\"%\"); selector = updated_selector[0]; logger.info(((\"selector: \" + (selector)) + \" to be updated.\")); }else { selector = sel.trim().replaceAll(\",\\\\s*\", \",\"); logger.info(((\"selector: \" + (selector)) + \" read.\")); } }else { selector = sel.replaceAll(\",\\\\s*\", \",\"); logger.info(((\"selector: \" + (selector)) + \" read.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/4629/buggy-version/src.main.java.Block.java", "BodyUseAPI": [], "Fixed commit": "d0afc9dc1edc5d0ca591263a2fd676d5aa40bb9c", "Url": "https://api.github.com/repos/kmulvey/bootstrap-builder", "Date": "2013-10-06T14:22:56Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((listSpawnablesTry.size()) > 0) { return listSpawnablesTry.get(random.nextInt(listSpawnablesTry.size())); }else { java.lang.System.out.println(\"nothing to spawn!\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/1544/buggy-version/src.main.java.com.corosus.inv.capabilities.PlayerDataInstance.java", "BodyUseAPI": ["java.util.List<com.corosus.inv.InvasionEntitySpawn>.size()", "java.util.Random.nextInt(listSpawnablesTry.size())", "java.util.List<com.corosus.inv.InvasionEntitySpawn>.get(int)"], "Fixed commit": "bf73057d9aa25cf2388c7a612edd9158e2442d52", "Url": "https://api.github.com/repos/Corosauce/HostileWorlds_Invasions", "Date": "2017-04-19T15:34:55Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.GINGERBREAD_MR1)) { decodingAsyncTask.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR); }else { decodingAsyncTask.execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5684/buggy-version/android-pdfview.src.main.java.com.joanzapata.pdfview.PDFView.java", "BodyUseAPI": [], "Fixed commit": "5259fb792fead44c646e30e6e22601baf9424a3b", "Url": "https://api.github.com/repos/ecstasy2/android-pdfview", "Date": "2014-03-27T03:30:21Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((loc_scal_pair.length) > 1) { scaling = new java.lang.Double(loc_scal_pair[1]); }else { sender.sendMessage(((\"No scaling specified for \" + location_name) + \" using 1.0\")); scaling = new java.lang.Double(1.0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3493/buggy-version/src.main.java.com.github.omwah.SDFEconomy.commands.ConvertCommand.java", "BodyUseAPI": [], "Fixed commit": "5871a98643fe63e1649ff7473bed8dadb6e89fa7", "Url": "https://api.github.com/repos/omwah/SDFEconomy", "Date": "2012-12-24T04:47:37Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (performanceParamsMap != null) { resultMap.put(performanceParamsMap.getVirtualArray(), com.emc.storageos.api.service.impl.resource.utils.PerformanceParamsUtils.transformPerformanceParams(performanceParamsMap)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/8077/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.utils.PerformanceParamsUtils.java", "BodyUseAPI": ["java.util.Map<java.net.URI, java.util.Map<com.emc.storageos.db.client.model.VolumeTopology.VolumeTopologyRole, java.net.URI>>.put(performanceParamsMap.getVirtualArray(),com.emc.storageos.db.client.model.VolumeTopology)", "com.emc.storageos.api.service.impl.resource.utils.PerformanceParamsUtils.transformPerformanceParams(com.emc.storageos.model.block.BlockPerformanceParamsMap)", "com.emc.storageos.model.block.BlockPerformanceParamsMap.getVirtualArray()"], "Fixed commit": "ca2461ca9582d9cd0be46d00f5b9687720af8929", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-07-06T13:49:55Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(previousPlayer.getDiscoveredCards().contains(card))) { previousPlayer.addToDiscoveredCards(card); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/466/buggy-version/src.guiCluedo.ui.UI.java", "BodyUseAPI": ["guiCluedo.game.Player.addToDiscoveredCards(guiCluedo.game.Card)"], "Fixed commit": "9b071ff05ac3110c221aa44c35b194c838fd882b", "Url": "https://api.github.com/repos/jimmy2174/GUICluedo", "Date": "2015-08-25T09:16:36Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getBoolean(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (adapt) { android.view.Display display = getWindowManager().getDefaultDisplay(); android.graphics.Point size = new android.graphics.Point(); display.getSize(size); int width = size.x; danielebaschieri.eu.cantiscout.Song s = danielebaschieri.eu.cantiscout.QueryManager.findSong(getApplicationContext(), id_song); int max = s.getSongMaxWidth(); return ((float) (width / (max / 0.6))); }else { android.content.SharedPreferences prefs = getSharedPreferences(danielebaschieri.eu.cantiscout.CantiScout.MY_PREFERENCES, Context.MODE_PRIVATE); return prefs.getFloat(danielebaschieri.eu.cantiscout.CantiScout.SIZE_SONG_KEY, 12); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/2821/buggy-version/app.src.main.java.danielebaschieri.eu.cantiscout.CantiScout.java", "BodyUseAPI": [], "Fixed commit": "d4abd5a3f82477874ae1d669e9bcf4d54c5c1a83", "Url": "https://api.github.com/repos/DangerBlack/CantiScout", "Date": "2014-09-06T10:27:21Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getSession()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((session.getAttribute(\"user\")) == null) { response.setStatus(403); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3027/buggy-version/server.src.api.SearchRestaurants.java", "BodyUseAPI": [], "Fixed commit": "415f2a3c2594872fcca8b9e3138e7e616d5e74ad", "Url": "https://api.github.com/repos/jeantimex/restaurant", "Date": "2016-04-10T23:04:58Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((other) instanceof java.lang.Comparable)) { throw new java.lang.ClassCastException(\".compareTo() Input not comparable\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/668/buggy-version/Rational.java", "BodyUseAPI": [], "Fixed commit": "d97e21eee89542ccb1414a159d984a36611727d9", "Url": "https://api.github.com/repos/nckng/SuperRepo", "Date": "2015-12-10T04:31:20Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(other instanceof Binary)) { throw new java.lang.ClassCastException(\".compareTo() Input not a Binary\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/668/buggy-version/Binary.java", "BodyUseAPI": [], "Fixed commit": "d97e21eee89542ccb1414a159d984a36611727d9", "Url": "https://api.github.com/repos/nckng/SuperRepo", "Date": "2015-12-10T04:31:20Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(other instanceof java.lang.Comparable)) { throw new java.lang.ClassCastException(\".equals() Input not Comparable\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/668/buggy-version/Binary.java", "BodyUseAPI": [], "Fixed commit": "d97e21eee89542ccb1414a159d984a36611727d9", "Url": "https://api.github.com/repos/nckng/SuperRepo", "Date": "2015-12-10T04:31:20Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (weiboContent != null) { content = weiboContent; if ((content.length()) > 280) { content = content.substring(0, 277); } }else { content = getString(R.string.share_prefix); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5047/buggy-version/GDSConHand.src.com.winjune.wifiindoor.InterestPlaceViewerActivity.java", "BodyUseAPI": [], "Fixed commit": "d88101718108ed9b2faa9bc71931c634f0a4d39e", "Url": "https://api.github.com/repos/winjunetech/GDSConHandAndroid", "Date": "2014-02-21T15:44:18Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.stockton.Component.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type.equals(\"unidentified\")) current.setType(\"callsign\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/6941/buggy-version/src.edu.stockton.LanguageProcessor.java", "BodyUseAPI": [], "Fixed commit": "7d91c30b09536ba98b047ec1b0a1e0e23dc72d13", "Url": "https://api.github.com/repos/jico/ATCLP", "Date": "2011-04-21T04:09:53Z"},
{"Line": "=>3320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.rstudio.studio.client.workbench.views.source.StringUtil.isNullOrEmpty(target.getContext())) target.showFunction(event.getFunction());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/9203/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.source.Source.java", "BodyUseAPI": ["org.rstudio.studio.client.workbench.views.source.editors.codebrowser.CodeBrowserEditingTarget.showFunction(event.getFunction())"], "Fixed commit": "a11e12e77230034f99c23d0fd5495399cd5df757", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2015-08-07T17:25:03Z"},
{"Line": "=>753", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.NumPartitions) != (other.NumPartitions)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/3338/buggy-version/core.src.main.java.org.apache.mahout.math.hadoop.DistributedRowMatrix.java", "BodyUseAPI": [], "Fixed commit": "4d72ce6080cdc84011020aac83a1255c4747bbe0", "Url": "https://api.github.com/repos/bkrouse/mahout", "Date": "2013-04-29T23:44:36Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.imeSwitch.isChinese()) && (keyCode == ' ')) { if ((this.strokecount) == 0) { this.handleCharacter(keyCode, keyCodes); }else if ((this.strokecount) == 1) { this.onChooseWord(com.linkomnia.android.Changjie.WordProcessor.translateToChangjieCode(new java.lang.String(this.charbuffer, 0, this.strokecount))); }else { this.onChooseWord(this.candidateView.getSuggestion().get(0)); } }else if ((this.imeSwitch.isChinese()) && ((keyCode >= 'a') && (keyCode <= 'z'))) { this.typingStroke(keyCode); }else { this.handleCharacter(keyCode, keyCodes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V94/5024/buggy-version/src.com.linkomnia.android.Changjie.ChangjieIME.java", "BodyUseAPI": ["com.linkomnia.android.Changjie.ChangjieIME.handleCharacter(int,int[])", "com.linkomnia.android.Changjie.IMESwitch.isChinese()", "com.linkomnia.android.Changjie.ChangjieIME.handleCharacter(int,int[])", "com.linkomnia.android.Changjie.ChangjieIME.typingStroke(int)"], "Fixed commit": "d9473db4e566d5d0dc151ce6c0f8d4b7470867b2", "Url": "https://api.github.com/repos/wanleung/ChangjieIME", "Date": "2013-12-24T16:50:43Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pikater.core.agents.system.computationDescriptionParser.dependencyGraph.ModelComputationNode.getInputs()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((inputs.get(\"testing\")) == null) { testing = training; }else { testing = ((org.pikater.core.agents.system.computationDescriptionParser.edges.DataSourceEdge) (inputs.get(\"testing\").getNext())).getDataSourceId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1105/buggy-version/src.org.pikater.core.agents.system.computationDescriptionParser.dependencyGraph.ComputationStrategies.CAStartComputationStrategy.java", "BodyUseAPI": ["((org.pikater.core.agents.system.computationDescriptionParser.edges.DataSourceEdge) (inputs.get(\"testing\").getNext())).getDataSourceId()", "java.util.Map<java.lang.String, org.pikater.core.agents.system.computationDescriptionParser.ComputationOutputBuffer>.get(java.lang.String)", "inputs.get(\"testing\").getNext()"], "Fixed commit": "e19b0279afaa56d37e40cf176cb5ccc871c495d0", "Url": "https://api.github.com/repos/krajj7/pikater", "Date": "2014-07-21T14:27:35Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Integer.valueOf(val1)) < 30) { return hudson.util.FormValidation.error(\"Timeslot duration must be higher than 30\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1804/buggy-version/src.main.java.com.hp.application.automation.tools.run.SseBuilder.java", "BodyUseAPI": [], "Fixed commit": "f05c7dc5428f699ce4a5e16555fba35fb2f63f15", "Url": "https://api.github.com/repos/YafimK/hp-application-automation-tools-plugin", "Date": "2016-09-26T20:53:04Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.isNumeric(val1))) { return hudson.util.FormValidation.error(\"Timeslot duration must be a number\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1804/buggy-version/src.main.java.com.hp.application.automation.tools.run.SseBuilder.java", "BodyUseAPI": [], "Fixed commit": "f05c7dc5428f699ce4a5e16555fba35fb2f63f15", "Url": "https://api.github.com/repos/YafimK/hp-application-automation-tools-plugin", "Date": "2016-09-26T20:53:04Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((searchtoggle) == false) { searchbox.setVisibility(View.GONE); }else if ((searchtoggle) == true) { searchbox.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1761/buggy-version/moVirt.src.main.java.org.ovirt.mobile.movirt.ui.BaseEntityListFragment.java", "BodyUseAPI": [], "Fixed commit": "6afb6a3d7170f003f13a0337cd2f0a5956efa283", "Url": "https://api.github.com/repos/Neha--Agarwal/moVirt", "Date": "2015-10-10T12:24:12Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2611/buggy-version/src.main.java.com.spotify.docker.client.messages.RegistryConfigs.java", "BodyUseAPI": [], "Fixed commit": "9cd8837039c90a615cda8ecfbccaa4b383c9e586", "Url": "https://api.github.com/repos/spotify/docker-client", "Date": "2017-05-22T20:52:54Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerKickEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (TempleManager.locationMap.containsKey(p)) p.teleport(TempleManager.locationMap.get(p));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4642/buggy-version/src.com.msingleton.templecraft.TCDisconnectListener.java", "BodyUseAPI": ["TempleManager.locationMap.get(org.bukkit.entity.Player)", "org.bukkit.entity.Player.teleport(TempleManager.locationMap.get(p))"], "Fixed commit": "f7a2a2c1b7ecd5224990acf6a15044672d147edf", "Url": "https://api.github.com/repos/mikesingleton/TempleCraft", "Date": "2011-08-15T08:27:06Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerQuitEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (TempleManager.locationMap.containsKey(p)) p.teleport(TempleManager.locationMap.get(p));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4642/buggy-version/src.com.msingleton.templecraft.TCDisconnectListener.java", "BodyUseAPI": ["org.bukkit.entity.Player.teleport(TempleManager.locationMap.get(p))", "TempleManager.locationMap.get(org.bukkit.entity.Player)"], "Fixed commit": "f7a2a2c1b7ecd5224990acf6a15044672d147edf", "Url": "https://api.github.com/repos/mikesingleton/TempleCraft", "Date": "2011-08-15T08:27:06Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.auth.FirebaseUser.getUid()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((com.hallak.billdozer.services.UserService.mDatabaseReference.child(\"users\").child(uid).child(\"firtVisit\").getParent()) == null) { com.hallak.billdozer.models.User saved = new com.hallak.billdozer.models.User(uid, name, email); com.hallak.billdozer.services.UserService.mDatabaseReference.child(\"users\").child(saved.getId()).setValue(saved); android.util.Log.i(com.hallak.billdozer.services.UserService.TAG, \"User created\"); com.hallak.billdozer.services.CategoryService.initializeCategories(saved.getId()); return saved; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7216/buggy-version/app.src.main.java.com.hallak.billdozer.services.UserService.java", "BodyUseAPI": ["com.hallak.billdozer.services.UserService.mDatabaseReference.child(\"users\").child(saved.getId())", "com.hallak.billdozer.services.UserService.mDatabaseReference.child(\"users\").child(saved.getId()).setValue(com.hallak.billdozer.models.User)", "com.google.firebase.database.DatabaseReference.child(java.lang.String)"], "Fixed commit": "d6a6ffa64f4f0d3843739ff35ff93cb6c13210f0", "Url": "https://api.github.com/repos/hallaksec/Billdozer", "Date": "2017-04-09T14:33:38Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.getType(context).isStringType()) { return new com.form.language.ast.values.BoolValue(((((com.form.language.ast.values.StringValue) (super.left.evaluate(context))).getValue()) != (((com.form.language.ast.values.StringValue) (super.right.evaluate(context))).getValue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2183/buggy-version/SanderMark.QL.src.com.form.language.ast.expression.logic.NotEqual.java", "BodyUseAPI": ["((com.form.language.ast.values.StringValue) (super.right.evaluate(context))).getValue()", "super.left.evaluate(com.form.language.memory.Context)", "super.right.evaluate(com.form.language.memory.Context)", "((com.form.language.ast.values.StringValue) (super.left.evaluate(context))).getValue()"], "Fixed commit": "9fc1c48c9f8993894731476ec80d241cbfbf47ef", "Url": "https://api.github.com/repos/software-engineering-amsterdam/many-ql", "Date": "2015-03-12T09:20:34Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.getType(context).isBoolType()) { return new com.form.language.ast.values.BoolValue(((((com.form.language.ast.values.BoolValue) (super.left.evaluate(context))).getValue()) != (((com.form.language.ast.values.BoolValue) (super.right.evaluate(context))).getValue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2183/buggy-version/SanderMark.QL.src.com.form.language.ast.expression.logic.NotEqual.java", "BodyUseAPI": ["((com.form.language.ast.values.BoolValue) (super.right.evaluate(context))).getValue()", "super.left.evaluate(com.form.language.memory.Context)", "((com.form.language.ast.values.BoolValue) (super.left.evaluate(context))).getValue()", "super.right.evaluate(com.form.language.memory.Context)"], "Fixed commit": "9fc1c48c9f8993894731476ec80d241cbfbf47ef", "Url": "https://api.github.com/repos/software-engineering-amsterdam/many-ql", "Date": "2015-03-12T09:20:34Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.getType(context).isIntType()) { return new com.form.language.ast.values.BoolValue(((((com.form.language.ast.values.IntValue) (super.left.evaluate(context))).getValue()) != (((com.form.language.ast.values.IntValue) (super.right.evaluate(context))).getValue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2183/buggy-version/SanderMark.QL.src.com.form.language.ast.expression.logic.NotEqual.java", "BodyUseAPI": ["super.right.evaluate(com.form.language.memory.Context)", "((com.form.language.ast.values.IntValue) (super.left.evaluate(context))).getValue()", "super.left.evaluate(com.form.language.memory.Context)", "((com.form.language.ast.values.IntValue) (super.right.evaluate(context))).getValue()"], "Fixed commit": "9fc1c48c9f8993894731476ec80d241cbfbf47ef", "Url": "https://api.github.com/repos/software-engineering-amsterdam/many-ql", "Date": "2015-03-12T09:20:34Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((student.getRank()) != (info.tregmine.api.Rank.UNVERIFIED)) && ((student.getRank()) != (info.tregmine.api.Rank.TOURIST))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4826/buggy-version/src.info.tregmine.commands.MentorCommand.java", "BodyUseAPI": [], "Fixed commit": "022d0d764d5772fc3d36ddc48bdf5225ce87b122", "Url": "https://api.github.com/repos/Tregmine/tregmine-mc", "Date": "2016-04-16T00:56:39Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (path != null) { path = (path.startsWith(\"/\")) ? path : \"/\" + path; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8938/buggy-version/src.com.availo.wms.plugin.vhostloadbalancer.ModuleLoadBalancerRedirector.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "b067ad0b23ebb691ad5c179bb5e11a034a28b216", "Url": "https://api.github.com/repos/availo/wowza-vhost-loadbalancer", "Date": "2012-12-05T12:30:12Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.jar.JarFile.getEntry(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (manifest != null) { properties.put(\"creation\", new org.joda.time.DateTime(manifest.getTime()).toString(\"yyyy-MM-dd HH:mm:ss\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/701/buggy-version/server.bennu-core.src.main.java.org.fenixedu.bennu.core.json.adapters.JarFileViewer.java", "BodyUseAPI": ["java.util.Properties.put(java.lang.String,new org.joda.time.DateTime(manifest.getTime()).toString(\"yyyy-MM-dd HH:mm:ss\"))", "java.util.zip.ZipEntry.getTime()", "org.joda.time.DateTime.toString(java.lang.String)"], "Fixed commit": "ec09a4f061efd1d9d0a957f095e29d5f4d1bb3e8", "Url": "https://api.github.com/repos/diutsu/bennu", "Date": "2014-07-07T11:21:31Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!isTown) && (idNotToCheck >= 0)) { query = com.imdeity.deityapi.DeityAPI.getAPI().getDataAPI().getMySQL().readEnhanced((sql + \" AND kt.kingdom_id != ? AND kt.id = kc.town_id;\"), world, diameter, xCoord, xCoord, diameter, diameter, zCoord, zCoord, diameter, idNotToCheck); }else { query = com.imdeity.deityapi.DeityAPI.getAPI().getDataAPI().getMySQL().readEnhanced((sql + \" AND kt.kingdom_id != -1 AND kt.id = kc.town_id;\"), world, diameter, xCoord, xCoord, diameter, diameter, zCoord, zCoord, diameter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1009/buggy-version/src.com.imdeity.kingdoms.obj.KingdomsHelper.java", "BodyUseAPI": ["com.imdeity.deityapi.DeityAPI.getAPI().getDataAPI().getMySQL().readEnhanced(java.lang.String,java.lang.String,int,int,int,int,int,int,int,int,int)"], "Fixed commit": "87f351220a71f917f8e20d3ecfa8e50262566e6e", "Url": "https://api.github.com/repos/DeityKingdomsDev/Kingdoms2", "Date": "2012-08-20T22:23:23Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vp.getNumOfSelectedFrags()) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5157/buggy-version/src.main.java.vpvgui.io.BEDFileExporter.java", "BodyUseAPI": [], "Fixed commit": "a2dcd3d7a8a378afd4d7a6ba5f5022ec63a68dca", "Url": "https://api.github.com/repos/TheJacksonLaboratory/Gopher", "Date": "2017-11-06T14:07:00Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vp.getNumOfSelectedFrags()) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5157/buggy-version/src.main.java.vpvgui.io.BEDFileExporter.java", "BodyUseAPI": [], "Fixed commit": "a2dcd3d7a8a378afd4d7a6ba5f5022ec63a68dca", "Url": "https://api.github.com/repos/TheJacksonLaboratory/Gopher", "Date": "2017-11-06T14:07:00Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vp.getNumOfSelectedFrags()) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5157/buggy-version/src.main.java.vpvgui.io.BEDFileExporter.java", "BodyUseAPI": [], "Fixed commit": "a2dcd3d7a8a378afd4d7a6ba5f5022ec63a68dca", "Url": "https://api.github.com/repos/TheJacksonLaboratory/Gopher", "Date": "2017-11-06T14:07:00Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arguments.length) > 2) { for (int i = 3; i < (arguments.length); i++) { value += \" \" + (arguments[i]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7322/buggy-version/src.com.emersondemetrio.involves.commands.FilterCommand.java", "BodyUseAPI": [], "Fixed commit": "5e6c0e88ad1357dd1f1fd80defe55748032745dd", "Url": "https://api.github.com/repos/emersondemetrio/involves", "Date": "2017-01-09T00:05:59Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerJoinEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((p.isOp()) == false) { e.setJoinMessage(((((main.standartMsg) + \"\ufffdb\") + (p.getName())) + \"\ufffd3 ist dem Spiel beigetreten\")); p.setGameMode(GameMode.SURVIVAL); p.setAllowFlight(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8782/buggy-version/src.de.Roleplay.events.JoinLeave.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerJoinEvent.setJoinMessage(((((main.standartMsg) + \"\ufffdb\") + (p.getName())) + \"\ufffd3 ist dem Spiel beigetreten\"))", "org.bukkit.entity.Player.setGameMode(GameMode.SURVIVAL)", "org.bukkit.entity.Player.getName()", "org.bukkit.entity.Player.setAllowFlight(boolean)"], "Fixed commit": "23e331d77eec51e30f6590167a5b1c923d619157", "Url": "https://api.github.com/repos/JulianDeWindt/Plugin", "Date": "2016-10-02T20:48:04Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (startRow > 0) rs.absolute(startRow);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2893/buggy-version/src.org.nutz.dao.impl.sql.run.NutDaoExecutor.java", "BodyUseAPI": ["java.sql.ResultSet.absolute(int)"], "Fixed commit": "ab7488333c2d5cb1730d797bfd88d7dd126b8ae1", "Url": "https://api.github.com/repos/nutzam/nutz", "Date": "2012-05-02T11:43:05Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lastRow > 0) stat.setMaxRows(lastRow);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2893/buggy-version/src.org.nutz.dao.impl.sql.run.NutDaoExecutor.java", "BodyUseAPI": ["java.sql.Statement.setMaxRows(int)"], "Fixed commit": "ab7488333c2d5cb1730d797bfd88d7dd126b8ae1", "Url": "https://api.github.com/repos/nutzam/nutz", "Date": "2012-05-02T11:43:05Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.cornell.opencomm.controller.ContactListController.D) android.util.Log.d(edu.cornell.opencomm.controller.ContactListController.TAG, (\"showing buddy list for \" + (MainApplication.userPrimary.getUsername())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3508/buggy-version/2011_2012.Mar1Mar15Cycle.OpenComm_Sean_Audio.src.edu.cornell.opencomm.controller.ContactListController.java", "BodyUseAPI": [], "Fixed commit": "b62c83bfc2664310136e514664c3e633c14e8425", "Url": "https://api.github.com/repos/OpenComm/OpenComm-Group", "Date": "2012-03-30T07:27:50Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(result.isSuccess())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8911/buggy-version/src.com.owncloud.android.lib.resources.shares.UpdateRemoteShareOperation.java", "BodyUseAPI": [], "Fixed commit": "740f0deb82c3c6d23c30ee62adb2823e37213eae", "Url": "https://api.github.com/repos/owncloud/android-library", "Date": "2016-04-01T12:57:46Z"},
{"Line": "=>618", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cf.outer) == null) cf.outer = wanted.priorInvocation;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6102/buggy-version/src.org.perl6.nqp.runtime.Ops.java", "BodyUseAPI": [], "Fixed commit": "d16fef528f7cb29c63dc415ea240037ce4da8a12", "Url": "https://api.github.com/repos/jnthn/nqp-jvm-prep", "Date": "2013-01-19T20:06:25Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOrphanNode) { subjectNodeId = this.networkService.createNodeFromFunctionTermId(representedTermId); }else { subjectNodeId = this.networkService.getNodeIdByFunctionTermId(representedTermId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5237/buggy-version/src.main.java.org.ndexbio.xbel.splitter.StatementGroupSplitter.java", "BodyUseAPI": [], "Fixed commit": "5374a466747d5ce5c2c3a865cf4bb71e81eefbb7", "Url": "https://api.github.com/repos/cytoscape/ndex-task", "Date": "2014-09-21T23:43:08Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.carlspring.strongbox.providers.layout.NugetHierarchicalLayoutProvider.getArtifactCoordinates(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (c == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1963/buggy-version/strongbox-storage.strongbox-storage-layout-providers.strongbox-storage-nuget-layout-provider.src.main.java.org.carlspring.strongbox.providers.layout.NugetHierarchicalLayoutProvider.java", "BodyUseAPI": [], "Fixed commit": "4b0eae40eda0909274d694d7c19cb90dc4bc14fc", "Url": "https://api.github.com/repos/sbespalov/strongbox", "Date": "2017-10-04T03:25:10Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.sqrt(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (r > 0) { p.x += (1.4 * dx) / r; p.y += (1.4 * dy) / r; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3690/buggy-version/main.calibration.src.boofcv.alg.feature.detect.chess.ChessboardPolygonHelper.java", "BodyUseAPI": [], "Fixed commit": "ddd948216dcb1b7f89e2cc57cecae2f6d43271dd", "Url": "https://api.github.com/repos/lessthanoptimal/BoofCV", "Date": "2015-10-18T02:01:45Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((center) == null) { center = new net.svamp.wifitracker.core.Point3D(((getLeft()) + ((getWidth()) / 2)), ((getTop()) + ((getHeight()) / 2))); smallestRad = java.lang.Math.min((((getWidth()) / 2) - 10), (((getHeight()) / 2) - 10)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4486/buggy-version/src.net.svamp.wifitracker.CompassView.java", "BodyUseAPI": [], "Fixed commit": "793d50586d174bf82678049ce59009e3b3609fa6", "Url": "https://api.github.com/repos/mads-b/WifiTracker", "Date": "2012-10-02T19:41:50Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((name.length) == 0) || (name[0].equals(\"\"))) { return ERROR_NO_NAME; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1852/buggy-version/src.LogicHandler.java", "BodyUseAPI": [], "Fixed commit": "3c484f1fbebd9df1d9555f1d7c6887a0c62da378", "Url": "https://api.github.com/repos/cs2103aug2014-w14-1j/main", "Date": "2014-11-05T06:50:46Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((profile.getPassword().length()) < 8) { res = \"password length is too short\"; error = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6070/buggy-version/Facemash.src.main.java.com.abhi.app.controller.FacebookController.java", "BodyUseAPI": [], "Fixed commit": "ef27049c27ba869c60afad288d41f60a577a563b", "Url": "https://api.github.com/repos/abhishek125/Facemash", "Date": "2017-06-22T17:28:01Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!error) res = ((profileDaoService.saveProfile(profile, confirm)) == true) ? \"account created successfully\" : \"account creation error please try again\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6070/buggy-version/Facemash.src.main.java.com.abhi.app.controller.FacebookController.java", "BodyUseAPI": [], "Fixed commit": "ef27049c27ba869c60afad288d41f60a577a563b", "Url": "https://api.github.com/repos/abhishek125/Facemash", "Date": "2017-06-22T17:28:01Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dataCache.contains(event))) { dataCache.add(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8192/buggy-version/src.main.java.org.investovator.dataplaybackengine.scheduler.RealTimeEventTask.java", "BodyUseAPI": ["java.util.PriorityQueue<org.investovator.dataplaybackengine.scheduler.StockUpdateEvent>.add(org.investovator.dataplaybackengine.scheduler.StockUpdateEvent)"], "Fixed commit": "3e2e9185603bfc29c03cbf587889ae442a51ada3", "Url": "https://api.github.com/repos/investovator/investovator-dataplaybackengine", "Date": "2013-11-15T16:37:41Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (name.endsWith(\"...\")) { java.lang.String realName = name.substring(0, ((name.length()) - 3)); int pos = realName.lastIndexOf(\".\"); return name.substring((pos + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6210/buggy-version/src.main.java.de.uniks.networkparser.graph.GraphEntity.java", "BodyUseAPI": ["de.uniks.networkparser.graph.GraphEntity.substring(int,((name.length()) - 3))", "de.uniks.networkparser.graph.GraphEntity.length()", "de.uniks.networkparser.graph.GraphEntity.substring(int)"], "Fixed commit": "6ffc5b13c1963d581ba5c78fdd1850127997df18", "Url": "https://api.github.com/repos/fujaba/NetworkParser", "Date": "2016-02-26T12:37:02Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentMin < 10) { currentMinString = \"0\" + currentMin; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1605/buggy-version/src.main.java.logic.EventRepository.java", "BodyUseAPI": [], "Fixed commit": "956231b4e745b4e47b09381fd80881ce558ca4b5", "Url": "https://api.github.com/repos/AlexLekkas90/Brainwaves", "Date": "2015-08-12T17:34:40Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentMin < 10) { currentMinString = \"0\" + currentMin; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1605/buggy-version/src.main.java.logic.EventRepository.java", "BodyUseAPI": [], "Fixed commit": "956231b4e745b4e47b09381fd80881ce558ca4b5", "Url": "https://api.github.com/repos/AlexLekkas90/Brainwaves", "Date": "2015-08-12T17:34:40Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentMin < 10) { currentMinString = \"0\" + currentMin; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1605/buggy-version/src.main.java.logic.EventRepository.java", "BodyUseAPI": [], "Fixed commit": "956231b4e745b4e47b09381fd80881ce558ca4b5", "Url": "https://api.github.com/repos/AlexLekkas90/Brainwaves", "Date": "2015-08-12T17:34:40Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentMin < 10) { currentMinString = \"0\" + currentMin; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1605/buggy-version/src.main.java.logic.EventRepository.java", "BodyUseAPI": [], "Fixed commit": "956231b4e745b4e47b09381fd80881ce558ca4b5", "Url": "https://api.github.com/repos/AlexLekkas90/Brainwaves", "Date": "2015-08-12T17:34:40Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (intent != null) { java.lang.String action = intent.getAction(); android.util.Log.v(\"onStartCommand\", action); if (com.github.javaperson.image.ImageWidget.ACTION_UPDATE.equals(action)) { update(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3746/buggy-version/src.com.github.javaperson.image.ImageWidget.java", "BodyUseAPI": ["com.github.javaperson.image.Intent.getAction()"], "Fixed commit": "ef6e0f050d277f133cce0108fd51f217c4cf6fd6", "Url": "https://api.github.com/repos/javaperson/image", "Date": "2015-04-23T03:54:42Z"},
{"Line": "=>1157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pnh.getField()) != null) { aadlbaText.addOutput(\".\"); process(pnh.getField()); }else if (peh.isSetArrayIndexes()) { caseArrayIndex(peh.getArrayIndexes()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4577/buggy-version/org.osate.ba.src.org.osate.ba.unparser.AadlBaUnparser.java", "BodyUseAPI": ["org.osate.ba.aadlba.PropertyNameHolder.getField()", "org.osate.ba.unparser.AadlBaUnparser.1.process(pnh.getField())"], "Fixed commit": "9960343405cae95ff1064b789dd4414a2693cf0f", "Url": "https://api.github.com/repos/osate/osate2-ba", "Date": "2014-12-23T11:53:24Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.mygdx.game.util.managers.DataManager.getData(this.buildingName, DataBuilder.JsonBuilding.class).inventory)) { this.owner.destroyComponent(com.mygdx.game.component.Inventory.class); this.inventory = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3980/buggy-version/core.src.com.mygdx.game.component.Building.java", "BodyUseAPI": [], "Fixed commit": "f4f5e1067dc9bad4cd6e95b818bad3810401b440", "Url": "https://api.github.com/repos/Pahasz/ColonyGame", "Date": "2015-07-02T21:21:48Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.com.insanitech.javabinary.ObjectDecoder.findArrayType(values.getName(),java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (itemType == null) { throw new br.com.insanitech.javabinary.exceptions.TypeNotSupportedException(this.findObjectType(values.getName(), instance)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2677/buggy-version/java.binary.src.main.java.br.com.insanitech.javabinary.ObjectDecoder.java", "BodyUseAPI": [], "Fixed commit": "8d52cb7cbf85dadfbddd99a24c68b638094a7150", "Url": "https://api.github.com/repos/andersonlucasg3/Java.Binary", "Date": "2017-06-28T17:27:59Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isGzipping) { com.vinumeris.updatefx.Utils.println(\"(zipping)\"); zipStream = new java.util.zip.GZIPOutputStream(hashingStream); writer = new com.nothome.delta.GDiffWriter(zipStream); }else { writer = new com.nothome.delta.GDiffWriter(hashingStream); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7848/buggy-version/api.src.main.java.com.vinumeris.updatefx.DeltaCalculator.java", "BodyUseAPI": [], "Fixed commit": "a56f10337746abfe60e155663fb22e7ad28720d3", "Url": "https://api.github.com/repos/vinumeris/updatefx", "Date": "2014-10-10T17:42:20Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tech.services.interfaces.IChatroomEntitiesService.getRoomByName(quitMember.getRoom_name())", "userService.getUserByUsername(quitMember.getUser_name()).getId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (java.util.Objects.equals(CE.getRoom_creator(), userID)) { chatroomEntitesService.delete(CE); return new org.springframework.http.ResponseEntity(Responses.SUCCESS.getData(), org.springframework.http.HttpStatus.OK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3608/buggy-version/src.main.java.com.tech.controllers.ChatroomController.java", "BodyUseAPI": ["com.tech.services.interfaces.IChatroomEntitiesService.delete(com.tech.models.entities.chatroom.ChatroomEntities)"], "Fixed commit": "c05bbceda4aded26d6ec2f9e87447dab9f2300ae", "Url": "https://api.github.com/repos/TexnologiaLogismikou/Fiz", "Date": "2015-12-16T22:16:36Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.mGDriveSyncTimer) != null) { log(\"Error: race condition when setting up GDrive\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2863/buggy-version/HelloWorld.app.src.main.java.com.bla.DataTransferService.AquaService.java", "BodyUseAPI": [], "Fixed commit": "bcc022a22cc2f8dd002d26808cf232ff8f35f49b", "Url": "https://api.github.com/repos/tbiesemann/caccobackend", "Date": "2016-04-14T18:55:25Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((coreData.getSongWaveform()) != null) { if ((coreData.getSongWaveform().getStatus()) == (nak.nakloidGUI.models.Waveform.WaveformStatus.LOADING)) { org.eclipse.swt.widgets.Display.getCurrent().timerExec(100, this); return; } if (coreData.getSongWaveform().isLoaded()) { overView.redraw(coreData.getSongWaveform(), mainView.getClientArea().width, mainView.getOffset().x, msByPixel); mainView.redraw(); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7785/buggy-version/nak.nakloidGUI.gui.MainWindow.java", "BodyUseAPI": ["nak.nakloidGUI.coredata.CoreData.getSongWaveform()", "nak.nakloidGUI.coredata.CoreData.getSongWaveform()", "coreData.getSongWaveform().getStatus()", "nak.nakloidGUI.gui.mainWindowViews.OverView.redraw(coreData.getSongWaveform(),mainView.getClientArea().width,mainView.getOffset().x,double)", "nak.nakloidGUI.coredata.CoreData.getSongWaveform()", "coreData.getSongWaveform().isLoaded()"], "Fixed commit": "654e46185b5164dcc82f81bd4af848a4f214bd21", "Url": "https://api.github.com/repos/acknak/NakloidGUI", "Date": "2016-07-31T04:03:00Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((changeLogEntry.getContextId()) != null) { lastContextId = changeLogEntry.getContextId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8182/buggy-version/src.main.java.edu.internet2.middleware.changelogconsumer.googleapps.GoogleAppsChangeLogConsumer.java", "BodyUseAPI": ["edu.internet2.middleware.changelogconsumer.googleapps.ChangeLogEntry.getContextId()"], "Fixed commit": "35af9f53bdd0d579ae9f34a4c7f76efe979af4b4", "Url": "https://api.github.com/repos/ucidentity/googleapps-grouper-provisioner", "Date": "2017-01-12T17:54:44Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menuItemRefresh) != null) { menuItemRefresh.setActionView(null); menuItemRefresh.setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/415/buggy-version/src.de.thecamper.android.wkgvertretungsplan.WKGVertretungsplanActivity.java", "BodyUseAPI": [], "Fixed commit": "07b1ccf02531b1250f579be7de9bbb9c6c0a01c9", "Url": "https://api.github.com/repos/thecamper/WKGVertretungsplan", "Date": "2012-05-31T10:58:08Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { leftLayout.setBackgroundResource(R.drawable.bump_outer_left); rightLayout.setBackgroundResource(R.drawable.bump_outer_right); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4933/buggy-version/app.src.main.java.com.james.status.views.StatusView.java", "BodyUseAPI": [], "Fixed commit": "21878770326e0e497aaa5383028980f15d789c70", "Url": "https://api.github.com/repos/TheAndroidMaster/Status", "Date": "2017-09-30T14:50:47Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((messages.isEmpty()) || (!(messages.containsKey(message)))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/340/buggy-version/commons.che-core-commons-gwt.src.main.java.org.eclipse.che.ide.ui.loader.IdeLoader.java", "BodyUseAPI": [], "Fixed commit": "0b4a5bef2c4e8c9c53e78de7ffd0e0848ffb5820", "Url": "https://api.github.com/repos/codenvy-legacy/che-core", "Date": "2015-08-11T14:28:02Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(toBeIncluded.isEmpty())) includeConstraints(chunkCollector, chunkWithOrgan, toBeIncluded);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7880/buggy-version/src.main.java.edu.arizona.biosemantics.semanticmarkup.ling.chunk.lib.chunker.MyNewCleanupChunker.java", "BodyUseAPI": ["edu.arizona.biosemantics.semanticmarkup.ling.chunk.lib.chunker.MyNewCleanupChunker.includeConstraints(edu.arizona.biosemantics.semanticmarkup.ling.chunk.ChunkCollector,edu.arizona.biosemantics.semanticmarkup.ling.chunk.Chunk,java.util.ArrayList<edu.arizona.biosemantics.semanticmarkup.ling.chunk.Chunk>)"], "Fixed commit": "eae9bb21f4498da5d2bd3b2068194bdcb8f101e9", "Url": "https://api.github.com/repos/biosemantics/charaparser", "Date": "2015-03-18T18:09:46Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (existWithFiles(targetFolder)) { java.lang.System.out.println((\"using cache cmp ++++++ \" + targetFolder)); }else { cmdLine = (\"cd \" + voiceDir) + \"hts/data\\nmake cmp-mary\\n\"; marytts.util.io.General.launchBatchProc(cmdLine, \"\", voiceDir); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5987/buggy-version/marytts-builder.src.main.java.marytts.tools.voiceimport.HMMVoiceMakeData.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "6fd26b080ffec656410053ba237da40951a55870", "Url": "https://api.github.com/repos/vsooda/marytts", "Date": "2015-11-20T02:42:40Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.ListPreference.getEntryValues()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((java.lang.Long.valueOf(values[best].toString())) == 0) { mLockAfter.setSummary(getString(R.string.lock_immediately_summary_with_exception, preference.getTitle())); }else { mLockAfter.setSummary(getString(R.string.lock_after_timeout_summary_with_exception, entries[best], preference.getTitle())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/52/buggy-version/src.com.android.settings.SecuritySettings.java", "BodyUseAPI": ["com.android.settings.SecuritySettings.getString(R.string.lock_after_timeout_summary_with_exception,java.lang.CharSequence,preference.getTitle())", "android.preference.ListPreference.setSummary(getString(R.string.lock_after_timeout_summary_with_exception, entries[best], preference.getTitle()))"], "Fixed commit": "4b60af78fa8b0c474c9aee0f03171867843d2838", "Url": "https://api.github.com/repos/NuclearAndroidProject/android_packages_apps_Settings", "Date": "2015-06-16T23:59:36Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inCharge != null) { this.inCharge = inCharge; }else { this.inCharge = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2145/buggy-version/src.main.java.de.saxsys.model.Task.java", "BodyUseAPI": [], "Fixed commit": "34e3295b46c9af86f419d50e775ab96af5e0d4e0", "Url": "https://api.github.com/repos/on-delete/aufgabenverwaltung", "Date": "2015-07-27T10:08:31Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (description != null) { this.description = description; }else { this.description = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2145/buggy-version/src.main.java.de.saxsys.model.Task.java", "BodyUseAPI": [], "Fixed commit": "34e3295b46c9af86f419d50e775ab96af5e0d4e0", "Url": "https://api.github.com/repos/on-delete/aufgabenverwaltung", "Date": "2015-07-27T10:08:31Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.springframework.util.StringUtils.isEmpty(r.getRedirectUrl()))) { i.setEcho(rSo.echoUrl(_t.getResourceId(), m.getId())); }else { i.setEcho(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5730/buggy-version/src.main.java.com.shnlng.frog.service.TalkSo.java", "BodyUseAPI": [], "Fixed commit": "1ccb9a7c8f82fbf416be1e9ef8037f3deff8766a", "Url": "https://api.github.com/repos/ellwu/frog", "Date": "2016-06-06T08:22:59Z"},
{"Line": "=>954", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (verbatimEventDate.matches(\"^[A-Za-z]+[.]{0,1}[-][ ]{1}[A-Za-z]+[.]{0,1}[/ .][0-9]{4}$\")) { verbatimEventDate = verbatimEventDate.replace(\"- \", \"-\"); org.filteredpush.qc.date.DateUtils.logger.debug(verbatimEventDate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2954/buggy-version/src.main.java.org.filteredpush.qc.date.DateUtils.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "b46fd968c56ad062a7f6cbe11f260d2e9efda123", "Url": "https://api.github.com/repos/FilteredPush/event_date_qc", "Date": "2017-02-17T21:55:23Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.ans) == null) this.ans = new java.util.ArrayList<>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5776/buggy-version/src.main.java.cz.brmlab.yodaqa.io.ntcir.NTCIRQuestionReader.java", "BodyUseAPI": [], "Fixed commit": "faf18dd34a2351ee9b49ebc54e11fcab81c4c117", "Url": "https://api.github.com/repos/brmson/yodaqa", "Date": "2015-08-27T11:13:11Z"},
{"Line": "=>1809", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getAnnotations()) == null) || ((getAnnotations().size()) < 1)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8627/buggy-version/src.main.java.org.ecocean.Encounter.java", "BodyUseAPI": [], "Fixed commit": "d1fdd31890aec551bf281d0df161389b084a2fe5", "Url": "https://api.github.com/repos/WildbookOrg/Wildbook", "Date": "2017-02-22T20:45:44Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ecocean.Shepherd.getEncounter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((myShark.getAnnotations()) != null) { for (org.ecocean.Annotation ann : myShark.getAnnotations()) { myShepherd.getPM().makePersistent(ann); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8627/buggy-version/src.main.java.org.ecocean.servlet.EncounterSetGenusSpecies.java", "BodyUseAPI": ["org.ecocean.Encounter.getAnnotations()"], "Fixed commit": "d1fdd31890aec551bf281d0df161389b084a2fe5", "Url": "https://api.github.com/repos/WildbookOrg/Wildbook", "Date": "2017-02-22T20:45:44Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (new_.isEmpty()) isFunctionClass = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1860/buggy-version/org.eclipse.iee.translator.antlr.src.org.eclipse.iee.translator.antlr.translator.JavaTranslator.java", "BodyUseAPI": [], "Fixed commit": "d012c4ac607f3a37e985ed5a102abceb48c55e93", "Url": "https://api.github.com/repos/iee/iee", "Date": "2013-03-02T11:06:13Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jface.text.ITextViewer.getDocument()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (d == null) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6227/buggy-version/org.eclipse.jface.text.src.org.eclipse.jface.text.JFaceTextUtil.java", "BodyUseAPI": [], "Fixed commit": "1a2317d2545e5024d72d695f27df5b5c3f067734", "Url": "https://api.github.com/repos/Overruler/eclipse.platform.text", "Date": "2013-12-10T13:48:34Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jface.text.ITextViewer.getDocument()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (document == null) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6227/buggy-version/org.eclipse.jface.text.src.org.eclipse.jface.text.JFaceTextUtil.java", "BodyUseAPI": [], "Fixed commit": "1a2317d2545e5024d72d695f27df5b5c3f067734", "Url": "https://api.github.com/repos/Overruler/eclipse.platform.text", "Date": "2013-12-10T13:48:34Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getClientConfig()) != null) { if ((getClientConfig().getSuggestionSort()) != null) { params.put(\"sort\", getClientConfig().getSuggestionSort()); } }else { params.put(\"sort\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2973/buggy-version/UserVoiceSDK.src.com.uservoice.uservoicesdk.model.Suggestion.java", "BodyUseAPI": [], "Fixed commit": "f4df67769c2214f391dd1b8e3556aa5d7bab68c7", "Url": "https://api.github.com/repos/mjohan/uservoice-android-sdk", "Date": "2014-11-11T06:47:32Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.uservoice.uservoicesdk.Session.getInstance()) != null) { if ((com.uservoice.uservoicesdk.Session.getInstance().getClientConfig()) != null) { if (com.uservoice.uservoicesdk.Session.getInstance().getClientConfig().shouldDisplaySuggestionsByRank()) { textView.setText(model.getRankString()); }else { textView.setText(java.lang.String.valueOf(model.getNumberOfSubscribers())); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2973/buggy-version/UserVoiceSDK.src.com.uservoice.uservoicesdk.activity.ForumActivity.java", "BodyUseAPI": [], "Fixed commit": "f4df67769c2214f391dd1b8e3556aa5d7bab68c7", "Url": "https://api.github.com/repos/mjohan/uservoice-android-sdk", "Date": "2014-11-11T06:47:32Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playSound) { if (pointSound.isRunning()) pointSound.stop(); pointSound.setFramePosition(0); pointSound.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3146/buggy-version/src.com.example.perth155.main.GameLoop.java", "BodyUseAPI": [], "Fixed commit": "485e4cedd77f3183d6ef38e545f7810b7aa58199", "Url": "https://api.github.com/repos/abraramin/snake-classic", "Date": "2017-08-04T02:29:59Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((javax.faces.context.FacesContext.getCurrentInstance()) != null) { java.util.Optional<javax.faces.context.ExternalContext> optContext = java.util.Optional.ofNullable(javax.faces.context.FacesContext.getCurrentInstance().getExternalContext()); if (optContext.isPresent()) { java.util.Optional<java.util.Locale> userLocale = java.util.Optional.ofNullable(optContext.get().getRequestLocale()); if (userLocale.isPresent()) { currentLocale = userLocale.get(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7048/buggy-version/src.main.java.com.vgorcinschi.rimmanew.cdi.UserPreferencies.java", "BodyUseAPI": [], "Fixed commit": "adbb85cb967de2dfebad8191b76bb5d4a45ca3e2", "Url": "https://api.github.com/repos/vasigorc/rimmanew", "Date": "2017-02-21T00:20:53Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jacorb.orb.BufferManager.calcLog(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (log_curr >= (org.jacorb.orb.BufferManager.MIN_CACHE)) { if (log_curr > (maxManagedBufferSize)) { synchronized(this) { if (cdrStr && (((time) >= 0) && (((bufferMax) == null) || ((bufferMax.length) < (current.length))))) { bufferMax = current; } return; } } int expected = (1 << (log_curr + 1)) - 1; if ((current.length) != expected) { if (logger.isDebugEnabled()) { logger.debug((((((\"returnBuffer, log = \" + log_curr) + \" got length \") + (java.lang.Integer.toHexString(current.length))) + \" expected length \") + (java.lang.Integer.toHexString(expected)))); } }else { final java.util.Collection s = bufferPool[(log_curr - (org.jacorb.orb.BufferManager.MIN_CACHE))]; doReturnBuffer(s, current, threshold); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7802/buggy-version/src.org.jacorb.orb.BufferManager.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "adf8eb4800fe98484e0848ecc020a6bcb5b8cc8c", "Url": "https://api.github.com/repos/pmesnier/JacORB_from_JacORB", "Date": "2013-07-24T14:19:28Z"},
{"Line": "=>723", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (key.startsWith(\"ipt\")) { try { tmpl = org.apache.commons.lang.StringUtils.replace(tmpl, \"##ROWS##\", new java.lang.String(tagsMap.get(key).getBytes(), \"UTF-8\")); } catch (java.io.UnsupportedEncodingException e) { tmpl = org.apache.commons.lang.StringUtils.replace(tmpl, \"##ROWS##\", tagsMap.get(key)); } }else { tmpl = org.apache.commons.lang.StringUtils.replace(tmpl, \"##ROWS##\", tagsMap.get(key)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/809/buggy-version/src.main.java.dpfmanager.conformancechecker.tiff.reporting.HtmlReport.java", "BodyUseAPI": ["org.apache.commons.lang.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "org.apache.commons.lang.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String)", "org.apache.commons.lang.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.lang.String.getBytes()"], "Fixed commit": "9b03b09d45ab2b495d182b88b1043c3bfcb58af7", "Url": "https://api.github.com/repos/EasyinnovaSL/DPFManager", "Date": "2017-03-09T08:01:04Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (profile != null) SwipeActivity.profileList.add(profile);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/734/buggy-version/app.src.main.java.com.appdoptame.appdoptame.activities.PostActivity.java", "BodyUseAPI": ["SwipeActivity.profileList.add(com.appdoptame.appdoptame.model.Profile)"], "Fixed commit": "a7fd36c500a851356d19f03ab80a978148ef1652", "Url": "https://api.github.com/repos/afcajamarcar/Appdoptame", "Date": "2017-09-29T05:06:30Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((profile.getPhotos()) != null) { for (java.lang.String url : profile.getPhotos()) { com.daimajia.slider.library.SliderTypes.TextSliderView textSliderView = new com.daimajia.slider.library.SliderTypes.TextSliderView(this); textSliderView.description(profile.getName()).image(url); sliderShow.addSlider(textSliderView); } }else { com.daimajia.slider.library.SliderTypes.TextSliderView textSliderView = new com.daimajia.slider.library.SliderTypes.TextSliderView(this); textSliderView.description(profile.getName()).image(profile.getPhotoUrl()); sliderShow.addSlider(textSliderView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/734/buggy-version/app.src.main.java.com.appdoptame.appdoptame.activities.ProfileActivity.java", "BodyUseAPI": ["com.appdoptame.appdoptame.model.Profile.getPhotoUrl()", "com.daimajia.slider.library.SliderTypes.TextSliderView.description(profile.getName())", "textSliderView.description(profile.getName()).image(profile.getPhotoUrl())", "com.daimajia.slider.library.SliderTypes.TextSliderView.description(profile.getName())", "textSliderView.description(profile.getName()).image(java.lang.String)", "com.appdoptame.appdoptame.model.Profile.getPhotos()", "com.appdoptame.appdoptame.model.Profile.getName()", "com.appdoptame.appdoptame.model.Profile.getName()"], "Fixed commit": "a7fd36c500a851356d19f03ab80a978148ef1652", "Url": "https://api.github.com/repos/afcajamarcar/Appdoptame", "Date": "2017-09-29T05:06:30Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mScrollImage.getImage().isRecycled()) { mScrollImage.getImage().recycle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3213/buggy-version/KyoroTextViewer.src.info.kyorohiro.helloworld.textviewer.viewer.TextViewer.java", "BodyUseAPI": ["mScrollImage.getImage().recycle()", "info.kyorohiro.helloworld.display.simple.SimpleImage.getImage()"], "Fixed commit": "5da50b1ee09bb51c2367e5a91a37eeadc06ab0bf", "Url": "https://api.github.com/repos/kyorohiro/KyoroHelloAndroid", "Date": "2012-04-22T15:52:41Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(unit.getEmptyDeclaration().getType().isSubtypeOf(t))) { sb.append(com.redhat.ceylon.eclipse.code.correct.CorrectionUtil.defaultValue(unit, unit.getSequentialElementType(t))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6943/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.code.correct.CorrectionUtil.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "com.redhat.ceylon.compiler.typechecker.model.Unit.getSequentialElementType(com.redhat.ceylon.compiler.typechecker.model.ProducedType)", "com.redhat.ceylon.eclipse.code.correct.CorrectionUtil.defaultValue(com.redhat.ceylon.compiler.typechecker.model.Unit,unit.getSequentialElementType(t))"], "Fixed commit": "29b4cfd9bd4d5522512cbdc1e35cbf22d823b233", "Url": "https://api.github.com/repos/ceylon/ceylon-ide-eclipse", "Date": "2014-06-24T22:19:55Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!cleanupInvoked) { invokeCleanups(targetClass, targetObject, exceptionHandlerAnnotation.cleanup()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6164/buggy-version/blaze-ee-utils.src.main.java.com.blazebit.cdi.exception.CatchHandlerInterceptor.java", "BodyUseAPI": [], "Fixed commit": "79439dd6c6255deb2720e9100549873a9f8a995e", "Url": "https://api.github.com/repos/Blazebit/blaze-utils", "Date": "2013-05-22T09:29:14Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((content) == null) || (content.isEmpty())) { content = \"No location specified\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8480/buggy-version/app.src.main.java.sean.bostonhacks.Schedule.java", "BodyUseAPI": [], "Fixed commit": "b4af30c38097210dc720860b168e1319c866e4da", "Url": "https://api.github.com/repos/openwebbu/BostonHacks-Android", "Date": "2015-10-30T04:57:50Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hideMessageByJSONSetting(data)) { com.plugin.gcm.NotificationService.getInstance(getApplicationContext()).addNotificationForegroundCallBack(this.webView, callbackContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7237/buggy-version/src.android.com.plugin.gcm.PushPlugin.java", "BodyUseAPI": [], "Fixed commit": "50aca0601eba4b619cbec00a8a42d320c267a0af", "Url": "https://api.github.com/repos/wuellner/PushNotifications", "Date": "2015-09-29T12:47:00Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hideMessageByJSONSetting(data)) { com.plugin.gcm.NotificationService.getInstance(getApplicationContext()).addNotificationBackgroundCallBack(this.webView, callbackContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7237/buggy-version/src.android.com.plugin.gcm.PushPlugin.java", "BodyUseAPI": [], "Fixed commit": "50aca0601eba4b619cbec00a8a42d320c267a0af", "Url": "https://api.github.com/repos/wuellner/PushNotifications", "Date": "2015-09-29T12:47:00Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (measurement == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8792/buggy-version/app.src.main.java.com.citisense.vidklopcic.citisense.data.entities.CitiSenseStation.java", "BodyUseAPI": [], "Fixed commit": "1afc78c7075e3d9bf748e787233ddb8797b09f1d", "Url": "https://api.github.com/repos/vidklopcic/AirSloveniaAirPollutionApp", "Date": "2016-04-05T22:49:10Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.size()) > 1) { tmp = this.get(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7934/buggy-version/src.main.java.ru.spbstu.student.treap.TreapMap.java", "BodyUseAPI": [], "Fixed commit": "94b510041987689478c9fb438463425ac410c085", "Url": "https://api.github.com/repos/iOctav/TreapMap", "Date": "2016-09-20T03:31:57Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.selfequalsthis.grubsplugin.modules.defendtheshed.GrubsDefendShed.gameMinutesRemaining) > 0) { for (org.bukkit.entity.Player p : com.selfequalsthis.grubsplugin.modules.defendtheshed.GrubsDefendShed.playerList) { com.selfequalsthis.grubsplugin.utils.GrubsMessager.sendMessage(p, GrubsMessager.MessageLevel.MONITOR, ((\"\" + (com.selfequalsthis.grubsplugin.modules.defendtheshed.GrubsDefendShed.gameMinutesRemaining)) + \" minutes remaining.\")); } (com.selfequalsthis.grubsplugin.modules.defendtheshed.GrubsDefendShed.gameMinutesRemaining)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/638/buggy-version/src.com.selfequalsthis.grubsplugin.modules.defendtheshed.GrubsDefendShed.java", "BodyUseAPI": ["com.selfequalsthis.grubsplugin.utils.GrubsMessager.sendMessage(org.bukkit.entity.Player,GrubsMessager.MessageLevel.MONITOR,java.lang.String)"], "Fixed commit": "d5e482a6efc2963a449e24a8335bbc703b46dc28", "Url": "https://api.github.com/repos/eitanmk/GrubsPlugin", "Date": "2014-08-13T17:08:32Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.lang.Boolean.getBoolean(\"skipJavaCompilerService\"))) { javax.tools.JavaCompiler javaCompiler = org.codehaus.commons.compiler.jdk.CompilerUtil.getJavaCompilerService(); if (javaCompiler != null) return javaCompiler; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1919/buggy-version/src.main.java.org.codehaus.commons.compiler.jdk.CompilerUtil.java", "BodyUseAPI": [], "Fixed commit": "6cd1a55505fcbe86ee713eb249dff5b68e11e69d", "Url": "https://api.github.com/repos/igor-suhorukov/janino-commons-compiler-ecj", "Date": "2015-12-21T21:41:55Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(table.isDisposed())) table.redraw();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3962/buggy-version/RelUI.src.org.reldb.dbrowser.ui.content.rel.var.RelvarEditor.java", "BodyUseAPI": ["org.eclipse.nebula.widgets.nattable.NatTable.redraw()"], "Fixed commit": "161685e8cb149204ce45f6869b6d1e89efbe1155", "Url": "https://api.github.com/repos/DaveVoorhis/Rel", "Date": "2015-08-11T11:21:37Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["soot.jimple.toolkits.ide.icfg.AbstractJimpleBasedICFG.getOrCreateUnitGraph(soot.Body)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (unitGraph == null) return new java.util.ArrayList<soot.Unit>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5746/buggy-version/src.soot.jimple.toolkits.ide.icfg.AbstractJimpleBasedICFG.java", "BodyUseAPI": [], "Fixed commit": "e37252b14162fa885ea4399691da790fc3c04e38", "Url": "https://api.github.com/repos/xph906/SootNew", "Date": "2017-03-30T16:08:26Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSounds) == null) currentSounds = new java.util.ArrayList<engine.sound.Sound>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8995/buggy-version/src.engine.entity.Entity.java", "BodyUseAPI": [], "Fixed commit": "ce4a4586b5b9f743f1ab9d40152778985ac87756", "Url": "https://api.github.com/repos/iebaker/game-final-project", "Date": "2013-12-11T05:03:46Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (maps.doTheAreaGoOut(x, y)) { errorMessage.setText(\"You went out of the area!\"); }else { maps.coloring(x, y, 1, CellType.GRASS, IDs); (IDs)++; errorMessage.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3589/buggy-version/src.main.java.com.mycompany.agriculture.EditorController.java", "BodyUseAPI": ["model.TheMap.coloring(int,int,int,CellType.GRASS,int)"], "Fixed commit": "e3948d0fbd0a9b51a5a4247a225c8ef480d825dd", "Url": "https://api.github.com/repos/Sleis/MyThesis", "Date": "2017-11-03T23:26:52Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scanSketch) != null) { scanSketch.destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1964/buggy-version/src.appInterface.MainInterface.java", "BodyUseAPI": [], "Fixed commit": "37bb84e960222b16daf9b9cea7f7c7f84dfbec96", "Url": "https://api.github.com/repos/alejandromm90/RoboticArmGUI", "Date": "2014-05-05T17:29:10Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sketchDrawing) != null) { sketchDrawing.destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1964/buggy-version/src.appInterface.MainInterface.java", "BodyUseAPI": [], "Fixed commit": "37bb84e960222b16daf9b9cea7f7c7f84dfbec96", "Url": "https://api.github.com/repos/alejandromm90/RoboticArmGUI", "Date": "2014-05-05T17:29:10Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mActivity) == activity) { if (savedInstanceState != null) { if (savedInstanceState.containsKey(com.longway.framework.core.photo.PhotoManager.EXTRA_CAMERA_OUT_PATH)) { mOutPath = ((java.io.File) (savedInstanceState.getSerializable(com.longway.framework.core.photo.PhotoManager.EXTRA_CAMERA_OUT_PATH))); } if (savedInstanceState.containsKey(com.longway.framework.core.photo.PhotoManager.EXTRA_CROP_TEMP_PATH)) { mCropTempPath = ((java.io.File) (savedInstanceState.getSerializable(com.longway.framework.core.photo.PhotoManager.EXTRA_CROP_TEMP_PATH))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1655/buggy-version/App-Framework.sdk.src.main.java.com.longway.framework.core.photo.PhotoManager.java", "BodyUseAPI": [], "Fixed commit": "29fa77803875cb1d2d835957d1df4a2f2a74d6db", "Url": "https://api.github.com/repos/jacklongway/LiteSDK", "Date": "2016-07-30T10:08:23Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pathArray) != null) pathArray.remove(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1011/buggy-version/src.entity.mobs.ai.components.Mover.java", "BodyUseAPI": [], "Fixed commit": "20165b1a261a4d538691585a6de8c247b57217b7", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-04-09T14:30:24Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (bitmaps == null) { throw new java.lang.IllegalArgumentException(\"bitmaps must not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2879/buggy-version/slicer.src.main.java.org.reprap.geometry.Slice.java", "BodyUseAPI": [], "Fixed commit": "40e0090e4037d9eed5c5d8c917d3feec56c321fe", "Url": "https://api.github.com/repos/holgero/RepRapProSlicer", "Date": "2013-05-20T11:20:59Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pl.poznan.put.structure.secondary.formats.Ct.LOGGER.isTraceEnabled()) { pl.poznan.put.structure.secondary.formats.Ct.LOGGER.trace((\"CT to be validated:\\n\" + (toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1735/buggy-version/src.main.java.pl.poznan.put.structure.secondary.formats.Ct.java", "BodyUseAPI": ["org.slf4j.Logger.trace(java.lang.String)"], "Fixed commit": "6de97488407522a6ef68033cd37b29cf834403f4", "Url": "https://api.github.com/repos/tzok/BioCommons", "Date": "2015-08-25T08:29:29Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["build.getWorkspace().child(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (f.exists()) { s = hudson.plugins.parameterizedtrigger.ParameterizedTriggerUtils.readFileToString(f, getEncoding()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1752/buggy-version/src.main.java.hudson.plugins.parameterizedtrigger.FileBuildParameters.java", "BodyUseAPI": ["hudson.plugins.parameterizedtrigger.ParameterizedTriggerUtils.readFileToString(hudson.FilePath,java.lang.String)"], "Fixed commit": "ed34853248e8561ffb403a016b4764986e412742", "Url": "https://api.github.com/repos/olivergondza/parameterized-trigger-plugin", "Date": "2015-06-19T18:06:45Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (c == 0) { return -16777216; }else { red = java.lang.Math.max(0, java.lang.Math.min(255, (red / c))); green = java.lang.Math.max(0, java.lang.Math.min(255, (green / c))); blue = java.lang.Math.max(0, java.lang.Math.min(255, (blue / c))); return (((255 << 24) | (red << 16)) | (green << 8)) | blue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4392/buggy-version/library.src.main.java.com.github.sumimakito.awesomeqr.AwesomeQRCode.java", "BodyUseAPI": ["java.lang.Math.max(int,int)", "java.lang.Math.min(int,int)", "java.lang.Math.max(int,int)", "java.lang.Math.max(int,int)", "java.lang.Math.min(int,int)", "java.lang.Math.min(int,int)"], "Fixed commit": "cef384468a7fc0c075c2ef748252f86f03041e70", "Url": "https://api.github.com/repos/SumiMakito/AwesomeQRCode", "Date": "2017-08-25T15:45:05Z"},
{"Line": "=>535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(view.isMainView())) { graphStore.viewStore.checkViewExist(((org.gephi.graph.store.GraphViewImpl) (view))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1666/buggy-version/store.src.main.java.org.gephi.graph.store.ElementImpl.java", "BodyUseAPI": [], "Fixed commit": "b65dc30389eee1402c7eb92f7a57858b9cfd5de7", "Url": "https://api.github.com/repos/gephi/graphstore", "Date": "2015-08-29T21:17:11Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (orig >= 100) { p.sendMessage(((((((org.bukkit.ChatColor.DARK_PURPLE) + \"Your jetpack already has \") + (org.bukkit.ChatColor.GREEN)) + str) + (org.bukkit.ChatColor.DARK_PURPLE)) + \" fuel!\")); }else { if ((p.getInventory().getItemInHand().getAmount()) > 1) { p.getInventory().getItemInHand().setAmount(((p.getInventory().getItemInHand().getAmount()) - 1)); }else { p.getInventory().remove(p.getInventory().getItemInHand()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3957/buggy-version/src.me.FluffyWolfers.Jet.JetListener.java", "BodyUseAPI": [], "Fixed commit": "f4d35bbceb26184605ee0b9cdfc23be375475137", "Url": "https://api.github.com/repos/FluffyWolfers/JetCraft", "Date": "2013-08-28T03:21:41Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.maxmind.geoip.LookupService.getLocation(java.net.InetAddress)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (loc == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5275/buggy-version/araqne-geoip.src.main.java.org.araqne.geoip.impl.GeoIpServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "261535b348d672cb410fe3261237accf302ea661", "Url": "https://api.github.com/repos/araqne/geoip", "Date": "2015-03-04T07:43:23Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pPlayFlag) play(); else prepare();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/843/buggy-version/app.src.main.java.net.classicgarage.truerandommusicplayer.service.MusicService.java", "BodyUseAPI": [], "Fixed commit": "e6abd97072710076ded0735fe49a121cb0f4b11e", "Url": "https://api.github.com/repos/Leighton070103/TrueRandomMusicPlayer", "Date": "2017-06-20T23:05:39Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((course) != null) course.render(r);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1229/buggy-version/src.game.Game.java", "BodyUseAPI": [], "Fixed commit": "5d5d9dccabe9d298544ce517f248415aa210e1b5", "Url": "https://api.github.com/repos/moherren/Tropical-Put-Put", "Date": "2016-04-02T14:30:28Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (intersection < 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3083/buggy-version/disambiguation-author.disambiguation-author-logic.src.main.java.pl.edu.icm.coansys.disambiguation.author.features.disambiguators.CoAuthorsSnameDisambiguatorFullList.java", "BodyUseAPI": [], "Fixed commit": "9cc64a9e27145a6a6960c4f8fe6464115557b891", "Url": "https://api.github.com/repos/pdendek/CoAnSys", "Date": "2014-01-02T16:22:47Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(graphFile.exists())) { graphFile.createNewFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2203/buggy-version/src.main.java.onefengma.demo.rx.MetaDataFetcher.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "1c98059d922825ec2c04500eb91db366c5d3110d", "Url": "https://api.github.com/repos/chufengma/b2b", "Date": "2016-08-08T02:01:38Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (contentType != null) headers.put(\"Content-Type\", contentType);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4474/buggy-version/jswerve-server.src.main.java.com.tbodt.jswerve.Response.java", "BodyUseAPI": [], "Fixed commit": "65f0aad32604ee40a7ba8206874df71a40414b42", "Url": "https://api.github.com/repos/tbodt/jswerve", "Date": "2014-09-08T22:50:30Z"},
{"Line": "=>782", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (aElementInfo[0].equals(\"new\")) bNewDataparam = true; else if ((aElementInfo.length) == 2) { if (aElementInfo[0].equals(\"dataparam\")) strDataParamFile = aElementInfo[1]; else java.lang.System.out.println((\"Warning: Unknown REST param: \" + strParam)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8035/buggy-version/Java.AutomationToolbox.src.ToolboxHTTPServer.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "0df27104448ca87014e23eff65fb891d2667c960", "Url": "https://api.github.com/repos/tskotz/Brickyard", "Date": "2015-05-29T05:50:47Z"},
{"Line": "=>800", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bNewDataparam) hmData = AutomationToolbox.src.TestEditorWindow._createNewHTML(this.mstrWebServerURL); else hmData = AutomationToolbox.src.TestEditorWindow._createHTML(fDataparamterFile, this.mstrWebServerURL);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8035/buggy-version/Java.AutomationToolbox.src.ToolboxHTTPServer.java", "BodyUseAPI": [], "Fixed commit": "0df27104448ca87014e23eff65fb891d2667c960", "Url": "https://api.github.com/repos/tskotz/Brickyard", "Date": "2015-05-29T05:50:47Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((annotationIdSet.size()) < (annotationIDs.length)) { org.ut.biolab.medsavant.server.serverapi.ProjectManager.LOG.error((\"ERROR: Ignoring duplicate annotation ids in list \" + (org.apache.commons.lang3.StringUtils.join(annotationIDs, \",\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/9145/buggy-version/MedSavantServerEngine.src.main.java.org.ut.biolab.medsavant.server.serverapi.ProjectManager.java", "BodyUseAPI": ["org.apache.commons.lang3.StringUtils.join(int[],java.lang.String)", "org.apache.commons.logging.Log.error((\"ERROR: Ignoring duplicate annotation ids in list \" + (org.apache.commons.lang3.StringUtils.join(annotationIDs, \",\"))))"], "Fixed commit": "803d04ceb82c85b6f0c68da8257be41f6526448e", "Url": "https://api.github.com/repos/compbio-UofT/medsavant", "Date": "2014-03-27T17:48:32Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (outputSet) { if (outputPath.equals(sketchPath)) { complainAndQuit(\"The sketch path and output path cannot be identical.\", false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6496/buggy-version/app.src.processing.mode.java.Commander.java", "BodyUseAPI": [], "Fixed commit": "c5c3013105ec2c328cf55758e8a7b46f745480c9", "Url": "https://api.github.com/repos/transfluxus/processing", "Date": "2013-06-07T20:06:06Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.talend.component.core.utils.ComponentsUtils.getCurrentComponentProperties(org.talend.components.api.properties.ComponentProperties,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currentComponentProperties == null) { if (paramName.startsWith(componentProperties.getName())) { paramName = org.talend.component.core.utils.ComponentsUtils.getPropertyName(paramName); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7009/buggy-version/main.plugins.org.talend.component.core.src.main.java.org.talend.component.core.model.GenericElementParameter.java", "BodyUseAPI": [], "Fixed commit": "07ee421c185b01f28984f05729bbbd7fa8599877", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2015-12-02T02:53:15Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Collection<java.lang.String>.toArray(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((choices.length) == 1) { if ((result.contains(\"(\")) && (result.contains(\")\"))) { result = result.substring(((result.indexOf('(')) + 1), result.indexOf(')')); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5834/buggy-version/src.com.chrisfolger.needsmoredojo.intellij.configurable.DojoSettingsConfigurable.java", "BodyUseAPI": [], "Fixed commit": "0a6467875c74d7f33668b064dd04fc2e2844a0fe", "Url": "https://api.github.com/repos/cefolger/needsmoredojo", "Date": "2013-08-24T16:01:58Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(needZip())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8811/buggy-version/jnode-core.src.jnode.logger.Redirector.java", "BodyUseAPI": [], "Fixed commit": "c56eaa04a1654845a3ce57a5bcd1db780d030925", "Url": "https://api.github.com/repos/kreon/jnode", "Date": "2014-02-09T16:42:47Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event_summaries) != null) { for (com.appdynamics.snmp.Event_Summary summary : event_summaries) { summaries += (summary.EVENT_SUMMARY_STRING) + \". \"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5126/buggy-version/src.main.java.com.appdynamics.snmp.SNMPTrapSender.java", "BodyUseAPI": [], "Fixed commit": "c7f0c4c69582dcda3067409e339e00ffc310298d", "Url": "https://api.github.com/repos/Appdynamics/snmptrap-alerting-extension", "Date": "2014-08-21T17:14:05Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((field.get(snmpData)) != null) { java.lang.Object snmpVal = new org.snmp4j.smi.OctetString(field.get(snmpData).toString()); if (!((snmpVal.equals(\" \")) || (snmpVal.equals(\"\")))) { pdu.add(new org.snmp4j.smi.VariableBinding(new org.snmp4j.smi.OID(lookup.getOID(field.getName())), new org.snmp4j.smi.OctetString(snmpVal.toString()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5126/buggy-version/src.main.java.com.appdynamics.snmp.SNMPTrapSender.java", "BodyUseAPI": ["java.lang.reflect.Field.getName()", "org.snmp4j.PDU.add(org.snmp4j.smi.VariableBinding)", "java.lang.reflect.Field.get(com.appdynamics.snmp.type.ADSnmpData)", "java.lang.Object.toString()", "com.appdynamics.Lookup.getOID(java.lang.String)"], "Fixed commit": "c7f0c4c69582dcda3067409e339e00ffc310298d", "Url": "https://api.github.com/repos/Appdynamics/snmptrap-alerting-extension", "Date": "2014-08-21T17:14:05Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event_types) != null) { for (com.appdynamics.snmp.Event_Type type : event_types) { types += (type.EVENT_TYPE) + \" \"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5126/buggy-version/src.main.java.com.appdynamics.snmp.SNMPTrapSender.java", "BodyUseAPI": [], "Fixed commit": "c7f0c4c69582dcda3067409e339e00ffc310298d", "Url": "https://api.github.com/repos/Appdynamics/snmptrap-alerting-extension", "Date": "2014-08-21T17:14:05Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((field.getName()) != null) && ((field.get(snmpData)) != null)) { com.appdynamics.snmp.SNMPTrapSender.logInfo((((field.getName()) + \": \") + (field.get(snmpData).toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5126/buggy-version/src.main.java.com.appdynamics.snmp.SNMPTrapSender.java", "BodyUseAPI": ["com.appdynamics.snmp.SNMPTrapSender.logInfo((((field.getName()) + \": \") + (field.get(snmpData).toString())))", "java.lang.reflect.Field.get(com.appdynamics.snmp.type.ADSnmpData)", "java.lang.reflect.Field.getName()", "java.lang.Object.toString()"], "Fixed commit": "c7f0c4c69582dcda3067409e339e00ffc310298d", "Url": "https://api.github.com/repos/Appdynamics/snmptrap-alerting-extension", "Date": "2014-08-21T17:14:05Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Pad.Type.CONNECTOR) == pad) { return com.mynetpcb.gerber.attribute.AbstractAttribute.Type.ComponentPad; }else { throw new java.lang.IllegalStateException((\"Unknown pad:\" + pad)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5707/buggy-version/gerber.src.com.mynetpcb.gerber.attribute.AbstractAttribute.java", "BodyUseAPI": [], "Fixed commit": "dee1c60bda8fac27dff5ec7bf5ddf3a7acf66568", "Url": "https://api.github.com/repos/sergei-iliev/myNetPCB", "Date": "2017-10-29T05:48:28Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dirtyState_.getValue()) endDebugHighlighting();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1967/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.source.editors.text.TextEditingTarget.java", "BodyUseAPI": [], "Fixed commit": "e275d1fc363d47bb166b58a5244242c020c41da2", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2013-09-19T15:33:44Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.smartdevicelink.api.SdlApplication.RPCNotificationListenerRecord>.indexOf(com.smartdevicelink.api.SdlApplication.RPCNotificationListenerRecord)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (listenerIndex >= 0) listenerRecordList.remove(listenerIndex).isValid = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7124/buggy-version/sdl_android_lib.src.com.smartdevicelink.api.SdlApplication.java", "BodyUseAPI": ["java.util.List<com.smartdevicelink.api.SdlApplication.RPCNotificationListenerRecord>.remove(int)"], "Fixed commit": "74b24e1f22bb8124b619464c11ec92bf4567bedb", "Url": "https://api.github.com/repos/FordDev/sdl_android", "Date": "2017-03-08T17:05:24Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (append) { openOptions.add(java.nio.file.StandardOpenOption.APPEND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1213/buggy-version/src.main.java.com.dotc.nova.filesystem.Filesystem.java", "BodyUseAPI": [], "Fixed commit": "a5089075e2e9bc2a1b955d8c17dfb0f0f46b080b", "Url": "https://api.github.com/repos/oli-d/nova", "Date": "2013-08-21T13:26:13Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (0 == (map.size())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6688/buggy-version/client.src.main.java.de.zib.vold.client.VolDClient.java", "BodyUseAPI": [], "Fixed commit": "bb512111faeef9679a662190826b12691cbcc739", "Url": "https://api.github.com/repos/zibhub/VolD", "Date": "2012-06-18T11:01:43Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (nodeSize != 0) { org.cytoscape.slimscape.internal.CyNetwork network = manager.getCurrentNetwork(); java.util.List<org.cytoscape.slimscape.internal.CyNode> nodes = org.cytoscape.slimscape.internal.CyTableUtil.getNodesInState(network, \"selected\", true); java.util.Map<java.lang.String, org.cytoscape.slimscape.internal.CyNode> nodeIds = new java.util.HashMap<java.lang.String, org.cytoscape.slimscape.internal.CyNode>(); for (org.cytoscape.slimscape.internal.CyNode node : nodes) { java.lang.String name = network.getRow(node).get(CyNetwork.NAME, java.lang.String.class); if (!(nodeIds.containsKey(name))) { nodeIds.put(name, node); } } java.util.List<java.lang.String> occ = new java.util.ArrayList<java.lang.String>(); for (java.lang.String occNode : occNodes) { java.lang.String id = occNode.split(\"_\")[3]; occ.add(id); } SLiMNodeStyle(occ, nodeIds, manager, visualMappingManager); }else { org.cytoscape.slimscape.internal.CyNetwork newNetwork = networkFactory.createNetwork(); newNetwork.getRow(newNetwork).set(CyNetwork.NAME, \"SLiMOutput\"); networkManager.addNetwork(newNetwork); java.util.Map<java.lang.String, org.cytoscape.slimscape.internal.CyNode> nodeIds = new java.util.HashMap<java.lang.String, org.cytoscape.slimscape.internal.CyNode>(); try { addNodes(uniprotIDs, nodeIds, newNetwork, networkViewManager, manager); SLiMNodeStyle(occNodes, nodeIds, manager, visualMappingManager); addUpcConnections(upc, nodeIds, newNetwork); networkManager.addNetwork(newNetwork); } catch (java.lang.Exception ex) { javax.swing.JOptionPane.showMessageDialog(null, ex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6237/buggy-version/src.main.java.org.cytoscape.slimscape.internal.AlterGraph.java", "BodyUseAPI": [], "Fixed commit": "38433216a162f2596af635af8396b9b24eb68083", "Url": "https://api.github.com/repos/passeridae/SLiMscape", "Date": "2015-03-20T01:37:06Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getItem(position).getTitle().length()) > 21) { title.setText(((java.lang.String.copyValueOf(getItem(position).getTitle().toCharArray(), 0, 18)) + \"...\")); }else { title.setText(getItem(position).getTitle()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2565/buggy-version/src.com.flyerbox.logic.CouponAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(((java.lang.String.copyValueOf(getItem(position).getTitle().toCharArray(), 0, 18)) + \"...\"))", "getItem(position).getTitle().toCharArray()", "com.flyerbox.logic.CouponAdapter.getItem(int)", "com.flyerbox.logic.Coupon.getTitle()", "com.flyerbox.logic.CouponAdapter.getItem(int)", "android.widget.TextView.setText(getItem(position).getTitle())", "com.flyerbox.logic.Coupon.getTitle()", "java.lang.String.copyValueOf(getItem(position).getTitle().toCharArray(),int,int)"], "Fixed commit": "a63f0f69763f3e402b899cd4dc2de0d80d69a29d", "Url": "https://api.github.com/repos/k2lhu/FlyerBoxClient", "Date": "2014-12-10T18:37:47Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((callback) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/9233/buggy-version/lock.src.main.java.com.auth0.android.lock.Lock.java", "BodyUseAPI": [], "Fixed commit": "cc5d9c52bb307a0551ff6cdeba6ec28bd3921f3b", "Url": "https://api.github.com/repos/auth0/Lock.Android", "Date": "2016-03-10T17:48:35Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((callback) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/9233/buggy-version/lock.src.main.java.com.auth0.android.lock.Lock.java", "BodyUseAPI": [], "Fixed commit": "cc5d9c52bb307a0551ff6cdeba6ec28bd3921f3b", "Url": "https://api.github.com/repos/auth0/Lock.Android", "Date": "2016-03-10T17:48:35Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Integer.parseInt(newS)) > 500) { e.doit = false; org.eclipse.swt.widgets.Display.getCurrent().beep(); }else if ((java.lang.Integer.parseInt(newS)) < 1) { e.doit = false; org.eclipse.swt.widgets.Display.getCurrent().beep(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4532/buggy-version/NodeAnimator.src.de.atlassoft.ui.RailSysComposite.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "731a32f6f983e226076aa1a46f7ac479f64affe0", "Url": "https://api.github.com/repos/ATLASsoft/SoPra", "Date": "2013-07-09T17:04:45Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((progressChangeListener) != null) { progressChangeListener.onProgressChange(progress); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5005/buggy-version/app.src.main.java.com.drizzle.progressview.ProgressView.java", "BodyUseAPI": [], "Fixed commit": "ebe4be7e9580fa1a22047cb179574e0aed64fd26", "Url": "https://api.github.com/repos/Drizzlezhang/ProgressView", "Date": "2016-01-28T03:34:37Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((me.greatman.Craftconomy.utils.DatabaseHandler.database.getType()) == (DatabaseType.SQLITE)) { try { result = me.greatman.Craftconomy.utils.DatabaseHandler.database.query(((\"PRAGMA table_info(\" + (Config.databaseCurrencyTable)) + \")\"), true); if (result != null) { while (result.next()) { if (updateCheck.containsKey(result.getString(\"name\"))) { updateCheck.put(result.getString(\"name\"), true); } } if (updateCheck.containsValue(false)) { me.greatman.Craftconomy.ILogger.info(((\"Updating \" + (Config.databaseCurrencyTable)) + \" table\")); if (!(updateCheck.get(\"plural\"))) { me.greatman.Craftconomy.utils.DatabaseHandler.database.query(((\"ALTER TABLE \" + (Config.databaseCurrencyTable)) + \" ADD COLUMN plural VARCHAR(30)\"), false); me.greatman.Craftconomy.ILogger.info(((\"Column plural added in \" + (Config.databaseCurrencyTable)) + \" table\")); } if (!(updateCheck.get(\"minor\"))) { me.greatman.Craftconomy.utils.DatabaseHandler.database.query(((\"ALTER TABLE \" + (Config.databaseCurrencyTable)) + \" ADD COLUMN minor VARCHAR(30)\"), false); me.greatman.Craftconomy.ILogger.info(((\"Column minor added in \" + (Config.databaseCurrencyTable)) + \" table\")); } if (!(updateCheck.get(\"minorplural\"))) { me.greatman.Craftconomy.utils.DatabaseHandler.database.query(((\"ALTER TABLE \" + (Config.databaseCurrencyTable)) + \" ADD COLUMN minorplural VARCHAR(30)\"), false); me.greatman.Craftconomy.ILogger.info(((\"Column minorplural added in \" + (Config.databaseCurrencyTable)) + \" table\")); } } } } catch (java.sql.SQLException e) { e.printStackTrace(); } }else { try { result = me.greatman.Craftconomy.utils.DatabaseHandler.database.query((\"SHOW COLUMNS FROM \" + (Config.databaseCurrencyTable)), true); while (result.next()) { if (map.containsKey(result.getString(1))) { updateCheck.put(result.getString(1), true); } } if (map.containsValue(false)) { me.greatman.Craftconomy.ILogger.info(((\"Updating \" + (Config.databaseCurrencyTable)) + \" table\")); if (!(updateCheck.get(\"plural\"))) { me.greatman.Craftconomy.utils.DatabaseHandler.database.query(((\"ALTER TABLE \" + (Config.databaseCurrencyTable)) + \" ADD plural VARCHAR(30) NOT NULL\"), false); me.greatman.Craftconomy.ILogger.info(((\"Column plural added in \" + (Config.databaseCurrencyTable)) + \" table\")); } if (!(updateCheck.get(\"minor\"))) { me.greatman.Craftconomy.utils.DatabaseHandler.database.query(((\"ALTER TABLE \" + (Config.databaseCurrencyTable)) + \" ADD minor VARCHAR(30) NOT NULL\"), false); me.greatman.Craftconomy.ILogger.info(((\"Column minor added in \" + (Config.databaseCurrencyTable)) + \" table\")); } if (!(updateCheck.get(\"minorplural\"))) { me.greatman.Craftconomy.utils.DatabaseHandler.database.query(((\"ALTER TABLE \" + (Config.databaseCurrencyTable)) + \" ADD minorplural VARCHAR(30) NOT NULL\"), false); me.greatman.Craftconomy.ILogger.info(((\"Column minorplural added in \" + (Config.databaseCurrencyTable)) + \" table\")); } } } catch (java.sql.SQLException e) { e.printStackTrace(); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2664/buggy-version/src.me.greatman.Craftconomy.utils.DatabaseHandler.java", "BodyUseAPI": ["me.greatman.Craftconomy.utils.SQLLibrary.query(((\"ALTER TABLE \" + (Config.databaseCurrencyTable)) + \" ADD COLUMN minorplural VARCHAR(30)\"),boolean)", "me.greatman.Craftconomy.utils.SQLLibrary.query(((\"PRAGMA table_info(\" + (Config.databaseCurrencyTable)) + \")\"),boolean)", "me.greatman.Craftconomy.utils.SQLLibrary.query(((\"ALTER TABLE \" + (Config.databaseCurrencyTable)) + \" ADD COLUMN plural VARCHAR(30)\"),boolean)", "me.greatman.Craftconomy.utils.SQLLibrary.query((\"SHOW COLUMNS FROM \" + (Config.databaseCurrencyTable)),boolean)", "me.greatman.Craftconomy.utils.SQLLibrary.query(((\"ALTER TABLE \" + (Config.databaseCurrencyTable)) + \" ADD minor VARCHAR(30) NOT NULL\"),boolean)", "me.greatman.Craftconomy.utils.SQLLibrary.query(((\"ALTER TABLE \" + (Config.databaseCurrencyTable)) + \" ADD plural VARCHAR(30) NOT NULL\"),boolean)", "me.greatman.Craftconomy.utils.SQLLibrary.query(((\"ALTER TABLE \" + (Config.databaseCurrencyTable)) + \" ADD minorplural VARCHAR(30) NOT NULL\"),boolean)", "me.greatman.Craftconomy.utils.SQLLibrary.query(((\"ALTER TABLE \" + (Config.databaseCurrencyTable)) + \" ADD COLUMN minor VARCHAR(30)\"),boolean)"], "Fixed commit": "5d1b9cf5aefe55ed19922e86efdfeffba67ca497", "Url": "https://api.github.com/repos/greatman/Craftconomy", "Date": "2012-03-13T04:02:04Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSharedPreferences(Define.REF_KEY, Context.MODE_PRIVATE).getString(Define.BACKUP_PATH,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (backupFilePath.isEmpty()) { backupFilePath = ((android.os.Environment.getExternalStorageDirectory().getAbsolutePath()) + (com.ltbaogt.vocareminder.vocareminder.activity.MainActivity.BACKUP_FOLDER)) + (com.ltbaogt.vocareminder.vocareminder.activity.MainActivity.BACKUP_FILE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4122/buggy-version/02_Source.VocaReminder.app.src.main.java.com.ltbaogt.vocareminder.vocareminder.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "75b3cff0be9eaed8099d71f4c32bde4f44db77b5", "Url": "https://api.github.com/repos/ltbaogt/ltbaogtrepo", "Date": "2016-09-18T09:09:40Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.group(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((sequence != null) && (sequence.matches(\"[0-9]+x[0-9]+\"))) { item.setSeason(java.lang.Integer.parseInt(sequence.split(\"x\")[0])); item.setEpisode(java.lang.Integer.parseInt(sequence.split(\"x\")[1])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2940/buggy-version/src.main.java.hs.mediasystem.fs.EpisodeDecoder.java", "BodyUseAPI": ["hs.mediasystem.db.LocalItem.setSeason(int)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)", "hs.mediasystem.db.LocalItem.setEpisode(int)"], "Fixed commit": "fb58ddce58a861b77a216c095f80a90061cd6794", "Url": "https://api.github.com/repos/hjohn/MediaSystem", "Date": "2011-09-28T06:42:21Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.COMMON_CONFIG) { mCalcMonitor.addCalled(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7053/buggy-version/common.src.main.java.com.github.piasy.okbuck.example.common.Calc.java", "BodyUseAPI": [], "Fixed commit": "6b60d3d9bc019811dc367717d13ca5d3f6db713b", "Url": "https://api.github.com/repos/uber/okbuck", "Date": "2015-10-14T06:49:23Z"},
{"Line": "=>729", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.governance.api.util.GovernanceUtils.retrieveGovernanceArtifactByPath(org.wso2.carbon.registry.core.Registry,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (governanceArtifact != null) { governanceArtifacts.add(governanceArtifact); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1345/buggy-version/components.governance.org.wso2.carbon.governance.api.src.main.java.org.wso2.carbon.governance.api.common.dataobjects.GovernanceArtifactImpl.java", "BodyUseAPI": ["java.util.List<org.wso2.carbon.governance.api.common.dataobjects.GovernanceArtifact>.add(org.wso2.carbon.governance.api.common.dataobjects.GovernanceArtifact)"], "Fixed commit": "583076e5f082152d2d7b25024d3a7303a6a39647", "Url": "https://api.github.com/repos/denuwanthi/carbon-governance", "Date": "2016-03-04T10:40:31Z"},
{"Line": "=>764", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.governance.api.util.GovernanceUtils.retrieveGovernanceArtifactByPath(org.wso2.carbon.registry.core.Registry,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (governanceArtifact != null) { governanceArtifacts.add(governanceArtifact); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1345/buggy-version/components.governance.org.wso2.carbon.governance.api.src.main.java.org.wso2.carbon.governance.api.common.dataobjects.GovernanceArtifactImpl.java", "BodyUseAPI": ["java.util.List<org.wso2.carbon.governance.api.common.dataobjects.GovernanceArtifact>.add(org.wso2.carbon.governance.api.common.dataobjects.GovernanceArtifact)"], "Fixed commit": "583076e5f082152d2d7b25024d3a7303a6a39647", "Url": "https://api.github.com/repos/denuwanthi/carbon-governance", "Date": "2016-03-04T10:40:31Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wasLaunchedFromRecents()) { initFragments(null); }else { initFragments(extras); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6903/buggy-version/app.src.main.java.org.stepic.droid.ui.activities.MainFeedActivity.java", "BodyUseAPI": [], "Fixed commit": "7a0fc55179b30ece389ad03883c31e6d8ec42ede", "Url": "https://api.github.com/repos/StepicOrg/stepik-android", "Date": "2016-12-23T17:31:28Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nodes) == null) { return rover.shared.reasoning.ontology.OntologyConcept.all_nodes_are_scanned; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8239/buggy-version/rover.rover.src.main.java.rover.shared.reasoning.beliefs.SearchNodes.java", "BodyUseAPI": [], "Fixed commit": "6b25c2edcd38f39af361952a9cc01f3663a31fd0", "Url": "https://api.github.com/repos/rcabot/IA-AgentScape-Rover", "Date": "2016-11-08T13:51:39Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tiles) != null) tiles.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3566/buggy-version/src.main.java.com.creativemd.littletiles.common.structure.LittleStructure.java", "BodyUseAPI": [], "Fixed commit": "05baff5d69482dff4dc8f72b6757c316b362507e", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2017-07-25T15:03:02Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((p.getDistanceToEntity(mc.thePlayer)) <= (threshold)) || ((threshold) < 0)) { return p; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4339/buggy-version/es.blueberrypancak.module.Disconnect.java", "BodyUseAPI": [], "Fixed commit": "b715d307a96039ea8deb0414569ce690f94d750b", "Url": "https://api.github.com/repos/qubard/CubClient", "Date": "2016-07-09T06:15:04Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((lastSlot) == (-1)) || ((es.blueberrypancak.Client.getMinecraft().thePlayer.inventory.mainInventory[lastSlot]) == null)) { if ((java.lang.System.currentTimeMillis()) > (nextTick)) { onEnabled(); nextTick = (java.lang.System.currentTimeMillis()) + 1500; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4339/buggy-version/es.blueberrypancak.module.AutoFish.java", "BodyUseAPI": [], "Fixed commit": "b715d307a96039ea8deb0414569ce690f94d750b", "Url": "https://api.github.com/repos/qubard/CubClient", "Date": "2016-07-09T06:15:04Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newNetwork.getRow(newNode).get(CyNetwork.SELECTED, java.lang.Boolean.class)) == true) newNetwork.getRow(newNode).set(CyNetwork.SELECTED, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1236/buggy-version/cyni-impl.src.main.java.org.cytoscape.cyni.internal.inductionAlgorithms.HillClimbingAlgorithm.HillClimbingInductionTask.java", "BodyUseAPI": ["newNetwork.getRow(newNode).set(CyNetwork.SELECTED,boolean)", "org.cytoscape.cyni.internal.inductionAlgorithms.HillClimbingAlgorithm.HillClimbingInductionTask.getRow(org.cytoscape.model.CyNode)"], "Fixed commit": "6fa1605aa9e52ff053fc0e47d502649eb6f32d5c", "Url": "https://api.github.com/repos/schwikowskilab/cyniProject", "Date": "2014-04-10T14:19:33Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newNetwork.getRow(node1).get(CyNetwork.SELECTED, java.lang.Boolean.class)) == true) newNetwork.getRow(node1).set(CyNetwork.SELECTED, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1236/buggy-version/cyni-impl.src.main.java.org.cytoscape.cyni.internal.inductionAlgorithms.K2Algorithm.K2InductionTask.java", "BodyUseAPI": ["org.cytoscape.cyni.internal.inductionAlgorithms.K2Algorithm.K2InductionTask.getRow(org.cytoscape.model.CyNode)", "newNetwork.getRow(node1).set(CyNetwork.SELECTED,boolean)"], "Fixed commit": "6fa1605aa9e52ff053fc0e47d502649eb6f32d5c", "Url": "https://api.github.com/repos/schwikowskilab/cyniProject", "Date": "2014-04-10T14:19:33Z"},
{"Line": "=>3908", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (KEEP_VERSIONS) { vertexNotSeenBefore = updateVersion || (artifactProperties.isVersionUninitialized()); }else { vertexNotSeenBefore = artifactProperties.isVersionUninitialized(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7108/buggy-version/src.spade.reporter.Audit.java", "BodyUseAPI": [], "Fixed commit": "bd0b4a74feb73d9c88553e00777788bcb520607a", "Url": "https://api.github.com/repos/ashish-gehani/SPADE", "Date": "2017-03-30T19:29:19Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defaultText) == null) { defaultText = context.getText().getText(\"uploader-text\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5491/buggy-version/panda-gear.src.main.java.panda.mvc.view.tag.ui.Uploader.java", "BodyUseAPI": [], "Fixed commit": "4eb4b1f7c87756cf51428bf282a97b6a177d8855", "Url": "https://api.github.com/repos/pandafw/panda", "Date": "2017-03-16T04:47:38Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((arguments[i].getCategory()) != (org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector.Category.PRIMITIVE)) { throw new org.apache.hadoop.hive.ql.exec.UDFArgumentTypeException(i, ((\"A string argument was expected but an argument of type \" + (arguments[i].getTypeName())) + \" was given.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6206/buggy-version/GenericUDFTranslate.java", "BodyUseAPI": ["arguments[i].getTypeName()"], "Fixed commit": "0dccfabffacc47219ecae04a4c1fc8238ec4a04b", "Url": "https://api.github.com/repos/markgrover/hive-translate", "Date": "2012-06-04T04:53:35Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((FieldInfo.DocValuesType.NUMERIC) != docValuesType) { this.numericType = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/831/buggy-version/src.main.java.dk.statsbiblioteket.netark.dvenabler.DVConfig.java", "BodyUseAPI": [], "Fixed commit": "64e44a25685b8b6ea3bda33b30dccc7ca0517989", "Url": "https://api.github.com/repos/netarchivesuite/dvenabler", "Date": "2014-12-12T10:43:29Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (packet != null) { try { packetQueue.put(packet); } catch (java.lang.InterruptedException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/956/buggy-version/araqne-syslog.src.main.java.org.araqne.syslog.impl.SyslogReceiver.java", "BodyUseAPI": ["java.util.concurrent.ArrayBlockingQueue<java.net.DatagramPacket>.put(java.net.DatagramPacket)"], "Fixed commit": "79639e1c6924e50e695d6a99cec9f9aa90650097", "Url": "https://api.github.com/repos/araqne/syslog", "Date": "2013-06-20T06:43:52Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((split.length) != 4) throw new java.lang.NumberFormatException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3676/buggy-version/src.freenet.clients.http.geoip.IPConverter.java", "BodyUseAPI": [], "Fixed commit": "3e432aa7485f5aa7234e2515c394e25bb8e744a0", "Url": "https://api.github.com/repos/freenet/fred", "Date": "2011-05-31T21:36:57Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (connection.getAutoCommit()) { connection.setAutoCommit(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/254/buggy-version/src.main.java.org.bahmni.reports.model.AllDatasources.java", "BodyUseAPI": ["java.sql.Connection.setAutoCommit(boolean)"], "Fixed commit": "1b4baa17ef0c611d63aba8bc79777e83775b3cff", "Url": "https://api.github.com/repos/Bahmni/bahmni-reports", "Date": "2015-09-21T05:36:08Z"},
{"Line": "=>1591", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (min < 1) { throw new org.dasein.cloud.CloudException(org.dasein.cloud.CloudErrorType.CAPACITY, 413, \"Over Limit\", (ob.has(\"message\") ? ob.getString(\"message\") : \"Over Limit\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2953/buggy-version/src.main.java.org.dasein.cloud.openstack.nova.os.AbstractMethod.java", "BodyUseAPI": [], "Fixed commit": "c3556ed80bd6379e288df4f2def81389e10abff9", "Url": "https://api.github.com/repos/daniellemayne/dasein-cloud-openstack", "Date": "2013-11-12T19:22:10Z"},
{"Line": "=>1806", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (min < 1) { throw new org.dasein.cloud.CloudException(org.dasein.cloud.CloudErrorType.CAPACITY, 413, \"Over Limit\", (ob.has(\"message\") ? ob.getString(\"message\") : \"Over Limit\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2953/buggy-version/src.main.java.org.dasein.cloud.openstack.nova.os.AbstractMethod.java", "BodyUseAPI": [], "Fixed commit": "c3556ed80bd6379e288df4f2def81389e10abff9", "Url": "https://api.github.com/repos/daniellemayne/dasein-cloud-openstack", "Date": "2013-11-12T19:22:10Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.androidannotations.holder.EComponentWithViewSupportHolder.getOnViewChangedHasViewsParam()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (hasView.name().equals(\"hasViews\")) { findViewById = invoke(hasView, \"internalFindViewById\"); }else { findViewById = invoke(hasView, \"findViewById\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8577/buggy-version/AndroidAnnotations.androidannotations-core.androidannotations.src.main.java.org.androidannotations.holder.EComponentWithViewSupportHolder.java", "BodyUseAPI": ["org.androidannotations.holder.EComponentWithViewSupportHolder.invoke(com.helger.jcodemodel.JVar,java.lang.String)", "org.androidannotations.holder.EComponentWithViewSupportHolder.invoke(com.helger.jcodemodel.JVar,java.lang.String)"], "Fixed commit": "98070b3038142ca47675c118144f18e8f161c0d7", "Url": "https://api.github.com/repos/smaugho/androidannotations", "Date": "2017-08-11T22:19:01Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hasNullHierarchy && ((axis.getPositionCount()) > 0)) { for (org.olap4j.metadata.Member m : axis.getPositions().get(0).getMembers()) { hierarchies.add(m.getHierarchy()); } }else { hierarchies.addAll(axisHierarchies); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/604/buggy-version/saiku-core.saiku-service.src.main.java.org.saiku.service.olap.totals.AxisInfo.java", "BodyUseAPI": ["axis.getPositions().get(int)", "axis.getPositions().get(0).getMembers()", "org.olap4j.CellSetAxis.getPositions()"], "Fixed commit": "a92fbfd794714005a71ca8eb9d2631a3c9154a3e", "Url": "https://api.github.com/repos/pstoellberger/saiku", "Date": "2016-04-28T14:27:02Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_runnable) != null) _handler.postDelayed(_runnable, _time);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4022/buggy-version/library.src.main.java.nuesoft.helpdroid.util.ScreenLocker.java", "BodyUseAPI": [], "Fixed commit": "fe31c16dd08be5155b14f0a8804c7228eac3dc37", "Url": "https://api.github.com/repos/EhsanMashhadi/helpdroid", "Date": "2017-10-15T20:19:36Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_runnable) != null) _handler.removeCallbacks(_runnable);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4022/buggy-version/library.src.main.java.nuesoft.helpdroid.util.ScreenLocker.java", "BodyUseAPI": [], "Fixed commit": "fe31c16dd08be5155b14f0a8804c7228eac3dc37", "Url": "https://api.github.com/repos/EhsanMashhadi/helpdroid", "Date": "2017-10-15T20:19:36Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapter) != null) adapter.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3540/buggy-version/app.src.main.java.android.tnp.activities.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "565808320876945ef439e198725565e61122c0a9", "Url": "https://api.github.com/repos/ritikrishu/TNP", "Date": "2016-04-19T21:07:46Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((highestValue) == 0) { highestValue = 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2648/buggy-version/app.src.main.java.nyc.c4q.jonathancolon.inContaq.utlities.graphs.bargraphs.WordCountBarGraph.java", "BodyUseAPI": [], "Fixed commit": "0736e8659a325660ff9b07c460c94979951fab25", "Url": "https://api.github.com/repos/joncolon/inContaq", "Date": "2017-03-18T00:35:22Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.max(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (highestValue == 0) { highestValue = 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2648/buggy-version/app.src.main.java.nyc.c4q.jonathancolon.inContaq.utlities.graphs.linegraphs.MonthlyGraphHelper.java", "BodyUseAPI": [], "Fixed commit": "0736e8659a325660ff9b07c460c94979951fab25", "Url": "https://api.github.com/repos/joncolon/inContaq", "Date": "2017-03-18T00:35:22Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (command.getSecondWord().equals(\"everything\")) { }else { boolean works = player.pickUp(((com.bayviewglen.zork.Chest) (currentRoom.getInventory().getItem(command.getThirdWord()))).getInventory().removeItem(command.getSecondWord())); if (works) java.lang.System.out.println((\"You obtained: \" + (command.getSecondWord()))); else java.lang.System.out.println(\"You are already carrying too much\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7854/buggy-version/DictatorWars.src.com.bayviewglen.zork.Game.java", "BodyUseAPI": ["com.bayviewglen.zork.Command.getSecondWord()", "com.bayviewglen.zork.Command.getSecondWord()", "((com.bayviewglen.zork.Chest) (currentRoom.getInventory().getItem(command.getThirdWord()))).getInventory()", "com.bayviewglen.zork.Player.pickUp(((com.bayviewglen.zork.Chest) (currentRoom.getInventory().getItem(command.getThirdWord()))).getInventory().removeItem(command.getSecondWord()))", "com.bayviewglen.zork.Command.getThirdWord()", "currentRoom.getInventory().getItem(command.getThirdWord())", "((com.bayviewglen.zork.Chest) (currentRoom.getInventory().getItem(command.getThirdWord()))).getInventory().removeItem(command.getSecondWord())", "java.io.PrintStream.println((\"You obtained: \" + (command.getSecondWord())))"], "Fixed commit": "a65d544b682bb396b26186c2e2af3b86d4ef60d5", "Url": "https://api.github.com/repos/ajollymarlier/Zork", "Date": "2017-06-02T12:54:11Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (bjcpCategory == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1379/buggy-version/BrewShop.src.main.java.com.brew.brewshop.xml.BeerXMLReader.java", "BodyUseAPI": [], "Fixed commit": "2cf2e51b2995eea4deac89ddca6fffd58015ecce", "Url": "https://api.github.com/repos/edrews/BrewShopApp", "Date": "2014-12-02T04:05:11Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.xml.xpath.XPath.evaluate(java.lang.String,org.w3c.dom.Node,javax.xml.namespace.QName)", "com.brew.brewshop.storage.style.BjcpCategoryList.findByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((bjcpCategory == null) && (name.contains(\"&amp\"))) { bjcpCategory = mBjcpCategoryList.findByName(name.replace(\"&amp\", \"and\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1379/buggy-version/BrewShop.src.main.java.com.brew.brewshop.xml.BeerXMLReader.java", "BodyUseAPI": ["com.brew.brewshop.storage.style.BjcpCategoryList.findByName(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "2cf2e51b2995eea4deac89ddca6fffd58015ecce", "Url": "https://api.github.com/repos/edrews/BrewShopApp", "Date": "2014-12-02T04:05:11Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((category.findSubcategoryByName(name)) != null) { return category; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1379/buggy-version/BrewShop.src.main.java.com.brew.brewshop.storage.style.BjcpCategoryList.java", "BodyUseAPI": [], "Fixed commit": "2cf2e51b2995eea4deac89ddca6fffd58015ecce", "Url": "https://api.github.com/repos/edrews/BrewShopApp", "Date": "2014-12-02T04:05:11Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getArguments().getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (category == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4286/buggy-version/app.src.main.java.com.duy.pascal.frontend.code_sample.FragmentCodeSample.java", "BodyUseAPI": [], "Fixed commit": "2a40df63aa38cadbaa469af1b8ccc035606e9b14", "Url": "https://api.github.com/repos/tranleduy2000/pascalnide", "Date": "2017-05-05T06:10:21Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSubscriberMethods) == null) { m = null; }else { m = new java.util.HashSet<>(mSubscriberMethods); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5415/buggy-version/core.src.main.java.com.kk.bus.EventDeliverer.java", "BodyUseAPI": [], "Fixed commit": "0a5f8864ed0f6ea33fd512a104402c49e7d7ac9a", "Url": "https://api.github.com/repos/JirkaKrivanek/eventbus", "Date": "2015-02-11T23:50:25Z"},
{"Line": "=>1745", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url.startsWith(\"file\")) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2603/buggy-version/src.com.ichi2.anki.AbstractFlashcardViewer.java", "BodyUseAPI": [], "Fixed commit": "62cc0e49bb8787b5287a3d3abed64e0b9ef4166b", "Url": "https://api.github.com/repos/hssm/Anki-Android", "Date": "2014-07-21T13:03:24Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (param instanceof java.lang.Iterable) { jg.writeArrayFieldStart(entry.getKey()); for (java.lang.Object object : ((java.lang.Iterable) (param))) { org.nuxeo.ecm.automation.client.jaxrs.spi.JsonMarshalling.write(jg, object); } jg.writeEndArray(); }else { if (param != null) { org.nuxeo.ecm.automation.client.jaxrs.spi.JsonMarshaller<?> marshaller = org.nuxeo.ecm.automation.client.jaxrs.spi.JsonMarshalling.getMarshaller(param.getClass()); if (marshaller != null) { jg.writeFieldName(entry.getKey()); try { marshaller.write(jg, param); } catch (java.lang.UnsupportedOperationException e) { jg.writeObject(param); } }else { jg.writeFieldName(entry.getKey()); jg.writeObject(param); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5443/buggy-version/nuxeo-features.nuxeo-automation.nuxeo-automation-client.src.main.java.org.nuxeo.ecm.automation.client.jaxrs.spi.JsonMarshalling.java", "BodyUseAPI": ["java.lang.Object.getClass()", "org.codehaus.jackson.JsonGenerator.writeObject(java.lang.Object)", "org.nuxeo.ecm.automation.client.jaxrs.spi.JsonMarshaller<?>.write(org.codehaus.jackson.JsonGenerator,java.lang.Object)", "org.codehaus.jackson.JsonGenerator.writeObject(java.lang.Object)", "org.nuxeo.ecm.automation.client.jaxrs.spi.JsonMarshalling.getMarshaller(java.lang.Class<? extends java.lang.Object>)"], "Fixed commit": "e4e077779dbaa129b625a0bafd2e6b9f0d173230", "Url": "https://api.github.com/repos/nuxeo/nuxeo", "Date": "2015-07-23T14:05:05Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codehaus.jackson.JsonNode.traverse()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((valueParser.getCodec()) == null) { valueParser.setCodec(new org.codehaus.jackson.map.ObjectMapper()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5443/buggy-version/nuxeo-features.nuxeo-automation.nuxeo-automation-io.src.main.java.org.nuxeo.ecm.automation.io.services.codec.ObjectCodecService.java", "BodyUseAPI": ["org.codehaus.jackson.JsonParser.setCodec(org.codehaus.jackson.map.ObjectMapper)"], "Fixed commit": "e4e077779dbaa129b625a0bafd2e6b9f0d173230", "Url": "https://api.github.com/repos/nuxeo/nuxeo", "Date": "2015-07-23T14:05:05Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data1) != null) { savedInst = true; savedInstanceState.putInt(\"index\", index); savedInstanceState.putString(\"fqlQuery\", fqlQuery); savedInstanceState.putBoolean(\"savedInst\", savedInst); savedInstanceState.putString(\"data1\", data1.toString()); savedInstanceState.putString(\"ownerArray\", ownerArray.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2676/buggy-version/src.com.vidit.LogFragment.java", "BodyUseAPI": [], "Fixed commit": "e5bc2c6d22d9dc132c4a0860575b26d842e5c138", "Url": "https://api.github.com/repos/yogeshgupta/vidit", "Date": "2013-01-14T06:42:03Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (typedEvent.entity.worldObj.isRemote) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2175/buggy-version/src.main.java.airbreather.mods.pigmanure.PigUpdateEventHandler.java", "BodyUseAPI": [], "Fixed commit": "650f3cb6cbc2d870e9016b06aa9782c06a7e0f1f", "Url": "https://api.github.com/repos/airbreather/pig-manure-mod", "Date": "2015-03-21T10:42:50Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((commission_base) != null) { commBase = (commission_base) * (pct); }else { commBase = fee * (pct); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6775/buggy-version/Accounting.src.main.java.websays.accounting.Commission.java", "BodyUseAPI": [], "Fixed commit": "04818a65615b291b7b9666cba97425380c376762", "Url": "https://api.github.com/repos/hugozaragoza/SaaSMetrics4J", "Date": "2016-03-02T09:35:13Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((savedInstanceState != null) && ((savedInstanceState.getParcelable(org.mariotaku.twidere.activity.INTENT_KEY_USER)) != null)) { final org.mariotaku.twidere.model.ParcelableUser user = savedInstanceState.getParcelable(org.mariotaku.twidere.activity.INTENT_KEY_USER); displayUser(user); mEditName.setText(org.mariotaku.twidere.util.BundleAccessor.getString(savedInstanceState, org.mariotaku.twidere.activity.INTENT_KEY_NAME, user.name)); mEditLocation.setText(org.mariotaku.twidere.util.BundleAccessor.getString(savedInstanceState, org.mariotaku.twidere.activity.INTENT_KEY_LOCATION, user.location)); mEditDescription.setText(org.mariotaku.twidere.util.BundleAccessor.getString(savedInstanceState, org.mariotaku.twidere.activity.INTENT_KEY_DESCRIPTION, user.description_expanded)); mEditUrl.setText(org.mariotaku.twidere.util.BundleAccessor.getString(savedInstanceState, org.mariotaku.twidere.activity.INTENT_KEY_URL, user.url_expanded)); }else { getUserInfo(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7654/buggy-version/src.org.mariotaku.twidere.activity.EditUserProfileActivity.java", "BodyUseAPI": ["android.widget.EditText.setText(org.mariotaku.twidere.util.BundleAccessor.getString(savedInstanceState, org.mariotaku.twidere.activity.INTENT_KEY_DESCRIPTION, user.description_expanded))", "org.mariotaku.twidere.util.BundleAccessor.getString(android.os.Bundle,org.mariotaku.twidere.activity.INTENT_KEY_URL,user.url_expanded)", "android.widget.EditText.setText(org.mariotaku.twidere.util.BundleAccessor.getString(savedInstanceState, org.mariotaku.twidere.activity.INTENT_KEY_URL, user.url_expanded))", "org.mariotaku.twidere.util.BundleAccessor.getString(android.os.Bundle,org.mariotaku.twidere.activity.INTENT_KEY_DESCRIPTION,user.description_expanded)", "android.widget.EditText.setText(org.mariotaku.twidere.util.BundleAccessor.getString(savedInstanceState, org.mariotaku.twidere.activity.INTENT_KEY_NAME, user.name))", "org.mariotaku.twidere.util.BundleAccessor.getString(android.os.Bundle,org.mariotaku.twidere.activity.INTENT_KEY_NAME,user.name)", "org.mariotaku.twidere.util.BundleAccessor.getString(android.os.Bundle,org.mariotaku.twidere.activity.INTENT_KEY_LOCATION,user.location)", "android.os.Bundle.getParcelable(org.mariotaku.twidere.activity.INTENT_KEY_USER)", "android.widget.EditText.setText(org.mariotaku.twidere.util.BundleAccessor.getString(savedInstanceState, org.mariotaku.twidere.activity.INTENT_KEY_LOCATION, user.location))"], "Fixed commit": "d62f64dff52a09e7317f7378baf61c308cd27b8c", "Url": "https://api.github.com/repos/mariotaku/twidere", "Date": "2013-05-26T05:05:01Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (propertyValue != null) { historicFormPropertyEntity.setPropertyValue(propertyValue.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7058/buggy-version/engine.src.main.java.org.camunda.bpm.engine.impl.history.producer.DefaultHistoryEventProducer.java", "BodyUseAPI": ["org.camunda.bpm.engine.impl.history.event.HistoricFormPropertyEventEntity.setPropertyValue(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "4906e371aa0602ce9983483d2b86309609a2ef31", "Url": "https://api.github.com/repos/johnament/camunda-bpm-platform", "Date": "2014-10-27T17:26:16Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position == (-1)) { exhausted = true; }else { setMove(myBoard.getMaximumLegalDepth(), position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3630/buggy-version/MoveSet.java", "BodyUseAPI": ["SourceFiles.MoveSet.setMove(myBoard.getMaximumLegalDepth(),int)"], "Fixed commit": "d1ddec143e16f96eb61d828afa5ecd84f3ee1ffc", "Url": "https://api.github.com/repos/GenTelGuy/RecursiveMancala", "Date": "2015-02-28T20:40:07Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((com.tk_squared.varmint.TkkWebViewFragment) (fragment)).getWebview().canGoBack()) { ((com.tk_squared.varmint.TkkWebViewFragment) (fragment)).getWebview().goBack(); }else { ((com.tk_squared.varmint.TkkWebViewFragment) (fragment)).getWebview().clearCache(true); ((com.tk_squared.varmint.TkkWebViewFragment) (fragment)).getWebview().destroy(); if ((fm.getBackStackEntryCount()) > 1) { fm.popBackStack(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5252/buggy-version/app.src.main.java.com.tk_squared.varmint.TkkActivity.java", "BodyUseAPI": ["android.app.Fragment.getWebview()", "((com.tk_squared.varmint.TkkWebViewFragment) (fragment)).getWebview().destroy()", "((com.tk_squared.varmint.TkkWebViewFragment) (fragment)).getWebview().clearCache(boolean)", "android.app.Fragment.getWebview()", "((com.tk_squared.varmint.TkkWebViewFragment) (fragment)).getWebview().goBack()", "android.app.Fragment.getWebview()"], "Fixed commit": "04758e3e5432076e49afc560bbd8920b4139448c", "Url": "https://api.github.com/repos/frenzie24/Varmint", "Date": "2016-04-18T20:26:31Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id == 2130837604) result = ((float) (1.23)); else if (id == 2130837545) result = ((float) (1.23)); else result = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3101/buggy-version/SMMA.src.jp.ne.smma.EventCalendar.Custom.CalendarView.java", "BodyUseAPI": [], "Fixed commit": "845ed5eb6d4abed14c049a7b55ec9dafd1391181", "Url": "https://api.github.com/repos/NhamPhanDinh/smmatest", "Date": "2014-03-31T08:39:24Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (errorSeparationIndex == (-1)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4820/buggy-version/common.src.com.intellij.plugins.haxe.compilation.HaxeCompilerError.java", "BodyUseAPI": [], "Fixed commit": "740bfc099279f3e75c4d9566885fe55dd19f7989", "Url": "https://api.github.com/repos/TiVo/intellij-haxe", "Date": "2014-09-15T21:49:56Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<org.springfield.lou.model.ModelBindEvent>.pop()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((b.type) == (ModelBindEvent.PROPERTIES)) { deliverProperties(b.path, ((org.springfield.fs.FsPropertySet) (b.value))); }else if ((b.type) == (ModelBindEvent.NOTIFY)) { deliverNotify(b.path, ((org.springfield.fs.FsNode) (b.value))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1936/buggy-version/src.org.springfield.lou.model.ModelEventManager.java", "BodyUseAPI": ["org.springfield.lou.model.ModelEventManager.deliverNotify(b.path,((org.springfield.fs.FsNode) (b.value)))", "org.springfield.lou.model.ModelEventManager.deliverProperties(b.path,((org.springfield.fs.FsPropertySet) (b.value)))"], "Fixed commit": "75e18ebf687feddb21d58e899c06604b0b780cfa", "Url": "https://api.github.com/repos/Noterik/lou3", "Date": "2016-09-14T14:47:23Z"}]}
